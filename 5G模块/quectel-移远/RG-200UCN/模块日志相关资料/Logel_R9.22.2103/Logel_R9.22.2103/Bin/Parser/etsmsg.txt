
Begin Record, Fault Log
    ETS, CP Fault
    ETS, DSPM Fault
    ETS, DSPV Fault
    ETS, CP Exe Fault
    ETS, CP File Info
    ETS, CP Exception
    ETS, CP Fault Queue Data
    ETS, CP Fault Task Control Block
    ETS, CP Memory Exception
End

Begin Record, ETS Definition Version
    Project, CBP8
    Ets Version, 6.7.0
End

Begin GlobalVar, Only One Global Var Block
    GBL_PREV, default = 6
    GBL_FORCHTYPE, default = 0
    GBL_MFGID, default = VIA TeleCom
    GBL_MODEL, default = CBP8.2
    GBL_ASIC_TYPE, default = 6
    GBL_ASIC_VER, default = 1
    GBL_DSPM_PATCH_ID, default = 0
    GBL_DSPV_PATCH_ID, default = 0
    GBL_UIM_SUPPORTED, default = 0
    GBL_DATA_SERVICE_SUPPORTED, default = 0
    GBL_SCH_SUPPORTED, default = 0
    GBL_DIVERSITY_SUPPORTED, default = 0
    GBL_GPS_SUPPORTED, default = 0
    GBL_FSM_SUPPORTED, default = 0
    GBL_AUX_ADC_POLLING, default = 0
    GBL_DIGITAL_RXAGC_SUPPORTED, default = 0
    GBL_RF_OPTION, default = 0
    GBL_REF_FREQ, default = 0
    GBL_DOCHTYPE, default = 0
    GBL_EPRL_SUPPORTED, default = 0
End

Begin LogExtra, Spy Overhead Paging Messages
    ETS, Id=CP Spy, SpyId=CP PE ENG_LAYER2_TR 13 13
    Menu, CP/Spy/PS/Call Proc/Engine/ENG_LAYER2_TR/CP PE ENG_LAYER2_TR 13 13
End

Begin LogExtra, Spy Signalling Messages, PrintRaw
    ETS, Id=CP Spy, SpyId=CP PE ENG_PAGE_TR 20 52
    Menu, CP/Spy/PS/Call Proc/Engine/ENG_PAGE_TR/CP PE ENG_PAGE_TR 20 52
    ETS, Id=CP Spy, SpyId=CP PE ENG_CP_TR 23 4
    Menu, CP/Spy/PS/Call Proc/Engine/ENG_CP_TR/CP PE ENG_CP_TR 23 4
    ETS, Id=CP Spy, SpyId=CP PE ENG_ACCESS_PROC_TR 1 40
    Menu, CP/Spy/PS/Call Proc/Engine/ENG_ACCESS_PROC_TR/CP PE ENG_ACCESS_PROC_TR 1 40
    ETS, Id=CP Spy, SpyId=CP PE ENG_LAYER2_TR 13 57
    Menu, CP/Spy/PS/Call Proc/Engine/ENG_LAYER2_TR/CP PE ENG_LAYER2_TR 13 57
    ETS, Id=CP Spy, SpyId=CP PE ENG_RTC_TR 29 34
    Menu, CP/Spy/PS/Call Proc/Engine/ENG_RTC_TR/CP PE ENG_RTC_TR 29 34
End

Begin LogExtra, Sync Messages
    ETS, Id=CP Spy, SpyId=CP PE ENG_LAYER2_TR 13 15
    Menu, CP/Spy/PS/Call Proc/Engine/ENG_LAYER2_TR/CP PE ENG_LAYER2_TR 13 15
End

Begin Record, External EXE
    CalcAkey.exe, Menu=Utilities/A Key Calculator,        Title=A-Key Calculator
    fileTransfer.exe, Menu=Utilities/File Transfer Utility,   Title=File Transfer Utility
    IMSIEditor.exe, Menu=Utilities/IMSI Editor,             Title=IMSI Editor
    Script.exe, Menu=Utilities/Script Utility,          Title=Script Utility
    VirtMmi6.exe, Menu=Utilities/Virtual MMI Utility,     Title=Virtual MMI Utility
    MidiCreate.exe, Menu=Utilities/Midi Creation Utility,   Title=Midi Creation Utility
    PRLEditorExt.exe, Menu=Utilities/Ext. PRL Editor,         Title=Extended PRL Editor
    ViaSmsManager.exe, Menu=Utilities/VIA SMS Manager,         Title=VIA SMS Manager
    ViaGpsTestApp.exe, Menu=Utilities/VIA GPS Test App,	Title=VIA GPS Test App
    ViaNvManager.exe, Menu=Utilities/VIA NV Manager,		Title=VIA NV Manager
    UsbConfig.exe, Menu=Utilities/USB Config,              Title=USB Config
    MemDumpCollector.exe, Menu=Utilities/VIA Memory Dump Collector, Title=VIA Memory Dump Collector
    AsicBootProj.exe, Menu=Utilities/AsicBoot Boot-From-AP Dnld,   Title=AsicBoot Boot-From-AP Dnld
    AudioTuningUtility.exe, Menu=Utilities/Audio Tuning Utility,Title=Audio Tuning Utility
    ViaDDRTuner.exe, Menu=Utilities/DDR Tuning Utility,   Title=DDR Tuning Utility
    FlashSectionExtract.exe, Menu=Utilities/Flash Section Extraction,Title=Flash Section Extraction
End

Begin Record, Register OCX
    ocx, AkeyChecksum.dll
    ocx, DigitEditCtrl.ocx
    ocx, Etsif.ocx
    ocx, EtsSerialIf.dll
    ocx, EtsUsbIf.dll
    ocx, ViaIf.dll
    ocx, ViaGlobals.dll
End

Begin Record, Startup Commands
    ETS, Id=CP Configuration Info
End

Begin Enum, ETS Id
    CP Loopback, 0, CR, Debug, lite, 
    CP SetBaud, 1, CR, Debug/Comm, lite, 
    CP DBuf Loopback, 2, CR, Debug, lite, 
    CP Data SetBaud, 3, CR, Debug/Comm, lite, 
    CP Uart Select, 4, CR, Debug/Comm, lite, 
    Enable Generic Ack, 5, CR, Debug, lite, 
    CP Set Device, 6, CO, Debug, lite, 
    CP Set Def Trace Spy Config, 7, CO, Debug, lite, 
    CP Enter Calibration Mode, 13, CR, Debug, lite, 
    CP Fault, 50, RO, , lite, 
    CP Printf, 51, RO, , lite, 
    CP Display, 52, RO, , lite, 
    CP Exe Fault, 53, RO, , lite, 
    CP File Info, 54, RO, , lite, 
    CP Exception, 55, RO, , lite, 
    CP Exe Fault Queue Data, 56, RO, , lite, 
    CP Exe Fault Task Control Block, 57, RO, , lite, 
    CP Exe Fault Msg Buff Ptr Stats, 58, RO, , lite, 
    CP Exe Fault Task Program Counter, 59, RO, , lite, 
    CP Exe Fault Task Stack Status, 60, RO, , lite, 
    CP Exe Fault Task Status Part1, 61, RO, , lite, 
    CP Exe Fault Task Status Part2, 62, RO, , lite, 
    CP Exe Fault Task Event History, 63, RO, , lite, 
    CP Exe Fault Task Stack Data, 64, RO, , lite, 
    CP Exe Fault HISR Event History, 65, RO, , lite, 
    CP Exe Fault Time Info, 66, RO, , lite, 
    CP Exe Fault Task Msg Data, 67, RO, , lite, 
    CP Exe Fault Hisr Control Block, 68, RO, , lite, 
    CP Exe Fault Context History, 69, RO, , lite, 
    CP Exe Fault CPU Allotment, 70, RO, , lite, 
    CP Exe Fault Timer Call Info, 71, RO, , lite, 
    CP Exe Fault Log Size Indicator, 72, RO, , lite, 
    CP Exe Fault ARM Regs Info, 73, RO, , lite, 
    CP Exe Fault ISR Stack Status, 75, RO, , lite, 
    CP Exe Fault ISR Stack Data, 76, RO, , lite, 
    CP Exe Event History Trace, 77, RO, , lite, 
    CP Memory Exception, 78, RO, , lite, 
    CP Exe Fault System Event History, 79, RO, , lite, 
    CP Exe Fault Profile Data, 90, RO, , lite, 
    CP Exe Fault DSP MBox Data, 91, RO, , lite, 
    CP Exe Fault DSPM Crash Data, 92, RO, , lite, 
    CP Exe Fault MMU Exception Data, 93, RO, , lite, 
    CP Exe Fault Thread History, 94, RO, , lite, 
    CP Exe Fault FSM Event Data, 95, RO, , lite, 
    Generic Ack, 65534, RO, , lite, 
    CP Trace, 100, CRM, CP/Trace, lite, 
    CP Spy, 101, CRM, CP/Spy, lite, 
    CP Get Exe Fault Dump Log, 150, CR, CP/MON/Debug, 
    CP Clr Exe Fault Dump Log, 151, CR, CP/MON/Debug, 
    CP Check New Halt Log, 152, CR, CP/MON/Debug, 
    CP Enable Boot Dump RAM, 153, CR, CP/MON/Debug, 
    CP Exe Silent Log Setting, 158, CR, CP/MON/Debug, 
    CP Exe Silent Log Ctrl, 154, CR, CP/MON/Debug, 
    CP Check Task Stack, 155, CO, CP/MON/Debug, 
    CP BOOT Reset Flag, 156, CR, CP/MON/Debug, 
    CP BOOT Reset, 157, CO, CP/MON/Debug, 
    CP Get Memory Pool Info, 159, CR, CP/MON/Debug, 
    CP Enable Boot Dog Before Jump, 160, CR, CP/MON/Debug, 
    CP CP Buf Busy Trace Ctrl, 161, CR, CP/MON/Debug, 
    CP Event History Trace Ctrl, 162, CR, CP/MON/Debug, 
    CP Task Event Log Setting, 163, CR, CP/MON/Debug, 
    CP Task Event Log Status, 164, CR, CP/MON/Debug, 
    CP Enable Message Status, 165, CR, CP/MON/Debug, 
    CP Version, 200, CR, CP/MON/SW Revision Info, lite, 
    CP Memory Test, 201, CR, CP/MON/Memory, lite, 
    CP Peek, 202, CR, CP/MON/Memory, lite, 
    CP Poke, 203, CR, CP/MON/Memory, lite, 
    CP Vocoder Test, 207, CR, CP/MON/Speech, lite, 
    CP Speech Write, 208, CR, CP/MON/Speech, lite, 
    CP Speech Read, 209, CR, CP/MON/Speech, lite, 
    CP Fault Ctrl, 210, CO, CP/MON/EXE Fault, lite, 
    CP DB Block Write, 211, CR, CP/MON/DB, lite, 
    CP DB Block Read, 212, CR, CP/MON/DB, lite, 
    CP CBP Version, 213, CR, CP/MON/SW Revision Info, lite, 
    CP Pin Muxing, 214, CRM, CP/MON, 
    CP Set Clear GPIO, 215, CO, CP/MON/GPIO, lite, 
    CP Read GPIO, 216, CR, CP/MON/GPIO, lite, 
    CP Rev Channel Data, 217, CO, CP/MON/DSP Debug, lite, 
    CP Jump to Loader, 220, CO, CP/MON/Boot Loader, lite, 
    CP Jump to Offline, 227, CO, CP/MON/Boot Loader, lite, 
    CP Monitor GPIO, 222, CR, CP/MON/GPIO, lite, 
    CP Boot Version, 223, CR, CP/MON/SW Revision Info, lite, 
    CP Boot Compatibility, 171, CR, CP/MON/SW Revision Info, 
    CP Boot to Loader, 224, CR, CP/MON/Boot Loader, lite, 
    CP CBP Compatibility, 225, CO, CP/MON/SW Revision Info, lite, 
    CP Configuration Info, 226, CR, CP/MON/SW Revision Info, lite, 
    CP Bitwise Operation, 229, CR, CP/MON/Memory, lite, 
    CP Timestamp Ctrl, 230, CO, CP/MON/Timestamp, 
    CP Timestamp Setup, 231, CO, CP/MON/Timestamp, 
    CP Cache Traces, 232, CO, CP/MON/Logging, 
    CP Cache Spies, 233, CO, CP/MON/Logging, 
    CP Dump Traces, 234, CO, CP/MON/Logging, 
    CP DSP JTAG Power, 236, CO, CP/MON/DSP Debug, 
    CP DSP Sim Init, 237, CO, CP/MON/DSP Debug, 
    CP DSP Sim Cmd, 238, CO, CP/MON/DSP Debug, 
    CP DSP Sim Execute, 239, CO, CP/MON/DSP Debug, 
    CP Test DSPM Boot Code, 240, CR, CP/MON/DSP Debug, 
    CP Test DSPV Boot Code, 241, CR, CP/MON/DSP Debug, 
    CP Profile Start, 244, CO, CP/MON/Profiling, 
    CP Profile Stop, 245, CR, CP/MON/Profiling, 
    CP Profile Get Data Size, 246, CR, CP/MON/Profiling, 
    CP Profile Get Debug Info, 247, CR, CP/MON/Profiling, 
    CP Profile Set Spy Display Filters, 248, CO, CP/MON/Profiling, 
    CP Memory Copy, 249, CO, CP/MON/Memory, 
    CP MonPrintf Ctrl, 250, CR, CP/MON/Logging, 
    CP Profile Set Mode, 251, CR, CP/MON/Profiling, 
    CP Profile Get Mode, 252, CR, CP/MON/Profiling, 
    CP Mpu Populated Block Ctrl, 253, CO, CP/MON/MPU, 
    CP Mpu Unpopulated Segment Ctrl, 254, CO, CP/MON/MPU, 
    CP Enable DSPV JTAG, 256, CO, CP/MON/DSP Debug, 
    CP Enable DSPM JTAG, 257, CO, CP/MON/DSP Debug, 
    CP CBP SW Version, 258, CR, CP/MON/SW Revision Info, lite, 
    CP Key Press, 204, CO, CP/MON, lite, 
    CP Sim Msg, 205, CO, CP/MON, 
    CP Reset Processor, 206, CR, CP/MON, lite, 
    CP Sleep Control, 219, CO, CP/MON/Sleep, lite, 
    CP Sleep Enter, 221, CO, CP/MON/Sleep, lite, 
    CP Sleep Cancel, 218, CO, CP/MON/Sleep, lite, 
    CP Sleep Veto Ctrl, 259, CR, CP/MON/Sleep, 
    CP MMU Control, 260, CR, CP/MON/Memory, lite, 
    CP Bitwise 32 Operation, 261, CR, CP/MON/Memory, lite, 
    CP MON MMU get TLB Entry, 262, CR, CP/MON/Memory, 
    CP MON MMU get TLB Config, 263, CR, CP/MON/Memory, 
    CP Get Features Support, 264, CR, CP/MON/SW Revision Info, 
    CP Get Entire TLB, 265, CR, CP/MON/Memory, lite, 
    CP Memory Bandwidth, 266, CR, CP/MON/Memory, 
    CP MON Shmem Test By Timer, 277, CR, CP/MON/Shmem Test, 
    CP MON Shmem Test By Task, 278, CR, CP/MON/Shmem Test, 
    CP MON ESPI Test, 279, CR, CP/MON, 
    CP MON SDIO Test, 284, CR, CP/MON, 
    CP MON Get USB IDs, 285, CR, CP/MON, 
    CP Get Unit Build Info, 286, CR, CP/MON/SW Revision Info, lite, 
    CP Memory Addresses, 287, CR, CP/MON/Memory, lite, 
    CP CP or Boot Mode, 288, CR, CP/MON/Memory, lite, 
    CP MON Silent Log Info, 289, RO, CP/MON, 
    CP Hwd Profile CP Start, 290, CO, CP/MON/Profiling, 
    CP Hwd Profile CP Stop, 291, CO, CP/MON/Profiling, 
    CP Hwd Profile CP Get Spy Data, 292, CO, CP/MON/Profiling, 
    CP Hwd Profile DSPM Start, 293, CO, CP/MON/Profiling, 
    CP Hwd Profile DSPM Stop, 294, CO, CP/MON/Profiling, 
    CP Hwd Profile DSPM Get Spy Data, 295, CO, CP/MON/Profiling, 
    CP Hwd Profile DSPV Start, 296, CO, CP/MON/Profiling, 
    CP Hwd Profile DSPV Stop, 297, CO, CP/MON/Profiling, 
    CP Hwd Profile DSPV Get Spy Data, 298, CO, CP/MON/Profiling, 
    CP Configuration Update, 299, RO, CP/MON/SW Revision Info, 
    CP Measure ISR Time Start, 172, CO, CP/MON/Profiling, 
    CP Measure ISR Time Stop, 173, CO, CP/MON/Profiling, 
    CP Set Spy Decimate, 228, CO, CP/MON, 
    CP BB Config, 280, CO, CP/BB, 
    CP BB Write, 281, CR, CP/BB, 
    CP BB Read, 282, CR, CP/BB, 
    CP BB Checksum, 283, CR, CP/BB, lite, 
    CP Boot vRM Update, 166, CR, CP/DM, 
    CP Boot Erase UA Flag, 167, CR, CP/DM, 
    CP Boot vRM Start, 168, CR, CP/DM, 
    CP Boot Reboot, 169, CR, CP/DM, 
    CP FOTA Update, 170, CR, CP/DM, 
    CP Flash Id, 1200, CR, CP/Flash, lite, 
    CP Flash Erase, 1201, CR, CP/Flash, lite, 
    CP Flash Program, 1202, CR, CP/Flash, lite, 
    CP Flash Section Info, 1203, CR, CP/Flash, lite, 
    CP Flash Addr Erase, 1204, CR, CP/Flash, lite, 
    CP Flash Addr Program, 1205, CR, CP/Flash, lite, 
    CP Flash Get Status, 1206, CR, CP/Flash, 
    ASICBOOT_AP_MSGID_ACK, 4096, CR, CP/ASIC_BOOT_AP, lite, 
    ASICBOOT_AP_MSGID_NACK, 4097, CR, CP/ASIC_BOOT_AP, lite, 
    ASICBOOT_AP_MSGID_HANDSHAKE, 4128, CO, CP/ASIC_BOOT_AP, lite, 
    ASICBOOT_AP_MSGID_HWDREG, 4129, CO, CP/ASIC_BOOT_AP, lite, 
    ASICBOOT_AP_MSGID_HWDREG_PROG, 4130, CO, CP/ASIC_BOOT_AP, lite, 
    ASICBOOT_AP_MSGID_HEADER, 4131, CO, CP/ASIC_BOOT_AP, lite, 
    ASICBOOT_AP_MSGID_DATA, 4132, CO, CP/ASIC_BOOT_AP, lite, 
    ASICBOOT_AP_MSGID_CHECKSUM, 4133, CO, CP/ASIC_BOOT_AP, lite, 
    ASICBOOT_AP_MSGID_COMPLETE, 4134, CO, CP/ASIC_BOOT_AP, lite, 
    ASICBOOT_AP_MSGID_PEEK, 4135, CR, CP/ASIC_BOOT_AP, lite, 
    ASICBOOT_AP_MSGID_POKE, 4136, CO, CP/ASIC_BOOT_AP, lite, 
    CP DB Clear, 300, CR, CP/DB, lite, 
    CP DB Cache, 301, CR, CP/DB, lite, 
    CP DB Flush, 302, CR, CP/DB, lite, 
    CP DB Read, 303, CRM, CP/DB, lite, 
    CP DB Write, 304, CRM, CP/DB, lite, 
    CP HWD Init, 500, CO, CP/HWD, 
    CP Pwr Savings Mode Config, 501, CO, CP/HWD, 
    CP Pwr Savings Get Mode, 502, CR, CP/HWD, lite, 
    CP CG_CK MUX Set, 503, CO, CP/HWD, 
    CP Hwd USB Device Control, 504, CO, CP/HWD, 
    CP PLL Reconfig, 505, CO, CP/HWD, 
    CP Rf Driver Command, 506, CR, CP/HWD, lite, 
    CP RSSI Correction, 507, CO, CP/HWD, lite, 
    CP Rx AGC Config, 508, CO, RF/ALGORITHMS, lite, 
    CP Tx AGC Config, 509, CO, RF/ALGORITHMS, lite, 
    CP Rx AGC Gain Set, 510, CO, RF/ALGORITHMS, lite, 
    CP Tx Test, 511, CO, RF, lite, 
    CP Cal Initialize, 512, CR, RF, lite, 
    CP PLL Channel Config, 513, CR, RF, lite, 
    CP Get PLL Channel, 514, CR, RF, lite, 
    CP TX Tone Test, 515, CO, RF, lite, 
    CP Transmitter Ctrl, 516, CO, RF, lite, 
    CP Receiver Ctrl, 517, CO, RF, lite, 
    CP Read Current Temperature, 518, CR, RF, lite, 
    CP Read Current Batt Voltage, 519, CR, RF, lite, 
    CP Read Current Tx Power, 520, CR, RF, lite, 
    CP Cal Init NVRAM, 521, CR, RF, lite, 
    CP Change RF Constants, 522, CO, RF, 
    CP Get RF Constants, 523, CR, RF, 
    CP Set RxTx IQ Swap, 524, CO, RF, 
    CP Get RxTx IQ Swap, 525, CR, RF, 
    CP Set Tx Power Limits, 526, CO, RF, 
    CP Get Rx AGC Default Hysteresis, 527, CR, RF, lite, 
    CP TxAgc Alternative Thresholds, 528, CO, RF, 
    CP RFC Rx AGC Gain Table Select, 529, CO, RF/ALGORITHMS, lite, 
    1x Rx Agc Get Parms, 530, CR, RF/ALGORITHMS, lite, 
    1x Tx Agc Get Parms, 531, CR, RF/ALGORITHMS, lite, 
    CP AFC Config, 532, CO, RF/ALGORITHMS, lite, 
    CP AFC Get Parms, 533, CR, RF/ALGORITHMS, lite, 
    DSPM TxAGC Closed Loop Status, 534, CR, RF/ALGORITHMS, lite, 
    CP Rx Fine Gain Control, 535, CO, RF/ALGORITHMS, lite, 
    CP RxTx RF Alg Control, 536, CO, RF/ALGORITHMS, lite, 
    CP_SYS_CPBUF_TEST_GET_CMD, 600, CO, CP/SYS/CPBUF, 
    CP_SYS_CPBUF_TEST_FREE_CMD, 601, CO, CP/SYS/CPBUF, 
    CP_SYS_CPBUF_TEST_STATS_CMD, 602, CO, CP/SYS/CPBUF, 
    CP_SYS_CPBUF_STATUS_CMD, 603, CR, CP/SYS/CPBUF, 
    CP SYS Transit 1x to Do, 610, CO, CP/SYS/SYSTIME, 
    CP SYS Transit Do to 1x, 611, CO, CP/SYS/SYSTIME, 
    CP SYS Register Sys Time, 612, CO, CP/SYS/SYSTIME, 
    CP SYS Set FrameOffset, 613, CO, CP/SYS/SYSTIME, 
    CP SYS Time DO Get, 614, CO, CP/SYS/SYSTIME, 
    CP SYS 9MHz Cnt Init, 615, CO, CP/SYS/SYSTIME, 
    CP SYS TimeData Get, 616, CO, CP/SYS/SYSTIME, 
    CP Browser Call, 750, CO, CP/HLP, 
    CP Browser End, 751, CO, CP/HLP, 
    CP Browser Idle Time Out, 752, CO, CP/HLP, 
    CP PPP Open, 754, CO, CP/HLP, 
    CP PPP Close, 755, CO, CP/HLP, 
    CP Socket Create, 756, CO, CP/HLP, 
    CP Socket Bind, 757, CO, CP/HLP, 
    CP Socket Connect, 758, CO, CP/HLP, 
    CP Socket Close, 759, CO, CP/HLP, 
    CP DO handoff 1X Request, 760, CO, CP/HLP, 
    CP PPP Route Set, 761, CO, CP/HLP, 
    CP TCP ACK Tag Rate Get, 762, CR, CP/HLP, 
    CP TCP ACK Tag Rate Set, 763, CO, CP/HLP, 
    CP HLP Throttling Timer Status Get, 764, CR, CP/HLP, 
    CP HL SIP Act Req, 765, CO, CP/HLP/SIP, 
    CP HL SIP Reg Req, 766, CO, CP/HLP/SIP, 
    CP HL SIP Session Setup Req, 767, CO, CP/HLP/SIP, 
    CP HL SIP Session Disc Req, 768, CO, CP/HLP/SIP, 
    CP HL SIP Unreg Req, 769, CO, CP/HLP/SIP, 
    CP HL SIP Session Setup Net Rsp, 770, CO, CP/HLP/SIP, 
    CP HL IMS DEBUG MSG SEND, 771, CO, CP/HLP/IMS, 
    CP HL IMS DEBUG SET IMS STATE, 772, CO, CP/HLP/IMS, 
    CP HL IMS DEBUG SET PDN STATE, 773, CO, CP/HLP/IMS, 
    CP HL SIP Set Sigcomp, 774, CO, CP/HLP/SIP, 
    CP HL SIP SET AKA SQN, 775, CO, CP/HLP/SIP, 
    CP RTP Local SDP, 700, CO, CP/HLP/RTP, 
    CP RTP Peer SDP, 701, CO, CP/HLP/RTP, 
    CP RTP Del Stream, 702, CO, CP/HLP/RTP, 
    CP RTP Config Stream, 703, CO, CP/HLP/RTP, 
    CP RTP Set Local MCap, 704, CO, CP/HLP/RTP, 
    CP RTP Rtp Input, 705, CO, CP/HLP/RTP, 
    CP RTP Rtcp Input, 706, CO, CP/HLP/RTP, 
    CP RTP Input Source, 707, CO, CP/HLP/RTP, 
    CP RTP IS Start, 708, CO, CP/HLP/RTP, 
    CP RTP IS Stop, 709, CO, CP/HLP/RTP, 
    CP RTP IP6 Input, 710, CO, CP/HLP/RTP, 
    CP IP6 UDP Connection Open, 730, CR, CP/HLP/IP6, 
    CP IP6 UDP Connection Close, 731, CO, CP/HLP/IP6, 
    CP IP6 TCP Connection Open, 732, CR, CP/HLP/IP6, 
    CP IP6 TCP Connection Close, 733, CO, CP/HLP/IP6, 
    CP Set PDN INFO Cmd, 740, CO, CP/HLP/IMS, 
    CP Get PDN INFO Cmd, 741, CR, CP/HLP/IMS, 
    CP Send PING Cmd, 742, CO, CP/HLP/IMS, 
    CP L1D Diagnostic Parms, 850, CR, CP/L1D, lite, 
    CP L1D Get Phone State, 851, CR, CP/L1D, 
    DSPM AFC Parm, 852, CO, CP/L1D/RF_TST, 
    DSPM Afc Cal Parms, 853, CO, CP/L1D/RF_TST, 
    DSPM Rx AGC Parm, 854, CO, CP/L1D/RF_TST, 
    DSPM Tx AGC Parm, 855, CO, CP/L1D/RF_TST, 
    DSPM Tx AGC Power Calibr, 856, CO, CP/L1D/RF_TST, 
    DSPM Tx TXONs Table, 857, CO, CP/L1D/RF_TST, 
    CP L1D Fpc Cal Factor, 858, CR, CP/L1D, 
    CP L1D Debug Filter, 859, CO, CP/L1D, 
    CP L1d Idle Diff Freq Srch Mode, 860, CO, CP/L1D, 
    DSPM RxAgc SettleTime Parm, 861, CO, CP/L1D/RF_TST, 
    CP L1d Disable Reset Msg, 862, CO, CP/L1D, 
    CP L1d FPDCHS Param Msg, 870, CO, CP/L1D/PDCH_TST, 
    CP L1d FPDCHS Disable Msg, 871, CO, CP/L1D/PDCH_TST, 
    CP L1d FPDCHS CQIAck Msg, 872, CO, CP/L1D/PDCH_TST, 
    CP L1d FPDCHS CtrlHold Msg, 873, CO, CP/L1D/PDCH_TST, 
    CP L1d GPS AUTONOMOUS Msg, 874, CO, CP/L1D, 
    CP L1d GPS DBG Msg, 875, CO, CP/L1D, 
    CP L1d GPS Acq Aid Msg, 876, CO, CP/L1D, 
    CP L1d NST Traffic On Msg, 877, CO, CP/L1D, 
    CP L1d AFLT Input Buf Sel Msg, 878, CO, CP/L1D/AFLT_TST, 
    CP L1d AFLT Test PilotSetSize Msg, 879, CO, CP/L1D/AFLT_TST, 
    CP Clear Markov Stats, 906, CO, CP/LMD, lite, 
    CP Clear Tdso Stats, 907, CO, CP/LMD, lite, 
    CP Random Number Calc, 908, CR, CP/LMD, 
    CP Clear FER, 909, CO, CP/LMD, lite, 
    CP MuxPDU Test Mode, 910, CR, CP/LMD, 
    CP MuxPDU Buffer Status, 911, CR, CP/LMD, 
    CP MuxPDU PDCH Test Mode, 912, CO, CP/LMD, 
    CP MuxPDU Set Raw Spy Len, 913, CO, CP/LMD, 
    CP MuxPDU Set Op Mode, 914, CR, CP/LMD, 
    CP MuxPDU Get Op Mode, 915, CR, CP/LMD, 
    CP Clear Fwd Sch Dtx Stats, 916, CO, CP/LMD, 
    CP Set FER Running Avg Num Frames, 917, CO, CP/LMD, 
    CP Timer Enable, 1000, CO, CP/PS, 
    CP Access Signal, 1001, CO, CP/PS, 
    CP Status Request, 1002, CR, CP/PS, lite, 
    CP Init Nam, 1003, CO, CP/VAL/PRI/INIT, lite, 
    CP Init MS Cap Db, 1004, CO, CP/VAL/PRI/INIT, lite, 
    CP Current Time, 1005, CR, CP/PS, lite, 
    CP Phone State and Event Count, 1006, CR, CP/PS, 
    CP Protocol Rev in use, 1010, CR, CP/PS, lite, 
    CP Clear MRU, 1011, CO, CP/PS/Database, lite, 
    CP Get Active NAM, 1012, CR, CP/VAL/PRI/NAM, lite, 
    CP Select Active NAM, 1013, CR, CP/VAL/PRI/NAM, lite, 
    CP Enter AKey, 1014, CR, CP/PS/Database, lite, 
    CP Force Analog Mode, 1015, CO, CP/PS, 
    CP Set SPC, 1016, CR, CP/PS/Database, lite, 
    CP Init Secure DB, 1018, CO, CP/PS/Database, 
    CP Get Retrievable Statistics, 1020, CR, CP/PS/Retrieve Stat, lite, 
    CP Set Retrievable Statistics, 1021, CO, CP/PS/Retrieve Stat, lite, 
    CP Inject Handoff, 1022, CO, CP/PS/Handoff, 
    CP Set Silent Retry, 1023, CO, CP/PS/Silent Retry, lite, 
    CP Get Silent Retry Status, 1024, CR, CP/PS/Silent Retry, lite, 
    CP Get Debug Screen Info, 1025, CR, CP/PS, 
    CP Exit Emergency Mode, 1026, CO, CP/PS, 
    CP Set Lost Scan Ping Frequency, 1029, CO, CP/PS/CSS, 
    CP ERI Version Number Msg, 1030, CR, CP/PS/CSS, lite, 
    CP Get PRL Id, 1031, CR, CP/PS/CSS, lite, 
    CP Init PSW Misc Db, 1032, CO, CP/VAL/PRI/INIT, lite, 
    CP Enable, 1300, CO, CP/PS/UI Command, lite, 
    CP Call Initiate, 1302, CO, CP/PS/UI Command, lite, 
    CP Call Answer, 1303, CO, CP/PS/UI Command, lite, 
    CP Call Hangup, 1304, CO, CP/PS/UI Command, lite, 
    CP Test Modes, 1305, CO, CP/PS/Test Mode, lite, 
    CP Set Idle HO Parameters, 1309, CO, CP/PS/Handoff, 
    CP HSPD Active and Control Hold, 1310, CO, CP/PS/HSPD, 
    CP SCH Request Message, 1311, CO, CP/PS/HSPD, 
    CP Data Calls PreArrangement, 1312, CO, CP/PS/HSPD, 
    CP Location Service PDDM, 1313, CO, CP/PS, 
    CP Set PKZID Hysteresis Timer, 1314, CO, CP/PS/HSPD, lite, 
    CP Get PKZID Hysteresis Timer, 1315, CR, CP/PS/HSPD, lite, 
    CP Set Access HO Parameters, 1317, CO, CP/PS/Handoff, 
    CP Set Voice Pref Serv Config, 1318, CO, CP/PS/ServCfg, lite, 
    CP Set Data Pref Serv Config, 1319, CO, CP/PS/ServCfg, lite, 
    CP Set Loopback Pref Serv Config, 1320, CO, CP/PS/ServCfg, lite, 
    CP Set OTASP Pref Serv Config, 1321, CO, CP/PS/ServCfg, lite, 
    CP Set SMS Pref Serv Config, 1322, CO, CP/PS/ServCfg, lite, 
    CP Set Location Pref Serv Config, 1323, CO, CP/PS/ServCfg, lite, 
    CP Switch Voice Service Option, 1324, CO, CP/PS/ServCfg, lite, 
    CP Set Service Option, 1173, CO, CP/PS/ServCfg, lite, 
    CP Test Power Control, 1325, CO, CP/PS/Test Mode, lite, 
    CP Get GPS Debug Info, 1327, CR, CP/PS/LOC, 
    CP Set Mobile ID, 1328, CR, CP/PS/Database, lite, 
    CP Get Mobile ID, 1329, CR, CP/PS/Database, lite, 
    CP Get SPC, 1330, CR, CP/PS/Database, lite, 
    CP Get SSD, 1331, CR, CP/PS/Database, lite, 
    CP_LOC_STATE_CHANGE_TEST, 1333, CO, CP/PS/LOC, 
    CP CSFB Get Status, 1334, CR, CP/PS/CSFB, 
    CP SMS Connect, 1800, CO, CP/PS/SMS, lite, 
    CP SMS Disconnect, 1801, CO, CP/PS/SMS, lite, 
    CP SMS BCast Connect, 1802, CO, CP/PS/SMS, lite, 
    CP SMS BCast Disconnect, 1803, CO, CP/PS/SMS, lite, 
    CP SMS Submit, 1804, CO, CP/PS/SMS, lite, 
    CP SMS User Ack, 1805, CO, CP/PS/SMS, lite, 
    CP SMS Srv Opt Pref, 1806, CO, CP/PS/SMS, lite, 
    CP SMS Cancel, 1807, CO, CP/PS/SMS, lite, 
    CP SMS BCast Parms, 1808, CO, CP/PS/SMS, lite, 
    CP SMS Term Status, 1809, CO, CP/PS/SMS, lite, 
    CP SMS Cause Code Status, 1810, CO, CP/PS/SMS, lite, 
    CP SMS Retx Amount, 1811, CO, CP/PS/SMS, lite, 
    CP Flush Final, 1100, CO, CP/VAL/ATC, 
    CP Nwk Rpt Data Svc Status Word, 1101, CO, CP/VAL/ATC, 
    CP Set AT cmds default, 1380, CO, CP/VAL/PRI/INIT, lite, 
    CP TCPB Conn Status, 1102, CO, CP/VAL/HLP, 
    CP TCPB Data Send Rsp, 1103, CO, CP/VAL/HLP, 
    CP Socket InAct Tmo Request, 1104, CO, CP/VAL/HLP, 
    CP UPB Conn Status, 1105, CO, CP/VAL/HLP, 
    CP UPB Idle Tmo, 1106, CO, CP/VAL/HLP, 
    CP UPB Sent Data Rsp, 1107, CO, CP/VAL/HLP, 
    CP HLP IP DNS Addr Get, 1118, CR, CP/VAL/HLP, 
    CP OTASP Conn Ind, 1108, CO, CP/VAL/OTASP, 
    CP OTASP Disconn Ind, 1109, CO, CP/VAL/OTASP, 
    CP OTASP Ind, 1110, CO, CP/VAL/OTASP, 
    CP OTASP Premature Term Ind, 1111, CO, CP/VAL/OTASP, 
    CP OTASP Rx Ind, 1112, CO, CP/VAL/OTASP, 
    CP OTASP Start Ind, 1113, CO, CP/VAL/OTASP, 
    CP OTASP Stop Ind, 1114, CO, CP/VAL/OTASP, 
    CP OTASP System Error Ind, 1115, CO, CP/VAL/OTASP, 
    CP OTASP Tx Rsp, 1116, CO, CP/VAL/OTASP, 
    CP Access Max Capsule Size, 1119, CO, CP/VAL/PSW, 
    CP Bs Co Ord, 1120, CO, CP/VAL/PSW, 
    CP Nwk Retrieve Channel, 1121, CO, CP/VAL/PSW, 
    CP Nwk Rpt Burst Dtmf, 1122, CO, CP/VAL/PSW, 
    CP Nwk Rpt Data Burst, 1126, CO, CP/VAL/PSW, 
    CP Nwk Rpt Lock, 1127, CO, CP/VAL/PSW, 
    CP Nwk Rpt Maintenance Required, 1128, CO, CP/VAL/PSW, 
    CP Nwk Rpt Order, 1129, CO, CP/VAL/PSW, 
    CP Nwk Rpt Registration Accept, 1130, CO, CP/VAL/PSW, 
    CP Nwk Rpt Registration Reject, 1131, CO, CP/VAL/PSW, 
    CP Nwk Rpt Service Ready, 1132, CO, CP/VAL/PSW, 
    CP Nwk Rpt Service Negotiation Mode, 1133, CO, CP/VAL/PSW, 
    CP Nwk Rpt Start Continuous Dtmf, 1134, CO, CP/VAL/PSW, 
    CP Nwk Rpt Stop Continuous Dtmf, 1135, CO, CP/VAL/PSW, 
    CP Nwk Rpt System Time, 1136, CO, CP/VAL/PSW, 
    CP Nwk Rpt Unlock, 1137, CO, CP/VAL/PSW, 
    CP Psw E911 Mode, 1138, CO, CP/VAL/PSW, 
    CP Roam Indication, 1139, CO, CP/VAL/PSW, 
    CP Rpt Cqa, 1140, CO, CP/VAL/PSW, 
    CP KPad Disabled, 1176, CO, CP/VAL/UINFO, 
    CP Emergency Mode Test, 1178, CR, CP/VAL/UINFO, 
    CP Flush Ack, 1162, CO, CP/VAL/DBM, 
    CP Flush Rf Ack, 1163, CO, CP/VAL/DBM, 
    CP Nv Msg Ack, 1165, CO, CP/VAL/DBM, 
    CP Read Raw IMSI, 1164, CR, CP/VAL/DBM, lite, 
    CP Write Raw IMSI, 1166, CR, CP/VAL/DBM, 
    CP Write Raw MDN, 1169, CR, CP/VAL/DBM, 
    CP TCPB Send Data Request, 1179, CO, CP/VAL/HLW, 
    CP UDPB Send Data Request, 1180, CO, CP/VAL/HLW, 
    CP VAL Audio Tuning Init Params, 1284, CR, CP/VAL/Audio Tuning, disabled=1
    CP VAL Audio Tuning Read Params, 1285, CRM, CP/VAL/Audio Tuning, disabled=1
    CP VAL Audio Tuning Update Params, 1286, CRM, CP/VAL/Audio Tuning, disabled=1
    CP VAL Audio Tuning Store Params File, 1287, CR, CP/VAL/Audio Tuning, disabled=1
    CP VAL Get Network Info, 1250, CR, CP/VAL/Datacard App, lite, 
    CP VAL OTA Activate, 1251, CR, CP/VAL/Datacard App, lite, 
    CP VAL Get Conn Info, 1254, CR, CP/VAL/Datacard App, lite, 
    CP VAL Get Ntwk Err Str, 1255, CR, CP/VAL/Datacard App, lite, 
    CP VAL Silent Log Cfg Create, 1280, CR, CP/VAL/Silent Logging, 
    CP VAL Silent Log Parms Set, 1281, CR, CP/VAL/Silent Logging, 
    CP VAL Silent Log Parms Get, 1282, CR, CP/VAL/Silent Logging, 
    CP VAL Silent Log Data Info Get, 1283, CR, CP/VAL/Silent Logging, 
    CP HSPD Profile Data Set, 20480, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Profile Data Get, 20481, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Secure Profile Text Data Set, 20482, CR, CP/VAL/PRI/HSPD/PROFILE, lite, disabled=1
    CP HSPD Secure Profile Byte Data Set, 20483, CR, CP/VAL/PRI/HSPD/PROFILE, lite, disabled=1
    CP HSPD Secure Profile Data Get, 20484, CR, CP/VAL/PRI/HSPD/PROFILE, lite, disabled=1
    CP Active Profile ID Set, 20485, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP Active Profile ID Get, 20486, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP Number Of Profile Set, 20487, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP Number Of Profile Get, 20488, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP All Data Init, 20489, CO, CP/VAL/PRI/INIT, lite, 
    CP Seg Data Init, 20496, CR, CP/VAL/PRI/INIT, lite, 
    CP Seg Profile Data Init, 20497, CR, CP/VAL/PRI/INIT, lite, 
    CP Secure DB Init, 20498, CR, CP/VAL/PRI/INIT, lite, 
    CP MIP Password String Set, 20512, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MIP Password String Get, 20513, CR, CP/VAL/PRI/HSPD/MIP, lite, disabled=1
    CP MIP Password Hex Set, 20514, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MIP Password Hex Get, 20515, CR, CP/VAL/PRI/HSPD/MIP, lite, disabled=1
    CP Mobile Node HA Authentication Mode Set, 20516, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP Mobile Node HA Authentication Mode Get, 20517, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MN HA Auth Algorithm Set, 20518, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MN HA Auth Algorithm Get, 20519, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MN AAA Auth Algorithm Set, 20520, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MN AAA Auth Algorithm Get, 20521, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MIP Registration Response Timeout Set, 20522, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MIP Registration Response Timeout Get, 20523, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MIP Registration Retries Set, 20524, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MIP Registration Retries Get, 20525, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MIP Pre-Reregistration Timeout Set, 20526, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MIP Pre-Reregistration Timeout Get, 20527, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP DMU RSA Public Key or DMU Test RSA Public Key Set, 20528, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP DMU RSA Public Key or DMU Test RSA Public Key Get, 20529, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP NPKOI Set, 20530, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP NPKOI Get, 20531, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MN Authenticator Set, 20532, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MN Authenticator Get, 20533, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MIP De_Registration Retries Set, 20534, CR, CP/VAL/PRI/HSPD/MIP, 
    CP MIP De_Registration Retries Get, 20535, CR, CP/VAL/PRI/HSPD/MIP, 
    CP MIP Re-Reg Only If Traffic Set, 20536, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP MIP Re-Reg Only If Traffic Get, 20537, CR, CP/VAL/PRI/HSPD/MIP, lite, 
    CP HSPD MIP NAI Enabled Set, 20538, CR, CP/VAL/PRI/HSPD/MIP, 
    CP HSPD MIP NAI Enabled Get, 20539, CR, CP/VAL/PRI/HSPD/MIP, 
    CP SIP NAI Set, 20544, CR, CP/VAL/PRI/HSPD/SIP, lite, 
    CP SIP NAI Get, 20545, CR, CP/VAL/PRI/HSPD/SIP, lite, 
    CP SIP Password String Set, 20546, CR, CP/VAL/PRI/HSPD/SIP, lite, 
    CP SIP Password String Get, 20547, CR, CP/VAL/PRI/HSPD/SIP, lite, disabled=1
    CP SIP Password Hex Set, 20548, CR, CP/VAL/PRI/HSPD/SIP, lite, 
    CP SIP Password Hex Get, 20549, CR, CP/VAL/PRI/HSPD/SIP, lite, disabled=1
    CP SIP DUN NAI Set, 20550, CR, CP/VAL/PRI/HSPD/SIP, lite, 
    CP SIP DUN NAI Get, 20551, CR, CP/VAL/PRI/HSPD/SIP, lite, 
    CP VAL PPP-Um Configuration Set, 20552, CR, CP/VAL/PRI/HSPD/PPP, lite, 
    CP VAL PPP-Um Configuration Get, 20553, CR, CP/VAL/PRI/HSPD/PPP, lite, 
    CP HSPD PPP Rm Config Set, 20554, CR, CP/VAL/PRI/HSPD/PPP, 
    CP HSPD PPP Rm Config Get, 20555, CR, CP/VAL/PRI/HSPD/PPP, 
    CP HSPD TCP Config Set, 20556, CR, CP/VAL/PRI/HSPD/TCP, 
    CP HSPD TCP Config Get, 20557, CR, CP/VAL/PRI/HSPD/TCP, 
    CP SIP Auth Prefer Set, 20558, CR, CP/VAL/PRI/HSPD/SIP, lite, 
    CP SIP Auth Prefer Get, 20559, CR, CP/VAL/PRI/HSPD/SIP, lite, 
    CP AN NAI Set, 20560, CR, CP/VAL/PRI/HSPD/DO, lite, 
    CP AN NAI Get, 20561, CR, CP/VAL/PRI/HSPD/DO, lite, 
    CP AN Password Set, 20562, CR, CP/VAL/PRI/HSPD/DO, lite, 
    CP AN Password Get, 20563, CR, CP/VAL/PRI/HSPD/DO, lite, disabled=1
    CP AN Password Hex Set, 20564, CR, CP/VAL/PRI/HSPD/DO, lite, 
    CP Primary DNS IP Addr Set, 20576, CR, CP/VAL/PRI/HSPD/DNS, lite, 
    CP Primary DNS IP Addr Get, 20577, CR, CP/VAL/PRI/HSPD/DNS, lite, 
    CP Secondary DNS IP Addr Set, 20578, CR, CP/VAL/PRI/HSPD/DNS, lite, 
    CP Secondary DNS IP Addr Get, 20579, CR, CP/VAL/PRI/HSPD/DNS, lite, 
    CP HSPD Mn Nai Set, 21248, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Nai Get, 21249, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Dun Nai Set, 21250, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Dun Nai Get, 21251, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Ha Spi Enable Set, 21252, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Ha Spi Enable Get, 21253, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Ha Spi Set, 21254, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Ha Spi Get, 21255, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Aaa Spi Enable Set, 21256, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Aaa Spi Enable Get, 21257, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Aaa Spi Set, 21258, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Aaa Spi Get, 21259, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Reverse Tunneling Set, 21260, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Reverse Tunneling Get, 21261, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Home Ip Address Set, 21262, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Mn Home Ip Address Get, 21263, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Home Agent Primary Ip Address Set, 21264, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Home Agent Primary Ip Address Get, 21265, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Home Agent Secondary Ip Address Set, 21266, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP HSPD Home Agent Secondary Ip Address Get, 21267, CR, CP/VAL/PRI/HSPD/PROFILE, lite, 
    CP Dormant Handoff Optimization Set, 20593, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP Dormant Handoff Optimization Get, 20594, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP Data SCRM Enable Set, 20595, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP Data SCRM Enable Get, 20596, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP Data Throttling Enable Set, 20597, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP Data Throttling Enable Get, 20598, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP VJ Compression Enable Set, 20599, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, disabled=1
    CP VJ Compression Enable Get, 20600, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP HSPD Data QNC Enabled Set, 20601, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP HSPD Data QNC Enabled Get, 20602, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP HSPD Data DDTM Enabled Set, 20603, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP HSPD Data DDTM Enabled Get, 20604, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP HSPD Data DO to 1X Enabled Set, 20605, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP HSPD Data DO to 1X Enabled Get, 20606, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP HSPD IS801 IPAddr Set, 20624, CR, CP/VAL/PRI/Location Services, 
    CP HSPD IS801 IPAddr Get, 20625, CR, CP/VAL/PRI/Location Services, 
    CP HSPD IS801 Port Number Set, 20626, CR, CP/VAL/PRI/Location Services, 
    CP HSPD IS801 Port Number Get, 20627, CR, CP/VAL/PRI/Location Services, 
    CP IS801 UserID Set, 20628, CR, CP/VAL/PRI/Location Services, lite, 
    CP IS801 UserID Get, 20629, CR, CP/VAL/PRI/Location Services, lite, 
    CP IS801 PassWord Set, 20630, CR, CP/VAL/PRI/Location Services, lite, 
    CP IS801 PassWord Get, 20631, CR, CP/VAL/PRI/Location Services, lite, disabled=1
    CP IS801 Called Number Set, 20632, CR, CP/VAL/PRI/Location Services, lite, 
    CP IS801 Called Number Get, 20633, CR, CP/VAL/PRI/Location Services, lite, 
    CP HSPD Data All Set, 20640, CR, CP/VAL/PRI/HSPD, lite, 
    CP HSPD Data All Get, 20641, CR, CP/VAL/PRI/HSPD, lite, 
    CP Mobile IP Mode Set, 20642, CR, CP/VAL/PRI/HSPD, lite, 
    CP Mobile IP Mode Get, 20643, CR, CP/VAL/PRI/HSPD, lite, 
    CP Preferred Radio Config Set, 20644, CR, CP/VAL/PRI/HSPD, lite, 
    CP Preferred Radio Config Get, 20645, CR, CP/VAL/PRI/HSPD, lite, 
    CP Packet Dial String Set, 20646, CR, CP/VAL/PRI/HSPD, lite, 
    CP Packet Dial String Get, 20647, CR, CP/VAL/PRI/HSPD, lite, 
    CP HSPD Data MDR Mode Set, 20648, CR, CP/VAL/PRI/HSPD, lite, 
    CP HSPD Data MDR Mode Get, 20649, CR, CP/VAL/PRI/HSPD, lite, 
    CP AKA Password Set, 20650, CR, CP/VAL/PRI/HSPD, lite, 
    CP AKA Password Get, 20651, CR, CP/VAL/PRI/HSPD, lite, disabled=1
    CP AKA Profile Data Set, 20652, CR, CP/VAL/PRI/HSPD, lite, 
    CP AKA Profile Data Get, 20653, CR, CP/VAL/PRI/HSPD, lite, 
    CP HSPD Lock Get, 20654, CR, CP/VAL/PRI/HSPD, lite, 
    CP HSPD Lock Set, 20655, CR, CP/VAL/PRI/HSPD, lite, 
    CP HSPD Lock Code Set, 20656, CR, CP/VAL/PRI/HSPD, lite, 
    CP HSPD Data Auto Packet Detection Set, 20661, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP HSPD Data Auto Packet Detection Get, 20662, CR, CP/VAL/PRI/HSPD/Enable Disable, lite, 
    CP HSPD Data SO Set, 20659, CR, CP/VAL/PRI/HSPD, lite, 
    CP HSPD Data SO Get, 20660, CR, CP/VAL/PRI/HSPD, lite, 
    CP SMS Set AUTOREG Flag, 20657, CO, CP/VAL/SMS, 
    CP SMS Get AUTOREG Flag, 20658, CR, CP/VAL/SMS, 
    CP DO Parm Init, 20672, CR, CP/VAL/PRI/INIT, lite, 
    CP DO Hybrid Mode Set, 20673, CR, CP/VAL/PRI/Operating Mode, lite, 
    CP DO Hybrid Pref Mode Get, 20674, CR, CP/VAL/PRI/Operating Mode, lite, 
    CP DO Pref CC Cycle Set, 20675, CR, CP/VAL/PRI/DO, lite, 
    CP DO Pref CC Cycle Get, 20676, CR, CP/VAL/PRI/DO, lite, 
    CP DO Stream Configuration Set, 20677, CR, CP/VAL/PRI/DO, lite, 
    CP DO Stream Configuration Get, 20678, CR, CP/VAL/PRI/DO, lite, 
    CP DO Force Release0 Set, 20679, CR, CP/VAL/PRI/DO, lite, 
    CP DO Force Release0 Get, 20680, CR, CP/VAL/PRI/DO, lite, 
    CP DO Not Disturb Set, 20681, CR, CP/VAL/PRI/DO, lite, 
    CP DO Not Disturb Get, 20682, CR, CP/VAL/PRI/DO, lite, 
    CP DO FT MAC DRC Gating Set, 20683, CR, CP/VAL/PRI/DO, lite, 
    CP DO FT MAC DRC Gating Get, 20684, CR, CP/VAL/PRI/DO, lite, 
    CP DO LUP Unsolicited Set, 20685, CR, CP/VAL/PRI/DO, lite, 
    CP DO LUP Unsolicited Get, 20686, CR, CP/VAL/PRI/DO, lite, 
    CP DO Rx Diversity Ctrl Set, 20687, CR, CP/VAL/PRI/DO, lite, 
    CP DO Rx Diversity Ctrl Get, 20688, CR, CP/VAL/PRI/DO, lite, 
    CP DO Subtype Config Data Set, 20689, CR, CP/VAL/PRI/DO, lite, 
    CP DO Subtype Config Data Get, 20690, CR, CP/VAL/PRI/DO, lite, 
    CP DO Protocol Config Disable Set, 20691, CR, CP/VAL/PRI/DO, lite, 
    CP DO Extended Slot Cycle Set, 20692, CR, CP/VAL/PRI/DO, lite, 
    CP DO Extended Slot Cycle Get, 20693, CR, CP/VAL/PRI/DO, lite, 
    CP DO Periodical Search Cycle Set, 20694, CR, CP/VAL/PRI/DO, lite, 
    CP DO Periodical Search Cycle Get, 20695, CR, CP/VAL/PRI/DO, lite, 
    CP HSPD Dormant Timer Set, 20696, CR, CP/VAL/PRI/HSPD, lite, 
    CP HSPD Dormant Timer Get, 20697, CR, CP/VAL/PRI/HSPD, lite, 
    CP CT DO Default Band Set, 20698, CR, CP/VAL/PRI/DO, lite, 
    CP CT DO Default Band Get, 20699, CR, CP/VAL/PRI/DO, lite, 
    CP HSPD Network Or Relay Mode Set, 20700, CR, CP/VAL/PRI/HSPD, lite, 
    CP HSPD Network Or Relay Mode Get, 20701, CR, CP/VAL/PRI/HSPD, lite, 
    CP DO Pref Mode Set, 20702, CR, CP/VAL/PRI/Operating Mode, lite, 
    CP DO Pref Mode Get, 20703, CR, CP/VAL/PRI/Operating Mode, lite, 
    CP DO Hybrid Mode Get, 20704, CR, CP/VAL/PRI/Operating Mode, lite, 
    CP KDDI DO Retry Timer Set, 20705, CR, CP/VAL/PRI/HSPD, lite, 
    CP KDDI DO Retry Timer Get, 20706, CR, CP/VAL/PRI/HSPD, lite, 
    CP HSPD OMADM Dormant Timer Set, 20707, CR, CP/VAL/PRI/HSPD, lite, 
    CP HSPD OMADM Dormant Timer Get, 20708, CR, CP/VAL/PRI/HSPD, lite, 
    CP DO eHRPD Mode Set, 20720, CR, CP/VAL/PRI/eHRPD, lite, 
    CP DO eHRPD Mode Get, 20721, CR, CP/VAL/PRI/eHRPD, lite, 
    CP SBMG Branded mode Set, 20724, CR, CP/VAL/PRI/SBMG, lite, 
    CP SBMG Branded mode Get, 20725, CR, CP/VAL/PRI/SBMG, lite, 
    CP VAL PSW Parm Set Esn Meid, 20736, CR, CP/VAL/PRI/MS Indicators, lite, disabled=1
    CP VAL PSW Parm Get Esn Meid, 20737, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Set Spc, 20738, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Get Spc, 20739, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Set Akey, 20740, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Get Akey, 20741, CR, CP/VAL/PRI/NAM, lite, disabled=1
    CP VAL PSW Parm Set Prev, 20744, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Get Prev, 20745, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Set Positive Sid Nid List, 20746, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Get Positive Sid Nid List, 20747, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Set Negative Sid Nid List, 20748, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Get Negative Sid Nid List, 20749, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Set Pri Sec Ch, 20750, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Get Pri Sec Ch, 20751, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Set System Select, 20752, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Get System Select, 20753, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Set Slot Cycle Index, 20754, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Get Slot Cycle Index, 20755, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Set Mdn, 20756, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Get Mdn, 20757, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Set Prl Enable, 20758, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Get Prl Enable, 20759, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Set Home Sys Registration, 20760, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Get Home Sys Registration, 20761, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Set Foreign Sid Registration, 20762, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Get Foreign Sid Registration, 20763, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Set Foreign Nid Registration, 20764, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Get Foreign Nid Registration, 20765, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Set Access Overload Class, 20766, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Get Access Overload Class, 20767, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Set Cdma Pref Band, 20768, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Get Cdma Pref Band, 20769, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Set Cdma Pref Aorb, 20770, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Get Cdma Pref Aorb, 20771, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Set Scm, 20772, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Get Scm, 20773, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Set Prl Info, 20774, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Get Prl Info, 20775, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Set OTAPA Enable, 20776, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Get OTAPA Enable, 20777, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Set OTA Powerup Mode, 20778, CR, CP/VAL/PRI/NAM, 
    CP VAL PSW Parm Get OTA Powerup Mode, 20779, CR, CP/VAL/PRI/NAM, 
    CP VAL PSW Parm Set IMSI S1, 20780, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Get IMSI S1, 20781, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Set IMSI S2, 20782, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Get IMSI S2, 20783, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Set Spc Change Enable, 20784, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Get Spc Change Enable, 20785, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Set Spasm Enable, 20786, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Get Spasm Enable, 20787, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Set Sid Nid List Sp, 20788, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Get Sid Nid List Sp, 20789, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Set Distance Based Parms, 20790, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Get Distance Based Parms, 20791, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Set Msid, 20742, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Get Msid, 20743, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Set Encoded Msid, 20792, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Get Encoded Msid, 20793, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Set Enable Ota, 20802, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Get Enable Ota, 20803, CR, CP/VAL/PRI/NAM, lite, 
    CP VAL PSW Parm Set Pref Home MO SO, 20804, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Get Pref Home MO SO, 20805, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Set Pref Roam MO SO, 20806, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Get Pref Roam MO SO, 20807, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Set Pref Home MT SO, 20808, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Get Pref Home MT SO, 20809, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Set A21 MS Subs Info, 20810, CR, CP/VAL/PRI/MS Indicators, 
    CP VAL PSW Parm Get A21 MS Subs Info, 20811, CR, CP/VAL/PRI/MS Indicators, 
    CP Slotted Mode Allowed Set, 20830, CR, CP/VAL/PRI/Operating Mode, lite, 
    CP Slotted Mode Allowed Get, 20812, CR, CP/VAL/PRI/Operating Mode, lite, 
    CP VAL PSW Parm Set Voice Service Allowed, 20813, CR, CP/VAL/PRI/MS Indicators, 
    CP VAL PSW Parm Get Voice Service Allowed, 20814, CR, CP/VAL/PRI/MS Indicators, 
    CP VAL PSW Parm Set Roam Setting Domestic Voice, 20815, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Get Roam Setting Domestic Voice, 20816, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Set Roam Setting Domestic Data, 20817, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Get Roam Setting Domestic Data, 20818, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Set Roam Setting International Voice, 20819, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Get Roam Setting International Voice, 20820, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Set Roam Setting International Data, 20821, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Get Roam Setting International Data, 20822, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL PSW Parm Set Service Option Support, 20823, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Get Service Option Support, 20824, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Set Simulated QPCH Enabled, 20826, CR, CP/VAL/PRI/PHY 1X Settings, 
    CP VAL PSW Parm Get Simulated QPCH Enabled, 20827, CR, CP/VAL/PRI/PHY 1X Settings, 
    CP VAL PSW Parm Set Dynamic QPCH Control, 20828, CR, CP/VAL/PRI/PHY 1X Settings, 
    CP VAL PSW Parm Get Dynamic QPCH Control, 20829, CR, CP/VAL/PRI/PHY 1X Settings, 
    CP VAL PSW Parm Set Diversity Support, 20825, CR, CP/VAL/PRI/PHY 1X Settings, 
    CP VAL PSW Parm Get Diversity Support, 20832, CR, CP/VAL/PRI/PHY 1X Settings, 
    CP VAL PSW Parm Set QPCH CCI Enabled, 20833, CR, CP/VAL/PRI/MS Indicators, 
    CP VAL PSW Parm Get QPCH CCI Enabled, 20834, CR, CP/VAL/PRI/MS Indicators, 
    CP VAL PSW Parm Set 1xAdv Enabled, 20835, CR, CP/VAL/PRI/PHY 1X Settings, 
    CP VAL PSW Parm Get 1xAdv Enabled, 20836, CR, CP/VAL/PRI/PHY 1X Settings, 
    CP VAL PSW Parm Set SO73 Control, 20837, CR, CP/VAL/PRI/MS Indicators, 
    CP VAL PSW Parm Get SO73 Control, 20838, CR, CP/VAL/PRI/MS Indicators, 
    CP VAL PSW Parm Set DFS EcIo Thresh, 20839, CR, CP/VAL/PRI/PHY 1X Settings, 
    CP VAL PSW Parm Get DFS EcIo Thresh, 20840, CR, CP/VAL/PRI/PHY 1X Settings, 
    CP VAL PSW Parm Set IC Mode, 20841, CR, CP/VAL/PRI/PHY 1X Settings, 
    CP VAL PSW Parm Get IC Mode, 20842, CR, CP/VAL/PRI/PHY 1X Settings, 
    CP VAL PSW Parm Set Alternate PN Mode, 20843, CR, CP/VAL/PRI/PHY 1X Settings, 
    CP VAL PSW Parm Get Alternate PN Mode, 20844, CR, CP/VAL/PRI/PHY 1X Settings, 
    CP VAL PSW Parm Set MOB_FIRM_REV, 20845, CR, CP/VAL/PRI/MS Indicators, lite, disabled=1
    CP VAL PSW Parm Get MOB_FIRM_REV, 20846, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP VAL PSW Parm Set MOB_MODEL, 20847, CR, CP/VAL/PRI/MS Indicators, lite, disabled=1
    CP VAL PSW Parm Get MOB_MODEL, 20848, CR, CP/VAL/PRI/MS Indicators, lite, 
    CP Init UI Misc Database, 21000, CR, CP/VAL/PRI/INIT, lite, 
    CP VAL SMS Over IMS Set, 21088, CO, CP/VAL/PRI/SMS Over IMS, lite, 
    CP VAL SMS Over IMS Get, 21089, CR, CP/VAL/PRI/SMS Over IMS, lite, 
    CP VAL UICC Parm Set Factory Mode, 21090, CR, CP/VAL/PRI/Operating Mode, 
    CP VAL UICC Parm Get Factory Mode, 21091, CR, CP/VAL/PRI/Operating Mode, 
    CP VAL SYS Parm Set Band Class, 21504, CR, CP/VAL/PRI/SYS, lite, 
    CP VAL SYS Parm Get Band Class, 21505, CR, CP/VAL/PRI/SYS, lite, 
    CP VAL SYS Parm Set Sub Class, 21506, CR, CP/VAL/PRI/SYS, lite, 
    CP VAL SYS Parm Get Sub Class, 21507, CR, CP/VAL/PRI/SYS, lite, 
    CP VAL DO Parm Set Dfs Idle Interval, 21508, CR, CP/VAL/PRI/DO, 
    CP VAL DO Parm Get Dfs Idle Interval, 21509, CR, CP/VAL/PRI/DO, 
    CP VAL DO Parm Set Dfs Conn Interval, 21510, CR, CP/VAL/PRI/DO, 
    CP VAL DO Parm Get Dfs Conn Interval, 21511, CR, CP/VAL/PRI/DO, 
    CP VAL DO Parm Set Dfs Idle NumChan, 21512, CR, CP/VAL/PRI/DO, 
    CP VAL DO Parm Get Dfs Idle NumChan, 21513, CR, CP/VAL/PRI/DO, 
    CP VAL DO Parm Set Dfs Conn NumChan, 21514, CR, CP/VAL/PRI/DO, 
    CP VAL DO Parm Get Dfs Conn NumChan, 21515, CR, CP/VAL/PRI/DO, 
    CP VAL DO Parm Set Dfs Idle EcIo Thresh, 21516, CR, CP/VAL/PRI/DO, 
    CP VAL DO Parm Get Dfs Idle EcIo Thresh, 21517, CR, CP/VAL/PRI/DO, 
    CP VAL DO Parm Set Dfs Conn EcIo Thresh, 21518, CR, CP/VAL/PRI/DO, 
    CP VAL DO Parm Get Dfs Conn EcIo Thresh, 21519, CR, CP/VAL/PRI/DO, 
    CP VAL CSS Mark Current 1X System As Negative, 23040, CO, CP/VAL/CSS, 
    CP VAL CSS Parm Set DO OOSA Scanning Timer, 23043, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Get DO OOSA Scanning Timer, 23044, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Set 1X T_BSR Duration, 23045, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Get 1X T_BSR Duration, 23046, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Set 1X Avoidance Duration, 23047, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Get 1X Avoidance Duration, 23048, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Set DO T_BSR Duration, 23049, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Get DO T_BSR Duration, 23050, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Set Manual Avoid Sid, 23051, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Get Manual Avoid Sid, 23052, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Set MRU Channel, 23053, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Get MRU Channel, 23054, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL GMSS Parm Set OpMode, 23055, CR, CP/VAL/PRI/GMSS, lite, 
    CP VAL GMSS Parm Get OpMode, 23056, CR, CP/VAL/PRI/GMSS, lite, 
    CP VAL GMSS Parm Set OOS Scan Timeout, 23057, CR, CP/VAL/PRI/GMSS, lite, 
    CP VAL GMSS Parm Get OOS Scan Timeout, 23058, CR, CP/VAL/PRI/GMSS, lite, 
    CP VAL GMSS Parm Set OOS Sleep Time, 23059, CR, CP/VAL/PRI/GMSS, lite, 
    CP VAL GMSS Parm Get OOS Sleep Time, 23060, CR, CP/VAL/PRI/GMSS, lite, 
    CP VAL GMSS Parm Set Scan Pref Mode, 23061, CR, CP/VAL/PRI/GMSS, lite, 
    CP VAL GMSS Parm Get Scan Pref Mode, 23062, CR, CP/VAL/PRI/GMSS, lite, 
    CP VAL GMSS Parm Set PsRegRsp Timeout, 23063, CR, CP/VAL/PRI/GMSS, lite, 
    CP VAL GMSS Parm Get PsRegRsp Timeout, 23064, CR, CP/VAL/PRI/GMSS, lite, 
    CP VAL GMSS Parm Set PsRegMostPrefRat Wait Timeout, 23065, CR, CP/VAL/PRI/GMSS, lite, 
    CP VAL GMSS Parm Get PsRegMostPrefRat Wait Timeout, 23066, CR, CP/VAL/PRI/GMSS, lite, 
    CP VAL CSS Parm Set 1x MPSS Pilot Thresh High Rssi, 23041, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Get 1x MPSS Pilot Thresh High Rssi, 23042, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Set 1x MPSS Pilot Thresh Low Rssi, 23067, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Get 1x MPSS Pilot Thresh Low Rssi, 23068, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Set 1x MPSS High-Low Rssi Thresh, 23069, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Get 1x MPSS High-Low Rssi Thresh, 23070, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Set 1x MPSS Pilot Thresh Slope, 23071, CR, CP/VAL/PRI/CSS, lite, 
    CP VAL CSS Parm Get 1x MPSS Pilot Thresh Slope, 23072, CR, CP/VAL/PRI/CSS, lite, 
    CP_VAL_HTTP_Session_Create, 23296, CR, CP/VAL/URL, 
    CP_VAL_FTP_Session_Create, 23297, CR, CP/VAL/URL, 
    CP VAL GPS Open Device HW Init, 24576, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Get Position, 24577, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Close Device, 24578, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Start Fix, 24579, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Query Fix, 24580, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Stop Fix, 24581, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Configure Fix Mode, 24582, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Configure Fix Rate, 24583, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Configure QOS, 24584, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Write Server Configuration, 24585, CR, CP/VAL/PRI/Location Services, lite, 
    CP VAL GPS Read Server Configuration, 24616, CR, CP/VAL/PRI/Location Services, lite, 
    CP VAL GPS Enable Security, 24586, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Write Security Configuration, 24587, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Read Security Configuration, 24588, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Read Encrypt Configuration, 24589, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Get LBS Privacy Setting, 24590, CR, CP/VAL/PRI/Location Services, lite, 
    CP VAL LBS Set LBS Privacy Setting, 24594, CR, CP/VAL/PRI/Location Services, lite, 
    CP VAL GPS Get Base SSD, 24591, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Set Rand Period, 24592, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Reset Assist, 24593, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Tcp Conn Test, 24595, CO, CP/VAL/LBS, lite, 
    CP VAL GPS Tcp Close Test, 24596, CO, CP/VAL/LBS, lite, 
    CP VAL GPS Nmea Cfg Set, 24597, CO, CP/VAL/LBS, lite, 
    CP VAL GPS Nmea Cfg Get, 24598, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Restart Fix, 24599, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Set Security, 24600, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Configure Technology, 24601, CR, CP/VAL/LBS, lite, 
    CP VAL VGPS Cfg Set, 24602, CO, CP/VAL/LBS, 
    CP VAL VGPS Cfg Get, 24603, CR, CP/VAL/LBS, 
    CP VAL VGPS Start, 24604, CO, CP/VAL/LBS, 
    CP VAL GPS Write Offset Info, 24605, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Read Offset Info, 24606, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Set Base SSD, 24607, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Get Fix Mode, 24608, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Set Start Mode, 24609, CR, CP/VAL/LBS, lite, 
    CP VAL GPS NMEA Output Settings, 24610, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Configure Fix Rate Get, 24611, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Set CT Mpc Setting, 24612, CR, CP/VAL/LBS, lite, 
    CP VAL MPC PPP UserName PassWord, 24613, CR, CP/VAL/LBS, lite, 
    CP VAL GPS State Get, 24614, CR, CP/VAL/LBS, lite, 
    CP VAL GPS Test Mode Set, 24615, CR, CP/VAL/LBS, lite, 
    CP VAL GPS RfDelay Set, 24617, CR, CP/VAL/LBS, 
    CP Mass Storage Mode Set, 20800, CR, CP/VAL/Mass Storage, lite, 
    CP Mass Storage Mode Get, 20801, CR, CP/VAL/Mass Storage, lite, 
    CP VAL IMS CONN SETUP, 22000, CO, CP/VAL/IMS, 
    CP VAL IMS CONN RELEASE, 22001, CO, CP/VAL/IMS, 
    CP VAL IMS APP CONN SETUP, 22002, CO, CP/VAL/IMS, 
    CP VAL IMS APP CONN RELEASE, 22003, CO, CP/VAL/IMS, 
    CP VAL IMS RESOURCE SET, 22004, CO, CP/VAL/IMS, 
    CP VAL IP Counters Reset, 22050, CO, CP/VAL/IP Counters, 
    CP VAL IP Counters Peek, 22051, CR, CP/VAL/IP Counters, 
    CP Val RTC Init, 1033, CR, CP/VAL/RTC, 
    CP Val RTC Time Get, 1034, CR, CP/VAL/RTC, 
    CP Val RTC Time Set, 1035, CR, CP/VAL/RTC, 
    CP Val RTC Alarm Get, 1036, CR, CP/VAL/RTC, 
    CP Val RTC Alarm Set, 1037, CR, CP/VAL/RTC, 
    CP Val RTC ASEC Set, 1038, CR, CP/VAL/RTC, 
    CP Reset RLP Event Stats, 1340, CO, CP/RLP, lite, 
    CP Reset RLP Frame Counts, 1341, CO, CP/RLP, lite, 
    CP Peek RLP Frame Stats, 1342, CR, CP/RLP, lite, 
    CP Power, 1301, CO, CP/UI, lite, 
    CP Set DTMF Type, 1171, CO, CP/UI, lite, 
    CP Set Privacy Mode, 1172, CO, CP/UI, lite, 
    CP Read data from Dbm, 1500, CO, CP/UI, 
    CP UI Set DeepSleep Time Slice, 1501, CO, CP/UI, 
    CP UI Set Ringer File, 1502, CO, CP/UI/Audio, 
    CP UI Audio Video File, 1503, CR, CP/UI/Audio, 
    CP UI Get Music Play Time, 1504, CR, CP/UI/Audio, 
    CP UI Music Record, 1505, CR, CP/UI/Audio, 
    CP UI Start Refurbish Test, 1506, CO, CP/UI/Test, 
    CP UI Stop Refurbish Test, 1507, CO, CP/UI/Test, 
    CP UI Refurbish Test Increase Pwr, 1508, CO, CP/UI/Test, 
    CP UI Refurbish Test Decrease Pwr, 1509, CO, CP/UI/Test, 
    CP UI TTY Rev Chan, 1510, CO, CP/UI/Audio, 
    CP UI TTY Fwd Chan, 1511, RO, CP/UI/Audio, 
    CP UI TTY Enable Fwd Chan, 1512, CR, CP/UI/Audio, 
    CP UI VAL Net Initialize, 1550, CO, CP/UI/VAL/HLW, 
    CP UI VAL Net PPP Open, 1551, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net PPP Close, 1552, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net PPP Dormant Req, 1553, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Get PPP Status, 1554, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Event Select, 1555, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Socket, 1556, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Connect, 1557, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Close, 1558, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Get Sock Status, 1559, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Recv, 1560, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Send, 1561, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Bind, 1562, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Listen, 1563, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Accept, 1564, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Send To, 1565, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Recv From, 1566, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Get Host By Name, 1567, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Inet Addr, 1568, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Get PPP Auth Parms, 1569, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Set PPP Auth Parms, 1570, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Get Dial Str Parms, 1571, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Set Dial Str Parms, 1572, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Set RLP Inact TMO Req, 1573, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Get RLP Setting, 1574, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Set RLP Setting, 1575, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Get IP Address, 1576, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Get DNS Server IP Addr, 1577, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Get Peer Name, 1578, CR, CP/UI/VAL/HLW, 
    CP UI VAL Net Set DNS Server IP Addr, 1579, CO, CP/UI/VAL/HLW, 
    CP UI VAL Initiate Call, 1600, CO, CP/UI/VAL/PSW, 
    CP UI VAL Answer Call, 1601, CO, CP/UI/VAL/PSW, 
    CP UI VAL Hangup Call, 1602, CO, CP/UI/VAL/PSW, 
    CP UI VAL Change Akey, 1603, CO, CP/UI/VAL/PSW, 
    CP UI VAL Set PRL Enable, 1604, CO, CP/UI/VAL/PSW, 
    CP UI VAL Get Active NAM, 1605, CO, CP/UI/VAL/PSW, 
    CP UI VAL Set Active NAM, 1606, CO, CP/UI/VAL/PSW, 
    CP UI VAL Get Akey Checksum, 1607, CO, CP/UI/VAL/PSW, 
    CP UI VAL E911 Disable, 1608, CO, CP/UI/VAL/PSW, 
    CP UI VAL SMS Start Reg Service, 1609, CO, CP/UI/VAL/PSW/SMS, 
    CP UI VAL SMS Stop Reg Service, 1610, CO, CP/UI/VAL/PSW/SMS, 
    CP UI VAL SMS Set Storage, 1611, CR, CP/UI/VAL/PSW/SMS, 
    CP UI VAL SMS Send Text Message, 1612, CR, CP/UI/VAL/PSW/SMS, 
    CP UI VAL SMS Send PDU Message, 1613, CR, CP/UI/VAL/PSW/SMS, 
    CP UI VAL Get Phb Rec Params, 1650, CO, CP/UI/VAL/UIM, 
    CP UI VAL Get Phb Record, 1651, CO, CP/UI/VAL/UIM, 
    CP UI VAL Update Phb Record, 1652, CO, CP/UI/VAL/UIM, 
    CP UI VAL Erase Phb Record, 1653, CO, CP/UI/VAL/UIM, 
    CP UI VAL Get SMS Rec Params, 1654, CO, CP/UI/VAL/UIM, 
    CP UI VAL Get SMS Record, 1655, CO, CP/UI/VAL/UIM, 
    CP UI VAL Update SMS Record, 1656, CO, CP/UI/VAL/UIM, 
    CP UI VAL Erase SMS Record, 1657, CO, CP/UI/VAL/UIM, 
    CP UI VAL CHV Get Status, 1658, CR, CP/UI/VAL/UIM, 
    CP UI VAL CHV Verify, 1659, CR, CP/UI/VAL/UIM, 
    CP UI VAL CHV Change, 1660, CR, CP/UI/VAL/UIM, 
    CP UI VAL CHV Disable, 1661, CR, CP/UI/VAL/UIM, 
    CP UI VAL CHV Enable, 1662, CR, CP/UI/VAL/UIM, 
    CP UI VAL CHV Unblock, 1663, CR, CP/UI/VAL/UIM, 
    CP UI VAL Get Max MDN Rec Num, 1664, CR, CP/UI/VAL/UIM, 
    CP UI VAL Get MDN Rec, 1665, CR, CP/UI/VAL/UIM, 
    CP UI VAL Update MDN Rec, 1666, CR, CP/UI/VAL/UIM, 
    CP UI VAL Del MDN Rec, 1667, CR, CP/UI/VAL/UIM, 
    CP UI VAL UTK Profile Init, 1668, CO, CP/UI/VAL/UIM, 
    CP UI VAL UTK Exit, 1669, CO, CP/UI/VAL/UIM, 
    CP UI VAL UTK SMS Download, 1670, CO, CP/UI/VAL/UIM, 
    CP UI VAL UTK Select Menu, 1671, CO, CP/UI/VAL/UIM, 
    CP UI VAL UTK Comm Cmd Result, 1672, CO, CP/UI/VAL/UIM, 
    CP UI VAL UTK Get Input Done, 1673, CO, CP/UI/VAL/UIM, 
    CP Get Alert Status, 1765, CR, CP/UI, lite, 
    DSPM Fault, 2000, RO, , lite, 
    DSPM Printf, 2001, RO, , lite, 
    DSPM Alive, 2002, RO, , lite, 
    DSPM Loopback, 2100, CR, Debug, lite, 
    DSPM DBuf Loopback, 2101, CR, Debug, lite, 
    DSPM Trace, 2200, CRM, DSPM/Trace, lite, 
    DSPM Spy, 2201, CRM, DSPM/Spy, lite, 
    DSPM Peek, 2202, CR, DSPM, lite, 
    DSPM Poke, 2203, CR, DSPM, lite, 
    DSPM Memory Test, 2204, CR, DSPM, lite, 
    DSPM Version, 2205, CR, DSPM, lite, 
    DSPM Fault Ctrl, 2206, CO, DSPM, lite, 
    DSPM Heart Beat Ctrl, 2207, CR, DSPM, lite, 
    DSPM Code Peek, 2208, CR, DSPM, lite, 
    DSPM Code Poke, 2209, CR, DSPM, lite, 
    DSPM Code Memory Test, 2210, CR, DSPM, lite, 
    DSPM Bitwise Operation, 2211, CR, DSPM, lite, 
    DSPM Fwd Chnl Pwr Puncture, 2250, CR, DSPM/DSPM Forward Path, lite, 
    DSPM Fwd Chnl Scramble, 2251, CR, DSPM/DSPM Forward Path, lite, 
    DSPM Start Test, 2300, CO, DSPM, 
    DSPM Sim, 2301, CRM, DSPM/DSPM Sim, 
    DSPM Rev Mixed Signal Parms, 2400, CO, DSPM/Rev, 
    DSPM Fpc Algorithm Parms, 2401, CO, DSPM/Fpc, 
    DSPM Sch Algorithm Parms, 2402, CO, DSPM/Sch, 
    DSPM Rfc RxAgc Alg Parms, 2403, CO, DSPM/Rfc, 
    DSPM Fwd Rda HMetric Parms, 2404, CO, DSPM/Fwd, 
    DSPM Fwd Rda PMetric Parms, 2405, CO, DSPM/Fwd, 
    DSPM Fwd Fngr Noise Norm Parms, 2406, CO, DSPM/Fwd, 
    DSPV Fault, 3000, RO, , lite, 
    DSPV Printf, 3001, RO, , lite, 
    DSPV Alive, 3002, RO, , lite, 
    DSPE Alive, 3003, RO, , 
    DSPV Loopback, 3100, CR, Debug, lite, 
    DSPV Trace, 3200, CRM, DSPV/Trace, lite, 
    DSPV Spy, 3201, CRM, DSPV/Spy, lite, 
    DSPV Peek, 3202, CR, DSPV/MON, lite, 
    DSPV Poke, 3203, CR, DSPV/MON, lite, 
    DSPV Memory Test, 3204, CR, DSPV/MON, lite, 
    DSPV Version, 3205, CR, DSPV/MON, lite, 
    DSPV Fault Ctrl, 3206, CO, DSPV/MON, lite, 
    DSPV Heart Beat Ctrl, 3207, CR, DSPV/MON, lite, 
    DSPV Code Peek, 3208, CR, DSPV/MON, lite, 
    DSPV Code Poke, 3209, CR, DSPV/MON, lite, 
    DSPV Code Memory Test, 3210, CR, DSPV/MON, lite, 
    DSPV Bitwise Operation, 3211, CR, DSPV/MON, lite, 
    DSPV Mixed Sig Reg Init, 3212, CO, DSPV/MON, 
    DSPV Jtag Pwr Cfg, 3213, CO, DSPV/MON, 
    DSPV Set Mic Fif Mode, 3300, CO, DSPV/DSPV Microphone Path, 
    DSPV Set Mic Ans Mode, 3302, CO, DSPV/DSPV Microphone Path, 
    DSPV Send Mic Ans Cfg Params, 3303, CO, DSPV/DSPV Microphone Path, 
    DSPV Set Mic Bif Mode, 3304, CO, DSPV/DSPV Microphone Path, 
    DSPV Send Mic Bif Cfg Params, 3305, CO, DSPV/DSPV Microphone Path, 
    DSPV Set Mic Vol Scal Fctr, 3306, CO, DSPV/DSPV Microphone Path, lite, 
    DSPV Send Mpp Tone Gen Params, 3309, CO, DSPV/DSPV Microphone Path, lite, 
    DSPV Set Mic Voice Enc Max Rate, 3310, CO, DSPV/DSPV Microphone Path, lite, 
    DSPV Set Mic Voice Enc Min Rate, 3311, CO, DSPV/DSPV Microphone Path, lite, 
    DSPV Send Mic Sim Msg, 3313, CO, DSPV/DSPV Microphone Path, 
    DSPV Set Rev Ch SSO Config Msg, 3316, CO, DSPV/DSPV Microphone Path, 
    DSPV Send Spkr Fwd Ch Pckt Data, 3400, CO, DSPV/DSPV Speaker Path, 
    DSPV Send Spkr Voice Rec Pb Pckt Data, 3404, CO, DSPV/DSPV Speaker Path, 
    DSPV Send Spp Tone Gen Params, 3405, CO, DSPV/DSPV Speaker Path, lite, 
    DSPV Set Spkr Fif Mode, 3407, CO, DSPV/DSPV Speaker Path, 
    DSPV Send Spkr Fif Cfg Params, 3408, CO, DSPV/DSPV Speaker Path, 
    DSPV Send Spkr Vol Scal Fctr, 3409, CO, DSPV/DSPV Speaker Path, lite, 
    DSPV Set Fwd Ch SSO Config Msg, 3410, CO, DSPV/DSPV Speaker Path, 
    DSPV Set Audio Air Interface Mode, 3420, CO, DSPV/DSPV Audio Path, 
    DSPV Send Audio SSO Connect, 3421, CO, DSPV/DSPV Audio Path, lite, 
    DSPV Send Audio SSO Disconnect, 3422, CO, DSPV/DSPV Audio Path, lite, 
    DSPV Send Audio SSO Ctrl Params, 3423, CO, DSPV/DSPV Audio Path, lite, 
    DSPV Send Audio ISR Scal Fctr, 3424, CO, DSPV/DSPV Audio Path, lite, 
    DSPV Set Audio Loopback Mode, 3425, CO, DSPV/DSPV Audio Path, lite, 
    DSPV Set Audio Aec Mode, 3428, CO, DSPV/DSPV Audio Path, 
    DSPV Send Audio Aec Cfg Params, 3429, CO, DSPV/DSPV Audio Path, 
    DSPV Set Audio Voice Record Playback Mode, 3430, CO, DSPV/DSPV Audio Path, 
    DSPV Send Spkr Sim Msg, 3432, CO, DSPV/DSPV Audio Path, 
    DSPV Send Audio Tty Mode Msg, 3435, CO, DSPV/DSPV Audio Path, 
    DSPV Send Audio Tty Cfg Parms Msg, 3436, CO, DSPV/DSPV Audio Path, 
    DSPV Send Audio Vap Cfg Parms Msg, 3437, CO, DSPV/DSPV Audio Path, 
    DSPV Send Audio Compression Cfg Parms Msg, 3438, CO, DSPV/DSPV Audio Path, 
    DSPV Send Audio Compression Mode, 3439, CO, DSPV/DSPV Audio Path, 
    DSPV Send Audio Cfg Query, 3440, CR, DSPV/DSPV Audio Path, 
    DSPV Send Audio Aec Aux Cfg Params, 3441, CO, DSPV/DSPV Audio Path, 
    DSPV Send Audio Path Cfg, 3442, CR, DSPV/DSPV Audio Path, 
    DSPV Combo Volume Scal Fctr, 3443, CR, DSPV/DSPV Audio Path, 
    DSPV Voice Frame Resync, 3444, CR, DSPV/DSPV Audio Path, 
    DSPV Rngr Init, 3600, CO, DSPV/DSPV Rngr Path, 
    DSPV Rngr Mode, 3601, CO, DSPV/DSPV Rngr Path, 
    DSPV Rngr Config, 3602, CO, DSPV/DSPV Rngr Path, 
    DSPV Rngr Vol Scal Fctr, 3603, CO, DSPV/DSPV Rngr Path, 
    DSPV Rngr Ldspkr Vol Scal Fctr, 3604, CO, DSPV/DSPV Rngr Path, 
    DSPV App Vol Scal Fctr, 3606, CO, DSPV/DSPV App, 
    DSPV App Info Query, 3607, CR, DSPV/DSPV App, 
    CP PAC Test Debug1, 4900, CO, CP/PAC, 
    CP PAC Test Debug2, 4901, CO, CP/PAC, 
    CP PAC Test Debug3, 4902, CO, CP/PAC, 
    CP PAC Test Debug4, 4903, CO, CP/PAC, 
    CP PAC Test Debug5, 4904, CO, CP/PAC, 
    CP LEC Tst Gps Hw Power On, 5000, CO, CP/LEC, 
    CP LEC Tst Gps Hw Power Off, 5001, CO, CP/LEC, 
    CP LEC Tst Gps Hw Reset, 5002, CO, CP/LEC, 
    CP LEC Tst Gps Engine Start, 5003, CO, CP/LEC, 
    CP LEC MSBasedStart, 5105, CO, CP/LEC, 
    CP LEC MSBasedGetAssist, 5106, CO, CP/LEC, 
    CP LEC Tst Gps Ref Freq Adj Msg, 5108, CO, CP/LEC, 
    CP LEC Tst Gps Factory Get Rf CNo, 5109, CR, CP/LEC, 
    CP LEC Tst Gps Factory Stop Rf CNo, 5110, CO, CP/LEC, 
    CP LEC Tst Gps Set Calibration Mode, 5111, CO, CP/LEC, 
    CP LEC Tst Gps Read Write Cal Parms, 5112, CR, CP/LEC, 
    CP LEC Tst Gps Read Write NV Cal Parms, 5113, CR, CP/LEC, 
    CP LEC Tst Gps Set 1x DO Delay, 5114, CR, CP/LEC, 
    CP LEC Tst Gps Pgps On Off, 5115, CR, CP/LEC, 
    CP LEC Tst Gps Pgps Debug1, 5116, CO, CP/LEC, 
    CP LEC Tst Gps Pgps Debug2, 5117, CO, CP/LEC, 
    CP LEC Tst UserMode Time, 5118, CR, CP/LEC, 
    CP LEC Tst Lab Test Mode, 5119, CO, CP/LEC, 
    CP LEC Power Save Time, 5121, CR, CP/LEC, 
    CP LEC Tst GNS7560 PGNV Cmds, 5100, CO, CP/LEC/GNS7560, 
    CP LEC Tst GNS7560 API Tst Cmds, 5101, CO, CP/LEC/GNS7560, 
    CP LEC Tst GNS7560 Version, 5102, CR, CP/LEC/GNS7560, 
    CP LEC Tst GNS7560 Get Config, 5103, CR, CP/LEC/GNS7560, 
    CP LEC Tst GNS7560 Set Config, 5104, CR, CP/LEC/GNS7560, 
    CP EEP Tst FSM_Read, 5200, CO, CP/EEP, 
    CP EEP Tst FSM_Write, 5201, CO, CP/EEP, 
    CP EEP Tst Get RxN Version, 5202, CO, CP/EEP, 
    CP EEP Tst Seed Create from TSeed, 5203, CO, CP/EEP, 
    CP EEP Tst Seed Check Seed File, 5204, CO, CP/EEP, 
    CP EEP Tst Seed Delete Seed File, 5205, CO, CP/EEP, 
    CP EEP Tst EEph Start Propagator, 5206, CO, CP/EEP, 
    CP EEP Tst EEph Stop Propagator, 5207, CO, CP/EEP, 
    CP EEP Tst EEph Check Eeph Files, 5208, CO, CP/EEP, 
    CP EEP Tst EEph Delete Eeph Files, 5209, CO, CP/EEP, 
    CP RLP Forward Data Indication, 5300, CO, CP/IOP, 
    CP Set Data Thr, 5301, CO, CP/IOP, 
    CP Chan OnOff, 5302, CR, CP/IOP, 
    CP Chan Query, 5303, CR, CP/IOP, 
    CP Chan Switch, 5304, CR, CP/IOP, 
    CP Dpram DbgInfo, 5305, CR, CP/IOP, 
    CP Dpram DmaCtrl, 5306, CO, CP/IOP, 
    CP SDIO Slave DbgInfo, 5307, CR, CP/IOP, 
    CP LTEDO Uart DbgInfo, 5308, CR, CP/IOP, 
    CP Tx StatusMch Ctrl, 5309, CO, CP/IOP, 
    CP ESPI DbgInfo, 5310, CR, CP/IOP, 
    CP Shmem DbgInfo, 5311, CR, CP/IOP, 
    CP Tst CSFB Set Buffer, 5400, CO, CP/TST/CSFB, 
    CP Tst CSFB Parm Rsp, 5401, CO, CP/TST/CSFB, 
    CP Tst CSFB Sib8, 5402, CO, CP/TST/CSFB, 
    CP Tst CSFB Gcsna DL, 5403, CO, CP/TST/CSFB, 
    CP Tst CSFB Meas Req, 5404, CO, CP/TST/CSFB, 
    CP Tst CSFB HO Eutra Prep, 5405, CO, CP/TST/CSFB, 
    CP Tst CSFB Mob From Eutra, 5406, CO, CP/TST/CSFB, 
    CP Tst Hwd Searcher, 5420, CR, CP/TST/Searcher, 
    CP Tst Hwd System Time, 5421, CR, CP/TST/SysTime, 
    CP Tst Hwd Rx Filter and Rx AGC, 5422, CR, CP/TST/RxADC, 
    CP Tst Hwd Tx Data Path, 5423, CR, CP/TST/TxDataPath, 
    CP Tst Hwd Rx Data Path Static, 5424, CR, CP/TST/RxDataPath, 
    CP Tst Hwd Rx Data Path Dynamic, 5425, CR, CP/TST/RxDataPath, 
    CP Tst Hwd MAC path, 5426, CR, CP/TST/MAC, 
    CP Tst Hwd DRC Generator, 5427, CR, CP/TST/DRC, 
    CP Tst Hwd AFC, 5428, CR, CP/TST/AFC, 
    CP Tst Hwd SysTime Ev CpInt Src, 5429, CR, CP/TST/SystemTime, 
    CP Tst Hwd SysTime Ev Mdm Status, 5430, CR, CP/TST/SystemTime, 
    CP Tst Hwd SysTime Ev Init Load, 5431, CR, CP/TST/SystemTime, 
    CP Tst Hwd SysTime Ev Adj Sync Time, 5432, CR, CP/TST/SystemTime, 
    CP Tst Hwd SysTime Ev Adj TMTRK, 5433, CR, CP/TST/SystemTime, 
    CP Tst Hwd SysTime Ev ShortCode Seq Gen, 5434, CR, CP/TST/SystemTime, 
    CP Tst Hwd SysTime Ev LongCode Seq Gen, 5435, CR, CP/TST/SystemTime, 
    CP Tst Hwd DMA Module, 5436, CR, CP/TST/DMA, 
    CP Tst Hwd DMA MDM TX, 5437, CR, CP/TST/DMA, 
    CP Tst Hwd DMA MDM RX, 5438, CR, CP/TST/DMA, 
    CP Tst Hwd PPP HA Decoder 0, 5439, CO, CP/TST/PPP, 
    CP Tst Hwd PPP HA Decoder 1, 5440, CO, CP/TST/PPP, 
    CP Tst Hwd PPP HA Encoder 0, 5441, CO, CP/TST/PPP, 
    CP Tst Hwd PPP HA Encoder 1, 5442, CO, CP/TST/PPP, 
    CP Tst Hwd Mac Bit Detect Test, 5443, CO, CP/TST/MAC, 
    CP Tst Hwd RF SPI Tx Data Rate Test, 5444, CR, CP/TST/Peripheral/AutoTst/RFSPI/Tx_Data_Rate, 
    CP Tst Hwd RF SPI Delay Mode Send Test, 5445, CR, CP/TST/Peripheral/AutoTst/RFSPI/Delay_Mode_Send, 
    CP Tst Hwd RF SPI Imme Mode Send Test, 5446, CR, CP/TST/Peripheral/AutoTst/RFSPI/Imme_Mode_Send, 
    CP Tst Hwd RF SPI Imme Mode Receive Test, 5447, CR, CP/TST/Peripheral/AutoTst/RFSPI/Imme_Mode_Receive, 
    CP Tst Hwd RF SPI Timing Diagrams Test, 5448, CO, CP/TST/Peripheral/ManuTst/RFSPI/Timing_Diagrams, 
    CP Tst Hwd RF SPI Load Enable Test, 5449, CO, CP/TST/Peripheral/ManuTst/RFSPI/Load_Enable, 
    CP Tst Hwd RF SPI Virtual Mode Send Test, 5450, CO, CP/TST/Peripheral/ManuTst/RFSPI/Virtual_Mode_Send, 
    CP Tst Hwd RfTxOn CP DSPM Select, 5451, CO, CP/TST/Peripheral/ManuTst/RfTxOn/CP_DSPM_SEL, 
    CP Tst Hwd RfTxOn CP TXON Internal, 5452, CO, CP/TST/Peripheral/ManuTst/RfTxOn/CP_TXON_INT, 
    CP Tst Hwd RfTxOn CP TXON General, 5453, CO, CP/TST/Peripheral/ManuTst/RfTxOn/CP_TXON_GNL, 
    CP Tst Hwd RfTxOn CP TXON Delay, 5454, CO, CP/TST/Peripheral/ManuTst/RfTxOn/CP_TXON_DLY, 
    CP Tst Hwd RfTxOn CP RFON General, 5455, CO, CP/TST/Peripheral/ManuTst/RfTxOn/CP_RFON, 
    CP Tst Hwd MMSPI MSP Genl Config, 5456, CO, CP/TST/Peripheral/ManuTst/MMSPI/MSP_GENL, 
    CP Tst Hwd MMSPI MSP Ctrl Config, 5457, CO, CP/TST/Peripheral/ManuTst/MMSPI/MSP_CTRL, 
    CP Tst Hwd MMSPI MSP RxTx Test, 5458, CR, CP/TST/Peripheral/ManuTst/MMSPI/MSP_RxTx, 
    CP Tst NST Power Up, 990, CR, CP/TST/NST, lite, 
    CP Tst NST Transmit Traffic Channel, 991, CR, CP/TST/NST, lite, 
    CP Tst NST Exit Test Mode, 992, CR, CP/TST/NST, lite, 
    CP Tst NST List Set, 993, CR, CP/TST/NST, lite, 
    CP Tst NST Powerup Ack, 994, RO, CP/TST/NST, lite, 
    CP Tst NST Transmit Traffic Channel Ack, 995, RO, CP/TST/NST, lite, 
    CP Tst NST Exit Test Mode Ack, 996, RO, CP/TST/NST, lite, 
    CP UIM Raw Command, 5500, CR, CP/UIM, 
    CP UIM Select, 5501, CR, CP/UIM, 
    CP UIM Read Binary, 5502, CR, CP/UIM, 
    CP UIM Update Binary, 5503, CR, CP/UIM, 
    CP UIM Read Record, 5504, CR, CP/UIM, 
    CP UIM Update Record, 5505, CR, CP/UIM, 
    CP UIM BS Challenge, 5511, CR, CP/UIM, 
    CP UIM Confirm SSD, 5512, CR, CP/UIM, 
    CP UIM Run Cave, 5513, CR, CP/UIM, 
    CP UIM Generate Key VPM, 5514, CR, CP/UIM, 
    CP UIM Get CST, 5515, CR, CP/UIM, 
    CP UIM 3G AKA AUTH, 5516, CR, CP/UIM, 
    CP UIM 3G AKA READ EFKeysPS, 5517, CR, CP/UIM, 
    CP UIM 3G AKA UPDATE EFKeysPS, 5518, CR, CP/UIM, 
    CP UIM 3G SIP CHAP, 5519, CR, CP/UIM, 
    CP UIM 3G MIP MNHA AUTH, 5520, CR, CP/UIM, 
    CP UIM 3G MIP RRQ HASH, 5521, CR, CP/UIM, 
    CP UIM 3G MIP MNAAA AUTH, 5522, CR, CP/UIM, 
    CP UIM Get Status, 5530, CR, CP/UIM, 
    CP GPSVT ConsoleInput, 5600, CO, CP/LEC, 
    CP GPSVT AdcCapture, 5601, CO, CP/LEC, 
    CP HSC Test MPA RF Preempt Rsp, 8192, CO, CP/HSC/MPA, 
    CP HSC Test MPA RF Release Ind, 8193, CO, CP/HSC/MPA, 
    CP HSC Test MPA RF Norm Req, 8194, CO, CP/HSC/MPA, 
    CP HSC Test MPA RF Shutoff Rsp, 8195, CO, CP/HSC/MPA, 
    CP HSC Test SPDO Disable SPage, 8256, CO, CP/HSC/SPDO, 
    CP HSC Test SPDO Enable SPage, 8257, CO, CP/HSC/SPDO, 
    CP HSC Test SPDO Handoff Cmd, 8258, CO, CP/HSC/SPDO, 
    CP HSC Test SPDO Wake Cmd, 8259, CO, CP/HSC/SPDO, 
    CP HSC Test SPDO Sleep Cmd, 8260, CO, CP/HSC/SPDO, 
    CP HSC Test SPDO Srch Done, 8261, CO, CP/HSC/SPDO, 
    CP HSC Test SPDO Stop Ack, 8262, CO, CP/HSC/SPDO, 
    CP HSC Test SPDO Mini Acq Err, 8263, CO, CP/HSC/SPDO, 
    CP HSC Test SP1X Disable SPage, 8320, CO, CP/HSC/SP1X, 
    CP HSC Test SP1X Enable SPage, 8321, CO, CP/HSC/SP1X, 
    CP HSC Test SP1X Wake Cmd, 8322, CO, CP/HSC/SP1X, 
    CP HSC Test SP1X Sleep Cmd, 8323, CO, CP/HSC/SP1X, 
    CP HSC Test SP1X Srch Done, 8324, CO, CP/HSC/SP1X, 
    CP HSC Test SP1X Stop Ack, 8325, CO, CP/HSC/SP1X, 
    CP HSC Test SP1X Mini Acq Err, 8326, CO, CP/HSC/SP1X, 
    CP HSC Test CMD Resync DO, 8384, CO, CP/HSC/CMD, 
    CP HSC Test CMD Resync 1X, 8385, CO, CP/HSC/CMD, 
    CP HSC Test CMD Ssm Status, 8386, CO, CP/HSC/CMD, 
    CP HSC Test CMD RxShutOff, 8387, CO, CP/HSC/CMD, 
    CP HSC Test CMD RxActivate, 8388, CO, CP/HSC/CMD, 
    CP HSC Test CMD Dbg Mode, 8389, CO, CP/HSC/CMD, 
    CP HSC Test CMD Clk Cal, 8390, CO, CP/HSC/CMD, 
    CP HSC Test CMD Clk Cal Mode, 8391, CO, CP/HSC/CMD, 
    CP HSC Test CMD OOSA, 8392, CO, CP/HSC/CMD, 
    CP HSC Test Online Sleep Clock Calibration, 8393, CO, CP/HSC/CMD, 
    CP SLC STATE Get, 8576, CR, CP/SLC, lite, 
    CP SLC ETS Activate Msg, 8704, CO, CP/SLC, 
    CP SLC ETS STORED FILE CLOSE MSG, 8705, CO, CP/SLC, lite, 
    CP SLC ETS Scp Config Msg, 8832, CO, CP/SLC, 
    CP CLC INITACQ CMD, 9216, CO, CP/CLC, lite, 
    CP CLC CMD OPEN CONNECTION, 9217, CO, CP/CLC, 
    CP CLC CMD RELEASE CONNECTION, 9218, CO, CP/CLC, 
    CP_CLC_IDLE_HANDOFF_CMD, 9219, CO, CP/CLC, 
    CP CLC L3 STATUS Get, 9220, CR, CP/CLC, lite, 
    CP_CLC_CMD_POWERDOWN, 9221, CO, CP/CLC, 
    CP_CLC_CMD_POWERUP, 9222, CO, CP/CLC, 
    CP_CLC_CMD_SETUP_CONNECTION, 9223, CO, CP/CLC, 
    CP_CLC_CMD_REL_CONNECTION, 9224, CO, CP/CLC, 
    CP_CLC_CMD_ALU_NW_TEST, 9225, CO, CP/CLC, 
    CP CLC IDP Slotted Mode Set, 9601, CO, CP/CLC/IDP, lite, 
    CP CLC IDP Test FREEZE CMD, 9602, CO, CP/CLC/IDP, 
    CP CLC IDP Test THAW CMD, 9603, CO, CP/CLC/IDP, 
    CP CLC IDP Test WAKE UP CMD, 9604, CO, CP/CLC/IDP, 
    CP CLC IDP Test RESYNC IND CMD, 9605, CO, CP/CLC/IDP, 
    CP CLC IDP Test RESYNC DENIED CMD, 9606, CO, CP/CLC/IDP, 
    CP CLC IDP DO SYS STATUS Get, 9607, CR, CP/CLC/IDP, lite, 
    CP CLC OMP Test DFS Insert Nghbr, 9608, CO, CP/CLC, 
    CP RMC INSP Pilot Acq Msg, 10112, CO, CP/RMC, 
    CP_RMC_TEST_RMC_DEACTIVATE_CMD, 10113, CO, CP/RMC, 
    CP_RMC_TEST_RMC_SPY_DECI_CMD, 10114, CO, CP/RMC, 
    CP_RMC_TEST_DO_DFS_CMD, 10115, CO, CP/RMC, 
    CP_RMC_SCH_CAPTURE_INPUT_BUFFER_CMD, 10240, CO, CP/RMC, 
    CP_RMC_SCH_MINIACQ_WINSIZE_CMD, 10241, CO, CP/RMC, 
    CP_RMC_TEST_IRAT_SRCH_CFG_MSG, 10242, CO, CP/RMC, 
    CP_RMC_FMP_TEST_HWTESTMODE_CMD, 10368, CO, CP/RMC, 
    CP_RMC_FMP_TEST_UPDATEFINGERS_CMD, 10369, CO, CP/RMC, 
    CP_RMC_FMP_TEST_UPDATEMACFINGERS_CMD, 10370, CO, CP/RMC, 
    CP_RMC_FMP_TEST_INSP_SYNC_CMD, 10371, CO, CP/RMC, 
    CP_RMC_FMP_TEST_SCHPROC_CMD, 10372, CO, CP/RMC, 
    CP_RMC_ALMP_DEACTIVATE_MSG_CMD, 10373, CO, CP/RMC, 
    CP_RMC_ALMP_NETWORK_RESET_MSG_CMD, 10374, CO, CP/RMC, 
    CP_RMC_FMP_ALMP_CONNECTION_CLOSED_MSG_CMD, 10375, CO, CP/RMC, 
    CP_RMC_FMP_TEST_FNHW_MSG_CMD, 10376, CO, CP/RMC, 
    CP_RMC_FMP_FNALGOPARMS_GET_CMD, 10377, CR, CP/RMC, 
    CP_RMC_FMP_FNALGOPARMS_SET_CMD, 10378, CO, CP/RMC, 
    CP_RMC_FMP_TEST_FINGER_SCAN_CMD, 10380, CO, CP/RMC, 
    CP_RMC_FMP_TEST_FINGER_COMB_CFG_CMD, 10381, CO, CP/RMC, 
    CP_RMC_MAC_TARGET_TEST_CMD, 10384, CO, CP/RMC, 
    CP_RMC_FMP_EQFNALGOPARMS_SET_CMD, 10385, CO, CP/RMC, 
    CP_RMC_FMP_EQFEATURE_SET_CMD, 10386, CO, CP/RMC, 
    CP_RMC_FMP_EQ_MANUAL_ASSIGN_CMD, 10387, CO, CP/RMC, 
    CP_RMC_FMP_DO_FWD_ENH_CFG_CMD, 10388, CO, CP/RMC, 
    CP_RMC_FMP_RAKEEQDELAY_SET_CMD, 10389, CO, CP/RMC, 
    CP_RMC_CSM_TEST_CELL_SWITCH_CMD, 10496, CO, CP/RMC, 
    CP_RMC_CSM_PROG_ACTIVE_MACID_CMD, 10497, CO, CP/RMC, 
    CP_RMC_CSM_PROG_SWITCH_THRESHOLDS, 10498, CO, CP/RMC, 
    CP_RMC_PREEMPT_CMD, 10544, CO, CP/RMC, 
    CP_RMC_ACTIVATE_CMD, 10545, CO, CP/RMC, 
    CP RFC Config Modem Resources, 10624, CO, CP/RMC/DO RFC, 
    CP RFC Emulate DSPM RFC Spy, 10625, CO, CP/RMC/DO RFC, 
    CP RFC AGC ISR ST Match Get, 10626, CR, CP/RMC/DO RFC/RxAGC, 
    CP RFC AGC ISR ST Match Set, 10627, CO, CP/RMC/DO RFC/RxAGC, 
    CP RFC Settle Times Get, 10628, CR, CP/RMC/DO RFC/RxAGC, 
    CP RFC Settle Times Set, 10629, CO, CP/RMC/DO RFC/RxAGC, 
    CP RFC Rx AGC Config, 10632, CO, RF/ALGORITHMS, 
    CP RFC Rx AGC Get Config, 10633, CR, RF/ALGORITHMS, 
    CP RFC Rx AGC Get DigiGain, 10634, CR, RF/ALGORITHMS, 
    CP RFC AFC Mode Set, 10636, CO, CP/RMC/DO RFC/RxAGC, 
    CP RFC AFC Metric Config Get, 10637, CR, CP/RMC/DO RFC/AFC, 
    CP RFC AFC Metric Config Set, 10638, CO, CP/RMC/DO RFC/AFC, 
    CP RFC Emulate DSPM AFC Spy, 10639, CO, CP/RMC/DO RFC, 
    CP RFC DC Offset Config, 10640, CO, CP/RMC/DO RFC/RxAGC, 
    CP RMC CMD RUP SEND TCA, 10753, CO, CP/RMC/RUP, 
    CP RMC CMD RUP SET SUPP CHAN, 10754, CO, CP/RMC/RUP, 
    CP RMC CMD RUP SET SIMPLE ATTR, 10755, CO, CP/RMC/RUP, 
    CP RMC CMD RUP SET SEARCH PARM, 10756, CO, CP/RMC/RUP, 
    CP RMC CMD RUP SET MANCHAN PARM, 10757, CO, CP/RMC/RUP, 
    CP RMC CMD RUP OTA Msg, 10758, CO, CP/RMC/RUP, 
    CP RMC CMD RUP PILOT UPDATE MSG, 10759, CO, CP/RMC/RUP, 
    CP RMC CMD RUP SEND RUP REQ, 10760, CO, CP/RMC/RUP, 
    CP RMC CMD RUP SET MAC PARM, 10761, CO, CP/RMC/RUP, 
    CP RMC CMD RUP GET DFS INFO MSG, 10762, CR, CP/RMC/RUP, 
    CP RMC CMD RUP DFS START MSG, 10763, CO, CP/RMC/RUP, 
    CP RMC CMD RUP DFS SECPARM MSG, 10764, CO, CP/RMC/RUP, 
    CP RMC CMD RUP DFS ABORT MSG, 10765, CO, CP/RMC/RUP, 
    CP RMC CMD RUP DFS SRCH RSLT MSG, 10766, CO, CP/RMC/RUP, 
    CP RMC CMD RUP DFS RXDEACTIND MSG, 10767, CO, CP/RMC/RUP, 
    CP_RMC_EQ_SELECT_GET_CMD, 10782, CR, CP/RMC/EQ, 
    CP_RMC_EQ_SELECT_SET_CMD, 10783, CO, CP/RMC/EQ, 
    CP_L1ECD_IRAT_MEAS_REPORT_IND, 10800, CO, CP/RMC/L1CD, 
    CP_L1ECD_EUTRAN_GAP_IND, 10801, CO, CP/RMC/L1CD, 
    CP_L1CDE_IRAT_SERVICE_REQ, 10802, CO, CP/RMC/L1CD, 
    CP_L1CDE_MASTER_RAT_REQ, 10803, CO, CP/RMC/L1CD, 
    CP_L1CDE_CDMA_IRAT_CELL_LIST_REQ, 10804, CO, CP/RMC/L1CD, 
    CP_L1CDE_CDMA_IRAT_MEAS_REQ, 10805, CO, CP/RMC/L1CD, 
    CP_L1CDE_STOP_GAP_IND_CMD, 10806, CO, CP/RMC/L1CD, 
    CP_L1CDE_EUTRAN_GAP_ABORT_REQ, 10807, CO, CP/RMC/L1CD, 
    CP_L1CDE_IRAT_STOP_ALL_REQ, 10808, CO, CP/RMC/L1CD, 
    CP_L1CD_PLMN_SEARCH_REQ, 10809, CO, CP/RMC/L1CD, 
    CP_L1CD_STOP_PLMN_SEARCH_REQ, 10810, CO, CP/RMC/L1CD, 
    CP_L1CD_IRAT_MEAS_CFG_REQ, 10811, CO, CP/RMC/L1CD, 
    CP_L1CD_IRAT_MEAS_REQ, 10812, CO, CP/RMC/L1CD, 
    CP_L1CD_IRAT_RESEL_REQ, 10813, CO, CP/RMC/L1CD, 
    CP_L1CD_ACTIVATE_REQ, 10814, CO, CP/RMC/L1CD, 
    CP_L1CD_DEACTIVATE_REQ, 10815, CO, CP/RMC/L1CD, 
    CP_IRAT_RMC_MEAS_REPORT_MSG, 10816, CO, CP/RMC/L1CD, 
    CP_IRAT_RMC_RF_ASSIGN_IND, 10817, CO, CP/RMC/L1CD, 
    CP_IRAT_RMC_RF_RELEASE_IND, 10818, CO, CP/RMC/L1CD, 
    CP CDRR TEST CMD, 9610, CO, CP/CAS, 
    CP IRATRFC TEST CMD, 13824, CO, CP/iratrfc, 
    CP FTM RUP Activate Msg, 11264, CO, CP/FCP/FTM, 
    CP_FCP_FTAP_STAT_GET_REQ, 11296, CO, CP/FCP/FTAPF, 
    CP_FCP_FTAP_STAT_CLR_REQ, 11297, CO, CP/FCP/FTAPF, 
    CP_FCP_CCM_ACTIVATE_CMD, 11392, CO, CP/FCP/CCM, 
    CP_FCP_CCM_DEACTIVATE_CMD, 11393, CO, CP/FCP/CCM, 
    CP_FCP_CCM_PKT_MSG, 11394, CO, CP/FCP/CCM, 
    CP_FCP_CCM_OTA_MSG, 11395, CO, CP/FCP/CCM, 
    CP_FCP_FWD_TEST_MODE, 11396, CO, CP/FCP/TEST, 
    CP_FCP_ETS_HW_TRIG, 11397, CO, CP/FCP/TEST, 
    CP_FCP_PACKET_PERF_STAT_RESET, 11398, CO, CP/FCP/TEST, 
    CP_FCP_REDUCED_TEST_MODE, 11399, CO, CP/FCP/CRS, 
    CP_FCP_REDUCED_TEST_CFG, 11401, CO, CP/FCP/CRS, 
    CP FCP PAF TEST INIT, 12545, CO, CP/FCP/PAF, 
    CP FCP PAF TEST START, 12546, CO, CP/FCP/PAF, 
    CP FCP PAF TEST RESET, 12547, CO, CP/FCP/PAF, 
    CP FCP PAF TEST END, 12548, CO, CP/FCP/PAF, 
    CP FCP CMD DPA RLP STATS RESET, 12673, CO, CP/FCP/PAF, 
    CP FCP CMD DPA RLP STATS PEEK, 12674, CR, CP/FCP/PAF, 
    CP FCP CMD MFPA RLP STATS RESET, 12675, CO, CP/FCP/PAF, 
    CP FCP CMD MFPA RLP STATS PEEK, 12676, CR, CP/FCP/PAF, 
    CP_FCP_OTAMSG_MSG, 13184, CO, CP/FCP, 
    CP_FCP_DESIGNATE_DRC_SET, 13185, CO, CP/FCP, 
    CP FCP DSAF MSG BLK CFG, 13186, CO, CP/FCP, 
    CP_RCP_ACM_TEST_CFG_CMD, 13440, CO, CP/RCP, 
    CP_RCP_ACM_TEST_ACACK_CMD, 13441, CO, CP/RCP, 
    CP_RCP_RTM_TEST_CFG_CMD, 13568, CO, CP/RCP, 
    CP_RCP_RTM_TEST_PARM_GET_CMD, 13569, CR, CP/RCP, 
    CP_RCP_RTM_TEST_PARM_SET_CMD, 13570, CO, CP/RCP, 
    CP_RCP_RTM_TEST_TXCHANSTAT_GET_CMD, 13571, CR, CP/RCP, lite, 
    CP RCP ACH TEST Msg, 13572, CO, CP/RCP, 
    CP RCP TCH01 TEST Msg, 13573, CO, CP/RCP, 
    CP RCP TCH2 TEST Msg, 13574, CO, CP/RCP, 
    CP RCP TX DMA TEST CFG Msg, 13575, CO, CP/RCP, 
    CP RCP TX DMA TEST START Msg, 13576, CO, CP/RCP, 
    CP RCP TX DMA TEST READ Msg, 13577, CR, CP/RCP, 
    CP RCP TCH TEST DATA WRITE Msg, 13578, CO, CP/RCP, 
    CP RCP PACKET PERF STAT RESET Msg, 13579, CO, CP/RCP, 
    CP RCP RTMQOS TXMODE ALGO SELECTION Msg, 13580, CO, CP/RCP, 
    CP_DSAR_MSG_BLK_CFG_CMD, 14464, CO, CP/RCP, 
    CP RCP SET STREAM TOAPPTYPE, 14848, CO, CP/RCP/, 
    CP RCP MFPA SET SIMPLE ATTR, 14849, CO, CP/RCP/MFPA, 
    CP RCP MFPA SET FlowNNIdentification Attr, 14850, CO, CP/RCP/MFPA, 
    CP RCP MFPA SET FlowNNReservation Attr, 14851, CO, CP/RCP/MFPA, 
    CP RCP MFPA SET FlowNNTimers Attr, 14852, CO, CP/RCP/MFPA, 
    CP RCP MFPA SET SupportedHLProtocols Attr, 14853, CO, CP/RCP/MFPA, 
    CP RCP MFPA SET QoSProfiles Attr, 14854, CO, CP/RCP/MFPA, 
    CP RCP MFPA IPFLOW Request, 14855, CO, CP/RCP/MFPA, 
    CP RCP MFPA Read QoSProfiles, 14856, CR, CP/RCP/MFPA, 
    CP RCP MFPA SET Current Label, 14857, CO, CP/RCP/MFPA, 
    CP RCP MFPA Reservation, 14858, CO, CP/RCP/MFPA, 
    CP RCP MFPA Delete IPFlow, 14859, CO, CP/RCP/MFPA, 
    CP RCP MFPA PPP OPEN, 14860, CO, CP/RCP/MFPA, 
    CP RCP MFPA RLP STATS RESET, 14864, CO, CP/RCP/MFPA, 
    CP RCP MFPA RLP STATS PEEK, 14865, CR, CP/RCP/MFPA, 
    CP RCP MFPA SEND DOS, 14960, CO, CP/RCP/MFPA, 
    CP RCP TAP TEST INIT, 15104, CO, CP/RCP/TAP, 
    CP RCP TAP CONN CLOSE, 15105, CO, CP/RCP/TAP, 
    CP RCP Get Gain Scale, 15234, CR, CP/RCP/TxAGC, 
    CP RCP Set Gain Scale, 15235, CO, CP/RCP/TxAGC, 
    CP RCP Get Tx Gain Delay Vars, 15236, CR, CP/RCP/TxAGC, 
    CP RCP Set Tx Gain Delay Vars, 15237, CO, CP/RCP/TxAGC, 
    CP RCP Get Tx Clip Level, 15238, CR, CP/RCP/TxAGC, 
    CP RCP Set Tx Clip Level, 15239, CO, CP/RCP/TxAGC, 
    CP RCP Test Tx Gain Switch, 15240, CO, CP/RCP/TXAGC, 
    CP RCP Get Tx Delay Load Window, 15241, CR, CP/RCP/TxAGC, 
    CP RCP Set Tx Delay Load Window, 15242, CO, CP/RCP/TxAGC, 
    CP_RCP_ETS_SET_HW_TRIGGER_MSG, 15243, CO, CP/RCP/TxAGC, 
    CP_RCP_ETS_GET_CL_RANGE_MSG, 15244, CR, CP/RCP/TxAGC, 
    CP_RCP_ETS_SET_CL_RANGE_MSG, 15245, CO, CP/RCP/TxAGC, 
    CP_RCP_ETS_GET_TX_AVAIL_PWR_MSG, 15246, CR, CP/RCP, 
    CP_RCP_ETS_SET_TX_AVAIL_PWR_MSG, 15247, CO, CP/RCP, 
    CP_RCP_ETS_TX_AVAIL_PWR_TEST_MODE_MSG, 15248, CO, CP/RCP, 
    CP_RCP_ETS_GET_TXHYST_CHANGE_POINT_MSG, 15249, CR, CP/RCP/TxAGC, 
    CP_RCP_ETS_SET_TXHYST_CHANGE_POINT_MSG, 15250, CO, CP/RCP/TxAGC, 
    CP_RCP_ETS_TX_RF_PERF_TEST_MODE_MSG, 15251, CO, CP/RCP/TxAGC, 
    CP CSS Test Cfg, 16384, CO, CP/CSS, 
    CP CSS OOSA Set Parms, 16385, CR, CP/CSS, lite, 
    CP CSS Clear 1X MRU, 16386, CO, CP/CSS, lite, 
    CP CSS Clear DO MRU, 16387, CO, CP/CSS, lite, 
    CP CSS OOSA Set Enable, 16388, CR, CP/CSS, 
    CP CSS OOSA Get Enable, 16389, CR, CP/CSS, 
    CP CSS OOSA Get Parms, 16390, CR, CP/CSS, 
    CP CSS OOSA Set Num Phases, 16391, CR, CP/CSS, 
    CP CSS OOSA Get Num Phases, 16392, CR, CP/CSS, 
    CP CSS OOSA Set Current Stage, 16393, CR, CP/CSS, 
    CP CSS OOSA Get Current Stage, 16394, CR, CP/CSS, 
    CP CSS Get MCC, 16395, CR, CP/CSS, 
    CP Init CSS DBM, 16398, CO, CP/VAL/PRI/INIT, lite, 
    CP EAKA TEST AUTH CMD, 18400, CR, CP/SEC, 
    CP EAKA TEST MK DERIVE CMD, 18401, CR, CP/SEC, 
    CP EAKA TEST REAUTHXKEY DERIVE CMD, 18402, CR, CP/SEC, 
    CP EAKA TEST MSK DERIVE CMD, 18403, CR, CP/SEC, 
    CP EAKA TEST MAC DERIVE CMD, 18404, CR, CP/SEC, 
    CP EAKA TEST PMK DERIVE CMD, 18405, CR, CP/SEC, 
    CP EAKA TEST AES CRYPT CMD, 18406, CR, CP/SEC, 
    CP EAKA TEST SQN INIT CMD, 18407, CO, CP/SEC, 
    CP TLS TEST ANON, 18688, CO, CP/TLS, 
    CP TLS TEST X509, 18689, CO, CP/TLS, 
    CP MMD Camera Mode Set, 36864, CO, CP/MMD/Camera, 
    CP MMD Camera Preview PropSet, 36865, CO, CP/MMD/Camera, 
    CP MMD Camera Preview, 36866, CO, CP/MMD/Camera, 
    CP MMD Camera Preview Stop, 36867, CO, CP/MMD/Camera, 
    CP MMD Camera Palette Update, 36868, CO, CP/MMD/Camera/OSD, 
    CP MMD Camera OSD Update, 36869, CO, CP/MMD/Camera/OSD, 
    CP MMD Camera Capture PropSet, 36870, CO, CP/MMD/Camera, 
    CP MMD Camera Capture, 36871, CO, CP/MMD/Camera, 
    CP MMD Camera Capture Stop, 36872, CO, CP/MMD/Camera, 
    CP MMD Camera Capture Save, 36873, CO, CP/MMD/Camera, 
    CP MMD Camera Capture Info Get, 36874, CO, CP/MMD/Camera, 
    CP MMD Camera Capture Save Host, 36875, CO, CP/MMD/Camera, 
    CP MMD Camera Video Record PropSet, 36876, CO, CP/MMD/Camera, 
    CP MMD Camera Video Record, 36877, CO, CP/MMD/Camera, 
    CP MMD Camera Video Record Stop, 36878, CO, CP/MMD/Camera, 
    CP MMD Camera Playback Start, 36879, CO, CP/MMD/Camera, 
    CP MMD Camera Playback Pause, 36880, CO, CP/MMD/Camera, 
    CP MMD Camera Playback Resume, 36881, CO, CP/MMD/Camera, 
    CP MMD Camera Playback Position Get, 36882, CO, CP/MMD/Camera, 
    CP MMD Camera Playback Position Set, 36883, CO, CP/MMD/Camera, 
    CP MMD Camera Playback Stop, 36884, CO, CP/MMD/Camera, 
    CP MMD Camera Playback PropSet, 36885, CO, CP/MMD/Camera, 
    CP MMD Camera JPEG Capture Playback, 36886, CO, CP/MMD/Camera, 
    CP MMD Camera JPEG Playback, 36887, CO, CP/MMD/Camera, 
    CP MMD Camera JPEG Decode By Name, 36888, CO, CP/MMD/Camera, 
    CP MMD Camera JPEG Decode, 36889, CO, CP/MMD/Camera, 
    CP MMD Camera Color Conversion, 36890, CO, CP/MMD/Camera, 
    RAT_MMC_API_POWERUP_REQ, 40960, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_POWERDOWN_REQ, 40961, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_RAT_ONLY_MODE_REQ, 40962, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_RAT_3GPP_MODE_REQ, 40963, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_ACQ_REQ, 40964, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_MCC_SEARCH_REQ, 40965, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_PS_REG_REQ, 40966, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_NO_SERVICE_REQ, 40967, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_CELL_GLOBAL_ID_RSP, 40968, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_DATACONNECTION_CMD_REQ, 40969, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_DEFAULTBEARER_REQ, 40970, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_DEDICATEDBEARER_REQ, 40971, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_BEARER_DISCONNECT_REQ, 40972, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_BEARER_DETACH_REQ, 40973, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_IRAT_MEAS_IND, 40974, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_IRAT_SYSTEM_CHG_RSP, 40975, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_IRAT_SIB8_MEAS_IND, 40976, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_RAT_MEASCMD, 40977, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_RAT_RESELMEASCMD, 40978, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_STOP_IRAT_RATMEAS_CMD, 40979, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_CELL_INFO_PS_REG_REQ, 40980, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_CDMA_TXPWR_RSP, 40981, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_IRAT_RESELMEAS_IND, 40982, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_IRAT_HANDOVER_RSP, 40983, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_RAT_HANDOVER_PS_REG_REQ, 40984, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_SET_IDLEMODEMOBILITYINFO, 40985, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_PACKET_STATISTICS_RSP, 40986, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_PDN_TABLE_SETUP_REQ, 40987, RO, CP/MMC/Tst/MMCtoRAT, 
    RAT_MMC_API_RAT_MODE_REQ, 40988, RO, CP/MMC/Tst/MMCtoRAT, 
    MMC_RAT_API_POWERUP_RSP, 41088, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_POWERDOWN_RSP, 41089, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_CMD_REJ_IND, 41090, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_RAT_ONLY_MODE_RSP, 41091, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_RAT_3GPP_MODE_RSP, 41092, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_ACQ_RSP, 41093, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_MCC_SEARCH_RSP, 41094, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_PS_REG_RSP, 41095, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_NO_SERVICE_RSP, 41096, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_NTW_ST_CHG_IND, 41097, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_CELL_GLOBAL_ID_REQ, 41098, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_DATACONNECTION_CMD_RSP, 41099, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_DEFAULTBEARER_RSP, 41100, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_DEDICATEDBEARER_IND, 41101, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_DEDICATEDBEARER_RSP, 41102, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_BEARER_DISCONNECT_RSP, 41103, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_BEARER_DISCONNECT_IND, 41104, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_BEARER_DETACH_RSP, 41105, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_IRAT_MEAS_CMD, 41106, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_IRAT_SYSTEM_CHG_REQ, 41107, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_IRAT_SIB8_MEAS_CMD, 41108, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_RAT_MEASIND, 41109, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_RAT_RESELMEASIND, 41110, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_STOP_IRAT_MEAS_CMD, 41111, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_CELL_INFO_PS_REG_RSP, 41112, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_CDMA_TXPWR_REQ, 41113, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_RAT_HANDOVER_PS_REG_RSP, 41114, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_IRAT_HANDOVER_REQ, 41115, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_IRAT_RESELMEAS_CMD, 41116, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_SET_IDLEMODEMOBILITYINFO, 41117, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_PACKET_STATISTICS_REQ, 41118, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_PDN_TABLE_SETUP_RSP, 41119, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_RAT_API_MODE_RSP, 41120, CO, CP/MMC/Tst/RATtoMMC, 
    MMC_AP_MBIM_READY_STATUS_QUERY, 41600, CO, CP/MMC, 
    MMC_AP_MBIM_RADIO_STATE_SET_REQ, 41606, CO, CP/MMC, 
    MMC_AP_MBIM_RADIO_STATE_QUERY, 41607, CO, CP/MMC, 
    MMC_AP_MBIM_INIT_REQ, 41610, CO, CP/MMC, 
    MMC_AP_MBIM_CONNECT_STATE_REQ, 41611, CO, CP/MMC, 
    MMC_AP_MBIM_CONNECT_REQ, 41612, CO, CP/MMC, 
    AP_MMC_MBIM_READY_STATUS_RSP, 41472, RO, CP/MMC, 
    AP_MMC_MBIM_READY_STATUS_NOTIF, 41473, RO, CP/MMC, 
    AP_MMC_MBIM_RADIO_STATE_CNF, 41481, RO, CP/MMC, 
    AP_MMC_MBIM_RADIO_STATE_RSP, 41482, RO, CP/MMC, 
    AP_MMC_MBIM_RADIO_STATE_NOTIF, 41483, RO, CP/MMC, 
    AP_MMC_MBIM_INIT_RSP, 41487, RO, CP/MMC, 
    AP_MMC_MBIM_CONNECT_STATE_RSP, 41488, RO, CP/MMC, 
    AP_MMC_MBIM_CONNECT_STATE_IND, 41489, RO, CP/MMC, 
    AP_MMC_MBIM_CONNECT_RSP, 41490, RO, CP/MMC, 
    AP_MMC_MBIM_SET_DATA_PATH_IND, 41495, RO, CP/MMC, 
    RFC_LTE_DO_RF_RSP, 41729, CO, CP/MMC, 
    RFC_LTE_RF_REQ, 41731, CO, CP/MMC, 
    RFC_LTE_RELEASE_RF_IND, 41733, CO, CP/MMC, 
    RFC_LTE_BAND_REQ, 41734, CO, CP/MMC, 
    LTE_RFC_DO_RF_REQ, 41728, RO, CP/MMC, 
    LTE_RFC_DO_RELEASERF_IND, 41730, RO, CP/MMC, 
    LTE_RFC_LTE_RF_RSP, 41732, RO, CP/MMC, 
    LTE_RFC_LTE_BAND_RSP, 41735, RO, CP/MMC, 
    CP Default Bearer Attach Req, 40000, CO, CP/MMC, 
    CP Default Bearer Attach Rsp, 40001, CO, CP/MMC, 
    CP HO State Ind, 40002, CO, CP/MMC, 
    CP PS REQ, 40003, CO, CP/MMC, 
    CP PS Disconnect Req, 40004, CO, CP/MMC, 
    CP PS Detach Req, 40005, CO, CP/MMC, 
    CP PS Disconnect Rsp, 40006, CO, CP/MMC, 
    CP Data Cmd Resp, 40007, CO, CP/MMC, 
    CP MMC_MEAS_LTE_SIB8_MEAS_CMD, 40008, CO, CP/MMC, 
    CP MMC_MEAS_IRAT_MEAS_CMD, 40009, CO, CP/MMC, 
    CP MMC_MEAS_LTE_SYSTEM_CHANGE_REQ, 40010, CO, CP/MMC, 
    CP MMC_MEAS_CDMA_LTE_MEAS_INFO_IND, 40011, CO, CP/MMC, 
    CP MMC_MEAS_LTE_MEAS_RESULT_IND, 40012, CO, CP/MMC, 
    CP MMC_MEAS_GMSS_MEAS_START_CNF, 40013, CO, CP/MMC, 
    CP MMC_MEAS_GMSS_MEAS_END_CNF, 40014, CO, CP/MMC, 
    CP MMC_MEAS_GMSS_SERV_PS_WEAK_CNF, 40015, CO, CP/MMC, 
    CP MMC_MEAS_GMSS_PS_STATUS_IND, 40016, CO, CP/MMC, 
    CP MMC_MEAS_CDMA_IRAT_PS_REG_FREQ_RSP, 40017, CO, CP/MMC, 
    CP MMC_MEAS_LTE_IRAT_LTE_CELL_INFO_PS_REG_RSP, 40018, CO, CP/MMC, 
    CP MMC_MEAS_CDMA_IRAT_SERVING_MEAS_RSP, 40019, CO, CP/MMC, 
    CP MMC AP Set PDN Table Request, 40020, CO, CP/MMC, 
    CP MMC AP Set PDN PCO Auth Request, 40021, CO, CP/MMC, 
    CP MMC AP Data Call Set Up, 40022, CO, CP/MMC, 
    CP MMC_GMSS_CLEAR_GMRU_CMD, 40023, CO, CP/MMC/GMSS, 
    CP MMC_DEBUG_STATUS_GET_CMD, 40024, CR, CP/MMC, 
    CP MMC_GMSS_TEST_MODE_CMD, 40025, CO, CP/MMC/GMSS, 
    CP MMC_RAT_ACQ_RSP, 40030, CO, CP/MMC/Tst, 
    CP MMC_RAT_PS_REG_RSP, 40031, CO, CP/MMC/Tst, 
    CP MMC_RAT_ONLY_MODE_RSP, 40032, CO, CP/MMC/Tst, 
    CP MMC_RAT_3GPP_MODE_RSP, 40033, CO, CP/MMC/Tst, 
    CP MMC_RAT_MCC_SRCH_RSP, 40034, CO, CP/MMC/Tst, 
    CP MMC_RAT_DISABLE_RSP, 40035, CO, CP/MMC/Tst, 
    CP MMC_RAT_NWK_ST_CHG_IND, 40036, CO, CP/MMC/Tst, 
    CP MMC_AP_MODE_SELECT_REQ, 40037, CO, CP/MMC/Tst, 
    CP MMC_AP_POWER_UP_REQ, 40038, CO, CP/MMC/Tst, 
    CP MMC_AP_POWER_DOWN_REQ, 40039, CO, CP/MMC/Tst, 
    CP MMC_AP_SERVICE_STATUS_REQ, 40040, CO, CP/MMC/Tst, 
    CP MMC_RAT_API_TEST, 40042, CO, CP/MMC/Tst, 
    CP MMC_AP_API_TEST, 40043, CO, CP/MMC/Tst, 
    CP_PDS_AP_PRECISE_TIME_AIDING_REQ_MSG, 44000, CO, CP/PDS/AP, 
    CP_PDS_AP_FREQUENCY_AIDING_REQ_MSG, 44001, CO, CP/PDS/AP, 
    CP_PDS_AP_GPS_PSEUDORANGE_MSMT_RSP_MSG, 44002, CO, CP/PDS/AP, 
    CP_PDS_AP_GPS_CONTROL_PLANE_ABORT_CNF_MSG, 44003, CO, CP/PDS/AP, 
    CP_PDS_AP_IS801_SESSION_START_MSG, 44004, CO, CP/PDS/AP, 
    CP_PDS_AP_ASSIST_DATA_REQ_MSG, 44005, CO, CP/PDS/AP, 
    CP_PDS_AP_GPS_MSB_POSITION_REPORT_MSG, 44006, CO, CP/PDS/AP, 
    CP_PDS_AP_IS801_SESSION_STOP_MSG, 44007, CO, CP/PDS/AP, 
    CP_PDS_AP_IS801_SESSION_TRIGGER_RSP_MSG, 44008, CO, CP/PDS/AP, 
    CP_PDS_AP_AFLT_REQ_MSG, 44009, CO, CP/PDS/AP, 
    CP_PDS_AP_AFLT_ABORT_REQ_MSG, 44010, CO, CP/PDS/AP, 
    CP_PDS_AP_SET_PRIVACY_MODE_MSG, 44011, CR, CP/PDS/AP, lite, 
    CP_PDS_AP_GET_PRIVACY_MODE_MSG, 44012, CR, CP/PDS/AP, lite, 
    CP PDS GPS Open Device HW Init, 44100, CR, CP/PDS/LBS, lite, 
    CP PDS GPS Start Fix, 44101, CR, CP/PDS/LBS, lite, 
    CP PDS GPS Stop Fix, 44102, CR, CP/PDS/LBS, lite, 
    CP PDS GPS Configure Fix Mode, 44103, CR, CP/PDS/LBS, lite, 
    CP PDS GPS Configure Fix Rate, 44104, CR, CP/PDS/LBS, lite, 
    CP PDS GPS Configure QOS, 44105, CR, CP/PDS/LBS, lite, 
    CP PDS GPS Write Server Configuration, 44106, CR, CP/PDS/LBS, lite, 
    CP PDS GPS Enable Security, 44107, CR, CP/PDS/LBS, lite, 
    CP PDS GPS Reset Assist, 44108, CR, CP/PDS/LBS, lite, 
    CP PDS GPS Set Security, 44109, CR, CP/PDS/LBS, lite, 
End

Begin Enum, CP Unit
    CP, 0x00,   RO
    DBM, 0x01,   RO
    EXE, 0x02,   RO
    IPC, 0x03,   RO
    L1D, 0x04,   RO
    LMD, 0x05,   RO
    MON, 0x06,   RO
    PSW, 0x07,   RO
    HWD, 0x08,   RO
    TST, 0x09,   RO
    VAL, 0x0A,   RO
    SYS, 0x0B,   RO
    RLP, 0x0C,   RO
    HLP, 0x0D,   RO
    UIM, 0x0E,   RO
    CLC, 0x0F,   RO
    FCP, 0x10,   RO
    HSC, 0x11,   RO
    RMC, 0x12,   RO
    RCP, 0x13,   RO
    SLC, 0x14,   RO
    CSS, 0x15,   RO
    SEC, 0x16,   RO
    ETS, 0x17,   RO
    PDS, 0x18,   RO
    MMC, 0x19,   RO
    PAC, 0x1A,   RO
End

Begin Enum, CP Cp Err Codes
End

Begin Enum, CP Dbm Err Codes
    Message Id Error, 0
    Segment Number Error, 1
    Segment Size Error, 2
    Database Not Cached Error, 3
    EEPROM Not Responding Error, 4
    Flash Too Small Error, 5
    Both Flash Sections Contain Marker Error, 6
    Block Database Id Error, 7
    Block Database Write Error, 8
    Block Database Read Error, 9
    NAM Locked Error, 10
    Invalide Sig, 11
    Write Error, 12
    State Error, 13
End

Begin Enum, CP Exe Err Codes
    Msg Buffer Memory Empty Error, 0
    Msg Buffer Memory Size Error, 1
    Nucleus Error, 2
    Illegal Operation from LISR Error, 3
    Msg Buffer Overwrite Error, 4
    Partition Memory Empty Error, 5
    Stack Overflow Error, 6
    Timer Creation Error, 7
    Unhandled Interrupt Error, 8
    Invalid Exe Timer Expired, 10
    Msg Buffer Redundant Free Error, 11
    Msg Buffer Free Invalid Ptr Error, 12
    Illegal Operation from HISR Error, 13
    Msg Buffer Already Sent Error, 14
    Msg Buffer HWM Error, 15
    Timer Reset Error, 16
    Msg Buffer Get Corrupted Ptr Error, 17
    Msg Buffer Free Corrupted Ptr Error, 18
    Msg Buffer Send Corrupted Ptr Error, 19
    Msg Buffer Read Corrupted Ptr Error, 20
    Get Semaphore In HISR, 0x15
    Event Wait In HISR, 0x16
    Nu Sleep In HISR, 0x17
    IRQ Disabled In Mon Idle, 0x18
    IRQ Lock Time Too Long, 0x19
    Parameter is NULL error, 0x1A
    Memery free end marker error, 0x1B
    Memery free start marker error, 0x1C
    Semaphore Invalid Delete Error, 0x1D
    Semaphore Invalid Get Error, 0x1E
    Semaphore Invalid Free Error, 0x1F
    Keypad Force Dump Error, 0x20
    Int Manage Stack Ptr Error, 0x21
End

Begin Enum, CP Ipc Err Codes
    Rx Sync Error, 0, RO
    Rx Overrun Error, 1, RO
    Rx Mailbox Size Error, 2, RO
    Rx Message Id Error, 3, RO
    Tx Message Size Error, 4, RO
    DSP Mailbox Not Ready Error, 5, RO
    No Message in Mbox Error, 6, RO
    No Data in Requesed Direct Buffer, 7, RO
    Forward frame missing, 8, RO
    Odd Tx Message Size Error, 9, RO
    Cant Send Msg To Clocked Off Dsp, 10, RO
    Dspm Version Not Compatible Error, 0x1A, RO
    Dspm Phy Chan Type Error, 0x1C, RO
    PSW Reset DSPm Error, 0x1D, RO
    Dspm Unexpected Alive Error, 0x1F, RO
    Dspm Not Responding Error, 0x20, RO
End

Begin Enum, Processor Id
    CP, 0, RO
    DSPM, 1, RO
    DSPV, 2, RO
    CBP, 3, RO
    CBP_AP, 4, RO
    DSPE, 5, RO
End

Begin Enum, DSP HW Rx Mailbox Ids
    Donwload Complete, 0,
    Alive, ,
    Ver, ,
    Peek Rsp, ,
    Poke Rsp, ,
    Loopback, ,
    Mem, ,
    Spy, ,
    Trace, ,
    Fault, ,
    Bitwise Op, ,
    Heart Beat, ,
    Config, ,
    Dbuf Loopback, ,
    Printf, ,
    Code Peek, ,
    Code Poke, ,
    Code Memtest, ,
    Shrd Mem Loopbk, ,
    HeartBeat Rsp, ,
    Code Crash Dbg, ,
    Hwd Profile Data, ,
    DSPe Alive, ,
    Rx Power, 0xD00,
    Dc Bias, ,
    Fwd Chnl Dta, ,
    Pilot Pwr, ,
    Quick Page Bits, ,
    Search Rslt, ,
    Sleep Rdy, ,
    Spy Acq, ,
    Spy Afc, ,
    Spy Agc, ,
    Spy Dcb, ,
    Spy Finger Alloc, ,
    Spy Finger State, ,
    Spy Finger Trk, ,
    Spy Fpc, ,
    Spy Pda, ,
    Spy Plf, ,
    Spy Rda, ,
    Spy Rpc, ,
    Spy Search, ,
    Spy Vit, ,
    Fpc Rep, ,
    Fwd Chnl Pc Rsp, ,
    Fwd Chnl Scramble Rsp, ,
    Aflt Meas, ,
    Timing Rsp, ,
    Rx Agc Get Rsp, ,
    Tx Agc Get Rsp, ,
    Afc Get Parms Rsp, ,
    Txagc Cr Status Rsp, ,
    Spage Rsp, ,
    Mdm Ack, ,
    Mag Smrt Ant Ack, ,
    IP2 Cal Report, ,
    Dsm Rf Preempt Rsp, ,
    IM2 Data, ,
    Hw Mbox Config Parms, 0xF00,
    Spch Dat Rev Ch Pckt, ,
    Audio SSO Connect Rsp, ,
    Audio SSO Disconnect Rsp, ,
    Send Record Playback Data, ,
    Audio Path Cfg Rsp, ,
    AMPS Mode Rsp, ,
    Reserved 42, ,
    Amps Sat Detection Rsp, ,
    Amps Fwd Ch Data Rsp, ,
    Amps Busy Idle Change Rsp, ,
    Amps Signal Strength Rsp, ,
    Send Audio Config Query Rsp, ,
    Amps Word Sync Status Rsp, ,
    Amp Comp Exp Status Rsp, ,
    Amp Afc Status Rsp, ,
    Amp Fwd Busy Idle Status Rsp, ,
    DV Rngr Status, ,
    App Mode Rsp, ,
    App Configure Appchannels, ,
    App Image Size, ,
    App Status, ,
    App Info Query Rsp, ,
    SPP Tone Gen Rsp, ,
    Spkr PC Data, ,
    App Hifi DAC Sampling Rate, ,
    Combo Vol Scal Fctr Resp, ,
    App Audio Path Cfg Resp, ,
    Voice Frame Resync Resp, ,
    Record Playback Mode Resp, ,
    Bluetooth Config Resp, ,
    Bitstream Residual Resp, ,
    Spkr Path DV to CP PCM Data, ,
    PCM IF API Mode Resp, ,
    Spkr Path CP to DV PCM Resp, ,
    Lpbk DV to CP MIC PCM Data, ,
    Mixer Data Req, ,
    Dspv App Req, ,
    DTMF Data, ,
End

Begin Enum, DSP HW Tx Mailbox Ids
    Download Init, 0,
    Code, ,
    Ver, ,
    Peek, ,
    Poke, ,
    Loopback, ,
    Mem test, ,
    Spy, ,
    Trace, ,
    Fault Control, ,
    Heart Beat Control, ,
    Dbuf Loopback, ,
    Reserved1, ,
    Reserved2, ,
    Bitwise Op, ,
    Code Peek, ,
    Code Poke, ,
    Code Memtest, ,
    Mixed Sig Reg Init, ,
    Jtag Pwr Cfg, ,
    Shared Mem Loopbk, ,
    Fwd Chnl Config, 0x100,
    Rda H Metrics Config, ,
    Rda P Metrics Config, ,
    Fwd Reserved 1, ,
    Fwd Chnl PC Config, ,
    Fwd Chnl Scramble Config, ,
    Fwd Init Fwm Parms, ,
    Fwd Fngr Noise Norm, ,
    Fwd Fpc Parm, 0x140,
    Fwd Outerloop Req, ,
    Fwd Fpc Alg Parm, ,
    Fpdchs Param, 0x180,
    Fpdchs CQI Ack, ,
    Fpdchs Disable, ,
    Fpdchs CntrlHold, ,
    Fpdchs Dbg, ,
    Fwd Rate Pwr Chg, ,
    Fpdchs Sim Finger Cmd, ,
    Fpdchs Sim Qamscale Cmd, ,
    Fpdchs Sim Tditer Cmd, ,
    Fpdchs Sim Clr Stats Cmd, ,
    Fpdchs Sim Bypass Sch Cmd, ,
    Fpdchs Sim Bypass Rev Cmd, ,
    Fpdchs Sim Macid0 Disable Cmd, ,
    Fpdchs Sim Fix Cqival Cmd, ,
    Fpdchs Sim Fix Acknak Cmd, ,
    Fpdchs Sim Cell Switch Cmd, ,
    Fpdchs Sim Cell Switch Thresh, ,
    Fpdchs Sim Pdch Valid Chk Cmd, ,
    Fpdchs Sim Lwci Chk Cmd, ,
    Fpdchs Sim Lc Disable Cmd, ,
    Fpdchs Sim Lcpattern Cmd, ,
    Fpdchs Sim Pdcch Scram Bit Rev Off, ,
    Rev Chnl Config, 0x200,
    Rev Preamble Config, ,
    Rev MixSig Parm, ,
    AFC_PARM_MSG, 0x300,
    AFC_CAL_PARM_MSG, ,
    AFC_CONFIG_MSG, ,
    DCB_PARM_MSG, ,
    DCB_CONFIG_MSG, ,
    IPC_DCB_GAINBAL_BITSEL_MSG, ,
    RX_CAL_MEASURE_MSG, ,
    RX_CAL_OVERRIDE_MSG, ,
    RX_AGC_GET_MSG, ,
    RXAGC_CONFIG_MSG, ,
    RX_CAL_PARM_MSG, ,
    AGC_PARM_MSG, ,
    TX_CAL_PARM_MSG, ,
    TXAGC_PARM_MSG, ,
    TXAGC_CAL_PARM_MSG, ,
    TX_AGC_GET_MSG, ,
    TXAGC_CONFIG_MSG, ,
    AFC_GET_PARMS_MSG, ,
    RFON_TABLE, ,
    TXON_TABLE, ,
    RXAGC_SETTLE_TIME, ,
    RXAGC_DIGIGAIN_REG, ,
    TXAGC_CR_STATUS, ,
    DCB_FAST_DECIM, ,
    TXAGC_APT_CTRL, ,
    MAG_SMRT_ANT_MODE_MSG, ,
    RX_SD_PARMS_CFG, ,
    RX_DAGC_PARMS_CFG, ,
    RX_DAGC_GAIN_STATE, ,
    DCB_IIR_PARM_MSG, ,
    PDM_CTRL_MSG, ,
    RSSI_CORRECTION_TABLE_MSG, ,
    TX_DAGC_SPI_GAINS_MSG, ,
    TX_DAGC_SPI_MSG, ,
    IM2_PARMS_MSG, ,
    MDM_RST_MSG, 0x400,
    SYNC_SYS_TIME_MSG, ,
    WAKE_ACQ_SYNC_MSG, ,
    WAKE_STATES_MSG, ,
    MSC_RESERVE1_MSG, ,
    SLOTTED_MODE_MSG, ,
    SIM_MSG, ,
    MSC_PARM_MSG, ,
    MSC_RESERVE2_MSG, ,
    MSC_RESERVE3_MSG, ,
    CAND_FREQ_START_MSG, ,
    RF_RELEASE_REQ_MSG, ,
    NULL_GPM_POWER_SAVE_MSG, ,
    MDM_INIT_REG_MSG, ,
    Hgh Reserve1, 0x480,
    Pilot Acquire, 0x500,
    Search Parm, ,
    Search Window Size, ,
    Acq Parm, ,
    Active Cand Pilot Set, ,
    Neighbor Pilot Set, ,
    Test Alg Value, ,
    Aflt Pilot Set, ,
    Aflt Pilot Set Abort, ,
    Aflt Alg Value, ,
    Query Timing, ,
    Test Alg Value1, ,
    Test Alg Value2, ,
    Window Size Parm, ,
    IC Control, ,
    Diversity Control, ,
    SRCH Sample Phase Control, ,
    IPC_DSM_IC_FILTER_MSG, 
    Rngr Init, 0x700,
    Rngr Mode, ,
    Rngr Config, ,
    Reserved 30, ,
    Reserved 31, ,
    App Mode, 0x780,
    App Configure Appchannels Rsp, ,
    App Image Size Rsp, ,
    App Vol Scal Fctr, ,
    App Info Query, ,
    Rngr Vol Scal Fctr, ,
    Rngr Ldspkr Vol Scal Fctr, ,
    I2S Delay Mode, ,
    Mic Vol Scal Fctr, ,
    Spkr Vol Scal Fctr, ,
    Audio Sidetone Scal Fctr, ,
    Hifi DAC Sampling Rate Rsp, ,
    Combo Vol Scal Fctr, ,
    App Audio Path Cfg, ,
    App Debug Dnld, ,
    Bluetooth Config, ,
    Bitstream Residual, ,
    App Mixer Data, ,
    App Mixer Ctrl, ,
    Audio Eq Ctrl, ,
    Mic Fif Mode, 0x800,
    Mic Fif Cfg Params, ,
    Mic Ans Mode, ,
    Mic Ans Cfg Params, ,
    Mic Bif Mode, ,
    Mic Bif Cfg Params, ,
    Reserved 32, ,
    Reserved 1, ,
    Reserved 2, ,
    Mpp Tone Gen Params, ,
    Mic Voice Enc Max Rate, ,
    Mic Voice Enc Min Rate, ,
    Reserved 3, ,
    Mic Sim, ,
    Reserved 4, ,
    Reserved 5, ,
    Rev Ch Sso Config, ,
    Mic Amp Rev Vol Scal Fctr, ,
    Mic PC Data, ,
    Spkr Voice Fwd Ch Pckt Data, 0x900,
    Reserved 6, ,
    Reserved 7, ,
    Spkr Voice Record Pb Pckt Data, ,
    Spp Tone Gen Params, ,
    Reserved 8, ,
    Spkr Fif Mode, ,
    Spkr Fif Cfg Params, ,
    Reserved 33, ,
    Fwd Ch Sso Configuration, ,
    Reserved 25, ,
    Spkr Amp Fwd Vol Scal Fctr, ,
    SPP Tone Gen, ,
    PCM IF API Mode, ,
    Spkr Path CP to DV PCM Data, ,
    Lpbk CP to DV Spkr PCM Data, ,
    ABE Mode, ,
    Audio Air Interface, 0xA00,
    Audio SSO Connect, ,
    Audio SSO Disconnect, ,
    Audio SSO Ctrl Params, ,
    Reserved 34, ,
    Audio Loopback Mode, ,
    Audio Config Query, ,
    Audio Spch Routing, ,
    Audio Aec Mode, ,
    Audio Aec Main Cfg Params, ,
    Audio Record Playback Mode, ,
    Send Spkr Sim Msg, ,
    Audio EDAI Config, ,
    Audio EDAI Spkr Ctrl Data, ,
    Audio TTY Mode, ,
    Audio TTY Cfg Params, ,
    Audio VAP Cfg Params, ,
    Audio ACP Cfg Params, ,
    Audio ACP Mode, ,
    Reserved 14, ,
    Reserved 15, ,
    Reserved 23, ,
    Reserved 24, ,
    Audio Path Cfg, ,
    Voice Frame Resync, ,
    Reserved 17, ,
    Audio AEC Aux Cfg Params, ,
    PC Audio Cfg, ,
    AMR Config, ,
    Amp Send Rev Ch Sim, 0xB00,
    Amp Send Wbd Recc, ,
    Amp Send Wbd Rvc, ,
    Amp Recc Abort, ,
    Amp Rev Ch Params Config, ,
    Amp Comprs Mode, ,
    Amp Transmit Fixed Freq, ,
    Amp St Mode, ,
    Amp Rev Ch Ctrl Config, ,
    Amp Get Comp Exp Status, ,
    Amp Send Fwd Ch Sim, 0xC00,
    Amp Mode, ,
    Amp Busy Idle Process, ,
    Amp Get Fm Signal Strength, ,
    Amp Fwd Iq Dc Comp, ,
    Amp Rx Agc Ctrl, ,
    Amp Afc Ctrl Msg, ,
    Amp Fwd Ch Counter, ,
    Amp Fwd Ch Params Config, ,
    Amp Fwd Ch Afc Calib, ,
    Reserved 11, ,
    Amp Expander Mode, ,
    Amp Hpf Mode Msg, ,
    Amp Sat Mode Msg, ,
    Amp Set Ws Counter, ,
    Amp Get Ws Counter, ,
    Amp Fwd Lpf Mode, ,
    Amp Set Pdm Msg, ,
    Amp Fwd Ch Ctrl Config, ,
    Amp Fwd Ch Agc Calib, ,
    Reserved 12, ,
    Reserved 13, ,
    Amp Fwd Busy Idle Status, ,
End

Begin Enum, CP L1d Err Codes
    L1D_RF_TUNE_FAIL, 0x00,
    L1D_TIMING_CHANGE_FAIL, 
    L1D_ORIG_ACCESS_FAIL, 
    L1D_UNSUPPORTED_FRAME_SIZE_FAIL, 
    L1D_RF_TUNE_TIMEOUT_FAIL, 
    L1D_UNSUPPORTED_SCH_RATE_FAIL, 
    L1D_SCH_SHO_PILOT_NOT_FOUND_FAIL, 
    L1D_ERR_MAILBOX_SHOULD_NOT_BE_EMPTY, 
    L1D_ERR_UNEXPECTED_MSG_RECD, 
    L1D_ERR_UNEXP_MSG_IN_L1D_STATE, 
    L1D_ERR_UNEXPECTED_SIG_RECD, 
    L1D_ERR_UNEXP_SIG_IN_L1D_STATE, 
    L1D_SEARCH_RESULT_TIMEOUT, 
    L1D_SEARCH_SEQUENCE_MISMATCH_OBSOLETE, 
    L1D_INVALID_ACK_RECD_FROM_DSPM, 
    L1D_ERR_FSCH_ALREADY_ACTIVE, 
    L1D_ERR_RSCH_ALREADY_ACTIVE, 
    L1D_ERR_INVALID_TIMER_EXPIRED, 
    L1D_SLOTTED_MESSAGE_NOT_DEFINED, 
    L1D_ERR_INVALID_AFLT_STATE, 
    L1D_GPS_MSG_RCVD_IN_WRONG_STATE, 
    L1D_AFLT_REF_PN_NOT_IN_AFLT_LIST, 
    L1D_FCCCH_PILOT_NOT_FOUND_FAIL, 
    L1D_ERR_ANTENNA_REQUEST_PENDING, 
    L1D_ERR_ANTENNA_REQUEST_EMPTY, 
    L1D_ERR_ANTENNA_REQUEST_UNEXPECTED, 
    L1D_ERR_OSC_POLLING_SLOW, 
    L1D_ERR_UNEXPECTED_PAGING_CHAN_START_MSG_RECD, 
    L1D_ERR_UNEXPECTED_TRAFFIC_CHAN_START_MSG_RECD, 
    L1D_ERR_UNEXPECTED_DIFF_FREQ_SRCH_START_MSG_RECD, 
    L1D_INVALID_SEARCH_RESULTS, 
    L1D_PSW_RX_POWER_INIT_FAILURE, 
    L1D_ERR_INVALID_HSC_MODE_FAILURE, 
    L1D_ERR_ANTENNA_REQUEST_MISMATCH, 
    L1D_ERR_NST_PROCESSING_ERROR, 
    L1D_ERR_ARTD_MALFUNCTION, 
    L1D_SLOTTED_PAGE_INVALID_EVENT, 0x1000,
    L1D_SLOTTED_PAGE_INVALID_STATE, 
    L1D_ERR_SP_STATE_PROC_NOT_EXPLICIT, 
    L1D_MINI_ACQ_FAILURE, 
    L1D_NULL_SLEEP_MSG_PTR, 
    L1D_RESYNC_MODE_NOT_VALID_FOR_STATE, 
    L1D_SLEEP_MODE_NOT_EXPLICIT, 
    L1D_IMMEDIATE_WAKE_TYPE_FAILURE, 
    L1D_32KHZ_FREQUENCY_ACCURACY_DETECTED, 
    L1D_PE_SLEEP_SYSTIME_REQUEST_DUPLICATE, 
    L1D_RESYNC_INTERRUPT_TIME_EXCEEDED, 
    L1D_RESYNC_SLEEP_TRAP_DETECTED_1, 
    L1D_RESYNC_SLEEP_TRAP_DETECTED_2, 
    L1D_RESYNC_SLEEP_TRAP_DETECTED_3, 
    L1D_RESYNC_SLEEP_TRAP_DETECTED_4, 
    L1D_ACTIVITY_WHILE_IN_SLEEP_MODE, 
End

Begin Enum, CP Lmd Err Codes
    Unexpected event, 0x01
    Cmd mailbox should not be empty, 0x10
    Invalid cmd msg id, 0x11
    Invalid sig msg id, 0x12
    Invalid primary traffic msg id, 0x13
    Signaling mailbox should not be empty, 0x14
    No FSCH Indicator On Direct Mailbox, 0x20
    Access message failure due to invalid state, 0x30
    Each message failure due to invalid state, 0x31
    Reverse traffic signaling msg failure due to invalid state, 0x32
    Traffic channel start msg failure due to invalid state, 0x33
    Traffic channel stop msg failure due to invalid state, 0x34
    Conversation substate disconnect msg failure due to invalid state, 0x35
    Access abort msg failure due to invalid state, 0x36
    Mail box routing err, 0x37
    Direct buffer mbox holding by DSPM timeout, 0x38
    Reverse traffic frame timing err, 0x39
    Invalid commands for service configuration, 0x60
    The unknown FCH rate for Mux Pdu Type 1, 0x61
    The unknown FCH rate for Mux Pdu Type 2, 0x62
    DTCH is not in use but frame rcved from DSPM, 0x63
    DCCH MuxPdu1 Bits size less than full rate, 0x64
    DCCH MuxPdu2 Bits size less than full rate, 0x65
    Physical Channel type is not supported, 0x66
    Invalid Rev Primary Traffic Rate, 0x67
    Invalid Forward FCH Mux Option, 0x68
    Invalid Reverse FCH Mux Option, 0x69
    Invalid Forward DCCH Mux Option, 0x6A
    Unsupported Rev MuxPdu Type For Current Phase, 0x6B
    Unsupported Rev Fch primary traffic rate, 0x6C
    Unknown Fwd Packet PT Rate for Loopback, 0x6D
    Invalid loopback MuxPdu Type, 0x6E
    Invalid Service Opt for Cntrol, 0x6F
    Unable sched srv opt control msg, 0x70
    Srv opt control not supported, 0x71
    Invalid Rev FCH num_bits, 0x72
    Invalid LPM num of entries, 0x73
    Invalid Fwd FCH num_bits, 0x74
    Invaild service config Sr_id, 0x75
    Rlp Srid Nomatch, 0x76
    Rlp Srid Disc, 0x77
    Rev Mux1 All Inuse, 0x78
    Rev Fchsec Sig Inuse, 0x79
    Rev Dcchsec Sig Inuse, 0x7A
    Rev FCH NOT use for RLP, 0x7B
    Rev DCCH NOT use for RLP, 0x7C
    Invalid Rev Fch Data Msg, 0x7D
    Invalid Rev Dcch Data Msg, 0x7E
    Invalid Rev Sch Data Msg, 0x7F
    Fwd Sch Msg Queue Empty, 0x80
    Rev Sch Msg Queue Empty, 0x81
    Invalid Physical channel for RLP, 0x82
    Invalid Signal Deregistration, 0x83
    No Task Associated with ServiceOpt, 0x84
    No SrId Associated with RSCH, 0x85
    Invalid RSCH Frame From RLP, 0x86
    SrvcOpt conn when audio disabled, 0x87
    Record Start Invalid Datatype, 0x90
    Record Start Invalid For Present State, 0x91
    Record Start Invalid While On Traffic Ch, 0x92
    Record Stop Invalid For Present State, 0x93
    Record Received Zero Len Encode Packet, 0x94
    Record Received Invalid Encode Packet Msgid, 0x95
    Record Expected Encode Packet, 0x96
    Record Invalid Datatype From Dspv, 0x97
    Record Invalid Rate For Service Option 1, 0x98
    Record Invalid Rate For Service Option 3, 0x99
    Record Invalid Rate For Service Option 17, 0x9a
    Record Invalid Data Length from DSPV, 0x9b
    Record Invalid Srvc Opt During Loopback, 0x9c
    Playback Start Invalid For Present State, 0xa0
    Playback Start Invalid While On Traffic Ch, 0xa1
    Playback Stop Invalid For Present State, 0xa2
    Playback Invalid Packet Rate, 0xa3
    Playback Service Option Mismatch, 0xa4
    Conv Record Invalid No Speech Srv Opt, 0xa8
    Answer Playback With No Packets, 0xa9
    Invalid Record Or Playback Spch Srv Opt, 0xb0
    Invalid Record Or Playback Msg, 0xb1
    Cant Enable Timer For Record Or Playback, 0xb2
    Invalid Rate Set, 0x100
    Invalid Rate Descision Result, 0x101
    Invalid Ets Rate Dec Msg, 0x200
    Invalid Voice Activity Target Rate From Msg, 0x1000
    Invalid Voice Activity Target Rate In Table, 0x1001
    Markov Invalid Zn, 0x1100
    Markov Invalid Ratemode, 0x1101
    Markov Invalid Multiplexoption, 0x1102
    Markov Invalid Packettype, 0x1103
    Markov Invalid Packetrate, 0x1104
    Markov Invalid Packetcat, 0x1105
    Markov Invalid Counterid, 0x1106
    Markov Invalid Ctrlrectype, 0x1107
    Tdso Invalid PacketCat, 0x1120
    Tdso Invalid Counterid, 0x1121
    Tdso Invalid Connect Traftype, 0x1122
    Tdso Invalid PacketType, 0x1123
    Tdso Invalid Muxoption, 0x1124
    Tdso Invalid Nx Bufsize, 0x1125
    Tdso Invalid Fwd Rc, 0x1126
    Tdso Invalid Rev Rc, 0x1127
    Tdso Invalid Probability, 0x1128
    Tdso Invalid Connect Channelid, 0x1129
    Tdso Invalid Process Channelid, 0x112A
    Tdso Invalid Disconn Channelid, 0x112B
    Tdso Invalid Ctrlrectype, 0x112C
    Tdso Bufsize Not Multiple of 3, 0x112D
    Sec Task Invalid Signal Id, 0x1140
    Sec Task MailBox Empty, 0x1141
    Sec Task Invalid Msg Id, 0x1142
    Dcch invalid Physical Res to allocate, 0x1150
    Fch  invalid Physical Res to allocate, 0x1151
    Channel Allocate and Dealloc conflic, 0x1152
    MpIsr Invalid Num Pdus, 0x1160
    Mp Out Of RAM Buffers, 0x1161
    MpIsr Frame Queue Full, 0x1162
    MpIsr Invalid Pdu Len Zero, 0x1163
    MpIsr Bad CRC, 0x1164
    Mp Frame Free Bad Pointer, 0x1165
    Mp Frame Free Not Allocated, 0x1166
    MpMem Buffer Free Bad Ptr, 0x1170
    MpMem Buffer Free Not Allocated, 0x1171
    MpMem Buffer Free Corrupted, 0x1172
    MpMem Buffer Get Bad Size, 0x1173
    MpMem Buffer Get Out Of Buffers, 0x1174
    MpTest Frame Data Mismatch, 0x1180
    MpTest Invalid Num PDUs Rcvd, 0x1181
    Rev Data Msg queued, 0x1182
    Invalid Index Into ChInd Table, 0x1183
    VSTRM Undef Msg Received, 0x1190
    VSTRM Fwd Pkt Discarded, 0x1191
    VSTRM Can't Enable Timer, 0x1192
    IMAS Write Downlink Frame Error, 0x1200
    IMAS Prepare Uplink Frame Error, 0x1201
    IMAS Uplink Frame Rate Error, 0x1202
    IMAS Read Uplink Frame Error, 0x1203
    IMAS Callback Voice Action Error, 0x1204
    IMAS Voice User Error, 0x1205
    IMAS Codec Type Error, 0x1206
End

Begin Enum, CP Mon Err Codes
    Message Id Error, 0, RO
    Spy Id Error, 1, RO
    Spy Length Error, 2, RO
    Trace Id Error, 3, RO
    Num Trace Args Error, 4, RO
    BB Mode Error, 5, RO
    Num Printf Args Error, 6, RO
    Peek Len Error, 7, RO
    Poke Len Error, 8, RO
    Sequence Number Error, 9, RO
    Flash Section Error, 10, RO
    Checksum Error, 11, RO
    Vocoder Test Mode Error, 12, RO
    Asic Revision Error, 13, RO
    Direct Buffer Loopback Error, 14, RO
    ARM Run time library Error, 15, RO
    CBP Compatibility ID Mismatch, 16, RO
    DSP Download File Id Error, 20, RO
    DSP Download Asic Revision Error, 21, RO
    DSP Download Asic Version Error, 22, RO
    DSP Download Too Many Patches Error, 23, RO
    DSP Download No Patch Error, 24, RO
    DSP Download Timeout, 25, RO
    DSP Download Checksum Error, 26, RO
    DSP Download Complete Error, 27, RO
    DSP Download Patchset ID Error, 28, RO
    Reset Exception Error, 29, RO
    Undefined Instruction Error, 30, RO
    Software Interrupt Exception Error, 31, RO
    Prefetch Abort Exception Error, 32, RO
    Data Abort Exception Error, 33, RO
    Reserved Exception Error, 34, RO
    BB Not Ready Error, 40, RO
    BB FromBuffer Not Ready Error, 41, RO
    BB Invalid Mode Error, 42, RO
    BB Operation Failed, 43, RO
    System Release Asic Version Error, 44, RO
    System Release Asic Type Error, 45, RO
    System Release CP Software Revision Error, 46, RO
    System Release DSPv Software Revision Error, 47, RO
    System Release DSPm Software Revision Error, 48, RO
    Test Not Supported, 49, RO
    Invalid Num App Msgs Error, 50, RO
    Dynamic Code Download Failed, 51, RO
    Invalid App Chan Msg Id Error, 52, RO
    Invalid File Offset Error, 53, RO
    EVDO Auto Spy Id Error, 54, RO
    Unexpected DSPV Reset Error, 55, RO
    Flash Section Size Error, 56, RO
    Deep Sleep Preparation Time Too Large, 57, RO
    Stack Overflow Error, 58, RO
    Stack Size Too Small Warning, 59, RO
    DSPm Fault Halt, 60, RO
    DSPv Fault Halt, 61, RO
    DSP Failed To Start, 62, RO
    Unexpected DSPm Reset Err, 63, RO
    Requested Heap Not Avail, 64, RO
    Too Many Heap Alloc Requests, 65, RO
    No Debug Heap Allocated, 66, RO
    Silent Logging Upload Err, 67, RO
    Deep Sleep Multimode Err, 68, RO
    Alingnment Address Violation Err, 69, RO
    MMU access permission Violation Err, 70, RO
    BOOT Compatibility ID Missing, 71, RO
    BOOT incompatible with CP, 72, RO
    Comp LGPL Code Invalid, 73, RO
    Comp CUST Code Invalid, 74, RO
    Sw Buffer Overrun, 75, RO
End

Begin Enum, DspNames
    DSPM, 4
    DSPV, 5
End

Begin Enum, BB Config Mode
    BB To Modem Continuous, 1
    BB To Modem Single, 2
    Modem To BB Rx Write, 3
    Modem To BB Tx Write, 4
    Serial Download Init, 5
    Serial Upload Init, 6
    ECP Download Init, 7
    ECP Upload Init, 8
    Disable, 9
    BB To DO Modem Continuous, 10
    BB To DO Modem Single, 11
    DO Modem To BB Rx Write, 12
    DO Modem To BB Tx Write, 13
    BB to GPS Continuous, 14
    BB to GPS Single, 15
    GPS to BB Record, 16
End

Begin Enum, IpcDspAppMsgIdT
    IPC_APP_CP_REQ_FREAD (1), 1,
    IPC_APP_CP_REQ_FWRITE (2), 2,
    IPC_APP_CP_REQ_FCLOSE (3), 3,
    IPC_APP_CP_REQ_FILEINFO (4), 4,
    IPC_APP_CP_REQ_DISPLAY_PIXELS (5), 5,
    IPC_APP_CP_MP3_STATUS (6), 6,
    IPC_APP_CP_APP_STATUS (7), 7,
    IPC_APP_DSP_RSP_FREAD (0x1001), 0x1001,
    IPC_APP_DSP_RSP_FWRITE (0x1002), 0x1002,
    IPC_APP_DSP_RSP_FCLOSE (0x1003), 0x1003,
    IPC_APP_DSP_RSP_FILEINFO (0x1004), 0x1004,
End

Begin Enum, CP Thread Ids
    IPC_ID, 0,
    ETS_ID, 1,
    L1D_MDM_ID, 2,
    MON_ID, 3,
    HWD_ID, 4,
    DBM_ID, 5,
    PSW_ID, 6,
    PSW_S_ID, 7,
    LMD_ID, 8,
    LMD_S_ID, 9,
    VAL_ID, 10,
    RLP_ID, 11,
    HLP_ID, 12,
    HSC_ID, 13,
    SLC_ID, 14,
    CLC_ID, 15,
    RMC_ID, 16,
    FCP_ID, 17,
    RCP_ID, 18,
    CSS_ID, 19,
    SEC_ID, 20,
    MMC_ID, 21,
    UIM_ID, 22,
    PDS_ID, 23,
    PAC_ID, 24,
    RUP_ID, 25,
    CAS_ID, 26,
    HISR_FIQ_ID, 27,
    HISR_IRQ_ID, 28,
    L1STUB_ID, 29,
    TST_ID, 30,
    TIMER_LISR_THREAD_ID, 89,
    UART0_LISR_THREAD_ID, 90,
    UART1_LISR_THREAD_ID, 91,
    UART2_LISR_THREAD_ID, 92,
    CTS_LISR_THREAD_ID, 93,
    DSPM_CTL_MBOX_LISR_THREAD_ID, 94,
    DSPM_DBUF_MBOX_LISR_THREAD_ID, 95,
    DSPV_MBOX_LISR_THREAD_ID, 96,
    DSPV_F_MBOX_LISR_THREAD_ID, 97,
    KEYPAD_LISR_THREAD_ID, 98,
    FAST_DAI_I_LISR_THREAD_ID, 99,
    RESYNC_LISR_THREAD_ID, 100,
    SLEEP_OVER_LISR_THREAD_ID, 101,
    PON_WAKE_LISR_THREAD_ID, 102,
    AXADEO_LISR_THREAD_ID, 103,
    RTC_WAKE_LISR_ID, 104,
    I2C_LISR_THREAD_ID, 105,
    SYS_TIME_LISR_THREAD_ID, 106,
    UIMRX_LISR_THREAD_ID, 107,
    UIMTX_LISR_THREAD_ID, 108,
    MUXPDU_LISR_THREAD_ID, 109,
    MSPI_LISR_THREAD_ID, 111,
    CMR_LISR_THREAD_ID, 112,
    MMC_LISR_THREAD_ID, 113,
    USB_LISR_THREAD_ID, 114,
    ESPI_LISR_THREAD_ID, 115,
    M2CFM_FIQISR_THREAD_ID, 116,
    M2CFM_LISR_THREAD_ID, 117,
    SHARED_MEM_LISR_THREAD_ID, 118,
    DO_SRCH_LISR_THREAD_ID, 119,
    SYS_DO_TIME_LISR_THREAD_ID, 120,
    DO_SLOT_LISR_THREAD_ID, 121,
    DO_HALF_SLOT_LISR_THREAD_ID, 122,
    DO_FN_SLOTFOUND_LISR_THREAD_ID, 123,
    DO_CELLSWRDY_LISR_THREAD_ID, 124,
    DMA_MDM_RX_LISR_THREAD_ID, 125,
    D0_PPP_HA_DEC0_LISR_THREAD_ID, 126,
    D0_PPP_HA_DEC1_LISR_THREAD_ID, 127,
    D0_PPP_HA_ENC0_LISR_THREAD_ID, 128,
    D0_PPP_HA_ENC1_LISR_THREAD_ID, 129,
    GENERIC_DMA_LISR_THREAD_ID, 130,
    DMA_MDM_TX_LISR_THREAD_ID, 131,
    SDIO_S_LISR_THREAD_ID, 132,
    GPINT_SRC1_LISR_THREAD_ID, 133,
    GPINT_SRC3_LISR_THREAD_ID, 134,
    SLEEP_OVER_DO_LISR_THREAD_ID, 135,
    USBWAL_LISR_THREAD_ID, 136,
    MXS_SPI_RD_LISR_THREAD_ID, 137,
    DMAC_LISR_THREAD_ID, 138,
    GFX_LISR_THREAD_ID, 139,
    GPSVT_NCO_AB_THREAD_ID, 140,
    GPSVT_COH_AB_THREAD_ID, 141,
    GPSVT_CINT_AB_THREAD_ID, 142,
    UIM2RX_LISR_THREAD_ID, 143,
    UIM2TX_LISR_THREAD_ID, 144,
    DPRAM_THREAD_ID, 145,
    GCIPH_LISR_THREAD_ID, 146,
    GCLKGEN_LISR_THREAD_ID, 147,
    GCHDTBF_LISR_THREAD_ID, 148,
    GTDMAFR_LISR_THREAD_ID, 149,
    GDSPIFBF_LISR_THREAD_ID, 150,
    GCHDCBF_LISR_THREAD_ID, 151,
    GTDMAEVT_LISR_THREAD_ID, 152,
    ARMCLK_CHG_DONE_LISR_THREAD_ID, 153,
    SLEEP_OVER_GPS_LISR_THREAD_ID, 154,
    SLEEP_OVER_BD_LISR_THREAD_ID, 155,
    SLEEP_OVER_SW_LISR_THREAD_ID, 156,
    TIMER_HISR_THREAD_ID, 158,
    UART0_HISR_THREAD_ID, 159,
    UART1_HISR_THREAD_ID, 160,
    UART2_HISR_THREAD_ID, 161,
    DSPM_CTL_MBOX_HISR_THREAD_ID, 162,
    DSPM_DBUF_MBOX_HISR_THREAD_ID, 163,
    DSPV_MBOX_HISR_THREAD_ID, 164,
    SYS_TIME_HISR_THREAD_ID, 165,
    CTS0_HISR_THREAD_ID, 166,
    GPSVT_NCO_HISR_THREAD_ID, 167,
    GPSVT_COH_HISR_THREAD_ID, 168,
    GPSVT_CINT_HISR_THREAD_ID, 169,
    KEYPAD_HISR_THREAD_ID, 170,
    SLEEP_OVER_HISR_1X_THREAD_ID, 171,
    SPAGE_RESYNC_HISR_THREAD_ID, 172,
    UIM2_CMD_HISR_THREAD_ID, 173,
    DPRAM_HISR_THREAD_ID, 174,
    ESPI_HISR_THREAD_ID, 175,
    SYS_EVENT_HISR_THREAD_ID, 176,
    MUXPDU_HISR_THREAD_ID, 177,
    MSPI_HISR_THREAD_ID, 178,
    RINGER_HISR_THREAD_ID, 179,
    CMR_HISR_THREAD_ID, 180,
    MMC_HISR_THREAD_ID, 181,
    UIM_CMD_HISR_THREAD_ID, 182,
    USB_HISR_THREAD_ID, 183,
    M2CFM_HISR_THREAD_ID, 184,
    USBCABLE_HISR_THREAD_ID, 185,
    SHARED_MEM_HISR_THREAD_ID, 186,
    PON_WAKE_HISR_THREAD_ID, 187,
    RTC_WAKE_HISR_ID, 188,
    DO_SRCH_HISR_THREAD_ID, 189,
    DO_FN_SLOTFOUND_HISR_THREAD_ID, 190,
    DO_CELLSWRDY_HISR_THREAD_ID, 191,
    DMA_MDM_RX_HISR_THREAD_ID, 192,
    D0_PPP_HA_DEC0_HISR_THREAD_ID, 193,
    D0_PPP_HA_DEC1_HISR_THREAD_ID, 194,
    D0_PPP_HA_ENC0_HISR_THREAD_ID, 195,
    D0_PPP_HA_ENC1_HISR_THREAD_ID, 196,
    GENERIC_DMA_HISR_THREAD_ID, 197,
    USB_SH_DMA_HISR_THREAD_ID, 198,
    USB1_DMA_HISR_THREAD_ID, 199,
    USB2_DMA_HISR_THREAD_ID, 200,
    USB3_DMA_HISR_THREAD_ID, 201,
    USB_ADE_HISR_THREAD_ID, 202,
    MMAPPS_HISR_THREAD_ID, 203,
    MPA_PREEMPT_REQ_HISR_THREAD_ID, 204,
    RCP_RMC_RF_DONE_HISR_THREAD_ID, 205,
    USB4_DMA_HISR_THREAD_ID, 206,
    SDIO_S_HISR_THREAD_ID, 207,
    GPINT0_HISR_THREAD_ID, 208,
    GPINT1_HISR_THREAD_ID, 209,
    GPINT2_HISR_THREAD_ID, 210,
    GPINT3_HISR_THREAD_ID, 211,
    GPINT4_HISR_THREAD_ID, 212,
    GPINT5_HISR_THREAD_ID, 213,
    GPINT6_HISR_THREAD_ID, 214,
    GPINT7_HISR_THREAD_ID, 215,
    GPINT8_HISR_THREAD_ID, 216,
    GPINT9_HISR_THREAD_ID, 217,
    GPINT10_HISR_THREAD_ID, 218,
    GPINT11_HISR_THREAD_ID, 219,
    SBC_ENCODE_HISR_THREAD_ID, 220,
    AVSYNC_HISR_THREAD_ID, 221,
    MXSSPI_HISR_THREAD_ID, 222,
    GPINT12_HISR_THREAD_ID, 223,
    GPINT13_HISR_THREAD_ID, 224,
    GPINT14_HISR_THREAD_ID, 225,
    GPINT15_HISR_THREAD_ID, 226,
    DMA_HISR_THREAD_ID, 227,
    GFX_HISR_THREAD_ID, 228,
    MXSGEN_HISR_THREAD_ID, 229,
    MP4_HISR_THREAD_ID, 230,
    AVC_HISR_THREAD_ID, 231,
    SLEEP_OVER_HISR_DO_THREAD_ID, 232,
    IM2_HISR_THREAD_ID, 233,
    SLEEP_OVER_HISR_GPS_THREAD_ID, 234,
    SLEEP_OVER_HISR_BD_THREAD_ID, 235,
    SLEEP_OVER_HISR_SW_THREAD_ID, 236,
    SPAGE_RESYNC_DO_HISR_THREAD_ID, 237,
    HWD_PROFILE_RESERVED1_ID, 238,
    HWD_PROFILE_RESERVED2_ID, 239,
    GCIPH_HISR_THREAD_ID, 240,
    GCLKGEN_HISR_THREAD_ID, 241,
    GCHDTBF_HISR_THREAD_ID, 242,
    GTDMAFR_HISR_THREAD_ID, 243,
    GDSPIFBF_HISR_THREAD_ID, 244,
    GCHDCBF_HISR_THREAD_ID, 245,
    GTDMAEVT_HISR_THREAD_ID, 246,
End

Begin Enum, Silent Logging Upload Errs
    Logging Still Enabled, 1
    No Heap Allocated, 2
    No Data Available, 3
End

Begin Enum, CP Psw Err Codes
    Unexpected event, 0x1000
    Mailbox should not be empty, 0x1001
    Invalid Message Id, 0x1002
    Invalid ETS test mode, 0x1003
    S Task RSA Computation Failed, 0x1004
    No available timers, 0x1100
    Null callback timer id, 0x1101
    Invalid callback timer id, 0x1102
    Too many cand freq pilots, 0x1200
    Too many active set pilots, 0x1201
    Too many candidate set pilots, 0x1202
    Too many neighbor set pilots, 0x1203
    Too many remaining set pilots, 0x1204
    Invalid band, 0x1205
    Invalid rate, 0x1206
    Invalid service option, 0x1207
    Invalid message priority, 0x1208
    Invalid multiplex option, 0x1209
    Invalid status value in command status msg, 0x120a
    To many pilots in wbios idle pilot set, 0x120b
    To many pilots in used candidate freq list, 0x120c
    To many pilots in unused candidate freq list, 0x120d
    To many active pilots in set list update, 0x120e
    To many candidate pilots in set list update, 0x120f
    To many neighbor pilots in set list update, 0x1210
    Access msg size mismatch, 0x1211
    To many pilots in tc active set, 0x1212
    To many conn in srv config, 0x1213
    Invalid srv config traffic type, 0x1214
    Invalid serv option in srv config, 0x1215
    Invalid mux option in srv config, 0x1216
    Null srv config pointer, 0x1217
    Invalid candiate frequency neighbor search mode, 0x1218
    Invalid idle neighbor search mode, 0x1219
    Invalid number of idle updates pilots, 0x121a
    Invalid transmitter control value, 0x121b
    Invalid reverse traffic channel traffic type, 0x121c
    Invalid rate from PE, 0x121d
    Invalid TMSI Length, 0x121e
    Traffic msg size mismatch, 0x121f
    Invalid hard handoff parameters, 0x1220
    Invalid NAM checksum, 0x1221
    GetPrl recd unexpected msg ID, 0x1222
    GetPrl recd invalid msg ID, 0x1223
    GetPrl MBOX should not be empty, 0x1224
    GetPrl unexpected event, 0x1225
    Invalid PRL, 0x1226
    Invalid Call Initiate Msg, 0x1227
    Invalid Active NAM ID - Default to NAM1, 0x1228
    Invalid Pended Event for Idle State, 0x1229
    Continuous DTMF Request Queue Overflow, 0x122A
    Pend User or Engine Request failed - Queue full, 0x122B
    Power Combine Indicator Invalid, 0x122C
    Invalid Engine Request type for idle state pend, 0x122D
    PSW_ERR_INVALID_ERI_TABLE, 0x122E
    PSW_ERR_NO_ERI_TABLE, 0x122F
    PSW_ERR_GET_ERI_TABLE_RECEIVED_UNEXPECTED_MSG_ID, 0x1230
    PSW_ERR_GET_ERI_TABLE_RECEIVED_INVALID_MSG_ID, 0x1231
    PSW_ERR_GET_ERI_TABLE_MBOX_SHOULD_NOT_BE_EMPTY, 0x1232
    PSW_ERR_GET_ERI_TABLE_UNEXPECTED_EVENT, 0x1233
    PSW_ERR_ERI_ENTRY_NOT_FOUND, 0x1234
    PSW_MOBILE_ID_INCORRECT_SET_OPERATION, 0x1235
    PSW_ERR_CORRUPT_SECURE_DATA, 0x1236
    PSW_ERR_MOBILE_ID_NOT_SET, 0x1237
    PSW_MOBILE_ID_VALUE_OUT_OF_RANGE, 0x1238
    Using Default NAM, 0x1239
    Using Default MS CAP DB, 0x123A
    Using Default MRU, 0x123B
    PSW_ERR_UPDATE_IMSI_INVALID_IMSI_S_CHARS, 0x123C
    PSW_ERR_UPDATE_IMSI_INVALID_IMSI_11_12_CHARS, 0x123D
    PSW_ERR_UPDATE_IMSI_INVALID_MCC_CHARS, 0x123E
    PSW_ERR_UPDATE_IMSI_NO_VALID_DATA_TO_UPDATE, 0x123F
    PSW_ERR_UPDATE_IMSI_GENERAL_FAILURE, 0x1240
    PSW_ERR_UPDATE_MDN_CHARS, 0x1241
    PSW_ERR_UPDATE_MDN_GENERAL_FAILURE, 0x1242
    PSW_ERR_SET_PARM_INCORRECT_USAGE, 0x1243
    PSW_ERR_BC_NOM_PWR_EXT_MISMATCH, 0x1244
    PSW_ATTEMPT_TO_WRITE_INVALID_MOBILE_ID, 0x1246
    Service option disabled, 0x1247
    PSW_ERR_SOFTWARE_BUFFER_OVERRUN_ERR, 0x1248
    Psw read UIM data failure, 0x1290
    Psw update UIM data failure, 0x1291
    Unexpected UIM AuthRsp Msg Id, 0x1292
    UIM Authentication failure, 0x1293
    UIM Auth MBOX should not be empty, 0x1294
    UIM Auth unexpected event, 0x1295
    UIM Auth timeout, 0x1296
    UIM ETS Nam Update Ignored, 0x1297
    CSS PRL-Hash Table Slot Full, 0x1298
    Band Block Channel Out of Range, 0x1299
    Pref Band in Nam Not Supported, 0x129A
    Band Not Right for Carrier, 0x129B
    Band Not Supported in Nam, 0x129C
    Power Class Band Not Supported, 0x129D
    Parameter Operation Not Supported, 0x129E
    Parameter Operation Invalid Length, 0x129F
    Parameter Operation Invalid Ptr, 0x12A0
    Parameter Operation General Failure, 0x12A1
    PSW UTK General Failure, 0x12A2
    PSW_UTK_PROACTIVE_CMD_TAG_ERR, 0x12A3
    PSW_UTK_PROACTIVE_CMD_LEN_ERR, 0x12A4
    PSW_UTK_PROACTIVE_CMD_NUM_ERR, 0x12A5
    PSW_UTK_PROACTIVE_CMD_TYPE_ERR, 0x12A6
    PSW_UTK_PROACTIVE_CMD_SIP_TAG_ERR, 0x12A7
    PSW_UTK_PROACTIVE_CMD_DEVICE_ERR, 0x12A8
    PSW_UTK_PROACTIVE_CMD_MISS_DEVICE, 0x12A9
    PSW_UTK_PROACTIVE_CMD_MISS_ALPHA, 0x12AA
    PSW_UTK_PROACTIVE_CMD_MISS_ITEM, 0x12AB
    PSW_UTK_PROACTIVE_CMD_MISS_ADDRESS, 0x12AC
    PSW_UTK_PROACTIVE_CMD_MISS_RSPLEN, 0x12AD
    PSW_UTK_PROACTIVE_CMD_MISS_SMSPDU, 0x12AE
    PSW_UTK_PROACTIVE_CMD_MISS_EVENTLIST, 0x12AF
    PSW_UTK_PROACTIVE_CMD_MISS_BEARER, 0x12B0
    PSW_UTK_PROACTIVE_CMD_MISS_BUFSIZE, 0x12B1
    PSW_UTK_PROACTIVE_CMD_MISS_CHANNELDATALEN, 0x12B2
    PSW_UTK_PROACTIVE_CMD_MISS_CHANNELDATA, 0x12B3
    PSW_UTK_CMD_DETAIL_LEN_MISMATCH, 0x12B4
    PSW_UTK_DEVICE_LEN_MISMATCH, 0x12B5
    PSW_UTK_ICON_LEN_MISMATCH, 0x12B6
    PSW_UTK_DURATION_LEN_MISMATCH, 0x12B7
    PSW_UTK_TEXTRSP_LEN_MISMATCH, 0x12B8
    PSW_UTK_TONE_LEN_MISMATCH, 0x12B9
    PSW_UTK_FILELIST_LEN_MISMATCH, 0x12BA
    PSW_UTK_PROACTIVE_CMD_LEN_MISMATCH, 0x12BB
    PSW_UTK_PRO_MENU_SELECTION_RSP_ERR, 0x12BC
    PSW_UTK_EVENT_CALL_CONTROL_RSP_ERR, 0x12BD
    PSW_UTK_PRO_DATA_AVAILABLE_RSP_ERR, 0x12BE
    PSW_UTK_PRO_MTCALL_RSP_ERR, 0x12BF
    PSW_UTK_PRO_CALL_CONN_RSP_ERR, 0x12C0
    PSW_UTK_PRO_CALL_DISC_RSP_ERR, 0x12C1
    PSW_UTK_PRO_LOC_STATUS_RSP_ERR, 0x12C2
    PSW_UTK_PRO_ACCTECH_CHANGE_RSP_ERR, 0x12C3
    PSW_UTK_PRO_TERM_RSP_RSP_ERR, 0x12C4
    PSW_UIM_PARM_OPERATION_NOT_SUPPORTED, 0x12C5
    Invalid num type, 0x1300
    Invalid num Plan, 0x1301
    Invalid presentation ind, 0x1302
    Invalid screen ind, 0x1303
    Invalid signal type, 0x1304
    Invalid alert pitch, 0x1305
    Invalid call processing event, 0x1306
    Invalid call processing state, 0x1307
    Invalid request mode, 0x1308
    Invalid number type, 0x1309
    Service Option not supported, 0x130A
    Protocol engine reported error, 0x1400
    Invalid trace Id from engine, 0x1401
    Invalid spy Id from engine, 0x1402
    Invalid assert from engine, 0x1403
    Startup received unexpected msg id, 0x1500
    Startup received invalid_msg id, 0x1501
    Startup mbox should not be empty, 0x1502
    Startup unexpected event, 0x1503
    SMS message received to large, 0x1600
    SMS invalid SAP connect value, 0x1601
    SMS invalid SAP disconnect value, 0x1602
    SMS invalid SAP submit value, 0x1603
    SMS invalid SAP cancel value, 0x1604
    SMS invalid SAP user ack value, 0x1605
    SMS invalid engine already connected for connect, 0x1606
    SMS SAP not connected for disconnect, 0x1607
    SMS SAP not connected for submit, 0x1608
    SMS SAP not connected for cancel, 0x1609
    SMS SAP not connected for user ack, 0x160A
    SMS SAP engine already disconnected for disconnect, 0x160C
    SMS SAP engine already disconnected for submit, 0x160D
    SMS SAP engine already disconnected for cancel, 0x160E
    SMS SAP engine already disconnected for user ack, 0x160F
    SMS engine error, 0x1610
    SMS no available timers, 0x1611
    SMS invalid callback timer id, 0x1612
    SMS data size to large, 0x1613
    SMS too many connections already, 0x1614
    SMS invalid number of address chars, 0x1615
    SMS broadcast could not be connected, 0x1616
    SMS broadcast already disabled, 0x1617
    SMS messages too many, 0x1618
    MsgType for FPC Mode in Data Service Signalling Invalid, 0x1619
    SMS sending request rejected - Hybrid, 0x161A
    SMS broadcast already enabled, 0x161B
    SCC badly behaved, 0x1700
    SCC queue full, 0x1701
    SCC PSC invalid preference, 0x1702
    SCC VSC invalid preference, 0x1703
    SCC DSC invalid preference, 0x1704
    SCC LSC invalid preference, 0x1705
    SCC MSC invalid preference, 0x1706
    SCC OSC invalid preference, 0x1707
    SCC CSC invalid preference, 0x1708
    SCC NEG unsupported service option, 0x1709
    SCC NEG unexpected CP event, 0x170A
    SCC PSC pRev conflict, 0x170B
    SCC VSC pRev conflict, 0x170C
    SCC DSC pRev conflict, 0x170D
    SCC LSC pRev conflict, 0x170E
    SCC MSC pRev conflict, 0x170F
    SCC OSC pRev conflict, 0x1710
    PSW_ERR_LOC_SESS_NOT_FOUND, 0x1750,
    PSW_ERR_LOC_AFLT_STATE, 
    PSW_ERR_LOC_TCP_RCV_STATE, 
    PSW_ERR_LOC_OUT_PUT_FULL, 
    PSW_ERR_LOC_OUT_PUT_STATE, 
    PSW_ERR_LOC_INVALID_PPM, 
    PSW_ERR_LOC_PPM_ID, 
    PSW_ERR_LOC_EV, 
    PSW_ERR_LOC_SMS_RCV_STATE, 
    PSW_ERR_LOC_FLOW_STATE, 
    PSW_ERR_LOC_RSP_MSG_NUM, 
    PSW_ERR_LOC_PPM_STATE_ID, 
    PSW_ERR_LOC_PRM_STATE_ID, 
    PSW_ERR_LOC_SESS_DONE_INST_ID, 
    PSW_ERR_LOC_PPM_START_ID, 
    PSW_ERR_LOC_RESTART_ID, 
    PSW_ERR_LOC_ALM_FLAG_ID, 
    PSW_ERR_LOC_EPH_FLAG_ID, 
    Invalid Access attempt type, 0x1800
    Invalid BA rate value, 0x1801
    Invalid ACC correction, 0x1802
    Invalid Radio Configuration, 0x1803
    Invalid band for EACH probe, 0x1804
    Invalid frame duration for EACH probe, 0x1805
    Invalid rate for EACH probe, 0x1806
    Access probe attempted while one in progress, 0x1807
    PE record length does not match expected length, 0x1900
    General Extension Record Not Supported, 0x1901
    Invalid checksum during MS cap database init, 0x1A00
    MS Cap DB update failed, 0x1A01
    PSW_ERR_PE_INVALID_CHECKSUM_PSW_MISC_DB, 0x1A02
    Css invalid sys pref type, 0x1B00
    Css invalid ind in power up state, 0x1B01
    Css invalid ind in powerup not most pref state, 0x1B02
    Css invalid ind in powerup non system table state, 0x1B03
    Css invalid ind in power up negative state, 0x1B04
    Css invalid ind in idle state, 0x1B05
    Css invalid ind in more pref scan state, 0x1B06
    Css invalid ind in emergency state, 0x1B07
    Css invalid ind in system lost state, 0x1B08
    Css invalid ind in redirection state, 0x1B09
    Css invalid ind in registration reject state, 0x1B0A
    Css invalid ind in otasp state, 0x1B0B
    Css invalid ind in emergency redirection state, 0x1B0C
    Css invalid ind in emergency system lost state, 0x1B0D
    Css invalid chan in otasp state, 0x1B0E
    Css invalid system type, 0x1B0F
    Css invalid redirection sys not found, 0x1B10
    Css invalid band class in CDMA redirection, 0x1B11
    Css invalid sys type in AMPS redirection, 0x1B12
    Css invalid css state, 0x1B13
    Css invalid band class in cdma avail, 0x1B14
    Css invalid band class in add cdma avail, 0x1B15
    Css invalid css indication, 0x1B16
    Css invalid not in CDMA idle for Force Analog, 0x1B17
    Css invalid band class in otasp state, 0x1B18
    PE_ERR_CSS_INVALID_SPRINT_PRL, 0x1B19
    Css unsupported SSPR protocol revision, 0x1B1A
    Css SSPR Nam Prev and PRL Prev Mismatch, 0x1B1B
    Css invalid system record type, 0x1B1C
    Css invalid acqusition record type, 0x1B1D
    PS_ERR_PDCH_ECAM_NUM_PILOTS_EXC, 0x1C00
    PS_ERR_PDCH_INVALID_CONFIG, 0x1C01
    PS_ERR_PDCH_LMD_SERVCFG_NN_NUM_LPM_EXC, 0x1C02
    PS_ERR_PDCH_UHDM_INVALID_INFOREC, 0x1C03
    PS_ERR_PDCH_UHDM_INVALID_CHIND, 0x1C04
    PS_ERR_PDCH_UHDM_INVALID_EXTCHIND, 0x1C05
    PS_ERR_PDCH_UHDM_INVALID_NUM_PILOTS, 0x1C06
    PS_ERR_PDCH_UHDM_INVALID_ADDPILOTREC_LEN, 0x1C07
    PS_ERR_PDCH_ERM_INVALID_CHIND, 0x1C08
    PS_ERR_PDCH_ERM_EOM, 0x1C09
    PS_ERR_PDCH_ERM_INVALID_CHCFG, 0x1C0A
End

Begin Enum, CP Hwd Err Codes
    0x00 Test task received unknown command, 0x00, RO
    0x01 Test task received unknown event, 0x01, RO
    0x02 Test task received unknown signal, 0x02, RO
    0x03 Invalid PLL selection, 0x03, RO
    0x04 Invalid MDM PLL state, 0x04, RO
    0x05 Serializer immediate load time out, 0x05, RO
    0x06 Invalid mixed signal device, 0x06, RO
    0x07 Aux immediate interrupt ready timeout, 0x07, RO
    0x08 Aux timed interrupt ready timeout error, 0x08, RO
    0x09 PDM timed interrupt ready timeout error, 0x09, RO
    0x0A PDM immediate interrupt ready timeout error, 0x0A, RO
    0x0B Invalid Rx channel type, 0x0B, RO
    0x0C Invalid mail message at startup time, 0x0C, RO
    0x0D Invalid signal at startup time, 0x0D, RO
    0x0E Timeout condition at startup time, 0x0E, RO
    0x0F Calibration parms not received, 0x0F, RO
    0x10 Startup signal not received, 0x10, RO
    0x11 Flash memory erase error, 0x11, RO
    0x12 Flash memory program error, 0x12, RO
    0x13 Flash sector is protected, 0x13, RO
    0x14 Illegal GPIO selected error, 0x14, RO
    0x15 Illegal request, 0x15, RO
    0x16 calibration parameter exceeds limits, 0x16, RO
    0x17 ADC measurement conversion timeout, 0x17, RO
    0x18 GPIO configuration collision, 0x18, RO
    0x19 Rx ADC Bandwidth calibration failure, 0x19, RO
    0x1A Sleep LPT Schedule Error, 0x1A, RO
    0x1B Ts2Ts calculation error, 0x1B, RO
    0x1C Rx ADC DC offset calibration failure, 0x1C, RO
    0x1D Key Scan Error, 0x1D, RO
    0x1E RF PLL Lock Lost, 0x1E, RO
    0x1F DSPV Is Clocked Off, 0x1F, RO
    0x22 Error Read Temperature, 0x22, RO
    0x23 Error Read Battery Voltage, 0x23, RO
    0x24 RF Table Of Function Pointers Has Null Entry, 0x24, RO
    0x25 Tune Count Read Failure, 0x25, RO
    0x26 Tx DC Offset Cal I Diff Failure, 0x26, RO
    0x27 Tx DC Offset Cal Q Diff Failure, 0x27, RO
    0x28 Invalid Uart Baud Rate Detected, 0x28, RO
    0x3E USB Core Config Error, 0x3E, RO
    0x3F Audio mode requested is not supported, 0x3F, RO
    0x40 Gain State FIQ Resource Contention, 0x40, RO
    0x41 MMC Card Status Reported Error, 0x41, RO
    0x42 RF mapping assignments format error, 0x42, RO
    0x92 Pwr Saving Mode Config Out of Range, 0x92, RO
    0x93 Audio Set Mode Sem Timeout, 0x93, RO
    0x94 Audio Set Vol Sem Timeout, 0x94, RO
    0x95 Audio Set Path Sem Timeout, 0x95, RO
    0x96 IMelody Event Invalid, 0x96, RO
    0x97 HWD DMA Status Error, 0x97, RO
    0x98 HWD DMA Register write Error, 0x98, RO
    0x99 Pwr Saving Switching Out of Range, 0x99, RO
    0x9A Diversity Rf is not supported, 0x9A, RO
    0x9B Sidetone Not Sent to DSPV, 0x9B, RO
    0x9C Mp3 Frame Sync Not Found, 0x9C, RO
    0x9D MIDI Invalid Pitch Range, 0x9D, RO
    0x9E Audio Tone Sem Timeout, 0x9E, RO
    0x9F MIDI Max Tracks Exceeded, 0x9F, RO
    0xA0 TONE Invalid Tone Id, 0xA0, RO
    0xA1 TONE Vocoder App not Downloaded, 0xA1, RO
    0xA2 CMF Unexpected SubChunk Type, 0xA2, RO
    0xA3 CMF Too Many Jump Points, 0xA3, RO
    0xA4 CMF Jump Cmd with Zero Jumps, 0xA4, RO
    0xA5 CMF No Empty NoteOff Tbl Entries, 0xA5, RO
    0xA6 CMF Pitch Bend Overflow, 0xA6, RO
    0xA7 CMF DLS Feature Not Supported, 0xA7, RO
    0xA8 No RF Calib Data File -- using defaults, 0xA8, RO
    0xA9 Cdma1 Calibration parms not received, 0xA9, RO
    0xAA Cdma2 Calibration parms not received, 0xAA, RO
    0xAB Cdma3 Calibration parms not received, 0xAb, RO
    0xAC PwrDet measurement out of range - check cal, 0xAC, RO
    0xAD Requested RF Band is not supported, 0xAD, RO
    0xAE Not all cdma4 cal parms were received, 0xAE, RO
    0xAF SDIO AHBTX not zero, 0xAF, RO
    0xB0 Invalid Delay Control Unit is received, 0xB0, RO
    0xB1 Rf Driver and Default Data Mismatch, 0xB1, RO
    0xB2 Rf Driver SMARTi RF ERR_RB, 0xB2, RO
    0xB3 MMApps Music Malloc Fail, 0xB3, RO
    0xB4 MXS SPI Write Error, 0xB4, RO
    0xB5 MXS SPI Read Error, 0xB5, RO
    0xB6 MXS SPI Queue Full Error, 0xB6, RO
    0xB7 MIDI File Read Fail, 0xB7, RO
    0xB8 MIDI Track Buf Not Ready, 0xB8, RO
    0xB9 MIDI Too Many Tempo Events, 0xB9, RO
    0xBA MSG ID mismatch detected, 0xBA, RO
    0xBB Pwr Saving Sem Error, 0xBB, RO
    0xBC Internal PMU Error, 0xBC, RO
    0xBD I2C Interrupt Timeout, 0xBD, RO
    0xBE I2C Operation Error, 0xBE, RO
    0xBF I2C Lock Sem Error, 0xBF, RO
    0xC0 HWD_ERR_AUDIO_TUNING_MALLOC_FAILED, 0xC0, RO
    0xC1 HWD_ERR_AUDIO_TUNING_PARAMS_NOT_LOADED, 0xC1, RO
    0xC2 HWD_ERR_AUDIO_TUNING_TYPE_INVALID, 0xC2, RO
    0xC3 HWD_ERR_AUDIO_TUNING_FILE_GET_LEN_FAIL, 0xC3, RO
    0xC4 HWD_ERR_AUDIO_TUNING_FILE_OPEN_FAIL, 0xC4, RO
    0xC5 HWD_ERR_AUDIO_TUNING_FILE_READ_FAIL, 0xC5, RO
    0xC6 HWD_ERR_AUDIO_TUNING_FILE_WRITE_FAIL, 0xC6, RO
    0xC7 HWD_ERR_AUDIO_TUNING_SIZE_INVALID, 0xC7, RO
    0xC8 HWD_ERR_AUDIO_TUNING_FORMAT_INVALID, 0xC8, RO
    0xC9 HWD_ERR_AUDIO_TUNING_FILE_LEN_MISMATCH, 0xC9, RO
    0xCA HWD_ERR_AUDIO_TUNING_MODE_INVAL, 0xCA, RO
    0xCB HWD_ERR_MIDI_MODE_RESP_NOT_RCVD, 0xCB, RO
    0xCC HWD_ERR_RF_PIN_TYPE_INVALID, 0xCC, RO
    0xCD HWD_ERR_BAND_SUPPORTED_REQUEST_FAILED, 0xCD, RO
    0xCE HWD_ERR_BAND_SUPPORTED_INVALID, 0xCE, RO
    0xCF HWD_ERR_MUXSEL0_CONFLICT, 0xCF, RO
    0xD0 HWD_ERR_PLL_LOCK_FAILURE, 0xD0, RO
    0xD1 HWD_ERR_VECTOR_DEMUX_DUP_ENTRY, 0xD1, RO
    0xD2 HWD_ERR_DAC_PLL_LOCK_ERR, 0xD2, RO
    0xD3 HWD_ERR_TONE_STOP_RESP_NOT_RCVD, 0xD3, RO
    0xD4 HWD_ERR_SLEEP_MODE_MISMATCH_ERR, 0xD4, RO
    0xD5 HWD_ERR_DAC_BT_INVAL_IN_SLAVE_MODE, 0xD5, RO
    0xD6 HWD_ERR_DSPV_VOICE_PARAM_TBL_SIZE_ERR, 0xD6, RO
    0xD7 HWD_ERR_MIDI_AUDIO_CFG_NOT_RCVD, 0xD7, RO
    0xD8 HWD_ERR_MIDI_AUDIO_CLEANUP_NOT_RCVD, 0xD8, RO
    0xD9 Failed powerup RF Calibration, 0xD9, RO
    0xDA HWD_ERR_ESPI_ACK_TIMEOUT, 0xDA, RO
    0xDB HWD_ERR_ESPI_LOSE_DATA, 0xDB, RO
    0xDC HWD_ERR_ESPI_ERROR_DATA, 0xDC, RO
    0xDD HWD_ERR_ESPI_DATA_ALIGN_ERROR, 0xDD, RO
    0xDE HWD_ERR_ESPI_HEADER_ERROR, 0xDE, RO
    0xDF HWD_ERR_I2C_HANDLE_INVALID, 0xDF, RO
    0xE0 HWD_ERR_I2C_CONTENTION_DETECTED, 0xE0, RO
    0xE1 HWD_ERR_IRAM_DBM_SIZE_ERROR, 0xE1, RO
    0xE2 HWD_ERR_SHMEM_ERROR, 0xE2, RO
    0xE3 HWD_ERR_VECTOR_DEMUX_INVALID_IRQ, 0xE3, RO
    0xE4 HWD_ERR_VECTOR_DEMUX_INVALID_FIQ, 0xE4, RO
    0xE5 HWD_ERR_I2C_NUM_BYTES_OUT_OF_RANGE, 0xE5, RO
    0xE6 HWD_ERR_RX_AGC_READBACK_TIMEOUT, 0xE6, RO
    0xE7 HWD_ERR_SW_BUFFER_OVERRUN_ERROR, 0xE7, RO
    0xE8 HWD_ERR_INVALID_PMAX, 0xE8, RO
    0xFF Hwd Watchdog Reset, 0xFF, RO
End

Begin Enum, Hwd MIDI Error Codes
    0x00 MIDI_OK, 0x00, RO
    0x01 MIDI_ERR, 0x01, RO
    0x02 MIDI_ERRFILEOPEN, 0x02, RO
    0x03 MIDI_ERRFILEREAD, 0x03, RO
    0x04 MIDI_ERROUTOFMEMORY, 0x04, RO
    0x05 MIDI_ERRINVALIDCHUNKTYPE, 0x05, RO
    0x06 MIDI_ERRINVALIDTIMESTAMP, 0x06, RO
    0x07 MIDI_ERRENDOFCHUNK, 0x07, RO
    0x08 MIDI_ERRHUGEEVENTDATA, 0x08, RO
    0x09 MIDI_ERRBADFILENAME, 0x09, RO
    0x0A MIDI_ERRFILEALREADYOPEN, 0x0A, RO
    0x0B MIDI_ERRNULLFILEPTR, 0x0B, RO
    0x0C MIDI_ERRFILESEEK, 0x0C, RO
    0x0D MIDI_ERRINVALIDNUMTRACKS, 0x0D, RO
    0x0E MIDI_ERRENDOFTRACK, 0x0E, RO
    0x0F MIDI_ERRENDOFEVENTSTREAM, 0x0F, RO
    0x10 MIDI_ERRINVALIDEVENT, 0x10, RO
    0x11 MIDI_ERREMPTYFILE, 0x11, RO
    0x12 MIDI_ERREVENTDATATOOLARGE, 0x12, RO
    0x13 MIDI_ERRBADFORMAT, 0x13, RO
    0x14 MIDI_IMELODY_HEADER_INVALID, 0x14, RO
    0x15 MIDI_IMELODY_CMD_INVALID, 0x15, RO
    0x16 MIDI_IMELODY_MISSING_EOL, 0x16, RO
    0x17 MIDI_IMELODY_NOT_FOUND, 0x17, RO
    0x18 MIDI_IMELODY_END_NOT_FOUND, 0x18, RO
    0x19 MIDI_IMELODY_NOTE_EVENT_INVALID, 0x19, RO
    0x1A MIDI_IMELODY_VOL_EVENT_INVALID, 0x1A, RO
    0x1B MIDI_IMELODY_OCTAVE_EVENT_INVALID, 0x1B, RO
    0x1C MIDI_IMELODY_REST_EVENT_INVALID, 0x1C, RO
    0x1D MIDI_IMELODY_REPEAT_EVENT_INVALID, 0x1D, RO
    0x1E MIDI_CMF_BAD_FILE_SIGNATURE, 0x1E, RO
    0x1F MIDI_CMF_BAD_TRACK_SIGNATURE, 0x1F, RO
    0x20 MIDI_CMF_INVALID_HDR_SUB_CHUNK, 0x20, RO
    0x21 MIDI_CMF_MISSING_HDR_SUBCHUNK, 0x21, RO
    0x22 MIDI_CMF_NO_MIDI_CONTENT, 0x22, RO
End

Begin Enum, Hwd SideTone Error Codes
    Manual Volume Control Mode, 0, RO
    Not in Voice Mode, 1, RO
    Voice is Muted, 2, RO
End

Begin Enum, HWD MMApps App Ids
    SO3_APP_ID, 0x00000001
    SO17_APP_ID, 0x00000002
    SO68_APP_ID, 0x00000004
    SO73_APP_ID, 0x00000008
    SO73WB_APP_ID, 0x00000010
    GSMFR_APP_ID, 0x00000020
    GSMEFR_APP_ID, 0x00000040
    GSMHR_APP_ID, 0x00000080
    AMR_APP_ID, 0x00000100
    AMRWB_APP_ID, 0x00000200
    MIDI_APP_ID, 0x00001000
    MP3_APP_ID, 0x00002000
    AAC_APP_ID, 0x00004000
    WMA_APP_ID, 0x00008000
    WAV_APP_ID, 0x00010000
    FLAC_APP_ID, 0x00020000
    VORBIS_APP_ID, 0x00040000
    ENC_WAV_APP_ID, 0x00100000
    ENC_AAC_APP_ID, 0x00200000
    TONE_APP_ID, 0x10000000
    TEST_APP_ID, 0x20000000
    MIXER_APP_ID, 0x40000000
End

Begin Enum, Hwd RfDriver Error Codes
    Rf Driver, 1, RO
    Rf Driver Revision, 2, RO
    Rf Driver and Revision, 3, RO
End

Begin Enum, Hwd FSI Error Codes
    0x00 FSI_SUCCESS, 0x00, RO
    0x01 FSI_ERR_PARAMETER, 0x01, RO
    0x02 FSI_ERR_READ, 0x02, RO
    0x03 FSI_ERR_WRITE, 0x03, RO
    0x04 FSI_ERR_SYSTEM, 0x04, RO
    0x05 FSI_ERR_EXIST, 0x05, RO
    0x06 FSI_ERR_NOTEXIST, 0x06, RO
    0x07 FSI_ERR_EOF, 0x07, RO
    0x08 FSI_ERR_FULL, 0x08, RO
    0x09 FSI_ERR_NOSUPPORT, 0x09, RO
    0x0A FSI_ERR_FORMAT, 0x0A, RO
    0x0B FSI_ERR_ACCESS_DENY, 0x0B, RO
    0x0C FSI_ERR_MAX_OPEN, 0x0C, RO
    0x0D FSI_ERR_TIMEOUT, 0x0D, RO
    0x0E FSI_ERR_INIT, 0x0E, RO
    0x0F FSI_ERR_MEMORY, 0x0F, RO
    0x10 FSI_ERR_ACCESS, 0x10, RO
    0x11 FSI_ERR_MOUNTED, 0x11, RO
    0x12 FSI_ERR_UNMOUNTED, 0x12, RO
    0xFF FSI_ERR_UNKNOWN, 0xFF, RO
End

Begin Enum, HWD Midi States
    IDLE, 0
    AUDIO SETUP, 1
    WAIT FOR ENABLE, 2
    ACTIVE, 3
    SUSPENDED, 4
    WAIT FOR DISABLE, 5
    AUDIO CLEANUP, 6
End

Begin Enum, HWD SHMEM Error Codes
    SHMEM_NORMAL_ERROR, 0x11110000,  RO
    SHMEM_UNACCESSABLE, 0x22220000,  RO
    SHMEM_ADDR_UNALIGNED, 0x33330000,RO
    SHMEM_READ_LEN_ERROR, 0x44440000,RO
    SHMEM_ALLOC_ERROR, 0x55550000,   RO
End

Begin Enum, CP Tst Err Codes
End

Begin Enum, CP VAL Err Codes
    Message Id Error, 0          ,
    Key Id Error, 1          ,
    State Error, 2          ,
    Start Up Error, 3          ,
    Databases Not Prog Error. Program entire DMB before continuing, 4  ,
    Deep Sleep Request Error, 5,
    VAL_MODEM_FAILURE_ERR, 6,
    Vmem Buffer Full, 0x10,
    Vmem Wrong State for Operation, 
    Vmem Cannot Do With Ringer Active, 
    Vmem Buffer Empty, 
    Vmem Get Space Error, 
    Vmem Device Full Error, 
    Vmem Rec PCM to File Error, 
    Vrec Invalid State, 0x20,
    Vrec Invalid Msg For State, ,
    Vrec Operation Timeout, ,
    Vrec Spurious Timeout, ,
    Vrec Sector Full, ,
    Vrec Vocabulary Full, ,
    Vrec Engine Err, ,
    Vrec Compressed Buffer Full, ,
    Vrec Template Buffer Full, ,
    Vrec Vocab Empty, ,
    Vrec Nametag Not Found, ,
    Vrec Train Buffer Too Small, ,
    Audio Not Initialized, 0x35,
    Audio Wrong Volume Mode, ,
    Audio Wrong Tone Type, ,
    Audio No Data, ,
    Audio File Read Fail, ,
    Audio Wrong Device Mode, ,
    Audio Music Malloc Fail, ,
    Audio Music Not Enough Mem, ,
    Audio File Open Fail, ,
    Audio File Get Length Fail, ,
    Audio Wrong Music Type, ,
    Audio Get Playtime While Active, ,
    Audio Incompat Music Device, ,
    Audio Input PCM Frame Overflow, ,
    Audio Output PCM Frame Overflow, ,
    Audio Playback Failed, ,
    Audio Equalizer Parms Invalid, ,
    FSI Init Failed, 0x4A,
    FSI DOS FS Init Failed, ,
    FSI DOS FS Exit Failed, ,
    FSI SIDB Is Not Supported, ,
    BARCODE File Dir Inavlid, 0x60,
    BARCODE FSM Read Failed, ,
    BARCODE FSM Write Failed, ,
    BARCODE Read Failed, ,
    BARCODE Write Failed, ,
    SMS Not Ready Error, 0x70,
    SMS File Create Error, ,
    SMS File Read Error, ,
    SMS File Write Error, ,
    VAL_ERR_TOO_MANY_DIGIT_MSG_ID, ,
    VAL_ERR_INVALID_CALLBACK_TIMER_ID, ,
    VAL_ERR_INSUFFICIENT_TIMER_ID, ,
    DISP Unexpected Callback, 0x80,
    DISP Event Already Active, ,
    DISP Image Width Invalid, ,
    DISP File Read Error, ,
    DISP File Write Error, ,
    DISP Image Type Invalid, ,
    DISP File Handle Invalid, ,
    DISP Malloc Fail, ,
    DISP Not Enough Memory, ,
    DISP Image Not Stored, ,
    ATP Channel Disabled, 0x90,
    Command Not Supported, 
    AT Data Rcvr Timeout, 
    VAL_ERR_GPS_INST_ID, 0xa0,
    VAL_ERR_GPS_READ_SECURITY_CONFIG, ,
    VAL_ERR_GPS_NEXT_STATE, ,
    VAL_ERR_GPS_WRITE_SECURITY_CONFIG, ,
    VAL_ERR_GPS_ENABLE_SECURITY, ,
    VAL_ERR_GPS_ENABLE_SECURITY_2, ,
    VAL_ERR_GPS_BASESSD_GET, ,
    VAL_ERR_GPS_RAND_PERIOD_SET, ,
    VAL_ERR_GPS_RAND_PERIOD_SET_2, ,
    VAL_ERR_WRITE_SERVICE_CONFIG, ,
    VAL_ERR_GPS_READ_ENCRYPT_CONFIG, ,
    VAL_ERR_GPS_DNS_QUERY, ,
    SLC_ERR_GPS_FILE_DIRECTORY, ,
    VAL_ERR_GPS_READ_FSM, ,
    VAL_ERR_GPS_WRITE_FSM, ,
    VAL_ERR_GPS_CONFIG_FIX_MODE, ,
    VAL_ERR_GPS_CONFIG_FIX_RATE, ,
    VAL_ERR_GPS_OPEN_SESS_STATUS, ,
    VAL_ERR_GPS_START_FIX_STATUS, ,
    VAL_ERR_GPS_LOC_RESP, ,
    VAL_ERR_GPS_GET_POS, ,
    VAL_ERR_GPS_AES_RSP_STATUS, ,
    VAL_ERR_GPS_NMEA_UPDATE, ,
    VAL_ERR_GPS_DBM_READ_ID, ,
    VAL_ERR_GPS_GSV_SEQ_NUM, ,
    VAL_ERR_GPS_SESS_STATE, ,
    VAL_ERR_GPS_WRITE_OFFSET_INFO, ,
    VAL_ERR_GPS_LOC_ACTIVE_IND, ,
    VAL_ERR_FAULT_LOG_API, 0xc0,
    VAL_ERR_MPC_MESSAGE_TYPE, 0xD0,
    VAL_ERR_MPC_VER_ID, ,
    VAL_ERR_MPC_REG_ID, ,
    VAL_ERR_MPC_POSTECH_IND, ,
    VAL_ERR_MPC_IS801_MODE, ,
    VAL_ERR_MPC_TIMER_ID, ,
    VAL_ERR_MPC_START_POSITIONINGPROC_REQ_ID, ,
    VAL_ERR_MPC_STATE_ID, ,
    VAL_ERR_MPC_POSITIONING_REQ_LEN, ,
    VAL_ERR_MPC_START_POSITIONING_RESP_LEN, ,
    VAL_ERR_MPC_START_POSITIONING_RESP_CONTEXT, ,
    VAL_ERR_MPC_SMS_ADDR, ,
    VAL_ERR_MPC_TCP_SOCKET_STATE_ID, ,
    VAL_ERR_MPC_LBS_DISABLED, ,
    VAL_ERR_UNKNOWN_PARM_ID, 0xF0,
    VAL_CHV_GET_STATUS_ERR, 0x100,
    VAL_CHV_GET_STATUS_PRO_ERR, ,
    VAL_CHV_GET_POWERUP_STATUS_PRO_ERR, ,
    VAL_CHV_VERIFY_ERR, ,
    VAL_CHV_CHANGE_ERR, ,
    VAL_CHV_DISABLE_ERR, ,
    VAL_CHV_ENABLE_ERR, ,
    VAL_CHV_UNBLOCK_ERR, ,
    VAL_CHV_PRO_RSP_ERR, ,
    VAL_CHV_COMMON_PRO_ERR, ,
    VAL_CHV_GET_ESN_ERR, ,
    VAL_UTK_PROACTIVE_CMD_TAG_ERR, 0x200,
    VAL_UTK_PROACTIVE_CMD_LEN_ERR, ,
    VAL_UTK_PROACTIVE_CMD_NUM_ERR, ,
    VAL_UTK_PROACTIVE_CMD_TYPE_ERR, ,
    VAL_UTK_PROACTIVE_CMD_SIP_TAG_ERR, ,
    VAL_UTK_PROACTIVE_CMD_DEVICE_ERR, ,
    VAL_UTK_PROACTIVE_CMD_MISS_DEVICE_ERR, ,
    VAL_UTK_PROACTIVE_CMD_MISS_ALPHA, ,
    VAL_UTK_PROACTIVE_CMD_MISS_ITEM, ,
    VAL_UTK_PROACTIVE_CMD_MISS_ADDRESS, ,
    VAL_UTK_PROACTIVE_CMD_MISS_RSPLEN, ,
    VAL_UTK_PROACTIVE_CMD_MISS_SMSPDU, ,
    VAL_UTK_PROACTIVE_CMD_MISS_EVENTLIST, ,
    VAL_UTK_PROACTIVE_CMD_MISS_BEARER, ,
    VAL_UTK_PROACTIVE_CMD_MISS_BUFSIZE, ,
    VAL_VAL_UTK_PROACTIVE_CMD_MISS_CHANNELDATALEN, ,
    VAL_UTK_PROACTIVE_CMD_MISS_CHANNELDATA, ,
    VAL_UTK_CMD_DETAIL_LEN_MISMATCH, ,
    VAL_UTK_DEVICE_LEN_MISMATCH, ,
    VAL_UTK_ICON_LEN_MISMATCH, ,
    VAL_UTK_DURATION_LEN_MISMATCH, ,
    VAL_UTK_TEXTRSP_LEN_MISMATCH, ,
    VAL_UTK_TONE_LEN_MISMATCH, ,
    VAL_UTK_FILELIST_LEN_MISMATCH, ,
    VAL_UTK_PROACTIVE_CMD_LEN_MISMATCH, ,
    VAL_UTK_PRO_MENU_SELECTION_RSP_ERR, ,
    VAL_UTK_EVENT_CALL_CONTROL_RSP_ERR, ,
    VAL_UTK_PRO_DATA_AVAILABLE_RSP_ERR, ,
    VAL_UTK_PRO_MTCALL_RSP_ERR, ,
    VAL_UTK_PRO_CALL_CONN_RSP_ERR, ,
    VAL_UTK_PRO_CALL_DISC_RSP_ERR, ,
    VAL_UTK_PRO_LOC_STATUS_RSP_ERR, ,
    VAL_UTK_PRO_ACCTECH_CHANGE_RSP_ERR, ,
    VAL_UTK_PRO_TERM_RSP_RSP_ERR, ,
    VAL_DBM_INVALID_TASK, 0x300,
    VAL_DBM_SET_NULL_POINTER, ,
    VAL_ERR_PGPS_BASE, 9800,
End

Begin Enum, CP Sys Err Codes
    SYS_ERR_CALLBACK_OVERRUN, 0,
    SYS_ERR_CALLBACK_UNDERRUN, 
    SYS_ERR_CALLBACK_OUT_OF_RANGE_1, 
    SYS_ERR_CALLBACK_OUT_OF_RANGE_2, 
    SYS_ERR_CALLBACK_OUT_OF_RANGE_3, 
    SYS_ERR_CALLBACK_OUT_OF_RANGE_4, 
    SYS_ERR_CALLBACK_OUT_OF_RANGE_5, 
    SYS_ERR_CALLBACK_OUT_OF_RANGE_6, 
    SYS_ERR_INVALID_AIR_INTERFACE, 
    SYS_ERR_ACTION_TIME, 
    SYS_ERR_CTS_TIMER_READY_TIMEOUT, 
    SYS_ERR_TIME_Q_FULL, 
    SYS_ERR_TIME_Q_MEMORY_FULL, 
    SYS_ERR_CANCEL_NOT_FOUND, 
    SYS_ERR_EVENT_Q_FULL, 
    SYS_ERR_EVENT_CANCEL_NOT_FOUND, 
    SYS_ERR_TIME_EVENT_Q_FULL, 
    SYS_ERR_USEC_CALLBACK_OUT_OF_RANGE, 
    SYS_ERR_80KHZ_CALLBACK_UNAVAILABLE, 
    SYS_ERR_CALLBACK_ADDR_INVALID, 
    SYS_ERR_SYSTIME_SYNC_FAILURE, 
    SYS_ERR_DISCARDING_CALLBACK_DUE_TO_SLEEP_MODE, 
    SYS_ERR_CTS_CALLBACK_DELAY, 
    SYS_ERR_CTS_CALLBACK_EARLY, 
    SYS_ERR_CPBUF_ALLOC_OUT_OF_FREE_BUFFERS, 0x100,
    SYS_ERR_CPBUF_DEALLOC_NULL_PTR, 
    SYS_ERR_CPBUF_DEALLOC_OUT_OF_RANGE, 
    SYS_ERR_CPBUF_DEALLOC_UNKNOWN_MEMTYPE, 
    SYS_ERR_CPBUF_DEALLOC_MEM_CORRUPTED, 
    SYS_ERR_CPBUF_STATUS_NOT_FREE, 
    SYS_ERR_CPBUF_STATUS_NOT_BUSY, 
    SYS_ERR_CPBUF_PPP_LARGE_RUNNING_DANGEROUSLY_LOW, 
    SYS_ERR_CPBUF_PPP_SMALL_RUNNING_DANGEROUSLY_LOW, 
    SYS_ERR_CPBUF_MUXPDU_RUNNING_DANGEROUSLY_LOW, 
    SYS_ERR_CPBUF_ALLOC_INVALID_SIZE, 
    SYS_ERR_INVALID_PTR_ILISTREAD, 
    SYS_ERR_BITBASH_NULL_PTR, 0x200
    SYS_ERR_BITBASH_INVALID_NUM_BITS, 
    SYS_ERR_GAIN_FACTOR_CONV_RANGE, 
    SYS_ERR_INVALID_LINEAR_GAIN_CONV, 
    SYS_ERR_INVALID_FUNCTION, 
    SYS_ERR_INVALID_FUNCTION_2, 
    SYS_ERR_INVALID_FUNCTION_3, 
    SYS_ERR_QLIB_ASSERT, 0x300
    SYS_GENERAL_PROCESSING_ERROR_BUFFER_OVERRUN_ERROR, 0x400
    SYS_GENERAL_PROCESSING_ERROR_OUT_OF_RANGE_VALUES, 
End

Begin Enum, CP Rlp Err Codes
    RLP ERROR InvalidInit, 
    RLP ERROR InvalidChannel, 
    RLP ERROR InvalidMode, 
    RLP ERROR InvalidOpen, 
    RLP ERROR NotOpen, 
    RLP ERROR AlreadyOpen, 
    RLP ERROR NotReady, 
    RLP ERROR Closing, 
    RLP ERROR InvalidRateReduce, 
    RLP ERROR TxBufferOverrun, 
    RLP ERROR TxDataOverrun, 
    RLP ERROR RxDataOverrun, 
    RLP ERROR RxInvalidFrame, 
    RLP ERROR NakQueueEmpty, 
    RLP ERROR NakQueueFull, 
    RLP ERROR NakQueueNotEmpty, 
    RLP ERROR NakSeqNumLessThanVn, 
    RLP ERROR NakSeqNumGreatThanVr, 
    RLP ERROR RetQueueFull, 
    RLP ERROR InvalidFramePromotionReq, 
    RLP ERROR InvalidRate, 
    RLP ERROR InvalidNumSup, 
    RLP ERROR MailboxShouldNotBeEmpty, 
    RLP ERROR InvalidMsgId, 
    RLP ERROR RunOutOfBuffer, 
    RLP ERROR InternalError, 
    RLP ERROR SwBufferOverrunError, 
End

Begin Enum, CP HLW Err Codes
    MNRP message format error, 0x00
    MNRP invalid ISC options, 0x01
    MNRP invalid message type, 0x02
    PPP Insufficient Bytes in a Frame, 0x03
    Invalid message ID, 0x04
    Mailbox should not be empty, 0x05
    Neither mail nor signal, 0x06
    Not enough timer for engine, 0x07
    Invalid callback timer ID, 0x08
    MIP Invalid State, 0x09
    MIP Invalid Timer ID, 0x0A
    MIP Agent Adv Invalid Type, 0x0B
    MIP Agent Adv Invalid Code, 0x0C
    MIP Agent Adv Invalid Num Of Routers, 0x0D
    MIP Agent Adv Invalid Entry Size, 0x0E
    MIP Agent Adv Invalid Num of COAs, 0x0F
    MIP Agent Adv Invalid Ext Type, 0x10
    MIP Agent Adv Invalid Ext Len, 0x11
    MIP Agent Adv Invalid Agent, 0x12
    MIP Agent Adv FA Busy, 0x13
    MIP Agent Sol Buffer Busy, 0x14
    MIP RRP Invalid Type, 0x15
    MIP RRP Invalid Code, 0x16
    MIP RRP Invalid Lifetime, 0x17
    MIP RRP Invalid Ident, 0x18
    MIP RRP Invalid Ext Type, 0x19
    MIP RRP Invalid Ext Len, 0x1A
    MIP RRP Invalid Auth Data, 0x1B
    MIP RRP Invalid_Challenge Data, 0x1C
    MIP RRQ Msg Too Big, 0x1D
    MIP RRQ Buffer Busy, 0x1E
    MIP User Data Get Failed, 0x1F
    MIP Invalid CVSE Type Number, 0x20
    MIP Invalid Vendor ID, 0x21
    MIP Invalid CVSE Vendor Type, 0x22
    MIP Invalid Public Key, 0x23
    MIP Invalid CVSE Length, 0x24
    MIP Invalid Key Encryption, 0x25
    MIP Invalid AAA_Authenticator, 0x26
    MIP Received Unexpected Message Id while Getting DMU Public Key, 0x27
    MIP MBOX is Empty while Getting DMU Public Key, 0x28
    MIP Unexpected event while Getting DMU Public Key, 0x29
    MIP No RSA Public Key Error, 0x2A
    MIP No Specific RSA Public Key Found Error, 0x2B
    MIP Received Unexpected Message Id while Getting DMU Public Key OrgId, 0x2C
    MIP MBOX is Empty while Getting DMU Public Key OrgId, 0x2D
    MIP Unexpected event while Getting DMU Public Key OrgId, 0x2E
    MIP No RSA Public Key OrgId Error, 0x2F
    MIP MN Authenticator Save to DBM failure, 0x30
    MIP Unexpected Active DMU RSA Public Key, 0x31
    HLP_WARNING_UNEXPECTED_RM_STATE, 0x32
    HLP_WARNING_UNEXPECTED_UM_STATE, 0x33
    HLP_WARNING_INVALID_CONNECTION, 0x34
    HLP_WARNING_INVALID_OPERATION, 0x35
    HLP_UNEXPECTED_HDLC_LENGTH, 0x36
    HLP_QOS_ERR, 0x37
    HLP_ERR_DBM_READ_STATE, 0x38
    HLP_ERR_INVALID_HSPD_GET_PARM_ID, 0x39
    HLP_ERR_INVALID_HSPD_SET_PARM_ID, 0x3A
    HLP_ERR_MAX_PROFILE_DATA_NUM, 0x3B
    HLP_ERR_MAX_SECURE_DATA_NUM, 0x3C
    HLP_ERR_PARM_OPERATION_PTR, 0x3D
    HLP_ERR_PARM_OPERATION_LENGTH, 0x3E
    HLP_ERR_PARM_OPERATION_GENERAL, 0x3F
    HLP_ERR_PARM_PROFILE_ID, 0x40
    HLP_ERR_ACTIVE_PARM_PROFILE_ID, 0x41
    HLP_ERR_DBM_READ_CHECK, 0x42
    HLP_ERR_PRI_NAI_FORAMT_INVALID, 0x43
    HLP_ERR_GET_CHAPRSP_FROM_UIM_UNEXPECTED_EVENT, 0x44
    HLP_ERR_GET_CHAPRSP_FROM_UIM_RECEIVED_UNEXPECTED_MSG_ID, 0x45
    HLP_ERR_GET_CHAPRSP_FROM_UIM_RECEIVED_INVALID_MSG_ID, 0x46
    HLP_ERR_GET_CHAPRSP_FROM_UIM_MBOX_SHOULD_NOT_BE_EMPTY, 0x47
    HLP_ERR_GET_CHAPRSP_FROM_UIM, 0x48
    HLP_ERR_GET_AUTHRSP_FROM_UIM_UNEXPECTED_EVENT, 0x49
    HLP_ERR_GET_AUTHRSP_FROM_UIM_RECEIVED_UNEXPECTED_MSG_ID, 0x4a
    HLP_ERR_GET_AUTHRSP_FROM_UIM_RECEIVED_INVALID_MSG_ID, 0x4b
    HLP_ERR_GET_AUTHRSP_FROM_UIM_MBOX_SHOULD_NOT_BE_EMPTY, 0x4c
    HLP_ERR_GET_AUTHRSP_FROM_UIM, 0x4d
    HLP_ERR_3GPD_FROM_UIM, 0x4e
    HLP_IMS_ERR, 0x4f
    HLP_EHRPD_ERR, 0x50
    HLP_ERR_AKA_AUTH_UNEXPECTED_EVENT, 0x51
    HLP_ERR_AKA_AUTH_RECEIVED_UNEXPECTED_MSG_ID, 0x52
    HLP_ERR_AKA_AUTH_INVALID_MSG_ID, 0x53
    HLP_ERR_AKA_AUTH_MBOX_SHOULD_NOT_BE_EMPTY, 0x54
    HLP_EAP_ERR, 0x55
    HLP_ROHC_COMP_ERR, 0x56
    HLP_ROHC_DECOMP_ERR, 0x57
    HLP_NO_MORE_MBUF, 0x58
    HLP_UNRECOGNIZABLE_PKT, 0x59
    HLP_ERR_SIP_NO_TIMER, 
    HLP_ERR_IP6, 
    HLP_ERR_INVALID_SCB, 
    HLP_WARNING_INVALID_PPPHA_DEC0_OFFSET, 
    HLP_WARNING_INVALID_PPPHA_DEC0_LEN, 
    HLP_WARNING_INVALID_PPPHA_DEC1_OFFSET, 
    HLP_WARNING_INVALID_PPPHA_DEC1_LEN, 
    HLP_WARNING_INVALID_SRC_IP_ADDR, 
    HLP_INVALID_ROUTE_APP_TYPE, 
    HLP_WARNING_UNUSED_DATA_IN_QUEUE, 
    HLP_WARNING_RX_DUPLICATE_CFG_RQST, 
    HLP_ERR_NO_THROTTLING_TIMER_AVAILABLE, 
    HLP_ERR_SOFTWARE_BUFFER_OVERRUN_ERR, 
    HLP_ERR_NULL_POINTER_ERR, 
    HLP_ERR_MIPFLAGS_FROM_UIM, 
End

Begin Enum, CP Uim Err Codes
    UIM_MSG_ID_ERR, 0
    UIM_HWD_ERR, 1
    UIM_CARD_RESET_ERR, 2
    UIM_NOT_READY_ERR, 3
    UIM_GET_NAM_ERR, 4
    UIM_UPDATE_NAM_ERR, 5
    UIM_NOT_SELECTED_ERR, 6
    UIM_SECURITY_NOT_SATISFIED_ERR, 7
    UIM_READ_ERR, 8
    UIM_DBM_ERR, 9
    UIM_CHANNEL_ERR, 10
    UIM_FACTORYMODE_ERR, 11
    UIM_BUFFER_ERR, 12
    UIM_GENERAL_PROCESSING_BUFFER_OVERRUN_ERROR, 13
End

Begin Enum, CP Clc Err Codes
    CLC_ERR_UNKNOWN_CMD, 0,
    CLC_ERR_UNKNOWN_SIG, 1,
    CLC_ERR_INSUFFICIENT_TIMER_ID, 0x100,
    CLC_ERR_INVALID_CALLBACK_TIMER_ID, 0x101,
    CLC_ERR_INVALID_TIMER_ID, 0x102
    CLC_ERR_INVALID_PROTOCOLTYPE_MSG_RECEIVED_ID, 0x103,
    CLC_ERR_INVALID_OMP_MESSAGE_ID, 0x104,
    CLC_ERR_INVALID_OMP_SUBNETMASK_ID, 0x105,
    CLC_ERR_INVALID_OMP_ATTRIB_ID, 0x106,
    CLC_ERR_INVALID_IDP_MESSAGE_ID, 0x107,
    CLC_ERR_INVALID_CLC_COMMON_MESSAGE_ID, 0x108,
    CLC_ERR_INVALID_EVENT_ID, 0x109,
    CLC_ERR_INVALID_OMP_EVENT_ID, 0x10a,
    CLC_ERR_INVALID_IDP_EVENT_ID, 0x10b,
    CLC_ERR_INVALID_PROT_DSATXSTATUS_RECEIVED_ID, 0x10c,
    CLC_ERR_INVALID_IDP_ATTRIB_ID, 0x10d,
    CLC_ERR_INVALID_PAGING_MASK_SET_ID, 0x10e,
    CLC_ERR_INVALID_ACMTXSTARTED_RECV_ID, 0x10f,
    CLC_ERR_INVALID_ACMTXENDED_RCVD_ID, 0x110,
    CLC_ERR_INVALID_OMP_SUBTYPE_ID, 0x111,
    CLC_ERR_INVALID_OMP_ATTRIBLEN_ID, 0x112,
    CLC_ERR_INVALID_IDP_SUBTYPE_ID, 0x113,
    CLC_ERR_INVALID_IDP_ATTRIBLEN_ID, 0x114,
    CLC_ERR_INVALID_RESYNC_DENIED_IND_ID, 0x115,
    CLC_ERR_INVALID_IDP_SESSIONSEED_VALUE_ID, 0x116,
    CLC_ERR_DATA_WRITE_STATE, 0x117,
    CLC_ERR_DO_PARM_OPERATION_PTR, 0x118,
    CLC_ERR_DO_PARM_OPERATION_LENGTH, 0x119,
    CLC_ERR_DO_PARM_OPERATION_GENERAL, 0x11a,
    CLC_ERR_INVALID_HSPD_GET_PARM_ID, 0x11b,
    CLC_ERR_DO_PARM_SIZE_INVALID, 0x11c,
    CLC_ERR_INVALID_SUBTYPE_PARM_ID, 0x11d,
    CLC_ERR_UNEXPECTED_IHO_RECEIVED, 0x11e,
    CLC_ERR_UNEXPECTED_TIMER_EXPIRED, 0x11f,
    CLC_ERR_UNEXPECTED_WAKEUP_CMD, 0x120,
    CLC_ERR_INVALID_ALMP_MSG_ID, 0x200,
    CLC_ERR_INVALID_ALMP_POWERUP_MSG_ID, 0x201,
    CLC_ERR_INVALID_ALMP_REL_CONN_REQ_ID, 0x202,
    CLC_ERR_INVALID_ALMP_INVALID_CLOSE_CONN_MSG_ID, 0x203,
    CLC_ERR_INVALID_ALMP_OTA_MSG_ID, 0x204,
    CLC_ERR_INVALID_ALMP_CLOSE_CONN_MSG_ID, 0x205,
    CLC_ERR_INVALID_ALMP_CONN_OPEN_INIT_STATE, 0x206,
    CLC_ERR_INVALID_ALMP_CONN_FAIL_MAX_ID, 0x207,
    CLC_ERR_INVALID_ALMP_CONN_ACK_MAX_ID, 0x208,
    CLC_ERR_INVALID_ALMP_NTWRK_ACQ_ID, 0x209,
    CLC_ERR_INVALID_ALMP_CSP_CONN_MSG_ID, 0x20a,
    CLC_ERR_INVALID_ALMP_RUP_REJ_MSG_ID, 0x20b,
    CLC_ERR_INVALID_ALMP_CONN_FAIL_MSG_ID, 0x20c,
    CLC_ERR_INVALID_ALMP_SUBTYPE_ID, 0x20d,
    CLC_ERR_INVALID_ALMP_STATUS_ID, 0x20e,
    CLC_ERR_INVALID_ALMP_ATSTATUS_ID, 0x20f,
    CLC_ERR_INVALID_ALMP_OTA_PARM, 0x210,
    CLC_ERR_IRAT_MEAS_FAIL, 0x211,
    CLC_ERR_INVALID_INSP_MSG_ID, 0x300,
    CLC_ERR_INVALID_INSP_OTA_MSG_ID, 0x301,
    CLC_ERR_INVALID_INSP_ACTIVATE_MSG_ID, 0x302,
    CLC_ERR_INVALID_INSP_CSS_RSP_MSG_ID, 0x303,
    CLC_ERR_INVALID_INSP_PILOT_FOUND_MSG_ID, 0x304,
    CLC_ERR_INVALID_INSP_THAW_MSG_ID, 0x305,
    CLC_ERR_INVALID_INSP_FREEZE_MSG_ID, 0x306,
    CLC_ERR_INVALID_INSP_ACQ_TIMER_EXP_ID, 0x307,
    CLC_ERR_INVALID_INSP_SYNCOK_TIMER_EXP_ID, 0x308,
    CLC_ERR_INVALID_INSP_SYNCOK_MSG_ID, 0x309,
    CLC_ERR_INVALID_INSP_SYNC_MSG_ID, 0x30a,
    CLC_ERR_INVALID_INSP_NETWORK_DONE_MSG_ID, 0x30b
    CLC_ERR_INVALID_INSP_1XASSIST_DOACQ_MSG_ID, 0x30c
    CLC_ERR_INVALID_INSP_SYS_ACQ_REQ_MSG_ID, 0x30d
    CLC_ERR_INVALID_INSP_ACQ_ABORT_REQ_MSG_ID, 0x30e
    CLC_ERR_INVALID_CSP_OTA_MSG_ID, 0x400,
    CLC_ERR_INVALID_CSP_CONN_CLOSE_MSG_ID, 0x401,
    CLC_ERR_INVALID_CSP_MSG_ID, 0x402,
    CLC_ERR_INVALID_CSP_ACTIVATE_MSG, 0x403,
    CLC_ERR_INVALID_CSP_DEACTIVATE_MSG, 0x404,
    CLC_ERR_MESSAGE_UNFORMAT_ID, 0x405,
End

Begin Enum, CP Fcp Err Codes
    FCP_ERR_UNKNOWN_SIG, 0,
    FCP_CMD_MBOX_INVALID_MSG_ID_ERR, 1,
    FCP_CMD_MBOX_NO_MSG_ERR, 2,
    FCP_DATA_MBOX_INVALID_MSG_ID_ERR, 3,
    FCP_DATA_MBOX_NO_MSG_ERR, 4,
    FCP_OTA_MBOX_INVALID_MSG_ID_ERR, 5,
    FCP_OTA_MBOX_NO_MSG_ERR, 6,
    FCP_TEST_MBOX_INVALID_MSG_ID_ERR, 7,
    FCP_TEST_MBOX_NO_MSG_ERR, 8,
    FCP_RXDMA_ERR, 9,
    FCP_RXC_ERR, 0x00a
    FCP_CCM_SUPERVSN_FAIL, 0x00b
    FCP_ERR_INVALID_GAIN_SCALE_REG, 0x100,
    FCP_ERR_INVALID_GAIN_SCALE_Q, 0x101,
    FCP_ERR_INVALID_REG_SCALE_Q, 0x102,
    FCP_ERR_GAIN_SCALE_CONV_RANGE, 0x103,
    FCP_ERR_OTA_MSG_DECODE_FAILURE, 0x200,
    FCP_ERR_UNKNOWN_APP_SUBTYPE, 0x201,
    FCP_ERR_UNKNOWN_APP_TYPE, 0x202,
    FCP_ERR_UNKNOWN_PROTOCOL_TYPE, 0x203,
    FCP_ERR_NO_APP_MATCHED_FOUND, 0x204,
    FCP_ERR_INVALID_MSG_ID, 0x205,
    FCP_ERR_UNEXPECTED_ABORT_TIMER, 0x206,
    FCP_ERR_UNEXPECTED_DOS_MSGSEQ, 0x207,
    FCP_ERR_MSG_DECODE_MISMATCH_PROTOCOL_TYPE, 0x208,
    FCP_ERR_MSG_DECODE_BUFFER_EMPTY, 0x209,
    FCP_ERR_MSG_DECODE_OVERFLOW, 0x20a,
    FCP_ERR_INVALID_CALLBACK_TIMER_ID, 0x20b,
    FCP_ERR_INSUFFICIENT_TIMER_ID, 0x20c,
    FCP_ERR_FWD_DATA_RECEIVED_IN_XOFF_STATE, 0x20d,
    PAF_ERR_ROUTE_INVALID_STATUS, 0x20e,
    PAF_ERR_RECEIVED_RLP_PACKET_TOO_SHORT, 0x250,
    PAF_ERR_RLP_PACKET_RECEIVED_IN_RESET_STATE, 0x251,
    PAF_ERR_RLP_RESQ_BUFFER_FULL, 0x252,
    PAF_ERR_RLP_NAKQ_BUFFER_FULL, 0x253,
    PAR_ERR_RLP_NAKREC_ADD_FAILURE, 0x254,
    PAF_ERR_RLP_MISMATCH_RLP_FLOW_OCTETS_RECEIVED, 0x255,
    PAF_ERR_RLP_DUPLICATE_RLP_PACKET, 0x256,
    FCP_ERR_MSG_DECODE_MSG_LEN, 0x257,
    PAF_ERR_RLP_ERROR_APP_TYPE_ID, 0x258,
    PAF_ERR_RLP_ERROR_REPEATED_ID, 0x259,
    PAF_ERR_RLP_ROUTE_PROTOCOLQ_BUFFER_FULL, 0x25a,
    PAF_ERR_RLP_ROUTE_PROTOCOLQ_PKT_NUM, 0x25b,
    PAF_ERR_RLP_INVALID_ABORT_TIMER, 0x25c,
    PAF_ERR_RLP_NAK_SENT_FOR_DELAY_OCTET, 0x25d,
    PAF_ERR_RLP_IPDATA_OVERRUN, 0x25e,
    PAF_ERR_RLP_INVALID_RLPFLOW, 0x25f,
    FCP_FTAP_ERR, 0x300,
    FCP_FTM_ERR, 0x350,
    FCP_ERR_FTM_CP_BUFFER_UNAVILABLE, 
    FCP_ERR_FTM_LNK_PKT_UNAVAILABLE, 
    FCP_ERR_FTM_INVALID_SUBTYPE, 
    FCP_ERR_FTN_INVALID_DEFAULT_PKT_LEN, 
    FCP_ERR_FTM_INVALID_ENHANCED_PKT_LEN, 
    FCP_ERR_FTM_INVALID_ENHANCED_PKT_TYPE, 
    FCP_ERR_FTM_NON_GAUP_PARAM, 
    FCP_ERR_FTM_FWD_TRAFFIC_VALID_FAIL, 
    FCP_ERR_FTM_MACID_ERROR, 
    FCP_ERR_FTM_PACKET_LEN_ERROR, 
    FCP_DSAF_ERR, 0x400,
    FCP_DRC_ERR_DIV_ZERO, 0x450,
    FCP_DRC_ERR_WRITE_FAIL, 0x451,
    FCP_DRC_ERR_GEN_1, 0x452,
    FCP_DRC_ERR_SUPERVISION_TX_OFF, 0x453,
    FCP_DRC_ERR_SUPERVISION_EXP, 0x454,
    FCP_DRC_ERR_FTM_CONFIG_FAIL, 0x455,
    FCP_GENERAL_PROCESSING_ERROR_BUFFER_OVERRUN, 0x500,
End

Begin Enum, CP Hsc Err Codes
    HSC_ERR_UNKNOWN_SIG, 0x0000,
    HSC_ERR_MBOX_MPA_NO_MSG, 
    HSC_ERR_MBOX_SPDO_NO_MSG, 
    HSC_ERR_MBOX_SP1X_NO_MSG, 
    HSC_ERR_MBOX_CMD_NO_MSG, 
    HSC_ERR_MBOX_MPA_UNKNOWN_MSG, 
    HSC_ERR_MBOX_SPDO_UNKNOWN_MSG, 
    HSC_ERR_MBOX_SP1X_UNKNOWN_MSG, 
    HSC_ERR_MBOX_SP1X_DSPM_UNKNOWN_MSG, 
    HSC_ERR_MBOX_CMD_UNKNOWN_MSG, 
    HSC_ERR_MPA_REQUEST, 0x0020,
    HSC_ERR_MPA_STATUS, 
    HSC_ERR_RM_Q_FULL, 0x0030,
    HSC_ERR_RM_STATUS, 
    HSC_ERR_RM_START, 
    HSC_ERR_RM_MALLOC, 
    HSC_ERR_RM_GEN, 
    HSC_ERR_RESYNC_COLLISION, 0x0040,
    HSC_ERR_RESYNC_NOT_ACTIVATED, 
    HSC_ERR_RESYNC_RF_REQ, 
    HSC_ERR_WAKE_RF_REQ, 
    HSC_ERR_WAKE_OUT_OF_ORDER, 
    HSC_ERR_CLK_CAL_32KHZ_FREQ, 
    HSC_ERR_MINI_ACQ_FAILURE, 
    HSC_ERR_CLK_CAL_BUSY, 
    HSC_ERR_RESYNC_SP_32K_CNTS_OUT_OF_RANGE, 
    HSC_ERR_WAKE_Q_FULL, 
    HSC_ERR_RESYNC_SPURIOUS, 
    HSC_ERR_SYS_TRANSITION, 
    HSC_ERR_1X_TO_DO_RESYNC_TIME, 
    HSC_ERR_CAL_SETTLE_TIME_RANGE, 
    HSC_ERR_DEEP_SLEEP_SP_32K_CNTS_OUT_OF_RANGE, 
    HSC_ERR_RESYNC_CANNOT_UPDATE_REF, 
    HSC_ERR_QUEUE_BAD, 
    HSC_ERR_MODEM_IN_SLEEP, 
    HSC_ERR_WRONG_ANT_UPDATE, 
    HSC_RAU_RESUME_IN_IGNORE_WINDOW, 
    HSC_RAU_RES_IN_IGNORE_WINDOW, 
    HSC_ERR_SPDO_SLEEPTRAP_1, 0x0060,
    HSC_ERR_SPDO_SLEEPTRAP_2, 
    HSC_ERR_SPDO_PCH_MONITOR_SYSTIME, 
    HSC_ERR_SP1X_INVALID_SUSPEND, 0x0080,
    HSC_ERR_INVALID_TIMER_EXPIRED, 0x00A0,
End

Begin Enum, CP Rmc Err Codes
    RMC_ERR_UNKNOWN_CMD, 0
    RMC_ERR_UNKNOWN_SIG, 1
    RMC_ERR_UNKNOWN_TST_CMD, 2
    RMC_ERR_INVALID_PILOT_ACQ_MSG, 0x100
    RMC_ERR_INVALID_MPA_RESOURCE_REQ_RSP, 0x101
    RMC_ERR_INVALID_TUNE_REQUEST, 0x102
    RMC_ERR_INVALID_MPA_PREEMPT_MSG, 0x103
    RMC_ERR_INVALID_MPA_RESOURCE_FREE_MSG, 0x104
    RMC_ERR_INVALID_MINI_ACQ_MSG, 0x105
    RMC_ERR_MIN_CONT_SPAN_NOT_USED, 0x106
    RMC_CSM_ERR_INVALID_CELL_SWITCH, 0x1f8
    RMC_CSM_ERR_CELL_SWITCH_HW_FAIL, 0x1f9
    RMC_ERR_RF_INVALID_GRANT, 0x200
    RMC_ERR_MAIN_RF_TUNE_TIMEOUT, 0x201
    RMC_ERR_DIV_RF_TUNE_TIMEOUT, 0x202
    RMC_ERR_INVALID_MAIN_TUNE_SIG, 0x203
    RMC_ERR_INVALID_DIV_TUNE_SIG, 0x204
    RMC_ERR_USE_THIS_BLANK, 0x205
    RMC_ERR_RF_REQ_DENIED, 0x206
    RMC_ERR_RF_SHUTOFF_REQ_NULL_PATHS, 0x207
    RMC_ERR_RF_INVALID_REL_REQ, 0x208
    RMC_ERR_RF_INVALID_ANT_ASSN, 0x209
    RMC_ERR_RF_MISSING_PATH_RX_MAIN, 0x20A
    RMC_ERR_RF_MISSING_PATH_RX_DIV, 0x20B
    RMC_ERR_RXAGC_RFBAND, 0x280
    RMC_ERR_TXAGC_RFBAND, 0x281
    RMC_ERR_TXAGC_TIMING, 0x282
    RMC_ERR_FIQ_TIMING, 0x283
    RMC_ERR_RXAGC_INVALID_SMARTi_RB, 0x284
    RMC_ERR_INVALID_PILOT_FROM_RUP, 0x300
    RMC_ERR_INVALID_PLL_CLK_FREQ_FROM_HWD, 0x301
    RMC_ERR_SPURIOUS_AFC_ISR, 0x400
    RMC_ERR_NO_ACTIVE_FINGERS_FOR_AFC, 0x401
    RMC_ERR_AFC_REG_LATCH_TIMEOUT, 0x402
    RMC_ERR_ACCUMULATION_SATURATION, 0x403
    RMC_ERR_AFC_REGISTER_DUPLICATED, 0x404
    RMC_ERR_AFCC_ANT_TS_DUPLICATED, 0x405
    RMC_ERR_SET_SYNC_TIME_INVALID_STATE, 0x406
    RMC_EARLIEST_FINGER_VIOLATION, 0x450
    RMC_FINGER_ENABLE_MISMATCH, 0x451
    RMC_FINGER_ARR_INDEX_INVALID, 0x452
    RMC_ERR_RUP, 0x500
    RMC_ERR_ETS_MSG, 0x501
    RMC_ERR_SW_BUF_OVERFLOW, 0x502
    RMC_ERR_INVALID_TIMER_EXPIRED, 0x700
    RMC_L1CD_ERR_UNEXPECTED_MSG_RCVD, 0x800
    RMC_L1CD_ERR_UNEXPECTED_MSG_IN_L1CD_STATE, 0x801
    RMC_L1CD_ENGINE_QUEUE_TYPE2_FULL, 0x802
    RMC_L1CD_ERR_UNEXPECTED_EUTRAN_MEAS_RESULT, 0x803
    RMC_SW_APP_BUFFER_OVERRUN_ERROR, 0x804
End

Begin Enum, CP Rcp Err Codes
    RCP_ERR_UNKNOWN_SIG, 0,
    RCP_CMD_MBOX_INVALID_MSG_ID_ERR, 1,
    RCP_CMD_MBOX_NO_MSG_ERR, 2,
    RCP_DATA_MBOX_INVALID_MSG_ID_ERR, 3,
    RCP_DATA_MBOX_NO_MSG_ERR, 4,
    RCP_OTA_MBOX_INVALID_MSG_ID_ERR, 5,
    RCP_OTA_MBOX_NO_MSG_ERR, 6,
    RCP_TEST_MBOX_INVALID_MSG_ID_ERR, 7,
    RCP_TEST_MBOX_NO_MSG_ERR, 8,
    RCP_DATAPKT_ERR, 9,
    RCP_PAR_ERR, 0xa,
    ACM_ERR_INVALID_CALLBACK_TIMER_ID, 0x90,
    ACM_ERR_INSUFFICIENT_TIMER_ID, 
    ACM_ERR_CPBUF_GET_FAIL, 
    ACM_ERR_DMA_LLD_CREATE_FAIL, 
    ACM_ERR_DATA_PACKET_BUF_GET_FAIL, 
    ACM_ERR_UNRECOGNIZABLE_ATTR_ID, 
    ACM_ERR_INVALID_RF_ASSIGN, 
    ACM_ERR_TX_CONDITION_CHECK_FAIL_ID, 
    ACM_ERR_PENDING_ACACK_SKIPPED_ID, 
    RCP_ERR_INVALID_GAIN_SCALE_REG, 0x100,
    RCP_ERR_INVALID_GAIN_SCALE_Q, 0x101,
    RCP_ERR_INVALID_REG_SCALE_Q, 0x102,
    RCP_ERR_GAIN_SCALE_CONV_RANGE, 0x103,
    RCP_ERR_STALE_RX_PWR_REQUEST, 0x104,
    RCP_ERR_STALE_TX_PWR_REQUEST, 0x105,
    RCP_ERR_STALE_KS_REQUEST, 0x106,
    RCP_ERR_TX_NOT_IN_MPA, 0x107,
    RCP_ERR_TXDMA, 0x200,
    RCP_ERR_TXDMA_HW, 0x201,
    RCP_TXDMA_ACK_LIST_OVERFLOW, 0x202,
    RCP_TXDMA_NAK_LIST_OVERFLOW, 0x203,
    RCP_ERR_TXHA_STATUS_ERR, 0x250,
    RCP_ERR_PAR_RETRANSMIT_DATA_NOT_EXIST, 0x300,
    RCP_ERR_PAR_RLP_RESET_OCCURS, 0x301,
    RCP_RTAP_ERR, 0x400,
    RCP_FTAP_ERR, 0x500,
    RCP_DSAR_INVALID_INDEX_ERR, 0x600,
    RCP_DSAR_INVALID_SIZE_ERR, 
    RCP_DSAR_QUEUE_FULL_ERR, 
    RCP_DSAR_CHANNEL_ERR, 
    RCP_DSAR_CHANNEL_REQ_ERR, 
    RCP_DSAR_RESET_ACK_ERR, 
    RCP_DSAR_ACK_QUEUE_FULL_ERR, 
    RCP_DSAR_TIMER_ACTIVE_ERR, 
    RCP_DSAR_TIMER_START_ERR, 
    RCP_DSAR_TIMER_INDEX_ERR, 
    RCP_DSAR_NO_EXEBUFF_ERR, 
    RCP_DSAR_ACK_STATE_ERR, 
    RCP_DSAR_PHY_ACK_MISSED_ERR, 
    RCP_RTM_ERR, 0x700,
    RCP_RTM_ERR_INVALID_ATTR_ID, 
    RCP_RTM_ERR_INVALID_ATTR_LEN, 
    RCP_RTM_ERR_INVALID_GAUP_ATTR_ID, 
    RCP_RTM_ERR_INVALID_VALUE_ID, 
    RCP_RTM_ERR_AN_REJECT, 
    RCP_RTM_ERR_INVALID_TASK_SIG, 
    RCP_RTM_ERR_INVALID_PKT_SIZE, 
    RCP_RTM_ERR_LATE_TX, 
    RCP_RTM_ERR_INVALID_RF_ASSIGN, 
    RCP_RTM_ERR_INVALID_RF_RELEASE_IND, 
    RCP_GENERAL_PROCESSING_ERROR_BUFFER_OVERRUN, 
End

Begin Enum, CP Slc Err Codes
    SLC_ERR_UNEXPECTED_EVENT, 0x0,
    SLC_ERR_UNKNOWN_CMD, 
    SLC_ERR_UNKNOWN_SIG, 
    SLC_ERR_INVALID_TASK_MSG_ID, 
    SLC_ERR_INVALID_OTAMSG_PROT_ID, 
    SLC_ERR_INVALID_DSATXSTATUS_PROT_ID, 
    SLC_ERR_INSUFFICIENT_TIMER_ID, 
    SLC_ERR_INVALID_CALLBACK_TIMER_ID, 
    SLC_ERR_SESSION_FILE_DIRECTORY_ERR_ID, 
    SLC_GENERAL_PROCESSING_BUFFER_OVERRUN_ERROR, 
    GCP_ERR_WILD_CONFIG_RSP_ID, 
    GCP_ERR_WILD_TX_STATUS_ID, 
    GCP_ERR_TRANSACTION_TIMEOUT_ID, 
    SMP_ERR_INVALID_AMP_OPEN_MSG_ID, 0x200,
    SMP_ERR_INVALID_AMP_FAIL_MSG_ID, 
    SMP_ERR_INVALID_SESSIONCLOSE_MSG_ID, 
    SMP_ERR_INVALID_UATIRCV_MSG_ID, 
    SMP_ERR_INVALID_OTA_MSG_ID, 
    SMP_ERR_INVALID_KEEPALIVE_TRANS_MSG_ID, 
    SMP_ERR_INVALID_KEEPALIVE_TRANS_TMO_ID, 
    SMP_ERR_INVALID_KEEPALIVE_CFG_ID, 
    SMP_ERR_INVALID_KEEPALIVE_UPDATE_ID, 
    SMP_ERR_INVALID_CONFIG_RSP_ID, 
    SMP_ERR_INVALID_SCP_FAIL_ID, 
    SMP_ERR_INVALID_FILE_WR_ID, 
    SMP_ERR_KEEPALIVE_RSP_ID, 
    SMP_ERR_KEEPALIVE_REQ_ID, 
    SMP_ERR_RESTORE_STATE_ID, 
    SMP_ERR_INVALID_CSS_ACTIVATE_MSG_ID, 
    SMP_ERR_INVALID_SCP_RECONFIG_ID, 
    SMP_ERR_RESET_DONE_MSG_ID, 
    SMP_ERR_INVALID_SESSION_CLOSE_ID, 
    SMP_ERR_INVALID_SCP_CONFIG_ID, 
    AMP_ERR_INVALID_CSS_ACTIVE_MSG_ID, 0x300,
    AMP_ERR_INVALID_SMP_DEACTIVE_MSG_ID, 
    AMP_ERR_INVALID_ASSIGN_MSG1_ID, 
    AMP_ERR_INVALID_ASSIGN_MSG2_ID, 
    AMP_ERR_INVALID_HARDWAREIDREQ_MSG_ID, 
    AMP_ERR_INVALID_ATTRIUPDATEACCEPT_MSG1_ID, 
    AMP_ERR_INVALID_ATTRIUPDATEACCEPT_MSG2_ID, 
    AMP_ERR_INVALID_ATTRIUPDATEREJ_MSG1_ID, 
    AMP_ERR_INVALID_ATTRIUPDATEREJ_MSG2_ID, 
    AMP_ERR_INVALID_CMD_MSG_ID, 
    AMP_ERR_INVALID_OTA_MSG_ID, 
    AMP_ERR_INVALID_ADDRTIMER_EXP_ID, 
    AMP_ERR_INVALID_ATI_LIST_FULL_ID, 
    AMP_ERR_INVALID_UATI_REQ_FAIL_ID, 
    AMP_ERR_INVALID_RESTORE_STATE_ID, 
    AMP_ERR_INVALID_ATTRIUPDATEAREQ_MSG_ID, 
    AMP_ERR_INVALID_SESSION_STATE_ID, 
    AMP_ERR_INVALID_TX_STATUS_ID, 
    SCP_ERR_INVALID_GAUP_MSG_ID, 0x400,
    SCP_ERR_INVALID_SUBTYPE_ID, 
    SCP_ERR_TOO_LARGE_NUM_APP_SUBTYPES_ID, 
    SCP_ERR_WRONG_CONFIG_LOCK_STATUS_ID, 
    SCP_ERR_INVALID_PERSONALITY_INDEX_ID, 
    SCP_ERR_INVALID_DELETE_PERSONALITY_MSG_ID, 
    SCP_ERR_COMPLETE_MISMATCH_TRANSID_ID, 
    SCP_ERR_RECONFIG_CNF_RECIVE_FAIL_ID, 
    SCP_ERR_AN_INIT_ST_CONFIG_REQ_RECIVE_FAIL_ID, 
    SCP_ERR_GAUP_FAIL_ID, 
    SCP_ERR_NONRECOGNIZABLE_OTA_MSG_ID, 
    SCP_ERR_RESTORE_SESSION_FAIL_ID, 
    SCP_ERR_GET_PERSONALITY_DATA_FAIL_ID, 
    SCP_ERR_INVALID_PROTOCOL_TYPE_ID, 
    SCP_ERR_INVALID_CONFIGURABLE_ATTR_ID, 
    SCP_ERR_INVALID_COMPLEX_ATTR_VALUE_ID_ID, 
    SCP_ERR_UNRECOGNIZABLE_ATTR_ID, 
    SCP_ERR_PERSONALITY_COMMIT_FAIL_ID, 
    SCP_ERR_PERSONALITY_FILE_READ_ERR_ID, 
    SCP_ERR_PERSONALITY_FILE_SAVE_INUSE_ERR_ID, 
    SCP_ERR_PERSONALITY_FILE_STORE_ERR_ID, 
    SCP_ERR_PERSONALITY_FILE_UPDATE_ERR_ID, 
    SCP_ERR_AN_CONFIGURING_HARDLINK_ID, 
    SCP_ERR_HARDLINK_CONFIG_FAIL_ID, 
    SCP_ERR_PERSONALITY_DATA_BUFFER_ERR_ID, 
    SCP_ERR_INVALID_GCP_MSG_ERR_ID, 
End

Begin Enum, CP Css Err Codes
    Unexpected event, 0,
    Css invalid sys pref type, 
    Css invalid ind in power up state, 
    Css invalid ind in powerup not most pref state, 
    Css invalid ind in powerup non system table state, 
    Css invalid ind in power up negative state, 
    Css invalid ind in idle state, 
    Css invalid ind in more pref scan state, 
    Css invalid ind in emergency state, 
    Css invalid ind in system lost state, 
    Css invalid ind in redirection state, 
    Css invalid ind in registration reject state, 
    Css invalid ind in otasp state, 
    Css invalid ind in emergency redirection state, 
    Css invalid ind in emergency system lost state, 
    Css invalid chan in otasp state, 
    Css invalid system type, 
    Css invalid redirection sys not found, 
    Css invalid band class in CDMA redirection, 
    Css invalid sys type in AMPS redirection, 
    Css invalid css state, 
    Css invalid band class in cdma avail, 
    Css invalid band class in add cdma avail, 
    Css invalid css indication, 
    Css invalid not in CDMA idle for Force Analog, 
    Css invalid band class in otasp state, 
    Css invalid system record type, 
    Css invalid acqusition record type, 
    Css invalid Hybrid PrefMode setting, 
    Css invalid 1X select request received, 
    Css invalid DO select request received, 
    Css invalid 1x validation request received, 
    Css Extended PRL Prev Mismatch, 50,
    Css PRL Acq Record Decode Error, 
    Css Scan List Empty Error, 
    Css Invalid PRL, 
    Css No PRL, 
    Css Read Uim Data Failure, 
    Css Get PRL Received Unexpected Msg ID, 
    Css Get PRL Received Invalid Msg ID, 
    Css Get PRL Mailbox Should Not Be Empty, 
    Css Get PRL Unexpected Event, 
    Css Invalid NAM Checksum, 
    Css Invalid MS CAP DB Checksum, 
    Css Invalid Message ID, 
    Css Get Dbm Rcvd Unexpected Msg ID, 
    Css Get Dbm Rcvd Invalid Msg ID, 
    Css Get Dbm Mbox Should Not Empty, 
    Css Get Dbm Unexpected Event, 
    Css Pll Chan Test Mode Invalid System, 
    Css Invalid Band, 
    Css Unpack PRL AcqRec Num Invalid, 
    Css Unpack PRL SysRec Num Invalid, 
    Css Unpack PRL Bad AcqRec, 
    Css Unpack PRL Bad CommSubnet, 
    Css Unpack PRL Bad SysRec, 
    Css Unpack PRL Max EPRLEntry, 
    Css Unpack PRL Hash to Table Error, 
    Css Unpack PRL CRC Error, 
    Css Unpack PRL Len Error, 
    Css Unpack PRL Invalid SSPR, 
    CSS_ERR_DUPLICATE_SUBNET_OVERFLOW, 
    CSS Band Block Channel Out Of Range, 80,
    CSS Pref Band Not Supported, 
    Css Invalid ERI Table, 90,
    Css No ERI Table, 
    Css ERI Entry Not Found, 
    CSS SVSM SELECT CHANNEL TOO MANY RECURSIONS, 100,
    CSS ERR INVALID ACTION IN 1X MARK NEGATIVE SYSTEMS, 
    CSS_ERR_INVALID_SCAN_METHOD_FOR_SYSLOST_DWELL_FEATURE, 
    CSS_ERR_PARM_INVALID_PTR, 200,
    CSS_ERR_PARM_INVALID_LENGTH, 
    CSS_ERR_PARM_GENERAL_FAILURE, 
    CSS_ERR_PARM_OPERATION_NOT_SUPPORTED, 
    CSS_ERR_PARM_DATABASE_NOT_INITIALIZED, 
    CSS_ERR_PARM_DATABASE_INVALID_CHECKSUM, 
    CSS_ERR_IRAT_RFC_STORE_CMD_NOT_EMPTY, 250,
    CSS_ERR_IRAT_RFC_RESTORE_CMD_EMPTY, 
End

Begin Enum, CP Sec Err Codes
    SEC_ERR_INVALID_MSG_ID, 0,
    SEC_ERR_MAILBOX_SHOULD_NOT_BE_EMPTY, 1,
    SEC_ERR_UNEXPECTED_EVENT, 2,
    SEC_ERR_INSUFFICIENT_TIMER_ID, 3,
    SEC_ERR_INVALID_CALLBACK_TIMER_ID, 4,
End

Begin Enum, CP Ets Err Codes
    ETS Tx OverRun Error, 0x00
    ETS Rx OverRun Error, 0x01
    ETS Data Deleted Error, 0x02
    ETS Channel Not In Use Err, 0x03
    ETS msg TX transfer Error, 0x04
    ETS msg RX transfer Error, 0x05
    ETS Invalid Channel, 0x06
    ETS Serial Port Error, 0x07
    ETS Rx Packet Length Error, 0x08
    ETS Rx Sync Error, 0x09
    ETS Rx Sync State Error, 0x0A
    ETS Rx Message Id Error, 0x0B
    ETS Rx Checksum Error, 0x0C
    ETS No Message In Mbox Error, 0x0D
    ETS Cmd Message Id Error, 0x0E
    ETS Tx Packet Length Error, 0x0F
    ETS Tx Buffer Free Error, 0x10
    ETS Tx Buffer Alloc Error, 0x11
End

Begin Enum, CP PDS Err Codes
    PDS_GENERAL_INVALID_MSG_ID, 
    PDS_MAILBOX_ERR_SHOULD_NOT_BE_EMPTY, 
    PDS_MEMORY_ALLOCATION_ERROR, 
    PDS_IS801_ERR_LOC_SESS_NOT_FOUND, 
    PDS_IS801_ERR_LOC_AFLT_STATE, 
    PDS_IS801_ERR_LOC_TCP_RCV_STATE, 
    PDS_IS801_ERR_LOC_OUT_PUT_FULL, 
    PDS_IS801_ERR_LOC_OUT_PUT_STATE, 
    PDS_IS801_ERR_LOC_INVALID_PPM, 
    PDS_IS801_ERR_LOC_PPM_ID, 
    PDS_IS801_ERR_LOC_EV, 
    PDS_IS801_ERR_LOC_SMS_RCV_STATE, 
    PDS_IS801_ERR_LOC_FLOW_STATE, 
    PDS_IS801_ERR_LOC_RSP_MSG_NUM, 
    PDS_IS801_ERR_LOC_PPM_STATE_ID, 
    PDS_IS801_ERR_LOC_PRM_STATE_ID, 
    PDS_IS801_ERR_LOC_SESS_DONE_INST_ID, 
    PDS_IS801_ERR_LOC_PPM_START_ID, 
    PDS_IS801_ERR_LOC_RESTART_ID, 
    PDS_IS801_ERR_LOC_ALM_FLAG_ID, 
    PDS_IS801_ERR_LOC_EPH_FLAG_ID, 
    PDS_IS801_ERR_LOC_ASSIST_DATA_ID, 
    PDS_IS801_ERR_LOC_MSB_CALLBACK_ID, 
    PDS_IS801_ERR_LOC_NOT_SUPPORT_PDMSGTYPE_ID, 
    PDS_IS801_ERR_LOC_ASN1_DECODE_ID, 
    PDS_IS801_ERR_LOC_ASN1_ENCODE_ID, 
    PDS_IS801_ERR_LOC_ASN1_REVLINK_MSG_ID, 
    PDS_IS801_ERR_LOC_ASN1_FWDLINK_MSG_ID, 
End

Begin Enum, CP MMC Err Codes
    MMC_GENERAL_INVALID_MSG_ID, 
    MMC_INVALID_TIMER_ID, 
    MMC_ERR_MAILBOX_SHOULD_NOT_BE_EMPTY, 
    MMC_INVALID_RAT_ID, 
    MMC_ENGINE_QUEUE_TYPE1_FULL, 
    MMC_ENGINE_QUEUE_TYPE2_FULL, 
    MMC_GMSS_INVALID_MSG_ID, 0x100,
    MMC_GMSS_PS_REG_RCVD_FOR_WRONG_RAT, 
    MMC_GMSS_UICC_ACTIVITY_WHEN_MODE_DISABLED, 
    MMC_GMSS_VALIDATE_PRI_UNAVL_SYSTEM, 
    MMC_DBM_CLEAR_GMRU_FAILED, 
    MMC_DBM_MLPL_PARSING_FAILED, 
    MMC_DBM_MLPL_HASH_TABLE_ADD_FAILED, 
    MMC_DBM_MLPL_LEN_MISMATCH, 
    MMC_DBM_MLPL_SYSLOC_SIZE_MISMATCH, 
    MMC_DBM_MLPL_RAT_NOT_SUPPORTED, 
    MMC_DBM_MLPL_READ_FAILED, 
    MMC_DBM_MLPL_MATCH_NOT_FOUND, 
    MMC_DBM_MLPL_INVALID_MCC, 
    MMC_DBM_MLPL_INVALID_MNC, 
    MMC_DBM_MSPL_PARSING_FAILED, 
    MMC_DBM_MSPL_READ_FAILED, 
    MMC_DBM_GMSS_DB_READ_FAILED, 
    MMC_DBM_GMSS_DB_WRITE_FAILED, 
    MMC_DBM_ALT_TECH_TABLE_READ_FAILED, 
    MMC_DBM_BSR_LIST_BUILD_FAILED, 
    MMC_DBM_PARM_OPERATION_NOT_SUPPORTED, 
    MMC_DBM_MSPL_BSR_TIME_ERROR, 
    MMC_GMSS_RATONLY_OPMODE_MISMATCH, 
    MMC_GMSS_BSR_START_FAILED, 
    MMC_GMSS_MMC_SRCH_REQ_UNSUPPORTED_RAT, 
    MMC_GMSS_PS_REG_UNSUPPORTED_RAT, 
    MMC_GMSS_ACQ_REQ_UNSUPPORTED_RAT, 
    MMC_GMSS_NO_SVC_UNSUPPORTED_RAT, 
    MMC_GMSS_RAT_ONLY_UNSUPPORTED_RAT, 
    MMC_GMSS_PWR_DOWN_UNSUPPORTED_RAT, 
    MMC_GMSS_PWR_UP_UNSUPPORTED_RAT, 
    MMC_GMSS_CS_REG_UNSUPPORTED_RAT, 
    MMC_GMSS_CELL_ID_UNSUPPORTED_RAT, 
    MMC_GMSS_NWK_STATIND_UNSUPPORTED_RAT, 
    MMC_GMSS_NWK_STATIND_FOR_INACTIVE_RAT, 
    MMC_GMSS_NWK_STATIND_ACQ_INSVC_RAT, 
    MMC_GMSS_NWK_STATIND_INVALID_PRICLASS, 
    MMC_GMSS_NWK_STATIND_UNEXPECT_STATE, 
    MMC_GMSS_NWK_STATIND_UNEXPECT_PSTYPE, 
    MMC_GMSS_RATINFO_GET_FAILED, 
    MMC_GMSS_INVALID_LIST_TYPE, 
    MMC_GMSS_INVALID_RAT_SUPPORT, 
    MMC_GMSS_UNEXPECTED_MMC_RSP, 
    MMC_GMSS_START_SCAN_WITH_NO_RATS, 
    MMC_GMSS_MCC_NO_PS_RATS, 
    MMC_GMSS_ACQ_REQ_FAIL, 
    MMC_GMSS_STOP_RAT_FAIL, 
    MMC_GMSS_PS_REG_FAIL, 
    MMC_GMSS_UNEXPECTED_OOS_SLEEP_TMR_EXP, 
    MMC_GMSS_POWERUP_FAIL_RSP, 
    MMC_GMSS_UNEXPECTED_MEAS_IND, 
    MMC_GMSS_UNEXPECTED_PKT_NO_SVC, 
    MMC_GMSS_UNEXPECTED_RAT_NO_SVC, 
    MMC_GMSS_UNEXPECTED_PKT_ACTION, 
    MMC_GMSS_UNEXPECTED_AP_POWERUP_REQ, 
    MMC_PKT_INVALID_MSG_ID, 0x200,
    MMC_PKT_DETACH_FAILED, 
    MMC_PKT_INSUF_PDN_TBLE_ENTRY, 
    MMC_PKT_UNEXPECTED_DISABLED_RSP, 
    MMC_PKT_UNEXPECTED_SUSPENDED_RSP, 
    MMC_PKT_UNEXPECTED_EVENT, 
    MMC_PKT_INVALID_PDN_STATUS, 
    MMC_PKT_MAX_CALL_SETUP_TMR_EXP, 
    MMC_PKT_MAX_DISCONNECT_TMR_EXP, 
    MMC_PKT_MAX_HANDOVER_TMR_EXP, 
    MMC_MEAS_INVALID_MSG_ID, 0x300,
    MMC_SOFTWARE_BUFFER_OVERRUN_ERR, 
End

Begin Enum, Exe Fault Codes
    Msg Buffer Memory Empty Error HALT, 0, RO
    Msg Buffer Memory Size Error HALT, 1, RO
    Nucleus Error HALT, 2, RO
    Msg Buffer Overwrite Error HALT, 4, RO
    Mail Queue Full Error HALT, 9, RO
    Msg Buffer Redundant Free Error HALT, 11, RO
    Msg Buffer Free Invalid Ptr Error HALT, 12, RO
    Msg Buffer Already Sent Error HALT, 14, RO
    Msg Buffer Get Corrupted Ptr Error HALT, 17, RO
    Msg Buffer Free Corrupted Ptr Error HALT, 18, RO
    Msg Buffer Send Corrupted Ptr Error HALT, 19, RO
    Msg Buffer Read Corrupted Ptr Error HALT, 20, RO
End

Begin Enum, CP Nucleus Status
    NU_SUCCESS, 0
    NU_END_OF_LOG, 0xFFFFFFFF
    NU_GROUP_DELETED, 0xFFFFFFFE
    NU_INVALID_DELETE, 0xFFFFFFFD
    NU_INVALID_DRIVER, 0xFFFFFFFC
    NU_INVALID_ENABLE, 0xFFFFFFFB
    NU_INVALID_ENTRY, 0xFFFFFFFA
    NU_INVALID_FUNCTION, 0xFFFFFFF9
    NU_INVALID_GROUP, 0xFFFFFFF8
    NU_INVALID_HISR, 0xFFFFFFF7
    NU_INVALID_MAILBOX, 0xFFFFFFF6
    NU_INVALID_MEMORY, 0xFFFFFFF5
    NU_INVALID_MESSAGE, 0xFFFFFFF4
    NU_INVALID_OPERATION, 0xFFFFFFF3
    NU_INVALID_PIPE, 0xFFFFFFF2
    NU_INVALID_POINTER, 0xFFFFFFF1
    NU_INVALID_POOL, 0xFFFFFFF0
    NU_INVALID_PREEMPT, 0xFFFFFFEF
    NU_INVALID_PRIORITY, 0xFFFFFFEE
    NU_INVALID_QUEUE, 0xFFFFFFED
    NU_INVALID_RESUME, 0xFFFFFFEC
    NU_INVALID_SEMAPHORE, 0xFFFFFFEB
    NU_INVALID_SIZE, 0xFFFFFFEA
    NU_INVALID_START, 0xFFFFFFE9
    NU_INVALID_SUSPEND, 0xFFFFFFE8
    NU_INVALID_TASK, 0xFFFFFFE7
    NU_INVALID_TIMER, 0xFFFFFFE6
    NU_INVALID_VECTOR, 0xFFFFFFE5
    NU_MAILBOX_DELETED, 0xFFFFFFE4
    NU_MAILBOX_EMPTY, 0xFFFFFFE3
    NU_MAILBOX_FULL, 0xFFFFFFE2
    NU_MAILBOX_RESET, 0xFFFFFFE1
    NU_NO_MEMORY, 0xFFFFFFE0
    NU_NO_MORE_LISRS, 0xFFFFFFDF
    NU_NO_PARTITION, 0xFFFFFFDE
    NU_NOT_DISABLED, 0xFFFFFFDD
    NU_NOT_PRESENT, 0xFFFFFFDC
    NU_NOT_REGISTERED, 0xFFFFFFDB
    NU_NOT_TERMINATED, 0xFFFFFFDA
    NU_PIPE_DELETED, 0xFFFFFFD9
    NU_PIPE_EMPTY, 0xFFFFFFD8
    NU_PIPE_FULL, 0xFFFFFFD7
    NU_PIPE_RESET, 0xFFFFFFD6
    NU_POOL_DELETED, 0xFFFFFFD5
    NU_QUEUE_DELETED, 0xFFFFFFD4
    NU_QUEUE_EMPTY, 0xFFFFFFD3
    NU_QUEUE_FULL, 0xFFFFFFD2
    NU_QUEUE_RESET, 0xFFFFFFD1
    NU_SEMAPHORE_DELETED, 0xFFFFFFD0
    NU_SEMAPHORE_RESET, 0xFFFFFFCF
    NU_TIMEOUT, 0xFFFFFFCE
    NU_UNAVAILABLE, 0xFFFFFFCD
End

Begin Enum, CP Mon Exception Codes
    Reset Exception Error, 0, RO
    Undefined Instruction Error, 1, RO
    Software Interrupt Exception Error, 2, RO
    Prefetch Abort Exception Error, 3, RO
    Data Abort Exception Error, 4, RO
    Reserved Exception Error, 5, RO
    Write RO IRAM Memory Exception Error, 6, RO
    Write ITCM Memory Exception Error, 7, RO
    Memory Access Exception Error, 8, RO
End

Begin Enum, ARM Modes
    SUPV_MODE, 0, RO
    FIQ__MODE, 1, RO
    IRQ__MODE, 2, RO
    UDEF_MODE, 3, RO
    ABT__MODE, 4, RO
    SYS__MODE, 5, RO
End

Begin Enum, MsgBufferState
    Msg_GET, 0,
    MsgSENT, 1,
    MsgREAD, 2,
    MsgFREE, 3,
End

Begin Enum, CP Nucleus Task Status
    TASK_READY, 0
    PURE_SUSPEND, 1
    SLEEP_SUSPEND, 2
    MAILBOX_SUSPEND, 3
    QUEUE_SUSPEND, 4
    PIPE_SUSPEND, 5
    SEMAPHO_SUSPEND, 6
    EVENT_SUSPEND, 7
    PARTITION_SUSPEND, 8
    MEMORY_SUSPEND, 9
    DRIVER_SUSPEND, 10
    TASK_FINISHED, 11
    TASK_TERMINATE, 12
    NOT_STARTED, 13
End

Begin Enum, Thread Event Types
    Blank_Data, 0x00
    Event_Wait, 0x01
    Signal_Got, 0x02
    Task_Sleep, 0x03
    Task_Wakeup, 0x04
    Signal_Set, 0x05
    Message_Send, 0x06
    Reserved_Id, 0x07
    Message_Got, 0x08
    No_Message, 0x09
    Semapho_Wait, 0x0A
    Semapho_Got, 0x0B
    Semapho_Free, 0x0C
    Sema_Timeout, 0x0D
    Malloc_Got, 0x0E
    Malloc_Fail, 0x0F
    Message_Req, 0x10
    Message_Free, 0x11
    Memory_Free, 0x12
    Context_Swith, 0x13
    Semapho_Creat, 0x14
    Sleep_Enter, 0x15
    Sleep_Wakeup, 0x16
    Light_Sleep, 0x17
    Start_Timer, 0x18
    Create_Timer, 0x19
    Delete_Timer, 0x1A
    Stop_Timer, 0x1B
    Reset_Timer, 0x1C
    Suspend_Task, 0x1D
    Resume_Task, 0x1E
    Chg_Priority, 0x1F
End

Begin Enum, CP ISR Stack Ids
    INT_STACK, 0
    IRQ_STACK, 1
    FIQ_STACK, 2
    SYSTEM_STACK, 3
    USER_STACK, 4
    UNDEF_STACK, 5
    ABORT_STACK, 6
    HISR0_STACK, 7
    HISR1_STACK, 8
    TIMER_STACK, 9
    ARM_REGS_STACK, 10
End

Begin Enum, CP Mem Fault Type
    IRAM, 0
    Populated Memory, 1
    Unpopulated Memory, 2
    Unknown, 3
End

Begin Enum, CP Mem Access Type
    Unknown, 0
    Read, 1
    Write, 2
End

Begin Enum, FsrStatusDescr
    Unknown FSR Status, 0,
    Alignment 1 Domain Invalid, 1,
    Alignment 3 Domain Invalid, 3,
    Translation Domain Invalid, 5,
    Translation Domain Valid, 7,
    External Abort, 8,
    Domain  9 Domain Vaid, 9,
    Domain  11 Domain Vaid, 11,
    External abort on translation First level, 12,
    Permission 13, 13,
    External abort on translation Second level, 14,
    Permission 15, 15,
End

Begin Enum, MmuEnableEnum
    Data Cache Only Enabled, 0x00000004,
    Instruction Cache Only Enabled, 0x00001000,
    Data and Instruction Cache Enabled, 0x00001004,
End

Begin enum, FSM Event Type
    Bkgnd Reclaim Start, 0
    Bkgnd Reclaim Stop, 1
    Forced Reclaim Start, 2
    Forced Reclaim Stop, 3
    Write Queue Full, 4
End

Begin Enum, CP TraceIds
    All Off, 0, CT, CP/Trace, lite, 
    CP MON Generic Dec1, 1, CT, CP/Trace/MON, 
    CP MON Generic Dec2, 2, CT, CP/Trace/MON, 
    CP MON Generic Hex1, 3, CT, CP/Trace/MON, 
    CP MON Generic Hex2, 4, CT, CP/Trace/MON, 
    CP MON Msg Trace, 5, CT, CP/Trace/MON, 
    CP MON Deep Sleep Control, 6, CT, CP/Trace/MON, 
    CP MON Deep Sleep Veto Mask, 7, CT, CP/Trace/MON, 
    CP MON IPCLog Open, 8, CT, CP/Trace/MON, 
    CP MON Dyn Code Dnld, 9, CT, CP/Trace/MON, 
    CP L1d SpState, 16, CT, CP/Trace/L1D, 
    CP L1d Sleep32k, 17, CT, CP/Trace/L1D, 
    CP L1d Event Entry, 18, CT, CP/Trace/L1D, 
    CP L1d Event Exit, 19, CT, CP/Trace/L1D, 
    CP L1d Calibration Start, 20, CT, CP/Trace/L1D, 
    CP L1d Calibration End, 21, CT, CP/Trace/L1D, 
    CP L1d Calibration Done, 22, CT, CP/Trace/L1D, 
    CP L1d Slotted Params Message, 23, CT, CP/Trace/L1D, 
    CP L1d Resync Enter, 24, CT, CP/Trace/L1D, 
    CP L1d Slotted Long Code Read, 25, CT, CP/Trace/L1D, 
    CP L1d Slotted Initial Long Code, 26, CT, CP/Trace/L1D, 
    CP L1d Slotted Sleep Pch Calib, 27, CT, CP/Trace/L1D, 
    CP L1d Slotted Sleep Pch2 Calib, 28, CT, CP/Trace/L1D, 
    CP L1d Slotted Sleep Pch3 Calib, 29, CT, CP/Trace/L1D, 
    CP L1d Resync Exit, 30, CT, CP/Trace/L1D, 
    CP L1d Resync state sleep, 31, CT, CP/Trace/L1D, 
    CP L1d Long Code Hop, 32, CT, CP/Trace/L1D, 
    CP L1d 32KHz Trace, 33, CT, CP/Trace/L1D, 
    CP L1d Mini-Acq Trace, 34, CT, CP/Trace/L1D, 
    CP L1d Immediate Wake Trace, 35, CT, CP/Trace/L1D, 
    CP L1d Immediate Wake Trace2, 36, CT, CP/Trace/L1D, 
    CP L1d Clock Calib Dump, 37, CT, CP/Trace/L1D, 
    CP L1d Slotted Sleep QPch Calib, 38, CT, CP/Trace/L1D, 
    CP L1d Slotted Sleep QPch Calib2, 39, CT, CP/Trace/L1D, 
    CP L1d Slotted Sleep QPch Calib3, 40, CT, CP/Trace/L1D, 
    CP L1d Slotted Wake Mode, 41, CT, CP/Trace/L1D, 
    CP L1d Qpch Search Expired, 42, CT, CP/Trace/L1D, 
    CP L1d Sleep IHO Detected, 43, CT, CP/Trace/L1D, 
    CP L1d Slotted Generic 1, 44, CT, CP/Trace/L1D, 
    CP L1d Slotted Generic 2, 45, CT, CP/Trace/L1D, 
    CP L1d Mini-Acq Cal Adj Trace, 46, CT, CP/Trace/L1D, 
    CP L1d Sleep Time Trap Trace, 47, CT, CP/Trace/L1D, 
    CP L1d Slotted Error Trace, 48, CT, CP/Trace/L1D, 
    CP L1d Slotted Warning Trace, 49, CT, CP/Trace/L1D, 
    CP L1d Slotted Full Trace, 50, CT, CP/Trace/L1D, 
    CP L1d Slotted FSM Trace, 51, CT, CP/Trace/L1D, 
    CP L1d Cmd Mbox, 64, CT, CP/Trace/L1D, 
    CP L1d State, 65, CT, CP/Trace/L1D, 
    CP L1d Rx Srch Rslts, 66, CT, CP/Trace/L1D, 
    CP L1d Num Act Cand, 67, CT, CP/Trace/L1D, 
    CP L1d Num Nghbr, 68, CT, CP/Trace/L1D, 
    CP L1d Signal, 69, CT, CP/Trace/L1D, 
    CP L1d Rf Tune, 70, CT, CP/Trace/L1D, 
    CP L1d Timing Chg Act Time, 71, CT, CP/Trace/L1D, 
    CP L1d Transmitter Control, 72, CT, CP/Trace/L1D, 
    CP L1d PSW Status Report, 73, CT, CP/Trace/L1D, 
    CP L1d Timer Started, 74, CT, CP/Trace/L1D, 
    CP L1d Timer Expired, 75, CT, CP/Trace/L1D, 
    CP L1d Timer Stopped, 76, CT, CP/Trace/L1D, 
    CP L1d Dsm Ack Msg Id, 77, CT, CP/Trace/L1D, 
    CP L1d Num Cand Freq, 78, CT, CP/Trace/L1D, 
    CP L1d Srch Seq Mismatch, 79, CT, CP/Trace/L1D, 
    CP L1d GPS State, 80, CT, CP/Trace/L1D, 
    CP L1d GPS MobSysTOffset, 81, CT, CP/Trace/L1D, 
    CP L1d Rsch Traces, 82, CT, CP/Trace/L1D, 
    CP L1d Fsch Traces, 83, CT, CP/Trace/L1D, 
    CP L1d Action Time Debug, 84, CT, CP/Trace/L1D, 
    CP L1d Aflt, 85, CT, CP/Trace/L1D, 
    CP L1d Search Time Calc, 86, CT, CP/Trace/L1D, 
    CP L1d Each Timing, 87, CT, CP/Trace/L1D, 
    CP L1d Srch Rslts Blocked, 88, CT, CP/Trace/L1D, 
    CP L1d 32kHz Osc Validation, 89, CT, CP/Trace/L1D, 
    CP L1d Error, 90, CT, CP/Trace/L1D, 
    CP L1d Warning, 91, CT, CP/Trace/L1D, 
    CP L1d Full, 92, CT, CP/Trace/L1D, 
    CP L1d Diversity Ant Ctrl, 93, CT, CP/Trace/L1D, 
    CP L1d Generic Dec1, 94, CT, CP/Trace/L1D, 
    CP L1d Generic Dec2, 95, CT, CP/Trace/L1D, 
    CP L1d Generic Hex1, 96, CT, CP/Trace/L1D, 
    CP L1d Generic Hex2, 97, CT, CP/Trace/L1D, 
    CP L1d Generic dB, 98, CT, CP/Trace/L1D, 
    CP L1d Msg Trace, 99, CT, CP/Trace/L1D, 
    CP L1d Artd Metrics, 100, CT, CP/Trace/L1D, 
    CP L1d Artd Full, 101, CT, CP/Trace/L1D, 
    CP Cmd Mbox, 112, CT, CP/Trace/LMD, 
    CP Sig Mbox, 113, CT, CP/Trace/LMD, 
    CP Rev State, 114, CT, CP/Trace/LMD, 
    CP Rev Null Traffic Frame, 115, CT, CP/Trace/LMD, 
    CP Rev Access Sig Rcvd, 116, CT, CP/Trace/LMD, 
    CP Rev Access Sig Sent, 117, CT, CP/Trace/LMD, 
    CP Rev Access Sig Abort, 118, CT, CP/Trace/LMD, 
    CP Rev EACH Sig Process, 119, CT, CP/Trace/LMD, 
    CP Rev Sig Msg Rcvd, 120, CT, CP/Trace/LMD, 
    CP Rev Sig Msg Sent, 121, CT, CP/Trace/LMD, 
    CP Rev Transmitter Status Msg, 122, CT, CP/Trace/LMD, 
    CP Rev Traffic Primary Packets Rcvd, 123, CT, CP/Trace/LMD, 
    CP Rev Sch Dtx Expired, 124, CT, CP/Trace/LMD, 
    CP Rev Sch Fill and DTX Count, 125, CT, CP/Trace/LMD, 
    CP Fwd Traffic Frame Header, 126, CT, CP/Trace/LMD, 
    CP Fwd Traffic Bad Frame, 127, CT, CP/Trace/LMD, lite, 
    CP Fwd Traffic Channel Type, 128, CT, CP/Trace/LMD, 
    CP Fwd Counter Suspend Status, 129, CT, CP/Trace/LMD, 
    CP Fwd Signaling Msg Rcvd, 130, CT, CP/Trace/LMD, 
    CP Fwd Pdch Header Info, 131, CT, CP/Trace/LMD, 
    CP Fwd Pdch Signaling Info, 132, CT, CP/Trace/LMD, 
    CP Fwd Pdch Traffic Info, 133, CT, CP/Trace/LMD, 
    CP Svc Traffic Chan Start Msg, 144, CT, CP/Trace/LMD, 
    CP Svc Service Config Msg, 145, CT, CP/Trace/LMD, 
    CP Svc ServiceOpt Disc Msg, 146, CT, CP/Trace/LMD, 
    CP Svc LPM Config, 147, CT, CP/Trace/LMD, 
    CP Svc DTCH Mux Control and RC, 148, CT, CP/Trace/LMD, 
    CP Svc SrId Usage, 149, CT, CP/Trace/LMD, 
    CP Svc Fch Service Option, 150, CT, CP/Trace/LMD, 
    CP Svc Dcch service Option, 151, CT, CP/Trace/LMD, 
    CP Svc Max Vocoder Rate, 152, CT, CP/Trace/LMD, 
    CP Svc Rev Dcch Config Get, 153, CT, CP/Trace/LMD, 
    CP Svc Rev Fch Config Get, 154, CT, CP/Trace/LMD, lite, 
    CP Svc Fwd Fch SetUp Info, 155, CT, CP/Trace/LMD, 
    CP Svc Fwd Fch Config Get, 156, CT, CP/Trace/LMD, lite, 
    CP Svc Fwd Dcch Config Get, 157, CT, CP/Trace/LMD, 
    CP Svc Cmd Msg, 158, CT, CP/Trace/LMD, 
    CP Svc FSCH Mux Control and RC, 159, CT, CP/Trace/LMD, 
    CP Svc RSCH Mux Control and RC, 160, CT, CP/Trace/LMD, 
    CP Svc SrId Table Reset, 161, CT, CP/Trace/LMD, 
    CP Svc Service Option Connect, 162, CT, CP/Trace/LMD, 
    CP Svc Rev Loopback or TDSO Frame, 163, CT, CP/Trace/LMD, 
    CP Svc Lmd Fsch Msg, 164, CT, CP/Trace/LMD, 
    CP Svc Lmd Fsch Config Info, 165, CT, CP/Trace/LMD, lite, 
    CP Svc Fsch Start Info, 166, CT, CP/Trace/LMD, 
    CP Svc Lmd Rsch Msg, 167, CT, CP/Trace/LMD, 
    CP Svc Lmd Rsch Config Info, 168, CT, CP/Trace/LMD, lite, 
    CP Svc Rsch Start Info, 169, CT, CP/Trace/LMD, 
    CP Svc Rsch Pdu Info, 170, CT, CP/Trace/LMD, 
    CP Svc Pt Mbox Set Info, 171, CT, CP/Trace/LMD, 
    CP Svc Rlp Mbox Set Info, 172, CT, CP/Trace/LMD, 
    CP Svc Res Update Msg, 173, CT, CP/Trace/LMD, 
    CP Svc Res Update Start, 174, CT, CP/Trace/LMD, 
    CP Svc Res Update Process, 175, CT, CP/Trace/LMD, 
    CP Svc Dcch Active Status, 176, CT, CP/Trace/LMD, 
    CP Svc Fch  Active Status, 177, CT, CP/Trace/LMD, 
    CP Svc Mux PDU SCH Config, 178, CT, CP/Trace/LMD, 
    CP Svc Mux PDU PDCH Config, 179, CT, CP/Trace/LMD, 
    CP LMD Mp Frame Trace, 192, CT, CP/Trace/LMD, 
    CP LMD Mp Training State Trace, 193, CT, CP/Trace/LMD, 
    CP Encode AGC Mic Audio Frame Energy, 194, CT, CP/Trace/LMD, 
    CP LMD Markov Trace, 195, CT, CP/Trace/LMD, lite, 
    CP LMD Tdso Functional Trace, 196, CT, CP/Trace/LMD, 
    CP LMD Tdso Processing Trace, 197, CT, CP/Trace/LMD, 
    CP LMD Record Trace, 198, CT, CP/Trace/LMD, 
    CP LMD Playback Trace, 199, CT, CP/Trace/LMD, 
    CP LMD Sec Signal Trace, 200, CT, CP/Trace/LMD, 
    CP LMD Sec Message Trace, 201, CT, CP/Trace/LMD, 
    CP LMD Vstrm Mic Data Trace, 202, CT, CP/Trace/LMD, 
    CP LMD Vstrm Spkr Data Trace, 203, CT, CP/Trace/LMD, 
    CP LMD IMAS Config Trace, 204, CT, CP/Trace/LMD, 
    CP HWD Serializer, 208, CT, CP/Trace/HWD, 
    CP RF SPI, 209, CT, CP/Trace/HWD, 
    CP MXS SPI, 210, CT, CP/Trace/HWD, 
    CP Freq Channel, 211, CT, CP/Trace/HWD, lite, 
    CP RF LPT Control, 212, CT, CP/Trace/HWD, 
    CP HWD Task Mailbox, 213, CT, CP/Trace/HWD, 
    CP 32kHz Counter Read, 214, CT, CP/Trace/HWD, 
    CP Power Save Mode, 215, CT, CP/Trace/HWD, 
    CP Dspm Clock Control, 216, CT, CP/Trace/HWD, 
    CP ESPI DEBUG, 217, CT, CP/Trace/HWD, 
    CP RAC Driver Control, 218, CT, CP/Trace/HWD, 
    CP Power Save Voice Mode, 219, CT, CP/Trace/HWD/Audio, 
    CP Sleep Over Hisr, 220, CT, CP/Trace/HWD, 
    CP HWD Calibration Control, 221, CT, CP/Trace/HWD, 
    CP HWD TxAgc Alt Thresholds, 222, CT, CP/Trace/HWD, 
    CP HWD RF FIQ Control, 223, CT, CP/Trace/HWD, 
    CP HWD Mixed Signal Control, 224, CT, CP/Trace/HWD, 
    CP HWD Internal PMU Control, 225, CT, CP/Trace/HWD, 
    CP HWD RF Control, 226, CT, CP/Trace/HWD, 
    CP HWD PLL Lock Detect, 227, CT, CP/Trace/HWD, 
    CP HWD RF Driver Trace, 228, CT, CP/Trace/HWD, 
    CP RxTx RF Alg Generic, 229, CT, CP/Trace/HWD, 
    CP HWD BAS Alg, 230, CT, CP/Trace/HWD, 
    CP HWD Error Trace, 231, CT, CP/Trace/HWD, 
    CP_HWD_CLOCK_REGISTER_CLK0_TRACE_I_ID, 232, CT, CP/Trace/HWD/REG, 
    CP_HWD_CLOCK_REGISTER_CLK0_TRACE_II_ID, 233, CT, CP/Trace/HWD/REG, 
    CP_HWD_CLOCK_REGISTER_CLK0_TRACE_III_ID, 234, CT, CP/Trace/HWD/REG, 
    CP_HWD_CLOCK_REGISTER_CLK1_TRACE_I_ID, 235, CT, CP/Trace/HWD/REG, 
    CP_HWD_CLOCK_REGISTER_CLK1_TRACE_II_ID, 236, CT, CP/Trace/HWD/REG, 
    CP_HWD_CLOCK_REGISTER_CLK2_TRACE_ID, 237, CT, CP/Trace/HWD/REG, 
    CP_HWD_CLOCK_REGISTER_PLLCTL_TRACE_ID, 238, CT, CP/Trace/HWD/REG, 
    CP_HWD_CLOCK_REGISTER_PLL_DIVZ_TRACE_ID, 239, CT, CP/Trace/HWD/REG, 
    CP HWD_CLOCK_REGISTER_TRACE_ID, 271, CT, CP/Trace/HWD/REG, 
    CP Sys SysTime, 240, CT, CP/Trace/SYS, 
    CP Sys Callback Queue, 241, CT, CP/Trace/SYS, 
    CP Sys Callback Test, 242, CT, CP/Trace/SYS, 
    CP Sys Error, 243, CT, CP/Trace/SYS, 
    CP Sys Warning, 244, CT, CP/Trace/SYS, 
    CP_SYS_CPBUF_TEST_TRACE_ID, 245, CT, CP/Trace/SYS, 
    CP_SYS_CTS_CALLBACK_CLEAR_ID, 257, CT, CP/Trace/SYS, 
    CP_SYS_CTS_CALLBACK_REGISTER_ID, 258, CT, CP/Trace/SYS, 
    CP VAL Process General, 246, CT, CP/Trace/VAL, 
    CP VAL HSPD PRI, 247, CT, CP/Trace/VAL/HLP, 
    CP VAL CONN GET PARM, 248, CT, CP/Trace/VAL/Connectivity, 
    CP VAL CONN SET PARM, 249, CT, CP/Trace/VAL/Connectivity, 
    CP VAL Psw Set State, 250, CT, CP/Trace/VAL/API, 
    CP VAL IRAT defualt bearer attach info, 251, CT, CP/Trace/VAL/IRAT, 
    CP VAL IRAT dedicated bearer attach info, 252, CT, CP/Trace/VAL/IRAT, 
    CP_VAL_GPS_GENERAL_TRACE_ID, 253, CT, CP/Trace/VAL/GPS, 
    CP MMC to LTE or AP Msg Id, 254, CT, CP/Trace/VAL/MMC, 
    CP RAT to MMC Msg Id, 255, CT, CP/Trace/VAL/MMC, 
    CP PAC RX MSG, 272, CT, CP/Trace/PAC, 
    CP PAC TX MSG, 273, CT, CP/Trace/PAC, 
    CP PAC Test01, 274, CT, CP/Trace/PAC, 
    CP PAC Test02, 275, CT, CP/Trace/PAC, 
    CP PAC Test03, 276, CT, CP/Trace/PAC, 
    CP PAC Test04, 277, CT, CP/Trace/PAC, 
    CP PAC Test05, 278, CT, CP/Trace/PAC, 
    CP Fwd FCH non idle info, 288, CT, CP/Trace/RLP, 
    CP Fwd SCH info, 289, CT, CP/Trace/RLP, 
    CP Rev FCH non idle info, 290, CT, CP/Trace/RLP, 
    CP Rev SCH info, 291, CT, CP/Trace/RLP, 
    CP Fwd FCH raw info, 292, CT, CP/Trace/RLP, 
    CP Rev FCH raw info, 293, CT, CP/Trace/RLP, 
    CP Rev Pri Pro Rate, 294, CT, CP/Trace/RLP, 
    CP Rev Sec Pro Rate, 295, CT, CP/Trace/RLP, 
    CP HLP Rev Data Response, 296, CT, CP/Trace/RLP, 
    CP Open Response, 297, CT, CP/Trace/RLP, 
    CP Close Response, 298, CT, CP/Trace/RLP, 
    CP Reset Indication, 299, CT, CP/Trace/RLP, 
    CP Fwd data to HLW, 300, CT, CP/Trace/RLP, 
    CP Decrypt request, 301, CT, CP/Trace/RLP, 
    CP Encrypt request, 302, CT, CP/Trace/RLP, 
    CP Rev frame req info, 303, CT, CP/Trace/RLP, 
    CP Rev Data To RLPE index, 304, CT, CP/Trace/RLP, 
    CP IOP To RLPW data Len, 305, CT, CP/Trace/RLP, 
    CP RLP CTL reset info, 306, CT, CP/Trace/RLP, 
    CP Ctrl flow stop IOP, 307, CT, CP/Trace/RLP, 
    CP HL opens RLP, 308, CT, CP/Trace/RLP, 
    CP HL close RLP, 309, CT, CP/Trace/RLP, 
    CP AI opens RLP, 310, CT, CP/Trace/RLP, 
    CP AI closes RLP, 311, CT, CP/Trace/RLP, 
    CP LMD opens RLP, 312, CT, CP/Trace/RLP, 
    CP LMD closes RLP, 313, CT, CP/Trace/RLP, 
    CP HL done with fwd Data, 314, CT, CP/Trace/RLP, 
    CP RLPE put Fwd Data to RLPW, 315, CT, CP/Trace/RLP, 
    CP Rev Data to RLPW, 316, CT, CP/Trace/RLP, 
    CP Tx Rx Mux Option, 317, CT, CP/Trace/RLP, 
    CP Rate Ctrl Param, 318, CT, CP/Trace/RLP, 
    CP Sec Priority changes, 319, CT, CP/Trace/RLP, 
    CP RLPW PA Status, 320, CT, CP/Trace/RLP, 
    CP RLP Rev Flow Ctl RLP Data Save, 321, CT, CP/Trace/RLP, 
    CP RLP Rev Flow Ctl RLP Data Sent, 322, CT, CP/Trace/RLP, 
    CP RLP Rev Flow Ctl RLP Idle Sent, 323, CT, CP/Trace/RLP, 
    CP RLP Rev Data IP-Identification, 324, CT, CP/Trace/RLP, 
    CP RLP Generic Dec1, 325, CT, CP/Trace/RLP, 
    CP RLP Generic Dec2, 326, CT, CP/Trace/RLP, 
    CP RLP Generic Hex1, 327, CT, CP/Trace/RLP, 
    CP RLP Generic Hex2, 328, CT, CP/Trace/RLP, 
    CP RLP ENG_NO_CATEGORY 2 86, 329, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 87, 330, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 88, 331, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 89, 332, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 90, 333, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 91, 334, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 92, 335, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 93, 336, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 94, 337, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 95, 338, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 96, 339, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 97, 340, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 98, 341, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 99, 342, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 100, 343, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP EHRPD RCVD FWD PPP Packet, 360, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD FWD RAW IP Packet To IPC Msg, 361, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD RCVD VSNCP Msg, 362, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD RCVD VSNCP Cfg Req Msg, 363, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD RCVD VSNCP Cfg Ack Msg, 364, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD SEND VSNCP Cfg Ack Msg, 365, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD SEND VSNCP Cfg Req Msg, 366, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD SEND VSNCP Term Req Msg, 367, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD SEND VSNCP Term Ack Msg, 368, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD SEND NDIS Data to IOP Msg, 369, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD RCVD NON NDIS Data from EMPAF Msg, 370, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD TFT ADDRESS MATCH Msg, 371, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD SEND IP PKT to EMPAR, 372, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD DATA CONNECTION SET CMD Trace, 373, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD DATA STATE IND Trace, 374, CT, CP/Trace/HLP/eHRPD, 
    CP EHRPD SET PPP STATUS Trace, 375, CT, CP/Trace/HLP/eHRPD, 
    CP HLP CAM State Transition, 376, CT, CP/Trace/HLP, 
    CP HLP PPP Connect Req, 377, CT, CP/Trace/HLP, 
    CP HLP Network Response, 378, CT, CP/Trace/HLP, 
    CP HLP RLP Open Failed, 379, CT, CP/Trace/HLP, 
    CP Rev data xmitted at RLP, 380, CT, CP/Trace/HLP, 
    CP HLP Force 1X Connection, 381, CT, CP/Trace/HLP, 
    CP Rev data request, 382, CT, CP/Trace/HLP, 
    CP Lower NSPE fwd data to AI, 383, CT, CP/Trace/HLP, 
    CP Lower NSPE rev sent rsp, 384, CT, CP/Trace/HLP, 
    CP HLP PPP HA LLD0 Complete, 385, CT, CP/Trace/HLP, 
    CP HLP PPP HA LLD1 Complete, 386, CT, CP/Trace/HLP, 
    CP PPPHA DEC0 Complete, 387, CT, CP/Trace/HLP, 
    CP PPPHA DEC1 Complete, 388, CT, CP/Trace/HLP, 
    CP PPPHA ENC0 Complete, 389, CT, CP/Trace/HLP, 
    CP PPPHA ENC1 Complete, 390, CT, CP/Trace/HLP, 
    CP HLP RLP Inact Timeout, 391, CT, CP/Trace/HLP, 
    CP HLP PPP HA DEC0 Result, 392, CT, CP/Trace/HLP, 
    CP HLP PPP HA DEC1 Result, 393, CT, CP/Trace/HLP, 
    CP HLP Service Indication, 394, CT, CP/Trace/HLP, 
    CP Timer start, 395, CT, CP/Trace/HLP, 
    CP Timer expired, 396, CT, CP/Trace/HLP, 
    CP Timer killed, 397, CT, CP/Trace/HLP, 
    CP HLP Um Rm PPP Status, 398, CT, CP/Trace/HLP, 
    CP Send Protocol Type, 399, CT, CP/Trace/HLP, 
    CP PKT Open Uart, 400, CT, CP/Trace/HLP, 
    CP PKT Close Uart, 401, CT, CP/Trace/HLP, 
    CP HL UM FWD HDLC Rcvd Msg, 402, CT, CP/Trace/HLP, 
    CP HL RM REV HDLC Rcvd Msg, 403, CT, CP/Trace/HLP, 
    CP HL RM REV HDLC RCVD RSP MSG, 404, CT, CP/Trace/HLP, 
    CP HL RM FWD MSG, 405, CT, CP/Trace/HLP, 
    CP HL RM FWD RSP MSG, 406, CT, CP/Trace/HLP, 
    CP HL MIP State, 407, CT, CP/Trace/HLP, 
    CP HL MIP Timer, 408, CT, CP/Trace/HLP, 
    CP HL TCP Output Info, 409, CT, CP/Trace/HLP, 
    CP HL TCP Input Info 1, 410, CT, CP/Trace/HLP, 
    CP HL TCP Input Info 2, 411, CT, CP/Trace/HLP, 
    CP HL MIP Fallback SIP, 412, CT, CP/Trace/HLP, 
    CP HL MIP Preference Mode, 413, CT, CP/Trace/HLP, 
    CP HL MIP DMU Version, 414, CT, CP/Trace/HLP, 
    CP HL MIP DMU RSA Public Key Header, 415, CT, CP/Trace/HLP, 
    CP HL MIP DMU RSA Public Key OrgId and MN Auth, 416, CT, CP/Trace/HLP, 
    CP HL MIP DMU MN Authenticator Save, 417, CT, CP/Trace/HLP, 
    CP HL MIP DMU Active RSA Public Key, 418, CT, CP/Trace/HLP, 
    CP HL Set Reverse Data Path, 419, CT, CP/Trace/HLP, 
    CP HL Retry Throttling Tmr Active, 420, CT, CP/Trace/HLP, 
    CP HL DO Pilot Power Strength, 421, CT, CP/Trace/HLP, 
    CP HL Dormant Reconnect Params, 422, CT, CP/Trace/HLP, 
    CP HL Set Handoff Flag To, 423, CT, CP/Trace/HLP, 
    CP HL Set MIP Re-Register State, 424, CT, CP/Trace/HLP, 
    CP HLP Data Ready To Send Status, 425, CT, CP/Trace/HLP, 
    CP HLP Dormant Reconn Tmr Status, 426, CT, CP/Trace/HLP, 
    CP HLP PKT Recvd Signal, 427, CT, CP/Trace/HLP, 
    CP HLP PKT State Transition, 428, CT, CP/Trace/HLP, 
    CP HLP PKT Check Connect Status, 429, CT, CP/Trace/HLP, 
    CP HL Set Connection Fail Reason, 430, CT, CP/Trace/HLP, 
    CP HL Cmd Mailbox Msg, 431, CT, CP/Trace/HLP, 
    CP HLP Rev To Rlp Enc Data Save, 432, CT, CP/Trace/HLP, 
    CP HLP Rev To Rlp Enc Data Read, 433, CT, CP/Trace/HLP, 
    CP HLP Fwd Data IP-Identification, 434, CT, CP/Trace/HLP, 
    CP HLP Rev Data IP-Identification, 435, CT, CP/Trace/HLP, 
    CP HL DBM, 436, CT, CP/Trace/HLP, 
    CP HLP FAST DORMENT TRACE, 437, CT, CP/Trace/HLP, 
    CP HLP MIP REREGISTRATION TRACE, 438, CT, CP/Trace/HLP, 
    CP HL Uim Chap Auth Msg, 439, CT, CP/Trace/HLP, 
    CP HL EAP STATE TRACE ID, 440, CT, CP/Trace/HLP, 
    CP HL EAP AKA STATE TRACE ID, 441, CT, CP/Trace/HLP, 
    CP HL SET BOOL TRACE ID, 442, CT, CP/Trace/HLP, 
    CP HL SET INT TRACE ID, 443, CT, CP/Trace/HLP, 
    CP HL MIP HA AUTH MODE TRACE ID, 444, CT, CP/Trace/HLP, 
    CP HLP Timer Expired, 445, CT, CP/Trace/HLP, 
    CP HLP PPP Inactivity Timer, 450, CT, CP/Trace/HLP, 
    CP QOS Table Insert, 4720, CT, CP/Trace/QOS, 
    CP QOS Table Delete, 4721, CT, CP/Trace/QOS, 
    CP QOS Granted, 4722, CT, CP/Trace/QOS, 
    CP QOS RSVP MSG SEND, 4723, CT, CP/Trace/QOS, 
    CP QOS RSVP MSG RCV, 4724, CT, CP/Trace/QOS, 
    CP QOS RSVP ERR RCV, 4725, CT, CP/Trace/QOS, 
    CP QOS RSVP TM Expire, 4726, CT, CP/Trace/QOS, 
    CP QOS Reservation to Rlp Bind, 4727, CT, CP/Trace/QOS, 
    CP QOS RSVP OBJ RCV, 4728, CT, CP/Trace/QOS, 
    CP QOS STATE, 4729, CT, CP/Trace/QOS, 
    CP IMS MSG ID, 4736, CT, CP/Trace/IMS, 
    CP IMS EVENT SAVE, 4737, CT, CP/Trace/IMS, 
    CP IMS EVENT PROC, 4738, CT, CP/Trace/IMS, 
    CP IMS PDN STATE, 4739, CT, CP/Trace/IMS, 
    CP IMS SEND IP DATA, 4740, CT, CP/Trace/IMS, 
    CP IMS PARAM INFO, 4741, CT, CP/Trace/IMS, 
    CP IMS APPLICATION STATUS, 4742, CT, CP/Trace/IMS, 
    CP IMS RECEIVE IP DATA, 4743, CT, CP/Trace/IMS, 
    CP EHRPD NETWORK EVENT, 4744, CT, CP/Trace/EHRPD, 
    CP EHRPD PDN STATUS, 4745, CT, CP/Trace/EHRPD, 
    CP IP6 UDP Test Record Msg, 456, CT, CP/Trace/IP6, 
    CP IP6 UDP Test Connection Open Msg, 457, CT, CP/Trace/IP6, 
    CP IP6 IP6 Input Flow Msg, 458, CT, CP/Trace/IP6, 
    CP IP6 IP6 Output Flow Msg, 459, CT, CP/Trace/IP6, 
    CP IP6 UDP Input Flow Msg, 460, CT, CP/Trace/IP6, 
    CP IP6 UDP Output Flow Msg, 461, CT, CP/Trace/IP6, 
    CP IP6 TCP Input Flow Msg, 462, CT, CP/Trace/IP6, 
    CP IP6 TCP Output Flow Msg, 463, CT, CP/Trace/IP6, 
    CP IP6 ICMP6 Input Flow Msg, 464, CT, CP/Trace/IP6, 
    CP IP6 ICMP6 Output Flow Msg, 465, CT, CP/Trace/IP6, 
    CP IP6 TCP Test Record Msg, 466, CT, CP/Trace/IP6, 
    CP IP6 TCP Test Connection Open Msg, 467, CT, CP/Trace/IP6, 
    CP IP6 General Flow Msg, 468, CT, CP/Trace/IP6, 
    CP ROHC Compressor General Flow Msg, 472, CT, CP/Trace/ROHC, 
    CP ROHC DeCompressor General Flow Msg, 473, CT, CP/Trace/ROHC, 
    CP ROHC DeCompressor State Change Msg, 474, CT, CP/Trace/ROHC, 
    CP ROHC DeCompressor Status Msg, 475, CT, CP/Trace/ROHC, 
    CP ROHC Compressor Status Msg, 476, CT, CP/Trace/ROHC, 
    CP ROHC Compressor Result Msg, 477, CT, CP/Trace/ROHC, 
    CP ROHC Compressor Proc Feedback Msg, 478, CT, CP/Trace/ROHC, 
    CP ROHC Compressor Proc Feedback Opt Msg, 479, CT, CP/Trace/ROHC, 
    CP ROHC DeCompressor Feedback Msg, 480, CT, CP/Trace/ROHC, 
    CP ROHC DeCompressor Feedback Opt Msg, 481, CT, CP/Trace/ROHC, 
    CP NST State, 482, CT, CP/Trace/TST/NST, 
    CP NST General, 483, CT, CP/Trace/TST/NST, 
    CP LEC GENERIC HEX, 484, CT, CP/Trace/LEC, 
    CP FSM RLP MGR, 488, CT, CP/Trace/PS/FSM, 
    CP FSM RLP CTL0, 489, CT, CP/Trace/PS/FSM, 
    CP FSM RLP CTL1, 490, CT, CP/Trace/PS/FSM, 
    CP FSM RLP IFC0, 491, CT, CP/Trace/PS/FSM, 
    CP FSM RLP IFC1, 492, CT, CP/Trace/PS/FSM, 
    CP FSM PPP MNRP, 493, CT, CP/Trace/PS/FSM, 
    CP FSM SMS RL, 494, CT, CP/Trace/PS/FSM, 
    CP FSM SMS TL, 495, CT, CP/Trace/PS/FSM, 
    CP FSM OTA AUTH, 496, CT, CP/Trace/PS/FSM, 
    CP FSM OTA PARS, 497, CT, CP/Trace/PS/FSM, 
    CP FSM OTA SEC, 498, CT, CP/Trace/PS/FSM, 
    CP FSM SCC CPC, 499, CT, CP/Trace/PS/FSM, 
    CP FSM SCC DBC, 500, CT, CP/Trace/PS/FSM, 
    CP FSM SCC VSC, 501, CT, CP/Trace/PS/FSM, 
    CP FSM SCC DSC, 502, CT, CP/Trace/PS/FSM, 
    CP FSM SCC PSC, 503, CT, CP/Trace/PS/FSM, 
    CP FSM SCC LSC, 504, CT, CP/Trace/PS/FSM, 
    CP FSM CSS 1X CPSM, 505, CT, CP/Trace/PS/FSM, 
    CP FSM CSS DO CPSM, 506, CT, CP/Trace/PS/FSM, 
    CP PE ENG_ACCESS_PROC_TR 1 1, 512, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 2, 513, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 3, 514, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 4, 515, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 5, 516, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 6, 517, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 7, 518, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 8, 519, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 9, 520, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 10, 521, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 11, 522, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 12, 523, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 13, 524, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 14, 525, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 15, 526, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ERROR_TR 1 16, 527, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 17, 528, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 18, 529, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 19, 530, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 20, 531, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 21, 532, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 22, 533, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 23, 534, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 24, 535, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 25, 536, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 26, 537, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 27, 538, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 28, 539, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 29, 540, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 30, 541, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 31, 542, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 32, 543, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 33, 544, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 34, 545, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 35, 546, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 36, 547, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 37, 548, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 38, 549, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 39, 550, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 41, 551, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 42, 552, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 43, 553, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 44, 554, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 45, 555, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 46, 556, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 47, 557, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 48, 558, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ACCESS_PROC_TR 1 49, 559, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_PROC_TR, 
    CP PE ENG_ERROR_TR 2 1, 560, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 2 2, 561, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 2 3, 562, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_API_TR 3 1, 563, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_CP_TR 3 2, 564, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 3, 565, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 4, 566, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 5, 567, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_API_TR 3 6, 568, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 7, 569, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_CP_TR 3 8, 570, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 9, 571, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 10, 572, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 11, 573, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 12, 574, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 13, 575, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 14, 576, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 15, 577, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 16, 578, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 17, 579, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 18, 580, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 19, 581, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 20, 582, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_ERROR_TR 3 21, 583, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_API_TR 3 22, 584, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 23, 585, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 24, 586, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 25, 587, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 26, 588, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 27, 589, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 28, 590, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 29, 591, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_CP_TR 3 30, 592, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 31, 593, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_API_TR 3 32, 594, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 33, 595, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_CP_TR 3 34, 596, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 35, 597, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 36, 598, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 37, 599, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 38, 600, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_API_TR 3 39, 601, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 40, 602, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 41, 603, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 42, 604, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 43, 605, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 44, 606, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_CP_TR 3 45, 607, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 3 46, 608, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_API_TR 3 47, 609, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 48, 610, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 49, 611, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 50, 612, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 51, 613, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 52, 614, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 53, 615, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 54, 616, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 55, 617, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 56, 618, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 57, 619, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 58, 620, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 59, 621, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 60, 622, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 61, 623, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 62, 624, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 63, 625, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 64, 626, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 65, 627, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 66, 628, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 67, 629, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 68, 630, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 69, 631, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_ERROR_TR 3 70, 632, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 3 71, 633, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 3 74, 634, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CP_TR 3 75, 635, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_ERROR_TR 3 76, 636, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_API_TR 3 77, 637, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 78, 638, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 79, 639, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 80, 640, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 81, 641, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_API_TR 3 82, 642, CT, CP/Trace/Call Proc/Engine/ENG_API_TR, 
    CP PE ENG_CP_TR 3 83, 643, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_ERROR_TR 4 1, 644, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 4 2, 645, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CP_TR 4 3, 646, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 4 4, 647, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 4 5, 648, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 5 1, 649, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 5 2, 650, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_ERROR_TR 5 3, 651, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CP_TR 5 9, 652, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_ERROR_TR 5 10, 653, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_REG_TR 7 1, 654, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 2, 655, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 3, 656, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 4, 657, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 5, 658, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 6, 659, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 7, 660, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 8, 661, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 9, 662, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 10, 663, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 11, 664, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 12, 665, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 13, 666, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 14, 667, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 15, 668, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 16, 669, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 17, 670, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 18, 671, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 19, 672, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 20, 673, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 21, 674, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 22, 675, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 23, 676, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 24, 677, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 25, 678, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 26, 679, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 27, 680, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 28, 681, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 29, 682, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 30, 683, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 31, 684, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 32, 685, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 33, 686, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 34, 687, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 35, 688, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 36, 689, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 37, 690, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_ERROR_TR 7 38, 691, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_REG_TR 7 39, 692, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_ERROR_TR 7 40, 693, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_REG_TR 7 41, 694, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 42, 695, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 43, 696, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 44, 697, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 45, 698, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 46, 699, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 47, 700, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 48, 701, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 49, 702, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 50, 703, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 51, 704, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 52, 705, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 53, 706, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 55, 707, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 56, 708, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_REG_TR 7 57, 709, CT, CP/Trace/Call Proc/Engine/ENG_REG_TR, 
    CP PE ENG_CP_TR 8 1, 710, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, lite, 
    CP PE ENG_INIT_TR 11 1, 711, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_ERROR_TR 11 2, 712, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_INIT_TR 11 4, 713, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 5, 714, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 6, 715, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 7, 716, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 12, 717, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 13, 718, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 14, 719, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 15, 720, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 16, 721, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 17, 722, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_ERROR_TR 11 18, 723, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_INIT_TR 11 19, 724, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 20, 725, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 21, 726, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 22, 727, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 23, 728, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 24, 729, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 25, 730, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_ERROR_TR 11 26, 731, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_INIT_TR 11 27, 732, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_ERROR_TR 11 28, 733, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_INIT_TR 11 29, 734, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 30, 735, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 31, 736, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 32, 737, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 33, 738, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 34, 739, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 35, 740, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 36, 741, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 37, 742, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 38, 743, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, lite, 
    CP PE ENG_INIT_TR 11 39, 744, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, lite, 
    CP PE ENG_INIT_TR 11 40, 745, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 41, 746, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 42, 747, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 43, 748, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 44, 749, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 45, 750, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_ERROR_TR 11 46, 751, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_INIT_TR 11 47, 752, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 48, 753, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 54, 754, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 11 55, 755, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_ACCESS_TR 12 1, 756, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 12 2, 757, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_CP_TR 12 3, 758, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 12 4, 759, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 12 5, 760, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 12 6, 761, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 12 7, 762, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 12 8, 763, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_HANDOFF_TR 12 25, 764, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 12 26, 765, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_CP_TR 12 51, 766, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_LAYER2_TR 13 1, 767, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 2, 768, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 3, 769, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 4, 770, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 5, 771, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 6, 772, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 7, 773, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 8, 774, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 9, 775, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 10, 776, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, lite, 
    CP PE ENG_LAYER2_TR 13 11, 777, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, lite, 
    CP PE ENG_LAYER2_TR 13 12, 778, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 14, 779, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, lite, 
    CP PE ENG_LAYER2_TR 13 15, 780, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 16, 781, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 17, 782, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 18, 783, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 19, 784, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 20, 785, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 21, 786, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 22, 787, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 23, 788, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 24, 789, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 25, 790, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 26, 791, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 27, 792, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 28, 793, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 29, 794, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 30, 795, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 31, 796, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 32, 797, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 33, 798, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 36, 799, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 37, 800, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 38, 801, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 39, 802, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 40, 803, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 41, 804, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 42, 805, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 43, 806, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 44, 807, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_ERROR_TR 13 45, 808, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 13 46, 809, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 13 47, 810, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_LAYER2_TR 13 48, 811, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 49, 812, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 50, 813, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 51, 814, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 52, 815, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 53, 816, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 54, 817, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 55, 818, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 56, 819, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 57, 820, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 58, 821, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 59, 822, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 60, 823, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 61, 824, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 62, 825, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 64, 826, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 65, 827, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 66, 828, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 67, 829, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 68, 830, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 69, 831, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 70, 832, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 71, 833, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_LAYER2_TR 13 72, 834, CT, CP/Trace/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ENG_IDLE_TR 14 1, 835, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 2, 836, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 3, 837, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 4, 838, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 5, 839, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 6, 840, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 7, 841, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 8, 842, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 9, 843, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 10, 844, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 11, 845, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 12, 846, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 13, 847, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 14, 848, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 15, 849, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 16, 850, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 17, 851, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 18, 852, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 19, 853, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 20, 854, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 21, 855, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 22, 856, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 23, 857, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 24, 858, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 25, 859, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 26, 860, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 27, 861, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 28, 862, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 29, 863, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_ERROR_TR 14 30, 864, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_IDLE_TR 14 31, 865, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 32, 866, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 33, 867, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 34, 868, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 35, 869, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 36, 870, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 37, 871, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 38, 872, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 39, 873, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 40, 874, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 41, 875, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 42, 876, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_ERROR_TR 14 43, 877, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_IDLE_TR 14 44, 878, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 45, 879, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 46, 880, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 47, 881, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 14 48, 882, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_ERROR_TR 14 99, 883, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CP_TR 15 1, 884, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 15 2, 885, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 15 3, 886, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 15 4, 887, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 15 5, 888, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 15 6, 889, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 15 7, 890, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 15 8, 891, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 15 9, 892, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 15 10, 893, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 15 11, 894, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 15 12, 895, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 15 15, 896, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_ERROR_TR 15 16, 897, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 15 17, 898, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 15 18, 899, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 16 1, 900, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CP_TR 16 2, 901, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 16 3, 902, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 16 4, 903, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 16 5, 904, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 16 6, 905, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 16 7, 906, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 16 8, 907, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 16 9, 908, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_PAGE_TR 17 1, 909, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 2, 910, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 3, 911, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 4, 912, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 5, 913, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 6, 914, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 7, 915, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 8, 916, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 10, 917, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 11, 918, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 13, 919, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 14, 920, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 15, 921, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 16, 922, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 17, 923, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 18, 924, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 19, 925, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 20, 926, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 21, 927, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 22, 928, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 23, 929, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 24, 930, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 25, 931, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 26, 932, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 27, 933, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 28, 934, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 29, 935, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_CP_TR 17 30, 936, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_PAGE_TR 17 31, 937, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 32, 938, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 33, 939, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 17 34, 940, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_CP_TR 17 36, 941, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_PAGE_TR 18 1, 942, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 18 2, 943, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 18 3, 944, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 18 4, 945, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 18 5, 946, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 18 6, 947, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 18 7, 948, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_CP_TR 20 1, 949, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 2, 950, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 3, 951, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 4, 952, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 5, 953, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 6, 954, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 7, 955, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 8, 956, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 9, 957, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 10, 958, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 11, 959, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 12, 960, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 13, 961, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 14, 962, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 15, 963, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 16, 964, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 17, 965, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_PAGE_TR 20 18, 966, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 20 19, 967, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 20 20, 968, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_CP_TR 20 21, 969, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_PAGE_TR 20 22, 970, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 20 23, 971, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 20 24, 972, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 20 25, 973, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 20 26, 974, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 20 27, 975, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 20 28, 976, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_CP_TR 20 29, 977, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 30, 978, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 31, 979, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 32, 980, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 33, 981, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 34, 982, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 35, 983, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 36, 984, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 37, 985, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 38, 986, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 39, 987, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 40, 988, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 41, 989, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 42, 990, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 43, 991, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 44, 992, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 45, 993, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 46, 994, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 47, 995, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 48, 996, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 49, 997, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 50, 998, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_PAGE_TR 20 51, 999, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 20 52, 1000, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 20 53, 1001, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_CP_TR 20 54, 1002, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 55, 1003, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 56, 1004, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 57, 1005, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 58, 1006, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 59, 1007, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_PAGE_TR 20 60, 1008, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_PAGE_TR 20 61, 1009, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_CP_TR 20 62, 1010, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 20 63, 1011, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 1, 1012, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 2, 1013, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 3, 1014, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 4, 1015, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 10, 1016, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 11, 1017, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 12, 1018, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 13, 1019, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 14, 1020, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 15, 1021, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 16, 1022, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 17, 1023, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 18, 1024, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 19, 1025, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 20, 1026, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 21, 1027, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 22, 1028, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 23, 1029, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 24, 1030, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 25, 1031, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 26, 1032, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 27, 1033, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_PAGE_TR 21 28, 1034, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_CP_TR 21 29, 1035, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_PAGE_TR 21 30, 1036, CT, CP/Trace/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG_CP_TR 21 31, 1037, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 32, 1038, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 33, 1039, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 34, 1040, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 35, 1041, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 36, 1042, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 37, 1043, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 38, 1044, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 39, 1045, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 40, 1046, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 41, 1047, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 42, 1048, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 43, 1049, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 44, 1050, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 45, 1051, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 46, 1052, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 47, 1053, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 48, 1054, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 51, 1055, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 52, 1056, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 21 53, 1057, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_ACCESS_TR 22 1, 1058, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 2, 1059, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 3, 1060, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 4, 1061, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 5, 1062, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 6, 1063, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 7, 1064, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 8, 1065, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 9, 1066, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 10, 1067, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 11, 1068, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ERROR_TR 22 12, 1069, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ACCESS_TR 22 13, 1070, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 14, 1071, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 16, 1072, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 18, 1073, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 19, 1074, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 20, 1075, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 21, 1076, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 22, 1077, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 23, 1078, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 24, 1079, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 22 25, 1080, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_IDLE_TR 22 26, 1081, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_IDLE_TR 22 27, 1082, CT, CP/Trace/Call Proc/Engine/ENG_IDLE_TR, 
    CP PE ENG_ERROR_TR 22 99, 1083, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CP_TR 23 1, 1084, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 23 2, 1085, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 23 3, 1086, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 23 4, 1087, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 23 5, 1088, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 23 6, 1089, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 23 98, 1090, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_ERROR_TR 25 1, 1091, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ACCESS_TR 25 2, 1092, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 25 3, 1093, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 25 4, 1094, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 25 5, 1095, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 25 6, 1096, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 25 7, 1097, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 25 8, 1098, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 25 9, 1099, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 25 11, 1100, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 25 12, 1101, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 25 29, 1102, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 25 30, 1103, CT, CP/Trace/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_CP_TR 27 2, 1104, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 3, 1105, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 4, 1106, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 5, 1107, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 6, 1108, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 7, 1109, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 8, 1110, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 10, 1111, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 11, 1112, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 12, 1113, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 13, 1114, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 14, 1115, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 15, 1116, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 16, 1117, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 17, 1118, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 18, 1119, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 19, 1120, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 20, 1121, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 21, 1122, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 22, 1123, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 23, 1124, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 24, 1125, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 25, 1126, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 26, 1127, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 27 34, 1128, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 1, 1129, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 2, 1130, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 17, 1131, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 19, 1132, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 23, 1133, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 26, 1134, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 31, 1135, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 32, 1136, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 33, 1137, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 34, 1138, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 35, 1139, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 36, 1140, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 37, 1141, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 38, 1142, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_ERROR_TR 28 39, 1143, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 28 40, 1144, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CP_TR 28 41, 1145, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 42, 1146, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 43, 1147, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 44, 1148, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 45, 1149, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 46, 1150, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 47, 1151, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 48, 1152, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 49, 1153, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 50, 1154, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 52, 1155, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 28 53, 1156, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_RTC_TR 29 1, 1157, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 2, 1158, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 3, 1159, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 4, 1160, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_ERROR_TR 29 5, 1161, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_RTC_TR 29 6, 1162, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 7, 1163, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 8, 1164, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 9, 1165, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 10, 1166, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 11, 1167, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 12, 1168, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 13, 1169, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 14, 1170, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 15, 1171, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 16, 1172, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_ERROR_TR 29 17, 1173, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_RTC_TR 29 18, 1174, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_ERROR_TR 29 19, 1175, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 29 20, 1176, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 29 21, 1177, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_RTC_TR 29 22, 1178, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 23, 1179, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_ERROR_TR 29 24, 1180, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 29 25, 1181, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_RTC_TR 29 26, 1182, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 27, 1183, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 29, 1184, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 30, 1185, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 31, 1186, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 32, 1187, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 33, 1188, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 34, 1189, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 35, 1190, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_ERROR_TR 29 36, 1191, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_RTC_TR 29 37, 1192, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_RTC_TR 29 38, 1193, CT, CP/Trace/Call Proc/Engine/ENG_RTC_TR, 
    CP PE ENG_ERROR_TR 29 39, 1194, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CP_TR 30 1, 1195, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 2, 1196, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 3, 1197, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 4, 1198, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 5, 1199, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 6, 1200, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 7, 1201, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 8, 1202, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 9, 1203, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 11, 1204, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 12, 1205, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 13, 1206, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 14, 1207, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 15, 1208, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 16, 1209, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 17, 1210, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 18, 1211, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 19, 1212, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 20, 1213, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 21, 1214, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 22, 1215, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 23, 1216, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 24, 1217, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 25, 1218, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 26, 1219, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 27, 1220, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 28, 1221, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 29, 1222, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 30, 1223, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 31, 1224, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 32, 1225, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 33, 1226, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 34, 1227, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 35, 1228, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 36, 1229, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 37, 1230, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 38, 1231, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 39, 1232, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 40, 1233, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 41, 1234, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 42, 1235, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 43, 1236, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 44, 1237, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 45, 1238, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 46, 1239, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 30 47, 1240, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 1, 1241, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 2, 1242, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 3, 1243, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 4, 1244, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 5, 1245, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 6, 1246, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 7, 1247, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 8, 1248, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 9, 1249, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 10, 1250, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 11, 1251, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 12, 1252, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 13, 1253, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 14, 1254, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 16, 1255, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 17, 1256, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 31 18, 1257, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 32 1, 1258, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 32 2, 1259, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 32 3, 1260, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 32 4, 1261, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 32 5, 1262, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 32 6, 1263, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 1, 1264, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 2, 1265, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 3, 1266, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 4, 1267, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 5, 1268, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 6, 1269, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 7, 1270, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 8, 1271, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 9, 1272, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 10, 1273, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 11, 1274, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 12, 1275, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 13, 1276, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 14, 1277, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 15, 1278, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 16, 1279, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 17, 1280, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 18, 1281, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 19, 1282, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 20, 1283, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 21, 1284, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 22, 1285, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 23, 1286, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 33 24, 1287, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 1, 1288, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 2, 1289, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 3, 1290, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 5, 1291, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 6, 1292, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 12, 1293, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 13, 1294, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 14, 1295, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 15, 1296, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 16, 1297, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 17, 1298, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 18, 1299, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 19, 1300, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 20, 1301, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 21, 1302, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 22, 1303, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 23, 1304, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 24, 1305, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 25, 1306, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 26, 1307, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 27, 1308, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 28, 1309, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 34 29, 1310, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_HANDOFF_TR 35 1, 1311, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 2, 1312, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 3, 1313, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 4, 1314, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 6, 1315, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 8, 1316, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 10, 1317, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 11, 1318, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 12, 1319, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 13, 1320, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 14, 1321, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 15, 1322, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 16, 1323, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 17, 1324, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 18, 1325, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 19, 1326, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 20, 1327, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 21, 1328, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 22, 1329, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 23, 1330, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 24, 1331, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 26, 1332, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 27, 1333, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 28, 1334, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 29, 1335, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 30, 1336, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 31, 1337, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 32, 1338, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_ERROR_TR 35 33, 1339, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_HANDOFF_TR 35 34, 1340, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 35, 1341, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_ERROR_TR 35 36, 1342, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_HANDOFF_TR 35 37, 1343, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 38, 1344, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_ERROR_TR 35 39, 1345, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_HANDOFF_TR 35 40, 1346, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 41, 1347, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_ERROR_TR 35 42, 1348, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_HANDOFF_TR 35 43, 1349, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_ERROR_TR 35 44, 1350, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 35 45, 1351, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_HANDOFF_TR 35 46, 1352, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 47, 1353, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 48, 1354, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_ERROR_TR 35 49, 1355, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_HANDOFF_TR 35 50, 1356, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 51, 1357, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_ERROR_TR 35 52, 1358, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_HANDOFF_TR 35 53, 1359, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 54, 1360, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 55, 1361, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 56, 1362, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 57, 1363, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 35 58, 1364, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_ERROR_TR 36 1, 1365, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 36 2, 1366, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 36 3, 1367, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 36 4, 1368, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CP_TR 36 5, 1369, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_ERROR_TR 36 6, 1370, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 36 7, 1371, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 36 8, 1372, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CP_TR 36 9, 1373, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 36 10, 1374, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_INIT_TR 37 31, 1375, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 37 32, 1376, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 37 33, 1377, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_INIT_TR 37 34, 1378, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_CP_TR 37 36, 1379, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 37 37, 1380, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_ERROR_TR 37 38, 1381, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CP_TR 37 39, 1382, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_ERROR_TR 37 40, 1383, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CP_TR 37 41, 1384, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 37 42, 1385, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_INIT_TR 37 43, 1386, CT, CP/Trace/Call Proc/Engine/ENG_INIT_TR, 
    CP PE ENG_CSS_TR 37 55, 1387, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_HANDOFF_TR 38 1, 1388, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 38 2, 1389, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_ERROR_TR 38 3, 1390, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_HANDOFF_TR 38 4, 1391, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 38 5, 1392, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 38 6, 1393, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 38 7, 1394, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 38 8, 1395, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 38 10, 1396, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 38 11, 1397, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 38 12, 1398, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 38 13, 1399, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 38 14, 1400, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 38 15, 1401, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 38 16, 1402, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_ERROR_TR 38 20, 1403, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_HANDOFF_TR 38 25, 1404, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 38 26, 1405, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 1, 1406, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 2, 1407, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 3, 1408, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 4, 1409, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 5, 1410, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 6, 1411, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 7, 1412, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 8, 1413, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 13, 1414, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 14, 1415, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 15, 1416, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 16, 1417, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 17, 1418, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 18, 1419, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 19, 1420, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 20, 1421, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 21, 1422, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 22, 1423, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 23, 1424, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 24, 1425, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 25, 1426, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_CP_TR 39 30, 1427, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_HANDOFF_TR 39 31, 1428, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 32, 1429, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 36, 1430, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 37, 1431, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 38, 1432, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 39, 1433, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 40, 1434, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 41, 1435, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 42, 1436, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 55, 1437, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 56, 1438, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 57, 1439, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 58, 1440, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 59, 1441, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 60, 1442, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 61, 1443, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 62, 1444, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 63, 1445, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 64, 1446, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 65, 1447, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 66, 1448, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 67, 1449, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 68, 1450, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 69, 1451, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 70, 1452, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 71, 1453, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 72, 1454, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 73, 1455, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 74, 1456, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 75, 1457, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 76, 1458, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 77, 1459, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 78, 1460, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 79, 1461, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 80, 1462, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 81, 1463, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 82, 1464, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 83, 1465, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 84, 1466, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_CP_TR 39 85, 1467, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_HANDOFF_TR 39 86, 1468, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 87, 1469, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 88, 1470, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 89, 1471, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 90, 1472, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 39 91, 1473, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 40 1, 1474, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 40 2, 1475, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 40 3, 1476, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 40 4, 1477, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 40 5, 1478, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 40 6, 1479, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 40 7, 1480, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 40 8, 1481, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 40 9, 1482, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 40 10, 1483, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 40 11, 1484, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 40 12, 1485, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 40 13, 1486, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 40 14, 1487, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_CP_TR 40 16, 1488, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 40 17, 1489, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 40 18, 1490, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 40 19, 1491, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 40 20, 1492, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 40 21, 1493, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_HANDOFF_TR 40 22, 1494, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_CP_TR 41 1, 1495, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 2, 1496, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 3, 1497, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 4, 1498, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 5, 1499, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 6, 1500, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 7, 1501, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 8, 1502, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 9, 1503, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 10, 1504, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 11, 1505, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 12, 1506, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 13, 1507, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 14, 1508, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 15, 1509, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 16, 1510, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 17, 1511, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 18, 1512, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 19, 1513, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 20, 1514, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 21, 1515, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 22, 1516, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 23, 1517, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 24, 1518, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 25, 1519, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 26, 1520, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 27, 1521, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 28, 1522, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 29, 1523, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 30, 1524, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 31, 1525, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 32, 1526, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 33, 1527, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 35, 1528, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 36, 1529, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 41 37, 1530, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 42 1, 1531, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 42 2, 1532, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 42 3, 1533, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 42 4, 1534, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 42 5, 1535, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 42 6, 1536, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 42 7, 1537, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_ERROR_TR 47 8, 1538, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 47 11, 1539, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 47 12, 1540, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 48 5, 1541, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 48 6, 1542, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 48 7, 1543, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 48 8, 1544, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 49 10, 1545, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 49 11, 1546, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 49 16, 1547, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 49 31, 1548, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 49 51, 1549, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 49 57, 1550, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 49 96, 1551, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 49 113, 1552, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 49 126, 1553, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 49 137, 1554, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 49 151, 1555, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 49 189, 1556, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 52 7, 1557, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_HANDOFF_TR 53 7, 1558, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 53 8, 1559, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_HANDOFF_TR 53 9, 1560, CT, CP/Trace/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE ENG_CSS_TR 57 1, 1561, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 2, 1562, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_ERROR_TR 57 3, 1563, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 57 4, 1564, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CSS_TR 57 5, 1565, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 6, 1566, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 7, 1567, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 8, 1568, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 9, 1569, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 10, 1570, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 12, 1571, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 13, 1572, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 14, 1573, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_ERROR_TR 57 15, 1574, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CSS_TR 57 16, 1575, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 17, 1576, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 18, 1577, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 19, 1578, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 20, 1579, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 21, 1580, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 22, 1581, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CP_TR 57 23, 1582, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 57 24, 1583, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 57 25, 1584, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 57 26, 1585, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 57 27, 1586, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 57 28, 1587, CT, CP/Trace/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_ERROR_TR 57 29, 1588, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 57 30, 1589, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CSS_TR 57 31, 1590, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 32, 1591, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 33, 1592, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 34, 1593, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 35, 1594, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_ERROR_TR 57 36, 1595, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CSS_TR 57 37, 1596, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 38, 1597, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 39, 1598, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 40, 1599, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 41, 1600, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 42, 1601, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_ERROR_TR 57 43, 1602, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CSS_TR 57 44, 1603, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 45, 1604, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 46, 1605, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 47, 1606, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 48, 1607, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 49, 1608, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 50, 1609, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 51, 1610, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_ERROR_TR 57 52, 1611, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CSS_TR 57 53, 1612, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_ERROR_TR 57 54, 1613, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CSS_TR 57 56, 1614, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 57, 1615, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 58, 1616, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 59, 1617, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 60, 1618, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 61, 1619, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 62, 1620, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 63, 1621, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 64, 1622, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 66, 1623, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 67, 1624, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_ERROR_TR 57 68, 1625, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_ERROR_TR 57 69, 1626, CT, CP/Trace/Call Proc/Engine/ENG_ERROR_TR, 
    CP PE ENG_CSS_TR 57 70, 1627, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 71, 1628, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 72, 1629, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP PE ENG_CSS_TR 57 73, 1630, CT, CP/Trace/Call Proc/Engine/ENG_CSS_TR, 
    CP RLP CAT_API 1 1, 1648, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP CAT_API 1 2, 1649, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP CAT_API 1 3, 1650, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP CAT_API 1 4, 1651, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP CAT_API 1 5, 1652, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP CAT_API 1 6, 1653, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP CAT_API 1 7, 1654, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP CAT_API 1 8, 1655, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP CAT_API 1 9, 1656, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP CAT_API 1 10, 1657, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP CAT_API 1 11, 1658, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP CAT_API 1 12, 1659, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP CAT_API 1 13, 1660, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP CAT_API 1 14, 1661, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP CAT_API 1 15, 1662, CT, CP/Trace/PS/RLP/Engine/CAT_API, 
    CP RLP ENG_NO_CATEGORY 2 1, 1663, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 2, 1664, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 3, 1665, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 4, 1666, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 5, 1667, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 6, 1668, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 7, 1669, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 8, 1670, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 9, 1671, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 10, 1672, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 11, 1673, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 12, 1674, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 13, 1675, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 14, 1676, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 15, 1677, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 16, 1678, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 17, 1679, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 18, 1680, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 19, 1681, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 20, 1682, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 21, 1683, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 22, 1684, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 23, 1685, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 24, 1686, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 25, 1687, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 26, 1688, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 27, 1689, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 28, 1690, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 31, 1691, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 32, 1692, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 33, 1693, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 34, 1694, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 35, 1695, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 36, 1696, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 37, 1697, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 38, 1698, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 39, 1699, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 40, 1700, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 41, 1701, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 42, 1702, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 43, 1703, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 44, 1704, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 45, 1705, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 46, 1706, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 47, 1707, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 48, 1708, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 49, 1709, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 50, 1710, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 51, 1711, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 52, 1712, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 53, 1713, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 54, 1714, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 55, 1715, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 56, 1716, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 57, 1717, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 58, 1718, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 59, 1719, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 60, 1720, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 61, 1721, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 62, 1722, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 63, 1723, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 64, 1724, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 65, 1725, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 66, 1726, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 67, 1727, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 68, 1728, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 69, 1729, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 70, 1730, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 71, 1731, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 72, 1732, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 73, 1733, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 74, 1734, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 75, 1735, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 76, 1736, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 77, 1737, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 78, 1738, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 79, 1739, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 80, 1740, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 81, 1741, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 82, 1742, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 83, 1743, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 84, 1744, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 2 85, 1745, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 1, 1746, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 2, 1747, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 3, 1748, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 4, 1749, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 5, 1750, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 6, 1751, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 7, 1752, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 8, 1753, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 9, 1754, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 10, 1755, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 11, 1756, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 12, 1757, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 13, 1758, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 14, 1759, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 15, 1760, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 16, 1761, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 17, 1762, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 18, 1763, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 19, 1764, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 20, 1765, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 21, 1766, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 22, 1767, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 23, 1768, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 24, 1769, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 25, 1770, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 26, 1771, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 27, 1772, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 28, 1773, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 29, 1774, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 30, 1775, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 31, 1776, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 32, 1777, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 33, 1778, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 34, 1779, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 35, 1780, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 36, 1781, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 37, 1782, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 38, 1783, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 39, 1784, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 40, 1785, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 41, 1786, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 42, 1787, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 43, 1788, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 44, 1789, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 45, 1790, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 3 46, 1791, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 1, 1792, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 2, 1793, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 3, 1794, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 4, 1795, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 5, 1796, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 6, 1797, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 7, 1798, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 8, 1799, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 9, 1800, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 10, 1801, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 11, 1802, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 12, 1803, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 13, 1804, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 14, 1805, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 15, 1806, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 16, 1807, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 17, 1808, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 18, 1809, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 19, 1810, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 20, 1811, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 21, 1812, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 22, 1813, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 23, 1814, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 24, 1815, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 25, 1816, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 26, 1817, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 27, 1818, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 28, 1819, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 29, 1820, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 4 30, 1821, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 5 1, 1822, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 5 2, 1823, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 5 3, 1824, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 6 1, 1825, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 6 2, 1826, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 6 3, 1827, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 6 4, 1828, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 6 5, 1829, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 6 6, 1830, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 6 7, 1831, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 6 8, 1832, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 6 9, 1833, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 6 10, 1834, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 6 11, 1835, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 6 12, 1836, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 6 13, 1837, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 7 1, 1838, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 7 2, 1839, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 7 3, 1840, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 9 1, 1841, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 9 2, 1842, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 9 3, 1843, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 9 4, 1844, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 9 5, 1845, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 10 1, 1846, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 11 1, 1847, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 11 2, 1848, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 11 3, 1849, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 11 4, 1850, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 11 5, 1851, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP RLP ENG_NO_CATEGORY 11 6, 1852, CT, CP/Trace/PS/RLP/Engine/ENG_NO_CATEGORY, 
    CP PPP CAT_PACKET 2 1, 1872, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 2 2, 1873, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 2 3, 1874, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 2 4, 1875, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 2 5, 1876, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PHASE 2 6, 1877, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PACKET 2 7, 1878, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 2 8, 1879, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 2 9, 1880, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 2 10, 1881, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 2 11, 1882, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 2 12, 1883, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 2 13, 1884, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_ERROR 2 14, 1885, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_PACKET 2 15, 1886, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 2 16, 1887, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 2 17, 1888, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 2 18, 1889, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_GENERAL 2 100, 1890, CT, CP/Trace/PS/PPP/Engine/CAT_GENERAL, 
    CP PPP CAT_GENERAL 2 101, 1891, CT, CP/Trace/PS/PPP/Engine/CAT_GENERAL, 
    CP PPP CAT_ERROR 3 1, 1892, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_PHASE 3 2, 1893, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 3 3, 1894, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 3 4, 1895, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 3 5, 1896, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 3 6, 1897, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 3 7, 1898, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PACKET 3 8, 1899, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PHASE 3 9, 1900, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 3 10, 1901, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 3 11, 1902, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_EVENT 3 12, 1903, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 3 13, 1904, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 3 14, 1905, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 3 15, 1906, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 3 16, 1907, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 3 17, 1908, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 3 18, 1909, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 3 19, 1910, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 3 20, 1911, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_PHASE 3 21, 1912, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 3 22, 1913, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 3 23, 1914, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_EVENT 3 24, 1915, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 3 25, 1916, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 3 26, 1917, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 3 27, 1918, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 3 28, 1919, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 3 29, 1920, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_PHASE 3 30, 1921, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 3 31, 1922, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 3 32, 1923, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PACKET 3 33, 1924, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 3 34, 1925, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 1, 1926, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 2, 1927, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 3, 1928, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 4, 1929, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 5, 1930, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 6, 1931, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 7, 1932, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 8, 1933, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 9, 1934, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_ERROR 4 10, 1935, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_ERROR 4 11, 1936, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_PACKET 4 12, 1937, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 13, 1938, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 14, 1939, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 15, 1940, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 16, 1941, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 17, 1942, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 18, 1943, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 19, 1944, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 20, 1945, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 21, 1946, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 22, 1947, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 23, 1948, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 24, 1949, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 25, 1950, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 26, 1951, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 27, 1952, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 28, 1953, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 29, 1954, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 30, 1955, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 4 31, 1956, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_GENERAL 5 1, 1957, CT, CP/Trace/PS/PPP/Engine/CAT_GENERAL, 
    CP PPP CAT_ERROR 5 2, 1958, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_GENERAL 5 3, 1959, CT, CP/Trace/PS/PPP/Engine/CAT_GENERAL, 
    CP PPP CAT_GENERAL 5 4, 1960, CT, CP/Trace/PS/PPP/Engine/CAT_GENERAL, 
    CP PPP CAT_FSM 5 5, 1961, CT, CP/Trace/PS/PPP/Engine/CAT_FSM, lite, 
    CP PPP CAT_FSM 5 6, 1962, CT, CP/Trace/PS/PPP/Engine/CAT_FSM, lite, 
    CP PPP CAT_GENERAL 5 7, 1963, CT, CP/Trace/PS/PPP/Engine/CAT_GENERAL, 
    CP PPP CAT_GENERAL 5 8, 1964, CT, CP/Trace/PS/PPP/Engine/CAT_GENERAL, 
    CP PPP CAT_ERROR 6 1, 1965, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_ERROR 6 2, 1966, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_EVENT 6 3, 1967, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 6 4, 1968, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 6 5, 1969, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 6 6, 1970, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 6 7, 1971, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 6 8, 1972, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_API 7 1, 1973, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_ERROR 7 2, 1974, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_ERROR 7 3, 1975, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_API 7 4, 1976, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 7 5, 1977, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 7 6, 1978, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 7 7, 1979, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 7 8, 1980, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 7 9, 1981, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 7 10, 1982, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 7 11, 1983, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 7 12, 1984, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 7 13, 1985, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_EVENT 8 1, 1986, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 2, 1987, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 3, 1988, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 4, 1989, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 5, 1990, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 6, 1991, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 7, 1992, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 8, 1993, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 9, 1994, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 10, 1995, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 11, 1996, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 12, 1997, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 13, 1998, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 14, 1999, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 15, 2000, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 16, 2001, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 17, 2002, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 18, 2003, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_EVENT 8 19, 2004, CT, CP/Trace/PS/PPP/Engine/CAT_EVENT, 
    CP PPP CAT_ERROR 9 1, 2005, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_PACKET 9 2, 2006, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_ERROR 9 3, 2007, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_GENERAL 10 1, 2008, CT, CP/Trace/PS/PPP/Engine/CAT_GENERAL, 
    CP PPP CAT_ERROR 10 2, 2009, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_GENERAL 10 3, 2010, CT, CP/Trace/PS/PPP/Engine/CAT_GENERAL, 
    CP PPP CAT_PACKET 11 1, 2011, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 11 2, 2012, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 11 3, 2013, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 11 4, 2014, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 11 5, 2015, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_ERROR 11 6, 2016, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_PACKET 11 7, 2017, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_ERROR 11 8, 2018, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_ERROR 11 9, 2019, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_ERROR 11 10, 2020, CT, CP/Trace/PS/PPP/Engine/CAT_ERROR, 
    CP PPP CAT_PHASE 12 1, 2021, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 12 2, 2022, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 12 3, 2023, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 12 4, 2024, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PACKET 12 5, 2025, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 12 6, 2026, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 12 7, 2027, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 12 8, 2028, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 12 9, 2029, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 12 10, 2030, CT, CP/Trace/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PHASE 13 1, 2031, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 13 2, 2032, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 13 3, 2033, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 13 4, 2034, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 13 5, 2035, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 13 6, 2036, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 13 7, 2037, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 13 8, 2038, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 13 9, 2039, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 13 10, 2040, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 13 11, 2041, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 13 12, 2042, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 13 13, 2043, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 13 14, 2044, CT, CP/Trace/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_API 13 15, 2045, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 13 16, 2046, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 13 17, 2047, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 13 18, 2048, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 13 19, 2049, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 13 20, 2050, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 13 21, 2051, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 13 22, 2052, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 13 23, 2053, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 13 24, 2054, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 13 25, 2055, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 13 26, 2056, CT, CP/Trace/PS/PPP/Engine/CAT_API, 
    CP TCPIP CAT_IP 1 1, 2064, CT, CP/Trace/PS/TCPIP/Engine/CAT_IP, 
    CP TCPIP CAT_IP 1 2, 2065, CT, CP/Trace/PS/TCPIP/Engine/CAT_IP, 
    CP TCPIP CAT_IP 1 3, 2066, CT, CP/Trace/PS/TCPIP/Engine/CAT_IP, 
    CP TCPIP CAT_IP 1 4, 2067, CT, CP/Trace/PS/TCPIP/Engine/CAT_IP, 
    CP TCPIP CAT_IP 1 5, 2068, CT, CP/Trace/PS/TCPIP/Engine/CAT_IP, 
    CP TCPIP CAT_IP 1 6, 2069, CT, CP/Trace/PS/TCPIP/Engine/CAT_IP, 
    CP TCPIP CAT_TCP 11 1, 2070, CT, CP/Trace/PS/TCPIP/Engine/CAT_TCP, 
    CP TCPIP CAT_TCP 11 2, 2071, CT, CP/Trace/PS/TCPIP/Engine/CAT_TCP, 
    CP TCPIP CAT_TCP 11 3, 2072, CT, CP/Trace/PS/TCPIP/Engine/CAT_TCP, 
    CP TCPIP CAT_TCP 12 1, 2073, CT, CP/Trace/PS/TCPIP/Engine/CAT_TCP, 
    CP TCPIP CAT_TCP 12 2, 2074, CT, CP/Trace/PS/TCPIP/Engine/CAT_TCP, 
    CP TCPIP CAT_TCP 12 3, 2075, CT, CP/Trace/PS/TCPIP/Engine/CAT_TCP, 
    CP TCPIP CAT_TCP 14 1, 2076, CT, CP/Trace/PS/TCPIP/Engine/CAT_TCP, 
    CP TCPIP CAT_UDP 15 1, 2077, CT, CP/Trace/PS/TCPIP/Engine/CAT_UDP, 
    CP NSPE CAT_API 1 1, 2088, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 1 2, 2089, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 1 3, 2090, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 1 4, 2091, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 1 5, 2092, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 1 6, 2093, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 1 7, 2094, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 1 8, 2095, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 1 9, 2096, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 1 10, 2097, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 1 11, 2098, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 1 12, 2099, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 1 13, 2100, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 1 14, 2101, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 2 1, 2102, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 2 2, 2103, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 2 3, 2104, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 2 4, 2105, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 2 5, 2106, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 2 6, 2107, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 2 7, 2108, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 2 8, 2109, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 2 9, 2110, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 2 10, 2111, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 2 11, 2112, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 2 12, 2113, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 2 13, 2114, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 1, 2115, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 2, 2116, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 3, 2117, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 4, 2118, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 5, 2119, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 6, 2120, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 7, 2121, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 8, 2122, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 9, 2123, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 10, 2124, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 11, 2125, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 12, 2126, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 13, 2127, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 14, 2128, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 15, 2129, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 16, 2130, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 17, 2131, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 18, 2132, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 19, 2133, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 20, 2134, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 21, 2135, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_FSM 4 1, 2136, CT, CP/Trace/PS/NSPE/Engine/CAT_FSM, lite, 
    CP NSPE CAT_API 4 2, 2137, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 4 3, 2138, CT, CP/Trace/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_BIOS 5 1, 2139, CT, CP/Trace/PS/NSPE/Engine/CAT_BIOS, 
    CP NSPE CAT_BIOS 5 2, 2140, CT, CP/Trace/PS/NSPE/Engine/CAT_BIOS, 
    CP NSPE CAT_BIOS 5 4, 2141, CT, CP/Trace/PS/NSPE/Engine/CAT_BIOS, 
    CP NSPE CAT_ERROR 6 1, 2142, CT, CP/Trace/PS/NSPE/Engine/CAT_ERROR, 
    CP NSPE CAT_BIOS 6 2, 2143, CT, CP/Trace/PS/NSPE/Engine/CAT_BIOS, 
    CP NSPE CAT_BIOS 6 3, 2144, CT, CP/Trace/PS/NSPE/Engine/CAT_BIOS, 
    CP NSPE CAT_BIOS 7 4, 2145, CT, CP/Trace/PS/NSPE/Engine/CAT_BIOS, 
    CP NSPE CAT_NAT 9 1, 2146, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 2, 2147, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 3, 2148, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 4, 2149, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 5, 2150, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 6, 2151, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 7, 2152, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 8, 2153, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 9, 2154, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 10, 2155, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 11, 2156, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 12, 2157, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 13, 2158, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 14, 2159, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 15, 2160, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 16, 2161, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 17, 2162, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 18, 2163, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 19, 2164, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 20, 2165, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP NSPE CAT_NAT 9 21, 2166, CT, CP/Trace/PS/NSPE/Engine/CAT_NAT, 
    CP SCC CAT_SCC 1 1, 2176, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 2, 2177, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 3, 2178, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 4, 2179, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 5, 2180, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 6, 2181, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 7, 2182, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 8, 2183, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 9, 2184, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 10, 2185, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 11, 2186, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 12, 2187, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 13, 2188, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 14, 2189, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 15, 2190, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 16, 2191, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 1 17, 2192, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_API 1 18, 2193, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 1 19, 2194, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 1 20, 2195, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 1 21, 2196, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 1 22, 2197, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 1 23, 2198, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 1 24, 2199, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 1 25, 2200, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 1 26, 2201, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 1 27, 2202, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 1 28, 2203, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 1 29, 2204, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 1 30, 2205, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_SCC 2 1, 2206, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 2 2, 2207, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_API 2 3, 2208, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_SCC 2 4, 2209, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 2 5, 2210, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 2 6, 2211, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 2 7, 2212, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_API 2 8, 2213, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 2 9, 2214, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 2 10, 2215, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 2 11, 2216, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 2 12, 2217, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 2 13, 2218, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 2 14, 2219, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 2 15, 2220, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 2 16, 2221, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 2 17, 2222, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 2 18, 2223, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 2 19, 2224, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 2 20, 2225, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 2 21, 2226, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_SCC 3 1, 2227, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 3 2, 2228, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 3 3, 2229, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 3 4, 2230, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 3 5, 2231, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 3 6, 2232, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 3 7, 2233, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 3 8, 2234, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 3 9, 2235, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 3 10, 2236, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 3 11, 2237, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 3 12, 2238, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 3 13, 2239, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 3 14, 2240, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 3 15, 2241, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_API 3 16, 2242, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 3 17, 2243, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 3 18, 2244, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 3 19, 2245, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 3 20, 2246, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 3 21, 2247, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 3 22, 2248, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 3 23, 2249, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 3 24, 2250, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 3 25, 2251, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 3 26, 2252, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 3 27, 2253, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_SCC 4 1, 2254, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_API 4 2, 2255, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 4 3, 2256, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 4 4, 2257, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 4 5, 2258, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_SCC 4 6, 2259, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 4 7, 2260, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_API 4 8, 2261, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 4 9, 2262, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 4 10, 2263, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 4 11, 2264, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 4 12, 2265, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_SCC 4 13, 2266, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 4 14, 2267, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 4 15, 2268, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 4 16, 2269, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 4 17, 2270, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 4 18, 2271, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 4 19, 2272, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 5 1, 2273, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 5 2, 2274, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 5 3, 2275, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 5 4, 2276, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 5 5, 2277, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 5 6, 2278, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 5 7, 2279, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_API 5 8, 2280, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 5 9, 2281, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 5 10, 2282, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 5 11, 2283, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 5 12, 2284, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 5 13, 2285, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 5 14, 2286, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_SCC 6 1, 2287, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 6 2, 2288, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 6 3, 2289, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 6 4, 2290, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 6 6, 2291, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 6 7, 2292, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 6 10, 2293, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 6 11, 2294, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_API 6 12, 2295, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 6 13, 2296, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 6 14, 2297, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 6 15, 2298, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 6 16, 2299, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 6 18, 2300, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 6 19, 2301, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_SCC 7 1, 2302, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 7 2, 2303, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 7 3, 2304, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 7 4, 2305, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 7 5, 2306, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 7 7, 2307, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 7 8, 2308, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 7 10, 2309, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 7 11, 2310, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 7 12, 2311, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 7 13, 2312, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 7 14, 2313, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 7 15, 2314, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 7 16, 2315, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_API 7 17, 2316, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 7 18, 2317, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 7 19, 2318, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 7 20, 2319, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 7 21, 2320, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 7 22, 2321, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 7 23, 2322, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_SCC 8 1, 2323, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 2, 2324, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 3, 2325, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 4, 2326, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 5, 2327, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 6, 2328, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 7, 2329, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 8, 2330, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 9, 2331, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 10, 2332, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 11, 2333, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 12, 2334, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 13, 2335, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 14, 2336, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 15, 2337, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 16, 2338, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 17, 2339, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 18, 2340, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 19, 2341, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 20, 2342, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 21, 2343, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 22, 2344, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_API 8 23, 2345, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 8 24, 2346, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 8 25, 2347, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 8 26, 2348, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 8 27, 2349, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 8 28, 2350, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 8 29, 2351, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 8 30, 2352, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 8 31, 2353, CT, CP/Trace/PS/SCC/Engine/CAT_API, lite, 
    CP SCC CAT_API 8 32, 2354, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_SCC 8 33, 2355, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 34, 2356, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 35, 2357, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 36, 2358, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 37, 2359, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 9 1, 2360, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 9 2, 2361, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 9 3, 2362, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 9 4, 2363, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 9 5, 2364, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 9 6, 2365, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 9 7, 2366, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 9 8, 2367, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 9 9, 2368, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_API 9 10, 2369, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 9 11, 2370, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 9 12, 2371, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 9 13, 2372, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 9 14, 2373, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 9 15, 2374, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 9 16, 2375, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 9 17, 2376, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_SCC 9 18, 2377, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_API 11 1, 2378, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 2, 2379, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 3, 2380, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 4, 2381, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 5, 2382, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 6, 2383, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 7, 2384, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 8, 2385, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 9, 2386, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 10, 2387, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 11, 2388, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 12, 2389, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 13, 2390, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 14, 2391, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 15, 2392, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 16, 2393, CT, CP/Trace/PS/SCC/Engine/CAT_API, lite, 
    CP SCC CAT_API 11 17, 2394, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 18, 2395, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 19, 2396, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 20, 2397, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 21, 2398, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 22, 2399, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 23, 2400, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 24, 2401, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 25, 2402, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 26, 2403, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 27, 2404, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 28, 2405, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 29, 2406, CT, CP/Trace/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_SCC 12 1, 2407, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC ENG_ERROR_TR 12 2, 2408, CT, CP/Trace/PS/SCC/Engine/ENG_ERROR_TR, 
    CP SCC CAT_SCC 12 3, 2409, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 12 4, 2410, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 12 5, 2411, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 12 6, 2412, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP OTA CAT_API 1 1, 2432, CT, CP/Trace/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 2, 2433, CT, CP/Trace/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 3, 2434, CT, CP/Trace/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 4, 2435, CT, CP/Trace/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 5, 2436, CT, CP/Trace/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 6, 2437, CT, CP/Trace/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 7, 2438, CT, CP/Trace/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 8, 2439, CT, CP/Trace/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 9, 2440, CT, CP/Trace/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 10, 2441, CT, CP/Trace/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 11, 2442, CT, CP/Trace/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 12, 2443, CT, CP/Trace/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 13, 2444, CT, CP/Trace/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_OTA 2 1, 2445, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 2, 2446, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 3, 2447, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 4, 2448, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 5, 2449, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 6, 2450, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 7, 2451, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 8, 2452, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 9, 2453, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 10, 2454, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 11, 2455, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 12, 2456, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 13, 2457, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 14, 2458, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 15, 2459, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 16, 2460, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 17, 2461, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 18, 2462, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 19, 2463, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 4 1, 2464, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 4 2, 2465, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 4 3, 2466, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 4 4, 2467, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 4 5, 2468, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 4 6, 2469, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 4 7, 2470, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 4 8, 2471, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 4 9, 2472, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 4 10, 2473, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 4 11, 2474, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 4 12, 2475, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 1, 2476, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 2, 2477, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 3, 2478, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 4, 2479, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 5, 2480, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 6, 2481, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 7, 2482, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 8, 2483, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 9, 2484, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 10, 2485, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 11, 2486, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 12, 2487, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 13, 2488, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 14, 2489, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 15, 2490, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 16, 2491, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 17, 2492, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 18, 2493, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 19, 2494, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 20, 2495, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 21, 2496, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 23, 2497, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 24, 2498, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 25, 2499, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 26, 2500, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 27, 2501, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 5 28, 2502, CT, CP/Trace/PS/OTA/Engine/CAT_OTA, 
    CP SMS CAT_API 1 1, 2512, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 2, 2513, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 3, 2514, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 4, 2515, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 5, 2516, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 6, 2517, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 7, 2518, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 8, 2519, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 9, 2520, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 10, 2521, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 11, 2522, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 12, 2523, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 13, 2524, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 14, 2525, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 15, 2526, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 16, 2527, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 17, 2528, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 18, 2529, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 19, 2530, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 20, 2531, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 21, 2532, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 22, 2533, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 23, 2534, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 24, 2535, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 25, 2536, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 26, 2537, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 27, 2538, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 28, 2539, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 29, 2540, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 30, 2541, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 31, 2542, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 32, 2543, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 33, 2544, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 34, 2545, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 35, 2546, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 36, 2547, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 37, 2548, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 38, 2549, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 39, 2550, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 40, 2551, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 41, 2552, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 42, 2553, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 43, 2554, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 44, 2555, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 45, 2556, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 46, 2557, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 47, 2558, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 48, 2559, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 49, 2560, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 50, 2561, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 51, 2562, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 52, 2563, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 53, 2564, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 54, 2565, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 55, 2566, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 56, 2567, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 57, 2568, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 58, 2569, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 59, 2570, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 60, 2571, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 61, 2572, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 62, 2573, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 63, 2574, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 64, 2575, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 65, 2576, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 66, 2577, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 67, 2578, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 68, 2579, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 69, 2580, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 70, 2581, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 71, 2582, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 72, 2583, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 73, 2584, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 74, 2585, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 75, 2586, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 76, 2587, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 77, 2588, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 78, 2589, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 79, 2590, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 80, 2591, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 81, 2592, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 82, 2593, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 83, 2594, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 84, 2595, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 85, 2596, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 86, 2597, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 87, 2598, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 88, 2599, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 89, 2600, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 90, 2601, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 91, 2602, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 92, 2603, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 93, 2604, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 94, 2605, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 95, 2606, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 96, 2607, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 97, 2608, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 98, 2609, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 99, 2610, CT, CP/Trace/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_SMS 3 1, 2611, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 3 2, 2612, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 3 3, 2613, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 3 4, 2614, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 3 5, 2615, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 3 6, 2616, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 3 7, 2617, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 3 8, 2618, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 3 9, 2619, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 3 10, 2620, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 3 11, 2621, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 1, 2622, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 2, 2623, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 3, 2624, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 4, 2625, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 5, 2626, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 6, 2627, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 7, 2628, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 8, 2629, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 9, 2630, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 10, 2631, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 11, 2632, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 12, 2633, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 13, 2634, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 14, 2635, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 15, 2636, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 16, 2637, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 5 1, 2638, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 5 2, 2639, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 5 3, 2640, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 5 4, 2641, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 5 5, 2642, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 5 6, 2643, CT, CP/Trace/PS/SMS/Engine/CAT_SMS, 
    CP Wrapper Call, 2656, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP Access Probe Timing, 2657, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP Srv Config, 2658, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP Srv Opt, 2659, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP Eng Request, 2660, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP CDMA System Status, 2661, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP Report Event, 2662, CT, CP/Trace/PS/Call Proc/Wrapper, lite, 
    CP Report Status, 2663, CT, CP/Trace/PS/Call Proc/Wrapper, lite, 
    CP DBM Ack, 2664, CT, CP/Trace/PS/DBM, 
    CP Srv Config validate, 2665, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP Pwr Meas Params Request, 2666, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP NN Srv Cfg Event, 2667, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP NN Srv Cfg Null Ptr Event, 2668, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP NN Srv Cfg Number Of LPM Entries Exceeded Event, 2669, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP PSW Srv Opt Cont, 2670, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP PSW L1D_FSCH_MSG_TRACE_ID, 2671, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP PSW L1D_PSW_RSR_DEALLOC_TRACE_ID, 2672, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP PSW L1D_PSW_RSR_ALLOC_TRACE_ID, 2673, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP PSW L1D SERVICE_CONFIG_MSG_TRACE_ID, 2674, CT, CP/Trace/PS/Call Proc/Wrapper, lite, 
    CP PSW LMD_SERVICE_CONFIG_MSG_TRACE_ID, 2675, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP PSW L1D_RSCH_MSG_TRACE_ID, 2676, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP PSW LMD_RESOURCE_UPDATE_TRACE_ID, 2677, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC REQ CP, 2678, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC OTASP CHK DIGIT, 2679, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC SVC CFG REQ, 2680, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC SVC CTRL REQ, 2681, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC SO REQ, 2682, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC RATE CTRL, 2683, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC VOCODER CTRL, 2684, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC LPBK CONN IND, 2685, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC LPBK NOSVC IND, 2686, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC LPBK ORIG FAIL, 2687, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC LPBK READY IND, 2688, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC LPBK RELEASE IND, 2689, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC LPBK RELEASE REQ, 2690, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC KILL TMR, 2691, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC SET TMR, 2692, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC VS ALART, 2693, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC VS TCH CONN, 2694, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC VS NOSVC IND, 2695, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC VS ORIG FAIL, 2696, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC VS PAGE IND, 2697, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC VS READY IND, 2698, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC VS REL IND, 2699, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC VS PREF, 2700, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC VS SW FAIL IND, 2701, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC SMS TX RSP, 2702, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC SMS RX IND, 2703, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC SMS PREF, 2704, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC SMS REL, 2705, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC CLIR CAUSE, 2706, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC AUDIO CTRL, 2707, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC RLP INIT, 2708, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC RLP OPEN, 2709, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC RLP RESET, 2710, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC DS CONN, 2711, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC DS RLS, 2712, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC DS NOSVC IND, 2713, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC DS ORIG FAIL, 2714, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC DS PAGE IND, 2715, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC DS ALERT IND, 2716, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC DS ENABLE REQ, 2717, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC DS ANSWER REQ, 2718, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC DS RELEASE REQ, 2719, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC DS READY IND, 2720, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS CONN, 2721, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS DORMN IND, 2722, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS DORMN CTRL IND, 2723, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS NOSVC IND, 2724, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS ORIG FAIL, 2725, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS EVENT, 2726, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS STATE, 2727, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS READY IND, 2728, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS RLS, 2729, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS PAGE IND, 2730, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS ALERT IND, 2731, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS Zone Changed IND, 2732, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC OTASP CONN IND, 2733, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC OTASP RLS IND, 2734, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC OTASP RX IND, 2735, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC OTASP TX RSP, 2736, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS ANS REQ, 2737, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS RLS REQ, 2738, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS DORMN REQ, 2739, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC DATA PREF, 2740, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PACKET PREF, 2741, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC OTASP RCVD, 2742, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC OTASP REL REQ, 2743, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC OTASP TX REQ LEN, 2744, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC OTASP SO PREF, 2745, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC AMPS VCH REQ, 2746, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC VS SWITCH SO, 2747, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC LS Service Option Control, 2748, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP CDMA Idle SubState Event, 2749, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP CDMA Slotted Wake Mode Ind, 2750, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP PSW Cmd Mailbox Msg Trace, 2751, CT, CP/Trace/PS, 
    CP SCC PS Packet Zone Hysteresis Enabled, 2752, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS Packet Zone Hysteresis Active Ind, 2753, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP SCC PS Packet Zone Hysteresis Running, 2754, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP PSW UTK API General, 2755, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP PE_ENGTC_EVENT_TRACE_ID, 2784, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE STORING OMT, 2785, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE REPLAYING PCH EGSRM, 2786, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE REPLAYING PCH ECCLM, 2787, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE RESET OVHD SEQ NUM, 2788, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE EGSRM RECEIVED, 2789, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE VALID EGSRM RECEIVED, 2790, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE EAPM RECEIVED, 2791, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE VALID EAPM RECEIVED, 2792, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE CHANGING PCH, 2793, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE A41SPM RECEIVED, 2794, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE VALID A41SPM RECEIVED, 2795, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE MCRRPM RECEIVED, 2796, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE VALID MCRRPM RECEIVED, 2797, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE VALID A41RANDM RECEIVED, 2798, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ECCLM RECEIVED, 2799, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE VALID ECCLM RECEIVED, 2800, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE UNLM RECEIVED, 2801, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE VALID UNLM RECEIVED, 2802, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE BCAST CHAN TYPE, 2803, CT, CP/Trace/PS/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE START FCCCH MONITORING, 2804, CT, CP/Trace/PS/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG IND BCCH MONITORING, 2805, CT, CP/Trace/PS/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE ENG IND FCCCH MONITORING, 2806, CT, CP/Trace/PS/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE START BCCH NON TD MONITORING, 2807, CT, CP/Trace/PS/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE START BCCH TD MONITORING, 2808, CT, CP/Trace/PS/Call Proc/Engine/ENG_PAGE_TR, 
    CP PE START BCCH MSG RECEIVED, 2809, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE START FCCCH MSG RECEIVED, 2810, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE INIT MS CAP DB, 2811, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE EAPM ERROR 1, 2812, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE EAPM ERROR 2, 2813, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE EAPM ERROR 3, 2814, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE EAPM ERROR 4, 2815, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE EAPM ERROR 5, 2816, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE EAPM ERROR 6, 2817, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE EGSRM ERROR 1, 2818, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE EGSRM ERROR 2, 2819, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE EGSRM ERROR 3, 2820, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ECCLM ERROR 1, 2821, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ECCLM ERROR 2, 2822, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE A41RANDM ERROR 1, 2823, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE MCRRPM ERROR 1, 2824, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE MCRRPM ERROR 2, 2825, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE MCRRPM ERROR 3, 2826, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE MCRRPM ERROR 4, 2827, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE A41SPM ERROR 1, 2828, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE A41SPM ERROR 2, 2829, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE SPM, 2830, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE APM, 2831, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NLM ERROR 1, 2832, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE UNLM ERROR 1, 2833, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE UNLM ERROR 2, 2834, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE UNLM ERROR 3, 2835, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE UNLM ERROR 4, 2836, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE UNLM ERROR 5, 2837, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE GNLM 1, 2838, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ESPM 1, 2839, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ECAM 1, 2840, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ECAM 2, 2841, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ECAM ERROR 1, 2842, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ECAM ERROR 2, 2843, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ECAM ERROR 3, 2844, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE UNLM 1, 2845, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE UNLM ERROR 6, 2846, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE UNLM ERROR 7, 2847, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE UNLM ERROR 8, 2848, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE A41SPM ERROR 3, 2849, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE MCRRPM ERROR 5, 2850, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_LAYER2_TR LAC 1, 2851, CT, CP/Trace/PS/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE ORIG_MSG 1, 2852, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE Access Attempt, 2853, CT, CP/Trace/PS/Call Proc/Engine/L3 Access, 
    CP PE Access Attempt LAC Fail, 2854, CT, CP/Trace/PS/Call Proc/Engine/L3 Access, 
    CP PE TA Timeout, 2855, CT, CP/Trace/PS/Call Proc/Engine/L3 Access, 
    CP PE TA Timeout LAC Fail, 2856, CT, CP/Trace/PS/Call Proc/Engine/L3 Access, 
    CP PE Ec Io Timeout, 2857, CT, CP/Trace/PS/Call Proc/Engine/L3 Access, 
    CP PE Ec Io Timeout LAC Fail, 2858, CT, CP/Trace/PS/Call Proc/Engine/L3 Access, 
    CP PE Access Suspend, 2859, CT, CP/Trace/PS/Call Proc/Engine/L3 Access, 
    CP PE Access Suspend LAC Fail, 2860, CT, CP/Trace/PS/Call Proc/Engine/L3 Access, 
    CP PE SRBP Max Probe Size, 2861, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP SM Event, 2862, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP start ta timer, 2863, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP stop ta timer, 2864, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP stop attempt, 2865, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP HO request rcvd, 2866, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP Resume from HO, 2867, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP Send Fail Ind, 2868, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP ACKed, 2869, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP attempt aborted, 2870, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP ACH Parms (part A), 2871, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP ACH Parms (part B), 2872, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP new access attempt, 2873, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP access request, 2874, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP access response, 2875, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP attempt probe HO, 2876, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP ACH pwr correct, 2877, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP EACH pwr correct, 2878, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP probe retransmit, 2879, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP max probe seq, 2880, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP seq retransmit, 2881, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP init probe HO, 2882, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP perst tst fail, 2883, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP attempt HO, 2884, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP init ACH, 2885, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP ACH probe sent, 2886, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP hit max PSIST, 2887, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP PSIST delay, 2888, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP examine HO request, 2889, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP ta timeout, 2890, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP ACH long code, 2891, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP ACH init pwr, 2892, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP mod pwr, 2893, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE LAC_ACCESS_ASM_ATTEMPT, 2894, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC_ACCESS_ASM_RESUME, 2895, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC_ACCESS_ASM_TA_TIMEOUT, 2896, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC_ACCESS_ASM_EO_IO_TIMEOUT, 2897, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC_ACCESS_ASM_FAILURE, 2898, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC ACCESS_MSG_LEN, 2899, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC ACCESS_MSG_EXT_LEN, 2900, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC ACCESS_MSG_TO_LARGE, 2901, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC ACCESS_MSG_FINAL_LENGTH, 2902, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC ACCESS_MSG_ACTIVE_PILOTS, 2903, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC ACCESS_MSG_EXTRA_PILOTS, 2904, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC ACCESS_NO_EXTRA_PILOTS, 2905, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC ACCESS_PILOT_REPORT, 2906, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC SET_PILOT_REPORT, 2907, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC PILOT_MSMT_REPORT_REC, 2908, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE LAC_DB_PAY_LOAD, 2909, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE Pwr Meas Params Req Arrived, 2910, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE Pwr Meas Report Message Sent Out, 2911, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ECAM Assign Mode_100 Received, 2912, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ECAM Assign Mode_100 CH_IND_1 Received, 2913, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ECAM Assign Mode_100 CH_IND_2 Received, 2914, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ECAM Assign Mode_100 CH_IND_3 Received, 2915, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NN Serv Cfg Unpacked, 2916, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NN Serv Cfg LPMIND_0 PREV_GT_6 Received, 2917, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NN Serv Cfg LPMIND_0 CH_IND_1 Received, 2918, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NN Serv Cfg LPMIND_0 CH_IND_2 Received, 2919, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NN Serv Cfg LPMIND_0 CH_IND_3 Received, 2920, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NN Serv Cfg LPMIND_0 PREV_LE_6 Received, 2921, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NN Serv Cfg LPMIND_1 Received, 2922, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NN Serv Cfg LPMIND_2 Received, 2923, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NN Serv Cfg Stored, 2924, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NN Serv Cfg Pended, 2925, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE Pended NN Serv Cfg Retrieved, 2926, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NN Serv Cfg From SCM Received, 2927, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NN Serv Cfg Action Timeout, 2928, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE Physical Layer NN Serv Cfg Indication, 2929, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NN Serv Cfg With The UseTime Received, 2930, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE NN Serv Cfg Without The UseTime Received, 2931, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE Physical Layer Neg Serv Cfg Indication, 2932, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE Negotiated Serv Cfg Indication, 2933, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE HO MIN P TRACE ID, 2934, CT, CP/Trace/PS/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE HO NGHBR STRENGTH TRACE ID, 2935, CT, CP/Trace/PS/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE HO REMAINING STRENGTH TRACE ID, 2936, CT, CP/Trace/PS/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE HO CHECK IMMED TRACE ID, 2937, CT, CP/Trace/PS/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE HO CHECK DELAYED TRACE ID, 2938, CT, CP/Trace/PS/Call Proc/Engine/ENG_HANDOFF_TR, 
    CP PE SEND_ERRM_FAILED_TRACE_ID, 2939, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE UNPACK_ESCAM_FAILED_1_TRACE_ID, 2940, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE UNPACK_ESCAM_FAILED_2_TRACE_ID, 2941, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE UNPACK_ESCAM_FAILED_3_TRACE_ID, 2942, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE UNPACK_ESCAM_FAILED_4_TRACE_ID, 2943, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE UNPACK_ESCAM_FAILED_5_TRACE_ID, 2944, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE DS_SIGNALING_RESET_TRACE_ID, 2945, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE DS_SIGNALING_RSR_REQ_TRACE_ID, 2946, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE SCRM_SEND_ERROR_TRACE_ID, 2947, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE DS_SIGNALING_RSR_REL_TRACE_ID, 2948, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE RRRM_SEND_ERROR_TRACE_ID, 2949, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE DS_SIGNALING_ERM_TRACE_ID, 2950, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE DS_SIGNALING_RAM_TRACE_ID, 2951, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE DS_SIGNALING_ESCAM_TRACE_ID, 2952, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE DS_SIGNALING_INIT_TRACE_ID, 2953, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE RRM_SEND_ERROR_TRACE_ID, 2954, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE ESCAM_RECIEVED_TRACE_ID, 2955, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE ESCAM_REJECTED_1_TRACE_ID, 2956, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE ESCAM_REJECTED_2_TRACE_ID, 2957, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE ESCAM_REJECTED_3_TRACE_ID, 2958, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE RAM_RECIEVED_TRACE_ID, 2959, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE RAM_REJECTED_TRACE_ID, 2960, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE ERM_RECIEVED_TRACE_ID, 2961, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE ERM_REJECTED_TRACE_ID, 2962, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE UNPACK_ESCAM_TRACE_ID, 2963, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE UNPACK_RAM_TRACE_ID, 2964, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE UNPACK_RAM_REJECTED_TRACE_ID, 2965, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE UNPACK_ERM_TRACE_ID, 2966, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE UNPACK_ERM_REJECTED_TRACE_ID, 2967, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE RETRY_ORDER_RECIEVED_TRACE_ID, 2968, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE RETRY_ORDER_REJECTED_TRACE_ID, 2969, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP PE RETRY_ORDER_PROCESS_TRACE_ID, 2970, CT, CP/Trace/PS/Call Proc/Engine/ENG_DS_TR, 
    CP_PE_STAT_GET_PARM_LMD_REQ_ST_GROUP_TRACE_ID, 2971, CT, CP/Trace/PS/Call Proc/Engine/ENG_STAT_GET_TR, 
    CP_PE_STAT_GET_PARM_RETRIEVED_TRACE_ID, 2972, CT, CP/Trace/PS/Call Proc/Engine/ENG_STAT_GET_TR, 
    CP_PE_STAT_GET_PARM_ERROR_STATE_TRACE_ID, 2973, CT, CP/Trace/PS/Call Proc/Engine/ENG_STAT_GET_TR, 
    CP_PE_STAT_SET_PARM_WRITE_TRACE_ID, 2974, CT, CP/Trace/PS/Call Proc/Engine/ENG_STAT_SET_TR, 
    CP_PE_STAT_SET_PARM_LIST_TRACE_ID, 2975, CT, CP/Trace/PS/Call Proc/Engine/ENG_STAT_SET_TR, 
    CP_PE_STAT_SET_PARM_REQUEST_ID, 2976, CT, CP/Trace/PS/Call Proc/Engine/ENG_STAT_SET_TR, 
    CP_PE_STAT_SET_PARM_SET_TRACE_ID, 2977, CT, CP/Trace/PS/Call Proc/Engine/ENG_STAT_SET_TR, 
    CP_PE_STAT_SET_PARM_REQ_LMD_SET_GROUP_TRACE_ID, 2978, CT, CP/Trace/PS/Call Proc/Engine/ENG_STAT_SET_TR, 
    CP_PE_STAT_SET_PARM_CHECK_LIST_TRACE_ID, 2979, CT, CP/Trace/PS/Call Proc/Engine/ENG_STAT_SET_TR, 
    CP_PE_STAT_SET_PARM_ERROR_STATE_TRACE_ID, 2980, CT, CP/Trace/PS/Call Proc/Engine/ENG_STAT_SET_TR, 
    CP_PE_RC_ERROR_TRACE_ID, 3008, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_EVENT_TRACE_ID, 3009, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_THRESHOLD_TRACE_ID, 3010, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_SIG_REQ_TRACE_ID, 3011, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_SIG_REL_TRACE_ID, 3012, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_ALLOC_UPD_TRACE_ID, 3013, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_RATE_DURATION_TRACE_ID, 3014, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_REMAIN_RESOURCES_TRACE_ID, 3015, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_WAIT_ESCAM_TMR_TRACE_ID, 3016, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_ESCAM_TMR_TIMEOUT_TRACE_ID, 3017, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_RETRY_DELAY_TIMER_ACTIVE_TRACE_ID, 3018, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_THRESHOLD_DEBUG_TRACE_ID, 3019, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_THRESHOLD_ERR_TRACE_ID, 3020, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_CONFIG_DEBUG_TRACE_ID, 3021, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_CONFIG_ERROR_TRACE_ID, 3022, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_CONFIG_ENTRY_ADDED_TRACE_ID, 3023, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP_PE_RC_CONFIG_DB_CHECK_ENTRY_TRACE_ID, 3024, CT, CP/Trace/PS/Call Proc/Resource Control, 
    CP HO_NUM_ACT_PILOTS, 3032, CT, CP/TRACE/PS/Handoff, 
    CP HO_ACT_PILOT_A, 3033, CT, CP/TRACE/PS/Handoff, 
    CP HO_ACT_PILOT_B, 3034, CT, CP/TRACE/PS/Handoff, 
    CP HO_ACTION_TIME, 3035, CT, CP/TRACE/PS/Handoff, 
    CP HO_SUP_CODE_CH, 3036, CT, CP/TRACE/PS/Handoff, 
    CP HO_SUP_CH, 3037, CT, CP/TRACE/PS/Handoff, 
    CP HO_FLAGS, 3038, CT, CP/TRACE/PS/Handoff, 
    CP HO_CHAN_CHANGE, 3039, CT, CP/TRACE/PS/Handoff, 
    CP HO_FRAME_OFFSET, 3040, CT, CP/TRACE/PS/Handoff, 
    CP HO_SRCH_WIN, 3041, CT, CP/TRACE/PS/Handoff, 
    CP HO_PRIVATE_LCM, 3042, CT, CP/TRACE/PS/Handoff, 
    CP HO_PWR_CNTL_STEP, 3043, CT, CP/TRACE/PS/Handoff, 
    CP HO_NUM_PREAMBLE, 3044, CT, CP/TRACE/PS/Handoff, 
    CP HO_CH_IND, 3045, CT, CP/TRACE/PS/Handoff, 
    CP HO_FPC_SUBCHAN_GAIN, 3046, CT, CP/TRACE/PS/Handoff, 
    CP HO_REV_FCH_GATING_MODE, 3047, CT, CP/TRACE/PS/Handoff, 
    CP HO_REV_PWR_CNTL_DELAY, 3048, CT, CP/TRACE/PS/Handoff, 
    CP HO_SRV_CONFIG, 3049, CT, CP/TRACE/PS/Handoff, 
    CP HO_HANDOFF_FAIL, 3050, CT, CP/TRACE/PS/Handoff, 
    CP HO_HANDOFF_COMPLETE_RCVD, 3051, CT, CP/TRACE/PS/Handoff, 
    CP HO_RETURN_ON_FAIL, 3052, CT, CP/TRACE/PS/Handoff, 
    CP HO_RESET_L2, 3053, CT, CP/TRACE/PS/Handoff, 
    CP HO_RESET_FPC, 3054, CT, CP/TRACE/PS/Handoff, 
    CP HO_HDM_SEQ, 3055, CT, CP/TRACE/PS/Handoff, 
    CP HO_CFG_THRESH, 3056, CT, CP/TRACE/PS/Handoff, 
    CP HO_CFG_INTERCEPT, 3057, CT, CP/TRACE/PS/Handoff, 
    CP HO_PREV, 3058, CT, CP/TRACE/PS/Handoff, 
    CP HO_PACKET_ZONE_ID, 3059, CT, CP/TRACE/PS/Handoff, 
    CP HO_SEARCH, 3060, CT, CP/TRACE/PS/Handoff, 
    CP HO_PWR_PARMS, 3061, CT, CP/TRACE/PS/Handoff, 
    CP HO_RLGAIN_TRAFFIC_PILOT, 3062, CT, CP/TRACE/PS/Handoff, 
    CP HO_CONT_REV_PILOT, 3063, CT, CP/TRACE/PS/Handoff, 
    CP HO_TIMER_TRACE_ID, 3064, CT, CP/TRACE/PS/Handoff, 
    CP_SCC_SERV_CONFIG_P_REV_6_VALIDATE_TRACE_ID, 3072, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_ENCRYPT_MODE_TRACE_ID, 3073, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_RLP_BLOB_TRACE_ID, 3074, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_FCH_FS_TRACE_ID, 3075, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_FCH_FOR_RC_TRACE_ID, 3076, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_FCH_REV_RC_TRACE_ID, 3077, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_DCCH_FS_TRACE_ID, 3078, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_DCCH_FOR_RC_TRACE_ID, 3079, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_DCCH_REV_RC_TRACE_ID, 3080, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_NUM_FOR_SCH_TRACE_ID, 3081, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_FOR_SCH_RC_TRACE_ID, 3082, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_FOR_SCH_MUX_TRACE_ID, 3083, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_FOR_SCH_CODING_TRACE_ID, 3084, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_NUM_REV_SCH_TRACE_ID, 3085, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_REV_SCH_RC_TRACE_ID, 3086, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_REV_SCH_MUX_TRACE_ID, 3087, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_SERV_CONFIG_INVALID_REV_SCH_CODING_TRACE_ID, 3088, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_SCC_PSC_SC_VALIDATE_TRACE_ID, 3089, CT, CP/Trace/PS/SCC/Engine/CAT_SCC, 
    CP_PE_ATIM_ERROR_1_TRACE_ID, 3090, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PS Generic DEC1, 3091, CT, CP/Trace/PS/Generic, 
    CP PS Generic DEC2, 3092, CT, CP/Trace/PS/Generic, 
    CP PS Generic HEX1, 3093, CT, CP/Trace/PS/Generic, 
    CP PS Generic HEX2, 3094, CT, CP/Trace/PS/Generic, 
    CP PS LOCSERV, 3104, CT, CP/Trace/PS/LOC, 
    CP_LOC_STATUS_TRACE_ID, 3105, CT, CP/Trace/PS/LOC, 
    CP_LOC_MODE_FLOW_GET_TRACE_ID, 3106, CT, CP/Trace/PS/LOC, 
    CP_LOC_ALM_EPH_TRACE_ID, 3107, CT, CP/Trace/PS/LOC, 
    CP_LOC_OUTPUT_TRACE_ID, 3108, CT, CP/Trace/PS/LOC, 
    CP_LOC_REV_TCBP_TRACE_ID, 3109, CT, CP/Trace/PS/LOC, 
    CP_LOC_REV_SMS_TRACE_ID, 3110, CT, CP/Trace/PS/LOC, 
    CP_LOC_OUTPUT_INFO_TRACE_ID, 3111, CT, CP/Trace/PS/LOC, 
    CP_LOC_SESS_INFO_TRACE_ID, 3112, CT, CP/Trace/PS/LOC, 
    CP_LOC_RCV_RSP_MSG_TRACE_ID, 3113, CT, CP/Trace/PS/LOC, 
    CP_LOC_TIMER_START_TRACE_ID, 3114, CT, CP/Trace/PS/LOC, 
    CP_LOC_TIMER_STOP_TRACE_ID, 3115, CT, CP/Trace/PS/LOC, 
    CP_LOC_TIMER_EXP_TRACE_ID, 3116, CT, CP/Trace/PS/LOC, 
    CP_LOC_ALM_EPH_CHECK_TRACE_ID, 3117, CT, CP/Trace/PS/LOC, 
    CP_LOC_CLR_PPM_STATUS_TRACE_ID, 3118, CT, CP/Trace/PS/LOC, 
    CP_LOC_PRM_MSM_REQ_TRACE_ID, 3119, CT, CP/Trace/PS/LOC, 
    CP_LOC_PPM_MSM_REQ_TRACE_ID, 3120, CT, CP/Trace/PS/LOC, 
    CP_LOC_RCV_REQ_MSG_TRACE_ID, 3121, CT, CP/Trace/PS/LOC, 
    CP_LOC_CONN_IND_ID, 3122, CT, CP/Trace/PS/LOC, 
    CP_LOC_ALM_EPH_RESTORE_ID, 3123, CT, CP/Trace/PS/LOC, 
    CP_LOC_GPS_READY_ID, 3124, CT, CP/Trace/PS/LOC, 
    CP_LOC_CLR_PRM_STATUS_TRACE_ID, 3125, CT, CP/Trace/PS/LOC, 
    CP UIM_PSW_STATUS_TRACE_ID, 3126, CT, CP/Trace/PS/UIM, 
    CP PSW_DBM_TRACE_ID, 3127, CT, CP/Trace/PS/DBM, 
    CP PE_MULTI_BAND_TRACE_ID, 3128, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP SR ENABLED, 3136, CT, CP/Trace/PS/SR, 
    CP SR DISABLED, 3137, CT, CP/Trace/PS/SR, 
    CP SR FAIL NO RETRY, 3138, CT, CP/Trace/PS/SR, 
    CP SR RETRY WO REACQ, 3139, CT, CP/Trace/PS/SR, 
    CP SR RETRY W REACQ SAME SYS, 3140, CT, CP/Trace/PS/SR, 
    CP SR RETRY W REACQ NEXT SYS, 3141, CT, CP/Trace/PS/SR, 
    CP SR RESET, 3142, CT, CP/Trace/PS/SR, 
    CP SR TIMEOUT, 3143, CT, CP/Trace/PS/SR, 
    CP SR START TIMER, 3144, CT, CP/Trace/PS/SR, 
    CP SR INC COUNTER, 3145, CT, CP/Trace/PS/SR, 
    CP SR EVENT SENT TO MMI, 3146, CT, CP/Trace/PS/SR, 
    CP SR STATUS SENT TO MMI, 3147, CT, CP/Trace/PS/SR, 
    CP SR RESET REORIG, 3148, CT, CP/Trace/PS/SR, 
    CP SR STOP REORIG TIMER, 3149, CT, CP/Trace/PS/SR, 
    CP SR START REORIG TIMER, 3150, CT, CP/Trace/PS/SR, 
    CP SR REOIRIG CALL, 3151, CT, CP/Trace/PS/SR, 
    CP OTASP CONN IND, 3160, CT, CP/Trace/PS/OTASP, 
    CP OTASP DISCONN IND, 3161, CT, CP/Trace/PS/OTASP, 
    CP OTASP PREMATURE TERM IND, 3162, CT, CP/Trace/PS/OTASP, 
    CP OTASP START IND, 3163, CT, CP/Trace/PS/OTASP, 
    CP OTASP STOP IND, 3164, CT, CP/Trace/PS/OTASP, 
    CP OTASP SYSTEM ERROR IND, 3165, CT, CP/Trace/PS/OTASP, 
    CP OTASP RELEASE REQ, 3166, CT, CP/Trace/PS/OTASP, 
    CP OTASP SEND MSG REQ, 3167, CT, CP/Trace/PS/OTASP, 
    CP OTASP ACCEPT MSG ID, 3168, CT, CP/Trace/PS/OTASP, 
    CP OTASP UPDATE DATA, 3169, CT, CP/Trace/PS/OTASP, lite, 
    CP OTASP UPDATE AKEY, 3170, CT, CP/Trace/PS/OTASP, 
    CP OTASP GENERATE RAND32, 3171, CT, CP/Trace/PS/OTASP, 
    CP OTASP GENERATE RAND160, 3172, CT, CP/Trace/PS/OTASP, 
    CP OTASP GENERATE MSSRESULT REQ, 3173, CT, CP/Trace/PS/OTASP, 
    CP OTASP GENERATE KREQ, 3174, CT, CP/Trace/PS/OTASP, 
    CP SMS Deliver Ind, 3175, CT, CP/Trace/PS/SMS/Wrapper, lite, 
    CP SMS Error, 3176, CT, CP/Trace/PS/SMS/Wrapper, lite, 
    CP SMS L2 Ack Received from SMS Ack, 3177, CT, CP/Trace/PS/SMS/Wrapper, lite, 
    CP SMS TlAck Received For SMS Ack, 3178, CT, CP/Trace/PS/SMS/Wrapper, lite, 
    CP SMS Successful BS SMS Ack, 3179, CT, CP/Trace/PS/SMS/Wrapper, lite, 
    CP PE_AHO_FIND_CANDIDATES_TRACE_ID, 3192, CT, CP/Trace/PS/Call Proc/Engine/L3 Access, 
    CP PE_AHO_CHECK_TRACE_ID, 3193, CT, CP/Trace/PS/Call Proc/Engine/L3 Access, 
    CP PE_AHO_MONITOR_TRACE_ID, 3194, CT, CP/Trace/PS/Call Proc/Engine/L3 Access, 
    CP PE_AHO_SORT_NEIGHBOR_TRACE_ID, 3195, CT, CP/Trace/PS/Call Proc/Engine/L3 Access, 
    CP PE_PEND_EVENT_IN_IDLE, 3196, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE_MESSAGE_WAITING_TRACE_ID, 3197, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, lite, 
    CP PE_SIGNAL_INFO_RECORD_TRACE_ID, 3198, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, lite, 
    CP PE_SET_CURRENT_BAND_TRACE_ID, 3199, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE_ACCESS_STATE_ENTRY_TRACE_ID, 3200, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE_ACCESS_STATE_EXIT_TRACE_ID, 3201, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE_IDLE_STATE_ENTRY_TRACE_ID, 3202, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE_IDLE_STATE_EXIT_TRACE_ID, 3203, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE_IDLE_SR_IN_WAKEUP_TRACE_ID, 3204, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE_LAYER2_GPM_WITH_CRCFAIL_TRACE_ID, 3205, CT, CP/Trace/PS/Call Proc/Engine/ENG_LAYER2_TR, 
    CP PE_LAYER2_GPM_WITH_SCIFAIL_TRACE_ID, 3206, CT, CP/Trace/PS/Call Proc/Engine/ENG_LAYER2_TR, 
    CP Idle Ordered Wake Time, 3207, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP PE TxM Timer Expired, 3208, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PSW Set Orig Fail Reason, 3209, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE Registration Throttling, 3210, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE Slotted Veto, 3211, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PS CSFB Trace, 3212, CT, CP/Trace/PS/CSFB, 
    CP PS GCSNA Trace, 3213, CT, CP/Trace/PS/CSFB, 
    CP PE_NULLGPM_TRACE_ID, 3214, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE_PCHSTAT_TRACE_ID, 3215, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE_TOTAL_PCHSTAT_NULLGPM_TRACE_ID, 3216, CT, CP/Trace/PS/Call Proc/Engine/ENG_CP_TR, 
    CP VDC PSW Call Status Transition, 3224, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Mpty Status Transition, 3225, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Setup Req, 3226, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Setup Cnf, 3227, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Dialing Ind, 3228, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Alerting Ind, 3229, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Connected Ind, 3230, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Service Ind, 3231, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Service Rsp, 3232, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Incoming Ind, 3233, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Accept Req, 3234, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Accept Cnf, 3235, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Status Ind, 3236, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Progress Ind, 3237, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Release Req, 3238, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Release Cnf, 3239, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Disconnecting Ind, 3240, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Disconnected Ind, 3241, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Hold Req, 3242, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Hold Cnf, 3243, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Retrieve Req, 3244, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Retrieve Cnf, 3245, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Swap Req, 3246, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Swap Cnf, 3247, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Join Req, 3248, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Join Cnf, 3249, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Start DTMF Req, 3250, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Start DTMF Cnf, 3251, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Stop DTMF Req, 3252, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Stop DTMF Cnf, 3253, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Burst DTMF Req, 3254, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Burst DTMF Cnf, 3255, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Notification Ind, 3256, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Setup Req Param, 3257, CT, CP/Trace/PS/VDC, 
    CP VDC PSW Call Setup Req Error, 3258, CT, CP/Trace/PS/VDC, 
    CP PE_FCCCH_FRAME_TRACE_ID, 3264, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE_FCCCH_SM_TRACE_ID, 3265, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE_FCCCH_PROC_TRACE_ID, 3266, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE_ENG_LAYER2_FCCCH_MSG_TRACE_ID, 3267, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE_BCCH_FRAME_TRACE_ID, 3268, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE_BCCH_SM_TRACE_ID, 3269, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE_BCCH_PROC_TRACE_ID, 3270, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP PE_ENG_LAYER2_BCCH_MSG_TRACE_ID, 3271, CT, CP/Trace/PS/Call Proc/Engine/LAC, 
    CP_PSW_RADIO_CONFIG_MSG_TRACE_ID, 3272, CT, CP/Trace/PS/Call Proc/Wrapper, 
    CP_PS_PDCH_LEVEL_1_TRACES________________, 3280, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_ECAM_ADD_PILOTREC_ERR_TRACE_ID, 3281, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_ECAM_ENC_MSGINT_PLCM_ERR_TRACE_ID, 3282, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_ECAM_BANDCLASS_ERR_TRACE_ID, 3283, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_ECAM_GRANTMODE_ERR_TRACE_ID, 3284, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_ECAM_MSPDCHSUPP_ERR_TRACE_ID, 3285, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_ECAM_PDCHRC_ERR_TRACE_ID, 3286, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_ECAM_EXTCHIND_ERR_TRACE_ID, 3287, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_ECAM_FCH_DCCH_RC_SUPP_ERR_TRACE_ID, 3288, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_ECAM_BADSTATE_ERR_TRACE_ID, 3289, CT, CP/Trace/PS/PDCH, 
    CP_PE_PDCH_N5M_GOOD_FRAMES_TIMEOUT_TRACE_ID, 3290, CT, CP/Trace/PS/PDCH, 
    CP_PE_PDCH_IS2K_BSACK_TIMEOUT_TRACE_ID, 3291, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_PEND_MSG_CHK_FAIL_ERR_TRACE_ID, 3292, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_LCM_ERR_TRACE_ID, 3293, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_ENCMODE_CHK_FAIL_ERR_TRACE_ID, 3294, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_BANDCLASS_ERR_TRACE_ID, 3295, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_FREQ_ERR_TRACE_ID, 3296, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_SERVCFG_ERR_TRACE_ID, 3297, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_SERVCFG_NN_ERR_TRACE_ID, 3298, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_PWRCTLSTEP_ERR_TRACE_ID, 3299, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_CHIND_ERR_TRACE_ID, 3300, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_NUMPILOTS_ERR_TRACE_ID, 3301, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_ADDPILOTRECTYPE_ERR_TRACE_ID, 3302, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_3XINFO_ERR_TRACE_ID, 3303, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_CCSHINFO_ERR_TRACE_ID, 3304, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_SYNCID_ERR_TRACE_ID, 3305, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_CCINFO_ERR_TRACE_ID, 3306, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_ESNPLCM_ERR_TRACE_ID, 3307, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_UHDM_TTDROPRANGE_ERR_TRACE_ID, 3308, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_RATCHGM_PEND_MSG_CHK_FAIL_ERR_TRACE_ID, 3309, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_RATCHGM_EOM_FAIL_ERR_TRACE_ID, 3310, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_ERM_PEND_MSG_CHK_FAIL_ERR_TRACE_ID, 3311, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_ERM_CHM_UNSUPPORTED_ERR_TRACE_ID, 3312, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_SCC_PDCHSUPP_ERR_TRACE_ID, 3313, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_SCC_PDCHMUX_ERR_TRACE_ID, 3314, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_SCC_PDCHRC_ERR_TRACE_ID, 3315, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_LEVEL_2_TRACES________________, 3328, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_IS2K_ESPM_MSG_FLOW_TRACE_ID, 3329, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_IS2K_MCRRPM_MSG_FLOW_TRACE_ID, 3330, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_IS2K_ORIG_MSG_FLOW_TRACE_ID, 3331, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_IS2K_PAGERSP_MSG_FLOW_TRACE_ID, 3332, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_IS2K_ECAM_MSG_FLOW_TRACE_ID, 3333, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_PDCH_PARAMS_MSG_FLOW_TRACE_ID, 3334, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_TRAFFIC_CHAN_START_MSG_FLOW_TRACE_ID, 3335, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_LMD_TRAFFIC_CHAN_START_MSG_FLOW_TRACE_ID, 3336, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_REVERSE_POWER_SET_MSG_FLOW_TRACE_ID, 3337, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_IS2K_N5M_GOOD_FRAMES_MSG_FLOW_TRACE_ID, 3338, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_RESOURCE_REQ_MSG_FLOW_TRACE_ID, 3339, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_IS2K_BSACK_MSG_FLOW_TRACE_ID, 3340, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_IS2K_MSACK_MSG_FLOW_TRACE_ID, 3341, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_IS2K_SERVICE_CONNECT_MSG_FLOW_TRACE_ID, 3342, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_SERVICE_CONFIG_MSG_FLOW_TRACE_ID, 3343, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_LMD_SERVICE_CONFIG_MSG_FLOW_TRACE_ID, 3344, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_SERVICE_CONFIG_NN_MSG_FLOW_TRACE_ID, 3345, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_LMD_SERVICE_CONFIG_NN_MSG_FLOW_TRACE_ID, 3346, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_PSW_TC_CONFIG_MSG_FLOW_TRACE_ID, 3347, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_IS2K_SERVCONNCPLT_MSG_FLOW_TRACE_ID, 3348, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_IS2K_UHDM_MSG_FLOW_TRACE_ID, 3349, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_SOFT_HANDOFF_MSG_FLOW_TRACE_ID, 3350, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_HARD_HANDOFF_MSG_FLOW_TRACE_ID, 3351, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_LMD_RESOURCE_UPDATE_MSG_FLOW_TRACE_ID, 3352, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_PSW_HO_COMPLETE_MSG_FLOW_TRACE_ID, 3353, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_IS2K_HOCOMPLETE_MSG_FLOW_TRACE_ID, 3354, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_IS2K_RATCHGM_MSG_FLOW_TRACE_ID, 3355, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_ACKCQICH_RATE_CHANGE_MSG_FLOW_TRACE_ID, 3356, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_RSR_DEALLOC_MSG_FLOW_TRACE_ID, 3357, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_LEVEL_3_TRACES________________, 3368, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_PDCH_PARAMS_A_MSG_TRACE_ID, 3369, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_PDCH_PARAMS_B_MSG_TRACE_ID, 3370, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_PDCH_PARAMS_C_MSG_TRACE_ID, 3371, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_TRAFFIC_CHAN_START_A_MSG_TRACE_ID, 3372, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_TRAFFIC_CHAN_START_B_MSG_TRACE_ID, 3373, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_LMD_TRAFFIC_CHAN_START_A_MSG_TRACE_ID, 3374, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_LMD_TRAFFIC_CHAN_START_B_MSG_TRACE_ID, 3375, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_REVERSE_POWER_SET_MSG_TRACE_ID, 3376, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_SERVICE_CONFIG_MSG_TRACE_ID, 3377, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_LMD_SERVICE_CONFIG_MSG_TRACE_ID, 3378, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_SERVICE_CONFIG_NN_MSG_TRACE_ID, 3379, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_LMD_SERVICE_CONFIG_NN_MSG_TRACE_ID, 3380, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_SOFT_HANDOFF_A_MSG_TRACE_ID, 3381, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_SOFT_HANDOFF_B_MSG_TRACE_ID, 3382, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_HARD_HANDOFF_A_MSG_TRACE_ID, 3383, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_HARD_HANDOFF_B_MSG_TRACE_ID, 3384, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_ACKCQICH_RATE_CHANGE_A_MSG_TRACE_ID, 3385, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_ACKCQICH_RATE_CHANGE_B_MSG_TRACE_ID, 3386, CT, CP/Trace/PS/PDCH, 
    CP_PS_PDCH_L1D_RSR_DEALLOC_MSG_TRACE_ID, 3387, CT, CP/Trace/PS/PDCH, 
    CP_PS_RELA_B_C_LEVEL_1_TRACES________________, 3400, CT, CP/Trace/PS/REL_A_B_C, 
    CP_PS_RELA_B_C_ECAM_GRANTM_ENCM_ERR_TRACE_ID, 3401, CT, CP/Trace/PS/REL_A_B_C, 
    CP_PS_RELA_B_C_ECAM_3X_ERR_TRACE_ID, 3402, CT, CP/Trace/PS/REL_A_B_C, 
    CP_PS_RELA_B_C_ECAM_BANDCLASS_ERR_TRACE_ID, 3403, CT, CP/Trace/PS/REL_A_B_C, 
    CP_PS_RELA_B_C_ECAM_DEF_CFG_ERR_TRACE_ID, 3404, CT, CP/Trace/PS/REL_A_B_C, 
    CP_PS_RELA_B_C_ECAM_RC_ERR_TRACE_ID, 3405, CT, CP/Trace/PS/REL_A_B_C, 
    CP_PS_RELA_B_C_ECAM_FCH_DCCH_CAP_ERR_TRACE_ID, 3406, CT, CP/Trace/PS/REL_A_B_C, 
    CP_PS_RELA_B_C_SCC_FCHDCCHMUX_ERR_TRACE_ID, 3407, CT, CP/Trace/PS/REL_A_B_C, 
    CP PE SRBP EACH rate duration, 3408, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP EACH duration parms, 3409, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP ACC Correction, 3410, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP Set ACC Correction, 3411, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP RC Inter Correction, 3412, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP PE SRBP State Change, 3413, CT, CP/Trace/PS/Call Proc/Engine/SRBP, 
    CP UIM_READ_ERROR_TRACE_ID, 3800, CT, CP/Trace/UIM, 
    CP UIM_SELECT_TRACE_ID, 3801, CT, CP/Trace/UIM, 
    CP UIM Cmd Mailbox Msg Trace, 3802, CT, CP/Trace/UIM, 
    CP CSS 1X Css Api, 3416, CT, CP/Trace/CSS, 
    CP CSS 1X System Selected, 3417, CT, CP/Trace/CSS, 
    CP CSS 1X State Indication, 3418, CT, CP/Trace/CSS, 
    CP CSS 1X Scan List Data, 3419, CT, CP/Trace/CSS, 
    CP CSS 1X CRSL populated, 3420, CT, CP/Trace/CSS, 
    CP CSS 1X CRSL exhausted, 3421, CT, CP/Trace/CSS, 
    CP CSS 1X CRSL channel, 3422, CT, CP/Trace/CSS, 
    CP CSS 1X CRSL reset, 3423, CT, CP/Trace/CSS, 
    CP CSS 1X MPL populated, 3424, CT, CP/Trace/CSS, 
    CP CSS 1X MPL exhausted, 3425, CT, CP/Trace/CSS, 
    CP CSS 1X MPL channel, 3426, CT, CP/Trace/CSS, 
    CP CSS 1X MPL reset, 3427, CT, CP/Trace/CSS, 
    CP CSS 1X ISL populated, 3428, CT, CP/Trace/CSS, 
    CP CSS 1X ISL exhausted, 3429, CT, CP/Trace/CSS, 
    CP CSS 1X ISL channel, 3430, CT, CP/Trace/CSS, 
    CP CSS 1X ISL reset, 3431, CT, CP/Trace/CSS, 
    CP CSS 1X OSL populated, 3432, CT, CP/Trace/CSS, 
    CP CSS 1X OSL exhausted, 3433, CT, CP/Trace/CSS, 
    CP CSS 1X OSL channel, 3434, CT, CP/Trace/CSS, 
    CP CSS 1X OSL reset, 3435, CT, CP/Trace/CSS, 
    CP CSS 1X RSL populated, 3436, CT, CP/Trace/CSS, 
    CP CSS 1X RSL exhausted, 3437, CT, CP/Trace/CSS, 
    CP CSS 1X RSL channel, 3438, CT, CP/Trace/CSS, 
    CP CSS 1X RSL reset, 3439, CT, CP/Trace/CSS, 
    CP CSS 1X MRU populated, 3440, CT, CP/Trace/CSS, 
    CP CSS 1X MRU exhausted, 3441, CT, CP/Trace/CSS, 
    CP CSS 1X MRU channel, 3442, CT, CP/Trace/CSS, 
    CP CSS 1X MRU reset, 3443, CT, CP/Trace/CSS, 
    CP CSS 1X PRL populated, 3444, CT, CP/Trace/CSS, 
    CP CSS 1X PRL exhausted, 3445, CT, CP/Trace/CSS, 
    CP CSS 1X PRL channel, 3446, CT, CP/Trace/CSS, 
    CP CSS 1X PRL reset, 3447, CT, CP/Trace/CSS, 
    CP CSS 1X DPCL populated, 3448, CT, CP/Trace/CSS, 
    CP CSS 1X DPCL exhausted, 3449, CT, CP/Trace/CSS, 
    CP CSS 1X DPCL channel, 3450, CT, CP/Trace/CSS, 
    CP CSS 1X DPCL reset, 3451, CT, CP/Trace/CSS, 
    CP CSS 1X GSL populated, 3452, CT, CP/Trace/CSS, 
    CP CSS 1X GSL exhausted, 3453, CT, CP/Trace/CSS, 
    CP CSS 1X GSL channel, 3454, CT, CP/Trace/CSS, 
    CP CSS 1X GSL reset, 3455, CT, CP/Trace/CSS, 
    CP CSS 1X SRSL populated, 3456, CT, CP/Trace/CSS, 
    CP CSS 1X SRSL exhausted, 3457, CT, CP/Trace/CSS, 
    CP CSS 1X SRSL channel, 3458, CT, CP/Trace/CSS, 
    CP CSS 1X SRSL reset, 3459, CT, CP/Trace/CSS, 
    CP CSS 1X Last Registered channel, 3460, CT, CP/Trace/CSS, 
    CP CSS 1X Last Saved channel, 3461, CT, CP/Trace/CSS, 
    CP CSS 1X System Lost channel, 3462, CT, CP/Trace/CSS, 
    CP CSS 1X System Redirected channel, 3463, CT, CP/Trace/CSS, 
    CP CSS 1X Save Last System, 3464, CT, CP/Trace/CSS, 
    CP CSS 1X Save System Lost, 3465, CT, CP/Trace/CSS, 
    CP CSS 1X Save System Redirected, 3466, CT, CP/Trace/CSS, 
    CP CSS 1X Save System Rejected, 3467, CT, CP/Trace/CSS, 
    CP CSS 1X Num of Duplicate Sids, 3468, CT, CP/Trace/CSS, 
    CP CSS 1X Dup Sids Index and Geo, 3469, CT, CP/Trace/CSS, 
    CP CSS 1X Num of Last Saved Duplicate Sids, 3470, CT, CP/Trace/CSS, 
    CP CSS 1X Last Saved Dup Sids Index and Geo, 3471, CT, CP/Trace/CSS, 
    CP CSS 1X Build List, 3472, CT, CP/Trace/CSS, 
    CP CSS 1X System Preference, 3473, CT, CP/Trace/CSS, 
    CP CSS 1X Call Pending, 3474, CT, CP/Trace/CSS, 
    CP CSS 1X Pend Call, 3475, CT, CP/Trace/CSS, 
    CP CSS 1X Reset Pend Call, 3476, CT, CP/Trace/CSS, 
    CP CSS 1X Validation State, 3477, CT, CP/Trace/CSS, 
    CP CSS 1X CDMA Service, 3478, CT, CP/Trace/CSS, 
    CP CSS 1X AMPS Service, 3479, CT, CP/Trace/CSS, 
    CP CSS 1X No Service, 3480, CT, CP/Trace/CSS, 
    CP CSS 1X SVSM SM, 3481, CT, CP/Trace/CSS, 
    CP CSS 1X System Select Request, 3482, CT, CP/Trace/CSS, 
    CP CSS 1X System Select Response, 3483, CT, CP/Trace/CSS, 
    CP CSS 1X Validate Response, 3484, CT, CP/Trace/CSS, 
    CP CSS 1X Channel Scanned, 3485, CT, CP/Trace/CSS, 
    CP CSS 1X Validate Status, 3486, CT, CP/Trace/CSS, 
    CP CSS 1X SVSM Select Request Info, 3487, CT, CP/Trace/CSS, 
    CP CSS 1X SRLTE populated, 3488, CT, CP/Trace/CSS, 
    CP CSS 1X SRLTE exhausted, 3489, CT, CP/Trace/CSS, 
    CP CSS 1X SRLTE channel, 3490, CT, CP/Trace/CSS, 
    CP CSS 1X SRLTE reset, 3491, CT, CP/Trace/CSS, 
    CP CSS 1X service state, 3492, CT, CP/Trace/CSS, 
    CP CSS 1X APACS validation, 3494, CT, CP/Trace/CSS, 
    CP CSS 1X Camped System Info, 3495, CT, CP/Trace/CSS, 
    CP CSS Roam Indicator, 3512, CT, CP/Trace/CSS, 
    CP CSS Start Timer, 3513, CT, CP/Trace/CSS, 
    CP CSS Stop Timer, 3514, CT, CP/Trace/CSS, 
    CP CSS Timer Started, 3515, CT, CP/Trace/CSS, 
    CP CSS Timer Stopped, 3516, CT, CP/Trace/CSS, 
    CP CSS Timer Expired, 3517, CT, CP/Trace/CSS, 
    CP CSS EPRL Enter Paging, 3518, CT, CP/Trace/CSS, 
    CP CSS Lost System Ping Frequency, 3519, CT, CP/Trace/CSS, 
    CP CSS Check Prl Format, 3520, CT, CP/Trace/CSS, 
    CP CSS UIM CPrl, 3521, CT, CP/Trace/CSS, 
    CP CSS PRL Enter Hash Table Full, 3522, CT, CP/Trace/CSS, 
    CP CSS PRL Enter Hash Sys Record, 3523, CT, CP/Trace/CSS, 
    CP CSS PRL Search Hash By Sid, 3524, CT, CP/Trace/CSS, 
    CP CSS PRL Search Found Sys Rec, 3525, CT, CP/Trace/CSS, 
    CP CSS PRL Match Sid Wildcard Nid, 3526, CT, CP/Trace/CSS, 
    CP CSS PRL Match Sid Preferred, 3527, CT, CP/Trace/CSS, 
    CP CSS PRL Match Sid VZW Band, 3528, CT, CP/Trace/CSS, 
    CP CSS PRL Match Sid Exact Nid, 3529, CT, CP/Trace/CSS, 
    CP CSS CMD Mailbox Msg, 3530, CT, CP/Trace/CSS, 
    CP CSS Rpt 1X Event, 3531, CT, CP/Trace/CSS, 
    CP CSS OOSA Event, 3532, CT, CP/Trace/CSS, 
    CP CSS Common Debug, 3533, CT, CP/Trace/CSS, 
    CP CSS PRL Header Info, 3534, CT, CP/Trace/CSS, 
    CP CSS DO Css Api, 3544, CT, CP/Trace/CSS, 
    CP CSS DO System Selected, 3545, CT, CP/Trace/CSS, 
    CP CSS DO State Indication, 3546, CT, CP/Trace/CSS, 
    CP CSS DO Scan List Data, 3547, CT, CP/Trace/CSS, 
    CP CSS DO MPSL populated, 3548, CT, CP/Trace/CSS, 
    CP CSS DO MPSL exhausted, 3549, CT, CP/Trace/CSS, 
    CP CSS DO MPSL channel, 3550, CT, CP/Trace/CSS, 
    CP CSS DO MPSL reset, 3551, CT, CP/Trace/CSS, 
    CP CSS DO MPL populated, 3552, CT, CP/Trace/CSS, 
    CP CSS DO MPL exhausted, 3553, CT, CP/Trace/CSS, 
    CP CSS DO MPL channel, 3554, CT, CP/Trace/CSS, 
    CP CSS DO MPL reset, 3555, CT, CP/Trace/CSS, 
    CP CSS DO ISL populated, 3556, CT, CP/Trace/CSS, 
    CP CSS DO ISL exhausted, 3557, CT, CP/Trace/CSS, 
    CP CSS DO ISL channel, 3558, CT, CP/Trace/CSS, 
    CP CSS DO ISL reset, 3559, CT, CP/Trace/CSS, 
    CP CSS DO OSL populated, 3560, CT, CP/Trace/CSS, 
    CP CSS DO OSL exhausted, 3561, CT, CP/Trace/CSS, 
    CP CSS DO OSL channel, 3562, CT, CP/Trace/CSS, 
    CP CSS DO OSL reset, 3563, CT, CP/Trace/CSS, 
    CP CSS DO RSL populated, 3564, CT, CP/Trace/CSS, 
    CP CSS DO RSL exhausted, 3565, CT, CP/Trace/CSS, 
    CP CSS DO RSL channel, 3566, CT, CP/Trace/CSS, 
    CP CSS DO RSL reset, 3567, CT, CP/Trace/CSS, 
    CP CSS DO MRU populated, 3568, CT, CP/Trace/CSS, 
    CP CSS DO MRU exhausted, 3569, CT, CP/Trace/CSS, 
    CP CSS DO MRU channel, 3570, CT, CP/Trace/CSS, 
    CP CSS DO MRU reset, 3571, CT, CP/Trace/CSS, 
    CP CSS DO PRL populated, 3572, CT, CP/Trace/CSS, 
    CP CSS DO PRL exhausted, 3573, CT, CP/Trace/CSS, 
    CP CSS DO PRL channel, 3574, CT, CP/Trace/CSS, 
    CP CSS DO PRL reset, 3575, CT, CP/Trace/CSS, 
    CP CSS DO DPCL populated, 3576, CT, CP/Trace/CSS, 
    CP CSS DO DPCL exhausted, 3577, CT, CP/Trace/CSS, 
    CP CSS DO DPCL channel, 3578, CT, CP/Trace/CSS, 
    CP CSS DO DPCL reset, 3579, CT, CP/Trace/CSS, 
    CP CSS DO GSL populated, 3580, CT, CP/Trace/CSS, 
    CP CSS DO GSL exhausted, 3581, CT, CP/Trace/CSS, 
    CP CSS DO GSL channel, 3582, CT, CP/Trace/CSS, 
    CP CSS DO GSL reset, 3583, CT, CP/Trace/CSS, 
    CP CSS DO ADOSL populated, 3584, CT, CP/Trace/CSS, 
    CP CSS DO ADOSL exhausted, 3585, CT, CP/Trace/CSS, 
    CP CSS DO ADOSL channel, 3586, CT, CP/Trace/CSS, 
    CP CSS DO ADOSL reset, 3587, CT, CP/Trace/CSS, 
    CP CSS DO SRSL populated, 3588, CT, CP/Trace/CSS, 
    CP CSS DO SRSL exhausted, 3589, CT, CP/Trace/CSS, 
    CP CSS DO SRSL channel, 3590, CT, CP/Trace/CSS, 
    CP CSS DO SRSL reset, 3591, CT, CP/Trace/CSS, 
    CP CSS DO ASMPL populated, 3592, CT, CP/Trace/CSS, 
    CP CSS DO ASMPL exhausted, 3593, CT, CP/Trace/CSS, 
    CP CSS DO ASMPL channel, 3594, CT, CP/Trace/CSS, 
    CP CSS DO ASMPL reset, 3595, CT, CP/Trace/CSS, 
    CP CSS DO ADOLOSL populated, 3596, CT, CP/Trace/CSS, 
    CP CSS DO ADOLOSL exhausted, 3597, CT, CP/Trace/CSS, 
    CP CSS DO ADOLOSL channel, 3598, CT, CP/Trace/CSS, 
    CP CSS DO ADOLOSL reset, 3599, CT, CP/Trace/CSS, 
    CP CSS DO PRLOSL populated, 3600, CT, CP/Trace/CSS, 
    CP CSS DO PRLOSL exhausted, 3601, CT, CP/Trace/CSS, 
    CP CSS DO PRLOSL channel, 3602, CT, CP/Trace/CSS, 
    CP CSS DO PRLOSL reset, 3603, CT, CP/Trace/CSS, 
    CP CSS DO GLOSL populated, 3604, CT, CP/Trace/CSS, 
    CP CSS DO GLOSL exhausted, 3605, CT, CP/Trace/CSS, 
    CP CSS DO GLOSL channel, 3606, CT, CP/Trace/CSS, 
    CP CSS DO GLOSL reset, 3607, CT, CP/Trace/CSS, 
    CP CSS DO Last Registered channel, 3608, CT, CP/Trace/CSS, 
    CP CSS DO Last Saved channel, 3609, CT, CP/Trace/CSS, 
    CP CSS DO System Lost channel, 3610, CT, CP/Trace/CSS, 
    CP CSS DO System Redirected channel, 3611, CT, CP/Trace/CSS, 
    CP CSS DO Save Last System, 3612, CT, CP/Trace/CSS, 
    CP CSS DO Save System Lost, 3613, CT, CP/Trace/CSS, 
    CP CSS DO Save System Redirected, 3614, CT, CP/Trace/CSS, 
    CP CSS DO Save System Rejected, 3615, CT, CP/Trace/CSS, 
    CP CSS DO Num of Duplicate Subnets, 3616, CT, CP/Trace/CSS, 
    CP CSS DO Dup Subnets Index and Geo, 3617, CT, CP/Trace/CSS, 
    CP CSS DO Num of Last Saved Duplicate Sids, 3618, CT, CP/Trace/CSS, 
    CP CSS DO Last Saved Dup Subnets Index and Geo, 3619, CT, CP/Trace/CSS, 
    CP CSS DO Build List, 3620, CT, CP/Trace/CSS, 
    CP CSS DO System Acquired, 3621, CT, CP/Trace/CSS, 
    CP CSS DO Call Pending, 3622, CT, CP/Trace/CSS, 
    CP CSS DO Pend Call, 3623, CT, CP/Trace/CSS, 
    CP CSS DO Reset Pend Call, 3624, CT, CP/Trace/CSS, 
    CP CSS DO Validation State, 3625, CT, CP/Trace/CSS, 
    CP CSS DO CDMA Service, 3626, CT, CP/Trace/CSS, 
    CP CSS DO No Service, 3627, CT, CP/Trace/CSS, 
    CP CSS DO SVSM SM, 3628, CT, CP/Trace/CSS, 
    CP CSS DO System Select Request, 3629, CT, CP/Trace/CSS, 
    CP CSS DO System Select Response, 3630, CT, CP/Trace/CSS, 
    CP CSS DO Validate Response, 3631, CT, CP/Trace/CSS, 
    CP CSS DO Channel Scanned, 3632, CT, CP/Trace/CSS, 
    CP CSS DO Session Status, 3633, CT, CP/Trace/CSS, 
    CP CSS Service Rsp Pended Status, 3634, CT, CP/Trace/CSS, 
    CP CSS DO OOSA Scanning Status, 3635, CT, CP/Trace/CSS, 
    CP CSS State In HLP Service Query, 3636, CT, CP/Trace/CSS, 
    CP CSS DO Scan Slot Number Indication, 3637, CT, CP/Trace/CSS, 
    CP CSS DO service state, 3638, CT, CP/Trace/CSS, 
    CP CSS DBM Generic, 3639, CT, CP/Trace/CSS, 
    CP CSS SEND OUT MSG, 3640, CT, CP/Trace/CSS, 
    CP CSSIRAT FUNCTION, 3641, CT, CP/Trace/CSS, 
    CP CSSPWR Power Up State, 3642, CT, CP/Trace/CSS, 
    CP CSSPWR Uicc Read State, 3643, CT, CP/Trace/CSS, 
    CP CSSPWR Process State, 3644, CT, CP/Trace/CSS, 
    CP CSS DO APACS validation, 3645, CT, CP/Trace/CSS, 
    CP IRAT Message, 3664, CT, CP/Trace/IRAT, 
    CP IRAT 1XState, 3665, CT, CP/Trace/IRAT, lite, 
    CP IRAT DOState, 3666, CT, CP/Trace/IRAT, lite, 
    CP IRAT 1XAction, 3667, CT, CP/Trace/IRAT, lite, 
    CP IRAT DOAction, 3668, CT, CP/Trace/IRAT, lite, 
    CP IRAT Command Pend, 3669, CT, CP/Trace/IRAT, lite, 
    CP IRAT DO Session Event, 3670, CT, CP/Trace/IRAT, lite, 
    CP IRAT Global Para, 3671, CT, CP/Trace/IRAT, lite, 
    CP IRAT MCC, 3672, CT, CP/Trace/IRAT, lite, 
    CP IRAT 1X Srlte Scanning Type, 3673, CT, CP/Trace/IRAT, lite, 
    CP IRAT DO Srlte Scanning Type, 3674, CT, CP/Trace/IRAT, lite, 
    CP MMC CMD MBOX MSG TRACE, 3696, CT, CP/Trace/MMC, 
    CP MMC ENGINE MESSAGE ID, 3697, CT, CP/Trace/MMC, 
    CP MMC MBIM MSG ID TRACE, 3698, CT, CP/Trace/MMC, 
    CP MMC TIMER START TRACE, 3699, CT, CP/Trace/MMC, 
    CP MMC TIMER STOP TRACE, 3700, CT, CP/Trace/MMC, 
    CP MMC TIMER EXPIRED TRACE, 3701, CT, CP/Trace/MMC, 
    CP MMC PKT MESSAGE ID, 3702, CT, CP/Trace/MMC, 
    CP MMC PKT STATE TRANSITION MSG TRACE, 3703, CT, CP/Trace/MMC, 
    CP MMC PKT PS STATE IND TRACE, 3704, CT, CP/Trace/MMC, 
    CP MMC PKT PS STATUS IND TRACE, 3705, CT, CP/Trace/MMC, 
    CP MMC PKT PS REQ TRACE, 3706, CT, CP/Trace/MMC, 
    CP MMC PKT AP CALL SETUP TRACE, 3707, CT, CP/Trace/MMC, 
    CP MMC PKT AP DEDICATED BEARER SETUP TRACE, 3708, CT, CP/Trace/MMC, 
    CP MMC PKT DATA CMD RSP TRACE, 3709, CT, CP/Trace/MMC, 
    CP MMC PKT DEFAULT BEARER RSP TRACE, 3710, CT, CP/Trace/MMC, 
    CP MMC PKT DEDICATED BEARER IND TRACE, 3711, CT, CP/Trace/MMC, 
    CP MMC PKT DEDICATED BEARER RSP TRACE, 3712, CT, CP/Trace/MMC, 
    CP MMC PKT BEARER DISCONNECT RSP TRACE, 3713, CT, CP/Trace/MMC, 
    CP MMC PKT BEARER DISCONNECT IND TRACE, 3714, CT, CP/Trace/MMC, 
    CP MMC PKT BEARER DETACH RSP TRACE, 3715, CT, CP/Trace/MMC, 
    CP MMC PKT HRPD1X CONNECT RSP TRACE, 3716, CT, CP/Trace/MMC, 
    CP MMC PKT DUPLICATED PDN ATTACH TRACE, 3717, CT, CP/Trace/MMC, 
    CP MMC PKT BUFFERED PS CONN TRACE, 3718, CT, CP/Trace/MMC, 
    CP MMC PKT SET PDN STATUS TRACE, 3719, CT, CP/Trace/MMC, 
    CP MMC PKT DETACH REQ TRACE, 3720, CT, CP/Trace/MMC, 
    CP MMC PKT SET SERVING NETWORK TRACE, 3721, CT, CP/Trace/MMC, 
    CP MMC LTE PKT DATA CMD TRACE, 3722, CT, CP/Trace/MMC, 
    CP MMC CDMA PKT DATA CMD TRACE, 3723, CT, CP/Trace/MMC, 
    CP MMC PKT HO CNF TRACE, 3724, CT, CP/Trace/MMC, 
    CP MMC RPC LTE PKT DATACMD REQ TRACE, 3725, CT, CP/Trace/MMC, 
    CP MMC RPC LTE PKT DEFAULT BEARER REQ, 3726, CT, CP/Trace/MMC, 
    CP MMC RPC LTE PKT DEDICATED BEARER REQ, 3727, CT, CP/Trace/MMC, 
    CP MMC RPC LTE PKT BEARER DISCONNECT REQ, 3728, CT, CP/Trace/MMC, 
    CP MMC RPC LTE PKT BEARER DETACH REQ, 3729, CT, CP/Trace/MMC, 
    CP MMC RPC PKT LTE DATACMD RSP, 3730, CT, CP/Trace/MMC, 
    CP MMC RPC PKT LTE DEFAULT BEARER RSP, 3731, CT, CP/Trace/MMC, 
    CP MMC RPC PKT LTE DEDICATED BEARER RSP, 3732, CT, CP/Trace/MMC, 
    CP MMC RPC PKT LTE DEDICATED BEARER IND, 3733, CT, CP/Trace/MMC, 
    CP MMC RPC PKT LTE BEARER_DISCON RSP, 3734, CT, CP/Trace/MMC, 
    CP MMC RPC PKT LTE BEARER_DISCON IND, 3735, CT, CP/Trace/MMC, 
    CP MMC RPC PKT LTE BEARER DETACH RSP, 3736, CT, CP/Trace/MMC, 
    CP MMC RPC PKT LTE SET PDN TABLE REQ, 3737, CT, CP/Trace/MMC, 
    CP MMC PKT SET UPCOMING ATTACH TYPE, 3738, CT, CP/Trace/MMC, 
    CP MMC PKT GET UPCOMING ATTACH TYPE, 3739, CT, CP/Trace/MMC, 
    CP MMC MMC_MEAS_MGR_TRACE, 3740, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_MGR_CMD_RCD_TRACE, 3741, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_MGR_CMD_TXD_TRACE, 3742, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_MGR_INVALID_SYSTEM_TRACE, 3743, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_MGR_EVENT_POSTING_FAILED_TRACE, 3744, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_MGR_MAX_NUM_EXCEEDED_TRACE, 3745, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_MGR_EVENT_HANDLING_FAILED_TRACE, 3746, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_INVALID_TIMER_EXP_TRACE, 3747, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_CDMA_IRAT_MEAS_RESULT_TRACE, 3748, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_SYS_CHANGE_RSP_TRACE, 3749, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_CDMA_SIB8_MEAS_RESULT_TRACE, 3750, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_CDMA_SIB8_MEAS_RESULT_CELL_LIST_TRACE, 3751, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_LTE_PS_REG_REQ_TRACE, 3752, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_LTE_MEAS_REQ_FROM_CDMA_TRACE, 3753, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_LTE_RESEL_MEAS_REQ_TRACE, 3754, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_CDMA_BAND_INFO_TRACE, 3755, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_CDMA_PN_ID_TRACE, 3756, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_CDMA_MEAS_SIB8_REQ_TRACE, 3757, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_CDMA_MEAS_SIB8_REQ_CELL_LIST_TRACE, 3758, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_CDMA_TRIGGER_PS_REG_FREQ_REQ_TRACE, 3759, CT, CP/Trace/MMC/COMMON, 
    CP MMC MMC_MEAS_MLC_CMD_RCD_TRACE, 3760, CT, CP/Trace/MMC/MLC, 
    CP MMC MMC_MEAS_MLC_INVALID_EVENT_TRACE, 3761, CT, CP/Trace/MMC/MLC, 
    CP MMC MMC_MEAS_MLC_EVENT_HANDLING_FAILED_TRACE, 3762, CT, CP/Trace/MMC/MLC, 
    CP MMC MMC_MEAS_MLC_EVENT_PARAMS_NULL_TRACE, 3763, CT, CP/Trace/MMC/MLC, 
    CP MMC MMC_MEAS_MLC_RESEL_CRITERIA_NOT_MET_TRACE, 3764, CT, CP/Trace/MMC/MLC, 
    CP MMC MMC_MEAS_MLC_BSR_SCAN_ON_TRACE, 3765, CT, CP/Trace/MMC/MLC, 
    CP MMC MMC_MEAS_MCC_CMD_RCD_TRACE, 3766, CT, CP/Trace/MMC/MCC, 
    CP MMC MMC_MEAS_MCC_INVALID_EVENT_TRACE, 3767, CT, CP/Trace/MMC/MCC, 
    CP MMC MMC_MEAS_MCC_INVALID_CMD_TRACE, 3768, CT, CP/Trace/MMC/MCC, 
    CP MMC MMC_MEAS_MCC_EVENT_PARAMS_NULL_TRACE, 3769, CT, CP/Trace/MMC/MCC, 
    CP MMC MMC_MEAS_MCC_EVENT_PARAMS_INVALID_TRACE, 3770, CT, CP/Trace/MMC/MCC, 
    CP MMC MMC_MEAS_MCC_MAX_NUM_EXCEEDED_TRACE, 3771, CT, CP/Trace/MMC/MCC, 
    CP MMC MMC_MEAS_MCC_BSR_SCAN_ON_TRACE, 3772, CT, CP/Trace/MMC/MCC, 
    CP MMC MMC_MEAS_CMD_RECEIVE_TRACE, 3773, CT, CP/Trace/MMC/MEAS, 
    CP MMC MMC_MEAS_EVENT_PARAM_NULL_TRACE, 3774, CT, CP/Trace/MMC/MEAS, 
    CP MMC MMC_MEAS_MAX_NUM_EXCEED_TRACE, 3775, CT, CP/Trace/MMC/MEAS, 
    CP MMC MMC_MEAS_IVALID_EVENT_TRACE, 3776, CT, CP/Trace/MMC/MEAS, 
    CP MMC MMC_MEAS_EVENT_PARAMS_INVALID_TRACE, 3777, CT, CP/Trace/MMC/MEAS, 
    CP MMC MMC_MEAS_MEAS_INFO_TRACE, 3778, CT, CP/Trace/MMC/MEAS, 
    CP MMC MMC_MEAS_RESEL_MEAS_INFO_TRACE, 3779, CT, CP/Trace/MMC/MEAS, 
    CP MMC MMC_MEAS_SYSTEM_CHANGE_TRACE, 3780, CT, CP/Trace/MMC/MEAS, 
    CP MMC MMC_MEAS_HANDOVER_REQ_TRACE, 3781, CT, CP/Trace/MMC/MEAS, 
    CP MMC GMSS MSG HANDLER, 3782, CT, CP/Trace/MMC/GMSS, 
    CP MMC GMSS ST CHG, 3783, CT, CP/Trace/MMC/GMSS, 
    CP MMC GMSS UICC STATUS, 3784, CT, CP/Trace/MMC/GMSS, 
    CP MMC GMSS PKT, 3785, CT, CP/Trace/MMC/GMSS, 
    CP MMC GMSS MEAS, 3786, CT, CP/Trace/MMC/GMSS, 
    CP MMC GMSS DBM, 3787, CT, CP/Trace/MMC/GMSS, 
    CP MMC GMSS FUNCTION, 3788, CT, CP/Trace/MMC/GMSS, 
    CP MMC GMSS RAT API, 3789, CT, CP/Trace/MMC/GMSS, 
    CP MMC GMSS SEND AP API, 3790, CT, CP/Trace/MMC/GMSS, 
    CP MMC TEST TRACE, 3791, CT, CP/Trace/MMC/GMSS, 
    CP SEC MSGID TRACE, 4747, CT, CP/Trace/SEC, 
    CP HSC MsgId, 4096, CT, CP/Trace/HSC, 
    CP HSC Error, 4097, CT, CP/Trace/HSC, 
    CP HSC Warning, 4098, CT, CP/Trace/HSC, 
    CP HSC Generic, 4099, CT, CP/Trace/HSC, 
    CP HSC DO Mini-Acq, 4100, CT, CP/Trace/HSC, 
    CP HSC Resync, 4101, CT, CP/Trace/HSC, 
    CP HSC SPage, 4102, CT, CP/Trace/HSC, 
    CP HSC Mpa, 4103, CT, CP/Trace/HSC, 
    CP HSC Stop DoTx, 4104, CT, CP/Trace/HSC, 
    CP HSC Clk Cal, 4105, CT, CP/Trace/HSC, 
    CP HSC Oosa, 4106, CT, CP/Trace/HSC, 
    CP HSC Shdr Svdo, 4107, CT, CP/Trace/HSC, 
    CP HSC Rm, 4108, CT, CP/Trace/HSC, 
    CP SLC MSGID TRACE, 4112, CT, CP/Trace/SLC, lite, 
    CP GCP TIMER STATUS, 4113, CT, CP/Trace/SLC/GCP, 
    CP GCP TX FAIL STATUS, 4114, CT, CP/Trace/SLC/GCP, 
    CP GCP TRANSACTION REC, 4115, CT, CP/Trace/SLC/GCP, 
    CP GCP SEND OTA MSG TRACE, 4116, CT, CP/Trace/SLC/GCP, 
    CP DSCP GAUP TIMER STATUS, 4120, CT, CP/Trace/SLC/DSCP, 
    CP DSCP GAUP TX FAIL, 4121, CT, CP/Trace/SLC/DSCP, 
    CP DSCP INVALID GAUP REQ MSG, 4122, CT, CP/Trace/SLC/DSCP, 
    CP DSCP INVALID CONFIGURABLE ATTR ID, 4123, CT, CP/Trace/SLC/DSCP, 
    CP DSCP INVALID COMPLEX ATTR VALUE ID, 4124, CT, CP/Trace/SLC/DSCP, 
    CP DSCP STATE CHANGE, 4125, CT, CP/Trace/SLC/DSCP, 
    CP DSCP RCV OTA MSG TRACE, 4126, CT, CP/Trace/SLC/DSCP, 
    CP DSCP SEND OTA MSG TRACE, 4127, CT, CP/Trace/SLC/DSCP, 
    CP DSCP IGNORED MSG, 4128, CT, CP/Trace/SLC/DSCP, 
    CP DSCP INACTIVE ST HANDLE, 4129, CT, CP/Trace/SLC/DSCP, 
    CP DSCP OPEN ST HANDLE, 4130, CT, CP/Trace/SLC/DSCP, 
    CP DSCP AT-INIT ST HANDLE, 4131, CT, CP/Trace/SLC/DSCP, 
    CP DSCP AN-INIT ST HANDLE, 4132, CT, CP/Trace/SLC/DSCP, 
    CP DSCP PROTOCOL CONFIG FAIL, 4133, CT, CP/Trace/SLC/DSCP, 
    CP DSCP CONNECTION STATUS, 4134, CT, CP/Trace/SLC/DSCP, 
    CP DSCP PROTOCOL RECONFIGURED IND, 4135, CT, CP/Trace/SLC/DSCP, 
    CP DSCP ASSEMBLE CONFIG REQ, 4136, CT, CP/Trace/SLC/DSCP, 
    CP DSCP RESTORE SESSION FAIL TRACE, 4137, CT, CP/Trace/SLC/DSCP, 
    CP DSCP RESTORE INSTANCE FROM PERSONALITY, 4138, CT, CP/Trace/SLC/DSCP, 
    CP DSCP CONFIG FAILED, 4139, CT, CP/Trace/SLC/DSCP, 
    CP DSCP RESTORE INSTANCE SUCCESS, 4140, CT, CP/Trace/SLC/DSCP, 
    CP DSCP COMMITTING, 4141, CT, CP/Trace/SLC/DSCP, 
    CP DSCP COMMIT DONE, 4142, CT, CP/Trace/SLC/DSCP, 
    CP DSCP UPDATE STR APP, 4143, CT, CP/Trace/SLC/DSCP, 
    CP DSCP KEP STATUS, 4144, CT, CP/Trace/SLC/DSCP, 
    CP DSCP PROTOCOL REQUESTED CONFIG START, 4145, CT, CP/Trace/SLC/DSCP, 
    CP DSCP PROTOCOL REQUEST CONFIG, 4146, CT, CP/Trace/SLC/DSCP, 
    CP DSCP AN CONFIG REQ, 4147, CT, CP/Trace/SLC/DSCP, 
    CP DSCP AN CONFIG RSP, 4148, CT, CP/Trace/SLC/DSCP, 
    CP DSCP SOFT CONFIG COMPLETE, 4149, CT, CP/Trace/SLC/DSCP, 
    CP DSCP CONFIG COMPLETE, 4150, CT, CP/Trace/SLC/DSCP, 
    CP DSCP DELETE PERSONALITY, 4151, CT, CP/Trace/SLC/DSCP, 
    CP DSCP RECONFIG CNF WAIT TIMER STATUS, 4152, CT, CP/Trace/SLC/DSCP, 
    CP DSCP AN INIT ST WAIT REQ TIMER STATUS, 4153, CT, CP/Trace/SLC/DSCP, 
    CP DSCP START RESTORE PRIOR SESSION, 4154, CT, CP/Trace/SLC/DSCP, 
    CP DSCP START CONFIG ALL PROTOCOLS, 4155, CT, CP/Trace/SLC/DSCP, 
    CP DSCP CONNECTION CONTROL, 4156, CT, CP/Trace/SLC/DSCP, 
    CP DSCP HANDLE CONFIG RSP, 4157, CT, CP/Trace/SLC/DSCP, 
    CP DSCP HANDLE CONFIG REQ, 4158, CT, CP/Trace/SLC/DSCP, 
    CP DSCP SAVE INUSE PERSONALITY, 4159, CT, CP/Trace/SLC/DSCP, 
    CP DSCP STORE PERSONALITY, 4160, CT, CP/Trace/SLC/DSCP, 
    CP DSCP UPDATE PROTOCOL PERSONALITY, 4161, CT, CP/Trace/SLC/DSCP, 
    CP DSCP CONFIG HARDLINK PROTOCOL, 4162, CT, CP/Trace/SLC/DSCP, 
    CP DSCP AN INIT ST HANDLE RECONFIG CNF, 4163, CT, CP/Trace/SLC/DSCP, 
    CP AMP STATE TRACE, 4176, CT, CP/Trace/SLC/AMP, lite, 
    CP AMP UATI ASSIGN MSG VALID SEQ TRACE, 4177, CT, CP/Trace/SLC/AMP, 
    CP AMP UATI ASSIGN MSG TIMEOUT TRACE, 4178, CT, CP/Trace/SLC/AMP, 
    CP AMP UATI ADDR TIMEOUT TRACE, 4179, CT, CP/Trace/SLC/AMP, 
    CP AMP UATI ASSIGN MSG INIT SEQ TRACE, 4180, CT, CP/Trace/SLC/AMP, 
    CP AMP SESSIONSEED TRACE, 4181, CT, CP/Trace/SLC/AMP, 
    CP SMP STATE TRACE, 4182, CT, CP/Trace/SLC/SMP, lite, 
    CP SMP CHECK KEEPALIVE TRACE, 4183, CT, CP/Trace/SLC/SMP, 
    CP SMP READ SESSIONFILE TRACE, 4184, CT, CP/Trace/SLC/SMP, 
    CP SEC DH KEY STATE TRACE, 4704, CT, CP/Trace/SLC/SEC, 
    CP SEC DH KEY RCVMSG TRACE, 4705, CT, CP/Trace/SLC/SEC, 
    CP SEC DH KEY TIMEOUT TRACE, 4706, CT, CP/Trace/SLC/SEC, 
    CP SEC DH KEY DSA FWD MSG TRACE, 4707, CT, CP/Trace/SLC/SEC, 
    CP SEC DH KEY SCP RECFG TRACE, 4708, CT, CP/Trace/SLC/SEC, 
    CP CLC MSGID TRACE, 4192, CT, CP/Trace/CLC, 
    CP OMP STATE TRACE, 4193, CT, CP/Trace/CLC, 
    CP OMP ACTIVE TRACE, 4194, CT, CP/Trace/CLC, 
    CP OMP DEACTIVE TRACE, 4195, CT, CP/Trace/CLC, 
    CP OMP IDLEHO TRACE, 4196, CT, CP/Trace/CLC, 
    CP OMP CONNCLOSED TRACE, 4197, CT, CP/Trace/CLC, 
    CP OMP OTA MESSAGE TRACE, 4198, CT, CP/Trace/CLC, 
    CP OMP QUICK CONFIG MESSAGE TRACE, 4199, CT, CP/Trace/CLC, 
    CP OMP SEC PARA MESSAGE TRACE, 4200, CT, CP/Trace/CLC, 
    CP OMP SUPV TIMER TRACE, 4201, CT, CP/Trace/CLC, 
    CP OMP OVH PARMS UP TO DATE FLAG TRACE, 4202, CT, CP/Trace/CLC, 
    CP OMP CACHE INFO TRACE, 4203, CT, CP/Trace/CLC, 
    CP IDP STATE TRACE, 4204, CT, CP/Trace/CLC, 
    CP IDP HASH RESULT TRACE, 4205, CT, CP/Trace/CLC, 
    CP IDP SLEEP INFO TRACE, 4206, CT, CP/Trace/CLC, 
    CP IDP ACM TX INFO TRACE, 4207, CT, CP/Trace/CLC, 
    CP IDP SLEEP TRACE, 4208, CT, CP/Trace/CLC, 
    CP IDP PERIODS INFO TRACE, 4209, CT, CP/Trace/CLC, 
    CP IDP T12T23 INFO TRACE, 4210, CT, CP/Trace/CLC, 
    CP INSP PILOT ACQ RSP TRACE, 4211, CT, CP/Trace/CLC, 
    CP INSP FREQ RSP TRACE, 4212, CT, CP/Trace/CLC, 
    CP RMC ASSIST PILOT ACQ REQ TRACE, 4213, CT, CP/Trace/CLC, 
    CP IDP SET HO EHRPD ENABLE, 4214, CT, CP/Trace/CLC, 
    CP ALMP IRAT MEAS REQ TRACE, 4215, CT, CP/Trace/CLC, 
    CP ALMP IRAT MEAS RSP TRACE, 4216, CT, CP/Trace/CLC, 
    CP ALMP IRAT MEAS REPORT TRACE, 4217, CT, CP/Trace/CLC, 
    CP CLC TIMER START TRACE, 4218, CT, CP/Trace/CLC, 
    CP CLC TIMER STOP TRACE, 4219, CT, CP/Trace/CLC, 
    CP CLC TIMER EXPIRED TRACE, 4220, CT, CP/Trace/CLC, 
    CP IDP ACM TX FAIL TRACE, 4221, CT, CP/Trace/CLC, 
    CP_RMC_SCH_STATUS_TRACE_ID, 4232, CT, CP/Trace/RMC/SCH, 
    CP_RMC_SCH_OUTPUT_DBG_TRACE_ID, 4233, CT, CP/Trace/RMC/SCH, 
    CP_RMC_SCH_1XASSIST_TRACE_ID, 4234, CT, CP/Trace/RMC/SCH, 
    CP_RMC_SCH_INITACQ_SRCH_TIME_SLOTS_TRACE_ID, 4235, CT, CP/Trace/RMC/SCH, 
    CP_RMC_SCH_SEC_PCG_ID_TRACE_ID, 4236, CT, CP/Trace/RMC/SCH, 
    CP_RMC_SCH_PILOT_UPDATE_TRACE_ID, 4237, CT, CP/Trace/RMC/SCH, 
    CP_RMC_SCH_IRAT_DO_MEAS_SRCHCFG_TRACE_ID, 4238, CT, CP/Trace/RMC/SCH, 
    CP_RMC_SCH_IRAT_DO_MEAS_LTE_RF_TRACE_ID, 4239, CT, CP/Trace/RMC/SCH, 
    CP_RMC_SCH_IRAT_DO_MEAS_SEND_RESULTS_TRACE_ID, 4240, CT, CP/Trace/RMC/SCH, 
    CP_RMC_SCH_IRAT_DO_MEAS_CHK_TIMER_TRACE_ID, 4241, CT, CP/Trace/RMC/SCH, 
    CP_RMC_SCH_ARTD_METRICS_TRACE_ID, 4242, CT, CP/Trace/RMC/SCH, 
    CP RMC RUP OTAMSG TRACE, 4248, CT, CP/Trace/RMC/RUP, 
    CP RMC RUP ACTIVATE TRACE, 4249, CT, CP/Trace/RMC/RUP, 
    CP RMC RUP IDLE HANDOFF TRACE, 4250, CT, CP/Trace/RMC/RUP, 
    CP RMC RUP WFT SLEEPDONE STATE TRACE, 4251, CT, CP/Trace/RMC/RUP, 
    CP RMC MSGID TRACE, 4252, CT, CP/Trace/RMC, 
    CP RMC SnRUP MSG TRACE, 4253, CT, CP/Trace/RMC/RUP, 
    CP RMC TIMER EXPIRED, 4254, CT, CP/Trace/RMC, 
    CP RMC RUP TRAFFIC HANDOFF TRACE, 4255, CT, CP/Trace/RMC/RUP, 
    CP RMC DO 1X COMPARE, 4256, CT, CP/Trace/RMC, 
    CP RMC RUP DFS TRACE, 4257, CT, CP/Trace/RMC/RUP, 
    CP RMC CSM PROCESSOR TRACE, 4264, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM CELLSW ISR TRACE, 4265, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM SERVING IS STRONGEST TRACE, 4266, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM INSTANT TEST TRACE, 4267, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM PST TEST TRACE, 4268, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM DECISION MADE TRACE, 4269, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM SCHEDULE COVER PROGRAM TRACE, 4270, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM DRC PROGRAMMED TRACE, 4271, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM DSC PROGRAMMED TRACE, 4272, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM SCHEDULE TRAFFIC STOP TRACE, 4273, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM SCHEDULE TRAFFIC RESUME TRACE, 4274, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM HYBRID NULL COVER PROGRAM TRACE, 4275, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM HYBRID FREEZE DO TRACE, 4276, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM HYBRID UNFREEZE DO TRACE, 4277, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM SERVING PN CHANGED TRACE, 4278, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM TARGET PN CHANGED TRACE, 4279, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM C2I THRESHOLDS TRACE, 4280, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM FAKE ACKING TRACE, 4281, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM FIXED RATE TRACE, 4282, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM EVENT OVERLAP TRACE, 4283, CT, CP/Trace/RMC/CSM, 
    CP RMC CSM TEST CELLSW TRACE, 4284, CT, CP/Trace/RMC/CSM, 
    CP_RMC_MBP_SECTOR_REC_TRACE_ID, 4285, CT, CP/Trace/RMC/MBP, 
    CP_RMC_MBP_PCG_RENUM_TRACE_ID, 4286, CT, CP/Trace/RMC/MBP, 
    CP_RMC_FMP_SLOTFOUND_ERROR_1_TRACE_ID, 4296, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_INSPSYNC_ERROR_1_TRACE_ID, 4297, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_INSPSYNC_ERROR_2_TRACE_ID, 4298, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_TMR_START_ERROR_TRACE_ID, 4299, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_TMR_STOP_ERROR_TRACE_ID, 4300, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_SYS_TIME_TRK_ERROR_TRACE_ID, 4301, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_DLL_BUFFER_ERROR_TRACE_ID, 4302, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FNGALGO_EMPTY_TRACE_ID, 4303, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_SCHRESULTS_ERROR_1_TRACE_ID, 4304, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_SCHRESULTS_ERROR_2_TRACE_ID, 4305, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_SCHRESULTS_ERROR_3_TRACE_ID, 4306, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_SCHRESULTS_ERROR_4_TRACE_ID, 4307, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_BUILDFNGLIST_ERROR_TRACE_ID, 4308, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FNGCFG_REG_ERROR_TRACE_ID, 4309, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FNG_TIME_TRK_TRACE_ID, 4312, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_SYS_TIME_TRK_TRACE_ID, 4313, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FNGASSIGN_TRACE_ID, 4314, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FASTTTREGISTER_TRACE_ID, 4315, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FASTTTRK_TRACE_ID, 4316, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FNGCFG_REGISTER_TRACE_ID, 4317, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FASTTTCANCEL_TRACE_ID, 4318, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_SLOTFOUND_TRACE_ID, 4319, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_INSPSYNC_STHW_TRACE_ID, 4320, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_INITACQ_OFFSET_ADJ_TRACE_ID, 4321, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_INSPSYNC_STSET_TRACE_ID, 4322, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_PROC_TRACE_ID, 4323, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_INITACQ_FNGASSIGN_TRACE_ID, 4324, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_CONNSETUP_TRACE_ID, 4325, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_NETWK_RESET_TRACE_ID, 4326, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_CONNCLOSE_TRACE_ID, 4327, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_CCSHORTPKT_TRACE_ID, 4328, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_TMR_START_TRACE_ID, 4329, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_TMR_STOP_TRACE_ID, 4330, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_COMBINING_STATUS_TRACE_ID, 4331, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_SECTOR_REC_TRACE_ID, 4332, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FNG_ALLOC_BUILD_LIST_TRACE_ID, 4333, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_EQTMR_START_TRACE_ID, 4334, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_EQTMR_STOP_TRACE_ID, 4335, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_EQ_COMB_MODE_TRACE_ID, 4336, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_EQ_SNR_AUTO_DROP_TRACE_ID, 4337, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_TEST_FMPSCHPROC0_TRACE_ID, 4338, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_INSPSYNC_1STCC_TRACE_ID, 4339, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_INSPSYNC_K1_L_K2_TRACE_ID, 4340, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FNG_NO_TIME_TRK_TRACE_ID, 4341, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FNG_TIME_TRK_ALGO_TRACE_ID, 4342, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FNGALGO_SCH_PRUNE_TRACE_ID, 4343, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FNGALGO_FNG_PRUNE_TRACE_ID, 4344, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FNGALGO_ASSIGN_TRACE_ID, 4345, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_FNGALGO_EARLYSTRONG_TRACE_ID, 4346, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_SCHRESULTS_INVALID_TRACE_ID, 4347, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_SCHRESULTS_STORED_TRACE_ID, 4348, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_EXE_BUFFER_TRACE_ID, 4349, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_EQ_TIME_TRK_ALGO_TRACE_ID, 4350, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_C2I_TRACE_ID, 4351, CT, CP/Trace/RMC/FMP, 
    CP_RMC_FMP_MMSE_MRC_TRACE_ID, 4352, CT, CP/Trace/RMC/FMP, 
    CP_RMC_RXP_TRACE_ID, 4353, CT, CP/Trace/RMC, 
    CP_RMC_MPA_TRACE_ID, 4354, CT, CP/Trace/RMC, 
    CP_RMC_DFS_TRACE_ID, 4355, CT, CP/Trace/RMC, 
    CP_RMC_TST_TRACE_ID, 4356, CT, CP/Trace/RMC, 
    CP_RMC_LEC_MOB_SYSOFFSET_TRACE_ID, 4357, CT, CP/Trace/RMC, 
    CP_RMC_RX_RSSI_AVG_TRACE_ID, 4358, CT, CP/Trace/RMC, 
    CP_RMC_RX_AGC_AFC_GENERIC_TRACE_ID, 4359, CT, CP/Trace/RMC, 
    CP_RMC_ATD_ACM_RTM_PORT_TRACE_ID, 4360, CT, CP/Trace/RMC, 
    CP_L1CD_ENGINE_MESSAGE_ID, 4376, CT, CP/Trace/RMC/L1CD, 
    CP_L1CD_NONE_MODE_ST_CHG_TRACE_ID, 4377, CT, CP/Trace/RMC/L1CD, 
    CP_L1CD_SLAVE_MODE_ST_CHG_TRACE_ID, 4378, CT, CP/Trace/RMC/L1CD, 
    CP_L1CD_MASTER_MODE_ST_CHG_TRACE_ID, 4379, CT, CP/Trace/RMC/L1CD, 
    CP_L1CD_MODE_CHG_TRACE_ID, 4380, CT, CP/Trace/RMC/L1CD, 
    CP_L1CD_ACTION_SET_TRACE_ID, 4381, CT, CP/Trace/RMC/L1CD, 
    CP_L1CD_PENDED_ACTION_SET_TRACE_ID, 4382, CT, CP/Trace/RMC/L1CD, 
    CP_L1CD_MASTER_RAT_SET_TRACE_ID, 4383, CT, CP/Trace/RMC/L1CD, 
    CP_L1CD_SERVICE_REQ_RAT_SET_TRACE_ID, 4384, CT, CP/Trace/RMC/L1CD, 
    CP_L1CD_FUNCTION_TRACE_ID, 4385, CT, CP/Trace/RMC/L1CD, 
    CP_L1CD_RECV_MSG_TRACE_ID, 4386, CT, CP/Trace/RMC/L1CD, 
    CP_L1CD_SEND_MSG_TRACE_ID, 4387, CT, CP/Trace/RMC/L1CD, 
    MON_CP_FCP_MSGID_TRACE_ID, 4392, CT, CP/Trace/FCP, 
    CP_FCP_DMA_RCVD_PRM_VAL_TRACE_ID, 4393, CT, CP/Trace/FCP/DMA, 
    CP_FCP_DMA_INT_OUT_OF_SYNC_TRACE_ID, 4394, CT, CP/Trace/FCP/DMA, 
    CP_FCP_CCM_MAC_HDR_ATI_TRACE_ID, 4395, CT, CP/Trace/FCP/CCM, 
    CP_FCP_CCM_MAC_HDR_INFO_TRACE_ID, 4396, CT, CP/Trace/FCP/CCM, 
    CP_FCP_FTM_ACTIVATE_TRACE_ID, 4397, CT, CP/Trace/FCP/FTM, 
    CP_FCP_FTM_DEACTIVATE_TRACE_ID, 4398, CT, CP/Trace/FCP/FTM, 
    CP_FCP_FTM_MAC_INFO_TRACE_ID, 4399, CT, CP/Trace/FCP/FTM, 
    CP_FCP_DRC_SUPERVISION_TRACE_ID, 4400, CT, CP/Trace/FCP/DRC, 
    CP_FCP_DRC_CHAN_UPDATE_TRACE_ID, 4401, CT, CP/Trace/FCP/DRC, 
    CP_FCP_DRC_TRAFFIC_UPDATE_TRACE_ID, 4402, CT, CP/Trace/FCP/DRC, 
    CP_FCP_DRC_GENERIC_DEC_1_TRACE_ID, 4403, CT, CP/Trace/FCP/DRC, 
    CP_FCP_DRC_GENERIC_1_TRACE_ID, 4404, CT, CP/Trace/FCP/DRC, 
    CP_FCP_DRC_GENERIC_2_TRACE_ID, 4405, CT, CP/Trace/FCP/DRC, 
    CP_FCP_DRC_FTMCONFIG_TRACE_ID, 4406, CT, CP/Trace/FCP/DRC, 
    CP_FCP_DRC_HALFSLOT_CNT_TRACE_ID, 4407, CT, CP/Trace/FCP/DRC, 
    CP_FCP_DCOFFSET_HARQ_PARAM_UPD_TRACE_ID, 4408, CT, CP/Trace/FCP/DRC, 
    CP_FCP_PCP_PACKET_TRACE_ID, 4409, CT, CP/Trace/FCP/PCP, 
    CP_FCP_STREAM_PACKET_TRACE_ID, 4410, CT, CP/Trace/FCP/STREAM, 
    CP_PAF_RLP_STATE_TRACE_ID, 4416, CT, CP/Trace/FCP/PAF, 
    CP_PAF_FLOW_CTRL_STATE_TRACE_ID, 4417, CT, CP/Trace/FCP/PAF, 
    CP_PAF_RLP_FRAME_RECV_TRACE_ID, 4418, CT, CP/Trace/FCP/PAF, 
    CP_PAF_RLP_FRAME_ABORT_TRACE_ID, 4419, CT, CP/Trace/FCP/PAF, 
    CP_PAF_RLP_FRAME_DUPRXD_TRACE_ID, 4420, CT, CP/Trace/FCP/PAF, 
    CP_PAF_RLP_NAK_MSG_TRACE_ID, 4421, CT, CP/Trace/FCP/PAF, 
    CP_PAF_RLP_FRAME_DELAYED_TRACE_ID, 4422, CT, CP/Trace/FCP/PAF, 
    CP_PAF_DOS_MSG_TRACE_ID, 4423, CT, CP/Trace/FCP/PAF, 
    CP_PAF_RSP_STATE_TRACE_ID, 4424, CT, CP/Trace/FCP/PAF, 
    CP_EMPAF_RLP_FRAME_RECV_TRACE_ID, 4425, CT, CP/Trace/FCP/PAF, 
    CP_EMPAF_RLP_FRAME_DECODE_TRACE_ID, 4426, CT, CP/Trace/FCP/PAF, 
    CP_PAF_RLP_PASS_TO_UPPER_LAYER_TRACE_ID, 4427, CT, CP/Trace/FCP/PAF, 
    CP_PAF_TEST_RESULT_TRACE_ID, 4428, CT, CP/Trace/FCP/Test, 
    CP_PAF_TEST_RESULT_DETAIL_TRACE_ID, 4429, CT, CP/Trace/FCP/Test, 
    CP_FCP_TEST_HW_TRIG_TRACE_ID, 4430, CT, CP/Trace/FCP/Test, 
    CP_DSAF_MSG_BLOCKER_TRACE_ID, 4431, CT, CP/Trace/FCP/DSAF, 
    CP_FCP_FTAP_TRAFFIC_CHANN_ASSIGN_TRACE_ID, 4690, CT, CP/Trace/FCP/FTAPF, 
    CP_FCP_FTAP_SERVSECTOR_CHANGE_TRACE_ID, 4691, CT, CP/Trace/FCP/FTAPF, 
    CP_FCP_FTAP_FIRST_SYNC_TRACE_ID, 4692, CT, CP/Trace/FCP/FTAPF, 
    CP_FCP_FTAP_IDLE_HO_TRACE_ID, 4693, CT, CP/Trace/FCP/FTAPF, 
    CP_FCP_FTAP_FWD_TRACE_ID, 4694, CT, CP/Trace/FCP/FTAPF, 
    CP_FCP_FTAP_STATUS_TRACE_ID, 4695, CT, CP/Trace/FCP/FTAPF, 
    CP_FCP_FTAP_TIMER_TRACE_ID, 4696, CT, CP/Trace/FCP/FTAPF, 
    MON_CP_FCP_REDUCE_SIG_STATE_TRACE_ID, 4748, CT, CP/Trace/FCP/CRS, 
    MON_CP_FCP_REDUCE_SIG_RSSI_TRACE, 4749, CT, CP/Trace/FCP/CRS, 
    MON_CP_RCP_MPA_RF_RESOURCE_REQUEST_TRACE_ID, 4432, CT, CP/Trace/RCP, 
    MON_CP_RCP_MPA_RF_RESOURCE_ASSIGN_TRACE_ID, 4433, CT, CP/Trace/RCP, 
    MON_CP_RCP_MPA_RF_RESOURCE_RELEASE_TRACE_ID, 4434, CT, CP/Trace/RCP, 
    MON_CP_RCP_MSGID_TRACE_ID, 4435, CT, CP/Trace/RCP, 
    CP_RCP_ACM_CTL_SM_TRACE_ID, 4448, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_RB_SM_TRACE_ID, 4449, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_SIGNAL_TRACE_ID, 4450, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_TIMER_TRACE_ID, 4451, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_RCV_OTA_MSG_TRACE_ID, 4452, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_ACCESS_PARMS_TRACE_ID, 4453, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_ENH_ACCESS_PARMS_TRACE_ID, 4454, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_ATTRIBUTE_UPDATE_TRACE_ID, 4455, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_CONFIG_REQ_TRACE_ID, 4456, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_SYS_INFO_UPDATE_TRACE_ID, 4457, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_ACCESS_HANDOFF_TRACE_ID, 4458, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_TX_CONDITION_TEST_TRACE_ID, 4459, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_PROBE_TX_TEST_TRACE_ID, 4460, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_PST_TEST_TRACE_ID, 4461, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_PST_INIT_TRACE_ID, 4462, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_SILENCE_TST_TRACE_ID, 4463, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_RX_OVERLAP_TST_TRACE_ID, 4464, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_SNR_TST_TRACE_ID, 4465, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_PREP_PROBE_TRACE_ID, 4466, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_TX_SETUP_TRACE_ID, 4467, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_TX_CALLBACK_TRACE_ID, 4468, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_LONGCODE_TRACE_ID, 4469, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_SEND_PROBE_TRACE_ID, 4470, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_PROBE_DONE_TRACE_ID, 4471, CT, CP/Trace/RCP/ACM, lite, 
    CP_RCP_ACM_SELECT_TX_RATE_TRACE_ID, 4472, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_FORM_PHY_PACKET_TRACE_ID, 4473, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_START_ACCESS_TRACE_ID, 4474, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_FORM_CAPSULE_TRACE_ID, 4475, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_TX_STOP_TRACE_ID, 4476, CT, CP/Trace/RCP/ACM, lite, 
    CP_RCP_ACM_PWR_REF_TRACE_ID, 4477, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_SESSION_CONFIGURATION_TRACE_ID, 4478, CT, CP/Trace/RCP/ACM, 
    CP_RCP_ACM_DSAR_SEND_MSG_TRACE_ID, 4479, CT, CP/Trace/RCP/ACM, 
    CP_RCP_DSAR_PROCESS_REV_TRACE_ID, 4488, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_SELECT_HI_PRIORITY_TRACE_ID, 4489, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_REXMIT_TIMEOUT_TRACE_ID, 4490, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PROCESS_GRANT_TRACE_ID, 4491, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_ENCODE_REV_PACKET_TRACE_ID, 4492, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_ENCODE_SNP_PACKET_TRACE_ID, 4493, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_ENCODE_SLPD_PACKET_TRACE_ID, 4494, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_ENCODE_SLPF_PACKET_TRACE_ID, 4495, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PKT_SENT_TRACE_1_ID, 4496, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PKT_SENT_TRACE_2_ID, 4497, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PKT_NOTSENT_TRACE_1_ID, 4498, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PKT_NOTSENT_TRACE_2_ID, 4499, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PHY_TRAFFIC_ACKED_TRACE_1_ID, 4500, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PHY_TRAFFIC_ACKED_TRACE_2_ID, 4501, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PHY_TRAFFIC_MISSED_TRACE_1_ID, 4502, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PHY_TRAFFIC_MISSED_TRACE_2_ID, 4503, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_EXPIRE_TRACE_ID, 4504, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_ACK_REQ_TRACE_ID, 4505, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_ACK_TRACE_ID, 4506, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_ACK_OK_ID, 4507, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_ACK_TRACE_2_ID, 4508, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_ACK_TRACE_3_ID, 4509, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_ACK_TRACE_4_ID, 4510, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_MSG_BLK_ID, 4511, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_SLPD_INIT_PACKET_TRACE_ID, 4512, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PHY_TRAFFIC_MISSED_TRACE_3_ID, 4513, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PHY_TRAFFIC_ACKED_TRACE_3_ID, 4514, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PKT_NOTSENT_TRACE_3_ID, 4515, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PKT_SENT_TRACE_3_ID, 4516, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_VN_VS_TRACE_ID, 4517, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_SELECT_HI_PRIORITY_TRACE_2_ID, 4518, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_ENCODE_REV_PACKET_TRACE_2_ID, 4519, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_GET_QUE_SZ_TRACE_ID, 4520, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_ERR_TRACE_ID, 4521, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_RESET_TRANSMIT_Q_TRACE_ID, 4522, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_RESET_RELIABLE_Q_TRACE_ID, 4523, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_DEL_TRANSMITQ_MSG_TRACE_ID, 4524, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_DEL_RELQ_MSG_TRACE_ID, 4525, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PROCESS_REV_TRACE_1_ID, 4526, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_PROCESS_REV_TRACE_2_ID, 4527, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_DSAR_DEL_MSG_TRACE_ID, 4864, CT, CP/Trace/RCP/DSAR, 
    CP_RCP_RTM_ERROR_ACTIVATE1, 4528, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_ACTIVATE2, 4529, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_DEACTIVATE1, 4530, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_TCHASSIGN1, 4531, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_TMREXP1, 4532, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_TMREXP2, 4533, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_DSAF1, 4534, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_DSAF2, 4535, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_DSAF3, 4536, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_RTCACK1, 4537, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_BCREVLIM1, 4538, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_UNIREVLIM1, 4539, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_TMR1, 4540, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_TMR2, 4541, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_TMR3, 4542, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_TXPKT1, 4543, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_TXPKT2, 4544, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_TXPKT3, 4545, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_GRANT1, 4546, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_SPUR_TASK_SIG, 4547, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_TASK_SIG_DELAY, 4548, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_TCHASSIGN1, 4549, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ACTIVATE1, 4550, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_DEACTIVATE1, 4551, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_RFREADY1, 4552, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_RFRELEASE1, 4553, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_AMPTXATI1, 4554, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_OMPSECP1, 4555, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_FTMCFG1, 4556, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_SMPSESS1, 4557, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_CSSSEARCH1, 4558, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_RTAPMODE1, 4559, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_TMREXP1, 4560, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_RTCACK1, 4561, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_BCREVLIM1, 4562, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_UNIREVLIM1, 4563, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_TMR1, 4564, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_SIGREG1, 4565, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_SILENT1, 4566, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_MAX_MAC_FLOW, 4567, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ATTRIBUTE_CONFIG, 4568, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_SILENT2, 4569, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_PHYACKNAK1, 4570, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_PHYACKNAK2, 4571, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_PHYACKNAK3, 4572, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_PHYACKNAK4, 4573, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_PHYACKNAK5, 4574, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_PHYACKNAK6, 4575, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_PHYACKNAK7, 4576, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_PHYACKNAK8, 4577, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_TXHIST1, 4578, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_TXPKT1, 4579, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_TXPKT2, 4580, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_TXPKT3, 4581, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_TXPKT4, 4582, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_GRANT1, 4583, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_GRANT2, 4584, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_GRANT3, 4585, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_GRANT4, 4586, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_GRANT5, 4587, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_GRANT6, 4588, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_GRANT7, 4589, CT, CP/Trace/RCP/RTM, lite, 
    CP_RCP_RTM_GRANT8, 4590, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_GRANT9, 4591, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_GRANT10, 4592, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_ERROR_GRANT2, 4593, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_CLOSE_LOOP, 4594, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_INIT, 4595, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_TXT2P, 4596, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_OUTFLOW, 4597, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_BUCKET_LEVEL, 4598, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_PILOTST_RAB, 4599, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_INFLOW0, 4600, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_INFLOW1, 4601, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_MINPKTSIZE, 4602, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_MINPKTSIZE_CONDITION, 4603, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_PKTSIZE, 4604, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_CHAN_SCALE0, 4605, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_CHAN_SCALE1, 4606, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_PILOTST_INT, 4607, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_T2PMAX_INT, 4608, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_T2PUP_INT, 4609, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_T2PDN_INT, 4610, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_BUCKETFACTOR_INT, 4611, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_MAX_AVAILABLE_POWER, 4612, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_SETFLL, 4613, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_POTENTIAL_T2P_OUTFLOW, 4614, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_QOS_PKTSIZE1, 4615, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_TX_TIME_PROFILE, 4616, CT, CP/Trace/RCP/RTM, 
    CP_RCP_RTM_TX_TIME, 4617, CT, CP/Trace/RCP/RTM, 
    CP_RCP_TXDMA_ERROR_BUFMGR, 4632, CT, CP/Trace/RCP/TXDMA, 
    CP_RCP_TXDMA_ADD, 4633, CT, CP/Trace/RCP/TXDMA, 
    CP_RCP_TXDMA_FREE, 4634, CT, CP/Trace/RCP/TXDMA, 
    CP_RCP_TXDMA_FREE1, 4635, CT, CP/Trace/RCP/TXDMA, 
    CP_RCP_TXDMA_CREATE, 4636, CT, CP/Trace/RCP/TXDMA, 
    CP_RCP_RTAP_GENPKT_TRACE_ID, 4637, CT, CP/Trace/RCP/RTAP, 
    CP_RCP_RTAP_CONNFLAG_TRACE_ID, 4638, CT, CP/Trace/RCP/RTAP, 
    CP_RCP_RTAP_TXPKT01_TRACE_ID, 4639, CT, CP/Trace/RCP/RTAP, 
    CP_RCP_RTAP_TXPKT2_TRACE_ID, 4640, CT, CP/Trace/RCP/RTAP, 
    CP_PAR_RLP_STATE_TRACE_ID, 4648, CT, CP/Trace/RCP/PAR, 
    CP_PAR_FLOW_CTRL_STATE_TRACE_ID, 4649, CT, CP/Trace/RCP/PAR, 
    CP_PAR_RLP_FRAME_SEND_TRACE_ID, 4650, CT, CP/Trace/RCP/PAR, 
    CP_PAR_RLP_FRAME_RETX_TRACE_ID, 4651, CT, CP/Trace/RCP/PAR, 
    CP_PAR_RLP_NAK_MSG_TRACE_ID, 4652, CT, CP/Trace/RCP/PAR, 
    CP_PAR_DOS_MSG_TRACE_ID, 4653, CT, CP/Trace/RCP/PAR, 
    CP_PAR_MAX_PRIORITY_INFO_TRACE_ID, 4654, CT, CP/Trace/RCP/PAR, 
    CP_PAR_GRANT_TRACE_ID, 4655, CT, CP/Trace/RCP/PAR, 
    CP_PAR_RLP_PACKET_SENT_TRACE_ID, 4656, CT, CP/Trace/RCP/PAR, 
    CP_PAR_RLP_PACKET_NOSENT_TRACE_ID, 4657, CT, CP/Trace/RCP/PAR, 
    CP_PAR_RLP_PHY_MISSED_TRACE_ID, 4658, CT, CP/Trace/RCP/PAR, 
    CP_PAR_RLP_PHY_ACKED_TRACE_ID, 4659, CT, CP/Trace/RCP/PAR, 
    CP_PAR_GAUP_STATE_TRACE_ID, 4660, CT, CP/Trace/RCP/PAR, 
    CP_PAR_GAUP_TM_EXPIRE_TRACE_ID, 4661, CT, CP/Trace/RCP/PAR, 
    CP_PAR_QUEUE_ERROR_TRACE_ID, 4662, CT, CP/Trace/RCP/PAR, 
    CP_PAR_GET_QUEUE_SZ_TRACE_ID, 4663, CT, CP/Trace/RCP/PAR, 
    CP_PAR_RESERVATIONLABEL_STATE_ID, 4664, CT, CP/Trace/RCP/PAR, 
    CP_PAR_RLP_TX_QUEUE_SZ_TRACE_ID, 4665, CT, CP/Trace/RCP/PAR, 
    CP_PAR_RLP_RETX_QUEUE_SZ_TRACE_ID, 4666, CT, CP/Trace/RCP/PAR, 
    CP_PAR_RSP_STATE_TRACE_ID, 4667, CT, CP/Trace/RCP/PAR, 
    CP_PARSMCM_TRACE_ID, 4668, CT, CP/Trace/RCP/PAR, 
    CP_PCPR_GRANT_INFO_TRACE_ID, 4669, CT, CP/Trace/RCP/PCPR, 
    CP_PCPR_GRANT_TOT_INFO_TRACE_ID, 4670, CT, CP/Trace/RCP/PCPR, 
    CP_PCPR_BESTPKT_FOR_MACFLOW_TRACE_ID, 4671, CT, CP/Trace/RCP/PCPR, 
    CP_PAR_RLP_QUEUED_BYTE_TRACE_ID, 4672, CT, CP/Trace/RCP/PAR, 
    CP_RCP_FTAP_LOOKBK_PKT_TRACE_ID, 4680, CT, CP/Trace/RCP/FTAPR, 
    CP_RCP_FTAP_INIT_TRACE_ID, 4681, CT, CP/Trace/RCP/FTAPR, 
    CP_RCP_FTAP_PKT_SENT_TRACE_ID, 4682, CT, CP/Trace/RCP/FTAPR, 
    CP_RCP_FTAP_PKT_NOT_SENT_TRACE_ID, 4683, CT, CP/Trace/RCP/FTAPR, 
    CP_RCP_FTAP_REV_REC_INFO_TRACE_ID, 4684, CT, CP/Trace/RCP/FTAPR, 
    CP_RCP_FTAP_GRANT_TRACE_ID, 4685, CT, CP/Trace/RCP/FTAPR, 
    CP_RCP_FTAP_REPEATED_TRACE_ID, 4686, CT, CP/Trace/RCP/FTAPR, 
    CP_RCP_FTAP_LOOPBACK_OVERFLOW_TRACE_ID, 4687, CT, CP/Trace/RCP/FTAPR, 
    CP_RCP_FTAP_LOOPBK_REC_OVERFLOW_TRACE_ID, 4688, CT, CP/Trace/RCP/FTAPR, 
    CP_RCP_FTAPR_ERROR_TRACE_ID, 4689, CT, CP/Trace/RCP/FTAPR, 
    CP_RCP_AUTH_PROCESS_ACM_PKTS_TRACE_ID, 4709, CT, CP/Trace/RCP/SEC, 
    CP_RCP_SEC_GET_CRYPTOSYNC_TRACE_ID, 4710, CT, CP/Trace/RCP/SEC, 
    CP_RCP_SEC_PROCESS_ACM_PKTS_TRACE_ID, 4711, CT, CP/Trace/RCP/SEC, 
    CP_PDS_CMD_MBOX_MSG_TRACE_ID, 3808, CT, CP/Trace/PDS, 
    CP_PDS_IS801_API_TRACE_ID, 3809, CT, CP/Trace/PDS, 
    CP_PDS_IS801_V2_RX_MSG_TRACE_ID, 3810, CT, CP/Trace/PDS, 
    CP_PDS_IS801_SESS_INFO_TRACE_ID, 3811, CT, CP/Trace/PDS, 
    CP_PDS_IS801_TRACE_ID, 3812, CT, CP/Trace/PDS, 
    CP_PDS_IS801_STATUS_TRACE_ID, 3813, CT, CP/Trace/PDS, 
    CP_PDS_IS801_MODE_FLOW_GET_TRACE_ID, 3814, CT, CP/Trace/PDS, 
    CP_PDS_IS801_ALM_EPH_TRACE_ID, 3815, CT, CP/Trace/PDS, 
    CP_PDS_IS801_OUTPUT_TRACE_ID, 3816, CT, CP/Trace/PDS, 
    CP_PDS_IS801_REV_TCBP_TRACE_ID, 3817, CT, CP/Trace/PDS, 
    CP_PDS_IS801_REV_SMS_TRACE_ID, 3818, CT, CP/Trace/PDS, 
    CP_PDS_IS801_OUTPUT_INFO_TRACE_ID, 3819, CT, CP/Trace/PDS, 
    CP_PDS_IS801_RCV_RSP_MSG_TRACE_ID, 3820, CT, CP/Trace/PDS, 
    CP_PDS_IS801_ALM_EPH_CHECK_TRACE_ID, 3821, CT, CP/Trace/PDS, 
    CP_PDS_IS801_CLR_PPM_STATUS_TRACE_ID, 3822, CT, CP/Trace/PDS, 
    CP_PDS_IS801_PRM_MSM_REQ_TRACE_ID, 3823, CT, CP/Trace/PDS, 
    CP_PDS_IS801_PPM_MSM_REQ_TRACE_ID, 3824, CT, CP/Trace/PDS, 
    CP_PDS_IS801_RCV_REQ_MSG_TRACE_ID, 3825, CT, CP/Trace/PDS, 
    CP_PDS_IS801_CONN_IND_TRACE_ID, 3826, CT, CP/Trace/PDS, 
    CP_PDS_IS801_ALM_EPH_RESTORE_TRACE_ID, 3827, CT, CP/Trace/PDS, 
    CP_PDS_IS801_READY_TRACE_ID, 3828, CT, CP/Trace/PDS, 
    CP_PDS_IS801_CLR_PRM_STATUS_TRACE_ID, 3829, CT, CP/Trace/PDS, 
    CP_PDS_RAT_MSG_TRACE_ID, 3830, CT, CP/Trace/PDS, 
    CP_PDS_PAC_MSG_TRACE_ID, 3831, CT, CP/Trace/PDS, 
    CP_PDS_AP_MSG_TRACE_ID, 3832, CT, CP/Trace/PDS, 
    CP_PDS_PRIVACY_MODE_TRACE_ID, 3833, CT, CP/Trace/PDS, 
    CP CAS CDRR MODE TRACE, 3840, CT, CP/Trace/CAS, 
    CP CAS MESSAGE TRACE, 3841, CT, CP/Trace/CAS, 
    CP CAS CDRR SLAVE STATE TRACE, 3842, CT, CP/Trace/CAS, 
    CP CAS CDRR MASTER STATE TRACE, 3843, CT, CP/Trace/CAS, 
    CP CAS CDRR MESSAGE TRACE, 3844, CT, CP/Trace/CAS, 
    CP CAS CDRR TIMER STATUS TRACE, 3845, CT, CP/Trace/CAS, 
    CP CAS EGW MESSAGE TRACE, 3846, CT, CP/Trace/CAS, 
    CP CAS MLC EVENT TRACE, 3847, CT, CP/Trace/CAS, 
    CP CAS MLC STATE CHANGE, 3848, CT, CP/Trace/CAS, 
    CP CAS MLC FSM TRACE, 3849, CT, CP/Trace/CAS, 
    CP CAS MLC LTE NEIGHBOR INFO TRACE, 3850, CT, CP/Trace/CAS, 
    CP CAS MLC SEND MEAS CMD TRACE, 3851, CT, CP/Trace/CAS, 
    CP CAS MLC PS REG REQ TRACE, 3852, CT, CP/Trace/CAS, 
    CP CAS MLC PS REG CNF TRACE, 3853, CT, CP/Trace/CAS, 
    CP CAS MLC MEAS RESULT TRACE, 3854, CT, CP/Trace/CAS, 
    CP CAS MLC RESEL REJ TRACE, 3855, CT, CP/Trace/CAS, 
    CP CAS MLC BARRED INFO TRACE, 3856, CT, CP/Trace/CAS, 
    CP IRATRFC MESSAGE TRACE, 3864, CT, CP/Trace/IRATRFC, 
    CP IRATRFC SERVICE REQ TRACE, 3865, CT, CP/Trace/IRATRFC, 
    CP IRATRFC SERVICE REL IND TRACE, 3866, CT, CP/Trace/IRATRFC, 
    CP IRATRFC BAND CONFLICT INFO IND TRACE, 3867, CT, CP/Trace/IRATRFC, 
    CP IRATRFC ACT STATUS IND TRACE, 3868, CT, CP/Trace/IRATRFC, 
    CP IRATRFC SUSPEND CNF TRACE, 3869, CT, CP/Trace/IRATRFC, 
    CP IRATRFC SERVICE CNF TRACE, 3870, CT, CP/Trace/IRATRFC, 
    CP IRATRFC SERVICE REJ TRACE, 3871, CT, CP/Trace/IRATRFC, 
    CP IRATRFC SUSPEND REQ TRACE, 3872, CT, CP/Trace/IRATRFC, 
    CP IRATRFC RESUME IND TRACE, 3873, CT, CP/Trace/IRATRFC, 
    CP IRATRFC BAND CONFLICT IND TRACE, 3874, CT, CP/Trace/IRATRFC, 
    CP IRATRFC BAND SRCH ALLOWED IND TRACE, 3875, CT, CP/Trace/IRATRFC, 
    CP IRATRFC DBG TRACE, 3876, CT, CP/Trace/IRATRFC, 
    CP IRATRFC INFO TRACE, 3877, CT, CP/Trace/IRATRFC, 
End

Begin Enum, Sleep Control
    MON_DS_TRACE_FAIL, 0,
    MON_DS_TRACE_REQUEST, ,
    MON_DS_TRACE_SLP_ENTERED, ,
    MON_DS_TRACE_ENTER, ,
    MON_DS_TRACE_VETO_SUSPEND, ,
    MON_DS_TRACE_VETO_RESUME, ,
    MON_DS_TRACE_CANCEL, ,
    MON_DS_TRACE_GPS_REQUEST, ,
End

Begin Enum, Power Save Modes
    Automatic, 255
    1x Low Power, 0
    DO Low Power, 
    1x Powerup, 
    1x Powerup QP, 
    1x RX, 
    1x RX/TX, 
    DO Powerup, 
    DO PN Search, 
    DO RX, 
    DO RX/TX, 
End

Begin Enum, MON IPCLog FunctionName
    APWKCPGpintHdlr, 0
    CPVetoTxRxSleep, 1
    CPReady, 2
    rxDelayTimerHdlr, 3
    rxSleepHdlr, 4
    rxIdleHdlr, 5
    rxSleepingHdlr, 6
    CpTxDevSeqGet, 7
    APRDYGpintHdlr, 8
    txDelayWakeTimerHdlr, 9
    txDelayDetectTimerHdlr, 10
    txDelayTimerHdlr, 11
    CPWakeAP, 12
    CpCheckApRdy, 13
    APRDYGpintHdlr_2, 14
    txDelayWakeTimerHdlr_2, 15
    txDelayDetectTimerHdlr_2, 16
    txDelayTimerHdlr_2, 17
    txSleepHdlr, 18
    txDelayWakeHdlr, 19
    txWaitReadyHdlr, 20
    txWaitAckHdlr, 21
    txIdleHdlr, 22
    CpTxDevReg, 23
    APCPHandlerInit, 24
    CPTxRequest, 25
    CPTxFinished, 26
    CheckCPRdyToRx, 27
    CPRxStatusReset, 28
    CPTxStatusReset, 29
End

Begin Enum, Dyn Code Dnld Functions
    Dcd Msg Input, 0,   RO
    Dcd Msg Output, 1,   RO
    Dcd Msg Id, 2,   RO
    Dcd App Read Req Input, 3,   RO
    Dcd App Read Req Output, 4,   RO
End

Begin Enum, IpcDspAppChannelCodeDownloadSourceT
    IPC_APP_CHAN_CODE_DOWNLOAD_SOURCE_DSPV, 1,
    IPC_APP_CHAN_CODE_DOWNLOAD_SOURCE_DSPM, 2,
End

Begin Enum, Slotted State
    IDLE, 0
    CLOCK_CAL, 
    DIFFERENT_FREQENCY_SEARCH, 
    PAGE_FCCCH_MONITOR, 
    WAIT_FOR_SLEEP, 
    WAIT_FOR_SEARCH, 
    WAIT_FOR_SLEEP_ACK, 
    SLEEP, 
    QPCH1_MONITOR, 
    QPCH2_MONITOR, 
    CCI_MONITOR, 
End

Begin Enum, SPageEvent
    ENABLE, 0
    DISABLE, 
    SLEEP_CMD, 
    SEARCH_RESULTS, 
    WAKE_CMD, 
    PCH_WAKE_EVENT, 
    FCCCH_WAKE_EVENT, 
    RESYNC, 
    QP_IND, 
    SLEEP_ACK, 
    CAL_START, 
    CAL_DONE, 
    MINI_ACQ_COMPL, 
    LONG_CODE_STATE, 
    DIFFERENT_FREQ_SEARCH_COMPLETE, 
    QPCH_SEARCH_TIME_EXPIRED, 
    QPCH_MX_SIG_OFF, 
End

Begin Enum, QPCHENABLE
    DISABLED, 0
    ENABLED, 
End

Begin Enum, WAKETYPE
    PCH, 0
    QPCH1, 
    QPCH2, 
    CCI, 
    FCCCH, 
    BC, 
End

Begin Enum, QPCHINDTYPE
    OFF, 0
    ON, 
    UNDEF, 
    ERASURE, 
End

Begin Enum, L1dTraceTrackT
    L1D_SPAGE_INIT, 
    L1D_SPAGE_INIT_2, 
    L1D_SPAGE_SEND_PCH_CONT, 
    L1D_SPAGE_PCH_CONT_NOT_SENT, 
    L1D_SPAGE_SEND_WAKE_IND, 
    L1D_SPAGE_SEND_RESYNC_DENIED_IND, 
    L1D_SPAGE_RESYNC_ACCEPT_PCH, 
    L1D_SPAGE_RESYNC_ACCEPT_FCCH, 
    L1D_SPAGE_RESYNC_ACCEPT_QPCH1, 
    L1D_SPAGE_RESYNC_ACCEPT_QPCH2, 
    L1D_SPAGE_RESYNC_ACCEPT_4, 
    L1D_SPAGE_RESYNC_ACCEPT_5, 
    L1D_SPAGE_MINI_ACQ_CMPLT, 
    L1D_ERR_SPAGE_MINI_ACQ_FAILED, 
    L1D_SPAGE_CLK_CAL_ONLINE_ADJ, 
    L1D_WARNING_SPAGE_SRCH_TIMER_EXPIRED, 
    L1D_WARNING_SPAGE_SRCH_TIMER_EXPIRED_2, 
    L1D_WARNING_SPAGE_SRCH_TIMER_EXPIRED_3, 
    L1D_SPAGE_START_DIFF_FREQ_SRCH, 
    L1D_SPAGE_START_DIFF_FREQ_SRCH_2, 
    L1D_SPAGE_START_DIFF_FREQ_SRCH_3, 
    L1D_SPAGE_STATE_SET, 
    L1D_SPAGE_STATE_SET_2, 
    L1D_SPAGE_STATE_SET_3, 
    L1D_SPAGE_LONG_CODE_HOP, 
    L1D_SPAGE_LONG_CODE_HOP_2, 
    L1D_SPAGE_LONG_CODE_HOP_3, 
    L1D_SPAGE_CLK_CAL_DONE, 
    L1D_SPAGE_CLK_CAL_CALC_FACTOR, 
    L1D_SPAGE_ENABLED, 
    L1D_SPAGE_ENABLED_2, 
    L1D_SPAGE_ENABLED_3, 
    L1D_SPAGE_DISABLED, 
    L1D_SPAGE_DISABLE_PENDING, 
    L1D_SPAGE_IMMED_WAKE, 
    L1D_SPAGE_IMMED_WAKE_2, 
    L1D_SPAGE_IMMED_WAKE_3, 
    L1D_SPAGE_RESUME_CMD, 
    L1D_SPAGE_EARLY_WAKE_CMD, 
    L1D_SPAGE_EARLY_WAKE_CMD_2, 
    L1D_SPAGE_EARLY_WAKE_CMD_3, 
    L1D_SPAGE_PCH_FCCH, 
    L1D_SPAGE_PCH_FCCH_2, 
    L1D_SPAGE_PCH_FCCH_3, 
    L1D_SPAGE_RESYNC_WAKE, 
    L1D_SPAGE_RESYNC_WAKE_2, 
    L1D_SPAGE_RESYNC_WAKE_3, 
    L1D_SPAGE_TST_CALC_RESYNC, 
    L1D_WARNING_SPAGE_SLEEP_TRAP, 
    L1D_WARNING_SPAGE_SLEEP_TRAP2, 
    L1D_WARNING_SPAGE_SLEEP_TRAP_SKIP_SLEEP, 
    L1D_SPAGE_SLEEP_HANDOFF, 
    L1D_WARNING_SPAGE_SLEEP_HANDOFF_NEXT_80MS, 
    L1D_WARNING_SPAGE_SLEEP_TRAP_NEXT_80MS, 
    L1D_ERR_SPAGE_SLEEP_TRAP_QPCH2, 
    L1D_ERR_SPAGE_SLEEP_BAD_STATE, 
    L1D_ERR_SPAGE_SLEEP_BAD_STATE_2, 
    L1D_ERR_SPAGE_SLEEP_BAD_STATE_3, 
    L1D_ERR_SPAGE_SLEEP_BAD_STATE_4, 
    L1D_ERR_SPAGE_SLEEP_BAD_STATE_5, 
    L1D_ERR_SPAGE_SLEEP_BAD_STATE_6, 
    L1D_SPAGE_SLEEP_PCH, 
    L1D_SPAGE_SLEEP_QPCH1_1ST, 
    L1D_SPAGE_SLEEP_QPCH1_2ND, 
    L1D_SPAGE_SLEEP_QPCH2, 
    L1D_SPAGE_SLEEP_3, 
    L1D_SPAGE_SLEEP_4, 
    L1D_SPAGE_FAKE_WAIT_STOP_ACK, 
    L1D_SPAGE_FAKE_WAIT_STOP_ACK_2, 
    L1D_SPAGE_STATE_MACHINE, 
    L1D_ANTENNA_REQUEST, 70,
    L1D_ANTENNA_REQUEST_RESPONSE, 
    L1D_ANTENNA_RELEASE, 
    L1D_ERR_ANTENNA_REQUEST_INUSE, 
    L1D_ERR_ANTENNA_REQUEST_MSG, 
    L1D_ANTENNA_RELEASE_REQUEST, 
    L1D_TRAFFIC_LONGCODE_READ, 
    L1D_REV_FCH_GATING_PATTERN, 
    L1D_ANTENNA_UPDATE, 
    L1D_ANTENNA_RELEASE_RESPONSE, 
    L1D_BAS_START, 
    L1D_BAS_TIMER_CALLBACK, 
    L1D_READ_ICE_DATA, 
    L1D_RF_CONTROL, 
    L1D_CFS_START, 
    L1D_CFS_TUNE_PLL, 
    L1D_CFS_TUNE_BACK, 
    L1D_TRANSMITTER_CTRL, 
    L1D_ACTIVE_PN_PHASE_UPDATE, 
    L1D_DSPM_SLOTTED_MSG_TRACE, 
    L1D_WARNING_INVALID_EVENT, 90,
    L1D_ARTD_BLOCK_CTRL, 
    L1d_TRACE_TRACK_MAX, 
End

Begin Enum, L1dMsgId
    L1D_ACCESS_ABORT_MSG, 
    L1D_ACCESS_SIG_MSG, 
    L1D_BCCH_START_MSG, 
    L1D_BCCH_STOP_MSG, 
    L1D_CAND_FREQ_MSG, 
    L1D_CAND_FREQ_ABORT_MSG, 
    L1D_CAND_FREQ_START_MSG, 
    L1D_CSCH_STOP_MSG, 
    L1D_DC_BIAS_MSG, 
    L1D_EACH_SIG_MSG, 
    L1D_FCCCH_START_MSG, 
    L1D_FDSCH_ACQ_IND_MSG, 
    L1D_FSCH_MSG, 
    L1D_IDLE_CHANGE_PILOT_SET_MSG, 
    L1D_IDLE_SETS_LIST_UPDATE_MSG, 
    L1D_LONG_CODE_CHANGE_MSG, 
    L1D_PAGING_CHAN_START_MSG, 
    L1D_PAGING_CHAN_STOP_MSG, 
    L1D_PILOT_ACQ_START_MSG, 
    L1D_PILOT_PWR_MSG, 
    L1D_PREAMBLE_OFF_MSG, 
    L1D_PREAMBLE_ON_MSG, 
    L1D_QUICK_PAGE_BITS_MSG, 
    L1D_RESET_MSG, 
    L1D_RESOURCE_ALLOC_MSG, 
    L1D_RESOURCE_DEALLOC_MSG, 
    L1D_RESOURCE_REQ_MSG, 
    L1D_REVERSE_PILOT_CTL_MSG, 
    L1D_REVERSE_POWER_SET_MSG, 
    L1D_RX_POWER_MSG, 
    L1D_SEARCH_PARMS_UPDATE_MSG, 
    L1D_SEARCH_RSLT_MSG, 
    L1D_SERVICE_CONFIG_MSG, 
    L1D_SERVICE_CONFIG_NN_MSG, 
    L1D_SETS_LIST_UPDATE_MSG, 
    L1D_SET_PRIORITY_STATE_MSG, 
    L1D_ACCESS_SEND_MSG, 
    L1D_RESERVED_3, 
    L1D_RESERVED_4, 
    L1D_RESERVED_5, 
    L1D_DSPM_SLOTTED_MSG, 
    L1D_SYNC_ACQ_START_MSG, 
    L1D_TIMING_CHANGE_MSG, 
    L1D_TRAFFIC_CHAN_HARD_HANDOFF_MSG, 
    L1D_TRAFFIC_CHAN_PWR_STEP_MSG, 
    L1D_TRAFFIC_CHAN_SOFT_HANDOFF_MSG, 
    L1D_TRAFFIC_CHAN_START_MSG, 
    L1D_TRAFFIC_CHAN_STOP_MSG, 
    L1D_TRAFFIC_INIT_COMPLETE_MSG, 
    L1D_TRANSMITTER_CONTROL_MSG, 
    L1D_FOR_POWER_CONTROL_PARAMS_MSG, 
    L1D_OUTERLOOP_REQ_MSG, 
    L1D_FPC_REP_MSG, 
    L1D_SIM_MSG, 
    L1D_TST_DIAG_MONITOR_MSG, 
    L1D_TST_GET_PHONE_STATE_MSG, 
    L1D_IDLE_DIFF_FREQ_SEARCH_MSG, 
    L1D_ACCESS_PROBE_COMPLETE_MSG, 
    L1D_GET_PS_INFO_RSP_MSG, 
    L1D_TST_TX_CDMA_MSG, 
    L1D_RSCH_MSG, 
    L1D_AMPS_HANDOFF_MSG, 
    L1D_FPC_CAL_FACTOR_MSG, 
    L1D_GET_VAL_INFO_RSP_MSG, 
    L1D_GET_DSPV_INFO_RSP_MSG, 
    L1D_AFLT_SEARCH_RSLT_MSG, 
    L1D_AFLT_DSP_SEARCH_TIMEOUT_MSG, 
    L1D_POS_AFLT_SEARCH_MSG, 
    L1D_POS_AFLT_ABORT_MSG, 
    L1D_DSM_MDM_RST_ACK_MSG, 
    L1D_RX_POWER_REQ_MSG, 
    L1D_SYNC_CHAN_MSG_RECD_MSG, 
    L1D_INIT_MSG, 
    L1D_TST_DEBUG_FILTER_MSG, 
    L1D_RESERVED_6, 
    L1D_IDLE_PRIORITY_SET_UPDATE_MSG, 
    L1D_RESERVED_7, 
    L1D_RESERVED_8, 
    L1D_PUF_PROBE_ABORT_MSG, 
    L1D_PUF_PROBE_SEND_MSG, 
    L1D_SET_T_ADD_MSG, 
    L1D_SET_BAS_MODE_MSG, 
    L1D_TST_AFC_CONFIG_MSG, 
    L1D_GPS_INIT_GPS_MSG, 
    L1D_GPS_NWK_RPT_SYSTEM_TIME_MSG, 
    L1D_GPS_CONT_CDMA_REQ_MSG, 
    L1D_GPS_N1_GOOD_FRAMES_FOUND_MSG, 
    L1D_GPS_PSMM_SENT_MSG, 
    L1D_GPS_SWITCHING_HANDOFF_COMPLETE_MSG, 
    L1D_GPS_GOOD_FRAMES_TMR_EXP_MSG, 
    L1D_GPS_XMIT_TMR_EXP_MSG, 
    L1D_GPS_HANDOFF_IND_TMR_EXP_MSG, 
    L1D_GPS_END_GPS_REQ_MSG, 
    L1D_DSPM_TIMING_RSP_MSG, 
    L1D_TST_IDLE_DIFF_FREQ_SRCH_MODE_MSG, 
    L1D_AFLT_USUAL_SEARCH_TIMEOUT_MSG, 
    L1D_TST_IGNORE_RESET_MSG, 
    L1D_FSCH_CONFIG_UPDATE_MSG, 
    L1D_RSCH_CONFIG_UPDATE_MSG, 
    L1D_RX_AGC_CONFIG_MSG, 
    L1D_TST_RX_AGC_CONFIG_MSG, 
    L1D_VCXO_COMP_MSG, 
    L1D_ACCESS_IN_PROGRESS_MSG, 
    L1D_GET_DEBUG_SCRN_INFO_MSG, 
    L1D_HWD_RESET_ACK_MSG, 
    L1D_RSCH_POWER_SET_MSG, 
    L1D_PDCH_PARAMS_MSG, 
    L1D_ACKCQICH_RATE_CHANGE_MSG, 
    L1D_TST_FPDCHS_PARAM_MSG, 
    L1D_TST_FPDCHS_DISABLE_MSG, 
    L1D_TST_FPDCHS_CQIACK_MSG, 
    L1D_TST_FPDCHS_CTRLHOLD_MSG, 
    L1D_POWER_SAVINGS_DELAY_MSG, 
    L1D_GPS_AUTONOMOUS_MSG, 
    L1D_GPS_DBG_MSG, 
    L1D_GPS_ACQ_AID_MSG, 
    L1D_ALT_PILOT_ACQ_MSG, 
    L1D_MPA_RF_PREEMPT_REQ_MSG, 
    L1D_DSM_RF_RELEASE_RSP_MSG, 
    L1D_PSW_RF_RELEASE_REQ_MSG, 
    L1D_BAND_SUPPORT_QUERY_MSG, 
    L1D_IRAT_TX_PWR_REQ, 
    L1D_RX_TX_POWER_INFO_RESP_MSG, 
    L1D_TRANSMIT_NST_MSG, 
    L1D_TST_NST_TRAFFIC_ON_MSG, 
    L1D_SWITCH_PA_FOR_ACCESS, 
    L1D_RADIO_CONFIG_MSG, 
    L1D_DIVERSITY_ENABLE_MSG, 
    L1D_TST_NST_END_MSG, 
    L1D_DFS_ECIO_THRESH_MSG, 
    L1D_NULL_GPM_POWER_SAVE_MSG, 
    L1D_DSM_NULL_GPM_IND_MSG, 
    L1D_SPAGE_RESYNC_ACCEPT_MSG, 
    L1D_SPAGE_EARLY_WAKE_REQUEST_MSG, 
    L1D_AFLT_INPUT_BUF_SEL_MSG, 
    L1D_AFLT_TEST_PILOTSETSIZE_MSG, 
    L1D_DSPM_AFC_ERROR_MSG, 
    L1D_DSPM_SYNC_SYMBOL_MSG, 
    L1D_REV_FCH_FRAME_RATE_IND_MSG, 
    L1D_TST_NST_START_MSG, 
    L1D_PCH_MESSAGE_ERROR_IND_MSG, 
    L1D_ACCESS_END_IND_MSG, 
    L1D_DSPM_ARTD_METRICS_MSG, 
    L1D_FORCE_2RX_MSG, 0x500
    L1D_NUM_CMD_MSG_IDS, 0x1000
    HSC_L1D_SLEEP_RDY_MSG, 0x2080
    HSC_L1D_SLOTTED_MODE_DISABLE_MSG, 
    HSC_L1D_SLOTTED_MODE_PARAMS_MSG, 
    HSC_L1D_SLEEP_MSG, 
    HSC_L1D_WAKEUP_MSG, 
    HSC_L1D_QPCH_CCI_D  ECODE_REQ_MSG, 
    HSC_L1D_SRCH_RESULT_COMPLETE_MSG, 
    HSC_L1D_SPAGE_TEST_STOP_ACK_MSG, 
    HSC_L1D_SPAGE_TEST_MINI_ACQ_ERR_MSG, 
    MPA_RF_RESOURCE_REQ_MSG, 0x2000,
    MPA_RF_RESOURCE_UPDATE_REQ_MSG, 
    MPA_RF_RESOURCE_ASSIGN_MSG, 
    MPA_RF_RELEASE_REQ_MSG, 
    MPA_RF_RELEASE_RSP_MSG, 
    MPA_RF_SHUTOFF_REQ_MSG, 
    MPA_RF_SHUTOFF_RSP_MSG, 
    MPA_RF_PREEMPT_REQ_MSG, 
    MPA_RF_PREEMPT_RSP_MSG, 
    MPA_RF_FORCE_RELEASE_REQ_MSG, 
    MPA_RF_FORCE_RELEASE_RSP_MSG, 
    MPA_RF_REQUEST_CANCEL_MSG, 
    MPA_RF_REQUEST_CANCEL_RSP_MSG, 
End

Begin Enum, L1dStates
    UNINITIALIZED, 
    INITIALIZED, 
    PILOT_ACQ, 
    OBSOLETE_PILOT_FOUND, 
    ACQ_COMPLETE, 
    TIMING_CHANGE, 
    OBSOLETE_SYSTEM_TIME_UPDATE, 
    IDLE, 
    EACH_PREAMBLE_SETUP, 
    EACH_PREAMBLE_ON, 
    ACCESS_SETUP, 
    ACCESS_PREAMBLE_SETUP, 
    ACCESS_PREAMBLE_ON, 
    TRAFFIC_CHANNEL_SETUP, 
    OBSOLETE_POWER_CONTROL_COMPLETE, 
    OBSOLETE_PREAMBLE_ON_RC1_2, 
    OBSOLETE_REVERSE_PILOT_SETUP, 
    OBSOLETE_PREAMBLE_ON_RC3_6, 
    TRAFFIC, 
    HARD_HANDOFF, 
    OBSOLETE_HARDHO_COMPLETE, 
    OBSOLETE_HARDHO_TRANSMITTER_CONTROL, 
    SERVICE_CONFIG, 
    NULL_STATE, 
End

Begin Enum, L1dSignal
    L1D_MDM_STARTUP_SIGNAL, 0x00000100,
    L1D_TIME_CHG_SIGNAL, 0x00000200,
    L1D_FRAME_SET_SIGNAL, 0x00000400,
    L1D_ACCESS_PREAMBLE_SIGNAL, 0x00000800,
    L1D_ENABLE_REV_TX_SIGNAL, 0x00001000,
    L1D_SVC_CFG_SIG_TX_ON_SIGNAL, 0x00002000,
    L1D_RSCH_LMD_STOP_SIGNAL, 0x00004000,
    L1D_RF_TUNE_COMPLETE_SIGNAL, 0x00008000,
    L1D_SERVICE_CONFIG_SIGNAL, 0x00010000,
    L1D_SERVICE_CONFIG_NN_SIGNAL, 0x00020000,
    L1D_HARD_HANDOFF_SIGNAL, 0x00040000,
    L1D_SOFT_HANDOFF_SIGNAL, 0x00080000,
    L1D_RSCH_SIGNAL, 0x00100000,
    L1D_RSCH_DISABLE_SIGNAL, 0x00200000,
    L1D_HO_PREAMBLE_OFF_SIGNAL, 0x00400000,
    L1D_POWER_CONTROL_PARAMS_SIGNAL, 0x00800000,
    L1D_FSCH_SIGNAL, 0x01000000,
    L1D_FSCH_DISABLE_SIGNAL, 0x02000000,
    L1D_LONG_CODE_CHANGE_SIGNAL, 0x04000000,
    L1D_RADIO_CONFIG_SIGNAL, 0x08000000,
    L1D_FSCH_BURST_END_SIGNAL, 0x10000000,
    L1D_SPAGE_SEARCHER_TIMEOUT_SIGNAL, 0x20000000,
    L1D_SUBCHAN_GAIN_SIGNAL, 0x40000000,
    L1D_LMD_RLP_STOP_REQ_SIGNAL, 0x80000000,
End

Begin Enum, PSWStatus
    PSW_PILOT_ACQUIRE, 
    PSW_NO_PILOT, 
    PSW_SYNC_ACQUIRE_FAIL, 
    PSW_SYNC_TO_SYS_TIME, 
    PSW_SYNC_TO_SYS_TIME_FAIL, 
    PSW_PAGE_MONITOR, 
    PSW_PAGE_MONITOR_FAIL, 
    PSW_BCCH_MONITOR, 
    PSW_BCCH_MONITOR_FAIL, 
    PSW_FCCCH_MONITOR, 
    PSW_FCCCH_MONITOR_FAIL, 
    PSW_SEND_ACCESS_MSG_FAIL, 
    PSW_SEND_TC_MSG, 
    PSW_SEND_TC_MSG_FAIL, 
    PSW_TC_CONFIG, 
    PSW_LONG_CODE_CHANGED, 
    PSW_RADIO_TUNED, 
    PSW_RADIO_NOT_TUNED, 
    PSW_PILOT_LOST, 
    PSW_PUF_PROBE_SENT, 
    PSW_PUF_PROBE_SENT_MAX_PWR, 
    PSW_PUF_PROBE_NOT_SENT, 
    PSW_IND_WAKEUP, 
    PSW_IND_PILOT_SET, 
    PSW_SOFT_HO_COMPLETE, 
    PSW_OOSA_WAKEUP, 
    PSW_AMPS_HO_COMPLETE, 
    PSW_RSCH_STARTED, 
    PSW_FSCH_STARTED, 
    PSW_FSCH_TERMINATED, 
    PSW_RSR_UPDATED, 
    PSW_HARD_HO_COMPLETE, 
    PSW_IND_FREEZE, 
    PSW_IND_THAW, 
    PSW_IND_RESYNC, 
    PSW_IND_RESYNC_DENIED, 
    PSW_ANTENNA_REQ_GRANTED, 
    PSW_ANTENNA_REQ_DENIED, 
    PSW_ANTENNA_RELEASED, 
    PSW_MODEM_FAILURE, 
    PSW_MODEM_READY, 
    PSW_IRAT_RESET_1XCDMA, 
    PSW_NUM_CMD_STATUS, 
End

Begin Enum, L1dTimerId
    L1D_OOSA_TIMER_ID, 
    L1D_DIFF_FREQ_SEARCH_TIMER_ID, 
    L1D_AFLT_DSP_SEARCH_TIMER_ID, 
    L1D_AFLT_USUAL_SEARCH_TIMER_ID, 
    L1D_SEARCHER_TIMEOUT_TIMER_ID, 
    L1D_SVC_CFG_SIG_TX_ON_DELAY_TIMER_ID_OBSOLETE, 
    L1D_POWER_SAVINGS_DELAY_TIMER_ID, 
    L1D_MMI_RSSI_REPORT_TIMER_ID, 
    L1D_RSCH_DISABLE_FIX_TIMER_ID, 
End

Begin Enum, DsmAckMsgId
    IPC_DSM_MDM_RST_MSG, 0x400,
    IPC_DSM_REV_MIXSIG_PARM_MSG, 0x202,
End

Begin Enum, L1dGpsState
    GPS_INIT_OFF, 
    GPS_INIT_TIME_SYNC, 
    GPS_INIT_TIME_TRACK_QUERY, 
    GPS_INIT_CONFIG_GPS_IDLE, 
    GPS_INIT_CONFIG_GPS_TRAFFIC, 
    GPS_INIT_GPS, 
    GPS_KEEP_ALIVE_START, 
    GPS_KEEP_ALIVE_BEGIN_TRANSMISSION, 
    GPS_KEEP_ALIVE_WAIT_FOR_HANDOFF_INDICATION, 
    GPS_KEEP_ALIVE_DO_HANDOFF, 
    GPS_KEEP_ALIVE_CONFIG_FOR_RETURN_TO_GPS, 
    GPS_KEEP_ALIVE_COMPLETED, 
    GPS_END_FOR_TRAFFIC_INIT, 
    GPS_END_FOR_TRAFFIC_ACQUIRED, 
    GPS_END_FOR_IDLE_INIT, 
    GPS_END_FOR_IDLE_ACQUIRED, 
    GPS_END_COMPLETE, 
End

Begin Enum, L1dSchTrId
    SCH Act Pend New Assign, 
    SCH Canc Curr Assign, 
    SCH Canc Pend Assign, 
    SCH Not Act New Assign, 
    SCH Act New Assign Act Time, 
    SCH Act New Assign Immed, 
    SCH Act Canc All Immed, 
    SCH Act Canc All Act Time, 
    SCH Act Canc Pend Assn, 
    SCH Not Act Canc All, 
    SCH Act Contiguous New Assign, 
    SCH Act Canc All Sched, 
End

Begin Enum, ActTime
    is immediate, 
    is in the past, 
    is in the future, 
End

Begin Enum, Aflt Traces Enum
    ProcessL1dAfltSearchRsltMsg() AfltSearchList Not Valid, , RO
    ProcessL1dAfltSearchRsltMsg() MsgRx Dump1, , RO
    ProcessL1dAfltSearchRsltMsg() MsgRx Dump2, , RO
    UpdateAfltSearchList() AfltSearchList Dump1, , RO
    UpdateAfltSearchList() AfltSearchList Dump2, , RO
    SendDsmAfltPilotSetMsg(), , RO
    SendDsmPilotSetAbortMsg(), , RO
    InitializeAfltSearchList(), , RO
    ProcessL1dAfltDspSearchTimeoutMsg(), , RO
    ProcessL1dAfltSetsListSearchMsg(), , RO
    ProcessL1dAfltAbortSearchMsg(), , RO
End

Begin Enum, EachTimingRecords
    Current Time, 0, RO
    Slot Time, 1, RO
    Pcg Event Register, 2, RO
    Time Pcg Event Register, 3, RO
    Pcg Divide, 4, RO
    Convert 20ms To Pcgs, 5, RO
    Convert Pcgs To 20ms, 6, RO
    Configured, 7, RO
    Tx Signal Ctrl, 8, RO
End

Begin Enum, L1dArtdTraceType
    BAS_PARA, 
    PCH_ERR_INFO, 
    CUST_IDLE_ARTD, 
    DEFAULT_IDLE_ARTD, 
    IDLE_ARTD_RESYNC, 
    CUST_ACCESS_ARTD, 
    CUST_TRAFFIC_ARTD, 
    DEFAULT_TRAFFIC_ARTD, 
    ENABLE_DIV, 
    SWAP_PORT, 
    UNFREEZE_IDLE_COUNTER, 
End

Begin Enum, LmdMsgIds
    Access Probe Abort, 0
    Traffic Chan Start, 
    Traffic Chan Stop, 
    Reset, 
    Service Configuration, 0x10
    Service Config Nn, 
    Service Option Control, 
    Conversation Substate Conn, 
    Conversation Substate Disc, 
    Loopback Service Option, 
    Audio SSO Connect Rsp, 
    Audio SSO Disonn Rsp, 
    Clear Markov Stats, 0x20
    Markov Service Option, 
    Pwr Ctl Parms, 0x30
    Spch Data Enc Agc, 0x40
    Spch Data Enc Hfree, 
    Spch Data Dec Hfree, 
    Rlp Rev Fch Data Req, 0x50
    Rlp Rev Sch Data Req, 
    Dcch Rev Data, 
    Scch Rev Data, 
    Scch Fwd Data Rsp, 
    Fch Rev Tdso Data, 0x60
    Dch Rev Tdso Data, 
    Sch Rev Tdso Data, 
    Scch Rev Tdso Data, 
    Lmd FSCH Msg, 0x70
    Lmd RSCH Msg, 
    Lmd FSCH Stop Msg, 
    Lmd RSCH Stop Msg, 
    Lmd Fsch Pdu Order Ctrl Msg, 
    Reverse Access Sig, 0x80
    Each Sig, 
    Reverse Traffic Sig, 
    Transmitter Status, 
    Counter Suspend Msg, 
    MuxPdu Test Mode Msg, 0x90
    MuxPdu Buffer Status Msg, 
    MuxPdu Set Raw Spy Len Msg, 
    MuxPdu Pdch Test Mode Msg, 
    MuxPdu Set Op Mode Msg, 
    MuxPdu Get Op Mode Msg, 
    Resource Update Msg, 0xC0
    Sim Msg, 0xF0
    Get Stat Cnt Msg, 
    Set Stat Cnt Msg, 
    Reset Stat Cnt Msg, 
    Get Debug Scrn Info Msg, 
    Gps Speech Disable Msg, 
    Rlp Stop Req Msg, 
End

Begin Enum, LmdRevStates
    UNINITIALIZED, 0,
    INITIALIZED, ,
    ACCESS, ,
    EACH, ,
    TRAFFIC, ,
    TEST_STATE, ,
    NULL_STATE, ,
    WAIT_2_FRAME_STATE, ,
End

Begin Enum, LmdRevChanTypes
    NULL_CHNL, 0
    ACCESS_CHNL, 
    EACH_CHNL, 
    TRAFFIC_CHNL, 
End

Begin Enum, AccessFrameDuration
    5MS, 0
    10MS, 
    20MS, 
End

Begin Enum, TransmitterStatus
    TransmitterOn, 0
    TransmitterOff, 1
End

Begin Enum, FwdChnl
    FSYNC, 0
    FPAGE, 1
    FBCCH, 2
    FQPCH, 3
    FCPCCH, 4
    FCACH, 5
    FCCCH, 6
    FDCCH, 7
    FFCH, 8
    FSCH, 9
    F_MON_CHNL, 10
    FWD_MAX_CHNL_TYPS, 11
End

Begin Enum, ChannelMasks
    NONE, 0
    FCH, 1
    DCCH, 2
    FCH+DCH, 3
    SCH0, 4
    FCH+SCH0, 5
    DCCH+SCH0, 6
    FCH+DCCH+SCH0, 7
    SCH1, 8
    FCH+SCH1, 9
    DCCH+SCH1, 10
    FCH+DCCH+SCH1, 11
    SCH0+SCH1, 12
    FCH+SCH0+SCH1, 13
    DCCH+SCH0+SCH1, 14
    FCH+DCCH+SCH0+SCH1, 15
End

Begin Enum, LmdSvcOpts
    Svc Opt Null, 0
    Svc Opt 1, 1
    Svc Opt 2, 2
    Svc Opt 3, 3
    Svc Opt 4, 4
    Svc Opt 5, 5
    Svc Opt 7, 7
    Svc Opt 9, 9
    Svc Opt 12, 12
    Svc Opt 13, 13
    Svc Opt 15, 15
    Svc Opt 17, 17
    Svc Opt 22, 22
    Svc Opt 23, 23
    Svc Opt 24, 24
    Svc Opt 25, 25
    Svc Opt 32, 32
    Svc Opt 33, 33
    Svc Opt 35, 35
    Svc Opt 36, 36
    Svc Opt 54, 54
    Svc Opt 55, 55
    Svc Opt 4100, 4100
    Svc Opt 4101, 4101
    Svc Opt 4103, 4103
    Svc Opt 32798, 32798
    Svc Opt 32799, 32799
    Svc Opt 32858, 32858
    Svc Opt 32859, 32859
End

Begin Enum, ChannelIds
    FCH, 0
    DCCH, 1
    SCH0, 2
    SCH1, 3
End

Begin Enum, TrafficDirection
    Forward, 1
    Reverse, 2
    Fwd+Rev, 3
End

Begin Enum, LmdSvcTasks
    DSPV Task, 0x00
    PSW Task, 0x09
    LMD Task, 0x0A
    TDSO Task, 0x0B
    RLP Task, 0x0E
    Markov Task, 0x8A
    NULL Task, 0xFF
End

Begin Enum, SchPduSizeTypes
    SINGLE, 0
    DOUBLE, 1
    VARIABLE, 3
End

Begin Enum, SrIdResetReasonTypes
    SRIDCANCEL, 0
    SRIDMODIFY, 1
End

Begin Enum, TrafficTypes
    NO_TRAFFIC, 0
    PRIMARY_TRAFFIC, 1
    SECONDARY_TRAFFIC, 2
End

Begin Enum, FrameRate
    Blank, 0
    RATE_1_16, 1
    RATE_1_8, 2
    RATE_3_16, 3
    RATE_1_4, 4
    RATE_3_8, 5
    RATE_7_16, 6
    RATE_1_2, 7
    RATE_3_4, 8
    RATE_7_8, 9
    RATE_1, 10
    RATE_1x, 11
    RATE_2x, 12
End

Begin Enum, RevPhysChnlType
    FCH_PT, 0
    FCH_SIG, 1
    FCH_SEC, 2
    DCCH_PT, 3
    DCCH_SIG, 4
    DCCH_SEC, 5
    NONE, 6
End

Begin Enum, SvcOptionStatus
    SERVICE_STAY, 0
    SERVICE_ON, 1
    SERVICE_OFF, 2
End

Begin Enum, MpFrame Functions
    Mp Set Config, 0, RO
    Mp Init Frame Queue, 1, RO
    Mp Frame Get, 2, RO
    Mp Frame Get Remainder, 3, RO
    Mp Frame Free, 4, RO
End

Begin Enum, MpActionIdT
    Set up, 0
    Check Ltu Crc, 
    Activate New Config, 
End

Begin Enum, MpStateT
    Disabled, 0
    Active, 
    Complete, 
End

Begin Enum, Markov Functions
    Srv Opt Start, 0,  RO
    Srv Opt Control, 1,  RO
    Srv Opt Control Resp, 2,  RO
    Srv Opt Fwd Routing, 3,  RO
    Resync Forward Channel, 4,  RO
    Resync Reverse Channel, 5,  RO
    Compare Lens Differ, 6,  RO
    Compare Leading Words Differ, 7,  RO
    Compare Ending Bits Differ, 8,  RO
    Compare Identical, 9,  RO
    Not Compared, 10, RO
    Dropping Primary Packet, 11, RO
End

Begin Enum, Markov Mux Options
    Mux Option1, 1
    Mux Option2, 
End

Begin Enum, Mso Ctrl Rec Types
    Mso Control Directive, 0 , RO
    Mso Counter Retrieval Directive, , RO
End

Begin Enum, Mso SSO Rates
    Variable Rate, 0
    Eighth Rate, 1
    Quarter Rate, 2
    Half Rate, 3
    Full Rate, 4
End

Begin Enum, Mso Counter Ids
    Mso Cid FER, 0
    Mso Cid Same Rate Received, 
    Mso Cid Same Rate Transmitted, 
    Mso Cid Transmitted, 
    Mso Cid Full Rate Expected, 
    Mso Cid Half Rate Expected, 
    Mso Cid Quarter Rate Expected, 
    Mso Cid Eighth Rate Expected, 
End

Begin Enum, Tdso Functions
    Resync Channel, 0,   RO
    Compare NumPdus Differ, 1,   RO
    Compare NumBits Differ, 2,   RO
    Compare Data Differ, 3,   RO
    Compare Identical, 4,   RO
    Not Compared, 5,   RO
    Srv Opt Connect, 6,   RO
    Srv Opt Processing, 7,   RO
    Srv Opt Disconnect, 8,   RO
    Control Message, 9,   RO
    Counter Retrieval Directive, 10,  RO
    Control Directive, 11,  RO
    Reset Channel, 12,  RO
    Setup Channel, 13,  RO
    Debug Rx Packet, 14,  RO
End

Begin Enum, TdsoDirections
    FUND_FORWARD, 0,
    FUND_REVERSE, 1,
    SUPP0_FORWARD, 2,
    SUPP0_REVERSE, 3,
    SUPP1_FORWARD, 4,
    SUPP1_REVERSE, 5,
    NONE, 6,
End

Begin Enum, TdsoDirMasks
    NONE, 0
    FUND_FWD, 1
    SUPP0_FWD, 4
    SUPP1_FWD, 16
    FUND_FWD+SUPP0_FWD, 5
    FUND_FWD+SUPP1_FWD, 17
    SUPP0_FWD+SUPP1_FWD, 20
    FUND_FWD+SUPP0_FWD+SUPP1_FWD, 21
    FUND_REV, 2
    SUPP0_REV, 8
    SUPP1_REV, 32
    FUND_REV+SUPP0_REV, 10
    FUND_REV+SUPP1_REV, 34
    SUPP0_REV+SUPP1_REV, 40
    FUND_REV+SUPP0_REV+SUPP1_REV, 42
End

Begin Enum, CtlRecTypes
    FOR_FCH, 5
    FOR_DCCH, 6
    FOR_SCH0, 7
    FOR_SCH1, 8
End

Begin Enum, CtrlCodes
    MS Proposal, 0
    BS Control, 1
    BS Control Based on MS Proposal, 2
    BS Control Based on MS Proposal - Num of Cbuf Frames, 3
    BS Control Based on MS Proposal - Negative Ack, 4
    BS Control Based on MS Proposal - Invalid MS Msg Structure, 5
    BS Control Based on MS Proposal (Frame Source), 6
    Reserved, 7
End

Begin Enum, VectorIds
    FER, 0
    PER (aka REC), 1
    TX, 2
End

Begin Enum, DataSources
    USE_PATTERN, 0
    USE_CIRBUF, 1
    USE_ONES, 2
End

Begin Enum, Tdso FrameActivities
    Deterministic, 0,   RO
    Random, 1,   RO
End

Begin Enum, FrameIndexTypes
    FTI_1X_171_FUND, 0
    FTI_1X_168_FUND, 
    FTI_1X_266_FUND, 
    FTI_1X_262_FUND, 
    FTI_1X_171_SUPP, 
    FTI_1X_168_SUPP, 
    FTI_1X_266_SUPP, 
    FTI_1X_262_SUPP, 
    FTI_2X_170_PRI, 
    FTI_2X_170_SEC, 
    FTI_4X_170_PRI, 
    FTI_4X_170_SEC, 
    FTI_8X_170_PRI, 
    FTI_8X_170_SEC, 
    FTI_2X_266_PRI, 
    FTI_2X_266_SEC, 
    FTI_4X_266_PRI, 
    FTI_4X_266_SEC, 
    FTI_8X_266_PRI, 
    FTI_8X_266_SEC, 
    FTI_1X_346_PRI, 
    FTI_1X_346_SEC, 
    FTI_2X_346_PRI, 
    FTI_2X_346_SEC, 
    FTI_4X_346_PRI, 
    FTI_4X_346_SEC, 
    FTI_8X_346_PRI, 
    FTI_8X_346_SEC, 
    FTI_1X_538_PRI, 
    FTI_1X_538_SEC, 
    FTI_2X_538_PRI, 
    FTI_2X_538_SEC, 
    FTI_4X_538_PRI, 
    FTI_4X_538_SEC, 
    FTI_8X_538_PRI, 
    FTI_8X_538_SEC, 
    FTI_INVALID, 0xFF
End

Begin Enum, Tdso Processings
    Build Circular Buffer, 0,   RO
    Generate Info Bits, 1,   RO
    Generate Blnk Bits, 2,   RO
    Advance Offset, 3,   RO
    Set Circular Buffer Size, 4,   RO
End

Begin Enum, Record Events
    State Change, 0,  RO
    Vocoder Connect, 1,  RO
    Vocoder Disconnect, 2,  RO
    Going On Traffic, 3,  RO
    Record Start, 4,  RO
    Record Stop, 5,  RO
    Conversation Record Start, 6,  RO
    Conversation Record Stop, 7,  RO
End

Begin Enum, Lmd Vmem States
    Inactive, 0
    Voice Memo Record, 1
    Conversation Record, 2
    Speech Play, 3
    Record Cleanup, 4
    Play Cleanup, 5
End

Begin Enum, Speech Service Options
    SSO 3  EVRC-A, 3,
    SSO 17 QCELP-13K, 17,
    SSO 68 EVRC-B, 68,
    SSO 73 EVRC-NW, 73,
End

Begin Enum, IpcPathTypes
    Reverse, 0
    Forward, 1
End

Begin Enum, Playback Events
    State Change, 0,  RO
    Vocoder Connect, 1,  RO
    Vocoder Disconnect, 2,  RO
    Going On Traffic, 3,  RO
    Playback Start, 4,  RO
    Playback Stop, 5,  RO
    Ans Play Start, 6,  RO
    Ans Play Stop, 7,  RO
End

Begin Enum, IpcDataTypes
    Packets Only, 0x0000
    16-bit PCM, 0x0001
    A-Law PCM, 0x0101
    u-Law PCM, 0x0201
    8-bit PCM, 0x0f01
    Both Packets and PCM, 0x0002
End

Begin Enum, LmdsMsgIds
    Tdso Connect, 0
    Tdso Control, 1
    Tdso Data, 2
    Tdso Disconnect, 3
    Tdso Clear STats, 4
    Tdso Ran Num Calc, 5
    Vmem Rec Start, 
    Vmem Rec Stop, 
    Conversation Rec Start, 
    Conversation Rec Stop, 
    Vrec Capture Start, 
    Vrec Capture Stop, 
    Vrec Recognition Start, 
    Vrec Recognition Stop, 
    Speech Play, 
    Speech Play Cancel, 
    Speech Play Pause, 
    Speech Play Resume, 
    Speech Set Position, 
    Vrec Playback Start, 
    Vrec Playback Cancel, 
    Recording Spch, 
    Rec Play Mode Rsp, 
    Vstrm PCM Data, 
    Vstrm Start, 
    Vstrm Stop, 
End

Begin Enum, Cdma Band
    BAND_CLASS_0, 
    BAND_CLASS_1, 
    BAND_CLASS_2, 
    BAND_CLASS_3, 
    BAND_CLASS_4, 
    BAND_CLASS_5, 
    BAND_CLASS_6, 
    BAND_CLASS_7, 
    BAND_CLASS_8, 
    BAND_CLASS_9, 
    BAND_CLASS_10, 
    BAND_CLASS_11, 
    BAND_CLASS_12, 
    BAND_CLASS_13, 
    BAND_CLASS_14, 
    BAND_CLASS_15, 
    BAND_CLASS_16, 
    BAND_CLASS_17, 
    BAND_CLASS_18, 
    BAND_CLASS_19, 
    BAND_CLASS_20, 
End

Begin Enum, Hwd Messages
    HWD_INIT_MSG, 
    HWD_RESET_MSG, 
    HWD_CP_DSPM_ALIVE_MSG, 
    HWD_CP_DSPV_ALIVE_MSG, 
    HWD_CP_DSPE_ALIVE_MSG, 
    HWD_INIT_NVRAM_ACK_MSG, 0x100,
    HWD_RF_START_CALIBRATION_MSG, 
    HWD_PWR_SAVINGS_MODE_CONFIG_MSG, 
    HWD_TST_PWR_SAVINGS_GET_MODE_MSG, 
    HWD_TST_READ_CURRENT_TEMP_MSG, 
    HWD_TST_READ_CURRENT_BATT_MSG, 
    HWD_TST_READ_CURRENT_TX_POWER_MSG, 
    HWD_VAL_READ_CURRENT_TEMP_ACK_MSG, 
    HWD_PLL_CHANNEL_SET_MSG, 0x200,
    HWD_TST_SET_CG_CK_MUX_SET_MSG, 
    HWD_TST_TX_ON_OFF_MSG, 
    HWD_TST_TX_FLTR_TEST_MSG, 
    HWD_TST_SET_TX_POWER_LIMITS, 
    HWD_TST_RX_ON_OFF_MSG, 
    HWD_TST_RF_CHANGE_CONSTANTS, 
    HWD_TST_GET_RF_CONSTANTS, 
    HWD_TST_SET_RXTX_IQ_SWAP, 
    HWD_TST_GET_RXTX_IQ_SWAP, 
    HWD_TST_RF_GEN_WRITE_MSG, 
    HWD_TST_RF_GEN_READ_MSG, 
    HWD_TST_PLL_CHANNEL_CONFIG_MSG, 
    HWD_TST_PLL_CHANNEL_GET_MSG, 
    HWD_TST_PROC_PLL_REPROGRAM_MSG, 
    HWD_TST_AFC_CONFIG_MSG, 
    HWD_TST_AFC_DATA_READ_MSG, 
    HWD_TST_RX_AGC_CONFIG_MSG, 
    HWD_TST_TX_AGC_CONFIG_MSG, 
    HWD_TST_TX_TEST_MODE_MSG, 
    HWD_TST_RX_AGC_GAIN_SET_MSG, 
    HWD_TST_RX_TX_RF_ALG_CTRL_MSG, 
    HWD_TST_DIV_RX_ON_OFF_MSG, 
    HWD_CAL_BAND_A_RX_BANK_CAL_MSG, 
    HWD_CAL_BAND_B_RX_BANK_CAL_MSG, 
    HWD_CAL_BAND_C_RX_BANK_CAL_MSG, 
    HWD_CAL_BAND_D_RX_BANK_CAL_MSG, 
    HWD_CAL_BAND_E_RX_BANK_CAL_MSG, 
    HWD_CAL_BAND_A_DIV_RX_BANK_CAL_MSG, 
    HWD_CAL_BAND_B_DIV_RX_BANK_CAL_MSG, 
    HWD_CAL_BAND_C_DIV_RX_BANK_CAL_MSG, 
    HWD_CAL_BAND_D_DIV_RX_BANK_CAL_MSG, 
    HWD_CAL_BAND_E_DIV_RX_BANK_CAL_MSG, 
    HWD_DATABASE_WRITE_ACK_MSG, 
    HWD_RF_GET_RX_AGC_DEFAULTS, 
    HWD_TXAGC_ALT_THRESHOLDS, 
    HWD_ACTIVE_PILOT_DATA_MSG, 
    HWD_RX_AGC_GAIN_TABLE_SELECT_MSG, 
    HWD_TST_ENTER_FDT_MODE_MSG, 
    HWD_TST_DO_FDT_MSG, 
    HWD_TST_EXIT_FDT_MODE_MSG, 
    HWD_TST_FDT_RX_POWER_MSG, 
    HWD_TST_FDT_CHN_SET_RSP_MSG, 
    HWD_TST_FDT_MODE_CHECK_MSG, 
    HWD_CAL_INITIALIZE_MSG, 0x300,
    HWD_CAL_AFC_PARMS_MSG, 
    HWD_CAL_TEMPERATURE_PARMS_MSG, 
    HWD_CAL_INIT_NVRAM_MSG, 
    HWD_CAL_NOT_USED_MSG, 
    HWD_CAL_RF_DB_EXISTS_RSP_MSG, 
    HWD_CAL_BAND_A_TXAGC_MSG, 
    HWD_CAL_BAND_A_TX_LIM_TEMP_ADJ_MSG, 
    HWD_CAL_BAND_A_TX_LIM_BATT_ADJ_MSG, 
    HWD_CAL_BAND_A_RXAGC_MSG, 
    HWD_CAL_BAND_A_DIV_RXAGC_MSG, 
    HWD_CAL_BAND_A_NOIMD_RXAGC_MSG, 
    HWD_CAL_BAND_A_DIV_NOIMD_RXAGC_MSG, 
    HWD_CAL_BAND_B_TXAGC_MSG, 
    HWD_CAL_BAND_B_TX_LIM_TEMP_ADJ_MSG, 
    HWD_CAL_BAND_B_TX_LIM_BATT_ADJ_MSG, 
    HWD_CAL_BAND_B_RXAGC_MSG, 
    HWD_CAL_BAND_B_DIV_RXAGC_MSG, 
    HWD_CAL_BAND_B_NOIMD_RXAGC_MSG, 
    HWD_CAL_BAND_B_DIV_NOIMD_RXAGC_MSG, 
    HWD_CAL_BAND_C_TXAGC_MSG, 
    HWD_CAL_BAND_C_TX_LIM_TEMP_ADJ_MSG, 
    HWD_CAL_BAND_C_TX_LIM_BATT_ADJ_MSG, 
    HWD_CAL_BAND_C_RXAGC_MSG, 
    HWD_CAL_BAND_C_DIV_RXAGC_MSG, 
    HWD_CAL_BAND_C_NOIMD_RXAGC_MSG, 
    HWD_CAL_BAND_C_DIV_NOIMD_RXAGC_MSG, 
    HWD_CAL_BAND_D_TXAGC_MSG, 
    HWD_CAL_BAND_D_TX_LIM_TEMP_ADJ_MSG, 
    HWD_CAL_BAND_D_TX_LIM_BATT_ADJ_MSG, 
    HWD_CAL_BAND_D_RXAGC_MSG, 
    HWD_CAL_BAND_D_DIV_RXAGC_MSG, 
    HWD_CAL_BAND_D_NOIMD_RXAGC_MSG, 
    HWD_CAL_BAND_D_DIV_NOIMD_RXAGC_MSG, 
    HWD_CAL_BAND_E_TXAGC_MSG, 
    HWD_CAL_BAND_E_TX_LIM_TEMP_ADJ_MSG, 
    HWD_CAL_BAND_E_TX_LIM_BATT_ADJ_MSG, 
    HWD_CAL_BAND_E_RXAGC_MSG, 
    HWD_CAL_BAND_E_DIV_RXAGC_MSG, 
    HWD_CAL_BAND_E_NOIMD_RXAGC_MSG, 
    HWD_CAL_BAND_E_DIV_NOIMD_RXAGC_MSG, 
    HWD_RF_VERSION_MSG, 0x400,
    HWD_SYS_BC_SUPPORT_TABLE_MSG, 
    HWD_CAL_DSPM_READY_MSG, 
    HWD_RF_DRIVER_CMD, 
    HWD_ETS_RSSI_CORRECTION_MSG, 
    HWD_GET_EVDO_TO_1X_BACKOFF_MSG, 
    HWD_USB_DEV_CONTROL_MSG, 
    HWD_USB_EP0_IN_EVT_MSG, 
    HWD_USB_EP0_IN_DONE_MSG, 
    HWD_USB_EP0_OUT_DONE_MSG, 
    HWD_SYS_TRANSIT_1X_TO_DO_MSG, 0x500,
    HWD_SYS_TRANSIT_DO_TO_1X_MSG, 
    HWD_SYS_REGISTER_SYS_TIME_MSG, 
    HWD_SYS_SET_FRAMEOFFSET_MSG, 
    HWD_SYS_TIME_DO_GET_MSG, 
    HWD_SYS_9MHZ_CNT_INIT_MSG, 
    HWD_SYS_TIMEDATA_GET_MSG, 
    HWD_SYS_SET_PARM_MSG, 
    HWD_SYS_GET_PARM_MSG, 
    HWD_TS_EVENT_MSG, 0x600,
    HWD_TS_TIMER_MSG, 
    HWD_FIRST_CUST_MSG_ID, 0xA000,
End

Begin Enum, ClkCtrlBits
    L1D Control, 0x01,
    MDM Control, 0x02,
    ETS Control, 0x04,
    MON Control, 0x08,
    HWD Control, 0x10,
    JTAG Control, 0x20,
    Dnld Control, 0x40,
End

Begin Enum, Rac Ctrl Enum
    RAC_MEMORY_INIT, 0,
    RAC_INIT_ONLY, ,
    RAC_RES_CTRL_INIT, ,
    RAC_RES_CTRL_CLOSE, ,
End

Begin Enum, Power Save Voice Mode
    No Change, 0
    Idle, 1
    Mic On, 2
    Spkr On, 4
    Mic AND Spkr On, 6
End

Begin Enum, Cal Update Code
    TEMP_UPD, 0,
    BATT_UPD, ,
    BAND_UPD, ,
    ADJ_ONLY_UPD, ,
    RX_PARMS_UPD, ,
    TX_PARMS_UPD, ,
    MAX_PARMS_UPD, ,
End

Begin Enum, RfCtrlTrace
    RF_RX_CTRL, 0,
    RF_TX_CTRL, ,
    RF_RX_FIFO, ,
    RF_TX_FIFO, ,
    RF_ERROR, ,
    RF_TX_PWRFIQ, ,
End

Begin Enum, TxOnRfOnType
    NotUsed, 0,
    RF_RX1, ,
    RF_RX2, ,
    RF_RX1_2, ,
    RF_TX1, ,
    RF_PWR_SAVE, ,
End

Begin Enum, GenericEnum
    LTL_GET_FOFFS, 0,
    ADJCNT_ASYNC_UPDT, ,
    PLL_FREQ_ADJ, ,
    DLL_ADJ, ,
    LTL_GET_FOFFS_B4SLEEP, ,
    VSWR_START, ,
    VSWR, ,
    DM_FRAME_CHANGE, ,
    AT_PROFILE_ID, ,
    ALG_GNSS_STATE, ,
End

Begin Enum, BasCtrlTrace
    BAS_INIT, 0,
    BAS_PMAX_UPDATE, ,
    BAS_MODE_SET, ,
    BAS_SWITCH_PORT, ,
End

Begin Enum, ErrorCtrl
    SMARTI, 0x7008,
End

Begin Enum, SleepEvent
    Enter, 0
    Exit, 1
End

Begin Enum, SysTraceTrackT
    SYS_T_SYSTIME_SYNC, 
    SYS_T_SYSTIME_SYNC_2, 
    SYS_T_SYSTIME_SYNC_3, 
    SYS_T_CLEAR_TIME_QUEUE_WRAP, 
    SYS_T_CLEAR_TIME_QUEUE_WRAP_2, 
    SYS_T_CLEAR_TIME_QUEUE_WRAP_3, 
    SYS_T_DO_INIT, 
    SYS_T_DO_INIT_2, 
    SYS_T_DO_INIT_3, 
    SYS_T_QUEUE_INSERT_ENTRY, 
    SYS_T_QUEUE_INSERT_ENTRY_2, 
    SYS_T_QUEUE_INSERT_ENTRY_3, 
    SYS_T_QUEUE_FLUSH_SLOT, 
    SYS_T_QUEUE_FLUSH_ACTION, 
    SYS_T_QUEUE_FLUSH_3, 
    SYS_T_QUEUE_RESET, 
    SYS_T_QUEUE_RESET_2, 
    SYS_T_QUEUE_RESET_3, 
    SYS_T_CALLBACK_REG_SUCCESS, 
    SYS_T_CALLBACK_REG_FRAMEOFT, 
    SYS_T_CALLBACK_REG_3, 
    SYS_T_CALLBACK_REG_4, 
    SYS_T_CALLBACK_FROM_Q_TO_KEEP, 
    SYS_T_CALLBACK_FROM_KEEP_TO_Q, 
    SYS_T_CALLBACK_FROM_3, 
    SYS_T_CALLBACK_FROM_4, 
    SYS_T_CALLBACK_CANCEL_SUCCESS, 
    SYS_T_CALLBACK_CANCEL_FRAMEOFT, 
    SYS_T_CALLBACK_CANCEL_GROUP, 
    SYS_T_CALLBACK_CANCEL_4, 
    SYS_T_CALLBACK_CANCEL_5, 
    SYS_T_TRANSITION, 
    SYS_T_TRANSITION_2, 
    SYS_T_TRANSITION_3, 
    SYS_T_SWITCH, 
    SYS_T_SWITCH_2, 
    SYS_T_SWITCH_3, 
    SYS_T_TIME_STATUS_UPDATE, 
    SYS_T_TIME_RESET, 
    SYS_T_TIME_3, 
    SYS_T_TIME_4, 
    SYS_T_ACTION_HISR_ACTION_SLOT, 
    SYS_T_ACTION_HISR_ACTION, 
    SYS_T_ACTION_HISR_3, 
    SYS_T_ACTION_HISR_4, 
    SYS_T_TIME_INTERRUPT, 
    SYS_T_TIME_INTERRUPT_2, 
    SYS_T_TIME_INTERRUPT_3, 
    SYS_T_SLOT_HISR, 
    SYS_T_SLOT_HISR_2, 
    SYS_T_SLOT_HISR_3, 
    SYS_T_DOTIME_SET, 
    SYS_T_DOTIME_FULL_SET, 
    SYS_T_DOTIME_ADJUST, 
    SYS_T_DOTIME_SYNC, 
    SYS_T_DOTIME_5, 
    SYS_T_DOTIME_6, 
    SYS_T_DOFRM_OFFSET_SET, 
    SYS_T_DOFRM_OFFSET_SET_2, 
    SYS_T_DOFRM_OFFSET_SET_3, 
    SYS_T_9MHZCNT_INIT_REQ, 
    SYS_T_9MHZCNT_INIT_WRT, 
    SYS_T_9MHZCNT_INIT_COMPLETE, 
    SYS_T_9MHZCNT_INIT_NO_1XTIME, 
    SYS_T_9MHZCNT_INIT_5, 
    SYS_T_9MHZCNT_INIT_6, 
    SYS_T_FRAMEOFT_NEW, 
    SYS_T_FRAMEOFT_DONE, 
    SYS_T_FRAMEOFT_3, 
    SYS_T_FRAMEOFT_4, 
    SYS_T_TIME_DATA_SYNC, 
    SYS_T_TIME_DATA_SYNC_2, 
    SYS_T_TIME_DATA_SYNC_3, 
    SYS_T_TIME_DATA_GET, 
    SYS_T_TIME_DATA_GET_2, 
    SYS_T_TIME_DATA_GET_3, 
    SYS_T_TIME_2SECS, 
    SYS_T_TIME_2SECS_2, 
    SYS_T_TIME_DATA_COPY, 
    SYS_T_TIME_DATA_COPY_2, 
    SYS_T_TIME_DATA_COPY_3, 
    SYS_T_TIME_DATA_FLUSH, 
    SYS_T_TIME_DATA_FLUSH_2, 
    SYS_ERR_Q_FULL, 
    SYS_ERR_MEMORY_FULL, 
    SYS_ERR_REG_INVALID_SLOT, 
    SYS_ERR_REG_INVALID_TIME, 
    SYS_ERR_REG_INVALID_AIR_INTERFACE, 
    SYS_ERR_CANCEL_INVALID_SLOT, 
    SYS_ERR_CANCEL_INVALID_TIME, 
    SYS_ERR_CANCEL_INVALID_ACTIONTYPE, 
    SYS_WARNING_CANCEL_FAILED, 
    SYS_WARNING_CANCEL_INVALID_TIME, 
    SYS_WARNING_9MHZCNT_REQ_INVALID, 
    SYS_T_BCT_GET_CURR_CDMA_TIME, 
    SYS_T_BCT_GET_CURR_BCT_TIME, 
    SYS_T_BCT_TS_2_CDMA, 
    SYS_T_BCT_CDMA_2_TS, 
    SYS_T_BCT_FINE_BCT_2_BCT, 
    SYS_T_BCT_SCHD_SYS_TIME_RESET, 
    SYS_T_BCT_RESET_BCT_CELL_TMR, 
    SYS_T_BCT_PILOT_ACQ_CELL_TMR_SYNC, 
    SYS_T_BCT_SYNC_ACQ_CELL_TMR_SYNC, 
    SYS_T_BCT_SYS_TIME_SYNC, 
    SYS_T_MAX, 
End

Begin Enum, HwdSysTraceTrackT
    HWD_SYS_T_CALLBACK_EVENT, 
    HWD_SYS_T_MAX, 
End

Begin Enum, CpBufTypeT
    FWD, 0
    REV, 1
    SIG, 2
    HDR, 3
    FWD1X, 4
End

Begin Enum, HSPD PRI Trace Type Enum
    ValSetHlpParm(), ,RO
    ValGetHlpParm(), ,RO
    process_cp_set_hlp_parm_rsp(), ,RO
    process_cp_get_hlp_parm_rsp(), ,RO
End

Begin Enum, HlpParmOperationId
    All Params in a Profile Set, 0,
    All Params in a Profile Get, 1,
    Secure Text Data in a profile Set, 2,
    Secure Byte Data in a profile Set, 3,
    Secure Data in a profile Get, 4,
    All HSPD Seg Data Set, 5,
    All HSPD Seg Data Get, 6,
    All HSPD Seg Data Init, 7,
    Seg Profile Data Init, 8,
    Profile Id of Active Profile Set, 9,
    Profile Id of Active Profile Get, 10,
    Number of Profiles Set, 11,
    Number of Profiles Get, 12,
    MIP Registration Response Timeout Set, 13,
    MIP Registration Response Timeout Get, 14,
    MIP Registration Retries Set, 15,
    MIP Registration Retries Get, 16,
    MIP Pre-Reregistration Timeout Set, 17,
    MIP Pre-Reregistration Timeout Get, 18,
    IS801 Ip Addr Set, 19,
    IS801 Ip Addr Get, 20,
    IS801 IP Port Set, 21,
    IS801 IP Port Get, 22,
    IS801 userID Set, 23,
    IS801 userID Get, 24,
    IS801 Password Set, 25,
    IS801 Password Get, 26,
    IS801 Callnumber Set, 27,
    IS801 Callnumber Get, 28,
    Mobile Node-HA Authentication Set, 29,
    Mobile Node-HA Authentication Get, 30,
    MN HA Auth Algorithm Set, 31,
    MN HA Auth Algorithm Get, 32,
    MN AAA Auth Algorithm Set, 33,
    MN AAA Auth Algorithm Get, 34,
    MN_Authenticator Set, 35,
    MN_Authenticator Get, 36,
    DMU RSA or DMU Test RSA Public Key Set, 37,
    DMU RSA or DMU Test RSA Public Key Get, 38,
    Active nPKOI Set, 39,
    Active nPKOI Get, 40,
    SIP NAI Set, 41,
    SIP NAI Get, 42,
    SIP DUN NAI Set, 43,
    SIP DUN NAI Get, 44,
    AN NAI(A12 Testing)Set, 45,
    AN NAI(A12 Testing)Get, 46,
    Dormant Handoff Optimization Set, 47,
    Dormant Handoff Optimization Get, 48,
    Data SCRM Enable Set, 49,
    Data SCRM Enable Get, 50,
    Data Throttling Enable Set, 51,
    Data Throttling Enable Get, 52,
    Preferred Radio Config Set, 53,
    Preferred Radio Config Get, 54,
    DNS Primary Addr Set, 55,
    DNS Primary Addr Get, 56,
    DNS Secondary Addr Set, 57,
    DNS Secondary Addr Get, 58,
    DNS IP Addr Get, 59,
    DNS IP Addr Set, 60,
    MIP Mode Set, 61,
    MIP Mode Get, 62,
    SIP Password String Set, 63,
    SIP Password String Get, 64,
    AN Password Set, 65,
    AN Password Get, 66,
    AN Password HEX Set, 67,
    SIP Password HEX Set, 68,
    Packet Dial String Set, 69,
    Packet Dial String Get, 70,
    VJ Compression Enable Set, 71,
    VJ Compression Enable Get, 72,
    MIP Password String Set, 73,
    MIP Password String Get, 74,
    MIP Password HEX Set, 75,
    MIP Password HEX Get, 76,
    QNC Enabled Set, 77,
    QNC Enabled Get, 78,
    MDR Mode Set, 79,
    MDR Mode Get, 80,
    Secure Seg Data Init, 81,
    SIP Password HEX Get, 82,
    AKA Password Set, 83,
    AKA Password Get, 84,
    AKA Profile Data Set, 85,
    AKA Profile Data Get, 86,
    Lock Get, 87
    Lock Set, 88,
    Lock Code Set, 89,
    Data Auto Packet Detection Set, 90,
    Data Auto Packet Detection Get, 91,
    Data SO Set, 92,
    Data SO Get, 93,
    HL_PARM_SET_MN_NAI, 94,
    HL_PARM_GET_MN_NAI, 95,
    HL_PARM_SET_MN_DUN_NAI, 96,
    HL_PARM_GET_MN_DUN_NAI, 97,
    HL_PARM_SET_MN_HA_SPI_ENABLE, 98,
    HL_PARM_GET_MN_HA_SPI_ENABLE, 99,
    HL_PARM_SET_MN_HA_SPI, 100,
    HL_PARM_GET_MN_HA_SPI, 101,
    HL_PARM_SET_MN_AAA_SPI_ENABLE, 102,
    HL_PARM_GET_MN_AAA_SPI_ENABLE, 103,
    HL_PARM_SET_MN_AAA_SPI, 104,
    HL_PARM_GET_MN_AAA_SPI, 105,
    HL_PARM_SET_MN_REVERSE_TUNNELING, 106,
    HL_PARM_GET_MN_REVERSE_TUNNELING, 107,
    HL_PARM_SET_MN_HOME_IP_ADDRESS, 108,
    HL_PARM_GET_MN_HOME_IP_ADDRESS, 109,
    HL_PARM_SET_HOME_AGENT_PRIMARY_IP_ADDRESS, 110,
    HL_PARM_GET_HOME_AGENT_PRIMARY_IP_ADDRESS, 111,
    HL_PARM_SET_HOME_AGENT_SECONDARY_IP_ADDRESS, 112,
    HL_PARM_GET_HOME_AGENT_SECONDARY_IP_ADDRESS, 113,
    Network or Relay Mode Set, 114,
    Network or Relay Mode Get, 115,
    Dormant Timer Set, 116,
    Dormant Timer Get, 117,
    MIP De-Registration Retries Set, 118,
    MIP De-Registration Retries Get, 119,
    MIP Re-Reg Only If Traffic Set, 120,
    MIP Re-Reg Only If Traffic Get, 121,
    MIP NAI Enable Set, 122,
    MIP NAI Enable Get, 123,
    HSPD Data DO to 1X Enabled Set, 124,
    HSPD Data DO to 1X Enabled Get, 125,
    PPP-UM Configuration Set, 126,
    PPP-UM Configuration Get, 127,
    PPP-RM Configuration Set, 128,
    PPP-RM Configuration Get, 129,
    TCP Configuration Set, 130,
    TCP Configuration Get, 131,
    Retry Timer Set, 132,
    Retry Timer Get, 133,
    SIP Auth Pref Set, 134,
    SIP Auth Pref Get, 135,
    OMADM Dormant Timer Set, 136,
    OMADM Dormant Timer Get, 137,
    HL_PARM_SET_EHRPD_TEST_MODE, 148,
    HL_PARM_GET_EHRPD_TEST_MODE, 149,
    HL_PARM_SET_PROFILE_VALID, 150,
    HL_PARM_GET_PROFILE_VALID, 151,
End

Begin Enum, ParmOperationType
    Parm Min Value, 
    Parm Max Value, 
    Parm Default Value, 
    Parm Custom Value, 
End

Begin Enum, ExeTaskIdT
    EXE_IPC_ID, 0
    EXE_IOP_ID, 1
    SPARE1, 2
    EXE_L1D_MDM_ID, 3
    EXE_MON_ID, 4
    EXE_MON_IDL_ID, 5
    EXE_HWD_ID, 6
    EXE_DBM_ID, 7
    EXE_TST_ID, 8
    EXE_PSW_ID, 9
    EXE_LMD_ID, 10
    EXE_LMD_S_ID, 11
    EXE_VAL_ID, 12
    EXE_L1D_AMPS_ID, 13
    EXE_RLP_ID, 14
    EXE_HLP_ID, 15
    SPARE2, 16
    SPARE3, 17
    EXE_PSW_S_ID, 18
    SPARE4, 19
    SPARE5, 20
    EXE_UIM_ID, 21
    EXE_UI_ID, 22
    EXE_FSM_ID, 23
    EXE_IRDA_ID, 24
    EXE_HSC_ID, 25
    EXE_SLC_ID, 26
    EXE_CLC_ID, 27
    EXE_RMC_ID, 28
    EXE_FCP_ID, 29
    EXE_RCP_ID, 30
End

Begin Enum, HlpParmAccessResultCode
    HL_PARM_OPERATION_SUCCESS, 
    HL_PARM_OPERATION_FAIL_READ_NOT_ALLOWED, 
    HL_PARM_OPERATION_FAIL_WRITE_NOT_ALLOWED, 
    HL_PARM_OPERATION_NOT_ALLOWED_IN_HL_STATE, 
    HL_PARM_OPERATION_FAIL_INVALID_PTR, 
    HL_PARM_OPERATION_FAIL_INVALID_LENGTH, 
    HL_PARM_OPERATION_GENERAL_FAILURE, 
    HL_PARM_OPERATION_NO_CHANGE_IN_VALUE, 
    HL_PARM_OPERATION_FAIL_VALUE_OUT_OF_RANGE, 
    HL_PARM_OPERATION_PARAMETER_NOT_SUPPORTED, 
    HL_PARM_OPERATION_INTERFACE_NOT_SUPPORTED, 
    HL_PARM_OPERATION_FAIL_OP_TYPE_NOT_SUPPORTED, 
    HL_PARM_OPERATION_FAIL_DEFAULT_NOT_DEFINED, 
    HL_PARM_OPERATION_FAIL_DEFAULT_NOT_SUPPORTED_FOR_PARM, 
    HL_PARM_OPERATION_END_LIST, 
End

Begin Enum, ConnParmId Enum
    ERI_VERSION_NUMBER, , RO
    HRPD_ROAMING_NETWORK, , RO
    HRPD_RSSI, , RO
    HRPD_RSSI_DBM, , RO
    HRPD_SESSION_OPENED, , RO
    HRPD_NETWORK_ACQUIRED, , RO
    HRPD_ROAMING_INDICATOR, , RO
    HSPD_BYTE_COUNT_STATS, , RO
    CDMA1X_IN_SERVICE, , RO
    CDMA1X_ON_TRAFFIC, , RO
    CDMA1X_ROAMING_INDICATOR, , RO
    CDMA1X_ROAMING_NETWORK, , RO
    CDMA1X_RSSI, , RO
    CDMA1X_RSSI_DBM, , RO
    CONN_STATUS, , RO
    CONN_LAST_NETWORK_ERROR, , RO
    OTASP_STATE, , RO
    ORIG_ABORT_REASON, , RO
    NUM_VAL_CONN_PARMS, , RO
End

Begin Enum, ValPswState Enum
    VAL_PSW_DISABLED, ,RO
    VAL_PSW_NO_SERVICE_STATE, ,RO
    VAL_PSW_IDLE_STATE, ,RO
    VAL_PSW_CALL_ORIGINATE_WAIT_STATE, ,RO
    VAL_PSW_DEDICATED_CALL_STATE, ,RO
    VAL_PSW_CALL_ALERT_WAIT_STATE, ,RO
End

Begin Enum, PDNType
    IPv4 only, 1
    IPv6 only, 
    IPv4 and IPv6, 
End

Begin Enum, AttachType
    Initial, 1
    HandOver, 3
End

Begin Enum, RatMmcApiIdT
    RAT_MMC_API_POWERUP_REQ, 0x400,
    RAT_MMC_API_POWERDOWN_REQ, 
    RAT_MMC_API_RAT_ONLY_MODE_REQ, 
    RAT_MMC_API_RAT_3GPP_MODE_REQ, 
    RAT_MMC_API_ACQ_REQ, 
    RAT_MMC_API_MCC_SEARCH_REQ, 
    RAT_MMC_API_PS_REG_REQ, 
    RAT_MMC_API_NO_SERVICE_REQ, 
    RAT_MMC_API_CELL_GLOBAL_ID_RSP, 
    RAT_MMC_API_DATACONNECTION_CMD_REQ, 
    RAT_MMC_API_DEFAULTBEARER_REQ, 
    RAT_MMC_API_DEDICATEDBEARER_REQ, 
    RAT_MMC_API_BEARER_DISCONNECT_REQ, 
    RAT_MMC_API_BEARER_DETACH_REQ, 
    RAT_MMC_API_IRAT_MEAS_IND, 
    RAT_MMC_API_IRAT_SYSTEM_CHG_RSP, 
    RAT_MMC_API_IRAT_SIB8_MEAS_IND, 
    RAT_MMC_API_RAT_MEASCMD, 
    RAT_MMC_API_RAT_RESELMEASCMD, 
    RAT_MMC_API_STOP_IRAT_RATMEAS_CMD, 
    RAT_MMC_API_CELL_INFO_PS_REG_REQ, 
    RAT_MMC_API_CDMA_TXPWR_RSP, 
    RAT_MMC_API_IRAT_RESELMEAS_IND, 
    RAT_MMC_API_IRAT_HANDOVER_RSP, 
    RAT_MMC_API_RAT_HANDOVER_PS_REG_REQ, 
    RAT_MMC_API_SET_IDLEMODEMOBILITYINFO, 
    RAT_MMC_API_PACKET_STATISTICS_RSP, 
    RAT_MMC_API_PDN_TABLE_SETUP_REQ, 
    RAT_MMC_API_RAT_MODE_REQ, 
    APMMCAPI_GMSS_MODE_SELECT_RSP, 0x9001,
    APMMCAPI_GMSS_MODE_QUERY_RSP, 0x9002,
    APMMCAPI_GMSS_POWER_UP_RSP, 0x9003,
    APMMCAPI_GMSS_POWER_DOWN_RSP, 0x9004,
    APMMCAPI_GMSS_SERVICE_STATUS_IND, 0x9005,
    APMMCAPI_GMSS_SERVICE_STATUS_RSP, 0x9006,
    APMMCAPI_PKT_CALL_SETUP_RSP, 0x9007,
    APMMCAPI_PKT_DEFAULT_BEARER_RSP, 0x9008,
    APMMCAPI_PKT_HRPD_1X_SETUP_RSP, 0x9009,
    APMMCAPI_PKT_CALL_RCNT_IND, 0x900a,
    APMMCAPI_PKT_CALL_DISCONNECT_RSP, 0x900b,
    APMMCAPI_PKT_DEDICATED_SETUP_IND, 0x900c,
    APMMCAPI_PKT_DEDICATED_SETUP_RSP, 0x900d,
    APMMCAPI_PKT_BEARER_DISCONNECT_RSP, 0x900e,
    APMMCAPI_PKT_BEARER_DISCONNECT_IND, 0x900f,
    APMMCAPI_PKT_DETACH_RSP, 0x9010,
    APMMCAPI_PKT_SET_PDN_TABLE_RSP, 0x9011,
    APMMCAPI_PKT_APN_ENABLE_RSP, 0x9012,
    APMMCAPI_PKT_PDN_UPDATE_RSP, 0x9013,
    APMMCAPI_PKT_SET_QOS_TABLE_RSP, 0x9014,
    APMMCAPI_PKT_GET_QOS_TABLE_RSP, 0x9015,
    APMMCAPI_PKT_SET_SIP_NAI_PSWD_RSP, 0x9016,
    APMMCAPI_GMSS_CS_CALL_INITIATE_RSP, 0x9017,
End

Begin Enum, RatToMmcMsgIdT
    MMC_RAT_API_POWERUP_RSP, 0x480,   RO
    MMC_RAT_API_POWERDOWN_RSP, ,   RO
    MMC_RAT_API_CMD_REJ_IND, ,   RO
    MMC_RAT_API_RAT_ONLY_MODE_RSP, ,   RO
    MMC_RAT_API_RAT_3GPP_MODE_RSP, ,   RO
    MMC_RAT_API_ACQ_RSP, ,   RO
    MMC_RAT_API_MCC_SEARCH_RSP, ,   RO
    MMC_RAT_API_PS_REG_RSP, ,   RO
    MMC_RAT_API_NO_SERVICE_RSP, ,   RO
    MMC_RAT_API_NWT_ST_CHG_IND, ,   RO
    MMC_RAT_API_CELL_GLOBAL_ID_REQ, ,   RO
    MMC_RAT_API_DATACONNECTION_CMD_RSP, , RO
    MMC_RAT_API_DEFAULTBEARER_RSP, ,   RO
    MMC_RAT_API_DEDICATEDBEARER_IND, ,   RO
    MMC_RAT_API_DEDICATEDBEARER_RSP, ,   RO
    MMC_RAT_API_BEARER_DISCONNECT_RSP, ,  RO
    MMC_RAT_API_BEARER_DISCONNECT_IND, ,  RO
    MMC_RAT_API_BEARER_DETACH_RSP, ,   RO
    MMC_RAT_API_IRAT_MEAS_CMD, ,   RO
    MMC_RAT_API_IRAT_SYSTEM_CHG_REQ, ,   RO
    MMC_RAT_API_IRAT_SIB8_MEAS_CMD, ,   RO
    MMC_RAT_API_RAT_MEASIND, ,   RO
    MMC_RAT_API_RAT_RESELMEASIND, ,   RO
    MMC_RAT_API_STOP_IRAT_MEAS_CMD, ,   RO
    MMC_RAT_API_CELL_INFO_PS_REG_RSP, ,   RO
    MMC_RAT_API_CDMA_TXPWR_REQ, ,   RO
    MMC_RAT_API_RAT_HANDOVER_PS_REG_RSP, ,RO
    MMC_RAT_API_IRAT_HANDOVER_REQ, ,   RO
    MMC_RAT_API_IRAT_RESELMEAS_CMD, ,   RO
    MMC_RAT_API_SET_IDLEMODEMOBILITYINFO, ,RO
    MMC_RAT_API_PACKET_STATISTICS_REQ, , RO
    MMC_RAT_API_PDN_TABLE_SETUP_RSP, , RO
    MMC_RAT_API_MODE_RSP, , RO
    MMC unknown message ID, 0xFAFAFAFA  , RO
End

Begin Enum, GmssRatId
    MMC_RAT_NULL, 
    MMC_CDMA2K1X, 2
    MMC_GERAN, 
    MMC_CDMA2KHRPD, 
    MMC_UTRAN, 
    MMC_CDMA2KAI, 
    MMC_EUTRAN, 9
    MMC_3GPPAI, 
    MMC_RAT_NUM, 
End

Begin Enum, AcqResultT
    RAT_ACQUAIRED, 
    RAT_FAILED, 
    RAT_COMMAND_REJECTED, 
End

Begin Enum, RegResultT
    RAT_REG_REGISTERED, 
    RAT_REG_ACQUAIRED, 
    RAT_REG_FAILED, 
    RAT_REG_COMMAND_REJECTED, 
End

Begin Enum, Modem Data State Type
    MODEM_ACTIVE, 
    MODEM_DORMANT, 
    MODEM_IDLE, 
    MODEM_SUSPENDED, 
    MODEM_DISABLED, 
    MODEM_ON_1X_TRAFFIC, 
    MODEM_RELEASED, 
End

Begin Enum, Bearer Status Type
    PDN Success, 
    PDN Fail, 
    PDN Duplicate, 
    PDN Renegotiate, 
End

Begin Enum, Bearer Error Code Type
    Bearer PGWUnreachable, 
    Bearer PGWReject, 
    Bearer InsufficientParameters, 
    Bearer ResourceUnavailable, 
    Bearer AdminProhibited, 
    Bearer PDNIDAlreadyInUse, 
    Bearer SubScriptionLimitation, 
    Bearer PDNConnAlreadyExistForPDN, 
    Bearer EAPAKAfailure, 0x80
    Bearer RetryTmrThrottling, 
    Bearer NetworkNoRsp, 
    Bearer PDNAttachAbort, 
    Bearer PDNLimitExceededInUESide, 
    Bearer PDNIDAlreadyInUseInUESide, 
    Bearer InvalidPDNAttachReq, 
    Bearer PdnRecFailure, 
    Bearer MainConnSetupFailure, 
    Bearer Resource Unavailable, 
    Bearer OpAbortByUser, 
    Bearer RttDataConnected, 
    Bearer EAPAKAReject, 
    Bearer LCPNego3Failure, 
    Bearer TCHSetupFailure, 
    Bearer NwNoRspInLCP, 
    Bearer NwNoRspInAuth, 
    Bearer Success, 0xff
End

Begin Enum, PACRxMsgId Enum
    PAC_FINE_TIME_AIDING_REQ_MSG, 0
    PAC_FREQUENCY_AIDING_REQ_MSG, 1
    PAC_TST_DEBUG1_MSG, 11
    PAC_TST_DEBUG2_MSG, 12
    PAC_TST_DEBUG3_MSG, 13
    PAC_TST_DEBUG4_MSG, 14
    PAC_TST_DEBUG5_MSG, 15
    PAC_NUM_MSGS_ID, 
End

Begin Enum, PACTxMsgId Enum
    PDS_FINE_TIME_AIDING_RESP_MSG, 0
    PDS_FREQUENCY_AIDING_RESP_MSG, 1
    PAC_NUM_TX_MSGS_ID, 
End

Begin Enum, RLP Frame Rate
    RLP rate blank, 
    RLP rate 1_16, 
    RLP rate 1_8, 
    RLP rate 3_16, 
    RLP rate 1_4, 
    RLP rate 3_8, 
    RLP rate 7_16, 
    RLP rate 1_2, 
    RLP rate 3_4, 
    RLP rate 7_8, 
    RLP rate 1, 
    RLP rate 1x, 
    RLP rate 2x, 
    RLP rate total, 
    RLP rate bad, 
End

Begin Enum, RLP FCH Frame Type
    B2, 0x40
    B3, 0x60
    Blank, 0x10
    A-UnSeg, 0x00
    A-Seg, 0x80
    Fill, 0x90
    Idle, 0xA0
    SYNC, 0xD0
    SYNC/ACK, 0xF0
    ACK, 0xE0
    NAK, 0xC0
End

Begin Enum, RLP Frame Type
    D, 0
    WRONG, 1
    C2, 2
    C3, 3
    TRUE, 
End

Begin Enum, RLP Channel Id
    Primary Channel, 
    Secondary Channel, 
End

Begin Enum, RLP Mode Type
    Non Transparent, 
    Transparent, 
End

Begin Enum, RLP Bool Type
    FALSE, 
    TRUE, 
End

Begin Enum, RLP Rate Ctrl Type
    RLP Rate Ctrl0, 
    RLP Rate Ctrl1, 
    RLP Rate Ctrl2, 
    RLP Rate Ctrl3, 
    RLP Rate Ctrl4, 
End

Begin Enum, PPPprotocol Enum
    PRO_MNRP, 0x4003
    PRO_VSNCP, 0x805b
    PRO_VSNP, 0x005b
    PRO_IPV6, 0x0057
End

Begin Enum, AppType Enum
    APP_ASYNC_TCP, 0
    APP_PACKET_RLP, 1
    APP_BROWSER_UDP, 2
    APP_PACKET_UART, 3
    APP_BROWSER_ON_ASYNC, 4
    APP_BROWSER_CKT_TCP, 5
    APP_BROWSER_PKT_TCP, 6
    APP_PPP_ONLY, 7
    APP_ACS_STREAM, 8
    APP_MAIN_CONN, 9
End

Begin Enum, VSNCPheader Enum
    PPP_CONFIG_REQ, 1
    PPP_CONFIG_ACK, 2
    PPP_CONFIG_NAK, 3
    PPP_CONFIG_REJ, 4
    PPP_TERM_REQ, 5
    PPP_TERM_ACK, 6
    PPP_CODE_REJ, 7
    PPP_PROT_REJ, 8
    PPP_ECHO_REQ, 9
    PPP_ECHO_RPLY, 10
    PPP_DISCARD, 11
End

Begin Enum, PDN_State Enum
    PDN_IDLE, 0
    PDN_REQ_SENT, 
    PDN_ACK_RCVD, 
    PDN_ACK_SENT, 
    PDN_OPEN, 
    PDN_TERM_REQ_SENT, 
    PDN_TERM_REQ_RCVD, 
End

Begin Enum, PDNType Enum
    IPv4 only, 1
    IPv6 only, 
    IPv4 and IPv6, 
End

Begin Enum, AttachType Enum
    Initial, 1
    HandOver, 3
End

Begin Enum, DATA_Path Enum
    PATH_HDLC, 0
    PATH_IP, 1
    PATH_ROHC, 2
    PATH_IP_WITH_PDNMUX, 3
End

Begin Enum, PDN_APPType Enum
    APP_DIAL_UP, 0
    APP_SIP, 1
    APP_VOIP, 2
    APP_LTE, 3
End

Begin Enum, DATA_CONN_CMD
    CONN_SUSPEND, 0
    CONN_RESUME, 1
    CONN_DIABLE, 2
    CONN_RELEASE, 3
    CONN_RESET, 4
End

Begin Enum, NSPE State
    IDLE, 0
    RLP_CONNECTING, 1
    NET_CONNECTING, 2
    TCP_CONNECTING, 3
    PPP_CONNECTING, 4
    LCP_CONNECTED, 5
    PPP_CONNECTED, 6
    NET_CONNECTED, 7
    ABORTING, 8
    CLOSING, 9
    UM_RENEGOTIATION, 10
    UM_MIP_DEREGISTERING, 11
End

Begin Enum, HLP Cam State
    IDLE_STATE, 
    IDLE_WFR_SYSTEM_RSP_STATE, 
    IDLE_WFR_CP_CONNECT_STATE, 
    IDLE_WFR_CP_CONNECT_RETRY_STATE, 
    WFR_UM_CONNECT_STATE, 
    WFR_RM_CONNECT_STATE, 
    CONNECTED_STATE, 
    WFR_UM_RELEASE_STATE, 
    WFR_RM_RELEASE_STATE, 
    WFR_CP_DORMANT_STATE, 
    DORMANT_STATE, 
    DORMANT_WFR_SYSTEM_RSP_STATE, 
    DORMANT_WFR_CP_CONNECT_STATE, 
    DORMANT_WFR_CP_CONNECT_RETRY_STATE, 
    TO_BE_RECONNECTED_STATE, 
    WFR_CP_RELEASE_STATE, 
    WFR_XOFF_RESPONSE_STATE, 
End

Begin Enum, DATA_STATE_IND
    NET_ISCONN_STATUS, 
    NET_INPROGRESS_STATUS, 
    NET_NONET_STATUS, 
    NET_CLOSEINPROGRESS_STATUS, 
    NET_DORMINPROGRESS_STATUS, 
    NET_INDORMANCY_STATUS, 
    NET_WAKINGUP_STATUS, 
    NET_SUSPEND_STATUS, 
    NET_IDLE_STATUS, 
    NET_DISABLED_STATUS, 
    NET_UNAVAILABLE_STATUS, 
    NET_RELEASED_STATUS, 
End

Begin Enum, HLP Interface Type
    Um, 
    Rm, 
    Access Stream, 
End

Begin Enum, HLP PPP status Type
    SUCCESS, 0,
    CONNECT FAIL TCP, 1,
    CONNECT FAIL PPP, 2,
    CONNECT FAIL RLP, 3,
    CONNECT FAIL UART, 4,
    DISCONNECT NORMAL, 5,
    CONNECTING MoIP, 20,
    DISCONNECTING MoIP, 21,
End

Begin Enum, HLP Cam Event
    PPP_CONNECT_REQ_EVENT, 
    ANSWER_REQ_EVENT, 
    DORMANT_REQ_EVENT, 
    PPP_RELEASE_REQ_EVENT, 
    DORMANT_RECONNECT_REQ_EVENT, 
    CONNECTION_OPENED_IND_EVENT, 
    CONNECTION_FAILED_IND_EVENT, 
    CONNECTION_RELEASED_IND_EVENT, 
    SYSTEM_QUERY_RSP_EVENT, 
    OOSA_IND_EVENT, 
    DO_HANDOFF_1X_REQ_EVENT, 
    1X_STRENGTH_RSP_EVENT, 
    UM_PPP_STATUS_RSP_EVENT, 
    RM_PPP_STATUS_RSP_EVENT, 
    RLP_INACT_IND_EVENT, 
    RLP_OPEN_FAILED_EVENT, 
    XOFF_RESP_RECEIVED_EVENT, 
    FORCED_STATE_EVENT, 0xFF,
End

Begin Enum, HLP Network Pref
    DO Only, 
    DO Preferred, 
    1X Only, 
    1X Preferred, 
    No Preference, 
End

Begin Enum, HLP App Type
    Async Data, 
    Network RM, 
    PPP only, 
    Relay Rm, 
    Main Connection, 
End

Begin Enum, IP Service Type
    Simple IP Only, 
    Mobile IP Preferred, 
    Mobile IP Only, 
End

Begin Enum, HLP Ntwk Resp Type
    DO found, 
    1X found, 
    DO and 1X both found, 
    nothing found, 
End

Begin Enum, HLP Channel Id
    Primary Channel, 
    Secondary Channel, 
End

Begin Enum, HLP Network Type
    DO network, 
    1X network, 
    Neither of them, 
End

Begin Enum, HLP Service Status
    In Svc, 
    Out of Svc, 
    Acquire new system, 
End

Begin Enum, HLP Protocol Type
    IP, 0x0021,
    TCPIP_VJ, 0x002d,
    TCPIP_UC, 0x002f,
    IPCP(NCP), 0x8021,
    LCP, 0xc021,
    PAP, 0xc023,
    LQR, 0xc025,
    CHAP, 0xc223,
    CCP, 0x80fd,
    Ind CCP, 0x80fb,
End

Begin Enum, HLP MIP State
    Null, 0
    Init, 1
    Agent Dis, 2
    Registration, 3
    Active Reg, 4
    Terminate, 5
End

Begin Enum, HLP MIP Timer
    RRP Reg, 0
    RRP Dereg, 1
    RRQ Reg, 2
    Agent Adv, 3
End

Begin Enum, DMU Version
    RFC XXXX, 
    RESERVED0, 
    RESERVED1, 
    RESERVED2, 
    RESERVED3, 
    RESERVED4, 
    RESERVED5, 
    Cleartext Mode, 
End

Begin Enum, DMU RSA Public Key Select
    DMU RSA Public Key 1, 1
    DMU RSA Public Key 2, 2
End

Begin Enum, Reverse Path
    VAL task, 
    HLP task, 
    RLP task, 
    RCP task, 
    HLP task in dormant state, 
End

Begin Enum, HLP Throttling Tmr Type
    HSPD, 1
    HRPD, 2
    eHRPD, 3
End

Begin Enum, IRAT Conn Cmd
    Suspend, 
    Resume, 
    Disable, 
    Release, 
End

Begin Enum, IMSState Enum
    IMS_IDLE, 0,RO
    IMS_WFR_PPP_CONN, 1,RO
    IMS_WFR_PDN_CONN, 2,RO
    IMS_WFR_IPADDR_CONFIG, 3,RO
    IMS_WFR_QOS_NEGO, 4,RO
    IMS_PPP_CONNECTED, 5,RO
    IMS_WFR_PDN_REL, 6,RO
    IMS_WFR_SIP_REGISTRATION, 7,RO
    IMS_WFR_QOS_REL, 8,RO
    IMS_WFR_CALL_SETUP, 9,RO
    IMS_CALL_CONNECTED, 10,RO
    IMS_WFR_CALL_RELEASE, 11,RO
    IMS_WFR_SIP_DEREGISTRATION, 12,RO
    IMS_WFR_SESSION_MODIFY, 13,RO
End

Begin Enum, HLP CPC State Type
    Idle, 0
    Connecting, 1
    Connected, 2
    Disconnecting, 3
    Analog Connected, 4
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, HLP PSC State Type
    Null, 0
    Init, 1
    Connected, 2
    No DMC Connected, 3
    Dormant, 4
    Reconnect, 5
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, HLP Pending Flag Type
    No pending event, 
    RTT is busy, 
    RTT is idle, 
End

Begin Enum, Network Type
    DO network, 
    RTT network, 
    Not available, 
End

Begin Enum, HLP HO Flag Type
    nothing, 
    DO, 
    RTT, 
    eHRPD, 
End

Begin Enum, MIP ReRegister State
    MIP_WFR_REREG_WINDOW, 
    MIP_REREG_WINDOW, 
    MIP_REREG_RRQ_SENT_WINDOW, 
    MIP_REREG_LIFETIME_EXPIRED, 
    MIP_DEREG_ALREADY, 
End

Begin Enum, Dorm Reconn Tmr Status
    Dormant Tmr Stop, 
    Dormant Tmr Start, 
    Dormant Tmr Expire, 
End

Begin Enum, Pending Reconn Status
    No Pending Reconn Req, 
    Pending Reconn Req 1X Busy, 
    Pending Reconn Req 1X Idle, 
End

Begin Enum, PKT MsgId Enum
    PKT_CFG_PDP_CTX_REQ, 
    PKT_CGC_MOD_REQ, 
    PKT_ACTIVATE_REQ, 
    PKT_ACTIVATE_RSP, 
    PKT_ACT_REJ_RSP, 
    PKT_DEACTIVATE_REQ, 
    PKT_READ_PCO_CONTAINER_REQ, 
    PKT_DATA_STATE_REQ, 
    PKT_READ_CHAP_AUTH_REQ, 
    PKT_READ_ACTIVATION_REQ, 
    PKT_READ_DEFCONT_REQ, 
    PKT_READ_CGDSCONT_REQ, 
    PKT_READ_CGTFT_REQ, 
    PKT_READ_ETFT_REQ, 
    PKT_READ_QMIN_REQ, 
    PKT_READ_QOS_REQ, 
    PKT_READ_QNEG_REQ, 
    PKT_SET_CNT_REQ, 
    PKT_READ_CNT_REQ, 
    PKT_READ_DNS_REQ, 
    PKT_SET_DNS_REQ, 
    PKT_READ_UPLINK_PCO_REQ, 
End

Begin Enum, Pkt State
    PKT_IDLE_ST, 
    PKT_WFR_ACTIVATE_REQ_ST, 
    PKT_WFR_ATTACH_ST, 
    PKT_WFR_ATTACH_RETRY_TMR_ST, 
    PKT_WFR_ATTACH_RETRY_ST, 
    PKT_ATTACHED_ST, 
    PKT_CONNECTED_ST, 
    PKT_WFR_ATTACH_OTHERS_ST, 
    PKT_WFR_ATTACH_OTHERS_RETRY_TMR_ST, 
    PKT_WFR_ATTACH_OTHERS_RETRY_ST, 
    PKT_WFR_DEACTIVATE_ST, 
End

Begin Enum, Pkt Event
    PKT_CONTEXT_CFG_EV, 
    PKT_ACTIVATE_REQ_EV, 
    PKT_DEFAULT_BEARER_CNF_EV, 
    PKT_DEDICATED_BEARER_CNF_EV, 
    PKT_HRPD_1X_CONNECT_CNF_EV, 
    PKT_RETRY_BKOFF_TMR_EXP_EV, 
    PKT_DEACTIVATE_REQ_EV, 
    PKT_DEACTIVATED_CNF_EV, 
    PKT_DEACTIVATED_IND_EV, 
    PKT_DISCONNECTED_IND_EV, 
End

Begin Enum, Connection Failed Cause Code
    Null, 0
    Auth failed, 6
    MIP LCP time out, 7
    MIP NCP time out, 8
    SIP LCP time out, 9
    SIP NCP time out, 10
    MIP PPP option mismatch, 11
    SIP PPP option mismatch, 12
    MoIP Agent Sol time out, 13
    MoIP RRQ time out, 14
    MoIP RRP error, 15
    MIP LCP failed, 16
    SIP LCP failed, 17
    MIP NCP failed, 18
    SIP NCP failed, 19
    A12 CHAP failed, 20
    EAP AKA Auth failed, 21
    A12 LCP time out, 22
End

Begin Enum, HLP MsgId Enum
    HLP_REV_DATA_REQ_MSG, 0,
    HLP_RM_TX_DATA_RSP_MSG, 
    HLP_RLP_IDLE_IND_MSG, 
    HLP_RLP_REV_DATA_RSP_MSG, 
    HLP_RLP_OPEN_FAILED_MSG, 
    HLP_PPP_CONNECT_REQ_MSG, 
    HLP_PPP_RELEASE_REQ_MSG, 
    HLP_PPP_STATUS_MSG, 
    HLP_ANSWER_REQ_MSG, 
    HLP_TIMER_EXPIRED_MSG, 
    HLP_SYTEM_QUERY_RSP_MSG, 
    HLP_CONNECTION_IND_MSG, 
    HLP_CONNECTION_RELEASED_IND_MSG, 
    HLP_CONNECTION_FAILED_IND_MSG, 
    HLP_OOSA_IND_MSG, 
    HLP_USERNAME_PASSWD_MSG, 
    HLP_DORMANT_RECONNECT_REQ_MSG, 
    HLP_POWER_REQ_MSG, 
    HLP_UM_APP_INSTANCE_MSG, 
    HLP_VOICE_CALL_RELEASE_MSG, 
    HLP_SOCKET_CREATE_MSG, 30,
    HLP_SOCKET_BIND_MSG, 
    HLP_SOCKET_CONNECT_MSG, 
    HLP_SOCKET_CLOSE_MSG, 
    HLP_SOCKET_SEND_REQ_MSG, 
    HLP_SOCKET_LISTEN_MSG, 
    HLP_SOCKET_OPTION_MSG, 
    HLP_SOCKET_SHUTDOWN_MSG, 
    HLP_SOCKET_LINGER_MSG, 
    HLP_DORMANT_REQ_MSG, 
    HLP_SYS_SEL_PREF_SET_MSG, 
    HLP_UPB_SEND_DATA_MSG, 
    HLP_UPB_RECV_DATA_RSP_MSG, 
    HLP_TCPB_DATA_RECV_RSP_MSG, 
    HLP_IPV6_SOCKET_CREATE_MSG, 
    HLP_IPV6_SOCKET_BIND_MSG, 
    HLP_IPV6_SOCKET_CONNECT_MSG, 
    HLP_OTAPA_UPDATE_IND_MSG, 
    HLP_SID_NID_CHANGE_IND_MSG, 
    HLP_PKT_ZONE_ID_CHANGE_IND_MSG, 
    HLP_SUBNET_ID_CHANGE_IND_MSG, 
    HLP_COLOR_CODE_CHANGE_IND_MSG, 
    HLP_1X_MT_CONN_IN_NULL_IND_MSG, 
    HLP_DO_SUBNET_CHANGE_IND_MSG, 
    HLP_MIP_RRP_MSG, 55,
    HLP_MIP_AGENT_ADV_MSG, 
    HLP_MIP_UM_PPP_STATUS_MSG, 
    HLP_MIP_TIMER_CALL_BACK_MSG, 
    HLP_ALMP_CONN_OPENED_MSG, 
    HLP_ALMP_CONN_FAILED_MSG, 
    HLP_ALMP_CONN_RELEASED_MSG, 
    HLP_ALMP_CONN_CLOSED_MSG, 
    HLP_FCP_PAF_DATAIND_MSG, 
    HLP_XOFF_RESP_RCVD_MSG, 
    HLP_ACSTRM_XON_RESP_RCVD_MSG, 
    HLP_SERVICE_STATUS_MSG, 
    HLP_TEST_BROWSER_CONNECT_MSG, 70,
    HLP_TEST_PPP_OPEN_MSG, 
    HLP_TEST_PPP_CLOSE_MSG, 
    HLP_IP_COUNTERS_RESET_ETS, 
    HLP_IP_COUNTERS_PEEK_ETS, 
    HLP_PURE_ACK_TAG_RATE_GET_ETS, 
    HLP_PURE_ACK_TAG_RATE_SET_ETS, 
    HLP_THROTTLING_TMR_STATUS_GET_ETS, 
    HLP_REV_TEST_DATA_MSG, 
    HLP_TX_TEST_DATA_MSG, 
    HLP_DBM_DATA_DMUPUBKEY_MSG, 80,
    HLP_DBM_DATA_DMUPUBKEYORGID_MSG, 
    HLP_VAL_DMUV_SET_MSG, 
    HLP_PSWS_DMU_KEYGEN_RSP_MSG, 
    HLP_PSWS_DMU_KEYENC_RSP_MSG, 
    HLP_VAL_MIP_PREFERMODE_SET_MSG, 
    HLP_GET_MIP_KEYS_RSP_MSG, 
    HLP_DBM_HSPD_SEG_READ_MSG, 
    HLP_HSPD_DATABASE_WRITE_ACK_MSG, 
    HLP_DBM_EHRPD_SEG_READ_MSG, 
    HLP_DBM_EHRPD_WRITE_ACK_MSG, 
    HLP_VAL_CTA_UPDATE_REQ_MSG, 
    HLP_IP_PACKET_STATISTICS_REQ_MSG, 
    HLP_DO_INACTIVITY_EXPR_MSG, 100,
    HLP_PARM_SET_MSG, 110,
    HLP_PARM_GET_MSG, 
    HLP_DBM_SECURE_DATA_READ_MSG, 
    HLP_DBM_SECURE_DATA_WRITE_ACK_MSG, 
    HLP_SECURE_DATA_INIT_MSG, 
    HLP_DMU_SECURE_DATA_CHANGED_MSG, 
    HLP_DBM_GET_ESN_MEID_RSP_MSG, 
    HLP_VAL_POWER_CYCLE_MSG, 
    HLP_PSW_MDN_UPDATED_MSG, 120,
    HLP_UIM_SIP_CHAP_RSP_MSG, 
    HLP_UIM_MIP_MNHA_AUTH_RSP_MSG, 
    HLP_UIM_MIP_RRQ_HASH_RSP_MSG, 
    HLP_UIM_MIP_MNAAA_AUTH_RSP_MSG, 
    HLP_UIM_AKA_AUTH_RSP_MSG, 
    HLP_UIM_ACCESS_CHAP_RESP_MSG, 
    HLP_UIM_GET_3GPD_OPC_RSP_MSG, 
    HLP_UIM_UPDATE_3GPD_OPC_RSP_MSG, 
    HLP_UIM_GET_3GPD_OPM_RSP_MSG, 
    HLP_UIM_UPDATE_3GPD_OPM_RSP_MSG, 
    HLP_UIM_GET_3GPD_SIPCAP_RSP_MSG, 
    HLP_UIM_GET_3GPD_MIPCAP_RSP_MSG, 
    HLP_UIM_GET_3GPD_SIPUPP_RSP_MSG, 
    HLP_UIM_GET_3GPD_MIPUPP_RSP_MSG, 
    HLP_UIM_GET_3GPD_SIPSP_RSP_MSG, 
    HLP_UIM_UPDATE_3GPD_SIPSP_RSP_MSG, 
    HLP_UIM_GET_3GPD_MIPSP_RSP_MSG, 
    HLP_UIM_UPDATE_3GPD_MIPSP_RSP_MSG, 
    HLP_UIM_GET_3GPD_SIPPAPSS_RSP_MSG, 
    HLP_UIM_UPDATE_3GPD_SIPPAPSS_RSP_MSG, 
    HLP_UIM_GET_3GPD_MIPFLAGS_RSP_MSG, 
    HLP_DORMANCY_TIMERS_SET_MSG, 
    HLP_DORETRY_TIMERS_SET_MSG, 
    HLP_VSNCP_CONFIG_REQ_RETRY_TIMERS_SET_MSG, 
    HLP_VSNCP_TERM_REQ_RETRY_TIMERS_SET_MSG, 
    HLP_UM_PPP_RENEGOTIATION_MSG, 
    HLP_SET_NETWORK_OR_RELAY_MODE_MSG, 
    HLP_SET_IPCOUNTES_RSP_MSG, 
    HLP_DBM_IP_COUNTERS_READ_DB_MSG, 
    HLP_SET_MIP_PASSWORD_MSG, 
    HLP_UIM_NOTIFY_REGISTER_MSG, 
    HLP_OMADM_DORMANCY_TIMERS_SET_MSG, 
    HLP_UIM_EVT_WAIT_EXPIRED_MSG, 
    IMS_APP_NETWK_CONN_REQ, 170,
    IMS_APP_NETWK_REL_REQ, 
    IMS_APP_SETUP_REQ, 
    IMS_APP_REL_REQ, 
    IMS_APP_SIP_REGISTRATION_REQ, 
    IMS_PPP_PDN_CONN_SET_UP_RSP, 
    IMS_PPP_PDN_CONN_REL_RSP, 
    IMS_PPP_PDN_REL_IND, 
    IMS_IPv6_ADDR_CONFIG_RSP, 
    IMS_CAM_PPP_UM_STATUS_IND, 
    IMS_CAM_PPP_RM_STATUS_IND, 
    IMS_QOM_FLOW_REQ_RSP, 200,
    IMS_QOM_FLOW_REL_RSP, 
    IMS_QOM_FLOW_REL_IND, 
    IMS_QOM_FLOW_NTWK_INIT, 
    IMS_QOM_FLOW_REL_NTWK_INIT, 
    IMS_RLP_EHRPD_ATTRIBUTE_MSG, 
    HLP_IMS_TIMER_EXPIRED_MSG, 
    IMS_APP_BEARER_REQ_MSG, 
    HLP_SEC_AKAAUTH_RSP_MSG, 300,
    HLP_SEC_DERIVEMK_RSP_MSG, 
    HLP_SEC_DERIVEREAUTHXKEY_RSP_MSG, 
    HLP_SEC_DERIVEMSK_RSP_MSG, 
    HLP_SEC_DERIVEMAC_RSP_MSG, 
    HLP_SEC_DERIVEPMK_RSP_MSG, 
    HLP_SEC_AESCRYPT_RSP_MSG, 
    HLP_GET_USIM_IMSI_RSP_MSG, 
    HLP_GET_ISIM_IMPU_RSP_MSG, 
    HLP_GET_USIM_AD_RSP_MSG, 
    HLP_RCP_RLPFLOW_PROTOCOL_INFO_MSG, 350,
    HLP_FCP_RLPROUTE_CHANGED_MSG, 
    HLP_CSS_DEFAULT_BEARER_CONN_REQ, 400,
    HLP_CSS_NETWORK_REL_REQ, 
    HLP_CSS_EPS_BEARER_SETUP_REQ, 
    HLP_CSS_EPS_BEARER_DISCONN_REQ, 
    HLP_CSS_DATA_CONNECTION_CMD, 
    HLP_IRAT_SET_IPV6ADDR_CMD, 
    HLP_CSS_REG_IND_MSG, 
    HLP_CSS_EMGER_MODE_MSG, 
    HLP_IP6_UDP_CONNECTION_OPEN_MSG, 450,
    HLP_IP6_UDP_CONNECTION_CLOSE_MSG, 
    HLP_IP6_TCP_CONNECTION_OPEN_MSG, 
    HLP_IP6_TCP_CONNECTION_CLOSE_MSG, 
    HLP_SET_PDN_INFO_MSG, 
    HLP_GET_PDN_INFO_MSG, 
    HLP_SEND_PING_MSG, 
    HLP_PPP_ROUTE_SET_MSG, 550,
    PKT_CDRR_SUSPEND_REQ, 700
    PKT_CDRR_RESUME_REQ, 
    PKT_CDRR_DEACTIVATE_REQ, 
    PKT_CSS_DO_NO_SERVICE_CNF, 
    PKT_TIMER_EXP_MSG, 
    HLP_PTM_SUSPEND_RESUME_REQ_MSG, 1000,
End

Begin Enum, Conn Status
    NOT_CONNECTED, 
    DO_CONNECTING, 
    DO_CONNECTED, 
    RTT_CONNECTING, 
    RTT_CONNECTED, 
End

Begin Enum, HLP Dbm Trace Type Enum
    HlpDbmHspdSegInitReq(), ,RO
    HlpDbmHspdSegDataReadMsg(), ,RO
    HlpReadDbmData()_More, ,RO
    HlpReadDbmData()_Complete, ,RO
    HlpHspdSegDataWriteDbm()_More, ,RO
    HlpHspdSegDataWriteDbm()_Complete, ,RO
    HlpSetHspdParmMsg(), ,RO
    HlpDbmSecureDataReadMsg()_More, ,RO
    HlpDbmSecureDataReadMsg()_Complete, ,RO
    HlpSetSecureData(), ,RO
    HlpSecureDataWriteDbm()_More, ,RO
    HlpSecureDataWriteDbm()_Complete, ,RO
    HlpGetParmSize(), ,RO
    HlpParmSetMsg(), ,RO
    HlpParmSetMsg()_Rsp, ,RO
    HlpParmGetMsg(), ,RO
    HlpParmGetMsg()_Rsp, ,RO
    HlpParmAllDataSet(), ,RO
    HlpInitHspdDatabaseMsg(), ,RO
    HlpParmProfileInit(), ,RO
    HlpSecureProfileInit(), ,RO
    HSPD_LOCK_CODE_SET, ,RO
End

Begin Enum, HLP EAP State Enum
    EAP_DISABLED, 
    EAP_INITIALIZE, 
    EAP_IDLE, 
    EAP_RECEIVED, 
    EAP_GETMETHOD, 
    EAP_METHOD, 
    EAP_SENDRESPONSE, 
    EAP_DISCARD, 
    EAP_IDENTITY, 
    EAP_NOTIFICATION, 
    EAP_RETRANSMIT, 
    EAP_SUCCESS, 
    EAP_FAILURE, 
End

Begin Enum, HLP BOOL Variable Enum
    EAPOwner_eapSuccess, 
    EAPOwner_eapRestart, 
    EAPOwner_eapFail, 
    EAPOwner_eapResp, 
    EAPOwner_eapNoResp, 
    EAPOwner_eapReq, 
    EAPOwner_portEnabled, 
    EAPOwner_altAccept, 
    EAPOwner_altReject, 
End

Begin Enum, HLP INT Variable Enum
    EAPOwner_idleWhile, 
End

Begin Enum, HLP Timer Expired Id
    HLP_FIVE_MIN_TIMER_ID, 1
    HLP_TCH_REL_TIMER_ID, 2
    HLP_XOFF_RSP_TIMER_ID, 3
    HLP_WFR_FAST_CONN_TIMER_ID, 4
    HLP_DATA_RETRY_TIMER_ID, 5
    HLP_FALLBACK_TIMER_ID, 6
    HLP_DRMT_RCNT_BACKOFF_TIMER_ID, 7
    HLP_DRMT_FAST_QUERY_PERIOD_TIMER_ID, 8
    HLP_PPP_CONNECT_BACKOFF_TIMER_ID, 9
    HLP_WAIT_FOR_UM_RELEASE_TIMER_ID, 10
    HLP_WFR_RM_CONNECT_TIMER_ID, 11
    HLP_WFR_IRAT_RELEASE_TIMER_ID, 12
    HLP_WFR_HANDOFF_HYST_TIMER_ID, 13
    HLP_WFR_FALLBACK_1X_CONNECT_TIMER_ID, 14
    HLP_DO_RETRY_TIMER_ID, 15
    HLP_CHECK_THROTTLING_TIMER_ID, 16
    HLP_RTP_TIMER_ID, 17
    HLP_SIP_GROUP_TIMER_ID, 18
    HLP_RTP_TIMER_ID_2, 19
    HLP_C109_PULSE_TIMER_ID, 20
    HLP_IP6_TEST_TIMER_ID, 21
    HLP_TCH_SETUP_TIMER_ID, 22
    HLP_7074_TIMER_ID, 23
End

Begin Enum, PppInactivityTimerHandlerId
    PppInactivityTimerSet, ,RO
    PppInactivityTimerStart, ,RO
    PppInactivityTimerStop, ,RO
    PppInactivityTimerReset, ,RO
    PppInactivityTimerExpired, ,RO
End

Begin Enum, QOS Direction Enum
    Forward, 0
    Reverse, 1
End

Begin Enum, RsvpMsgId Enum
    Null, 0
    PathMsg, 1
    ResvMsg, 2
    PathErrMsg, 3
    ResvErrMsg, 4
    PathTearMsg, 5
    ResvTearMsg, 6
    ResvConfMsg, 7
End

Begin Enum, RsvpOpCode Enum
    SPARE_TFT, 0
    CREATE_NEW_TFT, 1
    DELETE_TFT, 2
    ADD_PKTFILTER_TO_TFT, 3
    REPALCE_PKTFILTER, 4
    DELETE_PKTFILTER, 5
    QoS Check, 6
    Initiate Flow Request, 7
    QoS Check Confirm, 0x81
    InitDelPktFilterFromExistTFT, 0x82
    InitDelIdentifiedPktFilterFromExistTft, 0x83
    DelIdentifiedPktFilterFromExistTft, 0x84
End

Begin Enum, RsvpErrCode Enum
    ErrReserved, 0
    PktFilterAddFailure, 1
    PktFilterUnavailable, 2
    UnsuccessfulTFTProcessing, 3
    ChannelNotAvailable, 4
    EvaluationPrecedenceContention, 5
    TreatmentNotSupported, 6
    PacketFilterReplaceFailure, 7
    PersistencyLimitReached, 8
    PersistencyNotAllowed, 9
    UnauthorizedTFT, 10
    MaxNumPktFilters, 11
    AddToNonExistTFT, 12
    UEUnsuccessfulTFTProcess, 0x80
    InvalidIPAddr, 0x81
    QoSFlowProfileIDnotSupport, 0x82
    InvalidPdnIdinTFT, 0x83
End

Begin Enum, QOS State Enum
    QOS_INACTIVE, 0
    QOS_IDLE, 1
    QOS_WFR_CHECK_CONFIRM, 2
    QOS_WFR_GRANT, 3
    QOS_WFR_TFT_CONFIRM, 4
    QOS_WFR_TFT_CONFIRM_NTWK_INIT, 5
    QOS_WFR_TFT_REL_CONFIRM, 6
    QOS_WFR_TFT_REL_CONFIRM_NTWK_INIT, 7
End

Begin Enum, IMSEvent Enum
    NullReq, 0,RO
    DialUpReq, 1,RO
    SIPFlowReq, 2,RO
    AppConnReq, 3,RO
    NetwkConnReq, 4,RO
    NetwkInitQoSReq, 5,RO
    NetwkRelReq, 6,RO
    AppRelReq, 7,RO
    PdnRelInd, 8,RO
    SessionSetupInd, 9,RO
    SessionRelInd, 10,RO
    SIPDeregInd, 11,RO
    QoSRelInd, 12,RO
End

Begin Enum, PdnState Enum
    PDN_IDLE, 0
    PDN_CONNECTED, 1
    PDN_SETUP, 2
End

Begin Enum, RLP IP DataPath Enum
    PATH_HDLC, 0
    PATH_IP, 1,
    PATH_ROHC, 2,
    PATH_IP_WITH_PDNMUX, 3
End

Begin Enum, IMSAppType Enum
    APP_DIAL_UP, 0,RO
    APP_SIP, 1,RO
    APP_VOIP, 2,RO
    APP_LTE, 3,RO
End

Begin Enum, IMSApp Status Enum
    APP_INACTIVE, 0
    APP_SETUP, 1
    APP_RELEASING, 2
    APP_ACTIVE, 3
End

Begin Enum, PppEventType Enum
    pNONE, 0
    pUP, 
    pDOWN, 
    pOPEN, 
    pCLOSE, 
    pTIMEOUT, 
    pSENDDATA, 
    pCOMUP, 
    pCOMDOWN, 
    pRXPACKET, 
    pTXDONE, 
    pTLU, 
    pTLD, 
    pREMOTE_AUTH_TMO, 
    pLOCAL_AUTH_TMO, 
    pAUTH_DONE, 
    pMNRP_TMO, 
    pMNRP_DONE, 
    pREOPEN, 
    pNUMEVENTS, 
End

Begin Enum, PppProt Enum
    None, 0
    PRO_IP, 0x0021
    PRO_TCPIP_VJ, 0x002d
    PRO_TCPIP_UC, 0x002f
    PRO_VSNP, 0x005b
    PRO_MNRP, 0x4003
    PRO_IPCP, 0x8021
    PRO_VSNCP, 0x805b
    PRO_CCP, 0x80fd
    PRO_LCP, 0xc021
    PRO_PAP, 0xc023
    PRO_LQR, 0xc025
    PRO_CHAP, 0xc223
End

Begin Enum, EHRPD PDN Status Enum
    EHRPD_PDN_IDLE, 0
    EHRPD_PDN_REQ_SENT, 1
    EHRPD_PDN_ACK_RCVD, 2
    EHRPD_PDN_ACK_SENT, 3
    EHRPD_PDN_OPEN, 4
    EHRPD_PDN_TERMINATING, 5
End

Begin Enum, EHRPD PDNType Enum
    PDN_IPv4, 1
    PDN_IPv6, 2
    PDN_IPv6andIPv4, 3
End

Begin Enum, EHRPD AttachType Enum
    InitialAttach, 1
    HandOverAttach, 3
End

Begin Enum, DeCompressor State Msg Enum
    NO_CONTEXT, 1
    STATIC_CONTEXT, 
    FULL_CONTEXT, 
End

Begin Enum, ROHC Mode Msg Enum
    Unidirectional, 1
    Optimistic, 
    Reliable, 
End

Begin Enum, ROHC Packet Type Msg Enum
    IR, 0
    IR_DYN, 
    UO_0, 
    UO_1, 
    UO_1_ID, 
    UO_1_TS, 
    UOR_2, 
    UOR_2_ID, 
    UOR_2_TS, 
    UNKNOWN, 
End

Begin Enum, Compressor State Msg Enum
    IR, 1
    FO, 
    SO, 
End

Begin Enum, ROHC Feedback Type Msg Enum
    ROHC_FEEDBACK_ACK, 0
    ROHC_FEEDBACK_NACK, 
    ROHC_FEEDBACK_SNACK, 
End

Begin Enum, ROHC Feedback Opt Msg Enum
    ROHC_FEEDBACK_OPT_TYPE_CRC, 1
    ROHC_FEEDBACK_OPT_TYPE_REJECT, 
    ROHC_FEEDBACK_OPT_TYPE_SN_NOT_VALID, 
    ROHC_FEEDBACK_OPT_TYPE_SN, 
    ROHC_FEEDBACK_OPT_TYPE_CLOCK, 
    ROHC_FEEDBACK_OPT_TYPE_MAX_JITTER, 
    ROHC_FEEDBACK_OPT_TYPE_LOSS, 
End

Begin Enum, NST State
    NST_INIT, 
    NST_PILOT_ACQ, 
    NST_SYNC_ACQ, 
    NST_TIMING_CHANGE, 
    NST_IDLE, 
    NST_TRAFFIC, 
    NST_HHO, 
    NST_TCH_INIT, 
End

Begin Enum, MGR State Type
    IDLE, 0
    PRIMARY CONNECTED, 1
    SECONDARY CONNECTED, 2
    BOTH CONNECTED, 3
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, MGR Event Type
    CP Init, 0
    MUX FrameInd, 1
    MUX FrameReq, 2
    IFC0 Connect, 3
    IFC0 Disconnect, 4
    IFC1 Connect, 5
    IFC1 Disconnect, 6
End

Begin Enum, CTL State Type
    IDLE, 0
    ESTABLISHED TRANSPARENT, 1
    CHECK TRANSPARENT, 2
    SEND SYNC, 3
    CHECK SYNC ACK, 4
    SEND ACK, 5
    CHECK ACK, 6
    SEND SYNC ACK, 7
    CHECK SYNC ACK2, 8
    WFR DATA, 9
    ESTABLISHED NON TRANS, 10
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, CTL Event Type
    Initialize, 0
    Reset, 1
    MGR FrameInd, 2
    MGR FrameReq, 3
    reset2, 4
    set, 5
    clr, 6
End

Begin Enum, IFC State Type
    IDLE, 0
    WFR CTL, 1
    CHECK OPEN SUCCESS, 2
    ACTIVE, 3
    CHECK FLUSH PENDING, 4
    WFR DONE, 5
    CHECK FLUSHED DATA, 6
    WFR DONE CONFIRM, 7
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, IFC Event Type
    HL CloseReq, 0
    HL InactivityMonReq, 1
    HL OpenReq, 2
    HL RxRsp, 3
    HL TxReq, 4
    CTL OpenInd, 5
    CTL ResetInd, 6
    CTL RxInd, 7
    CTL TxReq, 8
    MGR ConnectFail, 9
    set, 10
    clr, 11
End

Begin Enum, MNRP State Type
    SN Disconnected, 0
    SN Connected, 1
    Registered, 2
    Wait Registration Rsp, 3
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, MNRP Event Type
    SN Disconnect, 0
    SN Connect, 1
    De-Register NEI, 2
    De-Register All, 3
    Register NEI, 4
    Timer Expired, 5
    Check NEI Table, 6
    ESQ, 7
    ISC, 8
    Registered, 9
    Connected, 10
End

Begin Enum, RL State Type
    Idle, 0
    Message Outstanding, 1
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, RL Event Type
    Send Request, 0
    Control Request, 1
    Message Confirm, 2
    Reset, 3
End

Begin Enum, TL State Type
    Idle, 0
    Message Outstanding, 1
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, TL Event Type
    Send Request, 0
    Recieve Message, 1
    Error, 2
    Timer Expired, 3
    Reset, 4
End

Begin Enum, AUTH State Type
    Init, 0
    Got MS Result, 1
    Got A Key, 2
    Calculating A Key, 3
    Calculating MS Result, 4
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, AUTH Event Type
    Key Request, 0
    Key Generation Request, 1
    Release, 2
    Re Authenticate, 3
    Report Result, 4
    Set Digits, 5
End

Begin Enum, PARS State Type
    Off Line, 0
    In Service, 1
    Waiting for Response, 2
    Locked Out, 3
    Waiting for Confirm, 4
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, PARS Event Type
    Receive Message, 0
    In Service Ind, 1
    Release, 2
    Response, 3
    Locked Out, 4
    Confirmed, 5
End

Begin Enum, SEC State Type
    Locked, 0
    User Init, 1
    User, 2
    Network, 3
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, SEC Event Type
    Origination, 0
    Connect, 1
    Release, 2
    OTAPA Req, 3
    Validate, 4
    Commit, 5
End

Begin Enum, CPC State Type
    Idle, 0
    Connecting, 1
    Connected, 2
    Disconnecting, 3
    Analog Connected, 4
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, CPC Event Type
    Origination, 0
    SOC Order, 1
    SOC Message, 2
    Page, 3
    Release Ind, 4
    Origination Fail, 5
    Reject, 6
    Release Request, 7
    Alert, 8
    Answer, 9
    Negotiator Connect, 10
    Switch, 11
    Disconnect, 12
    CP Connect, 13
    CP Connect Analog, 14
End

Begin Enum, DBC State Type
    Idle, 0
    System Busy, 1
    Connected, 2
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, DBC Event Type
    Send Message, 0
    Data Burst Rsp, 1
    Page Ind, 2
    Connect Ind, 3
    Alert Ind, 4
    Release Req, 5
    Disconnect Ind, 6
    Process Queue, 7
    Connect Fail, 8
    Access, 9
    Idle, 10
End

Begin Enum, VSC State Type
    Idle, 0
    Wait For Alert, 1
    Wait For Answer, 2
    Wait For Connect, 3
    Connected, 4
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, VSC Event Type
    VS SwitchReq, 0
    VS OrigReq, 1
    CPC PageInd, 2
    CPC ConnectInd, 3
    CPC AlertInd, 4
    VS ConnectReq, 5
    VS ReleaseReq, 6
    CPC DisconnectInd, 7
    CPC ConnectFailInd, 8
End

Begin Enum, DSC State Type
    Idle, 0
    Wait For Alert, 1
    Wait For Answer, 2
    Wait For Connect, 3
    Connected, 4
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, DSC Event Type
    DS EnableReq, 0
    DS OrigReq, 1
    CPC PageInd, 2
    CPC ConnectInd, 3
    CPC AlertInd, 4
    DS ConnectReq, 5
    CP HandoffInd, 6
    CP NetworkPRevInd, 7
    DS ReleaseReq, 8
    CPC DisconnectInd, 9
    CPC ConnectFailInd, 10
End

Begin Enum, PSC State Type
    Null, 0
    Init, 1
    Connected, 2
    No DMC Connected, 3
    Dormant, 4
    Reconnect, 5
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, PSC Event Type
    CPC AlertInd, 0
    CPC ConnectFailInd, 1
    CPC ConnectInd, 2
    CPC DisconnectInd, 3
    CPC PageInd, 4
    CPC ReleaseInd, 5
    CP HandoffInd, 6
    CP IdleInd, 7
    CP NetworkPRevInd, 8
    CP PacketZoneIdInd, 9
    CP SidNidChangeInd, 10
    CP TcAssignedInd, 11
    CP ZoneInd, 12
    PS ConnectReq, 13
    PS DormantReq, 14
    PS OrigReq, 15
    PS PrefInd, 16
    PS ReleaseReq, 17
    TC ExpiredInd, 18
    dmcInd, 19
End

Begin Enum, LSC State Type
    Idle, 0
    Originating, 1
    Wait For Connect, 2
    Connected, 3
    Disconnecting, 4
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, LSC Event Type
    Origination, 0
    Page, 1
    Connect Ind, 2
    Alert Ind, 3
    Release Req, 4
    Disconnect, 5
    Connect Fail, 6
End

Begin Enum, 1X Cpsm State Type
    PowerUp, 0
    Scanning, 1
    Idle, 2
    Connection, 3
    ScanPause, 4
    Oosa, 5
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, 1X Cpsm Event Type
    Select Req, 0
    Validate Req, 1
    Exhaust Scan List, 2
    OOSA Wakeup, 3
    Redirect Req, 4
    Conn Status Ind, 5
    MPSS Timeout, 6
    Retrieve Resource, 7
    CP Disabled Ev, 8
End

Begin Enum, DO Cpsm State Type
    PowerUp, 0
    Scanning, 1
    Idle, 2
    Connection, 3
    ScanPause, 4
    Oosa, 5
    receive unexpected, 0xFD
    remain unchanged at, 0xFE
    receive, 0xFF
End

Begin Enum, DO Cpsm Event Type
    Select Req, 0
    Validate Req, 1
    Exhaust Scan List, 2
    OOSA Wakeup, 3
    Redirect Req, 4
    Conn Status Ind, 5
    MPSS Timeout, 6
    Retrieve Resource, 7
    Asso System Scan, 8
    Disable, 9
End

Begin Enum, CP Request Type
    ENG_ERR_BAD_PREF_BAND, 1
    ENG_ERR_BAD_PREF_MODE, 2
    ENG_ERR_BAD_CUSTOM_OPMODE, 3
    ENG_ERR_INCOMPATIBLE_BAND_MODE, 4
    ENG_ERR_TUNE_RADIO, 5
    ENG_ERR_POWER_AMP, 6
    ENG_ERR_OOSA_BAD_VALUE, 7
    ENG_ERR_IHO_BAD_VALUE, 8
    RQ_ENABLE, 10
    RQ_DISABLE, 11
    RQ_ORIGINATE, 12
    RQ_ANSWER, 13
    RQ_FLASH, 14
    RQ_TERMINATE, 15
    RQ_POWERDOWN, 16
    RQ_BURST_DTMF, 17
    RQ_CONT_DTMF_ON, 18
    RQ_CONT_DTMF_OFF, 19
    RQ_VP_ON, 20
    RQ_VP_OFF, 21
    RQ_DATA_BURST, 22
    RQ_DATA_BURST_UNACK, 23
    RQ_DATA_BURST_REJ, 24
    RQ_WIDE_ANALOG, 25
    RQ_FULL_SYS_TIME, 26
    RQ_AUTO_ANSWER, 27
    RQ_PAGE_RESPONSE, 28
    RQ_TERM_SVC_INACT, 29
    RQ_AFLT_SEARCH, 30
    RQ_LBS_1X_ACQ, 31
    RQ_NST_POWERUP, 32
    RQ_NST_EXIT, 33
    RQ_FULL_SYSTIME_GET, 34
    RQ_CSFB_TCH_ACQ, 35
    ENG_IND_ANTENNA_RAU_PREEMPTED, 55
    ENG_IND_ANTENNA_ARB_PREEMPTED, 56
    ENG_IND_ANTENNA_REQ_GRANTED, 57
    ENG_IND_ANTENNA_REQ_DENIED, 58
    ENG_IND_ANTENNA_RELEASED, 59
    ENG_IND_PILOT_ACQUIRE, 60
    ENG_IND_NO_PILOT, 61
    ENG_IND_SYNC_ACQUIRE_FAIL, 62
    ENG_IND_SYNC_TO_SYS_TIME, 63
    ENG_IND_SYNC_TO_SYS_TIME_FAIL, 64
    ENG_IND_PAGE_MONITOR, 65
    ENG_IND_PAGE_MONITOR_FAIL, 66
    ENG_IND_SEND_ACCESS_MSG_FAIL, 67
    ENG_IND_SEND_TC_MSG, 68
    ENG_IND_SEND_TC_MSG_FAIL, 69
    ENG_IND_TC_CONFIG, 70
    ENG_IND_LONG_CODE_CHANGED, 71
    ENG_IND_RADIO_TUNED, 72
    ENG_IND_RADIO_NOT_TUNED, 73
    ENG_IND_PILOT_LOST, 74
    ENG_IND_PUF_PROBE_SENT, 75
    ENG_IND_PUF_PROBE_SENT_MAX_PWR, 76
    ENG_IND_PUF_PROBE_NOT_SENT, 77
    ENG_IND_WAKEUP, 78
    ENG_IND_PILOT_SET, 79
    ENG_IND_HO_COMPLETE, 80
    ENG_IND_OOSA_WAKEUP, 81
    ENG_IND_TC_TO_AVC_HO_START, 82
    ENG_IND_BCCH_MONITOR, 83
    ENG_IND_BCCH_MONITOR_FAIL, 84
    ENG_IND_FCCCH_MONITOR, 85
    ENG_IND_FCCCH_MONITOR_FAIL, 86
    ENG_IND_HO_FAIL, 87
    ENG_IND_FORCE_BAND_MODE, 88
    ENG_SYS_RESCAN_TIME, 89
    ENG_IND_DISABLE_E911MODE, 90
    ENG_IND_RSCH_STARTED, 91
    ENG_IND_SYNC_CSS_FAIL, 92
    ENG_IND_SYNC_CSS_PASS, 93
    ENG_IND_FSCH_STARTED, 94
    ENG_IND_FSCH_TERMINATED, 95
    ENG_SYS_REDIRECTION_END_TIME, 96
    ENG_IND_FORCE_ANALOG_MODE, 97
    ENG_IND_IDLE_HANDOFF_ACQUIRE, 99
    ENG_NULL_EVENT, 100
    ENG_IND_TIMEOUT, 101
    ENG_SYNC_MESSAGE, 102
    ENG_PAGE_MESSAGE, 103
    ENG_FTC_MESSAGE, 104
    ENG_FCSCH_LOST, 105
    ENG_IDLE_HANDOFF, 106
    ENG_REGISTRATION_REQ, 107
    ENG_ACCESS_FAIL, 108
    ENG_FTC_N5M_FRAMES, 109
    ENG_ACCESS_PSIST_FAIL, 110
    ENG_FTC_LOST, 111
    ENG_IND_ACK_RECEIVED, 112
    ENG_STRONGEST_PILOT_REPORT, 113
    ENG_ACCESS_HO_CANDIDATE, 114
    ENG_ACCESS_HO_NO_CANDIDATE, 115
    ENG_ACCESS_HO_LIST, 116
    ENG_ACCESS_PROBE_HO_FAIL, 117
    ENG_ACCESS_HO_DENIED, 118
    ENG_READ_ACCESS_OVERHEAD, 119
    ENG_ACCESS_PROBE_FAIL, 120
    ENG_IND_TC_ACK_FAILURE, 121
    ENG_IND_ACCESS_PILOT_MSMT, 122
    ENG_START_SYS_RESELECT, 123
    ENG_ACCESS_EC_IO_PROBE_FAIL, 124
    ENG_ACCESS_MODE_SEARCH_FAIL, 125
    ENG_BCCH_MESSAGE, 126
    ENG_FCCCH_MESSAGE, 127
    ENG_ACCESS_HANDOFF, 128
    ENG_IND_QPCH_PI_STATUS, 129
    ENG_IND_SOFT_HO_COMPLETE, 130
    ENG_IND_HARD_HO_COMPLETE, 131
    ENG_ACCESS_PSIST_FAIL_PHONE_REG, 132
    ENG_IND_E911_ACCESS_FAIL, 133
    ENG_IND_AFLT_RESULT_RCVD, 134
    ENG_IND_OOSA_REQ, 135
    ENG_IND_MODEM_FAILURE, 136
    ENG_IND_MODEM_READY, 137
    ENG_IND_IRAT_RESET_1XCDMA, 138
    ENG_IND_PSW_ASM_SEARCH_REJ, 139
    ENG_ARB_SVC_RSP, 140
    ENG_ESR_CNF, 141
    ENG_IND_E911_10S_FAIL, 142
    ENG_IND_IDLE_FR0ZEN_TIMEOUT, 143
    ENG_IND_ARB_RESUME, 144
    ENG_IND_ARB_SUSP_CNF_PEND_TIMEOUT, 145
    ENG_IND_CSS_OTASP_ACQ_REQ, 150
    ENG_IND_CSS_SELECT_RSP, 151
    ENG_IND_CSS_VALIDATE_RSP, 152
    ENG_IND_CSS_SYS_ACQ_REQ, 153
    ENG_IND_FREEZE, 154
    ENG_IND_THAW, 155
    ENG_IND_RESYNC, 156
    ENG_IND_RESYNC_DENIED, 157
    ENG_AMPS_START_SCAN, 200
    ENG_AMPS_SCAN_COMPLETE, 201
    ENG_AMPS_OMT, 203
    ENG_AMPS_FILLER, 204
    ENG_AMPS_MSCM, 205
    ENG_AMPS_SMS_CNF, 206
    ENG_AMPS_AWI_SMS_CNF, 207
    ENG_NO_IDLE_HANDOFF, 210
    ENG_IND_EPRL_ESPM_TIMEOUT, 213
    ENG_IND_MANUAL_AVOID_SYS, 214
    ENG_UIM_AUTHR, 230
    ENG_UIM_RANDBS, 240
    ENG_UIM_SSD_CONFIRM, 241
End

Begin Enum, PETimerId
    Cp Pilot Acquire Timer, 0
    Cp Sync Acquire Timer, 1
    Cp Radio Tune Timer, 2
    Cp FCSCH Monitor Timer, 3
    Cp System Access State Timer, 4
    Cp TA Access Timer, 5
    Cp Silent Retry Timer, 6
    Cp TC N5M Good Frames Timer, 7
    Cp TC BS Ack Timer, 8
    Cp TC Waiting For Order State Timer, 9
    Cp TC Waiting For Answer State Timer, 10
    Cp TC Release State Timer, 11
    Cp TC Fade Timer, 12
    Cp TC Serv Neg Subfunction Timer, 13
    Cp TC CF Periodic Search Timer, 14
    Cp TC PSMM Periodic Timer, 15
    Cp TC Hard Handoff Timer, 16
    Cp TC Ping Timer, 17
    Cp TMSI Exp Timer, 19
    Cp Reg Init Timer, 20
    Cp SSD Update Timer, 21
    Cp Full TMSI Timer, 22
    Cp Idle HO Timer, 23
    Cp Sleep Wakeup Timer, 24
    Cp EC IO Enhanced Access Timer, 26
    Cp Delayed Orig Waiting Timer, 27
    Cp Emergency Callback Mode Timer, 28
    Cp Slotted Timer, 29
    Cp Rescan Timer, 30
    Cp LOC Req Timer0, 31
    Cp LOC Req Timer1, 32
    Cp LOC Req Timer2, 33
    Cp LOC PPM Between Fix Timer0, 34
    Cp LOC PPM Between Fix Timer1, 35
    Cp LOC PPM Pref Resp Qual Timer0, 36
    Cp LOC PPM Pref Resp Qual Timer1, 37
    Cp LOC Gen Timer0, 38
    Cp LOC Gen Timer1, 39
    Cp LOC Gen Timer2, 40
    Cp LOC PRM Between Fix Timer, 41
    Cp LOC Acq Asst Fresh Timer, 42
    Cp LOC BS ALM Fresh Timer, 43
    Cp PE RC Retry Delay Timer, 44
    Cp PE RC RSR Req Timer, 45
    Cp PE Silent Retry Reset Timer, 46
    Cp CSS Redirection End Timer, 47
    Cp CSS More Pref Scan Timer, 48
    CP Slotted Idle HO Delay Timer, 49
    CP Cdma to Amps Acq Delay Timer, 50
    CP Retry Orig Delay Timer, 51
    CP TC Slotted Delay Timer, 52
    CP Call Back Mode Timer, 53
    CP Idle State Timer, 54
    CP Sprint Most Pref Chan Dwell Timer, 55
    CP Registration Throttling Timer, 56
    CP CSS EPRL ESPM Wait Timer, 57
    CP E911 Access Fail Timer, 58
    CP 1XMO BKOFF Timer, 59
    CP NO SVC Timer, 60
    CP 1X Antenna Grant Timer, 61
    CP Timing Change Substate Timer, 62
    CP BS Release Delay Timer, 63
    CP GCSNA L2Ack Timer, 64
    CP GCSNA UL Seq Context Timer, 65
    CP GCSNA DL Seq Context Timer, 66
    CP CSFB State Timer, 67
    Cp AMPS Access Timer, 68
    Cp AMPS Challenge Timer, 69
    Cp AMPS Fade Timer, 70
    Cp AMPS DTX Timer, 71
    Cp AMPS Redirect Timer, 72
    Cp AMPS Burst Timer, 73
    Cp AMPS Flash Timer, 74
    Cp AMPS Order Timer, 75
    Cp AMPS Alert Timer, 76
    Cp AMPS Delay Timer, 77
    Cp AMPS Release Delay Timer, 78
    Cp AMPS Message Timer, 79
    Cp AMPS Sysdet Delay Timer, 80
    Cp AMPS SMS Segment Timer, 81
    IRATRFC_SVCREQ_TIMER, 90
    IRATRFC_ESRREQ_TIMER, 91
    CP_E911_10S_FAIL_TIMER, 92
    Num Timers, 
End

Begin Enum, Registration SubStates Enum
    CP_REG_INIT, 0
    CP_REG_IDLE, 1
    CP_REG_ACCESS, 2
    CP_REG_TRAFFIC, 3
End

Begin Enum, Registration Types Enum
    CP_REG_TIMER_BASED, 0
    CP_REG_POWER_UP, 1
    CP_REG_ZONE_BASED, 2
    CP_REG_POWER_DOWN, 3
    CP_REG_PARAMETER_CHANGE, 4
    CP_REG_ORDERED, 5
    CP_REG_DISTANCE_BASE, 6
End

Begin Enum, Ps CP State
    Disabled, 
    Sys Determination, 
    Pilot Acquistion, 
    Sync Acquistion, 
    Timing Change, 
    Idle, 
    Update Overhead info, 
    Page Response, 
    Order/Message Response, 
    Origination Attempt, 
    Registration Attempt, 
    Message Transmission, 
    Traffic Channel Initialization, 
    TC Waiting for Order, 
    TC Wating for MS Answer, 
    TC Conversation, 
    TC Release, 
    NST, 
    CP Frozen, 
    TC Frozen, 
    Amps Wbios Init, 
    Amps Init, 
    Amps CC Scan, 
    Amps Control, 
    Amps PC Scan, 
    Amps Paging, 
    Amps Idle, 
    Amps AC Scan, 
    Amps Access, 
    Amps AX Pars, 
    Amps A Comt, 
    Amps Sz Recc, 
    Amps Svc Req, 
    Amps Tx Stat, 
    Amps Await Msg, 
    Amps Await Reg Conf, 
    Amps Await Reg Conf Wfomt, 
    Amps Serv Sys, 
    Amps Dir Retry, 
    Amps VC Conf, 
    Amps Wait Ord, 
    Amps Wait Ans, 
    Amps Conversation, 
    Amps Release, 
    Amps Rls Delay, 
    Amps Handoff, 
    Amps Sys Det Delay, 
End

Begin Enum, CssIndicationId
    Cp Unknown, 
    Cp Prev Powerup, 
    Cp Prev Acq Failure, 
    Cp Prev New System, 
    Cp Prev CDMA Available, 
    Cp Prev Reselection, 
    Cp Prev Protocol Mismatch, 
    Cp Prev System Lost, 
    Cp Prev Unlock, 
    Cp Prev Access Denied, 
    Cp Prev NDSS Off, 
    Cp Prev Release, 
    Cp Prev Error, 
    Cp Prev Redirection, 
    Cp Prev Registration Reject, 
    Cp Prev Wrong System, 
    Cp Prev Wrong Network, 
    Cp Prev Rescan, 
    Cp Prev Lock, 
    Cp Prev System Lost Access, 
    Cp Prev E911 Call, 
    Cp Prev OTASP Call, 
    Cp Prev Periodic Rescan, 
    Cp Prev Additional CDMA, 
    Cp Prev System Reselection, 
    Cp Prev Force Band Mode, 
    Cp Prev Exit E911 Mode, 
    Cp Prev System Found Not Best, 
    Cp Prev Redirection End Timer Expired, 
    Cp Prev Force Analog Mode, 
    Cp Prev More Pref Scan Timer Expired, 
    Cp Prev Access Failed Silent Retry, 
    Cp Prev ESPM Not Received, 32
    Cp Prev Timing Change Failure, 33
    Cp Prev Sync Failure, 34
    Cp Prev Registration Throttling, 35
    Cp Prev Access Max Probes, 36
    Cp Prev Paging Monitor Timeout, 40
    Cp Prev Modem Failure, 41
    Cp Prev IRAT Reset 1XCDMA, 42
    Cp Prev SRLTE LTEOnly Powerup, 44
    Cp Prev 1X DO Association Broken, 50
    Cp Prev ReInit, 51
    Cp GlobalMode DO Acq Failure, 60
End

Begin Enum, L2 FTC Event Types
    L2_FTC_START_EV, 0
    L2_FTC_STOP_EV, 1
    L2_FTC_FRAME_EV, 2
    L2_FTC_HARD_HANDOFF_EV, 3
    L2_FTC_CANDIDATE_FREQUENCY_START_EV, 4
    L2_FTC_CANDIDATE_FREQUENCY_END_EV, 5
    L2_FTC_HARD_HANDOFF_W_RETURN_ON_FAILURE_EV, 6
    L2_FTC_HARD_HANDOFF_TIMER_EXPIRED_EV, 7
    L2_FTC_MAX_EVENTS, 8
End

Begin Enum, L2 FTC State Types
    L2_FTC_STOP_ST, 0
    L2_FTC_INITIALIZATION_ST, 1
    L2_FTC_IDLE_ST, 2
    L2_FTC_HARD_HANDOFF_ST, 3
    L2_FTC_CANDIDATE_FREQUENCY_ST, 4
    L2_FTC_HARD_HANDOFF_W_RETURN_ON_FAILURE_ST, 5
    L2_FTC_HARD_HANDOFF_INIT_ST, 6
    L2_FTC_HARD_HANDOFF_W_RTN_ON_FAIL_INIT_ST, 7
    L2_FTC_NST_TRAFFIC_ST, 8
    L2_FTC_MAX_STATES, 9
End

Begin Enum, FOR Traffic Msg Enum
    FTC - Order, 1,  RO
    FTC - Authentication Challenge, 2,  RO
    FTC - Alert With Information, 3,  RO
    FTC - Data Burst, 4,  RO
    FTC - Obsolete Handoff Direction, 5,  RO
    FTC - Analog Handoff Direction, 6,  RO
    FTC - In-Traffic System Parameters, 7,  RO
    FTC - Neighbor List Update, 8,  RO
    FTC - Send Burst DTMF, 9,  RO
    FTC - Power Control Parameters, 10, RO
    FTC - Retrieve Parameters, 11, RO
    FTC - Set Parameters, 12, RO
    FTC - SSD Update, 13, RO
    FTC - Flash With Information, 14, RO
    FTC - Mobile Station Registered, 15, RO
    FTC - Status Request, 16, RO
    FTC - Extended Handoff Direction, 17, RO
    FTC - Service Request, 18, RO
    FTC - Service Response, 19, RO
    FTC - Service Connect, 20, RO
    FTC - Service Option Control, 21, RO
    FTC - TMSI Assignment, 22, RO
    FTC - Service Redirection, 23, RO
    FTC - Supplemental Channel Assignment, 24, RO
    FTC - Power Control, 25, RO
    FTC - Extended Neighbor List Update, 26, RO
    FTC - Candidate Frequency Search Request, 27, RO
    FTC - Candidate Frequency Search Control, 28, RO
    FTC - Power Up Function, 29, RO
    FTC - Power Up Function Completion, 30, RO
    FTC - General Handoff Direction, 31, RO
    FTC - Resource Allocation, 32, RO
    FTC - Extended Release, 33, RO
    FTC - Universal Handoff Direction, 34, RO
    FTC - Extended Supplemental Channel Assignment, 35, RO
    FTC - Mobile Assited Burst Op Param, 36, RO
    FTC - User Zone Reject, 37, RO
    FTC - User Zone Update, 38, RO
    FTC - Call Assignment, 39, RO
    FTC - Extended Alert With Information, 40, RO
    FTC - DS-41 Inter-system Transfer, 41, RO
    FTC - Extended Flash With Information, 42, RO
    FTC - Security Mode Command, 43, RO
    FTC - MC-MAP L3, 44, RO
    FTC - MC-MAP Inter-Sys HO Command, 45, RO
    FTC - MC-MAP Dedicated Mode Paging, 46, RO
    FTC - R-TMSI Assignment, 47, RO
    FTC - MC-MAP Flow Release, 48, RO
    FTC - BS Status Response, 49, RO
    FTC - Authentication Request, 50, RO
    FTC - Rate Change, 51, RO
    FTC - MEID Universal Handoff Direction, 53, RO
    FTC - Radio Configuration Parameters, 54, RO
    FTC - Alternate Tech Info, 56, RO
    FTC - General Extension, 255, RO
End

Begin Enum, FOR Order Code Enum
    Abreviated Alert Order, 0x01, RO
    BS Challenge Confirmation Order, 0x02, RO
    Message Encryption Mode Order, 0x03, RO
    Reorder Order, 0x04, RO
    Parameter Update Order, 0x05, RO
    Audit Order, 0x06, RO
    Intercept Order, 0x09, RO
    Maintenance Order, 0x0a, RO
    BS Ack Order, 0x10, RO
    Pilot Measurement Request Order, 0x11, RO
    Lock Order, 0x12, RO
    Service Option Request Order, 0x13, RO
    Service Option Response Order, 0x14, RO
    Release Order, 0x15, RO
    Outer Loop Report Request Order, 0x16, RO
    Long Code Transition Request Order, 0x17, RO
    Continuous DTMF Tone Order, 0x19, RO
    Status Request Order, 0x1a, RO
    Registration Order, 0x1b, RO
    Service Option Control Order, 0x1d, RO
    Local Control Order, 0x1e, RO
    Slotted Mode Order, 0x1f, RO
    Retry Order, 0x20, RO
    BS Reject Order, 0x21, RO
    Transit to Idle Order, 0x22, RO
End

Begin Enum, Mtx Event Types
    MTX_START_EV, 0
    MTX_STOP_EV, 1
    MTX_ACK_PROCEDURES_RESET_EV, 2
    MTX_TX_OFF_EV, 3
    MTX_TX_ON_EV, 4
    MTX_RX_MSG_IND_EV, 5
    MTX_TX_MSG_REQ_EV, 6
    MTX_RX_FRAME_IND_EV, 7
    MTX_TX_MSG_IND_EV, 8
    MTX_MAX_EVENTS, 9
End

Begin Enum, Mtx State Types
    MTX_STOPPED_ST, 0
    MTX_WAIT_ST, 1
    MTX_READY_ST, 2
    MTX_MAX_STATES, 3
End

Begin Enum, Rev Traffic Msg Enum
    RTC - Order, 1, RO
    RTC - Authentication Challenge Response, 2, RO
    RTC - Flash With Information, 3, RO
    RTC - Data Burst, 4, RO
    RTC - Pilot Strength measurement, 5, RO
    RTC - Power Measurement Report, 6, RO
    RTC - Send Burst DTMF, 7, RO
    RTC - Status, 8, RO
    RTC - Origination Continuation, 9, RO
    RTC - Handoff Completion, 10,RO
    RTC - Parameters Response, 11,RO
    RTC - Service Request, 12,RO
    RTC - Service Response, 13,RO
    RTC - Service Connect Completion, 14,RO
    RTC - Service Option Control, 15,RO
    RTC - Status Response, 16,RO
    RTC - TMSI Assignment Completion, 17,RO
    RTC - Supplemental Channel Request, 18,RO
    RTC - Candidate Frequency Search Response, 19,RO
    RTC - Candidate Frequency Search Report, 20,RO
    RTC - Periodic Pilot Strength Measurement, 21,RO
    RTC - Outer Loop Report, 22,RO
    RTC - Resource Request, 23,RO
    RTC - Extended Release Response, 24,RO
    RTC - Enhanced Origination, 26,RO
    RTC - Extended Flash With Information, 27,RO
    RTC - Extended Pilot Strength Measurement, 28,RO
    RTC - Extended Handoff Completion, 29,RO
    RTC - Resource Release Request, 30,RO
    RTC - Security Mode Request, 31,RO
    RTC - User Zone Update Request, 34,RO
    RTC - Call Cancel, 35,RO
    RTC - Device Information, 36,RO
    RTC - Base Station Status Request, 40,RO
    RTC - Authentication Response, 41,RO
    RTC - Authentication Resynchronization, 42,RO
    RTC - CDMA Offtime Report, 43,RO
End

Begin Enum, REV Order Code Enum
    BS Challenge Order, 0x02, RO
    SSD Update Order, 0x03, RO
    Parameter Update Confirmation Order, 0x05, RO
    Request Analog Servive Order, 0x0b, RO
    MS Ack Order, 0x10, RO
    Service Option Request Order, 0x13, RO
    Service Option Response Order, 0x14, RO
    Release Order, 0x15, RO
    Long Code Transition Order, 0x17, RO
    Connect Order, 0x18, RO
    Continuous DTMF Tone Order, 0x19, RO
    Service Option Control Order, 0x1d, RO
    Local Control Response Order, 0x1e, RO
    MS Reject Order, 0x1f, RO
    Call Rescue Cancel Order, 0x20, RO
    Security Mode Completion Order, 0x21, RO
End

Begin Enum, Cand Freq Event Types
    CF_START_EV, 0
    CF_RESTART_EV, 1
    CF_STOP_EV, 2
    CF_SEARCH_REQUEST_EV, 3
    CF_SEARCH_CONTROL_EV, 4
    CF_SEARCH_TIMES_EV, 5
    CF_SEARCH_REQUEST_ACTION_TIMEOUT_EV, 6
    CF_SEARCH_REPORT_EV, 7
    CF_PERIODIC_SEARCH_TIMEOUT_EV, 8
    CF_PERIODIC_SEARCH_ENABLE_EV, 9
    CF_FRESHNESS_TIMEOUT_EV, 10
    CF_SEARCH_TIMES_TIMEOUT_EV, 11
    CF_MAX_EVENTS, 12
End

Begin Enum, Cand Freq State Types
    CF_STOP_ST, 0
    CF_IDLE_ST, 1
    CF_WFR_SEARCH_TIMES_ST, 2
    CF_PENDING_MSG_ST, 3
    CF_SEARCH_IDLE_ST, 4
    CF_WFR_SEARCH_PERIOD_TIMEOUT_ST, 5
    CF_MAX_STATES, 6
End

Begin Enum, Service Neg Event Types
    SN_SERV_NEG_DISABLED_EV, 0
    SN_SERV_NEG_ENABLED_EV, 1
    SN_USER_NEW_SERV_CFG_REQ_EV, 2
    SN_SERVICE_REQUEST_MESSAGE_PROPOSE_EV, 3
    SN_SERVICE_REQUEST_MESSAGE_REJECT_EV, 4
    SN_SERVICE_RESPONSE_MESSAGE_PROPOSE_EV, 5
    SN_SERVICE_RESPONSE_MESSAGE_REJECT_EV, 6
    SN_SERVICE_CONNECT_MESSAGE_EV, 7
    SN_SERVICE_CONNECT_MESSAGE_NO_ACTION_TIME_EV, 8
    SN_SERVICE_CONNECT_MESSAGE_REJECTED_EV, 9
    SN_SERVICE_OPTION_CONTROL_MESSAGE_EV, 10
    SN_SERVICE_OPTION_REQUEST_ORDER_EV, 11
    SN_SERVICE_OPTION_RESPONSE_ORDER_EV, 12
    SN_SERVICE_OPTION_CONTROL_ORDER_EV, 13
    SN_SERV_NEG_ACTION_TIMEOUT_EV, 14
    SN_SERV_NEG_SUBFUNCTION_TIMEOUT_EV, 15
    SN_MAX_EVENTS, 16
End

Begin Enum, Service Neg State Types
    SN_STOPPED_ST, 0
    SN_SO_NEGOTIATION_ST, 1
    SN_NORMAL_SERVICE_ST, 2
    SN_WAITING_FOR_SERVICE_RESPONSE_MESSAGE_ST, 3
    SN_WAITING_FOR_SERVICE_REQUEST_MESSAGE_ST, 4
    SN_WAITING_FOR_SERVICE_CONNECT_MESSAGE_ST, 5
    SN_WAITING_FOR_SERVICE_ACTION_TIME_ST, 6
    SN_MAX_STATES, 7
End

Begin Enum, RLP Reset Reason
    No Reason, 0
    SYNC or SYNC/ACK (Non-NAK) from BS received while expecting DATA, 
    SYNC or SYNC/ACK (Non-NAK) from BS received while expecting type I Segment, 
    Processing error Vr < Vn for type I DATA received, 
    Processing error Vr < Vn for type II or III DATA received, 
    Processing error Vr < Vn for type III Segment received, 
    Invalid SEQ < Vn for two consecutive IDLE received, 
    Invalid SEQ (Vn_Peer) >= Vs for two consecutive FILL received, 
    Invalid SEQ >= Vs in type I NAK received, 
    Invalid SEQ in type II NAK received, 
    Invalid SEQ >= Vs in type II NAK00 received, 
    Invalid SEQ >= Vs in type II NAK01 received, 
    Invalid SEQ (Vn_Peer) >= Vs in type III NAK received, 
    Invalid SEQ < Vn_peer in type III NAK received, 
    Invalid SEQ >= Vs in type III NAK00 received, 
    Invalid SEQ >= Vs in type III NAK01 received, 
    Invalid SEQ >= Vs in type III NAK10 received, 
    Invalid SEQ >= Vs in type III NAK11 received, 
    Cannot insert SEQ to ResQ for type I OOS IDLE or NAK received, 
    Cannot refer SEQ < Vn to ResQ for type II or III OOS IDLE or NAK received, 
    Cannot insert SEQ to ResQ for type II or III OOS IDLE or NAK received, 
    Cannot refer SEQ < Vn to ResQ for type I DATA received, 
    Cannot insert SEQ to ResQ for type I DATA received, 
    Cannot refer SEQ < Vn to ResQ for Ret type II or III DATA received, 
    Cannot refer SEQ < Vn to ResQ for type II or III DATA received, 
    Cannot insert SEQ to ResQ for type II or III DATA received, 
    Cannot refer SEQ < Vn to ResQ for type III Segment received, 
    Cannot insert SEQ to ResQ for type III Segment received, 
    NakQ full for a frame received, 
    RetQ full for type III NAK00 received, 
    RetQ full for type III NAK01 received, 
    RetQ full for type III NAK10 received, 
    RetQ full for type III NAK11 received, 
    ResQ overflow to insert type I DATA received, 
    ResQ overflow to insert type II DATA received, 
    ResQ overflow to insert type III DATA received, 
    ResQ overflow to insert type I or II out-of-seq IDLE or NAK received, 
    ResQ overflow to insert type III out-of-seq IDLE or NAK received, 
    Invalid encryption option, 
End

Begin Enum, PPP Prot Type
    IP, 0x0021
    TCPIP_VJ, 0x002d
    TCPIP_UC, 0x002f
    IPCP, 0x8021
    CCP, 0x80fd
    LCP, 0xc021
    PAP, 0xc023
    LQR, 0xc025
    CHAP, 0xc223
    MNRP, 0x4003
End

Begin Enum, PPP Phase Type
    DEAD, 0
    LCP, 
    Auth, 
    MNRP, 
    NCP, 
    NETWORK, 
    TERMINATE, 
End

Begin Enum, PPP State Type
    INITIAL, 0
    STARTING, 
    CLOSED, 
    STOPPED, 
    CLOSING, 
    STOPPING, 
    REQ_SENT, 
    ACK_RCVD, 
    ACK_SENT, 
    OPENED, 
End

Begin Enum, Application Type and Port mapping
    Um Interface, 0x100
    Rm Interface, 0x101
    AN Authentication, 0x102
    Other Application, 0x103
End

Begin Enum, Silent Discard Reason Type
    Nothing, 0
    PROTOCOL, 1
    SEQUENCE, 2
    LENGTH, 3
    DATA, 4
    NORXBUF, 5
    DEESCAPE, 6
    FCS, 7
End

Begin Enum, PPP Event Type
    NONE, 0
    UP, 
    DOWN, 
    OPEN, 
    CLOSE, 
    TIMEOUT, 
    SENDDATA, 
    COMUP, 
    COMDOWN, 
    RXPACKET, 
    TXDONE, 
    This Layer Up, 
    This Layer Down, 
    REMOTE AUTH Time Out, 
    LOCAL AUTH Time Out, 
    AUTH DONE, 
    MNRP Time out, 
    MNRP Done, 
End

Begin Enum, Status Type
    Failed, 0
    Passed, 1
End

Begin Enum, NSPE App Type
    ASYNC_TCP, 0
    PACKET_RLP, 1
    BROWSER_UDP, 2
    PACKET_UART, 3
    BROWSER_ON_ASYNC, 4
    BROWSER_CKT_TCP, 5
    BROWSER_PKT_TCP, 6
    PPP_ONLY, 7
    ACS_STREAM, 8
    MAIN_CONN, 9
End

Begin Enum, Ps CP Event
    Empty, 0
    Disconnect, 
    Page received, 
    Stop alert, 
    Abbr alert, 
    No Service, 
    In svc - CDMA, 
    Cp enabled, 
    Cp disabled, 
    Power down ack, 
    Conn analog, 
    Conn digital, 
    Tc assigned, 
    Orig fail, 
    Orig cancel, 
    Intercept, 
    Reorder, 
    Cc release, 
    Cc release so rej, 
    Dialing complete, 
    Dialing continue, 
    Maintenance, 
    Vp on, 
    Vp off, 
    PSIST calculation failed, 
    TC released normally by MS, 
    TC released by MS Power Down, 
    TC released by MS Disable, 
    TC released normally by BS, 
    TC released by BS Serv Opt Rej, 
    TC released - Timeout, 
    TC released - Ack failure, 
    TC releasead - Fade, 
    TC released  - Lock, 
    Page Fail, 
    Retry Timer Active, 
    Retry Timer Inactive, 
    In Service - AMPS, 
    Packet active, 
    Packet release, 
    Packet dormant, 
    Orig rejected, 
    Flash Fail - AMPS, 80
    Page Rcvd - AMPS, 
    Idle - AMPS, 
    Abbr Intercept - AMPS, 
    Abbr Reorder - AMPS, 
    Service Conn Complete, 
    Enter OOSA, 
    FNM Release Origination, 
End

Begin Enum, SCC Service Type
    Unknown Service, 0
    Voice Service, 
    Circuit Data Service, 
    Packet Data Service, 
    Packet Dormant Service, 
    Loopback Service, 
    SMS Service, 
    OTASP Service, 
    Location Service, 
End

Begin Enum, Psw Func call
    wbiosDistanceBasedReg(), 0x00
    wbiosSlottedModeEnable(), 0x01
    wbiosSlottedModeDisable(), 0x02
    wbiosSleep(), 0x03
    wbiosWakeup(), 0x04
    wbiosSetTimer(), 0x05
    wbiosKilltimer(), 0x06
    wbiosPilotAcquireAbort(), 0x07
    wbiosPilotAcquireStart(), 0x08
    wbiosSyncToSystemtime(), 0x09
    wbiosSyncAcquireStart(), 0x0A
    wbiosSyncAcquireAbort(), 0x0B
    wbiosCDMACandFreqSearchAbortVisit(), 0x0C
    wbiosCDMACandFreqSearchParm(), 0x0D
    wbiosCDMACandFreqSearchStart(), 0x0E
    wbiosIdlePilotSet(), 0x0F
    wbiosIdleChangePilotSet(), 0x10
    wbiosPilotSearchWindow(), 0x11
    wbiosPilotSet(), 0x12
    wbiosPageMonitorStart(), 0x13
    wbiosPageMonitorStop(), 0x14
    wbiosAccessMessageSend(), 0x15
    wbiosAccessMessageAbort(), 0x16
    wbiosLongCodeChange(), 0x17
    wbiosPUFProbeAbort(), 0x18
    wbiosPUFProbeSend(), 0x19
    wbiosServiceConfiguration(), 0x1A
    wbiosServiceOptionControlMessage(), 0x1B
    wbiosServiceOptionControlOrder(), 0x1C
    wbiosServiceConfigurationValidation(), 0x1D
    wbiosServiceOptionValidation(), 0x1E
    wbiosTrafficChannelStart(), 0x1F
    wbiosTrafficChannelSoftHandoff(), 0x20
    wbiosTrafficChannelStop(), 0x21
    wbiosTrafficChannelSendMessage(), 0x22
    wbiosTrafficChannelPowerStep(), 0x23
    wbiosTransmitterControl(), 0x24
    wbiosDisable(), 0x25
    engRelayCDMACandFreqSearchReport(), 0x26
    engCandFreqTimesMsg(), 0x27
    engCmdStatusMsg(), 0x28
    engRelayPageFrameIndication(), 0x29
    engRelaySyncFrameIndication(), 0x2A
    engRelayTCFrameIndication(), 0x2B
    engRelayPilotMeasureReport(), 0x2C
    engRelayIdleHandoff(), 0x2D
    wbiosRetrieveChannel(), 0x2E
    wbiosSaveChanne(), 0x2F
    wbiosSetSSDA(), 0x30
    wbiosSetSSDB(), 0x31
    wbiosInitializeAKey(), 0x32
    wbiosSetCallHistParameter(), 0x33
    wbiosSetSIDNIDList(), 0x34
    wbiosSetTMSIAssignment(), 0x35
    wbiosSetZoneList(), 0x36
    wbiosDeleteZoneList(), 0x37
    wbiosDeleteSIDNIDList(), 0x38
    wbiosSetBaseDistanceRegInfo(), 0x39
    wbiosReportAlert(), 0x3A
    wbiosReportBurstDTMF(), 0x3B
    wbiosReportCPEvent(), 0x3C
    wbiosReportCPStatus(), 0x3D
    wbiosReportFeatureNotification(), 0x3E
    wbiosReportFlash(), 0x3F
    wbiosReportLock(), 0x40
    wbiosReportMaintenanceRequired(), 0x41
    wbiosReportRegistrationReject(), 0x42
    wbiosReportServiceNegotiationMode(), 0x43
    wbiosReportStartContinuousDTMF(), 0x44
    wbiosReportStopContinuousDTMF(), 0x45
    wbiosReportSystemInfo(), 0x46
    wbiosReportSystemTime(), 0x47
    wbiosReportUnlock(), 0x48
    wbiosSystemError(), 0x49
    engRelayCPRequest(), 0x4A
    wbiosServiceConfigurationInitiation(), 0x4B
    wbiosAcceptLongCodeChangeReq(), 0x4D
    wbiosTrafficChannelHardHandoff(), 0x4E
    wbiosReportDataBurst(), 0x4F
    engRelayCDMACandFreqSearchTimes(), 0x50
    engRelayReportStatus(), 0x51
    wbiosMultiplexOptionInformation(), 0x52
    wbiosServiceOptionInformation(), 0x53
    wbiosReverseMultiplexParamtersGet(), 0x54
    wbiosReverseMultiplexParamtersSet(), 0x55
    wbiosReportRegistrationAccept(), 0x56
    wbiosSetRand(), 0x57
    wbiosSystemSelection(), 0x58
    wbiosSCServiceConfgiurationRespose(), 0x59
    wbiosReportCPResponse(), 0x5A
    wbiosAcceptVoicePrivacyChange(), 0x5B
    wbiosReportHandoff(), 0x5C
    wbiosReportAccessMaxCapsuleSize(), 0x5D
    wbiosSCGetServCfgNoConnections(), 0x5E
    wbiosSCGetServiceOptionInfo(), 0x5F
    wbiosPreambleOff(), 0x60
    engRelayCandFreqStop(), 0x61
    engRelayCandFreqStart(), 0x62
    wbiosOutOfServiceAreaSleep(), 0x63
    engRelayOutOfServiceAreaParameters(), 0x64
    wbiosReportPwrRepFrames(), 0x65
    engRelaySetIHOThresholds(), 0x66
    engRelaySetIHOTimer(), 0x67
    wbiosReportCQA(), 0x68
    engRelayReverseMultiplexParameters(), 0x69
    wbiosOosaWakeup(), 0x6A
    wbiosReportNetworkPRev(), 0x6B
    wbiosReportPacketZoneID(), 0x6C
    wbiosRequestVoicePrivacyIndication(), 0x6D
    engRelaySetNewIHOparameters(), 0x6E
    wbiosReportRoamInd(), 0x6F
    wbiosSccBcastConfigured(), 0x70
    wbiosReportBroadcastDataBurst(), 0x71
    wbiosSccBcastExpected(), 0x72
    wbiosSCServiceOptionIsHSPD(), 0x73
    ENG_RELAY_E911_MODE_ENABLE, 0x74
    ENG_RELAY_E911_MODE_DISABLE, 0x75
    ENG_RELAY_CDMA_CAND_FREQ_SEARCH_RQ_CONTROL_DATA, 0x76
    PswPowerReportMsg(), 0x77
    wbiosReportBSCoOrd(), 0x78
    cpSilentRetryTimeout(), 0x79
    wbiosOrigFinished(), 0x7A
    wbiosForSch(), 0x7B
    wbiosRsrAlloc(), 0x7C
    wbiosRsrDealloc(), 0x7D
    wbiosRevSch(), 0x7E
    wbiosSccIsServOptionAttributeAvailable(), 0x7F
    wbiosSccGetDefaultServiceConfiguration(), 0x80
    wbiosResourceUpdate(), 0x81
    PswSetAccessHoParams(), 0x82
    wbiosForSchConfigUpdate(), 0x83
    wbiosRevSchConfigUpdate(), 0x84
    wbiosSrchResultsComplete(), 0x85
    wbiosEnhAccessMessageSend(), 0x86
    wbiosL1dSyncMsgRecvd(), 0x87
    wbiosCssValidateSyncMsg(), 0x88
    wbiosAfltPilotSet(), 0x89
    wbiosAfltAbortPilotSet(), 0x8A
    wbiosFcschMonitorStop(), 0x8B
    wbiosReversePowerSet(), 0x8C
    wbiosPreambleOn(), 0x8D
    wbiosResourceReq(), 0x8E
    wbiosSendPwrCtlParms(), 0x8F
    wbiosFDSCHAcqInd(), 0x90
    wbiosMultiplexParametersGet(), 0x91
    wbiosMultiplexParametersSet(), 0x92
    wbiosTCtoAVCHandoff(), 0x93
    wbiosPSInfoRsp(), 0x94
    wbiosAccessInProg(), 0x95
    wbiosQpchCciDecode(), 0x96
    wbiosRschPowerSet(), 0x97
    wbiosResetLmdMuxStatCounts(), 0x98
    wbiosL1dAlternatePilot(), 0x99
    wbiosCdmaBandSupportedQuery(), 0x9A
    wbioswbiosCssIndicateInService(), 0x9B
    wbiosRadioConfigurationParams(), 0x9C
    wbiosSendDfsThreshold(), 0x9D
    wbiosSerParametersGet(), 0x9E
End

Begin Enum, Traffic Type
    No Traffic, 0
    Primary Traffic, 1
    Secondary Traffic, 2
End

Begin Enum, Ps Eng Type
    Enable, 10
    Disable, 
    Originate, 
    Answer, 
    Hookflash, 
    Terminate, 
    Powerdown, 
    Burst DTMF, 
    Cont DTMF On, 
    Cont DTMF Off, 
    Enable Voice Privacy, 
    Disable Voice Privacy, 
    Data Burst, 
    Data Burst Reject, 
    Wide analog, 
End

Begin Enum, RoamInd
    Roam Ind On, 
    Roam Ind Off, 
    Roam Ind Flashing, 
    Roam Ind Out of Neigh, 
    Roam Ind Out of Build, 
    Roam Ind Pref Sys, 
    Roam Ind Avail Sys, 
    Roam Ind Allia Part, 
    Roam Ind Prem Part, 
    Roam Ind Full Serv, 
    Roam Ind Part Serv, 
    Roam Ind Banner On, 
    Roam Ind Banner Off, 
    Roam Ind Unknown, 
End

Begin Enum, Band Class Type Enum
    BAND 0, 0,  RO
    BAND 1, 1,  RO
    BAND 2, 2,  RO
    BAND 3, 3,  RO
    BAND 4, 4,  RO
    BAND 5, 5,  RO
    BAND 6, 6,  RO
    BAND 7, 7,  RO
    BAND 8, 8,  RO
    BAND 9, 9,  RO
    BAND 10, 10,  RO
    BAND 11, 11,  RO
    BAND 12, 12,  RO
    BAND 13, 13,  RO
    BAND 14, 14,  RO
    BAND 15, 15,  RO
    BAND 16, 16,  RO
End

Begin Enum, Call Processing Event
    EV_DISCONNECT, 1
    EV_PAGE_RECEIVED, 2
    EV_STOPALERT, 3
    EV_ABBR_ALERT, 4
    EV_NOSVC, 5
    EV_CDMA_INSVC, 6
    EV_CPENABLED, 7
    EV_CPDISABLED, 8
    EV_PDOWNACK, 9
    EV_CONNANALOG, 10
    EV_CONNDIGITAL, 11
    EV_TC_ASSIGNED, 12
    EV_ORIG_FAIL, 13
    EV_NDSS_ORIG_CANCEL, 14
    EV_INTERCEPT, 15
    EV_REORDER, 16
    EV_CC_RELEASE, 17
    EV_CC_RELEASE_SO_REJ, 18
    EV_DIALING_COMPLETE, 19
    EV_DIALING_CONTINUE, 20
    EV_MAINTENANCE, 21
    EV_VP_ON, 22
    EV_VP_OFF, 23
    EV_PSIST_FAIL, 24
    EV_TC_RELEASE_MS, 25
    EV_TC_RELEASE_PDOWN, 26
    EV_TC_RELEASE_DISABLE, 27
    EV_TC_RELEASE_BS, 28
    EV_TC_RELEASE_SO_REJECT, 29
    EV_TC_RELEASE_TIMEOUT, 30
    EV_TC_RELEASE_ACK_FAIL, 31
    EV_TC_RELEASE_FADE, 32
    EV_TC_RELEASE_LOCK, 33
    EV_PAGE_FAIL, 34
    EV_RETRY_TIMER_ACTIVE, 35
    EV_RETRY_TIMER_INACTIVE, 36
    EV_AMPS_INSVC, 37
    EV_PACKET_ACTIVE, 38
    EV_PACKET_RELEASED, 39
    EV_PACKET_DORMANT, 40
    EV_ORIG_REJECTED, 41
    EV_ORIG_ACCT, 42
    EV_CSFB_OOSA, 43
    EV_ORIG_USER_CANCEL, 60
    EV_ORIG_ACCESS_FAIL, 61
    EV_ORIG_NO_SVC_FAIL, 62
    EV_ORIG_RETRY_ORDER, 63
    EV_SR_ENABLED, 64
    EV_SR_DISABLED, 65
    EV_ORIG_REQ_RECEIVED, 66
    EV_ORIG_REJECTED_SO_NOT_SUPPORTED, 67
    EV_ORIG_BLOCKED_BY_IRAT, 68
    EV_FLASHFAIL, 80
    EV_ANALOG_PAGE_RECEIVED, 81
    EV_AMPS_IDLE, 82
    EV_ABBR_INTERCEPT, 83
    EV_ABBR_REORDER, 84
    EV_CONN_COMPLETE, 85
    EV_ENTER_OOSA, 86
    EV_FNM_RELEASE, 87
    EV_DBM_MSID_UPDATED, 88
    EV_BUSY_ORIG_FAIL, 89
    EV_LOCKED_ORIG_FAIL, 90
    EV_ORIG_FAIL_SO_REDIRECT, 91
    EV_TC_RELEASE_MT_CALL, 92
End

Begin Enum, Report Status
    PSW_PILOT_ACQUIRE, 
    PSW_NO_PILOT, 
    PSW_SYNC_ACQUIRE_FAIL, 
    PSW_SYNC_TO_SYS_TIME, 
    PSW_SYNC_TO_SYS_TIME_FAIL, 
    PSW_PAGE_MONITOR, 
    PSW_PAGE_MONITOR_FAIL, 
    PSW_BCCH_MONITOR, 
    PSW_BCCH_MONITOR_FAIL, 
    PSW_FCCCH_MONITOR, 
    PSW_FCCCH_MONITOR_FAIL, 
    PSW_SEND_ACCESS_MSG_FAIL, 
    PSW_SEND_TC_MSG, 
    PSW_SEND_TC_MSG_FAIL, 
    PSW_TC_CONFIG, 
    PSW_LONG_CODE_CHANGED, 
    PSW_RADIO_TUNED, 
    PSW_RADIO_NOT_TUNED, 
    PSW_PILOT_LOST, 
    PSW_PUF_PROBE_SENT, 
    PSW_PUF_PROBE_SENT_MAX_PWR, 
    PSW_PUF_PROBE_NOT_SENT, 
    PSW_IND_WAKEUP, 
    PSW_IND_PILOT_SET, 
    PSW_SOFT_HO_COMPLETE, 
    PSW_OOSA_WAKEUP, 
    PSW_AMPS_HO_COMPLETE, 
    PSW_RSCH_STARTED, 
    PSW_FSCH_STARTED, 
    PSW_FSCH_TERMINATED, 
    PSW_RSR_UPDATED, 
    PSW_HARD_HO_COMPLETE, 
    PSW_IND_FREEZE, 
    PSW_IND_THAW, 
    PSW_IND_RESYNC, 
    PSW_IND_RESYNC_DENIED, 
    PSW_ANTENNA_REQ_GRANTED, 
    PSW_ANTENNA_REQ_DENIED, 
    PSW_ANTENNA_RELEASED, 
    PSW_MODEM_FAILURE, 
    PSW_MODEM_READY, 
    PSW_IRAT_RESET_1XCDMA, 
    PSW_RAU_ANTENNA_PREEMPTED, 
    PSW_ASM_SEARCH_REJ, 
    PSW_NUM_CMD_STATUS, 
End

Begin Enum, Psw DBM Ack
    NAM Data DBM Ack, 
    Data DBM Ack, 
    Flush DBM Ack, 
End

Begin Enum, Service Option Table
    BAD, 0
    QCELP_MUX1, 1
    LPBK_MUX1, 
    EVRC_MUX1, 
    ASYNC_MUX1, 
    FAX_MUX1, 
    SMS_MUX1, 
    PD_IP_MUX1, 
    PD_CDPD_MUX1, 
    LPBK_MUX2, 
    STUIII_VS_PREFER_RS1, 
    STUIII_DS_PREFER_RS1, 
    ASYNC_PREFER_RS2, 
    FAX_PREFER_RS2, 
    SMS_MUX2, 
    PD_IP_PREFER_RS2, 
    PD_CDPD_PREFER_RS2, 
    QCELP_MUX2, 
    OTASP_MUX1, 
    OTASP_MUX2, 
    ANA_FAX_PREFER_RS1, 
    ANA_FAX_PREFER_RS2, 
    MSPD_IP_RS1, 
    MSPD_IP_SPLIT12, 
    MSPD_IP_SPLIT21, 
    MSPD_IP_RS2, 
    MSPD_CDPD_RS1, 
    MSPD_CDPD_SPLIT12, 
    MSPD_CDPD_SPLIT21, 
    MSPD_CDPD_RS2, 
    SUPP_CHAN_LPBK_RS1, 
    SUPP_CHAN_LPBK_RS2, 
    TDSO, 
    HSPD, 
    ASYNC_PREFER_RS1, 0x4100
    FAX_PREFER_RS1, 
    PD_IP_PREFER_RS1, 0x4103
    PD_CDPD_PREFER_RS1, 
    QUALCOMM_17, 0x8000
    MARKOV_MUX1, 0x801E
    MARKOV_MUX2, 0x801F
    MAX, 
    ANALOG_VOICE, 0xFFFF
End

Begin Enum, ChannelId
    NONE, 0
    FCH, 1
    DCCH, 2
    FCH+DCH, 3
    SCH0, 4
    FCH+SCH0, 5
    DCCH+SCH0, 6
    FCH+DCCH+SCH0, 7
    SCH1, 8
    FCH+SCH1, 9
    DCCH+SCH1, 10
    FCH+DCCH+SCH1, 11
    SCH0+SCH1, 12
    FCH+SCH0+SCH1, 13
    DCCH+SCH0+SCH1, 14
    FCH+DCCH+SCH0+SCH1, 15
End

Begin Enum, CP Traffic Type
    No Traffic, 0
    Primary Traffic, 1
    Secondary Traffic, 2
End

Begin Enum, Rate Reduction Type
    Rate Full, 0
    Rate 3_4, 1
    Rate 1_2, 2
    Rate 1_4, 3
    Rate Blank, 4
End

Begin Enum, Orig Fail Reason Type
    GENERAL_ORIG_FAIL, 0
    CANCEL_ORIG_FAIL, 1
    INTERCEPT_ORIG_FAIL, 2
    REORDER_ORIG_FAIL, 3
    RELEASE_ORIG_FAIL, 4
    REJECT_ORIG_FAIL, 5
    DISABLED_ORIG_FAIL, 6
    BUSY_ORIG_FAIL, 7
    INVALID_CFG_ORIG_FAIL, 8
    PAGED_ORIG_FAIL, 9
    RELEASING_ORIG_FAIL, 10
    ANALOG_CONNECT_ORIG_FAIL, 11
    NO_RELEASE_REASON, 12
    NORMAL_RELEASE, 13
    FADE_RELEASE, 14
    DISABLED_RELEASE, 15
    REJECTED_RELEASE, 16
    SWITCH_COMPLETE_RELEASE, 17
    SWITCH_FAIL_NOT_CONNECTED, 18
    SERVICETYPE_MISMATCH_RELEASE_REASON, 19
End

Begin Enum, Block Type
    Sys A / Block A, 0
    Sys B / Block B, 1
    Block C, 2
    Block D, 3
    Block E, 4
    Block F, 5
    Block G, 6
    Block H, 7
    Block I, 8
    Block J, 9
    Block K, 10
    Block L, 11
    Block M, 12
    Block N, 13
End

Begin Enum, Release Reason Type
    NO REASON, 12
    NORMAL REASON, 13
    FADE REASON, 14
    DISABLED REASON, 15
    REJECTED REASON, 16
End

Begin Enum, Vocoder Sub Type
    Unknown, 0
    Analog Voice, 1
    EVRC, 2
    QCELP, 3
    QCOM QCELP, 4
End

Begin Enum, Vocoder Pref
    ANALOG, 1
    EVRC, 2
    QCELP, 3
    QCELP MUX2, 4
End

Begin Enum, RLP Protocol Ver Type
    RLP type I, 0
    RLP type II, 1
    RLP type III, 2
End

Begin Enum, Packet Event Type
    ENTER IDLE, 0
    IDLE HO SAME SYS, 1
    IDLE HO NEW SYS, 2
    PAGE RECEIVED, 3
    ORIGINATION SENT, 4
    TRAFFIC ASSIGN, 5
    HARD HANDOFF, 6
End

Begin Enum, Packet State Type
    INACTIVE, 0
    INIT IDLE, 1
    INIT TRAFFIC, 2
    CONNECT PRIMARY, 3
    CONNECT SECONDARY, 4
    DORMANT IDLE, 5
    DORMANT TRAFFIC, 6
    RECONNECT IDLE, 7
    RECONNECT TRAFFIC, 8
End

Begin Enum, Page Accept Map Type
    NO PAGE ON FAX NOR DATA, 0
    PAGE ACCEPT ON DATA ONLY, 1
    PAGE ACCEPT ON FAX ONLY, 2
    PAGE ACCEPT ON DATA AND FAX, 3
End

Begin Enum, Pkt prefer on MDR Type
    NO MDR, 0
    USE MDR IF AVAILABLE, 1
    MDR ONLY, 2
End

Begin Enum, PS Idle Substate
    CP_IDLE_START, 
    CP_IDLE_WAIT_FOR_FCSCH, 
    CP_IDLE_MONITOR, 
    CP_IDLE_HANDOFF, 
    CP_IDLE_CHANNEL_CHANGE, 
    CP_IDLE_ACCESS_ENTRY_HO, 
    CP_IDLE_WAKEUP_FOR_ACCESS, 
    CP_IDLE_POWERDOWN, 
    CP_IDLE_SLOTTED_HO_WAKEUP, 
    CP_IDLE_QPCH_HO_WAKEUP, 
    CP_IDLE_FROZEN, 
    CP_IDLE_MAX, 
End

Begin Enum, Slotted Wake Mode
    PSW_PCH, 0
    PSW_QPCH1, 1
    PSW_QPCH2, 2
    PSW_CCI, 3
    PSW_FCCCH, 4
    PSW_BC, 5
End

Begin Enum, Qpch Indication Enum
    PI_OFF, 0
    PI_ON, 1
    PI_UNDEF, 2
    PI_ERASURE, 3
End

Begin Enum, PswMsgId Enum
    PSW_CMD_STATUS_MSG, 0
    PSW_PMRM_REQ_MSG, 
    PSW_CAND_FREQ_TIMES_MSG, 
    PSW_CAND_FREQ_MEASUREMENTS_MSG, 
    PSW_SCAN_MEASUREMENTS_MSG, 
    PSW_IDLE_HANDOFF_MSG, 
    PSW_START_CF_MEASURE_MSG, 
    PSW_END_CF_MEASURE_MSG, 
    PSW_INITIAL_ACQ_REPORT_MSG, 
    PSW_SET_NEW_IHO_PARAMETERS_MSG, 10
    PSW_OUTER_LOOP_REPORT_REQ_MSG, 13
    PSW_GET_PS_INFO_MSG, 
    PSW_L1D_ACCESS_PREAMBLE_COMPLETE_MSG, 
    PSW_L1D_ACCESS_COMPLETE_MSG, 
    PSW_L1D_ACCESS_PROBE_COMPLETE_MSG, 
    PSW_OOSA_WAKEUP_IND_MSG, 
    PSW_L1D_RSSI_RPT_MSG, 
    PSW_STATUS_REQUEST_RSSI_RSP_MSG, 20
    PSW_FORWARD_SYNC_CHAN_FRAME_MSG, 40
    PSW_FORWARD_PAGE_CHAN_FRAME_MSG, 
    PSW_FORWARD_BCCH_FRAME_MSG, 
    PSW_FORWARD_FCCCH_FRAME_MSG, 
    PSW_DSCH_CHAN_FRAME_MSG, 
    PSW_REVERSE_STATISTICS_PARMS_MSG, 
    PSW_SERVICE_OPTION_CONTROL_RESP_MSG, 
    PSW_RSCH_REL_IND_MSG, 
    PSW_STAT_CNT_MSG, 
    PSW_FORWARD_PAGE_CHAN_MSG, 
    PSW_FORWARD_FCCCH_MSG, 50
    PSW_FORWARD_BCCH_MSG, 
    PSW_FORWARD_SYNC_CHAN_MSG, 
    PSW_DSCH_CHAN_MSG, 
    PSW_STAT_CNT_SER_MSG, 
    PSW_POWER_MSG, 71,
    PSW_CALL_INITIATE_MSG, 
    PSW_CALL_INITIATE_WITH_INFO_REC_MSG, 
    PSW_GET_PRL_INFO_MSG, 
    PSW_E911_MODE_MSG, 
    PSW_CALL_ANSWER_MSG, 
    PSW_CALL_HANGUP_MSG, 
    PSW_SEND_CONT_DTMF_ON_MSG, 
    PSW_SEND_CONT_DTMF_OFF_MSG, 
    PSW_SEND_BURST_DTMF_MSG, 80
    PSW_HOOKFLASH_MSG, 
    PSW_SET_PRIVACY_MODE_MSG, 82
    PSW_SET_RETRIEVABLE_PARAMETER, 85
    PSW_GET_RETRIEVABLE_PARAMETER, 
    PSW_INJECT_HANDOFF_MSG, 
    PSW_GET_FULL_SYS_TIME_MSG, 90
    PSW_SET_SILENT_RETRY_MSG, 
    PSW_GET_SILENT_RETRY_STATUS_MSG, 
    PSW_SET_MOB_PREV_MSG, 
    PSW_SET_PRL_ENABLE_MSG, 
    PSW_SMS_PREF_SRV_OPT_MSG, 130
    PSW_SMS_CONNECT_MSG, 
    PSW_SMS_DISCONNECT_MSG, 
    PSW_SMS_SUBMIT_PARMS_MSG, 
    PSW_SMS_SUBMIT_DATA_MSG, 
    PSW_SMS_CANCEL_MSG, 
    PSW_SMS_ACK_PARMS_MSG, 140
    PSW_SMS_ACK_DATA_MSG, 
    PSW_SMS_TERMINAL_STATUS_MSG, 
    PSW_SMS_TIMER_EXPIRED_MSG, 
    PSW_SMS_CAUSE_CODE_STATUS_MSG, 
    PSW_SMS_RETX_AMOUNT_MSG, 
    PSW_SMS_CAUSE_CODE_SET_MSG, 
    PSW_SMS_REPLY_TL_ACK_MSG, 
    PSW_TIMER_EXPIRED_MSG, 
    PSW_SMS_PREF_REQ_MSG, 
    PSW_SMS_REL_REQ_MSG, 150
    PSW_SMS_TX_REQ_MSG, 
    PSW_SMS_RESEND_TIMER_EXPIRED_MSG, 
    PSW_VAL_PREF_VOICE_SERVICEOPTION_SET_MSG, 160
    PSW_DBM_DATA_NAM_MSG, 170
    PSW_DBM_DATA_NAM_WRITE_ACK_MSG, 
    PSW_DBM_DATA_WRITE_ACK_MSG, 
    PSW_DBM_FLUSH_ACK_MSG, 
    PSW_DBM_DATA_PRL_MSG, 
    PSW_DBM_DATA_PRL_WRITE_MSG, 
    PSW_DBM_DATA_MS_CAP_DB_MSG, 
    PSW_DBM_DATA_MS_CAP_DB_WRITE_ACK_MSG, 
    PSW_DBM_DATA_MISC_MSG, 
    PSW_NVM_CHANGED_BY_ETS_MSG, 180
    PSW_NAM_UNLOCK_ACK_MSG, 
    PSW_DBM_DATA_MISC_WRITE_ACK_MSG, 
    PSW_DBM_SECURE_DATA_WRITE_ACK_MSG, 
    PSW_DBM_SECURE_DATA_MSG, 
    PSW_GET_NAM_MSG, 
    PSW_NAM_CHANGED_MSG, 
    PSW_DBM_INIT_MSG, 
    PSW_VAL_POWER_CYCLE_MSG, 
    PSW_UIM_GET_NAM_DATA_MSG, 210
    PSW_UIM_GET_UIM_MEID_FEATURE_MSG, 
    PSW_UIM_UPDATE_NAM_DATA_MSG, 
    PSW_UIM_STORE_ESN_MSG, 
    PSW_UIM_DATA_PRL_MSG, 
    PSW_UIM_BS_CHALLENGE_ACK_MSG, 
    PSW_UIM_CONFIRM_SSD_ACK_MSG, 
    PSW_UIM_RUN_CAVE_ACK_MSG, 
    PSW_UIM_GENERATE_KEY_VPM_ACK_MSG, 
    PSW_UIM_STATUS_NOTIFY_MSG, 
    PSW_UIM_DATA_OTAFeature_MSG, 220
    PSW_UIM_MS_KEY_REQUEST_ACK_MSG, 
    PSW_UIM_KEY_GENERATION_REQUEST_ACK_MSG, 
    PSW_UIM_COMMIT_ACK_MSG, 
    PSW_UIM_VALIDATE_ACK_MSG, 
    PSW_UIM_CONFIGURATION_REQUEST_ACK_MSG, 
    PSW_UIM_DOWNLOAD_REQUEST_ACK_MSG, 
    PSW_UIM_SSPR_CONFIGURATION_REQUEST_ACK_MSG, 
    PSW_UIM_SSPR_DOWNLOAD_REQUEST_ACK_MSG, 
    PSW_UIM_OTAPA_REQUEST_ACK_MSG, 
    PSW_UIM_UPDATE_BINARY_ACK_MSG, 230
    PSW_UIM_OTA_RUN_CAVE_ACK_MSG, 
    PSW_UIM_STORE_MECONFIG_MSG, 
    PSW_FDN_GET_MSG, 
    PSW_UIM_READ_SMSS_ACK_MSG, 
    PSW_UIM_UPDATE_SMSS_ACK_MSG, 
    PSW_UIM_PROACTIVE_RSP_MSG, 
    PSW_UTK_APP_INIT_TERM_RSP_MSG, 
    PSW_UTK_TERMINAL_RSP_MSG, 
    PSW_UTK_CALL_CONTROL_RSP_MSG, 
    PSW_UIM_CST_RSP_MSG, 
    PSW_UIM_GET_SMS_REC_MSG, 
    PSW_UIM_UPDATE_SMS_REC_MSG, 
    PSW_UIM_SPC_VALIDATE_ACK_MSG, 
    PSW_UTK_SMS_PP_DOWNLOAD_MSG, 
    PSW_UTK_MT_CALL_EVT_MSG, 
    PSW_UTK_CALL_CONN_EVT_MSG, 
    PSW_UTK_CALL_DISC_EVT_MSG, 
    PSW_UIM_CALL_FDN_CHECK_MSG, 
    PSW_DATA_BUFFER_STATUS_MSG, 250
    PSW_ACCESS_SIGNAL_ETS_MSG, 260
    PSW_TEST_MODE_TIMERS_USED_MSG, 
    PSW_ENGINE_TEST_MODE_MSG, 265
    PSW_STATUS_REQUEST_MSG, 
    PSW_PHONE_STATE_MSG, 
    PSW_INIT_NAM_NOT_PROVISIONED_MSG, 
    PSW_INIT_NAM_ALREADY_PROVISIONED_MSG, 
    PSW_INIT_MS_CAP_DB_MSG, 270
    PSW_HSPD_ACTIVE_CONTROL_HOLD_MSG, 
    PSW_RSCH_REQUEST_MSG, 
    PSW_GET_P_REV_IN_USE_MSG, 
    PSW_CLEAR_MRU_MSG, 
    PSW_GET_ACTIVE_NAM_MSG, 
    PSW_SELECT_ACTIVE_NAM_MSG, 
    PSW_FORCE_ANALOG_MODE_MSG, 
    PSW_ENTER_AKEY_MSG, 
    PSW_SET_ACCESS_HO_PARAMETERS_MSG, 
    PSW_DEBUG_SCREEN_INFO_REQUEST, 280
    PSW_DEBUG_PILOT_STRENGTH_INFO_REQUEST, 
    PSW_DEBUG_SCRN_LMD_RSP_MSG, 
    PSW_DEBUG_SCRN_L1D_RSP_MSG, 
    PSW_EXIT_EMERGENCY_MODE_MSG, 
    PSW_GET_GPS_DEBUG_INFO_MSG, 
    PSW_SET_MOBILE_ID_MSG, 
    PSW_GET_MOBILE_ID_MSG, 
    PSW_OTTS_TIMER_SIMULATION, 
    PSW_HLW_MIP_KEYS_UPDATE_MSG, 
    PSW_READ_RAW_IMSI_MSG, 290
    PSW_WRITE_RAW_IMSI_MSG, 
    PSW_L1D_SLOTTED_VETO_MSG, 
    PSW_GET_MIP_KEYS_MSG, 
    PSW_SET_SIP_PASSWORD_MSG, 
    PSW_GET_SIP_PASSWORD_MSG, 
    PSW_SET_SPC_MSG, 
    PSW_GET_SPC_MSG, 
    PSW_GET_SSD_MSG, 
    PSW_INIT_SECURE_DB_MSG, 300
    PSW_GET_CP_BC_TO_CDMA_BC_MSG, 
    PSW_BAND_SUPPORTED_QUERY_RSP_MSG, 
    PSW_SET_FLY_MODE_ENABLE_MSG, 
    PSW_ENABLE_PRL_MSG, 
    PSW_SET_PARM_MSG, 
    PSW_GET_PARM_MSG, 
    PSW_WRITE_RAW_MDN_MSG, 
    PSW_TA_TIMER_EXPIRED_MSG, 
    PSW_DATA_CALL_ANSWER_MSG, 310
    PSW_UICC_FACTORY_MODE_MSG, 
    PSW_VAL_PILOT_PWR_ACK_MSG, 
    PSW_DS_CALL_REL_MSG, 313
    PSW_PS_CALL_REL_MSG, 
    PSW_LS_CALL_REL_MSG, 
    PSW_DS_ENABLE_MSG, 
    PSW_PS_DORMANT_REQ_MSG, 
    PSW_DATA_PREF_REQ_MSG, 
    PSW_VS_PREF_REQ_MSG, 
    PSW_LS_PREF_REQ_MSG, 320
    PSW_VS_SWITCH_SO_MSG, 
    PSW_VS_DS_PREARANG_MSG, 
    PSW_SET_SERVICE_CONFIG_MSG, 
    PSW_SET_PKZID_HYSTER_TMR_MSG, 
    PSW_GET_PKZID_HYSTER_TMR_MSG, 
    PSW_INIT_PSW_MISC_DB_MSG, 
    PSW_CSS_SELECT_RSP_MSG, 400
    PSW_CSS_VALIDATE_RSP_MSG, 
    PSW_CSS_SYS_ACQ_REQ_MSG, 
    PSW_CSS_ACQ_ABORT_REQ_MSG, 
    PSW_CSS_OOSA_SLEEP_REQ_MSG, 
    PSW_CSS_OOSA_CONT_SLEEP_REQ_MSG, 
    PSW_CSS_OOSA_WAKEUP_REQ_MSG, 
    PSW_CSS_CONN_START_CNF_MSG, 
    PSW_CSS_OTASP_SCAN_FINISHED_MSG, 
    PSW_CSS_INDICATE_IN_SERVICE_MSG, 
    PSW_CSS_1X_SEARCH_START_MSG, 
    PSW_CSS_1X_SEARCH_END_MSG, 
    PSW_CSS_TRIGGER_1X_CS_ARB_RELEASE_MSG, 
    PSW_CSS_DEREG_REQ_MSG, 
    PSW_CSS_VAL_SYNC_RSP_MSG, 420
    PSW_SET_LOST_SCAN_PING_FREQUENCY_MSG, 
    PSW_IRAT_MCC_REQ, 
    PSW_IRAT_CUR_SYS_MEAS_REQ, 
    PSW_IRAT_RAT_SIG_MON_REQ, 
    PSW_IRAT_1X_REG_REQ, 
    PSW_CSS_NOTIFY_SUSPEND_CNF_MSG, 
    PSW_OTASP_RCVD_MSG, 440
    PSW_OTASP_REL_MSG, 
    PSW_OTASP_TX_REQ_MSG, 
    PSW_OTASP_SO_PREF_MSG, 
    PSW_EXP_MOD_MS_RESULT_MSG, 
    PSW_EXP_MOD_BS_RESULT_MSG, 
    PSW_FILL_SSPR_RSP_MSG, 
    PSW_IOTA_IS683_MSG, 
    PSW_IOTA_PRL_MSG, 
    PSW_OTA_SPL_UNLOCK_FAIL_MSG, 
    PSW_POS_AFLT_MEASUREMENTS_MSG, 460
    PSW_POS_AFLT_ACK_ABORT_MSG, 
    PSW_POS_AFLT_ABORT_REQ_MSG, 
    PSW_IS801_TCPB_REV_DATA_RESP_INFO_MSG, 
    PSW_IS801_TCPB_FWD_DATA_RESP_INFO_MSG, 
    PSW_IS801_SESSION_START_MSG, 
    PSW_IS801_TCP_CONN_STATUS_MSG, 
    PSW_IS801_RESET_ASSIST_MSG, 
    PSW_LOC_START_MODE_SET_MSG, 
    PSW_LOC_FIX_MODE_GET_MSG, 
    PSW_IS801_MS_CANCEL_REQ_MSG, 470
    PSW_POS_REJECT_MSG, 
    PSW_IS801_EPH_ALM_TIME_MSG, 
    PSW_IS801_MSS_DONE_MSG, 
    PSW_LOC_PREF_REQ_MSG, 475,
    PSW_PDE_SESSION_ABORT_REQ_MSG, 
    PSW_PDE_PSEUDORANGE_MSMT_RSP_MSG, 
    PSW_PDE_SESSION_END_RSP_MSG, 
    PSW_PDE_GPS_INOP_MSG, 
    PSW_GPS_ENABLE_REPORTS_MSG, 
    PSW_TEST_LOC_PDDM_MSG, 
    PSW_TEST_POWER_CONTROL_MSG, 
    PSW_L1D_ALTERNATE_PILOTS_MSG, 
    PSW_LOCATION_SVC_CFG_MSG, 
    PSW_IS801_RESTART_FIX_MSG, 
    PSW_ASSIST_REQ_MSG, 
    PSW_GPS_NMEA_STREAM_MSG, 
    PSW_IS801_GET_SECTOR_INFO_MSG, 490
    PSW_LOC_STATE_CHANGE_ETS_TEST_CMD, 
    PSW_IS801_PPM_TIMER_EXP_MSG, 
    PSW_IS801_SESS_TIMER_EXP_MSG, 
    PSW_IS801_PRM_TIMER_EXP_MSG, 
    PSW_IS801_PREF_RESP_QUAL_TIMER_EXP_MSG, 
    PSW_IS801_OUT_REQ_TIMER_EXP_MSG, 
    PSW_LEC_LOC_RSP_MSG, 
    PSW_GPS_READY_REQ_MSG, 
    PSW_GPS_READY_MSG, 
    PSW_GPS_SIXTY_TIMER_MSG, 
    PSW_GET_TRANSMIT_INFO_MSG, 
    PSW_SET_TRANSMIT_INFO_MSG, 
    PSW_SYSTEM_READY_REQ_MSG, 
    PSW_IS801_CUSTOMER_SETTING_MSG, 
    PSW_PDS_INFO_REQ_MSG, 630
    PSW_AMPS_BB_IND_TX_STAT_MSG, 
    PSW_AMPS_BB_IND_CHAN_FORMAT_MSG, 
    PSW_AMPS_BB_IND_SAT_CC_MSG, 
    PSW_AMPS_BB_IND_FOCC_DATA_MSG, 
    PSW_AMPS_BB_IND_FVC_DATA_MSG, 
    PSW_AMPS_RELAY_RADIO_TUNE_STAT_MSG, 
    PSW_AMPS_RELAY_RADIO_FSU_LOCK_MSG, 
    PSW_AMPS_RELAY_RADIO_RSSI_VAL_MSG, 
    PSW_AMPS_RELAY_RADIO_CARRIER_STAT_MSG, 
    PSW_AMPS_RELAY_RADIO_POWER_LVL_MSG, 
    PSW_AMPS_RELAY_RADIO_AFC_COMPLETE_MSG, 
    PSW_AMPS_CP_RQ_ENABLE_MSG, 
    PSW_AMPS_CP_RQ_POWER_DOWN_MSG, 
    PSW_AMPS_CP_RQ_CALL_INITIATE_MSG, 
    PSW_AMPS_CP_RQ_CALL_ANSWER_MSG, 
    PSW_AMPS_CP_RQ_CALL_HANGUP_MSG, 
    PSW_AMPS_AUDIO_VOICE_MSG, 
    PSW_AMPS_READ_DATA_ACK_MSG, 
    PSW_AMPS_POWER_MSG, 
    PSW_AMPS_WBIOS_INIT_COMPLETE_MSG, 
    PSW_AMPS_SET_RSSI_TH_MSG, 
    PSW_AMPS_WORD_SYNC_RSP_MSG, 
    PSW_GPS_FRAME_SYNC_DONE_MSG, 800
    PSE_LEC_CDMA_SYSTEM_REQ_MSG, 
    PSW_USERMODE_MSG, 
    PSW_TESTMODE_MSG, 
    PSW_LTE_MSG, 
    PSW_SET_EMERGENCY_CARD_INIT_MSG, 
    PSW_MANUAL_AVOID_NETWORK_MSG, 
    PSW_CSFB_CDMA2000PARM_MSG, 
    PSW_CSFB_SIB8_PARM_MSG, 
    PSW_CSFB_GCSNA_DL_MSG, 
    PSW_CSFB_MEAS_REQ_MSG, 
    PSW_CSFB_REDIRECT_MSG, 
    PSW_CSFB_HO_EUTRA_PREP_MSG, 
    PSW_CSFB_MOBFROM_EUTRA_MSG, 
    PSW_CSFB_SERVICE_REJECT_MSG, 
    PSW_ANTENNA_CFG_MSG, 
    PSW_CSFB_GET_STATUS_MSG, 
    PSW_IRATRFC_SERVICE_CNF, 
    PSW_IRATRFC_SERVICE_REJ, 
    PSW_IRATRFC_SUSPEND_REQ, 
    PSW_IRATRFC_RESUME_IND, 
    PSW_IRATRFC_BAND_CONFLICT_IND, 
    PSW_IRATRFC_CXRR_OM_CLASSMARK_REQ, 
    PSW_IRATRFC_CXRR_ENABLED_RATS_REQ, 
    PSW_IRATRFC_CXRR_CBS_CONFIG_REQ, 
    PSW_IRATRFC_CXRR_CBS_REQ, 
    PSW_IRATRFC_CXRR_CONFIG_STATE_REQ, 
    PSW_IRATRFC_CXRR_STATE_REQ, 
    PSW_CALL_SETUP_REQ, 
    PSW_CALL_SERVICE_RSP, 
    PSW_CALL_ACCEPT_REQ, 
    PSW_CALL_RELEASE_REQ, 
    PSW_CALL_HOLD_REQ, 
    PSW_CALL_RETRIEVE_REQ, 
    PSW_CALL_SWAP_REQ, 
    PSW_CALL_JOIN_REQ, 
    PSW_CALL_START_DTMF_REQ, 
    PSW_CALL_STOP_DTMF_REQ, 
    PSW_CALL_BURST_DTMF_REQ, 
    PSW_SMS_SEND_REQ, 
    PSW_CALL_SET_VP_REQ, 
    PSW_CALL_GET_VP_REQ, 
    PSW_CBS_CONFIG_REQ, 
    PSW_MMC_EXT_SERV_CNF, 
    PSW_OTASP_SPC_VALIDATE_REQ, 
    PSW_REDIAL_START_REQ, 
    PSW_REDIAL_STOP_REQ, 
    PSW_SILENT_REDIAL_START_REQ_MSG, 
    PSW_SILENT_REDIAL_STOP_REQ_MSG, 
    PSW_MO_TIMER_EXPIRED_MSG, 
    CXRR_CSS_REG_IND, 850
    CXRR_CLASSMARK_REQ, 
    CXRR_ENABLED_RATS_REQ, 
    CXRR_CBS_CONFIG_REQ, 
    CXRR_CBS_REQ, 
    CXRR_VENDOR_CONFIG_REQ, 
    CXRR_CSS_OOS_SELF_RECOVERY_FAILED_IND, 
    CXRR_CSS_REG_REQ_IND, 
    CXRR_STATE_CONFIG_REQ_MSG, 
    CXRR_STATE_REQ_MSG, 
    CXRR_PS_DOMAIN_ONLY_CLEANUP_IND, 
    PSW_SMS_SET_MORE_MSG_REQ_MSG, 870,
    PSW_SMS_TLACK_SEND_REQ_MSG, 
    PSW_NST_POWERUP_MSG, 900,
    PSW_NST_TRANSMIT_TCH_MSG, 
    PSW_NST_EXIT_TEST_MODE_MSG, 
    PSW_NST_LIST_SET_MSG, 
    PSW_NST_CONFIG_MSG, 
    PSW_NST_REPORT_RSSI_MSG, 
    PSW_NUM_MSG_IDS, 
End

Begin Enum, SRBP State
    ENG_SRBP_NULL, 
    ENG_SRBP_INIT, 
    ENG_SRBP_WAIT, 
    ENG_SRBP_ACCESS_HO, 
    ENG_SRBP_ACCESS_PROBE_HO, 
    ENG_SRBP_SUPERVISION_SUSPEND, 
    ENG_SRBP_IDLE, 
End

Begin Enum, SRBP Event
    ENG_ACCESS_PROC_NO_EVENT, 
    ENG_ACCESS_PROC_TIMEOUT, 
    ENG_ACCESS_PROC_WBIOS_FAIL, 
    ENG_ACCESS_PROC_ACKED, 
    ENG_ACCESS_PROC_PILOT_REPORT, 
    ENG_ACCESS_HO_REQUEST, 
    ENG_ACCESS_HO_RESUME, 
    ENG_ACCESS_PILOT_MSMT_REPORT, 
    ENG_ACCESS_PROC_RESUME, 
End

Begin Enum, SRBP TA Stop
    TA_STOP_SUPERVISION_SUSPENDED, 
    TA_STOP_WBIOS_FAIL, 
    TA_STOP_L3, 
    TA_STOP_ACCESS_ACKED, 
    TA_STOP_HO, 
End

Begin Enum, RC Event Type
    BUFFER STATUS EVENT, 0
    SCH ASSIGNMENT EVENT, 1
    SCH DEALLOCATION EVENT, 2
    TIMER EVENT, 3
End

Begin Enum, RC State Type
    NULL STATE, 0
    ACTIVE STATE, 1
End

Begin Enum, RC SubState Type
    WAIT FOR EVENT, 0
    WAIT FOR ASSIGNMENT, 1
End

Begin Enum, RC Debug Type
    RC_PROCESS_TX_REQUEST, 0
    RC_PSW_TASK, 1
    RC_PSW_DATA_BUFFER_STATUS_MSG, 2
    RC_ENG_RELAY_DATA_BUFFER_STATUS, 3
    RC_RESOURCE_CONTROL, 4
    RC_INVALID_ASSIGNMENT_RECEIVED, 5
    RC_INVALID_SUBSTATE, 6
    RC_FAILED_TO_REMOVE_ENTRY, 7
    RC_INVALID_STATE, 8
End

Begin Enum, RC Config Db Entry
    CONFIG_DB_CURRENT_ENTRY, 0
    CONFIG_DB_FIRST_PENDING_ENTRY, 1
    CONFIG_DB_LAST_PENDING_ENTRY, 2
End

Begin Enum, RC Config Db Debug Type
    RC_DB_EMPTY_CURRENT_WHEN_ADD_PENDING, 0
    RC_DB_VALID_CURRENT_ENTRY_EXIST, 1
    RC_DB_CLEAR_PENDING_LOCATION, 2
    RC_DB_OVERLAPPED_CURRENT_ENTRY_MODIFIED, 3
    RC_DB_CASE1_OVERLAPPED_PENDING_ENTRY_DELETED, 4
    RC_DB_CASE2_OVERLAPPED_PENDING_ENTRY_DELETED, 5
    RC_DB_CASE3_OVERLAPPED_PENDING_ENTRY_DELETED, 6
    RC_DB_DELETE_OLD_ENTRY, 7
    RC_DB_DELETE_PENDING_ENTRY, 8
    RC_DB_DELETE_ENTRY, 9
    RC_DB_NO_ENTRY_PENDING, 10
    RC_DB_SHORTEN_CURRENT_ENTRY, 11
    RC_DB_MOVE_PENDING_ENTRY_TO_CURRENT_ENTRY, 12
    RC_DB_ASSIGNMENT_HAS_TAKEN_PLACE_CLEAR_ENTRY, 13
    RC_DB_ASSIGNMENT_IN_PROGRESS_CALCULATE_REMAIN_DURATION, 14
    RC_DB_ASSIGNMENT_PENDING_CALCULATE_PENDING_DURATION, 15
    RC_DB_INFINTE_REMAIN_DURATION, 16
    RC_DB_REMAIN_RESOURCES_PENDING, 17
    RC_DB_MAXIMUM_BUT_NOT_INFINTE_REMAIN_RESOURCES, 18
    RC_DB_INFINTE_REMAIN_RESOURCES, 19
End

Begin Enum, LocSrv Trace Index
    Outstanding Requests Received, , RO
    BS Capabilities, , RO
    BS Reject Response Received, , RO
    BS Response Not Supported, , RO
    Invalid PPM Session ID, , RO
    Invalid LocServ Session ID, , RO
    Outgoing Msg Buffer Get Failed, , RO
    Session Tag Mismatch, , RO
    BS Location Response Rcvd, , RO
    BS Response Element Rcvd, , RO
    BS Request Element Rcvd, , RO
    Mobile Orig Location Session, , RO
    Loc Session PS Struct Header, , RO
    Loc Session PS Struct Requests, , RO
    Loc Session PS Struct Responses, , RO
    Loc Session PS Struct AFLT, , RO
    Loc Session PS Struct AGPS, , RO
    Invalid AFLT State, , RO
    Invalid AGPS State, , RO
    Unexpected AFLT Event, , RO
    Unexpected AGPS Event, , RO
    MS Request to BS, , RO
    MS Response to BS, , RO
    Collision, , RO
    PDDM Received, , RO
    PDDM Sent, , RO
    RMS Error Phase Response Dump, , RO
End

Begin Enum, MS Request Element enum
    RESERVED0, 
    REQ LOC_RSP, 
    REQ BS_CAP, 
    REQ BS_ALMANAC, 
    REQ GPS_ACQ_ASSIST, 
    REQ GPS_SENSITIV_ASSIST, 
    REQ GPS_LOC_ASSIST, 
    RESERVED1, 
    REQ GPS_ALMANAC, 
    REQ GPS_EPHEMERIS, 
    REQ GPS_NAV_MSG_BITS, 
    REQ GPS_ALMANAC_CORR, 
    REQ GPS_SAT_HEALTH_INFO, 
End

Begin Enum, Loc BS Response Element enum
    BS REJECT = 0, 
    PROV LOC_RSP, 
    PROV BS_CAP, 
    PROV BS_ALMANAC, 
    PROV GPS_ACQ_ASSIST, 
    PROV GPS_SENSITIV_ASSIST, 
    PROV GPS_LOC_ASSIST_S_COORD, 
    PROV GPS_LOC_ASSIST_C_COORD, 
    PROV GPS_ALMANAC, 
    PROV GPS_EPHEMERIS, 
    PROV GPS_NAV_MSG_BITS, 
    PROV GPS_ALMANAC_CORR, 
    PROV GPS_SAT_HEALTH_INFO, 
End

Begin Enum, Loc BS Request Element enum
    RESERVED, 
    REQ MS_LOC_RSP, 
    REQ MS_INFO, 
    REQ AUTO_MEAS_WEIGHT_FAC, 
    REQ PSEUDO_MEAS, 
    REQ PILOT_PHASE_MEAS, 
    REQ TIME_OFFSET_MEAS, 
    REQ CANCELLATION, 
End

Begin enum, AFLT States enum
    AFLT INIT, 
    AFLT IDLE, 
    PPM, 
    BSALM, 
    PPM BSALM DORMANT, 
    PPM BSALM ACTIVE, 
    PPM BSALM PENDING, 
    AFLT NOT SUPPORTED, 
End

Begin Enum, AGPS States enum
    AGPS INIT, 
    AGPS IDLE, 
    INOP, 
    PRM, 
    ACQASST, 
    PRM ACQASST DORMANT, 
    PRM ACQASST ACTIVE, 
    PRM ACQASST PENDING, 
    AGPS NOT SUPPORTED, 
End

Begin Enum, MS Response Element enum
    REJECT, 
    PROV MS LOC RSP, 
    PROV MS INFO, 
    PROV AUTO MEAS WEIGHT FACTOR, 
    PROV PSEUDO MEAS, 
    PROV PILOT PHASE MEAS, 
    PROV TIME_OFFSET MEAS, 
    PROV CANCELLATION ACK, 
End

Begin Enum, Loc FixMode enum
    MS_UNKNOWN_MODE, 
    MSA, 
    MSB, 
    MSS, 
    ControlPlane, 
End

Begin Enum, Msa Loc State enum
    MSA_INIT, 
    MSA_WFR_TCP_CONN, 
    MSA_MS_INFO, 
    MSA_REQ_PPM_AFTER_SYS_PARM_INFO, 
    MSA_GPS_AA, 
    MSA_IMM_AA_SA, 
    MSA_SEQ_AA_SA, 
    MSA_REQ_PRM, 
    MSA_IDLE, 
    MSA_REQ_PPM, 
    MSA_REQ_LOC, 
End

Begin Enum, Msb Loc State enum
    MSB_INIT, 
    MSB_WFR_TCP_CONN, 
    MSB_MS_INFO, 
    MSB_REQ_PPM_AFTER_SYS_PARM_INFO, 
    MSB_TIME_GET, 
    MSB_GPS_AA, 
    MSB_IMM_AA_SA_ST, 
    MSB_SAT_DATA_REQ, 
    MSB_LOC_RESP_END, 
    MSB_MS_INFO_END, 
End

Begin Enum, Mss Loc State enum
    MSS_INIT, 
    MSS_ACTIVE, 
End

Begin Enum, ControlPlane Loc State enum
    CP_INIT, 
    CP_REQ_PPM_MS_INFO, 
    CP_WFR_PPM, 
    CP_REQ_PPM_PRM, 
    CP_GPS_AA, 
    CP_PPM_REQ, 
    CP_PRM_REQ, 
    CP_IDLE_STATE, 
    CP_REQ_LOC, 
End

Begin Enum, Loc Event enum
    SESSION_START_EV, 
    NEXT_FIX_EV, 
    TCP_CONN_CLOSE_EV, 
    PSW_IS801_TCPB_REV_DATA_RESP_INFO_EV, 
    PSW_IS801_L1d_PPM_RSP_EV, 
    PSW_IS801_LEC_PRM_RSP_EV, 
    GPS_AA_RSP_EV, 
    LOC_OUTREQ_DONE_EV, 
    LOC_RSP_EV, 
    LOC_LEC_LOC_RSP_EV, 
    PPM_REQ_EV, 
    PRM_REQ_EV, 
    PRM_TIMER_EXP_EV, 
    PPM_TIMER_EXP_EV, 
    PPM_PREF_QUAL_TIMER_OUT_EV, 
    PRM_ABORT_EV, 
    MS_INFO_REQ_EV, 
    BS_REJ_EV, 
    OUT_REQ_TIMER_EXP_EV, 
    MS_CONFIRM_IND_EV, 
    PSW_DISCONN_EV, 
    PPM_CANCEL_EV, 
    PRM_CANCEL_EV, 
    LEC_READY_EV, 
    REV_TCP_READY_EV, 
    REV_MS_READY_EV, 
    L1d_READY_EV, 
    MSS_DONE, 
    FULL_TIME_GET, 
    TCP_CONN_SUCC_EV, 
    GPS_READY_EV, 
End

Begin Enum, MSA_FLOW enum
    MSA_IMM_AA_SA_FL, 
    MSA_SEQ_AA_SA_FL, 
    MSA_IMM_AA_ONLY_FL, 
    MSA_AFLT_ONLY_FL, 
    NUM_MSA_FLOW, 
End

Begin Enum, MSB_FLOW enum
    MSB_IMM_AA_SA_FL, 
    MSB_IMM_AA_ONLY_FL, 
    MSB_INIT_POS_FL, 
    MSB_EPH_INIT_POS_FL, 
    MSB_EPH_BASED_ON_PPM_FL, 
    MSB_GENERIC_EPH_FL, 
    MSB_EPH_FROM_POS_FL, 
    MSB_ACTIVE_FL, 
    NUM_MSB_FLOW, 
End

Begin Enum, Loc Timer enum
    LOC Timer, 
    PPM PrefRespQual Timer, 
End

Begin Enum, Loc TimerID enum
    LOC_BTWEEN_FIX_TIMER_ID, 
    PPM_BTWEEN_FIX_TIMER_ID, 
    PRM_BTWEEN_FIX_TIMER_ID, 
    PPM_PREF_RESP_QUAL_TIMER_ID, 
    LOC_OUTREQ_TIMER_ID, 
End

Begin Enum, PrefRespQualTimerID enum
    PPM_PrefRespQual_Timer_0, 
    PPM_PrefRespQual_Timer_1, 
End

Begin Enum, ExpireTimerCallback enum
    LocSessBetweenFixTimerCallBack, 
    LocPPMBetweenFixTimerCallBack, 
    LocPRMBetweenFixTimerCallBack, 
    LocPPMPrefRespQualTimerCallBack, 
    LocOutReqTimerCallBack, 
End

Begin Enum, SmsTcp enum
    SMS, 
    TCP, 
End

Begin Enum, Conn Status enum
    CLOSE, 
    SUCESS, 
End

Begin Enum, Uim Trace Type Enum
    PswUimStatusNotifyMsg(), ,RO
    PswUimETSWhatChanged(), ,RO
    PswUimNoUIMCardInit(), ,RO
    PswUimIllegalUpdate(), ,RO
    PswUpdateUim(), ,RO
    UimResponse(), ,RO
    UimGetPrl(), ,RO
    UimPrlResponse(), ,RO
    UimStoreEsnAck(), ,RO
    PswDbmInit(), ,RO
    UimGetNamDataRead(), ,RO
    PswNamChangedByEtsMsg(), ,RO
    PswNamDataRead(), ,RO
    NamDataWrite(), ,RO
    DbmDataNamRequest(), ,RO
    UimDataRequest(), ,RO
    _UimStatusNotifyMsg(), ,RO
    cssDbmInit(), ,RO
    _UimNamDataRead(), ,RO
    UimEsnStore(), ,RO
    secApiResponse(), ,RO
    ReleaseUim(), ,RO
    InSvcUim(), ,RO
    InSvcWaitUim(), ,RO
    ConfirmUim(), ,RO
    RcvOutstUim(), ,RO
    handleSyncRequestUim(), ,RO
    handleAsyncRequestUim(), ,RO
    ResponseUim(), ,RO
End

Begin Enum, Psw Uim Card Status Enum
    UICC_NOT_INITIALIZED, , RO
    UICC_BOOTUP, , RO
    UICC_READY, , RO
    UICC_NOT_READY, , RO
    UICC_LINK_FAILURE, , RO
End

Begin Enum, Uim MsgId Type
    PSW_UIM_GET_NAM_DATA_MSG, 210
    PSW_UIM_GET_UIM_MEID_FEATURE_MSG, 
    PSW_UIM_UPDATE_NAM_DATA_MSG, 
    PSW_UIM_STORE_ESN_MSG, 
    PSW_UIM_DATA_PRL_MSG, 
    PSW_UIM_BS_CHALLENGE_ACK_MSG, 
    PSW_UIM_CONFIRM_SSD_ACK_MSG, 
    PSW_UIM_RUN_CAVE_ACK_MSG, 
    PSW_UIM_GENERATE_KEY_VPM_ACK_MSG, 
    PSW_UIM_STATUS_NOTIFY_MSG, 
    PSW_UIM_DATA_OTAFeature_MSG, 220
    PSW_UIM_MS_KEY_REQUEST_ACK_MSG, 
    PSW_UIM_KEY_GENERATION_REQUEST_ACK_MSG, 
    PSW_UIM_COMMIT_ACK_MSG, 
    PSW_UIM_VALIDATE_ACK_MSG, 
    PSW_UIM_CONFIGURATION_REQUEST_ACK_MSG, 
    PSW_UIM_DOWNLOAD_REQUEST_ACK_MSG, 
    PSW_UIM_SSPR_CONFIGURATION_REQUEST_ACK_MSG, 
    PSW_UIM_SSPR_DOWNLOAD_REQUEST_ACK_MSG, 
    PSW_UIM_OTAPA_REQUEST_ACK_MSG, 
    PSW_UIM_UPDATE_BINARY_ACK_MSG, 230
    PSW_UIM_OTA_RUN_CAVE_ACK_MSG, 
    PSW_UIM_STORE_MECONFIG_MSG, 
End

Begin Enum, CP DB Segments
    DB PSW NAM1, 0x00
    DB PSW MRU1, 0x01
    DB PSW MS CAP DB, 0x02
    DB RESERVED, 0x03
    DB PSW MISC, 0x04
    DB PSW NAM2, 0x05
    DB PSW MRU2, 0x06
    DB SERVICE HISTORY, 0x07
    DB DBM TIMESTAMP, 0x08
    DB SECURE DATA, 0x09
    DB HSPD, 0x0A
    DB HSPD SECURE, 0x0B
    DB EVDO DATA, 0x0C
    DB EVDO MRU, 0x0D
    DB EHRPD, 0x0E
    DB HLP IPCOUNTERS, 0x0F
    DB MSC WMCMSMODE, 0x10
    DB CUSTOMIZE, 0x11
    DB GPIO IOCIOD, 0x12
    DB AUDIO MICG, 0x13
    DB UI MISC, 0x14
    DB CSS 1X, 0x15
    DB CSS DO, 0x16
    DB CSS MISC, 0x17
End

Begin Enum, MsidType Enum
    ID_NOT_SET, , RO
    ESN, , RO
    MEID, , RO
    UIMID, , RO
    SF_EUIMID, , RO
End

Begin Enum, OTA Req Msg Type
    OTA_CONF_REQ, 
    OTA_DNLD_REQ, 
    OTA_KEY_REQ, 
    OTA_KEY_GEN_REQ, 
    OTA_RE_AUTH_REQ, 
    OTA_COMMIT_REQ, 
    OTA_PROTCAP_REQ, 
    OTA_SSPR_CONF_REQ, 
    OTA_SSPR_DNLD_REQ, 
    OTA_VAL_REQ, 
    OTA_OTAPA_REQ, 
    OTA_UPDATE_BINARY_REQ, 
End

Begin Enum, OTA Rsp Msg Type
    OTA_CONF_RESP, 
    OTA_DNLD_RESP, 
    OTA_KEY_RESP, 
    OTA_KEY_GEN_RESP, 
    OTA_RE_AUTH_RESP, 
    OTA_COMMIT_RESP, 
    OTA_PROTCAP_RESP, 
    OTA_SSPR_CONF_RESP, 
    OTA_SSPR_DNLD_RESP, 
    OTA_VAL_RESP, 
    OTA_OTAPA_RESP, 
    OTA_EXT_PROTCAP_RESP, 
End

Begin Enum, PswDbmTraces Enum
    PSW_DBM_MS_CAP_WRITE, , RO
    PSW_DBM_NAM_LOCK_WRITE, , RO
    PSW_DBM_NAM_DATA_WRITE, , RO
    PSW_DBM_MRU_WRITE, , RO
    PSW_DBM_CLEAR_MRU, , RO
    PSW_DBM_SAVE_LAST_SYS_MRU, , RO
    PSW_DBM_NAM_PROCESS_DATA, , RO
    PSW_DBM_MRU_PROCESS_DATA, , RO
    PSW_DBM_INIT_DBM, , RO
    PSW_DBM_NAM_DATA_READ_REQUEST, , RO
    PSW_DBM_MRU_READ_REQUEST, , RO
    PSW_DBM_MSCAP_READ_REQUEST, , RO
    PSW_DBM_PRL_READ_REQUEST, , RO
    PSW_DBM_NVM_CHANGED_BY_ETS, , RO
    PSW_DBM_MISC_DATA_READ_REQUEST, , RO
    PSW_DBM_MISC_PROCESS_DATA, , RO
    PSW_DBM_ERI_READ_REQUEST, , RO
    PSW_DBM_ERI_PROCESS_DATA, , RO
    PSW_DBM_MSID_WRITE, , RO
    PSW_DBM_SECURE_DATA_READ_REQUEST, , RO
    PSW_DBM_SECURE_DATA_PROCESS, , RO
    PSW_DBM_SECURE_DATA_WRITE, , RO
    PSW_DBM_SECURE_DATA_WRITE_ACK, , RO
    PSW_DBM_MISC_DATA_WRITE, , RO
    PSW_DBM_MISC_DATA_WRITE_ACK, , RO
    PSW_DBM_MISC_DATA_WRITE_NACK, , RO
    PSW_DBM_SET_MSID_IN_USE, , RO
End

Begin Enum, Secure Data Update Type Enum
    POWERDOWN, 0
    MSID, 1
    AUTH, 2
    SPC, 3
    SIP, 4
    MIP, 5
End

Begin Enum, PswMultiBandTraces Enum
    BAND_CHANNEL_INVALID, , RO
    CHANNEL_TO_BLOCK, , RO
End

Begin Enum, PSW Slotted Veto Flag
    Display current veto mask, 0x0000
    PSW_SLOTTED_TST_MODE_VETO_FLAG (0x0001), 0x0001
    PSW_SLOTTED_PE_SMS_VETO_FLAG   (0x0002), 0x0002
    PSW_SLOTTED_PE_SR_VETO_FLAG    (0x0004), 0x0004
    PSW_SLOTTED_PE_LOC_VETO_FLAG   (0x0008), 0x0008
    PSW_SLOTTED_LEC_VETO_FLAG      (0x0010), 0x0010
    PSW_SLOTTED_L1D_VETO_FLAG      (0x0020), 0x0020
    PSW_SLOTTED_SPARE_VETO_FLAG10  (0x0040), 0x0040
    PSW_SLOTTED_SPARE_VETO_FLAG9   (0x0080), 0x0080
    PSW_SLOTTED_SPARE_VETO_FLAG8   (0x0100), 0x0100
    PSW_SLOTTED_SPARE_VETO_FLAG7   (0x0200), 0x0200
    PSW_SLOTTED_SPARE_VETO_FLAG6   (0x0400), 0x0400
    PSW_SLOTTED_SPARE_VETO_FLAG5   (0x0800), 0x0800
    PSW_SLOTTED_SPARE_VETO_FLAG4   (0x1000), 0x1000
    PSW_SLOTTED_SPARE_VETO_FLAG3   (0x2000), 0x2000
    PSW_SLOTTED_SPARE_VETO_FLAG2   (0x4000), 0x4000
    PSW_SLOTTED_SPARE_VETO_FLAG1   (0x8000), 0x8000
End

Begin Enum, CSFB Trace Type Enum
    CSFB_EVENT_RECEIVED_TRACE, ,RO
    CSFB_UNEXPECTED_EVENT_TRACE, ,RO
    CSFB_ENG_QUEUE_EXCEEDED_TRACE, ,RO
    CSFB_SET_STATE_TRACE, ,RO
    CSFB_MSG_NOT_SUPPORTED_TRACE, ,RO
    CSFB_MSG_RVCD_IN_WRONG_STATE_TRACE, ,RO
    CSFB_GCSNA_DL_ERROR_TRACE, ,RO
End

Begin Enum, CSFB State Enum
    CSFB_INIT, 
    CSFB_DUAL_RF, 
    CSFB_IDLE, 
    CSFB_REGISTER, 
    CSFB_SMS, 
    CSFB_ORIG, 
    CSFB_PAGE, 
    CSFB_REDIR, 
    eCSFB_ORIG_RSP, 
    eCSFB_PAGE_RSP, 
    eCSFB_HO, 
    CSFB_COMPLETE, 
End

Begin Enum, CSFB Event Enum
    CSFB_NULL_EVENT, 
    CDMA2000_PARM, 
    SIB8_PARM, 
    GCSNA_DL, 
    CSFB_MEAS_REQ, 
    CSFB_MEAS_RSP, 
    CSFB_REDIRECTION, 
    HO_EUTRA_PREP, 
    MOB_FROM_EUTRA, 
    CSFB_SERVICE_REJECT, 
    ANTENNA_CFG, 
    CSFB_SEND_REGISTRATION, 
    CSFB_SEND_SMS, 
    CSFB_USER_ORIG, 
    CSFB_PCH_ACQUIRED, 
    CSFB_PCH_ACQ_FAIL, 
    CSFB_TCH_ACQUIRED, 
    CSFB_TCH_ACQ_FAIL, 
    CSFB_STATE_TIMER_EXPIRED, 
    CSFB_CALL_ENDED, 
    CSFB_SMS_SEND_FAILED, 
    GCSNA_SEND_FAILED, 
End

Begin Enum, CPStateType
    CP_DISABLED, 0
    CP_SYS_DETERMINATION, 1
    CP_PILOT_ACQUISITION, 2
    CP_SYNC_ACQUISITION, 3
    CP_TIMING_CHANGE, 4
    CP_IDLE, 5
    CP_UPDATE_OHD_INFO, 6
    CP_PAGE_RESPONSE, 7
    CP_ORD_MSG_RESP, 8
    CP_ORIGINATION, 9
    CP_REGISTRATION, 10
    CP_MSG_TRANSMISSION, 11
    CP_TC_INIT, 12
    CP_TC_WAIT_ORDER, 13
    CP_TC_WAIT_ANSWER, 14
    CP_TC_CONVERSATION, 15
    CP_TC_RELEASE, 16
    CP_NST, 17
End

Begin Enum, GCSNA Trace Type Enum
    GCSNA_DL_MSG_TOO_BIG_TRACE, ,RO
    GCSNA_INVALID_SERVICE_REJ_TYPE_TRACE, ,RO
    GCSNA_UNEXPECTED_L2ACK_TRACE, ,RO
    GCSNA_DL_SERVICE_REJECT_TRACE, ,RO
    GCSNA_PARSE_SIZE_MISMATCH_TRACE, ,RO
    GCSNA_C2KP_SIZE_MISMATCH_TRACE, ,RO
    GCSNA_UL_SEND_FAIL_TRACE, ,RO
    GCSNA_CS_INSTANCE_ERROR_TRACE, ,RO
    GCSNA_DL_MSG_RESULT_TRACE, ,RO
End

Begin Enum, GCSNA Reject Reason Enum
    INVALID_GCSNAOPTION_REJ, 0
    INVALID_1X_PROT_REV_REJ, 1
    INVALID_GCSNAOPT_PROTREV_REJ, 2
    INVALID_MESSAGE_ID_REJ, 3
    PROVISIONING_NOT_SUPP_REJ, 4
    UNSUPP_RECTYPE_REJ, 5
    MAX_GCSNA_REJ_REASON, 6
    GCSNA_DUPLICATE_CS_MSG, 251
    GCSNA_RESOURCE_SHORTAGE_ERROR, 252
    GCSNA_UL_SEND_ERROR, 253
    GGSNA_PARSE_SIZE_ERROR, 254
    GCSNA_NO_ERROR, 255
End

Begin Enum, NullGPMTraceStrings
    nullGPM_memAccSeq_and_rcvdAccSeq, 0
    nullGPM_cfg_or_accCfg_changed_in_one_PN, 
    nullGPM_dsp_match_at_hf2, 
    nullGPM_Switch_setValue_CrcMatch, 
    nullGPM_NullGpmData0_NullGpmData1, 
    nullGPM_cpCompareCRCWithIMSICode_k_i_counter, 
    nullGPM_dsp_half0_gpm0_gpm1, 
    nullGPM_dsp_half1_gpm0_gpm1, 
    nullGPM_dsp_match_at_hf1, 
End

Begin Enum, PchStatTraceStrings
    pchStat_monitor_timer_expired, 0
    pchStat_SCI_set_in_middle_of_message, 
    pchStat_give_frame1_halfFrame_with_SCI_error_a_chancee, 
    pchStat_Stop_stat_for_SCI_error_found, 
    pchStat_tragic_CRC_error_of_page_message, 
    pchStat_stop_stat_Frame_lost_at_index, 
    pchStat_unable_to_stop_stat_last_time, 
    pchStat_Start, 
    pchStat_message_precede_GPM_number, 
    pchStat_unable_to_stop_stat_number, 
    pchStat_ERROR, 
    pchStat_first_GPM_received_in_half_frame_at, 
End

Begin Enum, PswReportStatus
    PSW_CB_STATUS_NULL, 0
    PSW_CB_STATUS_HOLDING, 
    PSW_CB_STATUS_FDN, 
    PSW_CB_STATUS_UTK, 
    PSW_CB_STATUS_INIT, 
    PSW_CB_STATUS_DIALING, 
    PSW_CB_STATUS_ALERTING, 
    PSW_CB_STATUS_SERVICE, 
    PSW_CB_STATUS_INCOMING, 
    PSW_CB_STATUS_ACCEPTING, 
    PSW_CB_STATUS_ACCEPTED, 
    PSW_CB_STATUS_REJECTED, 
    PSW_CB_STATUS_VDC_REJECTED, 
    PSW_CB_STATUS_CONNECTED, 
    PSW_CB_STATUS_DISCONNECTING, 
    PSW_CB_STATUS_DISCONNECTED, 
    PSW_CB_STATUS_MAX, 
End

Begin Enum, PswMptyStatus
    PSW_MPARTY_STATUS_NULL, 0
    PSW_MPARTY_STATUS_CALL_WAITING_CONNECTING, 
    PSW_MPARTY_STATUS_CALL_WAITING_CONNECTED, 
    PSW_MPARTY_STATUS_3WAY_CALL_CONNECTING, 
    PSW_MPARTY_STATUS_3WAY_CALL_CONNECTED, 
    PSW_MPARTY_STATUS_3WAY_CALL_JOINED, 
    PSW_MPARTY_STATUS_DISCONNECTING, 
    PSW_MPARTY_STATUS_MAX, 
End

Begin Enum, PswCallType
    PSW_CALL_TYPE_NULL, 0
    PSW_CALL_TYPE_MO, 
    PSW_CALL_TYPE_MT, 
End

Begin Enum, PswCallCsErrorCause
    MN_MS_CDMA_NO_ERROR, 4000
    MN_MS_CDMA_DISCONNECT, 
    MN_MS_CDMA_NOSVC, 
    MN_MS_CDMA_CDMA_INSVC, 
    MN_MS_CDMA_CPENABLED, 
    MN_MS_CDMA_CPDISABLED, 
    MN_MS_CDMA_PDOWNACK, 
    MN_MS_CDMA_ORIG_FAIL, 
    MN_MS_CDMA_NDSS_ORIG_CANCEL, 
    MN_MS_CDMA_INTERCEPT, 
    MN_MS_CDMA_REORDER, 
    MN_MS_CDMA_CC_RELEASE, 
    MN_MS_CDMA_CC_RELEASE_SO_REJ, 
    MN_MS_CDMA_MAINTENANCE, 
    MN_MS_CDMA_PSIST_FAIL, 
    MN_MS_CDMA_TC_RELEASE_MS, 
    MN_MS_CDMA_TC_RELEASE_PDOWN, 
    MN_MS_CDMA_TC_RELEASE_DISABLE, 
    MN_MS_CDMA_TC_RELEASE_BS, 
    MN_MS_CDMA_TC_RELEASE_SO_REJECT, 
    MN_MS_CDMA_TC_RELEASE_TIMEOUT, 
    MN_MS_CDMA_TC_RELEASE_ACK_FAIL, 
    MN_MS_CDMA_TC_RELEASE_FADE, 
    MN_MS_CDMA_TC_RELEASE_LOCK, 
    MN_MS_CDMA_TC_RELEASE_MT_CALL, 
    MN_MS_CDMA_PAGE_FAIL, 
    MN_MS_CDMA_ORIG_REJECTED, 
    MN_MS_CDMA_ORIG_REJECTED_SO_NOT_SUPPORTED, 
    MN_MS_CDMA_ORIG_ACCT, 
    MN_MS_CDMA_ORIG_USER_CANCEL, 
    MN_MS_CDMA_ORIG_ACCESS_FAIL, 
    MN_MS_CDMA_ORIG_NO_SVC_FAIL, 
    MN_MS_CDMA_ORIG_RETRY_ORDER, 
    MN_MS_CDMA_ORIG_BLOCKED_BY_IRAT, 
    MN_MS_CDMA_CSFB_OOSA, 
    MN_MS_CDMA_SMS_CANCEL_BY_PWRDOWN, 
    MN_MS_CDMA_ABBR_INTERCEPT, 
    MN_MS_CDMA_ABBR_REORDER, 
    MN_MS_CDMA_ENTER_OOSA, 
    MN_MS_CDMA_FNM_RELEASE, 
    MN_MS_CDMA_BUSY_ORIG_FAIL, 
    MN_MS_CDMA_LOCKED_ORIG_FAIL, 
    MN_MS_CDMA_ORIG_FAIL_SO_REDIRECT, 
    MN_MS_CDMA_PAGE_USER_REJECT, 
    MN_MS_CDMA_CALL_JOIN_NOT_READY, 
    MN_MS_CDMA_CALL_SWAP_NOT_READY, 
    MN_MS_CDMA_CALL_FLASH_FAIL, 
    MN_MS_CDMA_CALL_DTMF_REJ_ORDER_ERROR, 
    MN_MS_CDMA_CALL_DTMF_REJ_TC_TXQ_FULL, 
    MN_MS_CDMA_CALL_DTMF_REJ_FMT_OVERFLOW, 
    MN_MS_CDMA_SMS_NOT_READY, 
    MN_MS_CDMA_SMS_NO_STORAGE, 
    MN_MS_CDMA_SMS_RETRY_FAIL, 
    MN_MS_CDMA_SMS_DATA_BURST_FAIL, 
    MN_MS_CDMA_DATA_BURST_REJ_FC_ERROR, 
    MN_MS_CDMA_DATA_BURST_REJ_TC_TXQ_FULL, 
    MN_MS_CDMA_DATA_BURST_REJ_FMT_OVERFLOW, 
    MN_MS_CDMA_CALL_NOT_READY, 
    MN_MS_CDMA_BAD_PARAMETERS, 
End

Begin Enum, PswCallCsStatus
    MN_MOC_CALL_SETUP, 0
    MN_MOC_CALL_ALERTED, 
    MN_MOC_CALL_STARTED, 
    MN_MOC_CALL_ACTIVE, 
    MN_MTC_CALL_CONFIRMED, 
    MN_MTC_CALL_SETUP, 
    MN_MTC_BC_NEGOTIATED, 
    MN_MTC_CALL_STARTED, 
    MN_MTC_CALL_ACTIVE, 
    MN_MOC_AS_CALL_SETUP, 
    MN_MTC_AS_CALL_SETUP, 
    MN_MTC_CALL_REJECTED, 
    MN_CALL_IS_HELD, 
    MN_CALL_IS_RETRIEVED, 
    MN_MPARTY_IS_ACTIVE, 
    MN_MPARTY_IS_HELD, 
    MN_MPARTY_IS_RETRIEVED, 
    MN_MPARTY_IS_SPLITTED, 
    MN_IS_ECT, 
    MN_CALL_DISC_REQ, 
    MN_CALL_IS_DISCONNECTED, 
    MN_CALL_IS_CLEARED, 
    MN_CALL_MODIFY_INDICATED, 
    MN_CALL_MODIFY_STARTED, 
    MN_CALL_MODIFY_COMPLETED, 
    MN_CALL_MODIFY_REJECTED, 
    MN_CALL_IS_DEFLECTED, 
    MN_MPARTY_STARTED, 
    MN_MPARTY_REJECTED, 
    MN_MPARTY_RETRIEVE_STARTED, 
    MN_MPARTY_RETRIEVE_REJECTED, 
    MN_MPARTY_SPLIT_STARTED, 
    MN_MPARTY_SPLIT_REJECTED, 
    MN_MPARTY_HELD_STARTED, 
    MN_MPARTY_HELD_REJECTED, 
    MN_CALL_DEFLECTION_STARTED, 
    MN_CALL_DEFLECTION_REJECTED, 
    MN_CALL_HELD_STARTED, 
    MN_CALL_HELD_REJECTED, 
    MN_CALL_RETRIEVE_STARTED, 
    MN_CALL_RETRIEVE_REJECTED, 
    MN_ECT_STARTED, 
    MN_ECT_REJECTED, 
    MN_RADIO_LINK_FAILURE, 
    MN_CALL_REESTABLISHMENT_COMPLETED, 
    MN_CALL_PROCEEDING, 
    MN_MTC_CALL_ALERT, 
    MN_CALL_SETUP_REJ, 
    MN_CALL_DROP_GSM, 
    MN_CALL_DROP_UMTS, 
    MN_CALL_REL_REQ, 
    MN_CALL_SRVCC_HO_START, 
    MN_CALL_SRVCC_HO_SUCCESS, 
    MN_CALL_SRVCC_HO_FAIL, 
End

Begin Enum, PswCallCsProgressInfo
    MN_PROGRESS_NONE, 0
    MN_ALERTING, 
    MN_MT_CALL_ACCEPTED, 
    MN_IN_BAND_TONES_AVAILABLE, 
    MN_IN_BAND_TONES_NOT_AVAILABLE, 
    MN_TCH_SPEECH_MT_CALL_ACCEPTED, 
    MN_TCH_SPEECH_TONES_AVAILABLE, 
    MN_TCH_SPEECH_TONES_NOT_AVAILABLE, 
    MN_TCH_SPEECH, 
    MN_TCH_DATA, 
    MN_TCH_NOT_SPEECH, 
    MN_TCH_CALL_END, 
    MN_FAST_CONNECTION_AVAILABLE, 
    MN_FAST_CONNECTION_CLOSED, 
    MN_PLAY_ANNOUNCEMENT, 
    MN_IN_BAND_CAT_TONES_AVAILABLE, 
End

Begin Enum, PswCallRelGroup
    REL_GROUP_DESIGNATED_CALL, 0
    REL_GROUP_ALL_CALLS, 
    REL_GROUP_ALL_ACTIVE_CALLS, 
    REL_GROUP_ALL_ACTIVE_AND_HELD_CALLS, 
    REL_GROUP_ALL_IN_MPTY, 
    REL_GROUP_ALL_HELD_CALLS, 
    REL_GROUP_ALL_HELD_CALLS_NO_UDUB, 
    REL_GROUP_ALL_ACTIVE_ACCEPT_WAITING, 
End

Begin Enum, PswCallStatus
    PSW_CALL_NULL, 0
    PSW_CALL_CONNECTING, 
    PSW_CALL_CONNECTED, 
    PSW_CALL_ACTIVE, 
    PSW_CALL_HOLD, 
    PSW_CALL_JOIN, 
    PSW_CALL_SWAP, 
    PSW_CALL_DTMF_START, 
    PSW_CALL_DTMF_STOP, 
    PSW_CALL_DTMF_ON, 
    PSW_CALL_DTMF_BURST, 
    PSW_CALL_DISCONNECTING, 
    PSW_CALL_DISCONNECTED, 
End

Begin Enum, PswCallNotificationType
    PSW_CALL_NOTIFI_NULL, 0
    PSW_CALL_NOTIFI_AWIM, 
    PSW_CALL_NOTIFI_EAWIM, 
    PSW_CALL_NOTIFI_FWIM, 
    PSW_CALL_NOTIFI_EFWIM, 
    PSW_CALL_NOTIFI_FNM, 
End

Begin Enum, L2 Proc State
    L2_INACTIVE, 
    L2_IDLE, 
    L2_FILL_MESSAGE, 
    L2_HOLD, 
End

Begin Enum, Uim Task Read Error Type Enum
    UIM_ID, , RO
    COUNT, , RO
    IMSI_M, , RO
    IMSI_T, , RO
    TMSI, , RO
    ANALOG_SID, , RO
    ANALOG_EX, , RO
    ANALOG_REG_IND, , RO
    SID_NID, , RO
    REG_ZONE, , RO
    REG_IND, , RO
    DIST_REG, , RO
    ACCOLC, , RO
    TERM_MODE, , RO
    SLOT_CYCLE_INDEX, , RO
    ANALOG_CH_PREF, , RO
    OTAPA, , RO
    NAM_LOCK, , RO
    SERVICE_PREF, , RO
    MDN, , RO
    CST, , RO
    SF_EUIMID, , RO
    USAGEIND, , RO
End

Begin Enum, UIMMsgId Enum
    UIM_RAW_CMD_MSG, 0x0000
    UIM_SELECT_MSG, 
    UIM_STATUS_MSG, 
    UIM_READ_BINARY_MSG, 
    UIM_UPDATE_BINARY_MSG, 
    UIM_READ_RECORD_MSG, 
    UIM_UPDATE_RECORD_MSG, 
    UIM_VERIFY_CHV_MSG, 
    UIM_CHANGE_CHV_MSG, 
    UIM_ENABLE_CHV_MSG, 
    UIM_DISABLE_CHV_MSG, 
    UIM_UNBLOCK_CHV_MSG, 
    UIM_BS_CHALLENGE_MSG, 
    UIM_CONFIRM_SSD_MSG, 
    UIM_RUN_CAVE_MSG, 
    UIM_GENERATE_KEY_VPM_MSG, 
    UIM_STORE_ESN_ME_MSG, 
    UIM_TERMINAL_PROFILE_MSG, 
    UIM_TERMINAL_RESPONSE_MSG, 
    UIM_ENVELOPE_MSG, 
    UIM_HLP_ACCESS_CHAP_REQ_MSG, 
    UIM_3GPD_OPC_GET_MSG, 
    UIM_3GPD_OPC_UPDATE_MSG, 
    UIM_3GPD_OPM_GET_MSG, 
    UIM_3GPD_OPM_UPDATE_MSG, 
    UIM_3GPD_SIPCAP_GET_MSG, 
    UIM_3GPD_MIPCAP_GET_MSG, 
    UIM_3GPD_SIPUPP_GET_MSG, 
    UIM_3GPD_MIPUPP_GET_MSG, 
    UIM_3GPD_SIPSP_GET_MSG, 
    UIM_3GPD_SIPSP_UPDATE_MSG, 
    UIM_3GPD_MIPSP_GET_MSG, 
    UIM_3GPD_MIPSP_UPDATE_MSG, 
    UIM_3GPD_SIPPAPSS_GET_MSG, 
    UIM_3GPD_SIPPAPSS_UPDATE_MSG, 
    UIM_MS_KEY_REQUEST_MSG, 
    UIM_KEY_GENERATION_REQUEST_MSG, 
    UIM_COMMIT_MSG, 
    UIM_VALIDATE_MSG, 
    UIM_CONFIGURATION_REQUEST_MSG, 
    UIM_DOWNLOAD_REQUEST_MSG, 
    UIM_SSPR_CONFIGURATION_REQUEST_MSG, 
    UIM_SSPR_DOWNLOAD_REQUEST_MSG, 
    UIM_OTAPA_REQUEST_MSG, 
    UIM_OTA_RUN_CAVE_MSG, 
    UIM_PROACTIVE_REGISTER_MSG, 
    UIM_PROACTIVE_POLLING_MSG, 
    UIM_HRPD_MD5_AUTH_MSG, 
    UIM_CARD_TYPE_GET_MSG, 
    UIM_3G_SIP_CHAP_REQ_MSG, 
    UIM_3G_MIP_MNHA_AUTH_REQ_MSG, 
    UIM_3G_MIP_RRQ_HASH_REQ_MSG, 
    UIM_3G_MIP_MNAAA_AUTH_REQ_MSG, 
    UIM_3G_AKA_AUTH_REQ_MSG, 
    UIM_3G_AKA_READ_EFKeysPS_MSG, 
    UIM_3G_AKA_UPDATE_EFKeysPS_MSG, 
    UIM_GET_USIM_AD_MSG, 
    UIM_GET_USIM_IMSI_MSG, 
    UIM_GET_ISIM_IMPU_MSG, 
    UIM_APP_INIT_TERM_MSG, 
    UIM_GET_PRL_MSG, 
    UIM_GET_EXT_PRL_MSG, 
    UIM_GET_MSPL_REQ_MSG, 
    UIM_GET_MLPL_REQ_MSG, 
    UIM_GET_UART_INIT_DONE_MSG, 
    UIM_GET_EFECC_MSG, 
    UIM_GET_EFPL_MSG, 
    UIM_GET_EFAD_MSG, 
    UIM_GET_EFSP_MSG, 
    UIM_EXT_INFO_GET_MSG, 
    UICC_LOGI_CHAN_OPEN_MSG, 
    UICC_LOGI_CHAN_CLOSE_MSG, 
    UICC_RAW_CMD_MSG, 
    UIM_RESET_MSG, 
    UIM_FDN_GET_MSG, 
    UIM_INIT_MSG, 
    UIM_EFECC_PIN_NOT_VER_MSG, 
    UIM_GET_NAM_DATA_MSG, 0x0100
    UIM_UPDATE_NAM_DATA_MSG, 
    UIM_GET_CST_MSG, 
    UIM_GET_UIMID_EUIMID_MSG, 
    UIM_GET_IMSI_MSG, 
    UIM_GET_PHB_REC_PARAMS_MSG, 0x0200
    UIM_GET_PHB_REC_MSG, 
    UIM_UPDATE_PHB_REC_MSG, 
    UIM_ERASE_PHB_REC_MSG, 
    UIM_GET_SMS_REC_PARAMS_MSG, 
    UIM_GET_SMS_REC_MSG, 
    UIM_UPDATE_SMS_REC_MSG, 
    UIM_ERASE_SMS_REC_MSG, 
    UIM_GET_STATUS_MSG, 
    UIM_PROVIDE_LOCAL_INFO_MSG, 
    UIM_APP_VERIFY_CHV_MSG, 
    UIM_APP_CHANGE_CHV_MSG, 
    UIM_APP_ENABLE_CHV_MSG, 
    UIM_APP_DISABLE_CHV_MSG, 
    UIM_APP_UNBLOCK_CHV_MSG, 
    UIM_GET_EF_PROPERTY_MSG, 
    UIM_SET_CARDTYPE_MSG, 
    UIM_NOTIFY_REGISTER_MSG, 0x0300
    UIM_ETS_GET_CARD_STATUS, 
    CDRR_UIM_SET_INSTANCE_REQ, 
    CSS_UIM_DEREGISTER_REQ_MSG, 
End

Begin Enum, CssApiTraceId
    CssStateMachineInit, 
    CssAddEvent, 
    CssRunStateMachine, 
End

Begin Enum, SystemTypeId
    Pcs, 
    Cellular, 
    Analog, 
End

Begin Enum, CssBand
    Cellular, 0,
    PCS, 
End

Begin Enum, CssStateId
    Power Up, 
    Powerup Not Most Pref, 
    Powerup Non Sys Table, 
    Powerup Negative, 
    Re-acquire, 
    Idle, 
    More pref scan, 
    Emergency, 
    Redirection, 
    System Lost, 
    Registration Reject, 
    Otasp, 
    Emergency re acq, 
    Emergency Redirection, 
    Emergency System Lost, 
End

Begin Enum, CssLists
    MRU, 
    MPL, 
    CRSL, 
    PRL, 
    DPCL, 
    RSL, 
    OSL, 
    GSL, 
    ADOSL, 
    SRSL, 
    DEFAULTBAND, 
    SILENT RETRY, 
    ASMPL, 
    ADOLOSL, 
    PRLOSL, 
    GLOSL, 
    EMERGENCY, 
    TEMPSL, 
    AVOIDL, 
    SIB8, 
    SRLTE_SLS, 
    SRLTE_DBS, 
    SRLTE_RBS, 
    SRLTE_ACQEDSYS, 
    APACS1X, 
    APACSDO, 
    SLSREMAINDER1X, 
    SLSREMAINDERDO, 
End

Begin Enum, SidNidMatch
    Restrictive SID/NID match, 0,
    Restrictive-SID/Wildcard-NID match, 
    Wildcard SID/NID match, 
    Non-Match, 
End

Begin Enum, SystemPreference
    Not_Known, 
    Most_Preferred, 
    Preferred, 
    Negative, 
    Non_System_Table, 
End

Begin Enum, Svsm1xStates
    PRL MRU Scan State 1X, 0,
    Dflt Pref Chan Scan State 1X, 
    Acqd Non Sys Table Scan State 1X, 
    Acqd PRL Sys Table Scan State 1X, 
    Silent Retry Scan State 1X, 
    Last Reged Sys Scan State 1X, 
    GEO Scan State 1X, 
    More Pref Sys Scan State 1X, 
    Available Sys Scan State 1X, 
    Emergency Scan State 1X, 
    Associated DO Scan State 1X, 
    OTASP Scan State 1X, 
    Redirection State 1X, 
    Re Acquire State 1X, 
    Call Release State 1X, 
    Pll Channel Test Mode State 1X, 
    Unknown State 1X, 
End

Begin Enum, Css1xValidateRslt
    Denied, 0,
    Accepted, 
    MCC_MNC_Needed, 
End

Begin Enum, 1X Select Status
    TEST_MODE, 0,
    MOST_PREF_SYS_IN_PRL, 
    PREF_SYS_IN_PRL, 
    REDIR_PREF_SYS_IN_PRL, 
    REDIR_SYS_NOT_IN_PRL, 
    REDIR_SYS_NO_PRL, 
    NEG_SYS_IN_PRL, 
    NOT_IN_PRL_BUT_HOME_SYS_IN_NAM, 
    NOT_IN_PRL_BUT_NEG_SYS_IN_NAM, 
    NOT_IN_PRL_OR_NAM_OR_DEFAULT_BAND, 
    NON_SYSTEM_TABLE_ENTRY, 
    NO_PRL_HOME_SYS_IN_NAM, 
    NO_PRL_NEG_SYS_IN_NAM, 
    EPRL_GOTO_PCH, 
    DEFAULT_BAND_CHANNEL_SYSTEM, 
    SYSTEM_MARKED_AS_NEGATIVE, 
    HOME_SYSTEM_AVOIDANCE, 
    SYSTEM_AVOIDANCE, 
    REDIRECTION_SYSTEM_AVOIDANCE, 
    ACCESS_MAX_PROBES_SYSTEM_AVOIDANCE, 
    SYS_REJECTED_DUE_TO_HOME_ONLY, 
    SYS_REJECTED_DUE_TO_INTENATIONAL_ROAM, 
    SYS_REJECTED_DUE_TO_DOMESTIC_ROAM, 
    SYS_ACCEPTED_DUE_TO_TEST_MODE, 
    SYS_TEMPORARILY_REJECTED_DUE_TO_ECIO, 
    SYS_TEMPORARILY_REJECTED_DUE_TO_PAGING_FAILURE, 
End

Begin Enum, CssValidateStatusRslt
    NON_SYS_TABLE, 0,
    ACCEPTED, 
    KEEP_SCAN, 
    NEGATIVE, 
End

Begin Enum, CssSvcPhase
    PHASE_NULL, 0
    PHASE_ASRES_GRANT, 1
    PHASE_BAND_ALLOW_IND, 2
    PHASE_CDRRSEAR_CHECK_DONE, 4
    PHASE_CDRRPSREG_CHECK_DONE, 8
    PHASE_ASRES_REJ, 16,
End

Begin Enum, CssRoamSys
    1X RTT, 0,
    EVDO, 
End

Begin Enum, CssRoamInd
    ON, 0,
    OFF, 
    Flashing, 
    Out of Neigh, 
    Out of Build, 
    Pref Sys, 
    Avail Sys, 
    Allia Part, 
    Prem Part, 
    Full Serv, 
    Part Serv, 
    Banner On, 
    Banner Off, 
    Unknown, 255,
End

Begin Enum, CssTimerId
    1X MPSS Timer, 0x0,
    1X EPRL ESPM Wait Timer, 
    1X Emergency Scan Prev System Timer, 
    1X Home Avoidance Timer, 
    1X Home Avoidance End Timer, 
    1X Avoidance Timer, 
    1X Avoidance End Timer, 
    1X Redirection Avoidance Timer, 
    1X Sleep Request Timer, 
    1X System Lost Timer, 
    1X Searching Pending Timer, 
    IRAT 1X Reging Pending Timer, 
    CSS 1X SLS Scanning Timer, 
    IRAT 1X TXRX Delay Act Fail Timer, 
    IRAT CDMA Dereg Wait Idle Timer, 
    CSS 1X SysLost ECBM Timer, 
    DO MPSS Timer, 0x10,
    DO Redir End Timer, 
    DO WTF Session Open Timer, 
    DO Abandon Channel Timer, 
    DO MPSS Hold Timer, 
    DO MPSS Call Timer, 
    DO Consecutive DO Lost Timer, 
    DO Avoidance Lost Timer, 
    DO Redirection Avoidance Timer, 
    DO ACM PersisTest Fail Avoidance Timer, 
    DO MaxAccessFail Avoidance Timer, 
    DO SessionNego Timeout Avoidance Timer, 
    DO SessionNego Fail Avoidance Timer, 
    DO ConnDeny Auth Avoidance Timer, 
    DO ConnDeny General Avoidance Timer, 
    DO CH Avoidance Tick Timer, 
    DO Scanning Duration Timer, 
    DO OOSA Sleep Protection Timer, 
    DO Gap Search Timer, 
    IRAT DO Sys Lost Search Timer, 
    DO TXRX Suspend Wait Timer, 
    IRAT DO Searching Pending Timer, 
    IRAT DO Reging Pending Timer, 
    CSS DO SLS Scanning Timer, 
    IRAT 1X Scanning WFR SVC Timer, 
    IRAT DO Scanning WFR SVC Timer, 
    IRAT DO Reging WFR CdrrCnf Timer, 
    IRAT 1X search Timer, 
    IRAT DO search Timer, 
    IRAT CDMA search Timer, 
    IRAT 1X Reg Timer, 
    IRAT DO Reg Timer, 
    IRAT CDMA Reg Timer, 
    IRAT DO Guard Timer, 
    IRAT FMD Search Timer, 
    DO Sleep Request Timer, 
    IRAT 1X PsReg_Cnf Pend Timer, 
    IRAT DO TXRX Delay Act Fail Timer, 
    IRAT 1X Delay MMG Cnf Timer, 
    IRAT DO Delay MMG Cnf Timer, 
    IRAT DO NO Service Cnf Pend Timer, 
End

Begin Enum, BandClass
    BandClass0, 
    BandClass1, 
    BandClass2, 
    BandClass3, 
    BandClass4, 
    BandClass5, 
    BandClass6, 
    BandClass7, 
    BandClass8, 
    BandClass9, 
    BandClass10, 
    BandClass11, 
    BandClass12, 
    BandClass13, 
    BandClass14, 
    BandClass15, 
    BandClass16, 
    BandClassMax, 
End

Begin Enum, CssMsgId
    CSS_1X_SELECT_REQ_MSG, 
    CSS_1X_VALIDATE_REQ_MSG, 
    CSS_1X_OOSA_WAKEUP_IND_MSG, 
    CSS_1X_ACQ_ABORT_RSP_MSG, 
    CSS_1XDO_HANDOFF_IND_MSG, 
    CSS_1X_REG_ACCEPTED_MSG, 
    CSS_1X_E911MODE_SET_MSG, 
    CSS_1X_NAM_UPDATED_MSG, 
    CSS_1X_UPDATE_ACTIVE_NAM_MSG, 
    CSS_1X_SET_RETURN_CHANNEL_MSG, 
    CSS_1X_SET_CALL_PENDING_MSG, 
    CSS_1X_SYS_PARMS_UPDATE_MSG, 
    CSS_1X_REPORT_CP_EVENT_MSG, 
    CSS_1X_CLEAR_MRU_MSG, 
    CSS_1X_SAVE_LAST_SYS_IN_MRU_MSG, 
    CSS_1X_SAVE_CHANNEL_MSG, 
    CSS_1X_MPSS_TIMEOUT_MSG, 
    CSS_DO_SELECT_REQ_MSG, 17
    CSS_DO_VALIDATE_REQ_MSG, 
    CSS_DO_REDIRECT_REQ_MSG, 
    CSS_DO_OOSA_WAKEUP_IND_MSG, 
    CSS_DO_CONN_START_IND_MSG, 
    CSS_DO_CONN_RELEASE_IND_MSG, 
    CSS_DO_ACQ_ABORT_RSP_MSG, 
    CSS_DO1X_HANDOFF_IND_MSG, 
    CSS_DO_MPSS_TIMEOUT_MSG, 
    CSS_DO_REDIRECT_CHANNEL_LIST_MSG, 
    CSS_DO_NTWK_ACQD_MSG, 
    CSS_DO_CHAN_CHANGED_IND_MSG, 
    CSS_DO_SESSION_OPENED_MSG, 
    CSS_DO_SESSION_CLOSED_MSG, 
    CSS_DO_CLEAR_MRU_MSG, 
    CSS_DO_REPORT_CP_EVENT_MSG, 
    CSS_CP_POWER_CTRL_MSG, 
    CSS_HYBRID_MODE_SET_MSG, 
    CSS_PERIODICAL_SEARCH_CYCLE_SET_MSG, 
    CSS_DO_DEFAULT_BAND_SET_MSG, 
    CSS_DO_ACM_APERSIS_IND_MSG, 
    CSS_DO_AUTH_FAIL_IND, 
    CSS_UIM_GET_PRL_RSP_MSG, 39
    CSS_UIM_STATUS_NOTIFY_MSG, 
    CSS_UIM_GET_NAM_DATA_MSG, 
    CSS_SVC_STATUS_REQ_MSG, 42
    CSS_FORCE_DOSCAN_REQ_MSG, 
    CSS_OOSA_SET_PARMS_MSG, 
    CSS_OOSA_GET_PARMS_MSG, 
    CSS_OOSA_SET_ENABLE_MSG, 
    CSS_OOSA_GET_ENABLE_MSG, 
    CSS_OOSA_SET_NUM_PHASES_MSG, 
    CSS_OOSA_GET_NUM_PHASES_MSG, 
    CSS_OOSA_SET_CURRENT_STAGE_MSG, 
    CSS_OOSA_GET_CURRENT_STAGE_MSG, 
    CSS_TEST_CFG_MSG, 52
    CSS_CLEAR_MRU_MSG, 
    CSS_GET_PRL_ID_MSG, 
    CSS_GET_ERI_VERSION_MSG, 
    CSS_DBM_GET_NAM_RSP_MSG, 56
    CSS_DBM_GET_PRL_RSP_MSG, 
    CSS_PRL_UPDATED_MSG, 
    CSS_DBM_MRU_WRITE_ACK_MSG, 
    CSS_DBM_MRU_GET_RSP_MSG, 
    CSS_DBM_DO_MRU_WRITE_ACK_MSG, 
    CSS_DBM_DO_MRU_GET_RSP_MSG, 
    CSS_DBM_DATA_ERI_TABLE_MSG, 
    CSS_DBM_GET_MSCAPDB_RSP_MSG, 
    CSS_TEST_MANUAL_BAND_CHNL_MSG, 65
    CSS_MARK_CURRENT_SYSTEM_AS_NEGATIVE_MSG, 
    CSS_1X_REDIR_IND_MSG, 
    CSS_1X_OVERHEAD_CURRENT_MSG, 
    CSS_TIMER_EXPIRED_MSG, 
    CSS_UPDATE_SYS_SELECT_RSP_MSG, 
    IRAT_L1D_TX_PWR_RSP, 
    CSS_GET_MCC_MSG, 
    CSS_DO_ACCESS_STATUS_IND, 
    CSS_DO_ERR_IND, 
    CSS_DATA_TCH_SETUP_STATUS_MSG, 
    CSS_PSW_1X_REG_STATUS_IND, 
    CSS_PSW_1X_DO_OVERLAP_IND, 
    CSS_HLP_SESS_VERIF_FAIL_IND, 
    CSS_1X_UPDATE_LAST_SAVED_ECIO_RXPWR_MSG, 
    CSS_DBM_GET_1X_DATA_RSP_MSG, 
    CSS_DBM_1X_DATA_WRITE_ACK_MSG, 
    CSS_DBM_GET_DO_DATA_RSP_MSG, 
    CSS_DBM_DO_DATA_WRITE_ACK_MSG, 
    CSS_DBM_GET_MISC_DATA_RSP_MSG, 
    CSS_DBM_MISC_DATA_WRITE_ACK_MSG, 
    CSS_DBM_INIT_NVRAM_TO_DEFAULT_MSG, 
    CSS_SRLTE_SIB8_MSG, 
    CSS_CDMA_INACTIVE_IND, 
    CSS_DO_ACCESS_LEAVE_IND_MSG, 
    CSS_OOSA_SCANNING_TIMER_SET_MSG, 95
    CSS_OOSA_SCANNING_TIMER_GET_MSG, 
    CSS_DO_CONN_OPENED_MSG, 
    CSS_IRAT_MSG, 100
    CSS_HLP_NETWORK_CONN_RSP, 
    CSS_HLP_EPS_ACTIVATE_RSP, 
    CSS_HLP_NETWORK_REL_RSP, 
    CSS_HLP_NETWK_REL_IND, 
    CSS_HLP_EPS_BEARER_SETUP_RSP, 
    CSS_HLP_EPS_BEARER_DISCONN_RSP, 
    CSS_HLP_EPS_BEARER_DISCONN_IND, 
    CSS_HLP_EPS_BEARER_SETUP_IND, 
    CSS_HLP_EPS_DEFAULT_BEARER_DISCONN_IND, 
    CSS_HLP_PPP_OPEN_REQ_RCVD_IND, 
    CSS_HLP_PS_STATE_IND, 
    IRAT_IDP_HANDOFF_RSP, 
    IRAT_RUP_MEAS_REPORT, 
    IRAT_RUP_CUR_SYS_MEAS_RSP, 
    IRAT_RUP_CUR_SYS_WEAK_IND, 
    CSS_VAL_PPP_CONN_STATUS_IND, 
    CSS_VAL_DATA_STATE_IND, 
    IRAT_OMP_RAT_UPDATED_IND, 
    IRAT_OMP_RAT_INFO_IND, 
    IRAT_OMP_MCC_RSP, 
    IRAT_RCP_TX_PWR_RSP, 
    IRAT_PSW_RAT_INFO_IND, 
    IRAT_PSW_MCC_RSP, 
    IRAT_PSW_CUR_SYS_WEAK_IND, 
    IRAT_PSW_CUR_SYS_MEAS_RSP, 
    IRAT_IDP_DO_IDLE_LONG_SLEEP_RSP, 
    IRAT_IDP_DO_IDLE_LONG_SLEEP_WAKEUP_RSP, 
    IRAT_DO_IDLE_SLEEP_IND, 
    IRAT_RMC_DOMEAS_ABORT_IND, 
    IRAT_RMC_MEAS_REPORT_MSG, 
    IRAT_HWD_DO_EARLY_WAKE_RSP, 
    IRAT_RMC_DO_INACTIVATE_RSP, 
    IRAT_OMP_CELLID_IND, 
    IRAT_PSW_CELLID_IND, 
    CSS_RFC_DO_RF_RSP, 
    CSS_RFC_LTE_RF_REQ, 
    CSS_RFC_LTE_RELEASE_RF_IND, 
    CSS_RFC_LTE_BAND_REQ, 
    RFC_IRAT_RELEASE_RF_IND, 
    CSS_RFC_LTE_RF_REQ_DEBUG_MSG, 
    RFC_IRAT_RELEASE_RF_IND_DEBUG_MSG, 
    RFC_IRAT_REQUEST_BAND_REQ_DEBUG_MSG, 
    RFC_IRAT_REQUEST_RF_REQ_DEBUG_MSG, 
    CSS_RFC_LTE_RELEASE_RF_IND_DEBUG_MSG, 
    CSS_RFC_DO_RF_RSP_DEBUG_MSG, 
    CSS_IRATRFC_SERVICE_CNF, 0xA0,
    CSS_IRATRFC_SERVICE_REJ, 
    CSS_IRATRFC_BAND_SEARCH_ALLOWED_IND, 
    CSS_IRATRFC_CXRR_SUSPEND_IND, 
    CSS_IRATRFC_CXRR_RESUME_IND, 
    IDP_CSS_SUSPEND_IND, 
    IDP_CSS_RESUME_IND, 
    IDP_CSS_ARB_REJECT_IND, 
    CDRR_CSS_SEARCH_CNF, 0xB0,
    CDRR_CSS_SEARCH_REJ, 
    CSS_SEARCH_SUSPEND_REQ, 
    CSS_SEARCH_RESUME_IND, 
    CDRR_CSS_PSREG_CNF, 
    CDRR_CLASSMARK_IND, 
    CSS_CDRR_PS_FREQ_REG_REQ, 
    CSS_CDRR_DO_NO_SERVICE_REQ, 
    CSS_CDRR_INSTANCE_REQ, 
    CSS_CDRR_SIB8_INFO_IND, 
    CDRR_CSS_PSREG_REJ, 
    CAS_ERRC_INACTIVE_CNF, 
    CSS_PKT_DO_NO_SERVICE_REQ, 0xC0,
    CSS_PKT_DEACTIVATE_CNF, 
    CSS_PSW_READ_COMPLETE_MSG, 
    CSS_HLP_READ_COMPLETE_MSG, 
    CSS_UICC_READ_CMPLT_MSG, 
    CSS_HLP_POWERDOWN_DONE_MSG, 
    MMG_CSS_STANDALONE_OPS_IND, 
    IRAT_ALMP_REDIRECT_REQ_MSG, 
    IRAT_ALMP_MEAS_REQ_MSG, 
    CSS_UIM_GET_MLPL_RSP_MSG, 
    CSS_UIM_GET_MSPL_RSP_MSG, 
    CSS_UIM_GET_PRL_HEADER_RSP_MSG, 
    CSS_UIM_GET_PRL_CRC_RSP_MSG, 
    CSS_SIM_CAMPING_READ_COMPLETE_IND, 
    CSS_SIM_REGING_READ_COMPLETE_IND, 
    CSS_SIM_OTHERS_READ_COMPLETE_IND, 
    CSS_UICC_READ_COMPLETE_MSG, 
    CSS_PSW_NAM_UPDATED_MSG, 
    CSS_UIM_DEREGISTER_CNF_MSG, 
    MMG_CSS_SEARCH_REQ_1X, 0xF0,
    MMG_CSS_SEARCH_REQ_DO, 
    MMG_CSS_SEARCH_REQ_1X_DO, 
    MMG_CSS_FMD_REQ, 
    MMG_CSS_REG_REQ_1X, 
    MMG_CSS_REG_REQ_DO, 
    MMG_CSS_DEREG_REQ_CS, 
    MMG_CSS_DEREG_REQ_PS, 
    MMG_CSS_DEREG_REQ_CS_PS, 
    CSS_MMG_MXPL_READ_CNF, 
    MMG_CSS_READ_SIM_START_IND, 
    CXRR_CLASSMARK_REQ, 
    OM_CONTROL_REQ_MODE_ON, 
    OM_CONTROL_REQ_MODE_OFF, 
    OM_CONTROL_REQ_REG_CNF, 
    MMG_CSS_SUSPEND_REQ, 
    MMG_CSS_RESUME_REQ, 
    CSS_SYSTEM_WAKEUP_IND, 
    CSS_OMADM_PRL_UPDATE_IND, 
    OM_CDMA_DEREGISTER_REQ_MSG, 
    CSS_PSW_UIM_NAM_IND, 
End

Begin Enum, Css1xEventType
    CSS_EV_DISCONNECT, 1
    CSS_EV_PAGE_RECEIVED, 
    CSS_EV_STOPALERT, 
    CSS_EV_ABBR_ALERT, 
    CSS_EV_NOSVC, 
    CSS_EV_CDMA_INSVC, 
    CSS_EV_CPENABLED, 
    CSS_EV_CPDISABLED, 
    CSS_EV_PDOWNACK, 
    CSS_EV_CONNANALOG, 
    CSS_EV_CONNDIGITAL, 
    CSS_EV_ASSIGNED, 
    CSS_EV_ORIG_FAIL, 
    CSS_EV_NDSS_ORIG_CANCEL, 
    CSS_EV_INTERCEPT, 
    CSS_EV_REORDER, 
    CSS_EV_CC_RELEASE, 
    CSS_EV_CC_RELEASE_SO_REJ, 
    CSS_EV_DIALING_COMPLETE, 
    CSS_EV_DILAING_CONTINUE, 
    CSS_EV_MAINTENANCE, 
    CSS_EV_VP_ON, 
    CSS_EV_VP_OFF, 
    CSS_EV_PSIST_FAIL, 
    CSS_EV_TC_RELEASE_MS, 
    CSS_EV_TC_RELEASE_PDOWN, 
    CSS_EV_TC_RELEASE_DISABLE, 
    CSS_EV_TC_RELEASE_BS, 
    CSS_EV_TC_RELEASE_SO_REJECT, 
    CSS_EV_TC_RELEASE_TIMEOUT, 
    CSS_EV_TC_RELEASE_ACK_FAIL, 
    CSS_EV_TC_RELEASE_FADE, 
    CSS_EV_TC_RELEASE_LOCK, 
    CSS_EV_PAGE_FAIL, 
    CSS_EV_RETRY_TIMER_ACTIVE, 
    CSS_EV_RETRY_TIMER_INACTIVE, 
    CSS_EV_AMPS_INSVC, 
    CSS_EV_ORIG_REJECTED, 
    CSS_EV_ORIG_REJECTED_SO_NOT_SUPPORTED, 
    CSS_EV_ORIG_BLOCKED_BY_IRAT, 
    CSS_EV_CSFB_OOSA, 
    CSS_EV_PKT_ACTIVE, 50
    CSS_EV_PKT_RELEASED, 
    CSS_EV_PKT_DORMANT, 
    CSS_EV_ORIG_USER_CANCEL, 60
    CSS_EV_ORIG_ACCESS_FAIL, 
    CSS_EV_ORIG_NO_SVC_FAIL, 
    CSS_EV_ORIG_RETRY_ORDER, 
    CSS_EV_SR_ENABLED, 
    CSS_EV_SR_DISABLED, 
    CSS_EV_ORIG_REQ_RECEIVED, 
    CSS_EV_PSW_POWER_UP, 
    CSS_EV_PSW_POWER_DOWN, 
    CSS_EV_PSW_SRLTE_LTEONLY_POWER_UP, 
    CSS_EV_PSW_SRLTE_LTEONLY_POWER_DOWN, 
    CSS_EV_CP_SRLTE_LTEONLY_ENABLED, 
    CSS_EV_FLASHFAIL, 80
    CSS_EV_ANALOG_PAGE_RECEIVED, 
    CSS_EV_AMPS_IDLE, 
    CSS_EV_ABBR_INTERCEPT, 
    CSS_EV_ABBR_REORDER, 
    CSS_EV_CONNCOMPLETE, 
    CSS_EV_ENTER_OOSA, 
    CSS_EV_FNM_RELEASE, 
    CSS_EV_MSID_UPDATED, 
    CSS_EV_BUSY_ORIG_FAIL, 
    CSS_EV_LOCKED_ORIG_FAIL, 
    CSS_EV_REG_MAX_PROBE, 
    CSS_EV_DOCONN_1XPREEMPT, 
    CSS_EV_ORIG_ACCT, 
    CSS_EV_REG_SYS_LOST, 
    CSS_EV_SMS_CANCEL_BY_PWRDOWN, 
    CSS_EV_ANTENNA_REJECT, 
    CSS_RPT_CP_EVENT_INVALID, 
End

Begin Enum, CssOOSAEvent
    1X OOSA Sleep Request, 0,
    1X OOSA Scan Time Set, 
    1X OOSA Scan TIme Expire, 
    1X OOSA Wakeup Ind, 
    1X OOSA Enter New Cycle, 
    1X OOSA Not Allowed Found Non PRL, 
    1X OOSA Not Allowed Found LPS, 
    1X OOSA Not Allowed by SVSM State, 
    1X OOSA Counters Reset, 
    1X OOSA Enter Stage, 
End

Begin Enum, CssScanningStage
    Power-Up, 0,
    System-Lost, 
End

Begin Enum, SubnetMatch
    Restrictive Subnet match, 0,
    Wildcard Subnet match, 
    Non-Match, 
End

Begin Enum, CssDoAvoidanceType
    VZW ACM Persistence Test Fail Avoidance, 
    Consecutive Lost Avoidance, 
    Redirection Avoidance, 
    ACM Persistence Test Fail Avoidance, 
    Max Access Fail Avoidance, 
    Session Nego Timeout Avoidance, 
    Session Nego Fail Avoidance, 
    Connection Deny Auth Avoidance, 
    Connection Deny General Avoidance, 
    NoTCA Avoidance, 
End

Begin Enum, SvsmDoStates
    PRL MRU Scan, 0,
    Dflt Pref Chan Scan, 
    Acqd None Sys Table Scan, 
    Acqd PRL Sys Table Scan, 
    Silent Retry Scan, 
    Last Reged Sys Scan, 
    GEO Scan, 
    More Pref Sys Scan, 
    Available Sys Scan, 
    Emergency Scan, 
    Associated DO Scan, 
    OTASP Scan, 
    Redirect Scan, 
    ReAcquire Scan, 
    Asso System Lost Scan, 
    Asso More Prefer Scan, 
    PRL MRU Lost Scan, 
    GEO Lost Scan, 
    Pll Channel Test Mode State, 
    RAT Channel Scan, 
    Reset Scan, 
End

Begin Enum, CssValidateRslt
    Denied, 0,
    Accepted, 
End

Begin Enum, CssDoSessionStatus
    Session_Closed, 0,
    Session_Setup, 
    Session_Opened, 
End

Begin Enum, CssAction
    Get, 0,
    Set, 
End

Begin Enum, CssQueryRspPendedStatus
    No-Pended, 0,
    Pended, 
End

Begin Enum, CssDbmTraceT
    CSS_DBM_READ, 
    CSS_DBM_READ_RSP, 
    CSS_DBM_WRITE, 
    CSS_DBM_WRITE_RSP, 
    CSS_DBM_PARM_SET, 
    CSS_DBM_PARM_GET, 
End

Begin Enum, CssMsgT
    CDRR_CSS_SEARCH_REQ, 0
    CDRR_CSS_SEARCH_DONE_IND, 
    CSS_SEARCH_SUSPEND_CNF, 
    CDRR_CSS_PSREG_REQ, 
    CSS_CDRR_PS_REG_FREQ_RSP, 
    CSS_CDRR_DO_NO_SERVICE_CNF, 
    CDRR_CSS_DO_STATE_IND, 
    CDRR_CSS_PS_REG_FREQ_RSP, 
    CDRR_CSS_PSREG_DONE_IND, 
    CSS_IRATRFC_SERVICE_REQ, 10
    IRATRFC_CSS_SERVICE_RELEASE_IND, 
    MMG_CSS_SEARCH_CNF, 15
    MMG_CSS_REG_CNF, 
    MMG_CSS_DEREG_CNF, 
    MMG_CSS_FMD_CNF, 
    MMG_CSS_ACT_FAIL_IND, 
    CSS_MMG_CONN_STATUS_IND, 21
    PSW_CSS_SELECT_RSP_MSG, 25
    PSW_CSS_SYS_ACQ_REQ_MSG, 
    INSP_CSS_FREQ_RSP_MSG, 
    ALMP_CSS_SYS_ACQ_REQ_MSG, 
    SMP_CSS_ACTIVATE_MSG, 
    INSP_CSS_OOSA_SLEEP_REQ_MSG, 
    PSW_CSS_OOSA_SLEEP_REQ_MSG, 
    PSW_CMD_STATUS_MSG, 
    IDP_IRAT_HANDOFF_REQ, 
    ALMP_CSS_OOSA_WAKEUP_REQ_MSG, 
End

Begin Enum, CssIratFunctionId
    IRATProcessMmgSearchReq(), ,RO
    IRATProcessMmgDeregReq(), ,RO
    IRATProcessMmgRegReq(), ,RO
    IRATProcessMmgFmdReq(), ,RO
    IRATCheck1XSelection(), ,RO
    IRATCheckDOSelection(), ,RO
    IRAT1XCpStateInd(), ,RO
    IRATDOCpStateInd(), ,RO
    IRATDoLocalInactReq(), ,RO
    IRATDeregRsp(), ,RO
    IRATProcessCdmaInactiveInd(), ,RO
    IRAT_1XInit(), ,RO
    IRAT_DOInit(), ,RO
    IRATProcessMmgApacsReq(), ,RO
    IRATProcessSavedRawApacsData(), ,RO
End

Begin Enum, CssRatIDT
    RAT_NOT_AVAILABLE, 0
    RAT_GSM, 
    RAT_UMTS, 
    RAT_LTE, 
    RAT_TD_SCDMA, 
    RAT_1XRTT, 
    RAT_EVDO, 
    RAT_CDMA2000AI, 
End

Begin Enum, CssPSSITypeT
    E_AS_SEARCH_TYPE_NONE, 0,
    E_AS_SEARCH_TYPE_SLS, 
    E_AS_SEARCH_TYPE_DBS, 
    E_AS_SEARCH_TYPE_RBS, 
    E_AS_SEARCH_TYPE_SBS, 
    E_AS_SEARCH_TYPE_FBS, 
    E_AS_SEARCH_TYPE_SLS_DBS, 
    E_AS_SEARCH_TYPE_ACQEDSYS, 
    E_AS_SEARCH_TYPE_FMD, 
End

Begin Enum, MMGDeregCauseT
    AT_POWER_DOWN, 0,
    SIM_DETACH, 
    NOT_ALLOWED, 
    ABORT_BY_USER, 
    NOT_POSSIBLE, 
    DISABLE_SERVICE, 
    DETACH_SERVICE, 
    ATTACH_SERVICE, 
    ENABLE_SERVICE, 
    USER_RESELECTION, 
    AIRPLANE_MODE, 
    DEACTIVATE_STACK, 
    FAST_DETACH, 
    DUAL_SIM_CONFLICT, 
    ATTACH_PS_SERVICE, 
    DATA_STALL, 
    FAST_STACK_RESET, 
    RAT_CHANGE, 
    SIM_REFRESH, 
    COLD_STATE, 
    MMP_LOCAL_DETACH_AT_IRAT, 
    NO_USER_CAUSE, 
    PKT_NO_SERVICE, 
    SEARCH_INACT, 
    CDRR_NO_SERVICE, 
    CSS_NO_SERVICE, 
    OM_POWER_DOWN, 
    OM_AIRPLANE_MODE, 
End

Begin Enum, IratPri
    PLMN_TYPE_NONE, 0,
    PLMN_TYPE_HOME, 
    PLMN_TYPE_PREF, 
    PLMN_TYPE_ANY, 
    PLMN_TYPE_ALL, 
End

Begin Enum, CssRequestTypeT
    LIMITED_SERVICE_CAMP, 
    EMERGENCY_CAMP, 
    CAMP_AND_REGISTER, 
End

Begin Enum, IratST
    IRAT_POWERUP, 0
    IRAT_INACTIVE, 
    IRAT_INIT, 
    IRAT_SCANNING, 
    IRAT_SYSTEMLOST, 
    IRAT_IDLE, 
    IRAT_CONNECTION, 
    IRAT_EXHAUST, 
End

Begin Enum, DomainTypeT
    MMG_CS_DOMAIN, 1,
    MMG_PS_DOMAIN, 
    MMG_CS_PS_DOMAIN, 
    MMG_NO_DOMAIN, 
End

Begin Enum, Irat1XAction
    IRAT_1X_NO_ACTION, 0
    IRAT_1X_ACQUIRING, 
    IRAT_CDMA_1X_ACQUIRING, 
    IRAT_1X_MCC_SEARCH, 
    IRAT_1X_REGING, 
    IRAT_CDMA_1X_REGING, 
    IRAT_1X_DISABLING, 
    IRAT_CDMA_1X_DISABLING, 
End

Begin Enum, IratDOAction
    IRAT_DO_NO_ACTION, 0
    IRAT_DO_ACQUIRING, 
    IRAT_CDMA_DO_ACQUIRING, 
    IRAT_DO_REGING, 
    IRAT_CDMA_DO_REGING, 
    IRAT_DO_DISABLING, 
    IRAT_CDMA_DO_DISABLING, 
    IRAT_L2C_RESELECT, 
    IRAT_L2C_REDIRECT, 
End

Begin Enum, InitTypeT
    INIT_POWER, 0
    INIT_DEREG, 
    INIT_LOCAL, 
    INIT_REG, 
End

Begin Enum, PowerUpState
    CSSPWR_NULL_ST, 0
    CSSPWR_WAIT_DBM_ONLY_ST, 
    CSSPWR_WAIT_POWER_IND_ST, 
    CSSPWR_WAIT_MMG_CMD_ST, 
    CSSPWR_MMG_CMD_RECEIVED_ST, 
    CSSPWR_DONE_ST, 
    CSSPWR_STATE_MAX, 
End

Begin Enum, UiccReadState
    UICC_NULL_ST, 0
    UICC_WAIT_CSS_UICC_ONLY_ST, 
    UICC_WAIT_PSW_UICC_REG_ST, 
    UICC_WAIT_PSW_UICC_OTHER_ST, 
    UICC_WAIT_PSW_UICC_DONE_ST, 
    UICC_WAIT_HLP_UICC_ONLY_ST, 
    UICC_DONE_ST, 
End

Begin Enum, PowerUpProcess
    csspwrPowerUpInitDbm, 1
    csspwrPowerUpSendPwrMsg, 
    csspwrPowerUpWaitMmgCmd, 
    csspwrPowerUpInitUicc, 
    csspwrPowerUpHlpUicc, 
    csspwrPowerUpDone, 
    csspwrStartReadUICC, 
End

Begin Enum, CssIOMsg
    FromMMG, 0
    ToMMG, 
    FromIratRfc, 
    ToIratRfc, 
    FromCdrr, 
    ToCdrr, 
    FromPkt, 
    ToPkt, 
End

Begin Enum, IratMODE
    IRAT_NO_MODE, 0
    IRAT_1X_ONLY, 0x01
    IRAT_DO_ONLY, 0x02
    IRAT_HYBIRD, 0x03
    IRAT_DO_ONLY_EHRPD, 0x06
    IRAT_HYBIRD_EHRPD, 0x07
    IRAT_GLOBAL_1X, 0x11
    IRAT_GLOBAL_DO, 0x12
    IRAT_GLOBAL_HRYRID, 0x13
    IRAT_GLOBAL_DO_EHRPD, 0x16
    IRAT_GLOBAL_HYBIRD_EHRPD, 0x17
End

Begin Enum, MMC MBox Msg
    MMC_GMSS_AP_MODE_SELECT_REQ, 0
    MMC_GMSS_AP_MODE_QUERY_REQ, 
    MMC_GMSS_AP_POWER_UP_REQ, 
    MMC_GMSS_AP_POWER_DOWN_REQ, 
    MMC_GMSS_AP_SERVICE_STATUS_REQ, 
    MMC_GMSS_AP_CS_CALL_REQ, 
    MMC_GMSS_AP_EMERGENCY_MODE_EXIT_CMD, 
    MMC_GMSS_UICC_CARD_STATUS_IND, 
    MMC_GMSS_UICC_GET_MLPL_RSP, 
    MMC_GMSS_UICC_GET_MSPL_RSP, 
    MMC_GMSS_PS_BSR_TIMER_EXPIRED, 
    MMC_GMSS_CS_BSR_TIMER_EXPIRED, 
    MMC_GMSS_OOS_SCAN_TIMER_EXPIRED, 
    MMC_GMSS_OOS_SLEEP_TIMER_EXPIRED, 
    MMC_GMSS_RAT_RSP_TIMER_EXPIRED, 
    MMC_GMSS_PSREG_MOST_PREF_RAT_TIMER_EXPIRED, 
    MMC_GMSS_RAT_POWER_STATUS_RSP, 
    MMC_GMSS_RAT_ACQ_RSP, 
    MMC_GMSS_RAT_PS_REG_RSP, 
    MMC_GMSS_RAT_MCC_SRCH_RSP, 
    MMC_GMSS_RAT_ONLY_MODE_RSP, 
    MMC_GMSS_RAT_NO_SERVICE_RSP, 
    MMC_GMSS_RAT_NWK_STATUS_IND, 
    MMC_GMSS_RAT_CELLGLOBALID_REQ, 
    MMC_GMSS_PKT_PS_STATE_CNF_MSG, 
    MMC_GMSS_PKT_PS_RSP_MSG, 
    MMC_GMSS_PKT_CONN_STATUS_IND_MSG, 
    MMC_GMSS_MEAS_MEAS_START_IND, 
    MMC_GMSS_MEAS_MEAS_END_IND, 
    MMC_GMSS_MEAS_BSR_START_CNF, 
    MMC_GMSS_MEAS_BSR_END_CNF, 
    MMC_GMSS_MEAS_SERVING_PS_WEAK_IND, 
    MMC_GMSS_PKT_CDMA_DATA_STATE_IND, 
    MMC_GMSS_PKT_RAT_DISABLING_IND, 
    MMC_GMSS_LAST_MSG, 
    MMC_PKT_GMSS_PS_STATE_IND_MSG, 0x1000,
    MMC_PKT_GMSS_PS_REQ_MSG, 
    MMC_PKT_GMSS_PS_STATUS_IND_MSG, 
    MMC_PKT_MEAS_PS_STATE_IND_MSG, 
    MMC_PKT_MEAS_PS_REQ_MSG, 
    MMC_PKT_AP_CALL_SETUP_REQ_MSG, 
    MMC_PKT_AP_DEDICATED_BEARER_SETUP_REQ_MSG, 
    MMC_PKT_AP_DISCONNECT_REQ_MSG, 
    MMC_PKT_AP_DETACH_REQ_MSG, 
    MMC_PKT_AP_SET_PDN_TABLE_REQ_MSG, 
    MMC_PKT_AP_APN_ENABLE_REQ_MSG, 
    MMC_PKT_AP_PDN_UPDATE_CMD_MSG, 
    MMC_PKT_AP_SET_QOS_TABLE_MSG, 
    MMC_PKT_AP_GET_QOS_TABLE_MSG, 
    MMC_PKT_RAT_DATA_CMD_RSP, 
    MMC_PKT_RAT_DEFAULT_BEARER_RSP, 
    MMC_PKT_RAT_DEDICATED_BEARER_IND, 
    MMC_PKT_RAT_DEDICATED_BEARER_RSP, 
    MMC_PKT_RAT_BEARER_DISCONNECT_RSP, 
    MMC_PKT_RAT_BEARER_DISCONNECT_IND, 
    MMC_PKT_RAT_BEARER_DETACH_RSP, 
    MMC_PKT_RAT_PDN_TABLE_SETUP_RSP, 
    MMC_PKT_CDMA_DATA_CMD_RSP, 
    MMC_PKT_CDMA_DEFAULT_BEARER_RSP, 
    MMC_PKT_CDMA_DEDICATED_BEARER_IND, 
    MMC_PKT_CDMA_DEDICATED_BEARER_RSP, 
    MMC_PKT_CDMA_BEARER_DISCONNECT_RSP, 
    MMC_PKT_CDMA_BEARER_DISCONNECT_IND, 
    MMC_PKT_CDMA_BEARER_DETACH_RSP, 
    MMC_PKT_CDMA_HRPD1X_CONNECTION_RSP, 
    MMC_PKT_CDMA_SET_SIP_NAI_PSWD_RSP, 
    MMC_PKT_CONNECT_BKOFF_TMR_EXP, 
    MMC_PKT_CONNECT_WFR_RSP_TMR_EXP, 
    MMC_PKT_CDMA_DATA_CMD_RSP_TMR_EXP, 
    MMC_PKT_LTE_DATA_CMD_RSP_TMR_EXP, 
    MMC_PKT_AP_MBIM_GET_PDN_STATUS_REQ_MSG, 
    MMC_PKT_AP_SET_PDN_PCO_AUTH_MSG, 
    MMC_AP_MBIM_READY_STATUS_QUERY_MSG, 0X1280,
    MMC_AP_MBIM_REGISTER_STATE_SET_REQ_MSG, 
    MMC_AP_MBIM_REGISTER_STATE_QUERY_MSG, 
    MMC_AP_MBIM_VISIBLE_PROVIDER_QUERY_MSG, 
    MMC_AP_MBIM_SIGNAL_STATE_SET_REQ_MSG, 
    MMC_AP_MBIM_SIGNAL_STATE_QUERY_MSG, 
    MMC_AP_MBIM_RADIO_STATE_SET_REQ_MSG, 
    MMC_AP_MBIM_RADIO_STATE_QUERY_MSG, 
    MMC_AP_MBIM_PACKET_SERVICE_QUERY_MSG, 
    MMC_AP_MBIM_SERVICE_ACTIVATION_SET_REQ_MSG, 
    MMC_AP_MBIM_INIT_REQ_MSG, 
    MMC_AP_MBIM_CONNECT_STATE_REQ_MSG, 
    MMC_AP_MBIM_CONNECT_REQ_MSG, 
    MMC_AP_MBIM_IP_PACKET_FILTERS_REQ_MSG, 
    MMC_AP_MBIM_IP_PACKET_FILTERS_QUERY_MSG, 
    MMC_AP_MBIM_NETWORK_IDLE_HINT_REQ_MSG, 
    MMC_AP_MBIM_NETWORK_IDLE_HINT_QUERY_MSG, 
    MMC_MEAS_RAT_IRAT_MEAS_CMD, 0x2000,
    MMC_MEAS_RAT_IRAT_SYSTEM_CHANGE_REQ, 
    MMC_MEAS_RAT_IRAT_SIB8_MEAS_CMD, 
    MMC_MEAS_RAT_IRAT_LTEMEAS_IND, 
    MMC_MEAS_RAT_IRAT_RESEL_MEAS_IND, 
    MMC_MEAS_RAT_IRAT_STOP_MEAS_CMD, 
    MMC_MEAS_RAT_IRAT_LTE_CELL_INFO_PS_REG_RSP, 
    MMC_MEAS_CDMA_IRAT_SERVING_MEAS_RSP, 
    MMC_MEAS_CDMA_IRAT_MEASURE_RESULT_IND, 
    MMC_MEAS_CDMA_IRAT_MEASURE_SIB8_RESULT_IND, 
    MMC_MEAS_CDMA_IRAT_LTE_MEASURE_INFO_IND, 
    MMC_MEAS_CDMA_IRAT_PS_REG_CELLIDS_RSP, 
    MMC_MEAS_CDMA_IRAT_PS_REG_FREQ_RSP, 
    MMC_MEAS_GMSS_MEAS_START_CNF, 
    MMC_MEAS_GMSS_MEAS_END_CNF, 
    MMC_MEAS_GMSS_BSR_START_IND, 
    MMC_MEAS_GMSS_BSR_END_IND, 
    MMC_MEAS_GMSS_SERVING_PS_WEAK_CNF, 
    MMC_MEAS_GMSS_PS_STATUS_IND, 
    MMC_MEAS_GMSS_MEAS_ABORT_REQ, 
    MMC_MEAS_PKT_PS_RSP_MSG, 
    MMC_MEAS_PKT_PS_STATE_CNF_MSG, 
    MMC_MEAS_PKT_CDMA_DATA_STATE_IND, 
    MMC_MEAS_LTE_RESEL_TIMER_EXP, 
    MMC_MEAS_LTE_MEAS_TIMER_EXP, 
    MMC_MEAS_GLOBAL_TIMER_EXP, 
    MMC_MEAS_SIB8_TIMER_EXP, 
    MMC_MEAS_SIB8_HRPD_TIMER_EXP, 
    MMC_MEAS_RAT_IRAT_RESELMEAS_CMD, 
    MMC_MEAS_IRAT_HANDOVER_REQ, 
    MMC_MEAS_RAT_HANDOVER_PS_REG_RSP, 
    MMC_MEAS_IRAT_SET_IDLEMODEMOBILITYINFO, 
    MMC_MEAS_WAIT_RESEL_IND_TIMER_EXP, 
    MMC_MEAS_RAT_IRAT_SYSTEM_CHANGE_ABORT_CMD, 
    MMC_MEAS_MAX_NUM_EVENTS, 
    MMC_TIMER_EXPIRED_MSG, 0x3000,
    MMC_LTE_DATA_STATE_IND_MSG, 
    MMC_CDMA_DATA_STATE_IND_MSG, 
    MMC_AP_PKT_CALL_SETUP_RSP_MSG, 0x3A00,
    MMC_AP_PKT_CALL_RECONNECT_IND_MSG, 
    MMC_AP_PKT_DEDICATED_BEARER_SETUP_IND_MSG, 
    MMC_AP_PKT_DEDICATED_BEARER_SETUP_RSP_MSG, 
    MMC_AP_PKT_SET_PDN_TABLE_RSP_MSG, 
    MMC_AP_PKT_APN_ENABLE_RSP_MSG, 
    MMC_AP_PKT_PDN_UPDATE_RSP_MSG, 
    MMC_AP_PKT_SET_QOS_TABLE_RSP_MSG, 
    MMC_AP_PKT_GET_QOS_TABLE_RSP_MSG, 
    MMC_LTE_PKT_DATA_CMD_REQ, 
    MMC_LTE_PKT_DEFAULT_BEARER_REQ, 
    MMC_LTE_PKT_DEDICATED_BEARER_REQ, 
    MMC_LTE_PKT_BEARER_DISCONNECT_REQ, 
    MMC_LTE_PKT_BEARER_DETACH_REQ, 
    MMC_CDMA_PKT_DATA_CMD_REQ, 
    MMC_CDMA_PKT_DEFAULT_BEARER_REQ, 
    MMC_CDMA_PKT_DEDICATED_BEARER_REQ, 
    MMC_CDMA_PKT_BEARER_DISCONNECT_REQ, 
    MMC_CDMA_PKT_BEARER_DETACH_REQ, 
    MMC_CDMA_PKT_EHRPD_ONOFF_REQ, 
    MMC_SIM_DEFAULT_BEARER_ATTACH_REQ_MSG, 
    MMC_SIM_DEFAULT_BEARER_ATTACH_RSP_MSG, 
    MMC_SIM_HO_STATE_IND_MSG, 
    MMC_SIM_PS_REQ_MSG, 
    MMC_SIM_DATA_CMD_RESP_MSG, 
    MMC_SIM_DISCONNECT_REQ_MSG, 
    MMC_SIM_DETACH_REQ_MSG, 
    MMC_SIM_DISCONNECT_RSP_MSG, 
    MMC_MEAS_LTE_ETS_SIB8_MEAS_CMD, 
    MMC_MEAS_LTE_ETS_IRAT_MEAS_CMD, 
    MMC_MEAS_LTE_ETS_SYS_CHANGE_REQ, 
    MMC_MEAS_CDMA_ETS_LTE_MEAS_INFO_IND, 
    MMC_MEAS_LTE_ETS_MEAS_RESULT_IND, 
    MMC_MEAS_CDMA_ETS_SERV_MEAS_RSP, 
    MMC_ENGINE_RESET_MSG, 0x3FFF,
    MMC_RAT_POWER_STATUS_RSP_MSG, 0x4000,
    MMC_RAT_ACQ_RSP_MSG, 
    MMC_RAT_PS_REG_RSP_MSG, 
    MMC_RAT_NO_SERVICE_RSP_MSG, 
    MMC_RAT_MCC_SRCH_RSP_MSG, 
    MMC_RAT_ONLY_MODE_RSP_MSG, 
    MMC_RAT_NWK_STATUS_IND_MSG, 
    MMC_RAT_3GPP_MODE_RSP_MSG, 
    MMC_RAT_CELLGLOBALID_REQ_MSG, 
    MMC_CDMA_OTASP_RSP_MSG, 
    MMC_CDMA_IP_PACKET_STATISTICS_RSP_MSG, 
    MMC_RAT_MODE_RSP_MSG, 
    MMC_RAT_PKT_STATISTICS_REQ_MSG, 
    MMC_AP_MODE_SELECT_REQ_MSG, 
    MMC_AP_MODE_QUERY_REQ_MSG, 
    MMC_AP_POWER_UP_REQ_MSG, 
    MMC_AP_POWER_DOWN_REQ_MSG, 
    MMC_AP_SERVICE_STATUS_REQ_MSG, 
    MMC_AP_CS_CALL_INITIATE_REQ_MSG, 
    MMC_AP_EMERGENCY_MODE_EXIT_CMD_MSG, 
    MMC_AP_RAT_SIGNAL_STATE_REQ, 
    MMC_UICC_CARD_STATUS_IND_MSG, 
    MMC_UICC_GET_MLPL_RSP_MSG, 
    MMC_UICC_GET_MSPL_RSP_MSG, 
    MMC_GMSS_CLEAR_GMRU_CMD_MSG, 
    MMC_GET_DEBUG_STATUS_CMD_MSG, 
    MMC_GMSS_SET_PARM_MSG, 
    MMC_GMSS_GET_PARM_MSG, 
    MMC_ETS_RAT_API_TEST, 
    MMC_ETS_AP_API_TEST, 
    MMC_LTE_LOOPBACK_TEST, 
    MMC_GMSS_TEST_MODE_CMD_MSG, 
    MMC_GMSS_MBIM_CMD_MSG, 
    MMC_GMSS_RMC_SIG_STATE_RSP_MSG, 
    MMC_CDMA_TXPWR_RSP_MSG, 
    MMC_MSGID_LAST, 
End

Begin Enum, MMC MBIM Msg
    AP_MMC_MBIM_READY_STATUS_RSP, 0x200,
    AP_MMC_MBIM_READY_STATUS_NOTIF, 
    AP_MMC_MBIM_REGISTER_STATE_CNF, 
    AP_MMC_MBIM_REGISTER_STATE_RSP, 
    AP_MMC_MBIM_REGISTER_STATE_NOTIF, 
    AP_MMC_MBIM_VISIBLE_PROVIDER_RSP, 
    AP_MMC_MBIM_SIGNAL_STATE_CNF, 
    AP_MMC_MBIM_SIGNAL_STATE_RSP, 
    AP_MMC_MBIM_SIGNAL_STATE_NOTIF, 
    AP_MMC_MBIM_RADIO_STATE_CNF, 
    AP_MMC_MBIM_RADIO_STATE_RSP, 
    AP_MMC_MBIM_RADIO_STATE_NOTIF, 
    AP_MMC_MBIM_PACKET_SERVICE_RSP, 
    AP_MMC_MBIM_PACKET_SERVICE_NOTIF, 
    AP_MMC_MBIM_SERVICE_ACTIVATION_CNF, 
    AP_MMC_MBIM_INIT_RSP, 
    AP_MMC_MBIM_CONNECT_STATE_RSP, 
    AP_MMC_MBIM_CONNECT_STATE_IND, 
    AP_MMC_MBIM_CONNECT_RSP, 
    AP_MMC_MBIM_IP_PACKET_FILTERS_CNF, 
    AP_MMC_MBIM_IP_PACKET_FILTERS_RSP, 
    AP_MMC_MBIM_NETWORK_IDLE_HINT_CNF, 
    AP_MMC_MBIM_NETWORK_IDLE_HINT_RSP, 
    AP_MMC_MBIM_SET_DATA_PATH_IND, 
    MMC_AP_MBIM_READY_STATUS_QUERY, 0X280,
    MMC_AP_MBIM_REGISTER_STATE_SET_REQ, 
    MMC_AP_MBIM_REGISTER_STATE_QUERY, 
    MMC_AP_MBIM_VISIBLE_PROVIDER_QUERY, 
    MMC_AP_MBIM_SIGNAL_STATE_SET_REQ, 
    MMC_AP_MBIM_SIGNAL_STATE_QUERY, 
    MMC_AP_MBIM_RADIO_STATE_SET_REQ, 
    MMC_AP_MBIM_RADIO_STATE_QUERY, 
    MMC_AP_MBIM_PACKET_SERVICE_QUERY, 
    MMC_AP_MBIM_SERVICE_ACTIVATION_SET_REQ, 
    MMC_AP_MBIM_INIT_REQ, 
    MMC_AP_MBIM_CONNECT_STATE_REQ, 
    MMC_AP_MBIM_CONNECT_REQ, 
    MMC_AP_MBIM_IP_PACKET_FILTERS_REQ, 
    MMC_AP_MBIM_IP_PACKET_FILTERS_QUERY, 
    MMC_AP_MBIM_NETWORK_IDLE_HINT_REQ, 
    MMC_AP_MBIM_NETWORK_IDLE_HINT_QUERY, 
End

Begin Enum, MMC Timer Src Type
    LTE_DEFAULT_RSP_TM, 
    LTE_DISCONNECT_TM, 
    LTE_SUSPEND_TM, 
    LTE_DISABLE_TM, 
    LTE_RESUME_TM, 
    LTE_RELEASE_TM, 
    GMSS_PS_REQ_BKOFF_TM, 
    GMSS_STATE_CMPLT_BKOFF_TM, 
    MMC_MEAS_MCC_GLOBAL_TIMER, 
    MMC_MEAS_MCC_SIB8_TIMER, 
    MMC_MEAS_MCC_SIB8_HRPD_TIMER, 
    MMC_MEAS_MEAS_TIMER, 
    MMC_MEAS_RESEL_TIMER, 
    MMC_MEAS_WAIT_RESEL_IND_TIMER, 
    MMC_GMSS_PS_BSR_TIMER, 
    MMC_GMSS_CS_BSR_TIMER, 
    MMC_PKT_CONNECT_BKOFF_TIMER, 
    MMC_PKT_CONNECT_WFR_RSP_TIMER, 
    MMC_PKT_CDMA_DATA_COMMAND_RSP_TIMER, 
    MMC_PKT_LTE_DATA_COMMAND_RSP_TIMER, 
    MMC_GMSS_MBIM_SIGNAL_STATE_UPD_TIMER, 
    MMC_GMSS_MBIM_SIGNAL_STATE_RPT_TIMER, 
    MMC_MEAS_T320_1S_Timer, 
    MMC_GMSS_OOS_SCAN_TIMER, 
    MMC_GMSS_OOS_SLEEP_TIMER, 
    MMC_GMSS_RAT_RSP_TIMER, 
    MMC_GMSS_PSREG_MOST_PREF_RAT_TIMER, 
    MMC_MAX_CALL_SET_UP_TIMER, 
    MMC_MAX_CALL_DISCONNECT_TIMER, 
    MMC_MAX_HANDOVER_CYCLE_TIMER, 
    MMC_MAX_TM, 
End

Begin Enum, MMC Timer State Type
    Initial, 
    Started, 
    Stopped, 
    Expired, 
End

Begin Enum, MMC PKT Msg Id
    PKT_GMSS_PS_STATE_IND_MSG, 0x1000
    PKT_GMSS_PS_REQ_MSG, 
    PKT_GMSS_PS_STATUS_IND_MSG, 
    PKT_MEAS_PS_STATE_IND_MSG, 
    PKT_MEAS_PS_REQ_MSG, 
    PKT_AP_CALL_SETUP_REQ_MSG, 
    PKT_AP_DEDICATED_BEARER_SETUP_REQ_MSG, 
    PKT_AP_DISCONNECT_REQ_MSG, 
    PKT_AP_DETACH_REQ_MSG, 
    PKT_AP_SET_PDN_TABLE_REQ_MSG, 
    PKT_AP_APN_ENABLE_REQ_MSG, 
    PKT_AP_PDN_UPDATE_CMD_MSG, 
    PKT_AP_SET_QOS_TABLE_MSG, 
    PKT_AP_GET_QOS_TABLE_MSG, 
    PKT_RAT_DATA_CMD_RSP, 
    PKT_RAT_DEFAULT_BEARER_RSP, 
    PKT_RAT_DEDICATED_BEARER_IND, 
    PKT_RAT_DEDICATED_BEARER_RSP, 
    PKT_RAT_BEARER_DISCONNECT_RSP, 
    PKT_RAT_BEARER_DISCONNECT_IND, 
    PKT_RAT_BEARER_DETACH_RSP, 
    PKT_RAT_PDN_TABLE_SETUP_RSP, 
    PKT_CDMA_DATA_CMD_RSP, 
    PKT_CDMA_DEFAULT_BEARER_RSP, 
    PKT_CDMA_DEDICATED_BEARER_IND, 
    PKT_CDMA_DEDICATED_BEARER_RSP, 
    PKT_CDMA_BEARER_DISCONNECT_RSP, 
    PKT_CDMA_BEARER_DISCONNECT_IND, 
    PKT_CDMA_BEARER_DETACH_RSP, 
    PKT_CDMA_HRPD1X_CONNECTION_RSP, 
    PKT_CDMA_SET_SIP_NAI_PSWD_RSP, 
    PKT_CONNECT_BKOFF_TMR_EXP, 
    PKT_CONNECT_WFR_RSP_TMR_EXP, 
    PKT_CDMA_DATA_CMD_RSP_TMR_EXP, 
    PKT_LTE_DATA_CMD_RSP_TMR_EXP, 
    PKT_AP_MBIM_GET_PDN_STATUS_REQ_MSG, 
    PKT_AP_SET_PDN_PCO_AUTH_MSG, 
    MBIM_READY_STATUS_QUERY_MSG, 0X1280,
    MBIM_REGISTER_STATE_SET_REQ_MSG, 
    MBIM_REGISTER_STATE_QUERY_MSG, 
    MBIM_VISIBLE_PROVIDER_QUERY_MSG, 
    MBIM_SIGNAL_STATE_SET_REQ_MSG, 
    MBIM_SIGNAL_STATE_QUERY_MSG, 
    MBIM_RADIO_STATE_SET_REQ_MSG, 
    MBIM_RADIO_STATE_QUERY_MSG, 
    MBIM_PACKET_SERVICE_QUERY_MSG, 
    MBIM_SERVICE_ACTIVATION_SET_REQ_MSG, 
    MBIM_INIT_REQ_MSG, 
    MBIM_CONNECT_STATE_REQ_MSG, 
    MBIM_CONNECT_REQ_MSG, 
    MBIM_IP_PACKET_FILTERS_REQ_MSG, 
    MBIM_IP_PACKET_FILTERS_QUERY_MSG, 
    MBIM_NETWORK_IDLE_HINT_REQ_MSG, 
    MBIM_NETWORK_IDLE_HINT_QUERY_MSG, 
End

Begin Enum, MMC Pkt State
    IDLE_ST, 
    IDLE_WFR_PS_REQ_ST, 
    IDLE_WFR_PDN_ATTACH_ST, 
    IDLE_WFR_PS_CONNECT_ST, 
    PDN_ATTACHED_ST, 
    PS_CONNECTED_ST, 
    ACTIVE_WFR_ATTACH_ST, 
    ACTIVE_WFR_PS_REQ_ST, 
    WFR_PS_HO_RESULT_ST, 
    WFR_PS_HO_COMPLT_ST, 
    ACTIVE_WFR_SUSPENDED_ST, 
    ACTIVE_WFR_DISABLED_ST, 
    WFR_RELEASED_FALLBACK_HRPD_ST, 
    WFR_RELEASED_ST, 
    RELEASED_WFR_DISABLE_ST, 
    TEAR_DOWN_WFR_RESPONSE_ST, 
End

Begin Enum, MMC Pkt Event
    AP_ATTACH_EV, 
    AP_CONNECT_REQ_EV, 
    PS_REQ_EV, 
    PS_STATE_HO_INIT_EV, 
    PS_STATE_HO_1X_EV, 
    PS_STATE_HO_3G_EV, 
    PS_STATE_HO_CMPLTED_IND_EV, 
    PS_STATE_HO_FAILED_IND_EV, 
    SUSPENDED_EV, 
    RESUMED_EV, 
    RELEASED_EV, 
    DISABLED_EV, 
    PDN_DISCONNECT_REQ_EV, 
    PDN_DETACH_REQ_EV, 
    PS_DISCONNECT_REQ_EV, 
    PDN_DISCONNECT_RSP_EV, 
    PS_DISCONNECT_RSP_EV, 
    DEFAULT_BEARER_CNF_EV, 
    PS_CONNECT_RSP_EV, 
    CONNECT_BKOFF_TMR_EV, 
    CONNECT_WFR_RSP_TMR_EV, 
    CDMA_DATA_CMD_RSP_TMR_EV, 
    LTE_DATA_CMD_RSP_TMR_EV, 
    TEAR_ALL_DOWN_EV, 
End

Begin Enum, Module Name Id
    GMSS sub-module, 
    MEAS sub-module, 
    CDMA	module, 
    LTE module, 
    None of those, 
End

Begin Enum, HO State Ind Type
    HO Initiated, 
    HO Complete, 
    HO Failed, 
    MODE Switched, 
    PS Released, 
End

Begin Enum, PS Type
    No network, 
    1X RTT, 
    HRPD, 
    EHRPD, 
    LTE, 
    GERAN, 
    UTRAN, 
End

Begin Enum, Status Cause
    Registration Fail, 
    System Loss, 
    PS type change, 
    GMSS Oosa, 
End

Begin Enum, Modem Name Id
    LTE modem, 
    CDMA modem, 
    GSM modem, 
    UMTS modem, 
End

Begin Enum, HRPD1X Connect Status Type
    Connect Success, 
    Connect Fail, 
    Disconected Already, 
End

Begin Enum, PDN Status Trace Type
    PDN IDLE, 
    PDN INITIAL ATTACHING, 
    PDN PS_REQ HANDOVER ATTACHING, 
    PDN ATTACHING, 
    PDN ATTACHED, 
    PDN SUSPENDED, 
    PDN DISCONNECTING, 
    PDN PENDING_ATTACH_REQ, 
    PDN PENDING_DISCONNECT_REQ, 
    PDN PENDING_DETACH_REQ, 
    PDN FAULTY CONDITION, 
End

Begin Enum, HRPD1X State
    HO Idle, 
    HO PS REQ, 
    HO Connected, 
End

Begin Enum, Data Cmd Type
    IRAT_SUSPEND, 
    IRAT_RESUME, 
    IRAT_DISABLE, 
    IRAT_RELEASE, 
End

Begin Enum, Ho Cnf Type
    CNF_success, 
    CNF_fail, 
    CNF_invalid, 
    CNF_eHrpd_disabled, 
End

Begin Enum, Attach Type
    initial attaching, 1
    handover attaching, 3
End

Begin Enum, PDNErrCode Type
    GeneralError, 
    UnauthorizedAPN, 
    PDNLimitExceeded, 
    NoPGWAvailable, 
    PGWUnreachable, 
    PGWReject, 
    InsufficientParameters, 
    ResourceUnavailable, 
    AdminProhibited, 
    PDNIDAlreadyInUse, 
    SubScriptionLimitation, 
    PDNConnAlreadyExistForPDN, 
    EAPAKAfailure, 0x80
    RetryTmrThrottling, 
    NetworkNoRsp, 
    PDNAttachAbort, 
    PDNLimitExceededInUESide, 
    PDNIDAlreadyInUseInUESide, 
    InvalidPDNAttachReq, 
    PdnRecFailure, 
    MainConnSetupFailure, 
    BearerResourceUnAvailable, 
    OpAbortByUser, 
    RttDataConnected, 
    EAPAKAReject, 
    LCPNego3Failure, 
    TCHSetupFailure, 
    NwNoRspInLCP, 
    NwNoRspInAuth, 
    Success, 0xff
End

Begin Enum, APStatus Type
    Success, 
    Fail, 
    Duplicate, 
    Renegotiate, 
End

Begin Enum, PDN ErrCode Type
    GeneralError, 
    UnauthorizedAPN, 
    PDNLimitExceeded, 
    NoPGWAvailable, 
    PGWUnreachable, 
    PGWReject, 
    InsufficientParameters, 
    ResourceUnavailable, 
    AdminProhibited, 
    PDNIDAlreadyInUse, 
    SubScriptionLimitation, 
    PDNConnAlreadyExistForPDN, 
    EAPAKAfailure, 0x80
    RetryTmrThrottling, 
    NetworkNoRsp, 
    PDNAttachAbort, 
    PDNLimitExceededInUESide, 
    PDNIDAlreadyInUseInUESide, 
    InvalidPDNAttachReq, 
    PdnRecFailure, 
    MainConnSetupFailure, 
    BearerResourceUnAvailable, 
    OpAbortByUser, 
    RttDataConnected, 
    EAPAKAReject, 
    LCPNego3Failure, 
    TCHSetupFailure, 
    NwNoRspInLCP, 
    NwNoRspInAuth, 
    Success, 0xff
End

Begin Enum, AP Status Type
    Success, 
    Fail, 
    Duplicate, 
    Renegotiate, 
End

Begin Enum, MmcMsgIDT
    MMC_MEAS_LTE_IRAT_MEAS_CMD, 0x2000
    MMC_MEAS_LTE_IRAT_SYSTEM_CHANGE_REQ, 
    MMC_MEAS_LTE_IRAT_SIB8_MEAS_CMD, 
    MMC_MEAS_RAT_IRAT_LTEMEAS_IND, 
    MMC_MEAS_LTE_IRAT_RESEL_MEAS_IND, 
    MMC_MEAS_RAT_IRAT_STOP_MEAS_CMD, 
    MMC_MEAS_LTE_IRAT_LTE_CELL_INFO_PS_REG_RSP, 
    MMC_MEAS_CDMA_IRAT_SERVING_MEAS_RSP, 
    MMC_MEAS_CDMA_IRAT_MEASURE_RESULT_IND, 
    MMC_MEAS_CDMA_IRAT_MEASURE_SIB8_RESULT_IND, 
    MMC_MEAS_CDMA_IRAT_LTE_MEASURE_INFO_IND, 
    MMC_MEAS_CDMA_IRAT_PS_REG_CELLIDS_RSP, 
    MMC_MEAS_CDMA_IRAT_PS_REG_FREQ_RSP, 
    MMC_MEAS_GMSS_MEAS_START_CNF, 
    MMC_MEAS_GMSS_MEAS_END_CNF, 
    MMC_MEAS_GMSS_BSR_START_IND, 
    MMC_MEAS_GMSS_BSR_END_IND, 
    MMC_MEAS_GMSS_SERVING_PS_WEAK_CNF, 
    MMC_MEAS_GMSS_PS_STATUS_IND, 
    MMC_MEAS_GMSS_MEAS_ABORT_REQ, 
    MMC_MEAS_PKT_PS_RSP_MSG, 
    MMC_MEAS_PKT_PS_STATE_CNF_MSG, 
    MMC_MEAS_PKT_CDMA_DATA_STATE_IND, 
    MMC_MEAS_LTE_RESEL_TIMER_EXP, 
    MMC_MEAS_LTE_MEAS_TIMER_EXP, 
    MMC_MEAS_GLOBAL_TIMER_EXP, 
    MMC_MEAS_SIB8_TIMER_EXP, 
    MMC_MEAS_SIB8_HRPD_TIMER_EXP, 
    MMC_MEAS_RAT_IRAT_RESELMEAS_CMD, 
    MMC_MEAS_IRAT_HANDOVER_REQ, 
    MMC_MEAS_RAT_HANDOVER_PS_REG_RSP, 
    MMC_MEAS_IRAT_SET_IDLEMODEMOBILITYINFO, 
    MMC_MEAS_WAIT_RESEL_IND_TIMER_EXP, 
    MMC_MEAS_RAT_IRAT_SYSTEM_CHANGE_ABORT_CMD, 
    MMC_MEAS_MAX_NUM_EVENTS, 
    MMC_MEAS_LTE_ETS_SIB8_MEAS_CMD, 
    MMC_MEAS_LTE_ETS_IRAT_MEAS_CMD, 
    MMC_MEAS_LTE_ETS_SYS_CHANGE_REQ, 
    MMC_MEAS_CDMA_ETS_LTE_MEAS_INFO_IND, 
    MMC_MEAS_LTE_ETS_MEAS_RESULT_IND, 
End

Begin Enum, MmcMsgEtsT
    ETS_MMC_MEAS_SIB8_RESULT_IND, 
    ETS_MMC_MEAS_IRAT_SYSTEM_CHANGE_RSP, 
    ETS_MMC_MEAS_IRAT_MEAS_RESULT_IND, 
    ETS_MMC_MEAS_IRAT_STOP_MEAS_CMD, 
    ETS_MMC_MEAS_IRAT_PS_CELL_INFO_REG_REQ, 
    ETS_MMC_MEAS_IRAT_LTE_MEAS_CMD, 
    ETS_MMC_MEAS_IRAT_RESEL_MEAS_CMD, 
    ETS_MMC_CDMA_MEASURE_IRAT_REQ, 
    ETS_MMC_CDMA_MEASURE_SIB8_REQ, 
    ETS_MMC_CDMA_TRIGGER_PS_REG_FREQ_REQ, 
    ETS_MMC_CDMA_TRIGGER_PS_REG_CELLIDS_REQ, 
    ETS_MMC_CDMA_STOP_CDMA_MEAS_REQ, 
    ETS_MMC_CDMA_CDMA_SERVING_MEAS_REQ, 
End

Begin Enum, TxDirectionT
    MMC_TO_LTE, 
    MMC_TO_CDMA, 
End

Begin Enum, MmcSystemTypeT
    MMC_SYSTEM_CDMA, 0
    MMC_SYSTEM_UTRAN, 1
    MMC_SYSTEM_GERAN, 2
    MMC_SYSTEM_EUTRAN, 3
    MMC_SYSTEM_INVALID, 4
End

Begin Enum, MmcCdmaMeasResultT
    MMC_CDMA_MEAS_SUCCESS, 
    MMC_CDMA_MEAS_1X_ONCALL, 
    MMC_CDMA_ACQ_FAIL, 
    MMC_CDMA_EMPTY_PNLIST, 
    MMC_CDMA_BAND_NOT_SUPPORT, 
    MMC_CDMA_MEAS_FAIL, 
End

Begin Enum, MmcCdmaTypeT
    MMC_IRAT_1XRTT, 0
    MMC_IRAT_HRPD, 1
    MMC_IRAT_NULL, 2
End

Begin Enum, MmcIratStatusT
    MMC_IRAT_SUCCESS, 
    MMC_IRAT_ACQ_FAIL, 
    MMC_IRAT_PS_REG_FAIL, 
    MMC_IRAT_PS_SESSION_FAIL, 
    MMC_IRAT_FAIL, 
    MMC_IRAT_CMD_INVALID, 
End

Begin Enum, MmcMeasMlcIncomingEventsT
    MMC_MEAS_MLC_IRAT_MEAS_CMD, 
    MMC_MEAS_MLC_SYSTEM_CHANGE_REQ, 
    MMC_MEAS_MLC_LTE_IRAT_LTEMEAS_IND, 
    MMC_MEAS_MLC_LTE_IRAT_RESEL_MEAS_IND, 
    MMC_MEAS_MLC_LTE_IRAT_STOP_MEAS_CMD, 
    MMC_MEAS_MLC_LTE_IRAT_LTE_CELL_INFO_PS_REG_RSP, 
    MMC_MEAS_MLC_CDMA_IRAT_SERVING_MEAS_RSP, 
    MMC_MEAS_MLC_CDMA_IRAT_LTE_MEASURE_INFO_IND, 
    MMC_MEAS_MLC_GMSS_MEAS_START_CNF, 
    MMC_MEAS_MLC_GMSS_MEAS_END_CNF, 
    MMC_MEAS_MLC_GMSS_BSR_START_IND, 
    MMC_MEAS_MLC_GMSS_BSR_END_IND, 
    MMC_MEAS_MLC_GMSS_SERVING_PS_WEAK_CNF, 
    MMC_MEAS_MLC_GMSS_PS_STATUS_IND, 
    MMC_MEAS_MLC_GMSS_MEAS_ABORT_REQ, 
    MMC_MEAS_MLC_PKT_PS_REG_RSP, 
    MMC_MEAS_MLC_PKT_HANDOVER_CNF, 
    MMC_MEAS_MLC_CDMA_DATA_STATE_IND, 
    MMC_MEAS_MLC_LTE_RESEL_TIMER_EXP, 
    MMC_MEAS_MLC_LTE_MEAS_TIMER_EXP, 
    MMC_MEAS_MLC_IRAT_RESEL_CMD, 
    MMC_MEAS_MLC_IRAT_HANDOVER_CMD, 
    MMC_MEAS_MLC_RAT_HANDOVER_PS_REG_RSP, 
    MEAS_MLC_MAX_NUM_EVENTS, 
End

Begin Enum, MmcMeasMlcStatesT
    MMC_MEAS_MLC_IDLE, 
    MMC_MEAS_MLC_ACTIVE, 
    MMC_MEAS_MLC_SUSPEND, 
    MMC_MEAS_MLC_RESEL_PEND, 
    MMC_MEAS_MLC_REG_PEND, 
    MMC_MEAS_MLC_WFR_PS_CNF, 
    MMC_MEAS_MLC_MAX_STATES, 
End

Begin Enum, MmcMeasMlcFuncT
    MmcMeasMlcHandleMeasCmd, 
    MmcMeasMlcHandleSysChangReq, 
    MmcMeasMlcHandleLteResultInd, 
    MmcMeasMlcHandleReselResInd, 
    MmcMeasMlcHandleStopMeasCmd, 
    MmcMeasMlcHandleLtePsRegRsp, 
    MmcMeasMlcHandleCdmaSrvRsp, 
    MmcMeasMlcHandleLteMeasInfo, 
    MmcMeasMlcHandleMeasStartCnf, 
    MmcMeasMlcNoAction, 
    MmcMeasMlcHandleBsrStartInd, 
    MmcMeasMlcHandleGmssEndInd, 
    MmcMeasMlcHandleGmssEndInd1, 
    MmcMeasMlcHandlePsStatusInd, 
    MmcMeasMlcHandlePsRsp, 
    MmcMeasMlcHandleCdmaPktStatusInd, 
    MmcMeasMlcHandleReselTimExp, 
    MmcMeasMlcHandleMeasTimExp, 
    MmcMeasMlcHandleReselMeasCmd, 
    MmcMeasMlcHandleHandoverReq, 
    MmcMeasMlcHandleHoPsRegRsp, 
End

Begin Enum, MmcMeasMccIncomingEventsT
    MMC_MEAS_MCC_LTE_IRAT_MEAS_CMD, 
    MMC_MEAS_MCC_LTE_IRAT_SYSTEM_CHANGE_REQ, 
    MMC_MEAS_MCC_LTE_IRAT_SIB8_MEAS_CMD, 
    MMC_MEAS_MCC_LTE_IRAT_STOP_MEAS_CMD, 
    MMC_MEAS_MCC_CDMA_IRAT_MEASURE_RESULT_IND, 
    MMC_MEAS_MCC_CDMA_IRAT_MEASURE_SIB8_RESULT_IND, 
    MMC_MEAS_MCC_CDMA_IRAT_PS_REG_CELLIDS_RSP, 
    MMC_MEAS_MCC_CDMA_IRAT_PS_REG_FREQ_RSP, 
    MMC_MEAS_MCC_GMSS_MEAS_START_CNF, 
    MMC_MEAS_MCC_GMSS_MEAS_END_CNF, 
    MMC_MEAS_MCC_GMSS_BSR_START_IND, 
    MMC_MEAS_MCC_GMSS_BSR_END_IND, 
    MMC_MEAS_MCC_GMSS_SERVING_PS_WEAK_CNF, 
    MMC_MEAS_MCC_GMSS_PS_STATUS_IND, 
    MMC_MEAS_MCC_GMSS_MEAS_ABORT_REQ, 
    MMC_MEAS_MCC_PKT_PS_REG_RSP, 
    MMC_MEAS_MCC_PKT_HANDOVER_CNF, 
    MMC_MEAS_MCC_GLOBAL_TIMER_EXP, 
    MMC_MEAS_MCC_SIB8_TIMER_EXP, 
    MMC_MEAS_MCC_SIB8_HRPD_TIMER_EXP, 
    MEAS_MCC_MAX_NUM_EVENTS, 
End

Begin Enum, MmcMeasMccStatesT
    MMC_MEAS_MCC_IDLE, 
    MMC_MEAS_MCC_ACTIVE, 
    MMC_MEAS_MCC_SUSPEND, 
    MMC_MEAS_MCC_REG_PEND, 
    MMC_MEAS_MCC_HOINIT_PEND, 
    MMC_MEAS_MCC_MAX_STATES, 
End

Begin Enum, MmcMeasMccFuncT
    MmcMeasMccHandleMeasCmd, 
    MmcMeasMccHandleSysChangReq, 
    MmcMeasMccHandleSib8Cmd, 
    MmcMeasMccHandleStopMeasCmd, 
    MmcMeasMccHandleCdmaResultInd, 
    MmcMeasMccHandleSib8ResultInd, 
    MmcMeasMccHandleCdmaPsRegRsp, 
    MmcMeasMccHandleCdmaPsRegRsp1, 
    MmcMeasMccHandleMeasStartCnf, 
    MmcMeasMccHandleMeasEndCnf, 
    MmcMeasMccHandleBsrStartInd, 
    MmcMeasMccHandleBsrEndInd, 
    MmcMeasMccInvalidEvent, 
    MmcMeasMccHandlePsStatusInd, 
    MmcMeasMccHandlePsRsp, 
    MmcMeasMccHandleGlobalTimExp, 
    MmcMeasMccHandleSib8TimExp, 
    MmcMeasMccHandleHrpdTimExp, 
End

Begin Enum, MmcMeasGbIncomingEventsT
    MMC_MEAS_MEAS_CMD_EVENT = 0, 
    MMC_MEAS_SYSTEM_CHANGE_EVENT, 
    MMC_MEAS_MEAS_RESULT_IND_EVENT, 
    MMC_MEAS_RESEL_MEAS_IND_EVENT, 
    MMC_MEAS_STOP_MEAS_EVENT, 
    MMC_MEAS_CELL_INFO_PS_REG_RSP_EVENT, 
    MMC_MEAS_RESEL_MEAS_EVENT, 
    MMC_MEAS_HANDOVER_EVENT, 
    MMC_MEAS_HANDOVER_PS_REG_RSP_EVENT, 
    MMC_MEAS_GMSS_MEAS_START_CNF_EVENT, 
    MMC_MEAS_GMSS_MEAS_END_CNF_EVENT, 
    MMC_MEAS_GMSS_BSR_START_IND_EVENT, 
    MMC_MEAS_GMSS_BSR_END_IND_EVENT, 
    MMC_MEAS_GMSS_SERVING_PS_WEAK_CNF_EVENT, 
    MMC_MEAS_GMSS_PS_STATUS_IND_EVENT, 
    MMC_MEAS_GMSS_MEAS_ABORT_REQ_EVENT, 
    MMC_MEAS_PKT_PS_REG_RSP_EVENT, 
    MMC_MEAS_PKT_HANDOVER_CNF_EVENT, 
    MMC_MEAS_RESEL_TIMER_EXP_EVENT, 
    MMC_MEAS_MEAS_TIMER_EXP_EVENT, 
    MMC_MEAS_GB_MAX_NUM_EVENTS, 
End

Begin Enum, MmcMeasRatStateT
    MMC_MEAS_IDLE, 
    MMC_MEAS_SUSPEND, 
    MMC_MEAS_MEAS, 
    MMC_MEAS_RESEL_MEAS, 
    MMC_MEAS_REG_PEND, 
    MMC_MEAS_PS_PEND, 
    MMC_MEAS_WFR_PS_CNF, 
    MMC_MEAS_MAX_STATES, 
End

Begin Enum, MmcSystemChangeCauseT
    MMC_REDIRECTION, 
    MMC_RESELECTION, 
    MMC_CELLCHANGEORDER, 
    MMC_HANDOVER, 
    MMC_HO_INVALID, 
End

Begin Enum, GmssSt
    GMSS_INIT_ST, 0
    GMSS_RAT_SCAN_ST, 
    GMSS_BSR_SCAN_ST, 
    GMSS_GMRU_SCAN_ST, 
    GMSS_PS_REGING_ST, 
    GMSS_PS_REGED_ST, 
    GMSS_OOS_ST, 
    GMSS_MEAS_ST, 
    GMSS_RAT_LOST_ST, 
    GMSS_EMERGENCY_ST, 
End

Begin Enum, GmssPowerStatus
    GMSS_POWERED_DOWN_STATE, 
    GMSS_POWERED_UP_STATE, 
    GMSS_POWERING_UP_STATE, 
    GMSS_POWERING_DOWN_STATE, 
    MAX_GMSS_POWER_STATE, 
End

Begin Enum, GmssPktApiId
    HandlePktPsStatusCnfInitSt(), ,RO
    HandlePktPsStatusCnfPSRegingSt(), ,RO
    HandlePktPsRspInitSt(), ,RO
    HandlePktPsRspPSRegingSt(), ,RO
    HandlePktConnStatusInd(), ,RO
    mmcGmssSendPktPsStatusInd(), ,RO
    mmcGmssSendPktPsReq(), ,RO
    HandlePktCdmaDataStateInd(), ,RO
    HandlePktRatDisablingPsRegingSt(), ,RO
    HandlePktRatDisablingMeasSt(), ,RO
End

Begin Enum, MmcStatus
    MMC_STATUS_SUCCESS, 
    MMC_STATUS_FAIL, 
    MMC_STATUS_INVALID, 
    MMC_STATUS_EHRPD_DISABLED, 
End

Begin Enum, GmssPsType
    MMC_PSTYPE_NO_PS, 0
    MMC_PSTYPE_1xRTT, 
    MMC_PSTYPE_HRPD, 
    MMC_PSTYPE_EHRPD, 
    MMC_PSTYPE_LTE, 
    MMC_PSTYPE_GERAN, 
    MMC_PSTYPE_UTRAN, 
End

Begin Enum, GmssAct
    GMSS_ENGINE_ACTION_START, 
    GMSS_NO_ACTION, 
    GMSS_OPMODE_SWITCH, 
    GMSS_RAT_LOST_SCAN, 
    GMSS_PS_BSR_SCAN_START, 
    GMSS_PS_BSR_SCAN_ABORT, 
    GMSS_CS_BSR_SCAN_START, 
    GMSS_PKT_STOPPING_RAT, 
    GMSS_PKT_PS_HANDOFF, 
    GMSS_PKT_RESUME, 
    GMSS_PKT_BETTER_RAT_FOUND, 
    GMSS_ENGINE_ACTION_END, 
    GMSS_PENDED_ACTION_START, 
    GMSS_PENDED_ACTION_NONE, 
    GMSS_PENDED_ACTION_PSBSR_TIMER_EXP, 
    GMSS_PENDED_ACTION_CSBSR_TIMER_EXP, 
    GMSS_PENDED_ACTION_PS_RAT_LOST, 
    GMSS_PENDED_ACTION_PSRAT_INFO_CHANGED, 
    GMSS_PENDED_ACTION_OOS_SCAN_TIMER_EXP, 
    GMSS_PENDED_ACTION_E911_CALL_REQ, 
    GMSS_PENDED_ACTION_RAT_RECOVERY, 
    GMSS_PENDED_ACTION_MEAS_RAT_ACQUIRED, 
    GMSS_PENDED_ACTION_END, 
    GMSS_ACQ_STATUS_START, 
    GMSS_ACQ_STATUS_RESET_ALL, 
    GMSS_ACQ_STATUS_KEEP_CS, 
    GMSS_ACQ_STATUS_KEEP_PS, 
    GMSS_ACQ_STATUS_KEEP_CS_AND_PS, 
    GMSS_ACQ_STATUS_END, 
    GMSS_BSR_CTRL_START, 
    GMSS_BSR_NO_ACTION, 
    GMSS_BSR_AFTER_PS_SWITCH, 
    GMSS_BSR_SCHEDULE_BSR, 
    GMSS_BSR_TIMER_STOP, 
    GMSS_BSR_TIMER_START_REBUILD_SCANLIST, 
    GMSS_BSR_PS_TIMER_EXPIRED, 
    GMSS_BSR_CS_TIMER_EXPIRED, 
    GMSS_BSR_TIMER_RESTART_AFTER_STOP, 
    GMSS_BSR_TIMER_BLOCKED_SYSTEM_START, 
    GMSS_BSR_CTRL_END, 
    GMSS_STOP_RAT_ACTION_START, 
    GMSS_STOP_ALL_RATS, 
    GMSS_STOP_ALL_EXCEPT_SPECIFIED_RAT, 
    GMSS_STOP_ALL_EXCEPT_CDMA, 
    GMSS_STOP_ALL_EXCEPT_CURPS_TARGETPS_CURCS, 
    GMSS_STOP_ALL_EXCEPT_CURPS_CURCS, 
    GMSS_STOP_SPECIFIED_RAT, 
    GMSS_STOP_RAT_ACTION_END, 
    NUM_GMSS_ACTIONS, 
End

Begin Enum, GmssModeSwitch
    GMSS_MODESWITCH_NO_ACTION, 
    GMSS_MODESWITCH_START_NEW_PS_CONNECTION, 
    GMSS_MODESWITCH_RAT_SWITCH_ONLY, 
    GMSS_MODESWITCH_NEW_PS_CONNECTION_AFTER_RAT_SWITCH, 
End

Begin Enum, GmssMeasApiId
    HandleMeasStartInd(), ,RO
    HandleMeasEndInd(), ,RO
    HandleMeasBsrStartCnf(), ,RO
    HandleMeasBsrEndCnf(), ,RO
    HandleMeasServingPsWeakInd(), ,RO
    SendMeasStartCnf(), ,RO
    SendMeasEndCnf(), ,RO
    SendMeasBsrStartInd(), ,RO
    SendMeasBsrEndInd(), ,RO
    SendMeasSerPsWeakCnf(), ,RO
    SendMeasPsStatusInd(), ,RO
    SendMeasAbortReq(), ,RO
End

Begin Enum, MeasStartCause
    MMC_MEAS_MEASUREMENT, 
    MMC_MEAS_HANDOFF, 
    MMC_MEAS_NWK_ACTION, 
End

Begin Enum, MeasStatusResult
    MMC_PS_NO_CHANGE, 
    MMC_PS_HO_SUCCESS, 
    MMC_PS_HO_FAIL, 
End

Begin Enum, Gmsspri
    MMC_PRI_HOME, 0
    MMC_PRI_PREF, 
    MMC_PRI_ANY, 
    MMC_PRI_UNAVL, 
    MMC_PRI_NOCHG, 
End

Begin Enum, MeasCnfResult
    MMC_MEAS_GO, 
    MMC_MEAS_ABORT, 
End

Begin Enum, GmssDbmTraceId
    GMSS_DBM_MLPL_INFO, ,RO
    GMSS_DBM_STORED_INDEX, ,RO
    GMSS_DBM_MSPL_INFO, ,RO
    GMSS_DBM_MSPL_SCAN_LIST, ,RO
    GMSS_DBM_BSR_INFO, ,RO
    GMSS_DBM_BSR_LIST, ,RO
    GMSS_DBM_ALTTECH_LIST, ,RO
    GMSS_DBM_MRU_LIST, ,RO
    GMSS_DBM_PS_MPREF, ,RO
    GMSS_DBM_PS_MPREF0, ,RO
    GMSS_DBM_PS_MPREF_TARGET, ,RO
    GMSS_DBM_CS_MPREF, ,RO
    GMSS_DBM_CS_MPREF0, ,RO
End

Begin Enum, GmssScanListType
    GMRU, 
    ALT_TECH_TABLE, 
    GBSR, 
    MSPL, 
    SINGLE, 
End

Begin Enum, GmssFunctionId
    mmcGmssValidatePsRat(), ,RO
    mmcGmssValidateCsRat(), ,RO
    mmcGmssActionSet(), ,RO
    mmcGmssSaveApReq(), ,RO
    mmcGmssStartScanRatList(), ,RO
    mmcGmssControlGBsrScan(), ,RO
    mmcGmssStartOpModeSwitch(), ,RO
    mmcGmssStartCsService(), ,RO
    mmcGmssScanRatList(), ,RO
    mmcGmssStartGBsrScan(), ,RO
    mmcGmssStartGmssScan(), ,RO
    mmcGmssRatLostScan(), ,RO
    mmcGmssStartRatFailureScan(), ,RO
    mmcGmssStartInitialOpMode(), ,RO
    mmcGmssStartPsSwitch(), ,RO
    mmcGmssCompletePsSwitch(), ,RO
    mmcGmssStopRatOperation(), ,RO
    mmcGmssDeterminePsScanAction(), ,RO
    mmcGmssConvGenRat(), ,RO
    mmcGmssSetActionPended(), ,RO
    mmcGmssCheckPendedAction(), ,RO
    mmcGmssHandleRatNoServiceRsp(), ,RO
    HandleRatNoServiceRspRegingSt(), ,RO
    HandleRatNoServiceRspMeasSt(), ,RO
End

Begin Enum, GmssPrefScanModeType
    GMSS_PREF_PKT_SVC, 
    GMSS_PREF_MOST_PREF_RAT, 
End

Begin Enum, GmssValidationResult
    VALIDATE_RAT_NO_CHANGE, 
    VALIDATE_RAT_NEW_RAT_BETTER, 
    VALIDATE_RAT_NEW_RAT_NOTACCEPTABLE, 
    VALIDATE_RAT_WAIT_MOREINFO, 
    VALIDATE_PSRAT_NEW_MCC, 
End

Begin Enum, GmssopMode
    MMC_GLOBAL, 0
    MMC_LTE_ONLY, 
    MMC_CDMA_ONLY, 
    MMC_LTE_3GPP, 
    MMC_EHRPD_CDMA, 
    MMC_GERAN_ONLY, 
    MMC_UTRAN_ONLY, 
    MMC_CDMA1X_ONLY, 
    MMC_CDMADO_ONLY, 
    MMC_NULL_MODE, 
End

Begin Enum, GmssRatApiId
    mmcGmssApiSendRatPowerUpReq(), ,RO
    mmcGmssApiSendRatPowerDownReq(), ,RO
    mmcGmssApiSendRatOnlyModeReq(), ,RO
    mmcGmssApiSendRatNoServiceReq(), ,RO
    mmcGmssApiSendEvdoDisableReq(), ,RO
    mmcGmssApiSendRatAcqReq(), ,RO
    mmcGmssApiSendRatPsRegReq(), ,RO
    mmcGmssApiSendRatMccSrchReq(), ,RO
    mmcGmssApiSendRatCsRegReq(), ,RO
    mmcGmssApiSendRatCellGlobalIdRsp(), ,RO
    mmcGmssApiRecvRatPowerStatusRsp(), ,RO
    mmcGmssApiRecvRatOnlyModeRsp(), ,RO
    mmcGmssApiRecvRatNoServiceRsp(), ,RO
    mmcGmssApiRecvRatAcqRsp(), ,RO
    mmcGmssApiRecvRatPsRegRsp(), ,RO
    mmcGmssApiRecvRatMccSrchRsp(), ,RO
    mmcGmssApiRecvRatNwkStatusInd(), ,RO
    mmcGmssApiRecvRatCellGlobalIdReq(), ,RO
    mmcGmssApiRecvRatModeRsp(), ,RO
End

Begin Enum, GmssNoSvcReason
    MMC_NOSVC_INITIAL_SCAN, 
    MMC_NOSVC_RAT_NOT_IN_MSPL, 
    MMC_NOSVC_OTHER_RAT_FOUND, 
    MMC_NOSVC_MORE_PREF_RAT_FOUND, 
    MMC_NOSVC_PKT_SVC_CMD, 
    MMC_NOSVC_OPMODE_CHANGE, 
    MMC_NOSVC_RAT_BLOCKED, 
    MMC_NOSVC_OOSA, 
    MMC_NOSVC_UICC_ERROR, 
End

Begin Enum, GmssAcqReason
    INITIAL_ACQ, 
    OOS_ACQ, 
    SYS_LOSS_ACQ, 
    MMC_ACQ, 
    BSR_ACQ, 
End

Begin Enum, GmssRatCpSt
    GMSS_RAT_INIT, 
    GMSS_RAT_ACQUIRED, 
    GMSS_RAT_REGISTERED, 
    GMSS_RAT_CONNECT, 
    GMSS_RAT_SYSLOST, 
    GMSS_RAT_DISABLED, 
    GMSS_RAT_SUSPENDED, 
    GMSS_RAT_POWERED_DOWN, 
End

Begin Enum, GmssNwkEvt
    MMC_AUTOMATIC, 0
    MMC_RAT_LOST, 
    MMC_PS_REL, 
    MMC_PS_CHG, 
    MMC_PRI_CHG, 
    MMC_RAT_RECOVERY, 
    MMC_HO_REQ, 
    MMC_RAT_ACQUIRED, 
    MMC_RAT_SUSPEND, 
    MMC_RAT_RESUME, 
    MMC_CMD_CNF, 
    MMC_CMD_REJ, 
    MMC_ST_UPD, 
    MMC_RES_RACE, 
    MMC_CELL_CHG, 
    MMC_NO_ANTENNA, 
End

Begin Enum, GmssApApiId
    mmcGmssApiSendApModeSelectRsp(), , RO
    mmcGmssApiSendApModeQueryRsp(), , RO
    mmcGmssApiSendApPowerUpRsp(), , RO
    mmcGmssApiSendApPowerDownRsp(), , RO
    mmcGmssApiSendApServiceStatusInd(), , RO
    mmcGmssApiSendApServiceStatusRsp(), , RO
    mmcGmssApiRecvApPowerUpReq(), , RO
    mmcGmssApiRecvApPowerDownReq(), , RO
End

Begin Enum, ApRatId
    MMC_API_CDMA2K_EHRPD, 1
    MMC_API_CDMA2K1X, 2
    MMC_API_GERAN, 3
    MMC_API_CDMA2K_HRPD, 4
    MMC_API_UTRAN, 5
    MMC_API_EUTRAN, 9
    MMC_API_NOSYS, 255
End

Begin Enum, ApRegStatus
    MMC_API_SERVICE_AVL, 0
    MMC_API_NO_SERVICE, 1
End

Begin Enum, SEC Message Name
    SEC_AKA_AUTH_REQ_MSG, 0x3E20,
    SEC_AKAMK_DERIVE_REQ_MSG, 
    SEC_AKAREAUTH_DERIVE_REQ_MSG, 
    SEC_AKAMSK_DERIVE_REQ_MSG, 
    SEC_HMAC_SHA128_REQ_MSG, 
    SEC_EHMAC_SHA256_REQ_MSG, 
    SEC_AES_CBC128_REQ_MSG, 
    SEC_AUTH_TEST_INIT_MSG, 
    SEC_AKA_AUTH_REQ_TEST_MSG, 
    SEC_AKAMK_DERIVE_REQ_TEST_MSG, 
    SEC_AKAREAUTH_DERIVE_REQ_TEST_MSG, 
    SEC_AKAMSK_DERIVE_REQ_TEST_MSG, 
    SEC_HMAC_SHA128_REQ_TEST_MSG, 
    SEC_EHMAC_SHA256_REQ_TEST_MSG, 
    SEC_AES_CBC128_REQ_TEST_MSG, 
    SEC_AKA_PRIME_SQN_INIT_MSG, 
End

Begin Enum, HscMsgIdT
    MPA_RF_RESOURCE_REQ_MSG, 0x2000,
    MPA_RF_RESOURCE_UPDATE_REQ_MSG, 
    MPA_RF_RESOURCE_ASSIGN_MSG, 
    MPA_RF_RELEASE_REQ_MSG, 
    MPA_RF_RELEASE_RSP_MSG, 
    MPA_RF_SHUTOFF_REQ_MSG, 
    MPA_RF_SHUTOFF_RSP_MSG, 
    MPA_RF_PREEMPT_REQ_MSG, 
    MPA_RF_PREEMPT_RSP_MSG, 
    MPA_RF_FORCE_RELEASE_REQ_MSG, 
    MPA_RF_FORCE_RELEASE_RSP_MSG, 
    MPA_RF_REQUEST_CANCEL_MSG, 
    MPA_RF_REQUEST_CANCEL_RSP_MSG, 
    MPA_RF_SUSPEND_REQ_MSG, 
    MPA_RF_SUSPEND_RSP_MSG, 
    MPA_RF_RESUME_REQ_MSG, 
    MPA_RF_RESUME_RSP_MSG, 
    MPA_RAU_RESPONSE_MSG, 
    MPA_RF_SUSPEND_TYPE_MSG, 
    HSC_IDP_HANDOFF_CMD_MSG, 0x2040,
    HSC_IDP_WAKE_CMD_MSG, 
    HSC_IDP_SLEEP_CMD_MSG, 
    HSC_IDP_SRCH_DONE_MSG, 
    HSC_RMC_STOP_ACK_MSG, 
    HSC_RMC_ACTIVATE_RSP_MSG, 
    HSC_IDP_DISABLE_DO_SLOTTED_MSG, 
    HSC_IDP_ENABLE_DO_SLOTTED_MSG, 
    HSC_CLK_CAL_START_MSG, 
    HSC_IDP_THAW_REQ_MSG, 
    HSC_IDP_SILENT_DISABLE_DO_SLOTTED_MSG, 
    HSC_IDP_ACTIVATE_RESYNC_MSG, 
    L1D_SLEEP_RDY_MSG, 0x2080,
    L1D_SLOTTED_MODE_DISABLE_MSG, 
    L1D_SLOTTED_MODE_PARAMS_MSG, 
    L1D_SLEEP_MSG, 
    L1D_WAKEUP_MSG, 
    L1D_QPCH_CCI_DECODE_REQ_MSG, 
    L1D_SRCH_RESULT_COMPLETE_MSG, 
    L1D_SILENT_SLOTTED_DISABLE_MSG, 
    L1D_ACTIVATE_RESYNC_MSG, 
    L1D_SPAGE_TEST_STOP_ACK_MSG, 
    L1D_SPAGE_TEST_MINI_ACQ_ERR_MSG, 
    L1D_OOSA_MSG, 0x20C0,
    L1D_OOSA_CONT_MSG, 
    L1D_OOSA_WAKEUP_MSG, 
    HSC_CLC_OOSA_SLEEP_CMD_MSG, 
    HSC_CLC_OOSA_CONT_CMD_MSG, 
    HSC_CLC_OOSA_WAKE_CMD_MSG, 
    HSC_RMC_OOSA_RDY_MSG, 
    HSC_L1D_OOSA_RDY_MSG, 
    HSC_SET_SHDR_SVDO_OP_MODE_MSG, 
    HSC_SLEEPOVER_INT_COMP_MSG, 
    HSC_DEEP_SLEEP_CANCEL_MSG, 
    HSC_TIMER_EXPIRED_MSG, 
    HSC_HWD_ANT_PROFILE_UPDATE_MSG, 
    HSC_RMC_CSM_DEACT_MSG, 
    HSC_L1D_SPAGE_PREP_SLEEP_MSG, 
    HSC_ETS_RESYNC_DO_MSG, 0x2160,
    HSC_ETS_RESYNC_1X_MSG, 
    HSC_ETS_SSM_STATUS_MSG, 
    HSC_ETS_SSM_Q_SET_MSG, 
    HSC_ETS_RXSHUTOFF_MSG, 
    HSC_ETS_RXACTIVATE_MSG, 
    HSC_ETS_DBG_MODE_MSG, 
    HSC_ETS_CLK_CAL_MODE_MSG, 
    HSC_ETS_OOSA_MSG, 
    HSC_ETS_CAL_SETTLE_TIME_SET_MSG, 
    HSC_ETS_CLK_CAL_START_MSG, 
End

Begin Enum, HscTraceTrackT
    HSC_T_SSM_INIT, 
    HSC_T_SSM_INIT_2, 
    HSC_T_SSM_RESYNC_DISABLE, 
    HSC_T_SSM_RESYNC_DISABLE_2, 
    HSC_T_SSM_RESYNC_HISR, 
    HSC_T_SSM_RESYNC_HISR_2, 
    HSC_T_SSM_RESYNC_HISR_3, 
    HSC_T_SSM_RESYNC_ACTIVATE_NEW, 
    HSC_T_SSM_RESYNC_ACTIVATE_NONE, 
    HSC_T_SSM_RESYNC_ACTIVATE_FAILED, 
    HSC_T_SSM_RESYNC_ACTIVATE_SAME, 
    HSC_T_SSM_DEEP_SLEEP_CANCELLED, 
    HSC_T_SSM_DEEP_SLEEP_ACTIVATE, 
    HSC_T_SSM_DEEP_SLEEP_ACTIVATE_FAILED, 
    HSC_T_SSM_MPA_PREEMPT_DO_TX, 
    HSC_T_SSM_MPA_PREEMPT_DO_TX_2, 
    HSC_T_SSM_STOP_TX_REQ, 
    HSC_T_SSM_STOP_TX_REQ_NOT_SENT, 
    HSC_T_SSM_STOP_TX_REQ_3, 
    HSC_T_SSM_STOP_TX_CANCEL, 
    HSC_T_SSM_STOP_TX_CANCEL_2, 20,
    HSC_T_SSM_PROCESS_WAKE_CMD_MSG, 
    HSC_T_SSM_PROCESS_WAKE_CMD_DUPLICATE, 
    HSC_T_SSM_PROCESS_WAKE_CMD_MSG_3, 
    HSC_T_SSM_SAVE_PCH_WAKE_FRM, 
    HSC_T_SSM_SAVE_PCH_WAKE_FRM_2, 
    HSC_T_SSM_PROCESS_DO_STOP_ACK_MSG_TRAP2, 
    HSC_T_SSM_PROCESS_DO_STOP_ACK_MSG_TRAP1, 
    HSC_T_SSM_PROCESS_DO_STOP_ACK_MSG_NORMAL, 
    HSC_T_SSM_PROCESS_DO_STOP_ACK_MSG_4, 
    HSC_T_SSM_PROCESS_MPA_NORM_REQ_MSG_ACTIVE, 
    HSC_T_SSM_PROCESS_MPA_NORM_REQ_MSG_QUEUED, 
    HSC_T_SSM_PROCESS_MPA_NORM_REQ_MSG_DROPPED, 
    HSC_T_SSM_PROCESS_MPA_NORM_REQ_MSG_BAD, 
    HSC_T_SSM_PROCESS_MPA_REL_IND_MSG, 
    HSC_T_SSM_PROCESS_MPA_REL_IND_MSG_2, 
    HSC_T_SSM_MPA_RELEASE_SUCCESS, 
    HSC_T_SSM_MPA_RELEASE_SUSPEND_PENDING, 
    HSC_T_SSM_MPA_RELEASE_FAIL, 
    HSC_T_SSM_MPA_RELEASE_4, 
    HSC_T_SSM_MPA_PREEMPT_DO, 40,
    HSC_T_SSM_MPA_PREEMPT_DO_2, 
    HSC_T_SSM_PROCESS_MPA_SHUTOFF_RSP_MSG, 
    HSC_T_SSM_QUEUE_WAKE_CMD_ACTIVE, 
    HSC_T_SSM_QUEUE_WAKE_CMD_WAIT1, 
    HSC_T_SSM_QUEUE_WAKE_CMD_WAIT2, 
    HSC_T_SSM_QUEUE_WAKE_CMD_DROPPED, 
    HSC_T_SSM_QUEUE_WAKE_CMD_5, 
    HSC_T_SSM_DEQUEUE_CLOSE_TO_RESYNC, 
    HSC_T_SSM_DEQUEUE_NORMAL, 
    HSC_ERR_DEQUEUE_RECOVERY, 
    HSC_T_SSM_DEQUEUE_RESYNC_ACCEPT, 
    HSC_T_SSM_DEQUEUE_RESYNC_PREEMPT, 
    HSC_T_SSM_DEQUEUE_RESYNC_DENY, 
    HSC_T_SSM_DEQUEUE_RESYNC_DUPLICATE, 
    HSC_T_SSM_DEQUEUE_WAKE_ACTIVE, 
    HSC_T_SSM_DEQUEUE_WAKE_SCHEDULED_1, 
    HSC_T_SSM_DEQUEUE_WAKE_SCHEDULED_2, 
    HSC_T_SSM_DEQUEUE_WAKE_PREEMPT, 
    HSC_T_SSM_DEQUEUE_WAKE_DENIED, 
    HSC_T_SSM_DEQUEUE_WAKE_6, 60,
    HSC_T_SSM_CLEAN_WAKE_CMD_DUPLICATES, 
    HSC_T_SSM_CLEAN_WAKE_CMD_DUPLICATES_2, 
    HSC_T_SSM_QUEUE_PROMOTION, 
    HSC_ERR_MINI_ACQ_LARGE_OFFSET, 
    HSC_T_CLK_CAL_START, 
    HSC_T_CLK_CAL_START_DUPLICATED, 
    HSC_T_CLK_CAL_CONT, 
    HSC_T_CLK_CAL_CANCEL, 
    HSC_T_CLK_CAL_ASSEMBLE_BEGIN, 
    HSC_T_CLK_CAL_ASSEMBLE_CONT, 
    HSC_T_CLK_CAL_INSUFFICIENT_DATA, 
    HSC_T_CLK_CAL_CAPTURE, 
    HSC_T_CLK_CAL_CAPTURE_REALIGN, 
    HSC_T_CLK_CAL_DONE, 
    HSC_ERR_CLK_CAL_DETECTED, 
    HSC_T_CLK_CAL_DONE_3, 
    HSC_T_CLK_CAL_SCALING_FACTOR, 
    HSC_T_CLK_CAL_SCALING_FACTOR_2, 
    HSC_T_CLK_CAL_FREQ_ACC_DETECT, 
    HSC_T_CLK_CAL_FREQ_ACC_DETECT_2, 80,
    HSC_T_CLK_CAL_PROCESS_START_MSG, 
    HSC_T_CLK_CAL_CALC_ONLINE_ADJ, 
    HSC_T_CLK_CAL_CALC_NO_ADJ, 
    HSC_T_CLK_CAL_AUTO, 
    HSC_T_CLK_CAL_FAST_SETTLE_TIMER_START, 
    HSC_T_CLK_CAL_FAST_SETTLE_TIMER_END, 
    HSC_T_SSM_PROCESS_MINI_ACQ_MSG, 
    HSC_T_SSM_RESYNC_SKIPPED_REF, 
    HSC_T_SSM_RESYNC_SAVE_DENIED_REF, 
    HSC_T_SSM_RESYNC_CALC_FRAME_DO, 
    HSC_T_ERR_RESYNC_CANNOT_UPDATE_REF, 
    HSC_T_SSM_RESYNC_CALC_TIME_DO, 
    HSC_T_SSM_RESYNC_CALC_TIME_DO_2, 
    HSC_T_SSM_RESYNC_CALC_TIME_DO_DUPLICATED, 
    HSC_T_SSM_RESYNC_CALC_TIME_WRAPPED, 
    HSC_T_SSM_RESYNC_PN_INIT_DO, 
    HSC_T_SSM_RESYNC_PN_INIT_DO_2, 
    HSC_T_SSM_RESYNC_DENIED, 
    HSC_T_SSM_RESYNC_DENIED_2, 
    HSC_T_SSM_RESYNC_ACCEPT_SUCCESS, 100,
    HSC_T_SSM_RESYNC_ACCEPT_FAIL, 
    HSC_T_SSM_RESYNC_ACCEPT_3, 
    HSC_T_SSM_WAKE_ACCEPT_SUCCESS, 
    HSC_T_SSM_WAKE_ACCEPT_FAIL, 
    HSC_T_SSM_WAKE_ACCEPT_3, 
    HSC_T_SSM_FRM_CNT_EST, 
    HSC_T_SSM_FRM_CNT_EST_2, 
    HSC_T_SSM_MPA_REQUEST_SUCCESS, 
    HSC_T_SSM_MPA_REQUEST_FAIL, 
    HSC_T_SSM_DO_NOT_SEND_IND, 
    HSC_T_SSM_DO_SEND_WAKE_IND, 
    HSC_T_SSM_DO_SEND_THAW_IND, 
    HSC_T_SSM_DO_SEND_RESYNC_IND, 
    HSC_T_SSM_L1D_COPY_RESYNC_TIME, 
    HSC_T_SSM_L1D_COPY_RESYNC_TIME_2, 
    HSC_T_SSM_L1D_PREP_SLEEP, 
    HSC_T_SSM_L1D_PREP_SLEEP_2, 
    HSC_T_SSM_SYS_TRANSITION_TYPE, 
    HSC_T_SSM_SYS_TRANSITION_TYPE_2, 
    HSC_T_SSM_OOSA_START, 120,
    HSC_T_SSM_OOSA_START_2, 
    HSC_T_SSM_PROGRAM_RESYNC_SICU, 
    HSC_T_SPDO_FSM_ENABLED, 
    HSC_T_SPDO_FSM_CHANGED, 
    HSC_T_SPDO_FSM_DISABLED, 
    HSC_ERR_SPDO_FSM_BAD_STATE, 
    HSC_T_SPDO_RESYNC_ACCEPT, 
    HSC_T_SPDO_RESYNC_ACCEPT_2, 
    HSC_ERR_SPDO_STATE_PCH_MONITOR_SYSTIME, 
    HSC_T_SPDO_STATE_PCH_MONITOR_2, 
    HSC_T_SPDO_STATE_WAIT_FOR_STOP_ACK, 
    HSC_T_SPDO_STATE_WAIT_FOR_STOP_ACK_2, 
    HSC_T_SPDO_STATE_SLEEP, 
    HSC_T_SPDO_STATE_SLEEP_2, 
    HSC_T_SPDO_STATE_SLEEP_3, 
    HSC_T_SPDO_FAKE_SLEEP, 
    HSC_T_SPDO_FAKE_SLEEP_2, 
    HSC_T_SPDO_FAKE_SLEEP_3, 
    HSC_T_SPDO_PROCESS_DISABLED_MSG, 
    HSC_T_SPDO_REDUNDANT_DISABLED_MSG, 140
    HSC_T_SPDO_PROCESS_ENABLED_MSG, 
    HSC_T_SPDO_PROCESS_ENABLED_MSG_2, 
    HSC_T_SPDO_PROCESS_SLEEP_CMD_MSG, 
    HSC_T_SPDO_PROCESS_SLEEP_PEND_MSG, 
    HSC_T_SPDO_PROCESS_SLEEP_3, 
    HSC_T_SPDO_PROCESS_HANDOFF_CMD_MSG, 
    HSC_T_SPDO_PROCESS_HANDOFF_CMD_MSG_2, 
    HSC_T_SPDO_PROCESS_SRCH_DONE_MSG, 
    HSC_T_SPDO_PROCESS_SRCH_DONE_MSG_2, 
    HSC_T_SPDO_PROCESS_STOP_ACK_MSG, 
    HSC_T_SPDO_SEND_FAKE_WAKE_CMD, 
    HSC_T_SPDO_RESYNC_CALLBACK, 
    HSC_T_SPDO_RESYNC_CALLBACK_2, 
    HSC_T_SPDO_RESYNC_CALLBACK_3, 
    HSC_T_SPDO_SEND_RXACTIVATE, 
    HSC_T_SPDO_SEND_RXACTIVATE_2, 
    HSC_T_SPDO_SEND_RXACTIVATE_3, 
    HSC_T_SPDO_SEND_RF_SHUTOFF, 
    HSC_T_SPDO_SEND_RF_SHUTOFF_2, 
    HSC_T_SPDO_SLEEP_TRAP1, 160,
    HSC_T_SPDO_SLEEP_TRAP1_2, 
    HSC_T_SPDO_SLEEP_TRAP2, 
    HSC_T_SPDO_SLEEP_TRAP2_2, 
    HSC_T_SPDO_SPARE_1, 
    HSC_T_SPDO_SPARE_2, 
    HSC_T_SPDO_CLK_CAL_RESET, 
    HSC_T_SPDO_CLK_CAL_RESET_2, 
    HSC_T_SP_CLK_CAL_DONE, 
    HSC_T_SP_CLK_CAL_DONE_2, 
    HSC_T_SP_INIT, 
    HSC_T_SP_INIT_2, 
    HSC_T_SP_ENABLED, 
    HSC_T_SP_ENABLED_2, 
    HSC_T_SP_DISABLE_1X, 
    HSC_T_SP_DISABLE_DO, 
    HSC_T_SP_DISABLE_3, 
    HSC_T_SP_STATUS_SUSPENDED, 
    HSC_T_SP_STATUS_SUSPENDED_2, 
    L1D_T_SPAGE_STATUS_INIT, 
    L1D_T_SPAGE_STATUS_INIT_2, 180,
    L1D_T_SPAGE_SEND_PCH_CONT_TRUE, 
    L1D_T_SPAGE_SEND_PCH_CONT_TRUE_2, 
    L1D_T_SPAGE_STATUS_RESET, 
    L1D_T_SPAGE_STATUS_RESET_2, 
    L1D_T_SPAGE_PROCESS_SPAGE_ENABLED, 
    L1D_T_SPAGE_PROCESS_SPAGE_ENABLED_2, 
    L1D_T_SPAGE_PROCESS_SPAGE_DISABLED, 
    L1D_T_SPAGE_CHECK_SPAGE_DIS_STATE, 
    L1D_T_SPAGE_STATUS_WAKE_SET, 
    L1D_T_SPAGE_STATUS_RF_SHUTOFF, 
    L1D_T_SPAGE_STATUS_RF_SHUTOFF_2, 
    L1D_T_SPAGE_PROCESS_SLEEP_CMD_RESYNC_DENIED, 
    L1D_T_SPAGE_PROCESS_SLEEP_CMD_RESYNC_NORMAL, 
    L1D_T_SPAGE_PROCESS_SLEEP_CMD_MSG_3, 
    L1D_T_SPAGE_PROCESS_SRCH_DONE_MSG, 
    L1D_T_SPAGE_PROCESS_SRCH_DONE_MSG_2, 
    HSC_T_MPA_INIT, 
    HSC_T_MPA_INIT_2, 
    HSC_T_MPA_ADD_RF_OWNER, 
    HSC_ERR_MPA_ADD_RF_OWNER, 200,
    HSC_T_MPA_ADD_RF_OWNER_3, 
    HSC_T_MPA_REMOVE_RF_OWNER, 
    HSC_T_MPA_REMOVE_RF_OWNER_2, 
    HSC_T_MPA_REMOVE_RF_OWNER_3, 
    HSC_T_MPA_SEND_RF_ASSIGN_MSG, 
    HSC_T_MPA_SEND_NORM_RSP_MSG_2, 
    HSC_T_MPA_SEND_PREEMPT_REQ_MSG, 
    HSC_T_MPA_SEND_PREEMPT_REQ_MSG_2, 
    HSC_T_MPA_SEND_SHUTOFF_REQ_MSG, 
    HSC_T_MPA_SEND_SHUTOFF_REQ_MSG_2, 
    HSC_T_MAIN_INIT, 
    HSC_T_MAIN_INIT_2, 
    HSC_T_OOSA_PROCESS_SLEEP_CMD_MSG, 
    HSC_T_OOSA_PROCESS_CONT_CMD_MSG, 
    HSC_T_OOSA_PROCESS_OOSA_RDY_MSG, 
    HSC_T_OOSA_TIMER_START, 
    HSC_T_OOSA_TIMER_EXPIRED, 
    HSC_T_OOSA_PROCESS_WAKE_CMD_MSG, 
    HSC_T_ALTERNATE_AFC, 
    HSC_T_ETS_CLK_CAL_PERIOIDIC, 220,
    HSC_T_ETS_CLK_CAL_SET, 
    HSC_T_ETS_RESYNC_DO_DONE, 
    HSC_T_ETS_RESYNC_DO_DONE_2, 
    HSC_T_SSM_DO_SEND_TX_AVAIL_IND, 
    HSC_T_SSM_RF_REQ_MSG, 
    HSC_T_SSM_RF_ASSIGN_DIV_MSG, 
    HSC_T_SSM_RF_RELEASE_REQ_MSG, 
    HSC_T_SSM_RF_OP_MODE_MSG, 
    HSC_T_MPA_CHECK_ANT_STATUS, 
    HSC_T_SSM_SIGNAL_COND_INFO, 230,
    HSC_T_ALT_AFC_4_SHDR, 
    HSC_T_SSM_THAW_REQ_SUCCESS, 
    HSC_T_SSM_SHDR_TIMER_START, 
    HSC_T_SSM_SHDR_TIMER_STOP, 
    HSC_T_SSM_SHDR_TIMER_EXPIRED, 
    HSC_T_SSM_RF_UPDATE_MSG, 
    HSC_T_RM_RF_RX_RES_REQ, 
    HSC_T_RM_RF_TX_RES_REQ, 
    HSC_T_RM_RF_RX_RES_UPDATE, 
    HSC_T_RM_RF_RES_REL, 240,
    HSC_T_RM_RF_RES_RSP_REQ_CNF, 
    HSC_T_RM_RF_RES_RSP_REL_CNF, 
    HSC_T_RM_RF_RES_RSP_UPDATE_CNF, 
    HSC_T_RM_RF_RES_RSP_SUSPEND_IND, 
    HSC_T_RM_RF_RES_RSP_SUSPEND_CNF, 
    HSC_T_RM_RF_RES_RSP_RESUME_IND, 
    HSC_T_RM_RF_RAU_POWER_UP, 
    HSC_T_RM_RF_RAU_POWER_DOWN, 
    HSC_T_RM_MSG_HANDLER, 
    HSC_T_SSM_RAU_RESUME, 250,
    HSC_T_SSM_ARBS_RESUME, 
    HSC_T_RM_RF_RESERVE_REQ, 
    HSC_T_RM_RF_RESERVE_REL, 
    HSC_T_GEN_TIMER_EXPIRE, 
    HSC_T_GEN_BYPASS_SLEEP_TIMER_START, 
    HSC_T_GEN_BYPASS_SLEEP_TIMER_STOP, 
    HSC_T_GEN_SUSPEND_TIMER_START, 
    HSC_T_GEN_SUSPEND_TIMER_STOP, 
    HSC_T_GEN_RESUME_TIMER_START, 
    HSC_T_GEN_RESUME_TIMER_STOP = 260, 
    HSC_T_GEN_RESERV_TIMER_START, 
    HSC_T_GEN_RESERV_TIMER_STOP, 
    HSC_T_GEN_TIMER_START, 
    HSC_T_GEN_TIMER_STOP, 
    HSC_ERR_LATE_WAKEUP_ON_SLOT, 
    HSC_T_RM_RF_RES_REJECT_IND, 
    HSC_T_SSM_AT_PROFILE_ID, 
    HSC_T_SSM_RAU_SUSPEND, 
    HSC_T_SSM_ARBS_SUSPEND, 
    HSC_T_SSM_RAU_CAND_SUSPEND, 
    HSC_T_SSM_RAU_RECENT_SUSPEND, 
    HSC_T_SSM_RAU_CANCEL_RESUME_SUSPEND, 
    HSC_T_SSM_RAU_RESUME_IN_IGNORE_WINDOW, 
    HSC_T_MAX, 
End

Begin Enum, SLC Message Name
    CP SLC TIMER EXPIRED, 0x2180
    CP SLC_STATE_GET_MSG, 
    CP DHKEP_TIMER_EXPIRED_MSG, 
    CP DHKEP_KEYCAL_RSP_MSG, 
    CP DHKEP_SCP_RECONFIGURED_MSG, 
    CP SLC CMD MSGID LAST, 
    CP SMP CSS ACTIVATE MSG, 0x2200
    CP SMP CSS MPS INPROGRESS MSG, 
    CP SMP SCP CONFIGURATION FAILED MSG, 
    CP SMP SCP SESSION INFO MSG, 
    CP SMP SCP ACTIVATE CNF MSG, 
    CP SMP SCP GAUP PRIOR SESSION CNF MSG, 
    CP SMP AMP OPENED MSG, 
    CP SMP AMP FAILURE MSG, 
    CP SMP AMP UATI RCV MSG, 
    CP SMP OMP PRIOR SESSION GAUP UPDATE MSG, 
    CP SMP CCM PERFORM KEEPALIVE TRANS MSG, 
    CP SMP START ETS CMD, 
    CP SMP SCP RECONFIGURED MSG, 
    CP SMP SCP COMMITTED MSG, 
    CP SMP DSAR TX STATUS MSG, 
    CP SMP ALMP CONN CLOSED MSG, 
    CP SMP SESSION CLOSE ETS MSG, 
    CP SMP ALMP POWER DOWN MSG, 
    CP SMP ALMP CONN OPENED MSG, 
    CP SMP SCP PROT RESET DONE MSG, 
    CP SMP SCP SESSION COMMITTING IND, 
    CP SMP CSS 1X CONNECTION ST IND, 
    CP SMP ALMP POWER UP MSG, 
    CP SCP SMP ACTIVATE, 0x2280
    CP SCP SMP DEACTIVATE, 
    CP SCP SMP GAUP PRIOR SESSION REQ, 
    CP SCP IDP CONNECTION OPENED, 
    CP SCP CSP CONNECTION CLOSED, 
    CP SCP RUP CONNECTION LOST, 
    CP SCP PROT CONFIG REQ, 
    CP SCP PROT RECONFIGURED, 
    CP SCP PROT RECONFIG CNF, 
    CP SCP PROT CONFIG FAIL, 
    CP SCP PROT CONFIG PAUSE, 
    CP SCP PROT CONFIG RESUME, 
    CP SCP SCP NEGO START, 
    CP SCP SCP NEGO CONTINUE, 
    CP SCP DSAR TX STATUS, 
    CP SCP ALMP CONN OPENED, 
    CP SCP ALMP CONN CLOSED, 
    CP SCP ALMP CONN RELEASED, 
    CP SCP ALMP CONN FAILED, 
    CP SCP ETS CONFIG CMD, 
    CP SCP SMP SESSION CLOSING IND, 
    CP AMP SMP FAILED MSG, 0x2300
    CP AMP SMP ACTIVATE MSG, 
    CP AMP SMP DEACTIVATE MSG, 
    CP AMP RUP IDLEHO MSG, 
    CP AMP OMP UPDATED MSG, 
    AMP_CSP_CONN_CLOSED_MSG, 
    CP AMP INSP NETWORK ACQ MSG, 
    CP AMP DSAR TX STATUS MSG, 
    CP AMP DSA TEST MSG, 
    CP AMP SCP RECONFIGURED MSG, 
    CP AMP SCP COMMITTED MSG, 
    CP AMP SMP SESSION CLOSING IND, 
    DSAF FWD MSG, 0x3001
    DSAR TX STATUS MSG, 0x3881
End

Begin Enum, DScp Protocol Enum
    PHY Layer, 0x0
    CC MAC, 
    AC MAC, 
    FTC MAC, 
    RTC MAC, 
    Key Exchange, 
    Authentication, 
    Encryption, 
    Security, 
    Packet Consolidation, 
    Air-Link Management, 
    Initialization State, 
    Idle State, 
    Connected State, 
    Route Update, 
    Overhead Message, 
    Session Management, 
    Address Management, 
    Session Configuration, 
    Stream, 
    Stream 0 Application, 
    Stream 1 Application, 
    Stream 2 Application, 
    Stream 3 Application, 
    Reserved0, 
    Virtual Stream, 
    Reserved1, 
    Multimode Capability Discovery, 
End

Begin Enum, DScp OTA message Enum
    CONFIGURATION COMPLETE MESSAGE, 0x00,
    CONFIGURATION START MESSAGE, 
    SOFT CONFIGURATION COMPLETE MESSAGE, 
    LOCK CONFIGURATION MESSAGE, 
    LOCK CONFIGURATION ACK MESSAGE, 
    UNLOCK CONFIGURATION MESSAGE, 
    UNLOCK CONFIGURATION ACK MESSAGE, 
    DELETE PERSONALITY MESSAGE, 
    DELETE PERSONALITY ACK MESSAGE, 
    CONFIG REQUEST MESSAGE, 0x50,
    CONFIG RESPONSE MESSAGE, 
    ATTRIBUTE UPDATE REQUEST MESSAGE, 
    ATTRIBUTE UPDATE ACCEPT MESSAGE, 
    ATTRIBUTE UPDATE REJECT MESSAGE, 
End

Begin Enum, DScp SM State Enum
    DSCP_INACTIVE, 0x0
    DSCP_OPEN, 
    DSCP_AT_INITIATED, 
    DSCP_AN_INITIATED, 
    DSCP_NUM_STATE, 
End

Begin Enum, Amp State
    InActive, 0
    setup, 1
    Open, 2
End

Begin Enum, Smp State
    InActive, 0
    Amp Setup, 1
    Open, 2
    Closing, 3
End

Begin Enum, Smp FSM Error
    FSM NOT INITED, 0
    FSM OPEN ERR, 1
    FSM READ ERR, 2
    FSM WRITE ERR, 3
    FSM NO ERR, 4
End

Begin Enum, DHKey SM State Enum
    INACTIVE_ST, 0x0
    IDLE_ST, 
    WAIT_ATKEY_RSP_ST, 
    WAIT_SKEY_RSP_ST, 
    WAIT_KEY_CAL_DONE_ST, 
    WAIT_START_ST, 
    WAIT_START_KEY_CAL_ST, 
End

Begin Enum, DHKey DSA SubType Enum
    DHKEP_KEY_REQ, 0x0
    DHKEP_KEY_RSP, 
    DHKEP_AN_KEY_COMPLETE, 
    DHKEP_AT_KEY_COMPLETE, 
    DHKEP_GCP_CONFIG_REQ, 0x50
    DHKEP_GCP_CONFIG_RSP, 
    DHKEP_ATTRIBUTE_UPDATE_REQ, 
    DHKEP_ATTRIBUTE_UPDATE_ACCEPT, 
    DHKEP_ATTRIBUTE_UPDATE_REJECT, 
End

Begin Enum, CLC Message Name
    CLC_TIMER_EXPIRED_MSG, 0x2401
    DO_PARM_SET_MSG, 
    DO_PARM_GET_MSG, 
    CLC_DBM_DO_DATA_WRITE_ACK_MSG, 
    CLC_DBM_DO_DATA_READ_MSG, 
    CLC_GET_PSW_PARM_RSP_MSG, 
    ALMP_PSW_POWER_MSG, 0x2480
    ALMP_INSP_NTWK_ACQD_MSG, 
    ALMP_IDP_CONN_OPENED_MSG, 
    ALMP_IDP_CONN_FAILED_MSG, 
    ALMP_IDP_PAGE_REQ_MSG, 
    ALMP_IDP_FASTCONN_INITIATED_MSG, 
    ALMP_CSP_CONN_CLOSED_MSG, 
    ALMP_OMP_AN_REDIRECT_MSG, 
    ALMP_OMP_SUPERVSN_FAIL_MSG, 
    ALMP_CCM_SUPERVSN_FAIL_MSG, 
    ALMP_ACM_SUPERVSN_FAIL_MSG, 
    ALMP_RTM_SUPERVSN_FAIL_MSG, 
    ALMP_FTM_SUPERVSN_FAIL_MSG, 
    ALMP_RUP_CONN_LOST_MSG, 
    ALMP_RUP_NTWK_LOST_MSG, 
    ALMP_RUP_ASSGN_REJ_MSG, 
    ALMP_RMC_NTWK_LOST_MSG, 
    ALMP_CSS_RE_INIT_MSG, 
    ALMP_HLW_REL_CONN_MSG, 
    ALMP_HLW_CLOSE_CONN_MSG, 
    ALMP_HLW_OPEN_CONN_MSG, 
    ALMP_FTAP_OPEN_CONN_MSG, 
    ALMP_FTAP_REL_CONN_MSG, 
    ALMP_FTAP_CLOSE_CONN_MSG, 
    ALMP_RTAP_OPEN_CONN_MSG, 
    ALMP_RTAP_REL_CONN_MSG, 
    ALMP_RTAP_CLOSE_CONN_MSG, 
    ALMP_SCP_OPEN_CONN_MSG, 
    ALMP_SCP_REL_CONN_MSG, 
    ALMP_SCP_CLOSE_CONN_MSG, 
    ALMP_OMP_UPDATE_CMD_MSG, 
    ALMP_SMP_CLOSE_CONN_MSG, 
    ALMP_ETS_OPEN_CONN_MSG, 
    ALMP_ETS_REL_CONN_MSG, 
    ALMP_ETS_CLOSE_CONN_MSG, 
    ALMP_SCP_RECONFIGURED_MSG, 
    ALMP_CSS_SYS_ACQ_REQ_MSG, 
    ALMP_CSS_OOSA_WAKEUP_REQ_MSG, 
    ALMP_HSC_NTWK_LOST_MSG, 
    ALMP_DSAR_QUEUE_FULL_MSG, 
    ALMP_IDP_THAW_MSG, 
    ALMP_IDP_ACCESS_FAIL_MSG, 
    ALMP_CSS_SYSTEM_VALIDATED_MSG, 
    ALMP_SMP_POWERDOWN_CNF_MSG, 
    ALMP_IRAT_MEAS_RSP_MSG, 
    ALMP_IRAT_REDIRECT_RSP_MSG, 
    INSP_ALMP_ACTIVATE_MSG, 0x2500
    INSP_ALMP_DEACTIVATE_MSG, 
    INSP_RMC_PILOT_ACQ_RSP_MSG, 
    INSP_RMC_FREEZE_MSG, 
    INSP_RMC_THAW_MSG, 
    INSP_RMC_SYNC_OK_MSG, 
    INSP_RMC_NETWORK_RESET_DONE_MSG, 
    INSP_1XASSIST_DOACQ_MSG, 
    INSP_CSS_FREQ_RSP_MSG, 
    INSP_CSS_OOSA_SLEEP_REQ_MSG, 
    INSP_CSS_OOSA_CONT_SLEEP_REQ_MSG, 
    INSP_CSS_ACQ_ABORT_REQ_MSG, 
    INSP_HSC_OOSA_WAKEUP_IND_MSG, 
    INSP_RMC_RF_STATUS_MSG, 
    IDP_ALMP_ACTIVATE_MSG, 0x2580
    IDP_ALMP_DEACTIVATE_MSG, 
    IDP_ALMP_CLOSE_MSG, 
    IDP_ALMP_OPEN_CONN_MSG, 
    IDP_RUP_CONNECTION_INITIATED_MSG, 
    IDP_RUP_CONNECTION_OPENED_MSG, 
    IDP_RUP_IHO_RESULT_MSG, 
    IDP_HSC_FREEZE_MSG, 
    IDP_HSC_THAW_MSG, 
    IDP_HSC_WAKEUP_IND_MSG, 
    IDP_HSC_RESYNC_IND_MSG, 
    IDP_HSC_RESYNC_DENIED_MSG, 
    IDP_RMC_DOHWRFREQUEST_FAIL_MSG, 
    IDP_ACM_TX_STARTED_MSG, 
    IDP_ACM_TX_ENDED_MSG, 
    IDP_CCM_SLEEP_CAPSULE_DONE_MSG, 
    IDP_CSS_SEARCH_STARTED_MSG, 
    IDP_CSS_SEARCH_ENDED_MSG, 
    IDP_SMP_SESSION_OPENED_MSG, 
    IDP_SMP_SESSION_CLOSED_MSG, 
    IDP_OMP_UPDATED_MSG, 
    IDP_CSP_SUSPEND_PERIOD_STATUS_MSG, 
    IDP_CSP_CONNECTION_CLOSED_MSG, 
    IDP_AMP_SESSIONSEED_MSG, 
    IDP_CCM_OFFSET_MSG, 
    IDP_SLOTTED_MODE_SET_MSG, 
    IDP_1XPS_PAGINGMASK_SET_MSG, 
    IDP_SCP_RECONFIGURED_MSG, 
    IDP_SCP_COMMITTED_MSG, 
    IDP_RMC_DEACTIVATE_IND_MSG, 
    IDP_ETS_HANDOFF_MSG, 
    IDP_ALMP_SYSINFO_UPDATE_MSG, 
    IDP_DO_SYS_STATUS_GET_MSG, 
    IDP_DSAR_ACCESS_STARTED_MSG, 
    IDP_DSAR_ACCESS_ENDED_MSG, 
    IDP_PREF_CC_CYCLE_SET_MSG, 
    IDP_EXTENDED_SLOTCYCLE_SET_MSG, 
    IDP_RUP_CHANNEL_CHANGED_IND_MSG, 
    IDP_RUP_FORCE_IHO_RSP_MSG, 
    IDP_IRAT_MEAS_REQ, 
    IDP_IRAT_HANDOFF_REQ, 
    IDP_OMP_OTHERRAT_UPDATED_MSG, 
    IDP_CSS_MEAS_SENT_IND, 
    IDP_SMP_SESSION_STATUS_MSG, 
    IDP_IRAT_DO_IDLE_LONG_SLEEP_REQ, 
    IDP_IRAT_DO_IDLE_LONG_SLEEP_WAKEUP_REQ, 
    IDP_HSC_TX_AVAILABLE_IND, 
    IDP_RUP_DFS_END_MSG, 
    IDP_DFS_TIMER_SET_MSG, 
    CLC_IRAT_WAKEUP_RSP, 
    IDP_1X_REG_ACCEPTED_MSG, 
    CLC_CMD_MSGID_IDP_LAST, 
    CSP_ALMP_ACTIVATE_MSG, 0x2600
    CSP_ALMP_DEACTIVATE_MSG, 
    CSP_ALMP_CLOSE_CONN_MSG, 
    OMP_IDP_ACTIVATE_MSG, 0x2680
    OMP_CSP_ACTIVATE_MSG, 
    OMP_IDP_DEACTIVATE_MSG, 
    OMP_ALMP_DEACTIVATE_MSG, 
    OMP_RUP_IDLE_HANDOFF_MSG, 
    OMP_CSP_CONN_CLOSED_MSG, 
    OMP_SCP_RECONFIGURED_MSG, 
    OMP_SCP_COMMITTED_MSG, 
    OMP_ACM_SYS_PARMS_UPD_REQ, 
    OMP_IRAT_MCC_REQ, 
    OMP_CSS_SYSTEM_VALIDATED_MSG, 
    OMP_TEST_INSERT_DFS_NGHBR_MSG, 
    CLC_IRATRFC_SERVICE_CNF, 0x2740
    CLC_IRATRFC_SERVICE_REJ, 
    CLC_IRATRFC_SUSPEND_REQ, 
    CLC_IRATRFC_RESUME_IND, 
    CLC_IRATRFC_BAND_CONFLICT_IND, 
    CLC_DSAF_MSG, 0x3000
    CLC_DSAF_FWD_MSG, 
    CLC DSAR TX STATUS MSG, 0x3881
End

Begin Enum, OMP State
    OMP Inactive, 0
    OMP Active, 
End

Begin Enum, OMP State Name
    OMP_INACTIVE_STATE, 0
    OMP_ACTIVE_STATE, 
    OMP_UNKNOWN_STATE, 
End

Begin Enum, OMP Message Name
    OMP_QUICKCONFIG_MESSAGE, 0
    OMP_SECTORPARAMETER_MESSAGE, 
End

Begin Enum, OMP Timer
    OMP QC Supv Timer, 0
    OMP SC Supv Timer, 
End

Begin Enum, OMP CacheRecord Action
    OMP CacheRec Not Found, 0
    OMP CacheRec Found, 
    OMP CacheRec Added, 
    OMP CacheRec Removed, 
End

Begin Enum, OMP Cache State
    OMP CacheRec Not Used, 0
    OMP CacheRec Used For Idle, 
    OMP CacheRec Used For Conn, 
End

Begin Enum, IDP State
    IDP INACTIVE, 0
    IDP MONITOR, 
    IDP SLEEP, 
    IDP CONN SETUP, 
    IDP FREEZE PENDING, 
    IDP FREEZE, 
    IDP CONN FROZEN ST, 
End

Begin Enum, IDP Hash Name
    R, 0
    Channel, 
End

Begin Enum, RMC Association Tag Name
    NULL_ASSOCIATION, 0
    PN_ASSOCIATION, 
    DATA_ASSOCIATION, 
    BOTH_ASSOCIATION, 
    NON_ASSO_SCAN, 
End

Begin Enum, CLC Timer Name
    CLC_OMP_QC_SUPERVISION_TIMER, 0
    CLC_OMP_SP_SUPERVISION_TIMER, 
    CLC_IDP_CONNECTION_SETUP_TIMER, 
    CLC_IDP_PAGE_PENDING_TIMER, 
    CLC_IDP_SUSPENDPERIOD_TIMER, 
    CLC_IDP_WFR_LONG_SLEEP_TIMER, 
    CLC_IDP_WFR_EARLY_WAKEUP_TIMER, 
    CLC_INSP_SYNC_ACQ_TIMER, 
    CLC_INSP_TIMING_TIMER, 
    CLC_IDP_NO_SRCH_DONE_WAKEUP_TIME, 
    CLC_INSP_PILOT_ACQ_TIMER, 
    CLC_OMP_IHO_OHMDECODE_TIMER, 
    CLC_IDP_BLOCK_IHO_WAKE_REDUCTION_TIMER, 
    CLC_IDP_CC_SYNC_CAP_CHECK_TIMER, 
    CLC_IDP_DFS_TIMER, 
    CLC_INSP_WAITFIR_ANTENNA_TIMER, 
    CLC_ALMP_IRAT_MEAS_TIMER, 
    CLC_ALMP_CRS_NW_SEARCH_TIMER, 
    CLC_IRATRFC_SERVICEREQ_RETRY_TIMER, 
    CLC_IRATRFC_SERVICEREQ_WAIT_ACK_TIMER, 
    CLC_ALMP_IDLE_DELAYED_GSRDM_TIMER, 
    CLC_CONTROL_INCPRI_TIMER, 
    CLC_IDP_SLEEP_TXRX_SUSPEND_DELAY_TIMER, 
    CLC_IRATRFCREJ_SUSPEND_TIMER, 
End

Begin Enum, SchModeT
    HW_RESET, 0
    HW_PAUSE, 1
    INIT_ACQ_PN_SRCH, 2
    INIT_ACQ_ONLINE_PN_SRCH, 3
    INIT_ACQ_VERIF_SRCH, 4
    MINI_ACQ, 5
    FAST_SEARCH, 6
    ONLINE, 7
    OFFSET_ADJ, 8
    FAST_FULL_SEARCH, 9
    OFFLINE_SHORT, 10
    OFFLINE_LONG, 11
    INIT_ACQ_OFFLINE_SHORT, 12
    INIT_ACQ_OFFLINE_LONG, 13
    DFS, 14
End

Begin Enum, RmcRfPathT
    NONE, 0x0
    MAIN, 
    DIV, 
    MAIN_DIV, 
    TX, 
    MAIN_TX, 
    DIV_TX, 
    MAIN_DIV_TX, 
End

Begin Enum, RmcModemStateT
    RMC_INACTIVE, 0
    RMC_INITIAL_SEARCH_PENDING, 1
    RMC_INITIAL_SEARCH, 2
    RMC_MINI_ACQ, 3
    RMC_SYNC, 4
    RMC_ONLINE_SEARCH, 5
    RMC_PAUSED, 6
    RMC_LTE_CONNECTED_DO_SEARCH, 7
    RMC_LTE_IDLE_DO_SEARCH, 8
    RMC_LTE_CONNECTED_DO_INIT_ACQ, 9
    RMC_LTE_IDLE_DO_INIT_ACQ, 10
End

Begin Enum, DoMeasRfCtrlT
    RF_OFF, 0
    RF_ON, 1
End

Begin Enum, Rup OTA MessageId
    RouteUpdate, 0
    TrafficChannelAssignment, 1
    TrafficChannelComplete, 2
    ResetReport, 3
    NeighborList, 4
    AttributeOverride, 5
    AttributeOverrideResponse, 6
    RouteUpdateRequest, 7
    ConfigurationRequest, 0x50
    ConfigurationResponse, 0x51
    AttributeUpdateRequest, 0x52
    AttributeUpdateAccept, 0x53
    AttributeUpdateReject, 0x54
End

Begin Enum, Rup State Enum
    Inactive, 0
    Idle, 1
    Connected, 2
    IRAT_MEASURE, 3
End

Begin Enum, IdleHO Reason
    NULL, 0
    Immediately, 1
    Delayed, 2
    ChannelChanged, 3
End

Begin Enum, Rmc Message Name
    NONE, 0x0
    MPA_RF_RESOURCE_REQ_MSG, 0x2000,
    MPA_RF_RESOURCE_UPDATE_REQ_MSG, 
    MPA_RF_RESOURCE_ASSIGN_MSG, 
    MPA_RF_RELEASE_REQ_MSG, 
    MPA_RF_RELEASE_RSP_MSG, 
    MPA_RF_SHUTOFF_REQ_MSG, 
    MPA_RF_SHUTOFF_RSP_MSG, 
    MPA_RF_PREEMPT_REQ_MSG, 
    MPA_RF_PREEMPT_RSP_MSG, 
    MPA_RF_FORCE_RELEASE_REQ_MSG, 
    MPA_RF_FORCE_RELEASE_RSP_MSG, 
    MPA_RF_REQUEST_CANCEL_MSG, 
    MPA_RF_REQUEST_CANCEL_RSP_MSG, 
    RMC_INSP_PILOT_ACQ_MSG, 0x2780
    RMC_INSP_1XASSIST_DOACQ_MSG, 
    RMC_ALMP_NETWORK_RESET_MSG, 
    RMC_ALMP_DEACTIVATE_MSG, 
    RMC_IDP_DEACTIVATE_MSG, 
    RMC_RCP_RFDONE_MSG, 
    RMC_RESERVED1_MSG, 
    RMC_MPA_RF_PREEMPT_REQ_MSG, 
    RMC_MPA_RF_SHUTOFF_REQ_MSG, 
    RMC_FMP_MODE_CHANGE_MSG, 
    RMC_HSC_RXACTIVATE_MSG, 
    RMC_HSC_STOP_CMD_MSG, 
    RMC_RF_DIV_REQ_MSG, 
    RMC_INSP_NETWORK_RESET_MSG, 
    RMC_RESERVED2_MSG, 
    RMC_IDP_RXACTIVATE_MSG, 
    RMC_RUP_RXDEACTIVATE_MSG, 
    RMC_RUP_RXACTIVATE_MSG, 
    RMC_ETS_PREEMPT_MSG, 
    RMC_ETS_RXACTIVATE_MSG, 
    RMC_HSC_STOP_TX_MSG, 
    RMC_HSC_OOSA_REQ_MSG, 
    RMC_HWD_RESET_ACK_MSG, 
    RMC_RX_DIV_CTRL_MSG, 
    RMC_RSSI_REPORT_ACK_MSG, 
    RMC_TEMP_ADJ_UPDATE_MSG, 
    RMC_FREQ_ADJ_UPDATE_MSG, 
    RMC_RESERVED5_MSG, 
    RMC_HSC_SLEEP_OVER_MSG, 
    RMC_HWD_RX_AGC_CONFIG_MSG, 
    RMC_SET_PRIORITY_STATE_MSG, 
    RMC_ACCESS_END_IND_MSG, 
    RMC_SCH_ARTD_METRICS_MSG, 
    RMC_SET_BAS_MODE_MSG, 
    RMC_TOP_CMD_MSGID_LAST, 
    SCH_RUP_SEARCHPARMS_UPDATE_MSG, 0x2800
    SCH_RUP_PILOT_UPDATE_MSG, 
    RMC_IRAT_SRCH_CFG_MSG, 
    RMC_IRAT_GAP_ABORT_REQ_MSG, 
    RMC_CMD_MSGID_SCH_LAST, 
    FMP_INSP_SYNC_MSG, 0x2880
    FMP_ALMP_CONNECTION_CLOSED_MSG, 
    FMP_CCM_CCSHORTPKTIND_MSG, 
    FMP_TMR_EXPIRED_MSG, 
    FMP_EQ_TMR_EXPIRED_MSG, 
    CSM_DRC_RX_FIXED_RATE_START_MSG, 0x2900
    CSM_DRC_RX_FIXED_RATE_END_MSG, 
    RUP_SCH_RESULT_RPT_MSG, 0x2A00
    RUP_OMP_UPDATE_CMD_MSG, 
    RUP_OMP_SNROUTEUPDATE_CMD_MSG, 
    RUP_ACM_TXSTART_CMD_MSG, 
    RUP_ACM_TXEND_CMD_MSG, 
    RUP_ALMP_ACTIVATE_CMD_MSG, 
    RUP_ALMP_DEACTIVATE_CMD_MSG, 
    RUP_ALMP_CLOSE_CMD_MSG, 
    RUP_CSP_CLOSE_CMD_MSG, 
    RUP_IDP_CONNST_TMSTATE_CMD_MSG, 
    RUP_IDP_FREEZE_MSG, 
    RUP_IDP_THAW_MSG, 
    RUP_RTM_LINKACQ_CMD_MSG, 
    RUP_TIMER_EXPIRED_CMD_MSG, 
    RUP_RMC_RXDEACTIVATE_IND_MSG, 
    RUP_RTM_RXDEACTIVATE_IND_MSG, 
    RUP_SCP_RECONFIGURED_MSG, 
    RUP_SCP_COMMITTED_MSG, 
    RUP_ACM_ACCESS_HO_ENABLE_MSG, 
    RUP_ACM_ACCESS_HO_DISABLE_MSG, 
    RUP_IDP_STOP_REM_MSG, 
    RUP_OMP_IHO_ENABLED_MSG, 
    RUP_IDP_FORCE_IHO_REQ_MSG, 
    RUP_IDP_IRAT_MEASREPORT_REQ, 
    RUP_IDP_IRAT_HANDOFF_REQ, 
    RUP_IRAT_CUR_SYS_MEAS_REQ, 
    RUP_IRAT_RAT_SIG_MON_REQ, 
    RUP_FMP_INIT_ASSIGN_MSG, 
    RUP_RMC_ACTIVATE_IND, 
    RUP_RMC_DEACTIVATE_IND, 
    RUP_RMC_STOP_MSG, 
    RMC_CMD_MSGID_RUP_LAST, 
    RMC_RF_DIV_RELEASE_MSG, 
    RMC_CSS_DOSCAN_SLOTNUM_IND, 
    RUP_IDP_DFS_START_MSG, 
    RUP_IDP_DFS_ABORT_MSG, 
    RUP_CLC_DFS_SETTINGS_MSG, 
    RUP_IOP_GET_DFS_INFO_MSG, 
    L1ECD_IRAT_SERVICE_CNF, 0x2A40
    L1ECD_MASTER_RAT_CNF, 
    L1ECD_IRAT_CELL_LIST_CNF, 
    L1ECD_IRAT_MEAS_CNF, 
    L1ECD_IRAT_MEAS_REPORT_IND, 
    L1ECD_EUTRAN_GAP_IND, 
    L1ECD_CDMA_GAP_ABORT_CNF, 
    L1ECD_IRAT_STOP_ALL_CNF, 
    L1CDE_IRAT_SERVICE_REQ, 
    L1CDE_MASTER_RAT_REQ, 
    L1CDE_CDMA_IRAT_CELL_LIST_REQ, 
    L1CDE_CDMA_IRAT_MEAS_REQ, 
    L1CDE_STOP_GAP_IND_CMD, 
    L1CDE_EUTRAN_GAP_ABORT_REQ, 
    L1CDE_IRAT_STOP_ALL_REQ, 
    L1CDE_IRAT_MEAS_MODE_CHANGE_CMD, 
    L1CDE_GAP_OFFSET_CHANGE_IND, 
    L1UCD_IRAT_SERVICE_CNF, 
    L1UCD_MASTER_RAT_CNF, 
    L1UCD_UTRAN_GAP_IND, 
    L1UCD_CDMA_GAP_ABORT_CNF, 
    L1CDU_IRAT_SERVICE_REQ, 
    L1CDU_MASTER_RAT_REQ, 
    L1CDU_UTRAN_GAP_ABORT_REQ, 
    L1GCD_IRAT_SERVICE_CNF, 
    L1GCD_MASTER_RAT_CNF, 
    L1GCD_GERAN_GAP_IND, 
    L1GCD_CDMA_GAP_ABORT_CNF, 
    L1CDG_IRAT_SERVICE_REQ, 
    L1CDG_MASTER_RAT_REQ, 
    L1CDG_GERAN_GAP_ABORT_REQ, 
    L1TDCD_IRAT_SERVICE_CNF, 
    L1TDCD_MASTER_RAT_CNF, 
    L1TDCD_TDRAN_GAP_IND, 
    L1TDCD_CDMA_GAP_ABORT_CNF, 
    L1CDTD_IRAT_SERVICE_REQ, 
    L1CDTD_MASTER_RAT_REQ, 
    L1CDTD_TDRAN_GAP_ABORT_REQ, 
    L1CD_PLMN_SEARCH_REQ, 
    L1CD_STOP_PLMN_SEARCH_REQ, 
    L1CD_IRAT_MEAS_CFG_REQ, 
    L1CD_IRAT_MEAS_REQ, 
    L1CD_IRAT_RESEL_REQ, 
    L1CD_IRAT_RESEL_RESULT_IND, 
    L1CD_ACTIVATE_REQ, 
    L1CD_DEACTIVATE_REQ, 
    L1CD_DO_STATE_IND, 
    IRAT_RMC_MEAS_REPORT_MSG, 
    IRAT_RMC_RF_ASSIGN_IND, 
    IRAT_RMC_RF_RELEASE_IND, 
    CLC_IRAT_IDP_SLEEP_IND, 
    CLC_IRAT_WAKEUP_IND, 
    CSS_DO_STOP_GAP_REQ, 
    CSS_DO_SEARCH_GAP_IND, 
    DSAR_TX_STATUS_MSG, 0x3881
End

Begin Enum, RmcTimerId
    RCM_VAL_RSSI_REPORT_TIMER_ID, 
End

Begin Enum, DFS Trace Type Enum
    DFS_SET_STATE, , RO
    DFS_IDP_START, , RO
    DFS_IDP_ABORT, , RO
    DFS_CLC_SETTINGS, , RO
    DFS_INIT, , RO
    DFS_CRITERIA_MET, , RO
    DFS_CRITERIA_NOTMET, , RO
    DFS_RMC_RXDEACT, , RO
    DFS_RESTORE_SERVING, , RO
    RX_DEACTIVATE_IND, , RO
    DFS_TIMER_START, , RO
    DFS_TIMER_STOP, , RO
    DFS_TIMER_EXPIRE, , RO
    DFS_SCH_PILOT_UPDATE, , RO
    DFS_IDLE_SRCH_RSLT, , RO
    DFS_CONN_SRCH_RSLT, , RO
    DFS_SEND_IDP_DFS_END, , RO
    DFS_ADD_CHAN_TO_LIST, , RO
End

Begin Enum, DFS State Enum
    DFS_DISABLED_STATE, 
    DFS_IDLE_STATE, 
    DFS_INITIATE_STATE, 
    DFS_RXDEACTIVATE_STATE, 
    DFS_INPROG_STATE, 
    DFS_ABORT_STATE, 
    DFS_ROUTE_UPDATE_STATE, 
    DFS_IDLE_HO_STATE, 
    DFS_RESTORE_SERVING_STATE, 
End

Begin Enum, DFS Start Code Enum
    IDP_DFS_SLOTTED, 
    IDP_DFS_NON_SLOTTED, 
End

Begin Enum, RxDeactivate Cause Enum
    RX_DEACT_IDP_HO, 
    RX_DEACT_IDP_CHAN_ASSIGN, 
    RX_DEACT_IRAT_MEAS_REQ, 
    RX_DEACT_IRAT_HO_REQ, 
    RX_DEACT_IRAT_CHAN_HASH, 
    RX_DEACT_RUP_CHAN_ASSIGN, 
    RX_DEACT_DFS_START, 
    RX_DEACT_DFS_RESTORE_SERVING, 
    RX_DEACT_DFS_IDLE_HO, 
End

Begin Enum, CsmProcessorCmdT
    CSM_UPDATE_C2I_CMD, 0x0
    CSM_UPDATE_SECTOR_INFO_CMD, 
    CSM_SWITCH_DONE_CMD, 
    CSM_ACTIVATE_CMD, 
    CSM_DEACTIVATE_CMD, 
    CSM_ENTER_FIXED_RATE_MODE_CMD, 
    CSM_EXIT_FIXED_RATE_MODE_CMD, 
    CSM_PREEMPT_DO_CMD, 
    CSM_RESUME_DO_CMD, 
End

Begin Enum, CsmSwitchStageT
    MAKING_DECISION, 0x0
    DECISION_MADE, 
    HW_DSC_PROGRAMMED, 
    HW_DRC_PROGRAMMED, 
    FR_ENTERING, 
    FR_ENTERING_HW_PROGRAMMED, 
    FR_READY, 
    FR_EXITING, 
    FR_EXITING_HW_PROGRAMMED, 
End

Begin Enum, CsmSwitchDecisionStatusT
    Serving Is Strongest Available, 0x0
    Serving Is Strongest and All Unavailable, 
End

Begin Enum, Finger Alloc Status
    0 NOT_DET (Disable), 0
    1 UNCH_ALLOC (Keep), 1
    3 CH_ALLOC (New Alloc), 3
End

Begin Enum, RmcFmpMrcMmseCombModeT
    MRC_Mode, 0
    MMMSE_Mode, 1
End

Begin Enum, Rmc Command Type
    Commit, 0x0
    Deactivate, 
    NetwkRst, 
    FmpSchCfg, 
    Rxpinit, 
    DmaEnb, 
    DmaDisb, 
    RxpCfg, 
    RxpDisb, 
    PambEnb, 
    PambInit, 
    PambIdle, 
    PambTrf, 
    ClcAct, 
    ClcDeact, 
    FngAssInitAcq, 
    FmpInit2Idle, 
    FmpTrf2Idle, 
    FmpIdle2Init, 
    MpaShutoff, 
    MpaPreempt, 
    HscAct, 
    HscStop, 
    HscStopTx, 
    RfDone, 
    FngDisb, 
    SchRst, 
    Schinit, 
    SchInitOnline, 
    SchOffAdj, 
    SchVerif, 
    SchMini, 
    SchFast, 
    SchOnline, 
    RfRxTuneComplete, 
    RfTuneDiv, 
    RfRxAgcSettle, 
    RfAgcSettleD, 
    RfRxPathSet, 
    RfDivSet, 
    SchFastFull, 
    RfRel, 
    RfOff, 
    SchDFS, 
End

Begin Enum, Rmc Mpa Mdm Antenna Type
    NONE, 0x0
    MAIN, 0x1
    DIV, 0x2
    MAIN_DIV, 0x3
    TX, 0x4
    MAIN_TX, 0x5
    MAIN_DIV_TX, 0x7
End

Begin Enum, RxAgcState
    RMC_RXAGC_DISABLED, 0x0
    RMC_RXAGC_INIT_ACQ, 
    RMC_RXAGC_FAST_PREP, 
    RMC_RXAGC_FAST_ENABLED, 
    RMC_RXAGC_STEADY_STATE, 
    RMC_RXAGC_TRAFFIC, 
    RMC_RXAGC_TEST_MODE, 
End

Begin Enum, AfcState
    RMC_AFC_DISABLED, 0,
    RMC_AFC_INIT_ACQ_NO_PILOT, 
    RMC_AFC_INIT_ACQ_PILOT_FOUND, 
    RMC_AFC_INIT_ACQ_FINGER_ALLOC, 
    RMC_AFC_SLOTTED, 
    RMC_AFC_ONLINE, 
    RMC_AFC_TEST_MODE, 
End

Begin Enum, L1CD None State
    L1CD_NONE_INIT_ST, 0x0
    L1CD_NONE_WFR_MASTER_RAT_CNF_ST, 
    L1CD_NONE_MAX_ST, 
End

Begin Enum, L1CD Slave State
    L1CD_SLAVE_IDLE_ST, 0x0
    L1CD_SLAVE_PLMN_SRCH_ST, 
    L1CD_SLAVE_PLMN_SRCH_WFR_SERVICE_CNF_ST, 
    L1CD_SLAVE_PLMN_SRCH_WFR_GAP_IND_ST, 
    L1CD_SLAVE_PLMN_SRCH_WFR_RF_RELEASE_ST, 
    L1CD_SLAVE_IRAT_MEAS_WFR_GAP_IND_ST, 
    L1CD_SLAVE_IRAT_MEAS_WFR_RF_ASSIGN_IND_ST, 
    L1CD_SLAVE_IRAT_MEAS_WFR_MEAS_RPT_ST, 
    L1CD_SLAVE_L2C_RESEL_WFR_SERVICE_CNF_ST, 
    L1CD_SLAVE_L2C_RESEL_ST, 
    L1CD_SLAVE_HPLMN_ACTIVATE_SERVICE_CNF_ST, 
    L1CD_SLAVE_GAP_ABORT_ST, 
    L1CD_SLAVE_WFR_MASTER_RAT_CNF_ST, 
    L1CD_SLAVE_MAX_ST, 
End

Begin Enum, L1CD Master State
    L1CD_MASTER_ACTIVE_ST, 0x0
    L1CD_MASTER_WFR_RF_RELEASE_ST, 
    L1CD_MASTER_CELL_LIST_WFR_CNF_ST, 
    L1CD_MASTER_PLMN_SRCH_ST, 
    L1CD_MASTER_PLMN_WFR_GAP_ABORT_CNF_ST, 
    L1CD_MASTER_IRAT_MEAS_ST, 
    L1CD_MASTER_MEAS_WFR_MEAS_REQ_CNF_ST, 
    L1CD_MASTER_MEAS_WFR_MEAS_RPT_ST, 
    L1CD_MASTER_MEAS_WFR_GAP_ABORT_CNF_ST, 
    L1CD_MASTER_C2L_RESEL_ST, 
    L1CD_MASTER_C2L_RESEL_WFR_RF_RELEASE_ST, 
    L1CD_MASTER_WFR_MASTER_RAT_CNF_ST, 
    L1CD_MASTER_IDLE_ST, 
    L1CD_MASTER_MAX_ST, 
End

Begin Enum, L1CD Mode
    L1CD_NONE_MODE, 0x0
    L1CD_SLAVE_MODE, 
    L1CD_MASTER_MODE, 
End

Begin Enum, L1CD Action
    L1CD_NO_ACTION, 0x0
    L1CD_START_PLMN_SEARCH_ACTION, 
    L1CD_STOP_PLMN_SEARCH_ACTION, 
    L1CD_HPLMN_ACTIVATE_ACTION, 
    L1CD_L2C_RESEL_ACTION, 
    L1CD_EUTRAN_GAP_ABORT_ACTION, 
    L1CD_STOP_ALL_ACTION, 
    L1CD_MASTER_REQ_NONE_ACTION, 
    L1CD_ACTIVATE_ACTION, 
    L1CD_L2C_SERVICE_REQ_ACTION, 
    L1CD_DEACTIVATE_ACTION, 
End

Begin Enum, L1CDRATIdT
    L1CD_IRAT_RAT_GERAN, 0
    L1CD_IRAT_RAT_UTRAN, 1
    L1CD_IRAT_RAT_EUTRAN, 2
    L1CD_IRAT_RAT_TDSCDMA, 3
    L1CD_IRAT_RAT_CDMA, 4
    L1CD_IRAT_RAT_NONE, 5
End

Begin Enum, L1CDFunctionId
    L1cdSlaveHandlerIratRmcRfReleaseInd(), ,RO
End

Begin Enum, L1CDMsgHandlerId
    L1cdProcL1ECDIratServiceCnf(), ,RO
    L1cdProcL1ECDMasterRatCnf(), ,RO
    L1cdProcL1ECDIratCellListCnf(), ,RO
    L1cdProcL1ECDIratMeasCnf(), ,RO
    L1cdProcL1ECDIratMeasReportInd(), ,RO
    L1cdProcL1ECDEutranGapInd(), ,RO
    L1cdProcL1ECDCdmaGapAbortCnf(), ,RO
    L1cdProcL1ECDIratStopAllCnf(), ,RO
    L1cdProcL1CDEIratServiceReq(), ,RO
    L1cdProcL1CDEMasterRatReq(), ,RO
    L1cdProcL1CDECdmaIratCellListReq(), ,RO
    L1cdProcL1CDECdmaIratMeasReq(), ,RO
    L1cdProcL1CDEStopGapIndCmd(), ,RO
    L1cdProcL1CDEEutranGapAbortReq(), ,RO
    L1cdProcL1CDEIratStopAllReq(), ,RO
    L1cdProcL1CDEIraMeasModeChangeCmd(), ,RO
    L1cdProcL1CDEGapOffsetChangeInd(), ,RO
    L1cdProcL1UCDIratServiceCnf(), ,RO
    L1cdProcL1UCDMasterRatCnf(), ,RO
    L1cdProcL1UCDUtranGapInd(), ,RO
    L1cdProcL1UCDCdmaGapAbortCnf(), ,RO
    L1cdProcL1CDUIratServiceReq(), ,RO
    L1cdProcL1CDUMasterRatReq(), ,RO
    L1cdProcL1CDUtranGapAbortReq(), ,RO
    L1cdProcL1GCDIratServiceCnf(), ,RO
    L1cdProcL1GCDMasterRatCnf(), ,RO
    L1cdProcL1GCDGeranGapInd(), ,RO
    L1cdProcL1GCDCdmaGapAbortCnf(), ,RO
    L1cdProcL1CDGIratServiceReq(), ,RO
    L1cdProcL1CDGMasterRatReq(), ,RO
    L1cdProcL1CDGGeranGapAbortReq(), ,RO
    L1cdProcL1TDCDIratServiceCnf(), ,RO
    L1cdProcL1TDCDMasterRatCnf(), ,RO
    L1cdProcL1TDCDUtranGapInd(), ,RO
    L1cdProcL1TDCDCdmaGapAbortCnf(), ,RO
    L1cdProcL1CDTDIratServiceReq(), ,RO
    L1cdProcL1CDTDMasterRatReq(), ,RO
    L1cdProcL1CDTDTdranGapAbortReq(), ,RO
    L1cdProcL1CDPlmnSearchReq(), ,RO
    L1cdProcL1CDStopPlmnSearchReq(), ,RO
    L1cdProcL1CDIratMeasCfgReq(), ,RO
    L1cdProcL1CDIratMeasReq(), ,RO
    L1cdProcL1CDIratReselReq(), ,RO
    L1cdProcL1CDIratReselResultInd(), ,RO
    L1cdProcL1CDActivateReq(), ,RO
    L1cdProcL1CDDeactivateReq(), ,RO
    L1cdProcL1CDDOStateInd(), ,RO
    L1cdProcIratRmcMeasReportMsg(), ,RO
    L1cdProcessIratRmcRfAssignInd(), ,RO
    L1cdProcIratRmcRfReleaseInd(), ,RO
    L1cdProcCldIratIdpSleepInd(), ,RO
    L1cdProcClcIratWakeupInd(), ,RO
End

Begin Enum, L1CDGapPurposeT
    L1CD_GAP_PURPOSE_MEAS, 0
    L1CD_GAP_PURPOSE_PLMN, 1
    L1CD_GAP_PURPOSE_INVALID, 2
End

Begin Enum, L1CDGapId
    L1CD_DRX_GAP_ID, 0
    L1CD_MEAS_GAP_STREAM_0, 1
    L1CD_MEAS_GAP_STREAM_1, 2
    L1CD_MEAS_GAP_STREAM_2, 3
    L1CD_MEAS_GAP_STREAM_3, 4
    L1CD_MEAS_GAP_STREAM_4, 5
    L1CD_MEAS_GAP_STREAM_5, 6
    L1CD_MEAS_GAP_STREAM_0_REF_ONLY, 7
    L1CD_MEAS_GAP_STREAM_MAX, 8
End

Begin Enum, L1CDEIratServiceReqModeT
    L1CDE_START_PLMN_SEARCH_LTE, 0
    L1CDE_FINISH_PLMN_SEARCH_LTE, 1
    L1CDE_START_CELL_RESEL_LTE, 2
    L1CDE_TAKEOVER_FROM_LTE, 3
End

Begin Enum, L1CDEutranMeasModeT
    L1CDE_IRAT_MEAS_MODE_IDLE, 0
    L1CDE_IRAT_MEAS_MODE_IDLE_HIGH_PRIO, 1
    L1CDE_IRAT_MEAS_MODE_CONNECTED_GP0, 2
    L1CDE_IRAT_MEAS_MODE_CONNECTED_GP1, 3
    L1CDE_IRAT_MEAS_MODE_CONNECTED_GP0_POS, 4
    L1CDE_IRAT_MEAS_MODE_IDLE_GP0, 5
    L1CDE_IRAT_MEAS_MODE_IDLE_GP0_HIGH_PRIO, 6
    L1CDE_IRAT_MEAS_MODE_IDLE_GP1, 7
    L1CDE_IRAT_MEAS_MODE_IDLE_GP1_HIGH_PRIO, 8
    L1CDE_IRAT_MEAS_MODE_NONE, 9
End

Begin Enum, L1CDIratGapRatModeT
    L1CD_IRAT_GAP_RAT_MODE_GERAN_RX, 0
    L1CD_IRAT_GAP_RAT_MODE_GERAN_TX, 1
    L1CD_IRAT_GAP_RAT_MODE_GERAN_WORSTCASE, 2
    L1CD_IRAT_GAP_RAT_MODE_EUTRAN_RX, 3
    L1CD_IRAT_GAP_RAT_MODE_EUTRAN_TX, 4
    L1CD_IRAT_GAP_RAT_MODE_EUTRAN_WORSTCASE, 5
    L1CD_IRAT_GAP_RAT_MODE_TDS_RX, 6
    L1CD_IRAT_GAP_RAT_MODE_TDS_TX, 7
    L1CD_IRAT_GAP_RAT_MODE_TDS_WORSTCASE, 8
    L1CD_IRAT_GAP_RAT_MODE_WCDMA_RX, 9
    L1CD_IRAT_GAP_RAT_MODE_WCDMA_TX, 10
    L1CD_IRAT_GAP_RAT_MODE_WCDMA_WORSTCASE, 11
    L1CD_IRAT_GAP_RAT_MODE_CDMA_RX, 12
    L1CD_IRAT_GAP_RAT_MODE_CDMA_TX, 13
    L1CD_IRAT_GAP_RAT_MODE_CDMA_WORSTCASE, 14
    L1CD_IRAT_GAP_RAT_MODE_WORSTCASE, 15
    L1CD_IRAT_GAP_RAT_MODE_MAX, 16
End

Begin Enum, L1CDUIratServiceReqModeT
    L1CDU_START_PLMN_SEARCH_3G, 0
    L1CDU_FINISH_PLMN_SEARCH_3G, 1
    L1CDU_TAKEOVER_FROM_3G, 2
End

Begin Enum, L1CDGIratServiceReqModeT
    L1CDG_START_PLMN_SEARCH_2G, 0
    L1CDG_FINISH_PLMN_SEARCH_2G, 1
    L1CDG_TAKEOVER_FROM_2G, 2
End

Begin Enum, L1CDTDIratServiceReqModeT
    L1CDTD_START_PLMN_SEARCH_TD, 0
    L1CDTD_FINISH_PLMN_SEARCH_TD, 1
    L1CDTD_TAKEOVER_FROM_TD, 2
End

Begin Enum, L1CDCdmaMeasModeT
    L1CD_IRAT_MEAS_MODE_IDLE, 0
    L1CD_IRAT_MEAS_MODE_CONNECTED_RSRP, 1
    L1CD_IRAT_MEAS_MODE_CONNECTED_BOTH, 2
    L1CD_MEAS_MODE_MAX, 3
End

Begin Enum, L1CDDOStateT
    L1CD_DO_INACTIVE_ST, 0
    L1CD_DO_INIT_ST, 1
    L1CD_DO_MPSS_ST, 2
    L1CD_DO_SYSTEMLOST_ST, 3
    L1CD_DO_IDLE_ST, 4
    L1CD_DO_CONN_ST, 5
    L1CD_DO_REGED_ST, 6
    L1CD_DO_COLD_ST, 7
    L1CD_DO_INVALID_ST, 8
    L1CD_DO_FORCE_DORMANCY_ST, 9
End

Begin Enum, L1CDSendApiId
    L1CDApiSendL1CDPlmnSearchCnf(), ,RO
    L1CDApiSendL1CDStopPlmnSearchCnf(), ,RO
    L1CDApiSendL1CDIratReselCnf(), ,RO
    L1CDApiSendL1CDActivateCnf(), ,RO
    L1CDApiSendL1CDDeactivateCnf(), ,RO
    L1CDApiSendL1CDIratMeasCfgCnf(), ,RO
    L1CDApiSendL1CDIratMeasCnf(), ,RO
    L1CDApiSendL1CDIratMeasReportInd(), ,RO
    L1CDApiSendL1ECDIratServiceReq(), ,RO
    L1CDApiSendL1ECDStopGapIndCmd(), ,RO
    L1CDApiSendL1ECDIratCellListReq(), ,RO
    L1CDApiSendL1ECDIratMeasReq(), ,RO
    L1CDApiSendL1ECDCdmaGapAbortReq(), ,RO
    L1CDApiSendL1ECDMasterRatReq(), ,RO
    L1CDApiSendL1CDEEutranGapAbortCnf(), ,RO
    L1CDApiSendL1CDEIratStopAllCnf(), ,RO
    L1CDApiSendL1CDECdmaIratMeasReportInd(), ,RO
    L1CDApiSendL1CDECdmaIratCellListCnf(), ,RO
    L1CDApiSendL1CDECdmaGapInd(), ,RO
    L1CDApiSendL1CDEIratServiceCnf(), ,RO
    L1CDApiSendL1CDECdmaIratMeasCnf(), ,RO
    L1CDApiSendL1CDEMasterRatCnf(), ,RO
    L1CDApiSendClcIratWakeupRsp(), ,RO
    L1CDApiSendRmcIratSrchCfgMsg(), ,RO
    L1CDApiSendRmcIratGapAbortReq(), ,RO
    L1CDApiSendL1UCDIratServiceReq(), ,RO
    L1CDApiSendL1UCDMasterRatReq(), ,RO
    L1CDApiSendL1UCDCdmaGapAbortReq(), ,RO
    L1CDApiSendL1CDUIratServiceCnf(), ,RO
    L1CDApiSendL1CDUMasterRatCnf(), ,RO
    L1CDApiSendL1CDUCdmaGapInd(), ,RO
    L1CDApiSendL1GCDMasterRatReq(), ,RO
    L1CDApiSendL1GCDIratServiceReq(), ,RO
    L1CDApiSendL1GCDCdmaGapAbortReq(), ,RO
    L1CDApiSendL1CDGMasterRatCnf(), ,RO
    L1CDApiSendL1CDGIratServiceCnf(), ,RO
    L1CDApiSendL1CDGCdmaGapInd(), ,RO
    L1CDApiSendL1CDGGeranGapAbortCnf(), ,RO
    L1CDApiSendL1TDCDMasterRatReq(), ,RO
    L1CDApiSendL1CDTDMasterRatCnf(), ,RO
End

Begin Enum, L1ECDIratServiceReqT
    L1ECD_SERVICE_START_PLMN_SEARCH_CD, 0
    L1ECD_SERVICE_FINISH_PLMN_SEARCH_CD, 1
    L1ECD_SERVICE_START_CELL_RESEL_CD, 2
    L1ECD_SERVICE_TAKEOVER_FROM_CD, 3
    L1ECD_SERVICE_START_HO_CD, 4
    L1ECD_SERVICE_FAIL_HO_LTE_CD, 5
End

Begin Enum, L1ECDIratMeasModeT
    L1ECD_IRAT_MEAS_MODE_IDLE, 0
    L1ECD_IRAT_MEAS_MODE_CONNECTED_RSRP, 1
    L1ECD_IRAT_MEAS_MODE_CONNECTED_BOTH, 2
    L1ECD_MEAS_MODE_MAX, 3
End

Begin Enum, L1UCDIratServiceReqT
    L1UCD_SERVICE_TAKEOVER_FROM_CD, 0
End

Begin Enum, L1GCDIratServiceReqT
    L1GCD_SERVICE_START_PLMN_SEARCH_CD, 0
    L1GCD_SERVICE_FINISH_PLMN_SEARCH_CD, 1
    L1GCD_SERVICE_TAKEOVER_FROM_CD, 2
End

Begin Enum, FCP Message Name
    FCP_MSG, 0x2C00
    FTM_RUP_ACTIVATE_MSG, 
    FTM_RUP_DEACTIVATE_MSG, 
    FTM_RUP_TCA_MSG, 
    FTM_FTAP_DRC_ACK_CONFIG_MSG, 
    FTM_MSG_LAST, 
    CCM_MSG, 0x2C80
    CCM_AMP_ATILIST_MSG, 
    CCM_SCM_SESSION_OPENED_MSG, 
    CCM_SCM_SESSION_CLOSED_MSG, 
    CCM_SCM_KEEPALIVE_RESET_MSG, 
    CCM_SCM_KEEPALIVE_CFG_MSG, 
    CCM_INSP_ACTIVATE_CMD, 
    CCM_INSP_DEACTIVATE_CMD, 
    CCM_ALMP_DEACTIVATE_CMD, 
    CCM_IDP_ACTIVATE_CMD, 
    CCM_IDP_DEACTIVATE_CMD, 
    CCM_CSP_ACTIVATE_CMD, 
    CCM_FTAP_DRCANDACKCHAN_CONFIG_MSG, 
    DRC_CSM_CELL_SWITCH_OCCUR_MSG, 
    DRC_CSM_RX_FIXED_RATE_READY_MSG, 
    DRC_CSM_RX_FIXED_RATE_SECTOR_DROPPED_MSG, 
    CCM_SCP_RECONFIGURED_MSG, 
    CCM_IDP_CCM_SUPERVSN_TIMER_RESET_CMD, 
    CCM_MSG_LAST, 
    PCPF_MSG, 0x2D00
    PCPF_MSG_LAST, 
    FCP_RCP_STREAM_CONFIG_MSG, 
    DSAF_MSG, 0x3000
    DSAF_FWD_MSG, 
    DSA_CCM_INTERRUPTED_IND, 
    DSAF_RUP_CONNECTION_INIT_MSG, 
    DSAF_RTM_LINK_ACQ_MSG, 
    DSAF_MSG_LAST, 
    PAF_MSG, 0x3100
    PAF_IDP_CONN_OPENED_MSG, 
    PAF_CSP_CONN_CLOSED_MSG, 
    PAF_HLP_FLOW_CTRL_MSG, 
    PAF_RCP_STREAM_CONFIG_MSG, 
    PAF_RCP_SESSION_CONFIG_MSG, 
    PAF_TIMER_EXPIRED_MSG, 
    PAF_RLP_RESET_REQ_MSG, 
    PAF_DPARLP_STAT_RESET_MSG, 
    PAF_DPARLP_STAT_PEEK_MSG, 
    PAF_MFPARLP_STAT_RESET_MSG, 
    PAF_MFPARLP_STAT_PEEK_MSG, 
    PAF_RUP_NETWORK_LOST_MSG, 
    FCP_CMD_MSGID_DPAR_LAST, 
    FTAP_CCM_FIRST_SYNC_CC_MSG, 0x3280
    FTAP_RUP_IDLEHO_MSG, 
    FTAP_RUP_SERVING_SECTOR_MSG, 
    FTAP_RUP_TRAFFICCHANASSIGN_MSG, 
    FTAP_ALMP_ST_UPDATE_MSG, 
    FTAP_ALMP_CONN_OPENED_MSG, 
    FTAP_ALMP_CONN_RELEASED_MSG, 
    FTAP_ALMP_CONN_CLOSED_MSG, 
    FTAP_ALMP_CONN_FAILED_MSG, 
    FTAP_FTAPR_INIT_MSG, 
    FCP_ETS_FTAP_STATS_CLR_REQ_MSG, 
    FCP_ETS_FTAP_STATS_GET_REQ_MSG, 
    FCP_CMD_MSGID_FTAP_LAST, 
    FTAP_TEST_TIMER_EXP_MSG, 
    FTAP_TEST_START_MSG, 
    FTAP_TEST_CLOSE_MSG, 
    FTCMAC_RUP_ACTIVATE_MSG, 
    FCP_PACKET_MSG, 0x3300,
    FCP_DMA_FWD_PKT_MSG, 
    FCP_DATA_MSGID_LAST, 
    FCP_OTA_MSG, 0x3380
    FCP_OTA_MSGID_LAST, 
    FCP_ETS_SEND_MACPKT_MSG, 
    FCP_ETS_CCM_ACTIVATE, 
    FCP_ETS_CCM_DEACTIVATE, 
    FCP_ETS_FWD_OTA_MSG, 
    FCP_ETS_FWD_TEST_MODE_MSG, 
    FCP_ETS_SEND_OVERHEAD_MSG, 
    FCP_ETS_SEND_HW_TRIG_MSG, 
    FCP_ETS_DESIGNATE_DRC_MSG, 
    FCP_ETS_PACKET_PERF_STAT_RESET_MSG, 
    FCP_ETS_MSG_BLOCK_CFG_MSG, 
    FCP_NUM_MSG, 
    DSAR_TX_STATUS_MSG, 0x3881
End

Begin Enum, ATIMatchStatusT
    BATI_MATCH, 0,
    BATI_MISMATCH, 1,
    NON_BATI_MATCH, 2,
    NON_BATI_MISMATCH, 3,
End

Begin Enum, DRCSupervisonStatus
    NullRate_SVExp, 0,
    RestartTx_SVEnd, 1,
    SV_TxChange, 2,
    SVFail_TxOFFExp, 3,
    RestartTxHold_End, 4,
    CsmReqSVPause, 5,
    CsmOccurMsg, 6,
End

Begin Enum, DrcSuprvStateT
    NULL_RATE_SUPERVISION, 0,
    NULL_RATE_TIMER_EXPIRED, 1,
    NULL_RATE_SUPV_PAUSE, 2,
    RESTART_TX_HOLD, 3,
End

Begin Enum, Apps Types
    DPA_AccessStream, 0x01
    DPA_ServiceStream, 
    MFPA_AccessStream, 0x04
    MFPA_ServiceStream, 
    EMFPA_AccessStream, 0x08
    EMFPA_ServiceStream, 
End

Begin Enum, RLPState Type
    NULL, 
    DATA, 
    RESET, 
End

Begin Enum, Stream Type
    Access Stream, 
    Service Stream, 
End

Begin Enum, RouteState Types
    RSP_AOPENBSETTING_ST, 0x0
    RSP_AOPENBRISING_ST, 
    RSP_ASETTINGBOPEN_ST, 
    RSP_ARISINGBOPEN_ST, 
End

Begin Enum, TestResult Type
    Failure, 
    Success, 
    Verdict, 
End

Begin Enum, DO Protocol Type Enum
    PHY, 0, RO
    CCMAC, 1, RO
    ACMAC, 2, RO
    FTCMAC, 3, RO
    RTCMAC, 4, RO
    KeyExchange, 5, RO
    AUTH, 6, RO
    PCP, 9, RO
    ALMP, 10,RO
    INSP, 11,RO
    IDP, 12,RO
    CSP, 13,RO
    RUP, 14,RO
    OMP, 15,RO
    SMP, 16,RO
    AMP, 17,RO
    SCP, 18,RO
    Stream, 19,RO
    Stream0, 20,RO
    Stream1, 21,RO
    Stream2, 22,RO
    Stream3, 23,RO
End

Begin Enum, FTAP Types
    FTAP INIT, 
    FTAP IDLE, 
    FTAP CONN SETUP, 
    FTAP CONNECTED, 
End

Begin Enum, FcpCrsStateT
    FCP_CRS_STATE_CONNECT, 0,
    FCP_CRS_STATE_DISCONNECT, 1,
    FCP_CRS_STATE_MEAS, 2,
    FCP_CRS_STATE_OVERRIDE, 3,
    FCP_CRS_STATE_CONFIGURE   4, 
End

Begin Enum, FcpCrsSubStateT
    FCP_CRS_SUBST_PILOT_ACQ, 0,
    FCP_CRS_SUBST_SYNC_OK, 1,
    FCP_CRS_SUBST_GOOD_FRAMES_OK, 2,
    FCP_CRS_SUBST_GOOD_FRAMES_ERR, 3,
    FCP_CRS_SUBST_TX_OUTPUT, 4,
    FCP_CRS_SUBST_TX_ACK, 5,
    FCP_CRS_SUBST_MEAS_PREP, 6,
    FCP_CRS_SUBST_MEAS_START, 7,
    FCP_CRS_SUBST_MEAS_END, 8,
    FCP_CRS_SUBST_MEAS_RSSI_START, 9
    FCP_CRS_SUBST_MEAS_RSSI_RPT, 10,
    FCP_CRS_SUBST_MEAS_RSSI_END, 11,
    FCP_CRS_SUBST_MEAS_STOP, 12,
    FCP_CRS_SUBST_CONFIG_MAC_IDX, 13,
    FCP_CRS_SUBST_CONFIG_DRC_IDX, 14,
    FCP_CRS_SUBST_CONFIG_REV, 15,
    FCP_CRS_SUBST_TX_PWR_SET, 16,
    FCP_CRS_SUBST_TX_PWR_DIS, 17,
    FCP_CRS_SUBST_TX_PWR_MAX, 18,
End

Begin Enum, RFPath_Enum
    MPA_MDM_PATH_MAIN, 1
    MPA_MDM_PATH_DIV, 2
    MPA_MDM_PATH_TX, 4
End

Begin Enum, RCP Message Name
    RCP_RMC_RFREADY_MSG, 0x3400
    RCP_RMC_RFRELEASE_MSG, 
    RCP_SCP_RECONFIGURED_IND, 
    RCP_SCP_PHY_SUBTYPE_MSG, 
    RCP_AMP_ATILIST_MSG, 
    STR_SCP_COMMITTED_MSG, 
    STR1_SCP_COMMITTED_MSG, 
    STR2_SCP_COMMITTED_MSG, 
    STR3_SCP_COMMITTED_MSG, 
    STR_SCP_RECONFIGURED_MSG, 
    STR1_SCP_RECONFIGURED_MSG, 
    STR2_SCP_RECONFIGURED_MSG, 
    STR3_SCP_RECONFIGURED_MSG, 
    RCP_APP_TO_NEG_SET_MSG, 
    ACM_RUP_ACTIVATE_MSG, 0x3480
    ACM_RUP_DEACTIVATE_MSG, 
    ACM_RUP_ACCESS_HO_IND_MSG, 
    ACM_OMP_SECTORPARMS_UPDATED_MSG, 
    ACM_DSA_ADD_BYTE_MSG, 
    ACM_TIMER_EXPIRED_MSG, 
    ACM_SCP_RECONFIGURED_MSG, 
    ACM_SCP_COMMITTED_MSG, 
    ACM_PROT_STOP_ACCESS_MSG, 
    ACM_RF_RESOURCE_ASSIGN_MSG, 
    ACM_RF_RELEASE_RSP_MSG, 
    RCP_CMD_MSGID_ACM_LAST, 
    RTM_RUP_ACTIVATE_MSG, 0x3500
    RTM_RUP_DEACTIVATE_MSG, 
    RTM_RUP_TCHASSIGN_MSG, 
    RTM_AMP_TXATI_UPDATE_MSG, 
    RTM_OMP_SECTORPARMS_MSG, 
    RTM_FTM_CFG_DATA_MSG, 
    RTM_SMP_SESSION_OPEN_MSG, 
    RTM_CSS_SEARCH_END_MSG, 
    RTM_RTAP_MODE_MSG, 
    RTM_TMR_EXPIRED_MSG, 
    RTM_SCP_RECONFIGURED_MSG, 
    RTM_SCP_COMMITTED_MSG, 
    RTM_DRC_TX_CONTROL_MSG, 
    RTM_TXOFF_INIT_BUFFER_MSG, 
    RTM_RF_RESOURCE_ASSIGN_MSG, 
    RTM_RF_RELEASE_RSP_MSG, 
    RCP_IRAT_TX_PWR_REQ, 
    RCP_CMD_MSGID_RTM_LAST, 
    DSAR_REV_MSG, 0x3880
    DSAR_TX_STATUS_MSG, 
    DSAR_DSAF_ACK_MSG, 
    DSAR_DSAF_ACK_REQ_MSG, 
    DSAR_TIME_EXP_MSG, 
    DSAR_DSAF_RESET_MSG, 
    DSAR_RUP_CONNECTION_INIT_MSG, 
    DSAR_RTM_LINK_ACQ_MSG, 
    DSAR_ALMP_CONNECTION_CLOSED_MSG, 
    DSAR_ALMP_DEL_MSG, 
    DSAR_AMP_RESET_MSG, 
    DSAR_RUP_IDLE_HHO_MSG, 
    DSAR_RUP_DEL_MSG, 
    DSAR_ALMP_POWER_DOWN_MSG, 
    DSAR_CSS_CHAN_SCAN_START_MSG, 
    DSAR_CSS_CHAN_SCAN_DONE_MSG, 
    DSAR_IDP_TX_AVAIL_MSG, 
    RCP_CMD_MSGID_DSAR_LAST, 
    PAR_HLP_DATA_TX_MSG, 0x3980
    PAR_ACCESS_TIMER_EXPIRE_MSG, 
    PAR_SERVICE_TIMER_EXPIRE_MSG, 
    PAR_DSA_FWD_MSG, 
    PAR_PAF_FLOWCTL_STATUS_MSG, 
    PAR_PAF_RLP_RESET_REQ_MSG, 
    PAR_IDP_CONN_OPENED_MSG, 
    PAR_CSP_CONN_CLOSE_MSG, 
    PAR_HLP_DOS_TX_MSG, 
    PAR_RESERVATION_TRANSITION_TIMER_EXPIRE_MSG, 
    PAR_GAUP_TM_EXPIRE_MSG, 
    PAR_QOM_RESERVATION_REQ_MSG, 
    PAR_QOM_SEND_QOSREQUEST_MSG, 
    PAR_PAF_RSP_STATUS_MSG, 
    PAR_LUP_UNSOLICITED_CFG_MSG, 
    PAR_HLP_CLEANUP_QUEUE_MSG, 
    PAR_LUP_UNSOLICITED_LOCATION_NOTIFICATION_MSG, 
    RTAP_ALMP_CONN_OPENED_MSG, 0x3B00
    RTAP_ALMP_CONN_RELEASED_MSG, 
    RTAP_ALMP_CONN_CLOSED_MSG, 
    RTAP_ALMP_CONN_FAILED_MSG, 
    RTAP_TIMER_EXPIRED_MSG, 
    RTAP_BURSTTIMER_EXPIRED_MSG, 
    RTAP_DSA_FWD_MSG, 
    FTAPR_FTAPF_LOOPBACK_STATUS_MSG, 
    FTAPR_FTAPF_TEST_PKT_MSG, 
    FTAPR_RTM_STATUS_MSG, 
    AUTH_SHA_KEP_RPCAUTHKEY_MSG, 
    AUTH_UPDATE_SECTORID_MSG, 
    RCP_CMD_MSGID_LAST, 
End

Begin Enum, Acm TimerId
    TxFailTimer, 0x0
    APSupervisionTimer, 
    TransactionTimer, 
    AllTimers, 0x6
End

Begin Enum, Acm OTA message
    ACAck, 0x0
    AccessParameters, 
    AttributeUpdateRequest, 0x52
End

Begin Enum, Protocol Type
    PHY_PROT, 0
    CCM_PROT, 
    ACM_PROT, 
    FTM_PROT, 
    RTM_PROT, 
    KEP_PROT, 
    AUT_PROT, 
    ENC_PROT, 
    SEC_PROT, 
    PCP_PROT, 
    ALMP_PROT, 
    INSP_PROT, 
    IDP_PROT, 
    CSP_PROT, 
    RUP_PROT, 
    OMP_PROT, 
    SMP_PROT, 
    AMP_PROT, 
    SCP_PROT, 
    STR_PROT, 
    STR0_APP, 
    STR1_APP, 
    STR2_APP, 
    STR3_APP, 
    VSP_PROT, 25
End

Begin Enum, SigRegEventTypeT
    SLOT_EVENT, 0
    ACTION_EVENT, 1
    ACTION_SLOT_EVENT, 3
    PERIODIC_SLOT_EVENT, 4
    ACTION_PERIODIC_SLOT_EVENT, 7
End

Begin Enum, Apps Type
    DPA_AccessStream, 0x01
    DPA_ServiceStream, 
    MFPA_AccessStream, 0x04
    MFPA_ServiceStream, 
    EMFPA_AccessStream, 0x08
    EMFPA_ServiceStream, 
End

Begin Enum, RLPStates Type
    NULL, 
    DATA, 
    RESET INIT, 
    RESET RSP, 
End

Begin Enum, Streams Type
    Access Stream, 
    Service Stream, 
End

Begin Enum, MFPA GaupState Enum
    Inactive, 0
    Idle, 1
    WfrAccept, 2
    Invalid, 3
End

Begin Enum, ReservationState Enum
    CLOSE STATE, 0
    OPEN STATE, 1
    WAIT FOR OPEN STATE, 2
    WAIT FOR CLOSE STATE, 3
End

Begin Enum, RouteStates Types
    RSP_AOPENBSETTING_ST, 0x0
    RSP_AOPENBRISING_ST, 
    RSP_ASETTINGBOPEN_ST, 
    RSP_ARISINGBOPEN_ST, 
End

Begin Enum, PDS MBox Msg
    PDS_FINE_TIME_AIDING_RSP_MSG, 8,
    PDS_FREQ_AIDING_RSP_MSG, 
    PDS_IS801_GENERAL_TIMER, 16,
    PDS_IS801_SESS_TIMER_EXP_MSG, 
    PDS_IS801_PPM_TIMER_EXP_MSG, 
    PDS_IS801_PRM_TIMER_EXP_MSG, 
    PDS_IS801_PPM_PREF_RESP_QUAL_TIMER_EXP_MSG, 
    PDS_IS801_PRM_PREF_RESP_QUAL_TIMER_EXP_MSG, 
    PDS_IS801_OUT_REQ_TIMER_EXP_MSG, 
    PDS_IS801_PDDM_RSP_TIMER_EXP_MSG, 
    PDS_IS801_PREEMPTION_TIMER_EXP_MSG, 
    PDS_IS801_DBM_MS_CAP_READ_RSP_MSG, 
    RAT_PDS_INFO_MSG, 32,
    PDS_RAT_INFO_MSG, 48,
    PDS_AP_POS_CLASSMARK_IND_MSG, 64,
    PDS_AP_CDMA_CELL_INFO_REQ_MSG, 
    PDS_AP_GPS_PRECISE_TIME_AIDING_REQ_MSG, 
    PDS_AP_GPS_FREQUENCY_AIDING_REQ_MSG, 
    PDS_AP_GPS_PSEUDORANGE_MSMT_RSP_MSG, 
    PDS_AP_GPS_CONTROL_PLANE_ABORT_CNF_MSG, 
    PDS_AP_SET_PRIVACY_MODE_MSG, 
    PDS_AP_GET_PRIVACY_MODE_MSG, 
    PDS_AP_IS801_SESSION_TRIGGER_RSP_MSG, 
    PDS_AP_IS801_SESSION_START_MSG, 
    PDS_AP_GPS_ASSIST_DATA_REQ_MSG, 
    PDS_AP_GPS_MSB_POSITION_REPORT_MSG, 
    PDS_AP_IS801_SESSION_STOP_MSG, 
    PDS_AP_AFLT_REQ_MSG, 
    PDS_AP_AFLT_ABORT_REQ_MSG, 
    PDS_GPS_PRECISE_TIME_AIDING_RSP_MSG, 96,
    PDS_GPS_FREQUENCY_AIDING_RSP_MSG, 
    PDS_CONTROL_PLANE_MEAS_REQ_MSG, 
    PDS_GPS_ACQ_ASSIST_DATA_IND_MSG, 
    PDS_CONTROL_PLANE_ABORT_REQ_MSG, 
    PDS_DISCARDED_SESSION_IND_MSG, 
    PDS_LOC_REQ_STATUS_IND_MSG, 
    PDS_GPS_RESET_ASSIST_MSG, 
    PDS_IS801_SESSION_TRIGGER_REQ_MSG, 
    PDS_GPS_REF_LOC_DATA_IND_MSG, 
    PDS_GPS_ION_DATA_IND_MSG, 
    PDS_GPS_EPH_DATA_IND_MSG, 
    PDS_GPS_ALM_DATA_IND_MSG, 
    PDS_AFLT_RSP_MSG, 
    PDS_AFLT_ABORT_CNF_MSG, 
    PDS_CDMA_CELL_INFO_RSP_MSG, 
    PDS_LBS_OPEN_DEV_HW_INIT_MSG, 128,
    PDS_LBS_START_FIX_MSG, 
    PDS_LBS_STOP_FIX_MSG, 
    PDS_LBS_CONFIGURE_FIX_MODE_MSG, 
    PDS_LBS_CONFIGURE_FIX_RATE_MSG, 
    PDS_LBS_CONFIGURE_QOS_MSG, 
    PDS_LBS_WRITE_SERVER_CONFIG_MSG, 
    PDS_LBS_ENABLE_SECURITY_MSG, 
    PDS_LBS_RESET_ASSIST_MSG, 
    PDS_LBS_SET_SECURITY_MSG, 
    PDS_IS801_TCP_CONN_STATUS_MSG, 
    PDS_IS801_MPC_CONN_STATUS_MSG, 
    PDS_IS801_TCPB_REV_DATA_RESP_INFO_MSG, 
    PDS_IS801_TCPB_FWD_DATA_RESP_INFO_MSG, 
    PDS_IS801_CUST_ID_SET_MSG, 
    PDS_SUPL_CAP_REQUEST, 160,
    PDS_SUPL_LOCATIONID_REQUEST, 
    PDS_SUPL_LOC_REQUEST, 
    PDS_SUPL_ENCODE_MSG_RESPONSE, 
    PDS_SUPL_DECODED_MSG_IND, 
    PDS_SUPL_LOCINFO_ABORT_REQUEST, 
    PDS_SUPL_SESS_END_RESPONSE, 
    PDS_SUPL_CAP_RESPONSE, 192,
    PDS_SUPL_LOCATIONID_RESPONSE, 
    PDS_SUPL_LOC_RESPONSE, 
    PDS_SUPL_ENCODE_MSG_REQUEST, 
    PDS_SUPL_LOCINFO_ABORT_RESPONSE, 
    PDS_SUPL_SESS_END_REQUEST, 
    SDL_OMPDS_CLASSMARK_IND, 220,
    SDL_PDS_CELL_INFO_REQ, 
    SDL_PDS_GPS_FTA_REQ, 
    SDL_POS_TEST_TRIGGER_RSP, 
    SDL_POS_TEST_TRIGGER_IND, 
    SDL_POS_AFLT_MEAS_REQ, 
    SDL_POS_AFLT_MEAS_ABORT_REQ, 
    SDL_GNSS_ABORT_CNF, 
    SDL_GNSS_AID_REQU_IND, 
    SDL_GNSS_MSR_RESULT_CNF, 
End

Begin Enum, PDS API Id
    PacPds_FineTimeAidingReq, 0
    PdsPac_FineTimeAidingRsp, 
    PdsGpsFtaCnf, 
    PacPds_FreqAidingReq, 
    PdsPac_FreqAidingRsp, 
    PdsIs801_ControlPlaneTxReq, 
    PdsIs801_ControlPlaneRelReq, 
    PdsIs801_SessionEndInd, 
    PdsRatEcbmIndMsg, 
    RatPds_CPLocTxReq, 
    RatPds_CPLocRelReq, 
    RatPds_SessionEndInd, 
    RatPds_BsRefLocReq, 
    PdsBsRefLocRsp, 
    PdsAp_PosClassmarkInd, 
    PdsIs801_AcqAssistDataInd, 
    GpsAssistAReq, 
    PdsIs801_MeasPosReq, 
    GnssMsAssistedReq, 
    PdsAp_SatMeasRspMsg, 
    PdsIs801_CPAbortReq, 
    PdsAp_CPAbortCnfMsg, 
    PdsIs801_AfltReq, 
    RatPds_AfltReq, 
    RatPds_AfltAbortReq, 
    PdsGpsResetAssistMsg, 
    PdsTestTriggerReqMsg, 
    PdsAp_TestTriggerRspMsg, 
    PdsAp_AssistReqMsg, 
    PdsIs801_RefLocDataInd, 
    PdsIs801_IonDataInd, 
    PdsIs801_EphDataInd, 
    PdsIs801_AlmDataInd, 
    PdsAp_MsbPositionReportMsg, 
    PdsIs801_RatReadyReq, 
    RatPds_ReadyReq, 
    PdsMpcDataBurstRxInd, 
    RatPds_MpcDataBurstTxReq, 
    PdsAp_AfltReq, 
    PdsIs801_AfltRsp, 
    PdsIs801_AfltAbortReq, 
    PdsIs801_AfltAbortCnf, 
    SuplCapReq, 
    PdsSuplSetCapRsp, 
    SuplCapRsp, 
    SuplLocationIdReq, 
    PdsSuplLocationIdRsp, 
    SuplLocationIdRsp, 
    SuplLocReq, 
    PdsIs801_EncodeSuplMsgReq, 
    EncodeSuplMsgRsp, 
    DecodedSuplMsgInd, 
    SuplLocInfoAbortReq, 
    PdsIs801_LocInfoAbortRsp, 
    PdsIs801_LocSessEndReq, 
    SuplLocSessEndRsp, 
    PdsSuplAfltRsp, 
    PdsIs801_SuplLocRsp, 
    RatPds_SuplSetCapReq, 
    RatPds_SuplLocIdReq, 
    PdsCdmaCellInfoInd, 
    PdsAp_CdmaCellInfoReq, 
    PdsCellInfoRsp, 
    PdsAp_PosLocReqStatusInd, 
    PdsAp_PdsLocRespInd, 
End

Begin Enum, PDS IS801V2 DL Msg Id
    PdsParseIs801v2Msg, 0
End

Begin Enum, PDS ReqType Id
    RESERVED0, 0
    REQ_LOC_RSP, 
    REQ_BS_CAP, 
    REQ_BS_ALMANAC, 
    REQ_GPS_ACQ_ASSIST, 
    REQ_GPS_SENSITIV_ASSIST, 
    REQ_GPS_LOC_ASSIST, 
    RESERVED1, 
    REQ_GPS_ALMANAC, 
    REQ_GPS_EPHEMERIS, 
    REQ_GPS_NAV_MSG_BITS, 
    REQ_GPS_ALMANAC_CORR, 
    REQ_GPS_SAT_HEALTH_INFO, 
    PDDM_MS_REQ_MAX, 
End

Begin Enum, PDS RspType Id
    REJECT, 0
    PROV_MS_LOC_RSP, 
    PROV_MS_INFO, 
    PROV_AUTO_MEAS_WEIGHT_FACTOR, 
    PROV_PSEUDO_MEAS, 
    PROV_PILOT_PHASE_MEAS, 
    PROV_TIME_OFFSET_MEAS, 
    PROV_CANCELLATION_ACK, 
    PDDM_MS_RSP_MAX, 
End

Begin Enum, PDS PosMode enum
    PDS_CONTROL_PLANE, 
    PDS_MSA, 
    PDS_MSB, 
    PDS_SUPL_MSA, 
    PDS_SUPL_MSB, 
    PDS_SUPL_AFLT, 
    PDS_SUPL_CELLID, 
End

Begin Enum, PDS LocSrv Trace Index
    Outstanding Requests Received, , RO
    BS Capabilities, , RO
    BS Reject Response Received, , RO
    BS Response Not Supported, , RO
    Invalid PPM Session ID, , RO
    Invalid LocServ Session ID, , RO
    Outgoing Msg Buffer Get Failed, , RO
    Session Tag Mismatch, , RO
    BS Location Response Rcvd, , RO
    BS Response Element Rcvd, , RO
    BS Request Element Rcvd, , RO
    Mobile Orig Location Session, , RO
    Loc Session PS Struct Header, , RO
    Loc Session PS Struct Requests, , RO
    Loc Session PS Struct Responses, , RO
    Loc Session PS Struct AFLT, , RO
    Loc Session PS Struct AGPS, , RO
    Invalid AFLT State, , RO
    Invalid AGPS State, , RO
    Unexpected AFLT Event, , RO
    Unexpected AGPS Event, , RO
    MS Request to BS, , RO
    MS Response to BS, , RO
    Collision, , RO
    PDDM Received, , RO
    PDDM Sent, , RO
    RMS Error Phase Response Dump, , RO
    MS Response Not Supported, , RO
    PPM Qual Response Timer Expired, , RO
    PRM Qual Response Timer Expired, , RO
    Output Request Timer Expired, , RO
    Invalid Timer, , RO
    Received PRM from GPS, , RO
    PPM Pref Qual Timer, , RO
    PRM Pref Qual Timer, , RO
    Pars Session Handler, , RO
End

Begin Enum, PDS MS Request Element enum
    PDS_RESERVED0, 
    PDS_REQ LOC_RSP, 
    PDS_REQ BS_CAP, 
    PDS_REQ BS_ALMANAC, 
    PDS_REQ GPS_ACQ_ASSIST, 
    PDS_REQ GPS_SENSITIV_ASSIST, 
    PDS_REQ GPS_LOC_ASSIST, 
    PDS_RESERVED1, 
    PDS_REQ GPS_ALMANAC, 
    PDS_REQ GPS_EPHEMERIS, 
    PDS_REQ GPS_NAV_MSG_BITS, 
    PDS_REQ GPS_ALMANAC_CORR, 
    PDS_REQ GPS_SAT_HEALTH_INFO, 
End

Begin Enum, PDS Loc BS Response Element enum
    PDS_BS REJECT = 0, 
    PDS_PROV LOC_RSP, 
    PDS_PROV BS_CAP, 
    PDS_PROV BS_ALMANAC, 
    PDS_PROV GPS_ACQ_ASSIST, 
    PDS_PROV GPS_SENSITIV_ASSIST, 
    PDS_PROV GPS_LOC_ASSIST_S_COORD, 
    PDS_PROV GPS_LOC_ASSIST_C_COORD, 
    PDS_PROV GPS_ALMANAC, 
    PDS_PROV GPS_EPHEMERIS, 
    PDS_PROV GPS_NAV_MSG_BITS, 
    PDS_PROV GPS_ALMANAC_CORR, 
    PDS_PROV GPS_SAT_HEALTH_INFO, 
End

Begin Enum, PDS Loc BS Request Element enum
    PDS_RESERVED, 
    PDS_REQ MS_LOC_RSP, 
    PDS_REQ MS_INFO, 
    PDS_REQ AUTO_MEAS_WEIGHT_FAC, 
    PDS_REQ PSEUDO_MEAS, 
    PDS_REQ PILOT_PHASE_MEAS, 
    PDS_REQ TIME_OFFSET_MEAS, 
    PDS_REQ CANCELLATION, 
End

Begin enum, PDS AFLT States enum
    IS801_PPM INIT, 
    IS801_PPM IDLE, 
    IS801_PPM_ACTIVE, 
    IS801_PPM_WAIT_NEXT_REQ, 
    IS801_PPM REQ_PEND, 
    IS801_PPM NOT_SUPPORTED, 
End

Begin Enum, PDS AGPS States enum
    IS801_PRM INIT, 
    IS801_PRM_IDLE, 
    IS801_PRM_ACTIVER, 
    IS801_PRM_WAIT_NEXT_REQ, 
    IS801_PRM_REQ_PEND, 
    IS801_PRM_NOT_SUPPORTED, 
End

Begin Enum, PDS MS Response Element enum
    PDS_REJECT, 
    PDS_PROV MS LOC RSP, 
    PDS_PROV MS INFO, 
    PDS_PROV AUTO MEAS WEIGHT FACTOR, 
    PDS_PROV PSEUDO MEAS, 
    PDS_PROV PILOT PHASE MEAS, 
    PDS_PROV TIME_OFFSET MEAS, 
    PDS_PROV CANCELLATION ACK, 
End

Begin Enum, PDS ControlPlane Loc State enum
    PDS_CP_INIT, 
    PDS_CP_REQ_PPM_MS_INFO, 
    PDS_CP_WFR_PPM, 
    PDS_CP_REQ_PPM_PRM, 
    PDS_CP_GPS_AA, 
    PDS_CP_PPM_REQ, 
    PDS_CP_PRM_REQ, 
    PDS_CP_REQ_LOC, 
End

Begin Enum, PDS Msa Loc State enum
    PDS_MSA_INIT, 
    PDS_MSA_WFR_TCP_CONN, 
    PDS_MSA_MS_INFO, 
    PDS_MSA_SYS_PARM_INFO, 
    PDS_MSA_GPS_AA, 
    PDS_MSA_IMM_AA_SA, 
    PDS_MSA_SEQ_AA_SA, 
    PDS_MSA_REQ_PRM, 
    PDS_MSA_IDLE, 
    PDS_MSA_REQ_PPM, 
    PDS_MSA_REQ_LOC, 
    PDS_MSA_WAIT_1X_WAKEUP, 
    PDS_MSA_FORCE_TO_1X, 
    PDS_MSA_WFR_TCP_CLOSING, 
    PDS_MSA_WFR_TIME_READY, 
    PDS_MSA_NUM_STATE, 
End

Begin Enum, PDS Msb Loc State enum
    PDS_MSB_INIT, 
    PDS_MSB_WFR_ASSIST_REQ, 
    PDS_MSB_WFR_TCP_CONN, 
    PDS_MSB_MS_INFO, 
    PDS_MSB_SYS_PARM_INFO, 
    PDS_MSB_SYSTEM_TIME_GET, 
    PDS_MSB_GPS_AA, 
    PDS_MSB_IMM_AA_SA_ST, 
    PDS_MSB_SAT_DATA_REQ, 
    PDS_MSB_WAIT_RAT_WAKEUP, 
    PDS_MSB_WFR_MPC_CONN_ST, 
    PDS_MSB_FORCE_TO_1X, 
    PDS_MSB_PREEMPT_1x, 
    PDS_MSB_MS_INFO_END, 
    PDS_MSB_LOC_RESP_END, 
    PDS_MSB_NUM_STATE, 
End

Begin Enum, PDS Mss Loc State enum
    PDS_MSS_INIT, 
    PDS_MSS_ACTIVE, 
End

Begin Enum, PDS Loc Event enum
    SESSION_START_EV, 
    NEXT_FIX_EV, 
    RAT_IS801_READY_EV, 
    GPS_READY_IND_EV, 
    GPS_ASSIST_DATA_REQ_EV, 
    GPS_ASSIST_DATA_RSP_EV, 
    CDMA_SYSTEM_REQ_EV, 
    CDMA_1X_AVAIL_EV, 
    CDMA_1X_NOT_AVAIL_EV, 
    CDMA_SYSTEM_TIME_ACQ_EV, 
    PPM_REQ_EV, 
    PPM_RSP_RX_EV, 
    PPM_TIMER_EXP_EV, 
    PPM_PREF_QUAL_TIMER_OUT_EV, 
    PPM_CANCEL_EV, 
    PRM_REQ_EV, 
    PRM_RSP_RX_EV, 
    PRM_TIMER_EXP_EV, 
    PRM_ABORT_EV, 
    PRM_CANCEL_EV, 
    ALL_IS801_BSRSP_DONE_EV, 
    OUT_REQ_TIMER_EXP_EV, 
    CP_IS801_START_EV, 
    CP_IS801_SENT_ACK_EV, 
    CP_IS801_READY_TO_SEND_EV, 
    CP_IS801_DISCONNECT_EV, 
    TCP_CONN_SUCC_EV, 
    TCP_CONN_CLOSE_EV, 
    TCP_IS801_SENT_ACK_EV, 
    TCP_IS801_READY_TO_SEND_EV, 
    MPC_CONN_REQ_SUCC_EV, 
    MPC_CONN_REQ_FAIL_EV, 
    BS_LOC_RSP_EV, 
    GPS_LOC_RSP_EV, 
    MS_REJ_EV, 
    BS_REJ_EV, 
    MSS_DONE, 
    FORCE_TO_1X_READY_EV, 
    IS801_CP_ABORT_CNF_EV, 
    LOC_NUM_EV, 
End

Begin Enum, PDS MSA_FLOW enum
    PDS_MSA_IMM_AA_SA_FL, 
    PDS_MSA_SEQ_AA_SA_FL, 
    PDS_MSA_IMM_AA_ONLY_FL, 
    PDS_MSA_AFLT_ONLY_FL, 
    PDS_NUM_MSA_FLOW, 
End

Begin Enum, PDS MSB_FLOW enum
    PDS_MSB_IMM_AA_SA_FL, 
    PDS_MSB_IMM_AA_ONLY_FL, 
    PDS_MSB_INIT_POS_FL, 
    PDS_MSB_EPH_INIT_POS_FL, 
    PDS_MSB_EPH_BASED_ON_PPM_FL, 
    PDS_MSB_GENERIC_EPH_FL, 
    PDS_MSB_EPH_FROM_POS_FL, 
    PDS_MSB_ACTIVE_FL, 
    PDS_NUM_MSB_FLOW, 
End

Begin Enum, PDS PrmPpm Operation enum
    Clear, 
    Reset, 
End

Begin Enum, PDS SmsTcp enum
    PDS_SMS, 
    PDS_TCP, 
End

Begin Enum, PDS Conn Status enum
    PDS_CLOSE, 
    PDS_SUCCESS, 
End

Begin Enum, PDS RAT MSG Id
    RAT_PDS_AFLT_REQ_MSG, 
    RAT_PDS_AFLT_ABORT_REQ_MSG, 
    RAT_PDS_CONTROL_PLANE_TX_REQ_MSG, 
    RAT_PDS_CONTROL_PLANE_REL_REQ_MSG, 
    RAT_PDS_BS_REF_LOC_REQ_MSG, 
    RAT_PDS_LOC_SESSEND_IND_MSG, 
    RAT_PDS_READY_REQ_MSG, 
    RAT_PDS_MPC_DATA_BURST_TX_REQ_MSG, 
    RAT_PDS_SUPL_SETCAP_REQ_MSG, 
    RAT_PDS_SUPL_LOCID_REQ_MSG, 
    PDS_RAT_ECBM_IND_MSG, 20,
    PDS_RAT_AFLT_RSP_MSG, 
    PDS_RAT_AFLT_ABORT_ACK_MSG, 
    PDS_RAT_AFLT_ABORT_REQ_MSG, 
    PDS_RAT_CONTROL_PLANE_TX_ACK_MSG, 
    PDS_RAT_CONTROL_PLANE_RX_IND_MSG, 
    PDS_RAT_CONTROL_PLANE_STATE_IND_MSG, 
    PDS_RAT_BS_REF_LOC_RSP_MSG, 
    PDS_RAT_CELL_INFO_IND_MSG, 
    PDS_RAT_READY_RSP_MSG, 
    PDS_RAT_MPC_DATA_BURST_RX_IND_MSG, 
    PDS_RAT_SUPL_SETCAP_RSP_MSG, 
    PDS_RAT_SUPL_LOCID_RSP_MSG, 
    PDS_RAT_MAX_ID, 
End

Begin Enum, PDS PrivacyMode Operation enum
    Get, 
    Set, 
End

Begin Enum, CDRR Mode
    CDRR_NULL_MODE, 0
    CDRR_SLAVE_MODE, 
    CDRR_MASTER_MODE, 
    CDRR_MAX_MODE, 
End

Begin Enum, CDRR SlaveMode State
    CDRR_SLAVE_IDLE_ST, 0
    CDRR_SLAVE_WFR_PLMN_SRCH_CNF_ST, 
    CDRR_SLAVE_PLMN_SRCH_ST, 
    CDRR_SLAVE_PLMN_SRCH_SUSPEND_ST, 
    CDRR_SLAVE_WFR_HPLMN_ACTIVATE_CNF_ST, 
    CDRR_SLAVE_HPLMN_ACTIVATE_ST, 
    CDRR_SLAVE_WFR_L2C_RESEL_CNF_ST, 
    CDRR_SLAVE_L2C_RESEL_ST, 
    CDRR_SLAVE_WFR_SUSPEND_CNF_ST, 
    CDRR_SLAVE_MAX_ST, 
End

Begin Enum, CDRR MasterMode State
    CDRR_MASTER_PS_REGING_ST, 0
    CDRR_MASTER_PS_REGED_ST, 
    CDRR_MASTER_BSR_SCAN_ST, 
    CDRR_MASTER_MEAS_ST, 
    CDRR_MASTER_C2L_RESEL_ST, 
    CDRR_MASTER_IDLE_ST, 
    CDRR_MASTER_WFR_SUSPEND_CNF_ST, 
    CDRR_MASTER_1X_PS_REGED_ST, 
    CDRR_MASTER_MAX_ST, 
End

Begin Enum, CAS Message Name
    CDRR_CSS_SEARCH_REQ, 0x3f20
    CDRR_CSS_SEARCH_DONE_IND, 
    CDRR_CSS_PSREG_REQ, 
    CDRR_CSS_PSREG_DONE_IND, 
    CSS_SEARCH_SUSPEND_CNF, 
    CDRR_CSS_DO_STATE_IND, 
    CSS_CDRR_PS_FREQ_REG_CNF, 
    CSS_CDRR_DO_NO_SERVICE_CNF, 
    CDRR_CSS_SET_INSTANCE_CNF, 
    L1CD_PLMN_SEARCH_CNF, 
    L1CD_STOP_PLMN_SEARCH_CNF, 
    L1CD_IRAT_RESEL_CNF, 
    L1CD_ACTIVATE_CNF, 
    L1CD_DEACTIVATE_CNF, 
    CDRR_C2L_MEAS_START_IND, 
    CDRR_C2L_MEAS_END_IND, 
    CDRR_TIMER_EXPIRED_MSG, 
    CDRR_OM_CLASSMARK_REQ, 
    CDRR_OM_ENABLED_RATS_REQ, 
    CDRR_OM_SET_INSTANCE_REQ, 
    CDRR_OM_CAPABILITY_REQ, 
    CDRR_ERRC_SET_INACTIVE_CNF, 
    CDRR_ERRC_L1_RSRC_CNF, 
    CDRR_ERRC_L1_RSRC_REJ, 
    CDRR_ERRC_L1_RSRC_FREE_IND, 
    CDRR_ERRC_RESEL_REQ, 
    CDRR_ERRC_SET_INACTIVE_REQ, 
    CDRR_ERRC_L1_RSRC_REQ, 
    CDRR_ERRC_RIORITISATION_UPDATE_IND, 
    CDRR_NAS_PLMN_READY_IND, 
    CDRR_ASM_SIB8_INFO_IND, 
    CDRR_ASM_RXSTAT_CFG_REQ, 
    CDRR_ASM_RXSTAT_REQ, 0x3f40
    CDRR_CLC_AT_STATE_MSG, 
    CDRR_CLC_SCAN_INFO_MSG, 
    CDRR_CSS_SESSION_OPEN_MSG, 
    CDRR_OMP_NETWORK_INFO_MSG, 
    CDRR_BUILD_SCAN_LIST_INFO_MSG, 
    CDRR_PILOT_INFO_MSG, 
    CDRR_PKT_INFO_MSG, 
    CDRR_PWR_INFO_MSG, 
    CDRR_HANDOFF_START_MSG, 
    CDRR_HANDOFF_END_MSG, 
    CDRR_SERVICE_LOST_MSG, 
    CDRR_ACCESS_START_MSG, 
    CDRR_ACCESS_END_MSG, 
    CDRR_DATACALL_MSG, 
    CDRR_EGW_TIMER_EXPIRED_MSG, 
    CDRR_CSS_REG_IND, 0x3f50
    CDRR_CSS_AIRPLANE_IND, 
    CDRR_IDP_WAKEUP_IND, 
    CDRR_RMC_RXSTAT_IND, 
    CDRR_CSS_1X_PS_DEREG_IND, 
    CDRR_ASM_VENDOR_CONFIG_REQ, 
    CDRR_CSS_BASEBAND_STATE_MSG, 
    CDRR_L3_REPORT_MSG, 
    CDRR_DO_REG_STATUS_MSG, 
    CDRR_ERRC_SET_INACTIVE_REJ, 
    CDRR_ASM_C2L_RESELECTION_STATUS_IND, 
    CDRR_LAST_MSG, 
    CDRR_IRAT_OTHER_RAT_INFO_IND, 0x3f60
    CDRR_RUP_DO_SYS_WEAK_IND, 
    CDRR_RUP_CURR_SYS_MEAS_RSP, 
    L1CD_IRAT_MEAS_CFG_CNF, 
    L1CD_IRAT_MEAS_CNF, 
    L1CD_IRAT_MEAS_REPORT_IND, 
    PKT_CDRR_SUSPEND_CNF, 
    PKT_CDRR_RESUME_CNF, 
    PKT_CDRR_DEACTIVATE_CNF, 
    CDRR_C2L_MEAS_START_CNF, 
    CDRR_C2L_BSR_START_IND, 
    CDRR_C2L_BSR_END_IND, 
    MLC_TIMER_EXPIRED_MSG, 
    CDRR_ERRC_RESEL_CNF, 
    CDRR_ERRC_RESEL_REJ, 
    CDRR_MLC_LAST_MSG, 
    CAS_ETS_TEST_MSG, 
    CSS_IRATRFC_SERVICE_REQ, 0x3fa0
    CSS_IRATRFC_SERVICE_REL_IND, 
    PSW_IRATRFC_SERVICE_REQ, 
    PSW_IRATRFC_SERVICE_REL_IND, 
    PSW_IRATRFC_SUSPEND_CNF, 
    PSW_IRATRFC_BAND_CONFLICT_INFO_IND, 
    PSW_IRATRFC_SVC_STATUS_IND, 
    PSW_IRATRFC_ACT_IND, 
    PSW_IRATRFC_CXRR_ENABLED_RATS_CNF, 
    CLC_IRATRFC_SERVICE_REQ, 
    CLC_IRATRFC_SERVICE_REL_IND, 
    CLC_IRATRFC_SUSPEND_CNF, 
    CLC_IRATRFC_BAND_CONFLICT_INFO_IND, 
    CLC_IRATRFC_SVC_STATUS_IND, 
    PSW_IRATRFC_CXRR_CBS_IND, 
    PSW_IRATRFC_CXRR_CBS_CONFIG_RSP, 
    PSW_IRATRFC_ARB_CDMA_STATE_IND, 
    CLC_IRATRFC_ACT_IND, 
    CLC_IRATRFC_SERVICE_IND, 
    PSW_IRATRFC_CXRR_ASM_STATE_IND, 
    PSW_IRATRFC_CXRR_ASM_STATE_RSP, 
    PSW_IRATRFC_CXRR_ARB_CDMA_ACQ_IND, 
    CAS_IRAT_RFC_LAST, 
End

Begin Enum, CDRR Timer Name
    CDRR_PLMN_SEARCH_TM_ID, 0
    CDRR_CDMA_ACQUISITION_TM_ID, 
    CDRR_L2C_WAIT_TM_ID, 
    CDRR_MLC_MEAS_TM_ID, 
    CDRR_MLC_RESEL_TM_ID, 
    CDRR_MLC_WFR_LTE_RSP_TM_ID, 
    CDRR_MLC_LTE_BAR_TM_ID, 
    CDRR_MAX_TM, 
End

Begin Enum, CDRR Timer Status
    TMR_INIT_ST, 0
    TMR_STARTED_ST, 
    TMR_STOPPED_ST, 
    TMR_EXPIRED_ST, 
End

Begin Enum, CDRR MLC State
    CDRR_MLC_IDLE, 0
    CDRR_MLC_ACTIVE, 
    CDRR_MLC_SUSPEND, 
    CDRR_MLC_WFR_MEAS_CFG_CNF, 
    CDRR_MLC_WFR_MEAS_REQ_CNF, 
    CDRR_MLC_RESEL_PEND, 
    CDRR_MLC_REG_PEND, 
    CDRR_MLC_WFR_PKT_SUSPEND_CNF, 
    CDRR_MLC_WFR_PKT_DEACTIVATE_CNF, 
    CDRR_MLC_MAX_STATES, 
End

Begin Enum, CDRR MLC Event
    CDRR_MLC_LTE_NEIGHBOR_CELL_INFO, 0
    CDRR_MLC_LTE_MEAS_RESULT, 
    CDRR_MLC_MEAS_START_CNF, 
    CDRR_MLC_GMSS_MPSR_START, 
    CDRR_MLC_GMSS_MPSR_END, 
    CDRR_MLC_SERVING_MEAS_RSP, 
    CDRR_MLC_CDMA_STATE_IND, 
    CDRR_MLC_MEAS_TIMER_EXP, 
    CDRR_MLC_RESEL_TIMER_EXP, 
    CDRR_MLC_PS_REG_RSP, 
    CDRR_MLC_PKT_SUSPEND_CNF, 
    CDRR_MLC_PKT_DEACTIVATE_CNF, 
    CDRR_MLC_MMC_MEAS_ABORT_REQ, 
    CDRR_MLC_WFR_LTE_RSP_TIMER_EXP, 
    CDRR_MLC_SERVING_WEAK_IND, 
    CDRR_MLC_MEAS_CFG_CNF, 
    CDRR_MLC_MEAS_REQ_CNF, 
    CDRR_MLC_MAX_EVENT, 
End

Begin Enum, IratMobilityType
    LTE_RESELECTION, 0
    LTE_REDIRECTION, 
    LTE_HANDOVER, 
    LTE_CELL_CHANGE_ORDER, 
    LTE_REGISTRATION, 
    LTE_DEREGISTRATION, 
    LTE_SYSLOST, 
End

Begin Enum, RejectCause
    WRONG_PLMN, 0
    BARRED, 
    FORBIDDEN_TA, 
    SI_READ_FAIL, 
    STATE_CHANGE, 
    CELL_SELECTCRITERIA, 
    ONGOING_PROCEDURE, 
End

Begin Enum, IRATRFC Message Name
    IRATRFC_ASM_ARB_SERVICE_REQ, 0x3fa0
    IRATRFC_ASM_ARB_SERVICE_CNF, 
    IRATRFC_ASM_ARB_SERVICE_REJ, 
    IRATRFC_ASM_ARB_SERVICE_REL_IND, 
    IRATRFC_ASM_ARB_BAND_CONFLICT_INFO_IND, 
    IRATRFC_ASM_ARB_ACT_STATUS_IND, 
    IRATRFC_CDRR_ARB_SUSPEND_REQ, 
    IRATRFC_CDRR_ARB_SUSPEND_CNF, 
    IRATRFC_CDRR_ARB_RESUME_IND, 
    IRATRFC_CDRR_ARB_BAND_CONFLICT_IND, 
    IRATRFC_CDRR_ARB_BAND_SRCH_ALLOWED_IND, 
    IRATRFC_CXRR_ARB_SUSPEND_REQ, 
    IRATRFC_CXRR_ARB_SUSPEND_CNF, 
    IRATRFC_CXRR_ARB_RESUME_IND, 
    IRATRFC_CXRR_ARB_BAND_CONFLICT_IND, 
    IRATRFC_CXRR_ARB_BAND_SRCH_ALLOWED_IND, 
    IRATRFC_CXRR_OM_CLASSMARK_REQ, 
    IRATRFC_CXRR_ENABLED_RATS_REQ, 
    IRATRFC_CXRR_ENABLED_RATS_CNF, 
    IRATRFC_CXRR_CBS_CONFIG_REQ, 
    IRATRFC_CXRR_CBS_REQ, 
End

Begin Enum, IRATRFC Rat Type
    IRATRFC_RAT_NOT_AVAILABLE, 0
    IRATRFC_RAT_GSM, 
    IRATRFC_RAT_UMTS, 
    IRATRFC_RAT_LTE, 
    IRATRFC_RAT_TD_SCDMA, 
    IRATRFC_RAT_1XRTT, 5
    IRATRFC_RAT_EVDO, 6
    IRATRFC_RAT_WLAN, 7
End

Begin Enum, IRATRFC ArbCause
    IRATRFC_ARB_MO_CS, 0
    IRATRFC_ARB_MT_CS, 
    IRATRFC_ARB_MO_PS, 
    IRATRFC_ARB_MT_PS, 
    IRATRFC_ARB_SEARCH, 
    IRATRFC_ARB_RRC_UPD, 
    IRATRFC_ARB_PAGING_REORG, 
    IRATRFC_ARB_ETWS_PRIMARY, 
    IRATRFC_ARB_ETWS_SECONDARY, 
    IRATRFC_ARB_RECOVERY, 
    IRATRFC_ARB_DYN_BOOT, 
    IRATRFC_ARB_SEARCH_CELL_LOST, 
    IRATRFC_ARB_SIM_MAP, 
    IRATRFC_ARB_NONE, 
End

Begin Enum, CP SpyIds
    All Off, 0, CT, CP/Spy, lite, 
    CP Tx DSPM Mbox, 1, CT, CP/Spy/MON, 
    CP Tx DSPV Mbox, 2, CT, CP/Spy/MON, 
    CP Rx DSPM Mbox, 3, CT, CP/Spy/MON, 
    CP Rx DSPV Mbox, 4, CT, CP/Spy/MON, 
    CP Msg Mbox Stats, 5, CT, CP/Spy/MON, 
    CP Action Time Stats, 9, CT, CP/Spy/MON, 
    CP Timestamp Header, 10, CT, CP/Spy/MON, 
    CP Timestamp Data, 11, CT, CP/Spy/MON, 
    CP Tx DSPM Code, 6, CT, CP/Spy/MON, 
    CP Tx DSPV Code, 7, CT, CP/Spy/MON, 
    CP Timer HISR Consume Time, 12, CT, CP/Spy/MON, 
    CP System Time, 13, CT, CP/SPY/MON, 
    CP DSPM Debug Info, 14, CT, CP/SPY/MON, 
    CP ISR Time, 8, CT, CP/Spy/MON, 
    CP RF Status, 16, CT, CP/Spy/HWD, 
    CP SYS Single Register, 17, CT, CP/SPY/HWD/SYS, 
    CP SYS Periodic Register, 18, CT, CP/SPY/HWD/SYS, 
    CP SYS CPINT, 19, CT, CP/SPY/HWD/SYS, 
    CP SYS ST DO, 20, CT, CP/SPY/HWD/SYS, 
    CP Fast MBox, 21, CT, CP/SPY/HWD, 
    CP Ipc Fwd Direct Buffer Header, 32, CT, CP/Spy/IPC, 
    CP Ipc Fwd Direct Buffer DB0, 33, CT, CP/Spy/IPC, 
    CP Ipc Fwd Direct Buffer DB1, 34, CT, CP/Spy/IPC, 
    CP Ipc Fwd Direct Buffer DB2, 35, CT, CP/Spy/IPC, 
    CP IPC Shared Mem Rx Header, 36, CT, CP/Spy/IPC, 
    CP IPC Shared Mem Tx Header, 37, CT, CP/Spy/IPC, 
    CP IPC SBC Encode Data, 38, CT, CP/Spy/IPC, 
    CP Fpc Traf Chan Start Msg, 48, CT, CP/Spy/L1D, 
    CP Fpc Service Config Msg, 49, CT, CP/Spy/L1D, 
    CP Fpc Config NN Msg, 50, CT, CP/Spy/L1D, 
    CP Fpc Power Control Msg, 51, CT, CP/Spy/L1D, 
    CP Fpc Dspm Msg, 52, CT, CP/Spy/L1D, 
    CP Fpc Report Msg, 53, CT, CP/Spy/L1D, 
    CP Fpc Sch Msg, 54, CT, CP/Spy/L1D, 
    CP Search Results Active, 55, CT, CP/Spy/L1D, lite, 
    CP Fwd Channel Config, 56, CT, CP/Spy/L1D, 
    CP Rev Channel Config, 57, CT, CP/Spy/L1D, 
    CP Rx L1D Mdm Mbox, 58, CT, CP/Spy/L1D, 
    CP Active PN and Walsh, 59, CT, CP/Spy/L1D, 
    CP L1D RX PDCH Params Part1, 60, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX PDCH Params Part2, 61, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Traf Chan Start Part1, 62, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Traf Chan Start Part2, 63, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Traf Chan Start Part3, 64, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Reverse Power Set, 65, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Service Config NN, 66, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Service Config, 67, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Soft Handoff, 68, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Hard Handoff Part1, 69, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Hard Handoff Part2, 70, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Hard Handoff Part3, 71, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Resource Allocate, 72, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Resource Dealloc, 73, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX ACKCQICH Rate Change, 74, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Bcch Start, 75, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Fccch Start, 76, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Each Sig, 77, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D RX Radio Config, 78, CT, CP/Spy/L1D/RX Msgs, 
    CP L1D TX FPDCHS Param, 79, CT, CP/Spy/L1D/TX Msgs, 
    CP L1D TX Fwd Rate Pwr Chg, 80, CT, CP/Spy/L1D/TX Msgs, 
    CP L1D TX FPDCHS Disable, 81, CT, CP/Spy/L1D/TX Msgs, 
    CP Rev Signal Buffer, 96, CT, CP/Spy/LMD, 
    CP Rev Fch Frame, 97, CT, CP/Spy/LMD, 
    CP Rev Dcch Frame, 98, CT, CP/Spy/LMD, 
    CP Rev Sch Frame, 99, CT, CP/Spy/LMD, 
    CP Fwd Fch Frame, 100, CT, CP/Spy/LMD, 
    CP Fwd Dcch Frame, 101, CT, CP/Spy/LMD, 
    CP Fwd Sch0 Frame, 102, CT, CP/Spy/LMD, 
    CP Signaling Message, 103, CT, CP/Spy/LMD, 
    CP Fwd Bad Frames, 104, CT, CP/Spy/LMD, 
    CP Fwd Stats, 105, CT, CP/Spy/LMD, lite, 
    CP Rev Loopback Packet, 106, CT, CP/Spy/LMD, 
    CP Rev Rlp Msg, 107, CT, CP/Spy/LMD, 
    CP Fwd Fch MuxOpt1 Counter, 108, CT, CP/Spy/LMD, 
    CP Fwd Dcch MuxOpt1 Counter, 109, CT, CP/Spy/LMD, 
    CP Fwd Fch MuxOpt2 Counter, 110, CT, CP/Spy/LMD, 
    CP Fwd Dcch MuxOpt2 Counter, 111, CT, CP/Spy/LMD, 
    CP Rev Fch MuxOpt1 Counter, 112, CT, CP/Spy/LMD, 
    CP Rev Dcch MuxOpt1 Counter, 113, CT, CP/Spy/LMD, 
    CP Rev Fch MuxOpt2 Counter, 114, CT, CP/Spy/LMD, 
    CP Rev Dcch MuxOpt2 Counter, 115, CT, CP/Spy/LMD, 
    CP Fwd Voice Packet Data, 116, CT, CP/Spy/LMD, 
    CP Rev Voice Packet Data, 117, CT, CP/Spy/LMD, 
    CP Fwd MuxPDU Data, 118, CT, CP/Spy/LMD, 
    CP Fwd SCH MuxPDU Type 1 Data, 119, CT, CP/Spy/LMD, 
    CP Fwd SCH MuxPDU Type 3 Data, 120, CT, CP/Spy/LMD/Fwd SCH MuxType3, 
    CP Fwd SCH MuxPDU Type 5 Data, 121, CT, CP/Spy/LMD, 
    CP Fwd PDCH MuxPDU Type 5 Data, 122, CT, CP/Spy/LMD, 
    CP Fwd PDCH MuxPDU Debug Input, 123, CT, CP/Spy/LMD, 
    CP Fwd PDCH MuxPDU Debug Output, 124, CT, CP/Spy/LMD, 
    CP Fwd MuxPDU Input 1 Debug, 125, CT, CP/Spy/LMD, 
    CP Fwd MuxPDU Output 1 Debug, 126, CT, CP/Spy/LMD, 
    CP Mux Pdu Fundicated Data Output Debug, 127, CT, CP/Spy/LMD, 
    CP Fwd SCH MuxPDU Type 3 Header, 128, CT, CP/Spy/LMD/Fwd SCH MuxType3, 
    CP Fwd SCH DTX Stats, 129, CT, CP/Spy/LMD, 
    CP Fwd FER Stats, 130, CT, CP/Spy/LMD, lite, 
    CP Mp Hisr Frame Header, 131, CT, CP/Spy/LMD/Mp Hisr, 
    CP Mp Hisr Pdu Header, 132, CT, CP/Spy/LMD/Mp Hisr, 
    CP Mp Hisr Pdu Raw Data, 133, CT, CP/Spy/LMD/Mp Hisr, 
    CP Markov Transmit Statistics, 134, CT, CP/Spy/LMD, lite, 
    CP Markov Receive Statistics, 135, CT, CP/Spy/LMD, lite, 
    CP Markov Rev Packet, 136, CT, CP/Spy/LMD, lite, 
    CP Markov Receive FER, 137, CT, CP/Spy/LMD, lite, 
    CP LMD Record Speech Packet, 138, CT, CP/Spy/LMD, 
    CP LMD Playback Speech Packet, 139, CT, CP/Spy/LMD, 
    CP LMD PC Mic Speech Packet, 140, CT, CP/Spy/LMD, 
    CP LMD PC Spkr Speech Packet, 141, CT, CP/Spy/LMD, 
    CP Tdso Fch Transmit Statistics, 142, CT, CP/Spy/LMD, lite, 
    CP Tdso Fch Receive Statistics, 143, CT, CP/Spy/LMD, lite, 
    CP Tdso Fch Receive FER, 144, CT, CP/Spy/LMD, lite, 
    CP Tdso Dcch Transmit Statistics, 145, CT, CP/Spy/LMD, lite, 
    CP Tdso Dcch Receive Statistics, 146, CT, CP/Spy/LMD, lite, 
    CP Tdso Dcch Receive FER, 147, CT, CP/Spy/LMD, lite, 
    CP Tdso Supp Transmit Statistics, 148, CT, CP/Spy/LMD, lite, 
    CP Tdso Supp Pdu Receive Statistics, 149, CT, CP/Spy/LMD, lite, 
    CP Tdso Supp Receive Statistics, 150, CT, CP/Spy/LMD, lite, 
    CP Tdso Supp Receive FER, 151, CT, CP/Spy/LMD, lite, 
    CP Mux Pdu Rlp Fwd Frame, 152, CT, CP/Spy/LMD, lite, 
    CP LMD Symbol Error Rate Statistics, 153, CT, CP/Spy/LMD, 
    IP counters, 176, CT, CP/Spy/VAL, 
    CP Val Mpc Start Pos Req Spy, 177, CT, CP/Spy/VAL/LBS, lite, 
    CP VAL GPS MPC TCP RAW DATA SPY, 178, CT, CP/Spy/VAL/LBS, lite, 
    CP Val Mpc Start Pos Resp Spy, 179, CT, CP/Spy/VAL/LBS, lite, 
    CP IRAT Default Bearer APN String, 180, CT, CP/Spy/VAL/IRAT, 
    CP IRAT PDN Address Default Bearer, 181, CT, CP/Spy/VAL/IRAT, 
    CP IRAT Dedicated Bearer APN String, 182, CT, CP/Spy/VAL/IRAT, 
    CP IRAT Dedicated Bearer Profile ID, 183, CT, CP/Spy/VAL/IRAT, 
    CP IRAT Dedicated Bearer TFT Info, 184, CT, CP/Spy/VAL/IRAT, 
    CP IRAT Default Bearer Attach Cnf, 185, CT, CP/Spy/VAL/IRAT, 
    CP IRAT Dedicated Bearer Attach Cnf, 186, CT, CP/Spy/VAL/IRAT, 
    CP VAL Display Records Spy, 187, CT, CP/Spy/VAL, lite, 
    CP Fwd Fndl Pri Data, 192, CT, CP/Spy/RLP, 
    CP Fwd Fndl Sec Data, 193, CT, CP/Spy/RLP, 
    CP Fwd Supl0 Data, 194, CT, CP/Spy/RLP, 
    CP Fwd Supl1 Data, 195, CT, CP/Spy/RLP, 
    CP Fwd Supl2 Data, 196, CT, CP/Spy/RLP, 
    CP Fwd Supl3 Data, 197, CT, CP/Spy/RLP, 
    CP Fwd Supl4 Data, 198, CT, CP/Spy/RLP, 
    CP Fwd Supl5 Data, 199, CT, CP/Spy/RLP, 
    CP Fwd Supl6 Data, 200, CT, CP/Spy/RLP, 
    CP Rev Eng Pri Frame, 201, CT, CP/Spy/RLP, 
    CP Rev Eng Sec Frame, 202, CT, CP/Spy/RLP, 
    CP Rev2 LMD Pri Frame, 203, CT, CP/Spy/RLP, 
    CP Rev2 LMD Sec Frame, 204, CT, CP/Spy/RLP, 
    CP Iop2 Rlp Rev Data, 205, CT, CP/Spy/RLP, 
    CP Hl2 Rlp Fwd Data Buf, 206, CT, CP/Spy/RLP, 
    CP Data Before Decrypt, 207, CT, CP/Spy/RLP, 
    CP Data After Decrypt, 208, CT, CP/Spy/RLP, 
    CP Data Before Encrypt, 209, CT, CP/Spy/RLP, 
    CP Data After Encrypt, 210, CT, CP/Spy/RLP, 
    CP Fwd Raw Data Frm Eng, 211, CT, CP/Spy/RLP, 
    CP RLP Event Stats, 212, CT, CP/Spy/RLP, lite, 
    CP Fwd RLP Frame, 213, CT, CP/Spy/RLP, lite, 
    CP Rev RLP Frame, 214, CT, CP/Spy/RLP, lite, 
    CP RLP Frame Count, 215, CT, CP/Spy/RLP, lite, 
    CP EHRPD RCVD VSNCP MSG REC, 224, CT, CP/Spy/HLP/eHRPD, 
    CP EHRPD IP PKT FROM EMPAF, 225, CT, CP/Spy/HLP/eHRPD, 
    CP EHRPD STORED IP4 ADDR TFT MATCH, 226, CT, CP/Spy/HLP/eHRPD, 
    CP EHRPD STORED IP6 ADDR TFT MATCH, 227, CT, CP/Spy/HLP/eHRPD, 
    CP EHRPD INCOMING IP4 ADDR TFT MATCH, 228, CT, CP/Spy/HLP/eHRPD, 
    CP EHRPD INCOMING IP6 ADDR TFT MATCH, 229, CT, CP/Spy/HLP/eHRPD, 
    CP EHRPD FWD VNSP TO IP AT IOP, 230, CT, CP/Spy/HLP/eHRPD, 
    CP EHRPD FWD SEND PPP TO IOP, 231, CT, CP/Spy/HLP/eHRPD, 
    CP EHRPD FWD IP FOR INTERNAL USE, 232, CT, CP/Spy/HLP/eHRPD, 
    CP Fwd data into engine, 240, CT, CP/Spy/HLP, 
    CP Rev data into RLPW, 241, CT, CP/Spy/HLP/1X, 
    CP UPB User ID string, 242, CT, CP/Spy/HLP, 
    CP UPB Password string, 243, CT, CP/Spy/HLP, 
    CP UPB dialing digits, 244, CT, CP/Spy/HLP, 
    CP UPB send data request, 245, CT, CP/Spy/HLP, 
    CP UPB received data, 246, CT, CP/Spy/HLP, 
    CP Rev data low HL to RLP, 247, CT, CP/Spy/HLP, 
    CP Fwd data RLP to low HL, 248, CT, CP/Spy/HLP, 
    CP Rev data AI to Rm HL, 249, CT, CP/Spy/HLP, 
    CP Fwd data Rm HL to AI, 250, CT, CP/Spy/HLP, 
    CP MIP Agent Adv Msg, 251, CT, CP/Spy/HLP, 
    CP MIP Agent Sol Msg, 252, CT, CP/Spy/HLP, 
    CP MIP RRP Msg, 253, CT, CP/Spy/HLP, 
    CP MIP RRQ Msg, 254, CT, CP/Spy/HLP, 
    CP MIP DMU RRP Msg, 255, CT, CP/Spy/HLP, 
    CP MIP DMU RRQ Msg, 256, CT, CP/Spy/HLP, 
    CP MIP DMU Key Prev Encrypt, 257, CT, CP/Spy/HLP, 
    CP MIP DMU Key Post Encrypt, 258, CT, CP/Spy/HLP, 
    CP MIP DMU RSA Public Key Exp, 259, CT, CP/Spy/HLP, 
    CP MIP DMU RSA Public Key Mod, 260, CT, CP/Spy/HLP, 
    CP Rev HDLC data, 261, CT, CP/Spy/HLP, 
    CP Fwd HDLC data, 262, CT, CP/Spy/HLP, 
    CP RCVD DECODED PPP FRAME, 263, CT, CP/Spy/HLP, 
    CP TO BE ENCODED PPP FRAME, 264, CT, CP/Spy/HLP, 
    CP PPP HA LLD0 Data Entry, 265, CT, CP/Spy/HLP, 
    CP PPP HA LLD1 Data Entry, 266, CT, CP/Spy/HLP, 
    CP PPP HA ENC0 Output, 267, CT, CP/Spy/HLP, 
    CP PPP HA ENC1 Output, 268, CT, CP/Spy/HLP, 
    CP Rev data request, 269, CT, CP/Spy/HLP, 
    CP Um Fwd PPP Frame Data, 270, CT, CP/Spy/HLP, lite, 
    CP Um Rev PPP Frame Data, 271, CT, CP/Spy/HLP, lite, 
    CP Rm Fwd PPP Frame Data, 272, CT, CP/Spy/HLP, lite, 
    CP Rm Rev PPP Frame Data, 273, CT, CP/Spy/HLP, lite, 
    CP Um Fwd Reduced PPP Frame Data, 274, CT, CP/Spy/HLP, 
    CP Um Rev Reduced PPP Frame Data, 275, CT, CP/Spy/HLP, 
    CP HLP NAI Prev Derived, 276, CT, CP/Spy/HLP, 
    CP HLP NAI Post Derived, 277, CT, CP/Spy/HLP, 
    CP HLP MIP DMU Secrets, 278, CT, CP/Spy/HLP, 
    CP A12 Fwd PPP Frame Data, 279, CT, CP/Spy/HLP, 
    CP A12 Rev PPP Frame Data, 280, CT, CP/Spy/HLP, 
    CP HLP Current Throttling System ID, 281, CT, CP/Spy/HLP, 
    CP Uim Access Chap Request, 282, CT, CP/Spy/HLP, 
    CP Uim Access Chap Response, 283, CT, CP/Spy/HLP, 
    CP Uim SIP Chap Request, 284, CT, CP/Spy/HLP, 
    CP Uim SIP Chap Response, 285, CT, CP/Spy/HLP, 
    CP Uim MIP MNHA Auth Request, 286, CT, CP/Spy/HLP, 
    CP Uim MIP MNHA Auth Response, 287, CT, CP/Spy/HLP, 
    CP Uim MIP RRQ Hash Request, 288, CT, CP/Spy/HLP, 
    CP Uim MIP RRQ Hash Response, 289, CT, CP/Spy/HLP, 
    CP Uim MIP MNAAA Auth Request, 290, CT, CP/Spy/HLP, 
    CP Uim MIP MNAAA Auth Response, 291, CT, CP/Spy/HLP, 
    CP Uim MIP AKA Auth Request, 292, CT, CP/Spy/HLP, 
    CP Uim MIP AKA Auth Response, 293, CT, CP/Spy/HLP, 
    CP HLP EAP REQ Data, 294, CT, CP/Spy/HLP, 
    CP HLP EAP RSP Data, 295, CT, CP/Spy/HLP, 
    CP HLP PPP STATUS, 296, CT, CP/Spy/HLP, 
    CP HLP IMS STATE, 823, CT, CP/Spy/IMS, 
    CP HLP SIP MSG, 824, CT, CP/Spy/IMS, 
    CP Uim Cmd, 320, CT, CP/Spy/UIM, 
    CP Uim Rsp, 321, CT, CP/Spy/UIM, 
    CP Uim Read Nam, 322, CT, CP/Spy/UIM, 
    CP Uim Update Nam, 323, CT, CP/Spy/UIM, 
    CP PAC_Printf, 328, CT, CP/Spy/PAC, 
    CP Deliver Ind Data, 336, CT, CP/Spy/PS/SMS/Wrapper, 
    CP Cause Code Data, 337, CT, CP/Spy/PS/SMS/Wrapper, 
    CP Location Serv Tx Data, 338, CT, CP/Spy/PS/LOC, lite, 
    CP Location Serv Rx Data, 339, CT, CP/Spy/PS/LOC, lite, 
    CP Location Event Data, 340, CT, CP/Spy/PS/LOC, lite, 
    CP Location Almnanac Data, 341, CT, CP/Spy/PS/LOC, lite, 
    CP Location Ephemeris Data, 342, CT, CP/Spy/PS/LOC, lite, 
    CP Location LocResp Data, 343, CT, CP/Spy/PS/LOC, lite, 
    CP DBM Secure Data, 344, CT, CP/Spy/PS/PSW, 
    CP Location IS801 MSG, 345, CT, CP/Spy/PS/LOC, lite, 
    CP SCC Svc Control Rec, 352, CT, CP/Spy/PS/PSW, 
    CP SCC DS Alert Disply Info, 353, CT, CP/Spy/PS/PSW, 
    CP SCC DS Alert Called Party Number, 354, CT, CP/Spy/PS/PSW, 
    CP SCC DS Alert Calling Party Number, 355, CT, CP/Spy/PS/PSW, 
    CP SCC DS Alert Connected Number, 356, CT, CP/Spy/PS/PSW, 
    CP SCC PS Alert Disply Info, 357, CT, CP/Spy/PS/PSW, 
    CP SCC PS Alert Called Party Number, 358, CT, CP/Spy/PS/PSW, 
    CP SCC PS Alert Calling Party Number, 359, CT, CP/Spy/PS/PSW, 
    CP SCC PS Alert Connected Number, 360, CT, CP/Spy/PS/PSW, 
    CP SCC VS Alert Disply Info, 361, CT, CP/Spy/PS/PSW, 
    CP SCC VS Alert Called Party Number, 362, CT, CP/Spy/PS/PSW, 
    CP SCC VS Alert Calling Party Number, 363, CT, CP/Spy/PS/PSW, 
    CP SCC VS Alert Connected Number, 364, CT, CP/Spy/PS/PSW, 
    CP SCC SMS Rx Ind Data, 365, CT, CP/Spy/PS/PSW, 
    CP SCC SMS Tx Req Data, 366, CT, CP/Spy/PS/PSW, 
    CP SCC SMS Tx Req Called ID, 367, CT, CP/Spy/PS/PSW, 
    CP SCC OTA Rx Ind Data, 368, CT, CP/Spy/PS/PSW, 
    CP SCC OTA Tx Req Data, 369, CT, CP/Spy/PS/PSW, 
    CP SCC LS SOC Rec Data, 370, CT, CP/Spy/PS/PSW, 
    CP SCC PS Packet Zone List, 371, CT, CP/Spy/PS/PSW, lite, 
    CP SCC PS Packet HAT HT Timer, 372, CT, CP/Spy/PS/PSW, lite, 
    CP PE ENG_ACCESS_PROC_TR 1 40, 384, CT, CP/Spy/PS/Call Proc/Engine/ENG_ACCESS_PROC_TR, lite, 
    CP PE ENG_ACCESS_TR 12 1, 385, CT, CP/Spy/PS/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_ACCESS_TR 12 2, 386, CT, CP/Spy/PS/Call Proc/Engine/ENG_ACCESS_TR, 
    CP PE ENG_CP_TR 12 3, 387, CT, CP/Spy/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 12 4, 388, CT, CP/Spy/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_LAYER2_TR 13 13, 389, CT, CP/Spy/PS/Call Proc/Engine/ENG_LAYER2_TR, lite, 
    CP PE ENG_LAYER2_TR 13 15, 390, CT, CP/Spy/PS/Call Proc/Engine/ENG_LAYER2_TR, lite, 
    CP PE ENG_LAYER2_TR 13 57, 391, CT, CP/Spy/PS/Call Proc/Engine/ENG_LAYER2_TR, lite, 
    CP PE ENG_PAGE_TR 20 52, 392, CT, CP/Spy/PS/Call Proc/Engine/ENG_PAGE_TR, lite, 
    CP PE ENG_CP_TR 23 3, 393, CT, CP/Spy/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 23 4, 394, CT, CP/Spy/PS/Call Proc/Engine/ENG_CP_TR, lite, 
    CP PE ENG_CP_TR 23 98, 395, CT, CP/Spy/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_RTC_TR 29 34, 396, CT, CP/Spy/PS/Call Proc/Engine/ENG_RTC_TR, lite, 
    CP PE ENG_CP_TR 42 4, 397, CT, CP/Spy/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE ENG_CP_TR 42 7, 398, CT, CP/Spy/PS/Call Proc/Engine/ENG_CP_TR, 
    CP PE Access Raw Dump, 399, CT, CP/Spy/PS/Call Proc/Engine/LAC, 
    CP PE Page Raw Dump, 400, CT, CP/Spy/PS/Call Proc/Engine/LAC, 
    CP PE QPCH Meas Dump, 401, CT, CP/Spy/PS/Call Proc/Engine/ENG_QPCH_TR, lite, 
    CP PE ERI Val Msg, 402, CT, CP/Spy/PS/ERI/ENG_ERI_TR, lite, 
    CP PE ENG_PSWFTD_PARA, 403, CT, CP/Spy/PS/Call Proc/Engine/ENG_PSWFTD_PARA, lite, 
    CP Search Results Remain, 373, CT, CP/Spy/PS/Call Proc/Engine/SET MAINTENANCE, lite, 
    CP PPP CAT_PACKET 2 3, 416, CT, CP/Spy/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 2 16, 417, CT, CP/Spy/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PHASE 3 11, 418, CT, CP/Spy/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 3 23, 419, CT, CP/Spy/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 3 31, 420, CT, CP/Spy/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 12 2, 421, CT, CP/Spy/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PHASE 12 4, 422, CT, CP/Spy/PS/PPP/Engine/CAT_PHASE, 
    CP PPP CAT_PACKET 12 8, 423, CT, CP/Spy/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_PACKET 12 10, 424, CT, CP/Spy/PS/PPP/Engine/CAT_PACKET, 
    CP PPP CAT_API 13 21, 425, CT, CP/Spy/PS/PPP/Engine/CAT_API, 
    CP PPP CAT_API 13 23, 426, CT, CP/Spy/PS/PPP/Engine/CAT_API, 
    CP TCPIP CAT_IP 1 2, 427, CT, CP/Spy/PS/TCPIP/Engine/CAT_IP, 
    CP NSPE CAT_API 2 6, 428, CT, CP/Spy/PS/NSPE/Engine/CAT_API, 
    CP NSPE CAT_API 3 11, 429, CT, CP/Spy/PS/NSPE/Engine/CAT_API, 
    CP SCC CAT_API 1 28, 440, CT, CP/Spy/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 3 22, 441, CT, CP/Spy/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 3 27, 442, CT, CP/Spy/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 4 5, 443, CT, CP/Spy/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 4 12, 444, CT, CP/Spy/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_SCC 5 3, 445, CT, CP/Spy/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_API 5 14, 446, CT, CP/Spy/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 6 15, 447, CT, CP/Spy/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_SCC 7 16, 448, CT, CP/Spy/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_SCC 8 18, 449, CT, CP/Spy/PS/SCC/Engine/CAT_SCC, 
    CP SCC CAT_API 9 11, 450, CT, CP/Spy/PS/SCC/Engine/CAT_API, 
    CP SCC CAT_API 11 21, 451, CT, CP/Spy/PS/SCC/Engine/CAT_API, 
    CP OTA CAT_API 1 4, 456, CT, CP/Spy/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 7, 457, CT, CP/Spy/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 11, 458, CT, CP/Spy/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_API 1 13, 459, CT, CP/Spy/PS/OTA/Engine/CAT_API, 
    CP OTA CAT_OTA 2 3, 460, CT, CP/Spy/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 6, 461, CT, CP/Spy/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 7, 462, CT, CP/Spy/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 9, 463, CT, CP/Spy/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 11, 464, CT, CP/Spy/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 13, 465, CT, CP/Spy/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 16, 466, CT, CP/Spy/PS/OTA/Engine/CAT_OTA, 
    CP OTA CAT_OTA 2 18, 467, CT, CP/Spy/PS/OTA/Engine/CAT_OTA, 
    CP SMS CAT_API 1 9, 472, CT, CP/Spy/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 28, 473, CT, CP/Spy/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 31, 474, CT, CP/Spy/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 39, 475, CT, CP/Spy/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 59, 476, CT, CP/Spy/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 65, 477, CT, CP/Spy/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 76, 478, CT, CP/Spy/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 83, 479, CT, CP/Spy/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 87, 480, CT, CP/Spy/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 91, 481, CT, CP/Spy/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_API 1 96, 482, CT, CP/Spy/PS/SMS/Engine/CAT_API, 
    CP SMS CAT_SMS 3 3, 483, CT, CP/Spy/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 3 6, 484, CT, CP/Spy/PS/SMS/Engine/CAT_SMS, 
    CP SMS CAT_SMS 4 8, 485, CT, CP/Spy/PS/SMS/Engine/CAT_SMS, 
    CP PS STATUS, 486, CT, CP/SPY/PS, 
    CP GCSNA UL Msg, 487, CT, CP/Spy/PS/CSFB, 
    CP GCSNA DL Msg, 488, CT, CP/Spy/PS/CSFB, 
    CP CSFB CDMA2K Parm, 489, CT, CP/Spy/PS/CSFB, 
    CP CSFB SIB8, 490, CT, CP/Spy/PS/CSFB, 
    CP CSFB REDIRECT, 491, CT, CP/Spy/PS/CSFB, 
    CP MMC PKT PDN Status, 504, CT, CP/Spy/MMC, 
    CP MMC Default Bearer Response, 505, CT, CP/Spy/MMC, 
    CP MMC Set Modem Data State, 506, CT, CP/Spy/MMC, 
    CP MMC Set Modem Call State, 507, CT, CP/Spy/MMC, 
    CP MMC PKT LTE Default Bearer Req, 508, CT, CP/Spy/MMC, 
    CP MMC PKT LTE Default Bearer Response, 509, CT, CP/Spy/MMC, 
    CP MMC PKT CDMA Default Bearer Req, 510, CT, CP/Spy/MMC, 
    CP MMC PKT CDMA Default Bearer Response, 511, CT, CP/Spy/MMC, 
    CP MMC PKT GENERIC BYTE SPY, 512, CT, CP/Spy/MMC, 
    CP MMC PKT GENERIC LONGWORD SPY, 513, CT, CP/Spy/MMC, 
    CP MMC GMSS State SPY, 514, CT, CP/Spy/MMC, 
    CP MMC GMSS RAT State SPY, 515, CT, CP/Spy/MMC, 
    CP IRAT RFC State Spy, 520, CT, CP/Spy/RFC, 
    CP CSS PRL Spy, 521, CT, CP/Spy/CSS, 
    CP CSS MSPL Spy, 522, CT, CP/Spy/CSS, 
    CP CSS MLPL Spy, 523, CT, CP/Spy/CSS, 
    CP PDS IS801 Location Serv Tx Data, 528, CT, CP/Spy/PDS/IS801, lite, 
    CP PDS IS801 Location Serv Rx Data, 529, CT, CP/Spy/PDS/IS801, lite, 
    CP PDS IS801 Location Event Data, 530, CT, CP/Spy/PDS/IS801, lite, 
    CP PDS IS801 Location Almnanac Data, 531, CT, CP/Spy/PDS/IS801, lite, 
    CP PDS IS801 Location Ephemeris Data, 532, CT, CP/Spy/PDS/IS801, lite, 
    CP PDS IS801 Location LocResp Data, 533, CT, CP/Spy/PDS/IS801, lite, 
    CP PDS IS801 Location IS801 MSG, 534, CT, CP/Spy/PDS/IS801, lite, 
    CP PDS GPS Location Update, 535, CT, CP/Spy/PDS/LBS, lite, 
    CP PDS Printf, 536, CT, CP/Spy/PDS, 
    CP HSC Generic Spy, 560, CT, CP/Spy/HSC, 
    CP HSC Clk Cal, 561, CT, CP/Spy/HSC, 
    CP HSC Ssm Status, 562, CT, CP/Spy/HSC, 
    CP HSC Ssm 1X Status, 563, CT, CP/Spy/HSC, 
    CP HSC Ssm DO Status, 564, CT, CP/Spy/HSC, 
    CP HSC Ssm 9MHz Backoff Time, 565, CT, CP/Spy/HSC, 
    CP HSC SPage DO Status, 566, CT, CP/Spy/HSC, 
    CP HSC SPage 1X Status, 567, CT, CP/Spy/HSC, 
    CP HSC Mpa Status, 568, CT, CP/Spy/HSC, 
    CP HSC Oosa Status, 569, CT, CP/Spy/HSC, 
    CP SLC DSCP SESSION STATE INFO, 576, CT, CP/Spy/SLC, 
    CP SLC DSCP ATTRIBUTES DATA, 577, CT, CP/Spy/SLC, 
    CP SLC DSCP PRIOR SESSION ATTRIBUTE, 578, CT, CP/Spy/SLC, 
    CP SLC DSCP AT SUPPORTED APP SUBTYPES ATTRIBUTE, 579, CT, CP/Spy/SLC, 
    CP_SLC_AMP_STATE_SPY, 580, CT, CP/Spy/SLC, 
    CP_SLC_AMP_ATI_SPY, 581, CT, CP/Spy/SLC, 
    CP SLC STATE SPY, 582, CT, CP/Spy/SLC, lite, 
    CP_SEC_DHKEY_HASH_DATA_SPY, 600, CT, CP/Spy/SLC, 
    CP_SEC_DHKEY_HASH_RESULT_SPY, 601, CT, CP/Spy/SLC, 
    CP CLC L3 STATE CHANGE, 592, CT, CP/Spy/CLC, lite, 
    CP CLC L3 STATE UPDATE, 593, CT, CP/Spy/CLC, lite, 
    CP RMC SRCH Initial Acq Sort Result, 608, CT, CP/Spy/RMC, 
    CP RMC SRCH Usable Paths, 609, CT, CP/Spy/RMC, 
    CP RMC SRCH Sector Info, 610, CT, CP/Spy/RMC, 
    CP RMC SRCH Input Buffer Data, 611, CT, CP/Spy/RMC, 
    CP RMC RFC Main Rx AGC Stats, 612, CT, CP/Spy/RMC, 
    CP RMC RFC Div Rx AGC Stats, 613, CT, CP/Spy/RMC, 
    CP RMC RFC Main DC Offset Stats, 614, CT, CP/Spy/RMC, 
    CP RMC RFC Div DC Offset Stats, 615, CT, CP/Spy/RMC, 
    CP RMC RFC AFC Adjustment Stats, 616, CT, CP/Spy/RMC, 
    CP RMC RFC AFC Metrics, 617, CT, CP/Spy/RMC, 
    CP RMC CSM C2I Sampling, 618, CT, CP/Spy/RMC, 
    CP RMC CSM HW Monitor, 619, CT, CP/Spy/RMC, 
    CP_RMC_DO_RFC_RXTX_SPY_ID, 620, CT, CP/Spy/RMC, lite, 
    CP_RMC_IRAT_SCH_GENERIC_SPY_ID, 621, CT, CP/Spy/RMC/IRAT, 
    CP_RMC_DO_DFS_RESULT_SPY_ID, 622, CT, CP/Spy/RMC, 
    CP_RMC_FMP_EQ_WWL_SPY_ID, 623, CT, CP/Spy/RMC/EQ, 
    CP_RMC_FMP_GENERIC_SPY_ID, 632, CT, CP/Spy/RMC/FMP, 
    CP_RMC_FMP_FNG_POSITION_SPY_ID, 633, CT, CP/Spy/RMC/FMP, 
    CP_RMC_FMP_MAC_POSITION_SPY_ID, 634, CT, CP/Spy/RMC/FMP, lite, 
    CP_RMC_FMP_FNG_HWCONFIG_SPY_ID, 635, CT, CP/Spy/RMC/FMP, 
    CP_RMC_FMP_NEW_ALLOC_SPY_ID, 636, CT, CP/Spy/RMC/FMP, 
    CP_RMC_FMP_DEALLOC_SPY_ID, 637, CT, CP/Spy/RMC/FMP, 
    CP_RMC_FMP_FNGLISTM_SPY_ID, 638, CT, CP/Spy/RMC/FMP, 
    CP_RMC_FMP_FNGLISTD_SPY_ID, 639, CT, CP/Spy/RMC/FMP, 
    CP_RMC_FMP_SCHLISTM_SPY_ID, 640, CT, CP/Spy/RMC/FMP, 
    CP_RMC_FMP_SCHLISTD_SPY_ID, 641, CT, CP/Spy/RMC/FMP, 
    CP_RMC_FMP_DLLSTAT_SPY_ID, 642, CT, CP/Spy/RMC/FMP, 
    CP_TST_PPP_DECODER_STAT_SPY_ID, 643, CT, CP/Spy/RMC/FMP, 
    CP_TST_PPP_ENCODER_STAT_SPY_ID, 644, CT, CP/Spy/RMC/FMP, 
    CP_RMC_MBP_MAC_BITS_SPY_ID, 645, CT, CP/Spy/RMC/FMP, 
    CP_RMC_MBP_C2I_SPY_ID, 646, CT, CP/Spy/RMC/FMP, 
    CP_RMC_FMP_FINGERSCAN_SPY_ID, 647, CT, CP/Spy/RMC/FMP, 
    CP RMC Pilot Strength Report, 656, CT, CP/Spy/RMC/RUP, 
    CP RMC Pilot Update, 657, CT, CP/Spy/RMC/RUP, 
    CP RMC PILOT SET STATUS, 658, CT, CP/Spy/RMC/RUP, 
    CP RMC RUP SEARCHER STATUS, 659, CT, CP/Spy/RMC/RUP, lite, 
    CP_RMC_FMP_EQ_POSITION_SPY_ID, 660, CT, CP/Spy/RMC/FMP, 
    CP_RMC_EQFN_HWCONFIG_SPY_ID, 661, CT, CP/Spy/RMC/FMP, 
    CP_RMC_EQ_HWCONFIG_SPY_ID, 662, CT, CP/Spy/RMC/FMP, 
    CP_RMC_L1CD_L1CDE_CDMA_IRAT_CELL_LIST_REQ_SPY_ID, 663, CT, CP/Spy/RMC/L1CD, 
    CP_RMC_L1CD_L1CDE_CDMA_IRAT_MEAS_REPORT_IND_SPY_ID, 664, CT, CP/Spy/RMC/L1CD, 
    CP_RMC_L1CD_L1ECD_IRAT_MEAS_REPORT_IND_SPY_ID, 665, CT, CP/Spy/RMC/L1CD, 
    CP_RMC_L1CD_L1ECD_IRAT_CELL_LIST_REQ_SPY_ID, 666, CT, CP/Spy/RMC/L1CD, 
    CP_RMC_L1CD_CRRR_IRAT_MEAS_CFG_REQ_SPY_ID, 667, CT, CP/Spy/RMC/L1CD, 
    CP_RMC_L1CD_CDRR_IRAT_MEAS_REQ_SPY_ID, 668, CT, CP/Spy/RMC/L1CD, 
    CP_RMC_L1CD_CDRR_IRAT_MEAS_REPORT_IND_SPY_ID, 669, CT, CP/Spy/RMC/L1CD, 
    CP_RMC_L1CD_RMC_IRAT_SRCH_CFG_MSG_SPY_ID, 670, CT, CP/Spy/RMC/L1CD, 
    CP_RMC_L1CD_IRAT_RMC_MEAS_REPORT_SPY_ID, 671, CT, CP/Spy/RMC/L1CD, 
    CP_FCP_OTA_MSG_SPY, 688, CT, CP/Spy/FCP, lite, 
    CP_FCP_OHD_MSG_SPY, 689, CT, CP/Spy/FCP, lite, 
    CP_FCP_DSAF_RAW_MSG_SPY, 690, CT, CP/Spy/FCP, 
    CP_FCP_SLPD_ACK_SPY, 691, CT, CP/Spy/FCP, lite, 
    CP_FCP_SNP_RAW_DATA_SPY, 692, CT, CP/Spy/FCP, lite, 
    CP_FCP_DRC_TABLE_SPY_ID, 696, CT, CP/Spy/FCP, lite, 
    CP_FCP_DRC_GENERAL_SPY_ID, 697, CT, CP/Spy/FCP, 
    CP_FCP_DRC_TEST_SPY_ID, 698, CT, CP/Spy/FCP, 
    MON_CP_FCP_DRC_PARAMETER_SPY_ID, 699, CT, CP/Spy/FCP, 
    MON_CP_FCP_DRC_ALG_DEBUG_SPY_ID, 700, CT, CP/Spy/FCP, 
    MON_CP_FCP_DRC_IMP_DEBUG_SPY_ID, 701, CT, CP/Spy/FCP, 
    MON_CP_MAC_BIT_DETECT_TEST_SPY_ID, 702, CT, CP/Spy/TST, 
    MON_CP_MAC_BIT_DETECT_FINAL_TEST_SPY_ID, 703, CT, CP/Spy/TST, 
    CP_FCP_OHD_MSG_SPY1, 704, CT, CP/Spy/FCP, lite, 
    CP_PAF_RLP_FRAME_RECV_SPY_ID, 705, CT, CP/Spy/FCP/PAF, 
    CP_PAF_RLP_FRAME_PASS_TO_UPPER_LAYER_SPY_ID, 706, CT, CP/Spy/FCP/PAF, 
    MON_CP_FCP_PACKET_REC_RAW_SPY_ID, 712, CT, CP/Spy/FCP, 
    MON_CP_FCP_PACKET_REC_CDM_SPY_ID, 713, CT, CP/Spy/FCP, lite, 
    MON_CP_FCP_PREAMBLE_DBG_SPY_ID, 714, CT, CP/Spy/FCP, 
    MON_CP_FCP_GOOD_PACKET_SPY_ID, 715, CT, CP/Spy/FCP, 
    MON_CP_FCP_FTM_MAC_PACKET_SPY_ID, 716, CT, CP/Spy/FCP, 
    MON_CP_FCP_PERF_STAT_SPY_ID, 717, CT, CP/Spy/FCP, lite, 
    MON_CP_FTAP_PERF_STAT_SPY_ID, 718, CT, CP/Spy/FCP, lite, 
    MON_CP_FCP_PERF_STAT_REDUCED_SIG_SPY_ID, 719, CT, CP/Spy/FCP, lite, 
    MON_CP_FCP_PAF_DPARLP_STAT_SPY_ID, 720, CT, CP/Spy/FCP, lite, 
    MON_CP_FCP_PAF_MFPARLP_STAT_SPY_ID, 721, CT, CP/Spy/FCP, lite, 
    CP_FCP_PAF_TEST_FWD_PACKET_SPY_ID, 722, CT, CP/Spy/FCP, 
    CP_FCP_PAF_TEST_UPPER_LAYER_SPY_ID, 723, CT, CP/Spy/FCP, 
    CP_FCP_FTAP_STAT_SPY_ID, 724, CT, CP/Spy/FCP, 
    CP_FCP_FTAP_TEST_SPY_ID, 725, CT, CP/Spy/FCP, 
    CP_FCP_FTAP_TEST_FWD_PACKET_SPY_ID, 726, CT, CP/Spy/FCP, 
    CP_FCP_FTAP_FWD_LINK_DATA_SPY_ID, 727, CT, CP/Spy/FCP, 
    CP RCP ACM Mac Layer Header, 736, CT, CP/Spy/RCP/ACM, 
    CP RCP ACM Capsule, 737, CT, CP/Spy/RCP/ACM, 
    CP RCP ACM Physical Packet, 738, CT, CP/Spy/RCP/ACM, 
    CP RCP TXH Tx AGC Stats, 739, CT, CP/Spy/RCP, lite, 
    CP RCP TXH DO Slot AGC Stats, 740, CT, CP/Spy/RCP, 
    CP RCP TXH DO Slot2 AGC Stats, 745, CT, CP/Spy/RCP, 
    CP RCP TXH DO Slot Ks Stats, 741, CT, CP/Spy/RCP, 
    CP RCP TXH DO Slot Clipper Stats, 742, CT, CP/Spy/RCP, 
    CP RCP TXH DO Slot Get DRC Channel Stats, 743, CT, CP/Spy/RCP, 
    CP RCP TXH DO RTC KS Stats, 744, CT, CP/Spy/RCP, 
    CP_RCP_PAR_DATA_SEND_SPY, 752, CT, CP/Spy/RCP/PAR, 
    CP_RCP_PAR_DATA_RETX_SPY, 753, CT, CP/Spy/RCP/PAR, 
    CP_RCP_PAR_RLP_STAT_SPY_ID, 754, CT, CP/Spy/RCP/PAR, lite, 
    CP_RCP_RTM_STATES_SPY, 755, CT, CP/Spy/RCP, 
    CP_RCP_RTM_HARQ_SPY, 756, CT, CP/Spy/RCP, 
    CP_RCP_RTM_TXHISTORY_SPY, 757, CT, CP/Spy/RCP, 
    CP_RCP_RTM3_STATES_SPY, 758, CT, CP/Spy/RCP, lite, 
    CP_RCP_RTM3_PACKET_INFO_STATES_SPY, 759, CT, CP/Spy/RCP, lite, 
    CP_RCP_RTM3_T2P_STATES_SPY, 760, CT, CP/Spy/RCP, lite, 
    CP_RCP_RTM3_PACKET_PERF_STATES_SPY, 761, CT, CP/Spy/RCP, lite, 
    CP_RCP_TX_DMA_ACK_SPY, 762, CT, CP/Spy/RCP, 
    CP_RCP_OTA_MSG_SPY, 763, CT, CP/Spy/RCP, lite, 
    CP_RCP_PCP_PKT_SPY, 764, CT, CP/Spy/RCP, lite, 
    CP_RCP_SLPD_ACK_SPY, 765, CT, CP/Spy/RCP, lite, 
    CP_RCP_SNP_RAW_DATA_SPY, 766, CT, CP/Spy/RCP, lite, 
    CP_RCP_RTAP_STATE_SPY, 767, CT, CP/Spy/RCP/RTAP, 
    CP_RCP_FTAP_STATE_SPY_ID, 768, CT, CP/Spy/RCP/FTAPR, 
    CP_RCP_FTAP_LB_PKT_SPY_ID, 769, CT, CP/Spy/RCP/FTAPR, 
    CP_SYS_CPBUF_FWD_STATE_SPY, 784, CT, CP/Spy/SYS/FWD, 
    CP_SYS_CPBUF_FWD_IRAM_FREE_SPY, 785, CT, CP/Spy/SYS/FWD, 
    CP_SYS_CPBUF_FWD_IRAM_BUSY_SPY, 786, CT, CP/Spy/SYS/FWD, 
    CP_SYS_CPBUF_FWD_SRAM_FREE_SPY, 787, CT, CP/Spy/SYS/FWD, 
    CP_SYS_CPBUF_FWD_SRAM_BUSY_SPY, 788, CT, CP/Spy/SYS/FWD, 
    CP_SYS_CPBUF_REV_STATE_SPY, 789, CT, CP/Spy/SYS/REV, 
    CP_SYS_CPBUF_REV_IRAM_FREE_SPY, 790, CT, CP/Spy/SYS/REV, 
    CP_SYS_CPBUF_REV_IRAM_BUSY_SPY, 791, CT, CP/Spy/SYS/REV, 
    CP_SYS_CPBUF_REV_SRAM_FREE_SPY, 792, CT, CP/Spy/SYS/REV, 
    CP_SYS_CPBUF_REV_SRAM_BUSY_SPY, 793, CT, CP/Spy/SYS/REV, 
    CP_SYS_CPBUF_SIG_STATE_SPY, 794, CT, CP/Spy/SYS/SIG, 
    CP_SYS_CPBUF_SIG_IRAM_FREE_SPY, 795, CT, CP/Spy/SYS/SIG, 
    CP_SYS_CPBUF_SIG_IRAM_BUSY_SPY, 796, CT, CP/Spy/SYS/SIG, 
    CP_SYS_CPBUF_SIG_SRAM_FREE_SPY, 797, CT, CP/Spy/SYS/SIG, 
    CP_SYS_CPBUF_SIG_SRAM_BUSY_SPY, 798, CT, CP/Spy/SYS/SIG, 
    CP_SYS_CPBUF_HDR_STATE_SPY, 799, CT, CP/Spy/SYS/HDR, 
    CP_SYS_CPBUF_HDR_IRAM_FREE_SPY, 800, CT, CP/Spy/SYS/HDR, 
    CP_SYS_CPBUF_HDR_IRAM_BUSY_SPY, 801, CT, CP/Spy/SYS/HDR, 
    CP_SYS_CPBUF_HDR_SRAM_FREE_SPY, 802, CT, CP/Spy/SYS/HDR, 
    CP_SYS_CPBUF_HDR_SRAM_BUSY_SPY, 803, CT, CP/Spy/SYS/HDR, 
    CP_SYS_CPBUF_FWD1X_STATE_SPY, 804, CT, CP/Spy/SYS/FWD1X, 
    CP_SYS_CPBUF_FWD1X_SRAM_FREE_SPY, 805, CT, CP/Spy/SYS/FWD1X, 
    CP_SYS_CPBUF_FWD1X_SRAM_BUSY_SPY, 806, CT, CP/Spy/SYS/FWD1X, 
    CP SEC AKA AUTH SPY ID, 816, CT, CP/Spy/SEC, 
    CP SEC DERIVE MK SPY ID, 817, CT, CP/Spy/SEC, 
    CP SEC DERIVE REAUTHXKEY SPY ID, 818, CT, CP/Spy/SEC, 
    CP SEC DERIVE MSK SPY ID, 819, CT, CP/Spy/SEC, 
    CP SEC DERIVE MAC SPY ID, 820, CT, CP/Spy/SEC, 
    CP SEC DERIVE PMK SPY ID, 821, CT, CP/Spy/SEC, 
    CP SEC AES CRYPT SPY ID, 822, CT, CP/Spy/SEC, 
    VOCODER_MPP_ENC_IN_PCM_SPY, 540, CT, CP/Spy/AUD, 
    VOCODER_MPP_ENC_PCKT_SPY, 541, CT, CP/Spy/AUD, 
    VOCODER_SPP_DEC_IN_PCKT_SPY, 542, CT, CP/Spy/AUD, 
    VOCODER_SPP_DEC_OUT_PCM_SPY, 543, CT, CP/Spy/AUD, 
    VOCODER_STATUS_SPY, 544, CT, CP/Spy/AUD, 
    VOCODER_CAPS_KPI_SPY, 545, CT, CP/Spy/AUD, 
End

Begin Enum, Full Path Bits
    Main Rx Path, 0x01,
    Div Rx Path, 0x02,
    Main Tx Path, 0x04,
    Main Div Rx, 0x03,
    Main Rx and Main Tx, 0x05,
    Div Rx and Main Tx, 0x06,
    Main Div Rx and Main Tx, 0x07,
End

Begin Enum, AFC States
    Disabled, 0,
    Init Acq - No Pilot, 1,
    Init Acq - Pilot Found, 2,
    Init Acq - Finger Alloc, 3,
    Slotted, 4,
    Online, 5,
    Test, 6,
    Automatic, 7,
End

Begin Enum, RF SPY States
    CAL_TEMP_UPDATE, 0,
    CAL_MAIN_RF_TRAN_UPDATE, 
    CAL_DIV_RF_TRAN_UPDATE, 
    RX_POWER_MSG, 
    RINT_RF_CAL, 
    RST_TOTAL_FREQ_ADJ, 
    SYNC_SIGNAL_PROCESS, 
    ADJCNT_ASYNC_UPDT, 
    PLL_FREQ_ADJ, 
    DLL_ADJ, 
    LTL_GET_FOFFS_B4SLEEP, 
    LTL_GET_FOFFS, 
    PLL_FREQ_ADJ_PULSED, 
End

Begin Enum, SysTimeStatusT
    RESET, 0
    RESYNC, 1
    CURRENT, 2
    INVALID, 3
End

Begin Enum, SysModeT
    SYS_1X, 0
    SYS_DO, 1
    MODE_NA, 2
End

Begin Enum, DspmFiqCmd
    TX_POWER, 0,
    TX_PCB, ,
    TX_OFF, ,
    RX_AGC_DIV, ,
    RX_AGC_MAIN, ,
    AFC_CONTROL, ,
    DLL_CONTROL, ,
    TX_GATE, ,
    FMBOX_MAX, ,
End

Begin Enum, FpcPriChans
    FCH, 0
    DCCH, 1
End

Begin Enum, ChIndT
    CHIND_NONE (0), 0,
    FFCH_RFCH (1), 1,
    FDCCH_RDCCH (2), 2,
    FFCH_RFCH_RDCCH_FDCCH (3), 3,
    FPDCH_FCPCCH_RFCH (4), 4,
    FPDCH_FCPCCH_RDCCH (5), 5,
    FPDCH_FFCH_RFCH (6), 6,
    FPDCH_FDCCH_RDCCH (7), 7,
    FPDCH_RFCH_FFCH_RDCCH (8), 8,
    FPDCH_RFCH_FFCH_RDCCH_FDCCH (9), 9,
End

Begin Enum, FpcChannels
    FCH, 1
    DCCH, 2
    FCH_DCCH, 3
    SCH, 4
    FCH_SCH, 5
    DCCH_SCCH, 6
    FCH_DCCH_SCH, 7
End

Begin Enum, FwdChnlNum
    FWD_CHANNEL (0), 0
    FWD_DCCH (1), 1
    FWD_SCH (2), 2
End

Begin Enum, RadioConfig
    RC1, 0
    RC2, 1
    RC3, 2
    RC4, 3
    RC5, 4
    RC6, 5
    RC7, 6
    RC8, 7
    RC9, 8
    RC10, 9
    RC11, 10
    RC12, 11
End

Begin Enum, FwdChnlType
    FSYNC (0), 0
    FPAGE (1), 1
    FBCCH (2), 2
    FQPCH (3), 3
    FCPCCH (4), 4
    FCACH (5), 5
    FCCCH (6), 6
    FDCCH (7), 7
    FFCH (8), 8
    FSCH (9), 9
    F_MON_CHNL (10), 10
End

Begin Enum, FrameDuration
    F80MS (0), 0
    F40MS (1), 1
    F26MS (2), 2
    F20MS (3), 3
    F10MS (4), 4
    F5MS (5), 5
    F160MS (6), 6
End

Begin Enum, VitScale
    DIV_1 (0), 0
    DIV_2 (1), 1
    DIV_4 (2), 2
    DIV_8 (3), 3
End

Begin Enum, SlotDuration
    SLOT40MS (0), 0
    SLOT80MS (1), 1
    SLOT160MS (2), 2
End

Begin Enum, RevChnlNum
    REV_CHANNEL (0), 0
    REV_DCCH (1), 1
    REV_SCH (2), 2
End

Begin Enum, RevChnlType
    RFCH (0), 0
    RDCCH (1), 1
    RSCH (2), 2
    RACCESS (3), 3
    RHEACH (4), 4
    REACH (5), 5
    RCCCH (6), 6
    R_MON_CHNL (7), 7
End

Begin Enum, SysCdmaBandT
    SYS_BAND_CLASS_0, 0,
    SYS_BAND_CLASS_1, ,
    SYS_BAND_CLASS_2, ,
    SYS_BAND_CLASS_3, ,
    SYS_BAND_CLASS_4, ,
    SYS_BAND_CLASS_5, ,
    SYS_BAND_CLASS_6, ,
    SYS_BAND_CLASS_7, ,
    SYS_BAND_CLASS_8, ,
    SYS_BAND_CLASS_9, ,
    SYS_BAND_CLASS_10, ,
    SYS_BAND_CLASS_11, ,
    SYS_BAND_CLASS_12, ,
    SYS_BAND_CLASS_13, ,
    SYS_BAND_CLASS_14, ,
    SYS_BAND_CLASS_15, ,
    SYS_BAND_CLASS_16, ,
    SYS_BAND_CLASS_17, ,
    SYS_BAND_CLASS_18, ,
    SYS_BAND_CLASS_19, ,
    SYS_BAND_CLASS_20, ,
    SYS_BAND_CLASS_MAX, ,
End

Begin Enum, SysFchFrameSizeT
    FCH_20MS (0), 0,
    FCH_5_AND_20MS (1), 1,
End

Begin Enum, SysDcchFrameSizeT
    DCCH_RESERVED (0), 0,
    DCCH_20MS (1), 1,
    DCCH_5MS (2), 2,
    DCCH_5_AND_20MS (3), 3,
End

Begin Enum, L1dBcchDataRateT
    BCCH_4800_RATE (0), 0,
    BCCH_9600_RATE (1), 1,
    BCCH_19200_RATE (2), 2,
End

Begin Enum, CodeRateT
    QUARTER_CRAT (0), 0,
    HALF_CRAT (1), 1,
End

Begin Enum, L1dFccchDataRateT
    FCCCH_9600_20 (0), 0,
    FCCCH_19200_20 (1), 1,
    FCCCH_19200_10 (2), 2,
    FCCCH_38400_20 (3), 3,
    FCCCH_38400_10 (4), 4,
    FCCCH_38400_5 (5), 5,
End

Begin Enum, L1dFrameDurationT
    5MS (0), 0,
    10MS (1), 1,
    20MS (2), 2,
End

Begin Enum, VoicePacket Rates
    Blank, 0x0,
    Eighth, 0x1,
    Quarter, 0x2,
    Half, 0x3,
    Full, 0x4,
    Erasure, 0xE,
    Full_likely, 0xF,
End

Begin Enum, Service Options
    Srv Opt 1  Basic 8K Vocoder, 1,
    Srv Opt 2  8K Mobile Loopback, 2 ,
    Srv Opt 3  Enhanced 8K Vocoder, 3 ,
    Srv Opt 4  Asyn Data Rate Set 1, 4 ,
    Srv Opt 5  Fax Rate Set 1, 5 ,
    Srv Opt 6  SMS Rate Set 1, 6 ,
    Srv Opt 9  13K Mobile Loopback, 9 ,
    Srv Opt 12 Async Data Pref Rate Set 2, 12 ,
    Srv Opt 13 Fax Pref Rate Set 2, 13 ,
    Srv Opt 14 SMS Rate Set 2, 14 ,
    Srv Opt 15 Low Speed Packet Data RS2, 15 ,
    Srv Opt 17 Basic 13K Vocoder, 17 ,
    Srv Opt 18 Otasp Pref Rate Set 1, 18 ,
    Srv Opt 19 Otasp Pref Rate Set 2, 19 ,
    Srv Opt 25 Medium Speed Packet Data RS2, 25 ,
    Srv Opt 32 Test Data Service Option, 32 ,
    Srv Opt 33 High Speed Packet Data, 33 ,
    Srv Opt 35 Location Services RS 1, 35 ,
    Srv Opt 36 Location Services RS 2, 36 ,
    Srv Opt 54 Markov 2000, 54 ,
    Srv Opt 55 FCH Loopback, 55 ,
    Srv Opt 68 EVRC-B Vocoder, 68 ,
    Srv Opt 73 EVRC-NW Vocoder, 73 ,
    Srv Opt 75 1xAdv Loopback, 75 ,
    Srv Opt 4100 Async Data Pref Rate Set 1, 0x1004 ,
    Srv Opt 4101 Fax Pref Rate Set 1, 0x1005 ,
    Srv Opt 32768 Basic 13K Vocoder, 0x8000 ,
    Srv Opt 32798 Markov RS1, 0x801E ,
    Srv Opt 32799 Markov RS2, 0x801F ,
    Srv Opt 32858 High Speed Packet Data, 0x805A ,
    Srv Opt 32859 High Speed Packet Data, 0x805B ,
    AMPS Analog Voice, 0xFFFF ,
    Set All SOs or Reset All to default, 0 ,
End

Begin Enum, Tdso Rates
    One Times Base Rate, 1,
    Two Times Base Rate, 2,
    Four Times Base Rate, 4,
    Eight Times Base Rate, 8,
    Sixteen Times Base Rate, 16,
End

Begin Enum, ValMpcAppTypeIndE
    MPC_WAP_WEB, 0,
    MPC_BREW, 1,
    MPC_JAVA, 2,
    MPC_EMBEDDED_APP, 3,
    MPC_3RD_PARTY_LBS, 4,
    MPC_JAVA_BASED_ON_BREW, 5,
End

Begin Enum, PositioningStatusIndE
    Proceed Use Gpsone, 0,
    Proceed With Cached Pos, 1,
    Proceed With Cell Sector Pos, 2,
    Request Not Auth, 3,
    Request Refuded By Mpc, 4,
    Ack Request, 5,
    Service Temp Unvail, 6,
    Cancel Fix Request, 7,
End

Begin Enum, Attach Status Type
    Successful, 0
    Failed, 
    Duplicated, 
End

Begin Enum, IpAddressType
    IPv4 only, 1
    IPv6 only, 
    IPv4 and IPv6, 
End

Begin Enum, RlpFramePhyChan
    CDMA_SYS_FCH, 0x0,
    CDMA_SYS_DCCH, 0x1,
    CDMA_SYS_SCH0, 0x2,
    CDMA_SYS_SCH1, 0x3,
End

Begin Enum, RlpFrameMuxPdu
    MUX_PDU1, 0x1,
    MUX_PDU2, 0x2,
    MUX_PDU3, 0x3,
End

Begin Enum, RlpFramePhyChanRate
    CDMA_SYS_PHY_CHAN_RATE_9600, 0x00,
    CDMA_SYS_PHY_CHAN_RATE_14400, 0x01,
    CDMA_SYS_PHY_CHAN_RATE_19200, 0x02,
    CDMA_SYS_PHY_CHAN_RATE_28800, 0x03,
    CDMA_SYS_PHY_CHAN_RATE_38400, 0x04,
    CDMA_SYS_PHY_CHAN_RATE_57600, 0x05,
    CDMA_SYS_PHY_CHAN_RATE_76800, 0x06,
    CDMA_SYS_PHY_CHAN_RATE_115200, 0x07,
    CDMA_SYS_PHY_CHAN_RATE_153600, 0x08,
    CDMA_SYS_PHY_CHAN_RATE_1200, 0x09,
    CDMA_SYS_PHY_CHAN_RATE_1800, 0x0A,
    CDMA_SYS_PHY_CHAN_RATE_2400, 0x0B,
    CDMA_SYS_PHY_CHAN_RATE_3600, 0x0C,
    CDMA_SYS_PHY_CHAN_RATE_4800, 0x0D,
    CDMA_SYS_PHY_CHAN_RATE_7200, 0x0E,
    CDMA_SYS_PHY_CHAN_RATE_BLANK, 0x0F,
End

Begin enum, RRP Ext Type
    HA Auth Type, 32
    Chall type, 132
End

Begin Enum, HLP EAP AKA Result
    AKAAuth_Success, 
    AKAAuth_AUTNFailure, 
    AKAAuth_SQNSyncFailure, 
    AKAAuth_RESInvalid, 
    AKAAuth_CKInvalid, 
    AKAAuth_IKInvalid, 
    AKAAuth_UnknowFailure, 
    AKAAuth_KDFIputInvalid, 
    AKAAuth_KDFInvalid, 
End

Begin Enum, PPPStatus
    NET_ISCONN_STATUS, 0x00
    NET_INPROGRESS_STATUS, 0x01
    NET_NONET_STATUS, 0x02
    NET_CLOSEINPROGRESS_STATUS, 0x03
    NET_DORMINPROGRESS_STATUS, 0x04
    NET_INDORMANCY_STATUS, 0x05
    NET_WAKINGUP_STATUS, 0x06
End

Begin Enum, SMS MostRecent
    MO, 0
    MT, 1
End

Begin Enum, IS801 Msg Enum
    FOR IP packet Rec LS, 0, RO
    REV IP packet Rec LS, 1, RO
End

Begin Enum, LS BS Req Type enum
    RESERVED, 0, RO
    REQ LOCATION RSP, 1, RO
    REQ MS INFO, 2, RO
    REQ AUTO MEAS WEIGHTING FACTORS, 3, RO
    REQ PSEUDORANGE MEAS, 4, RO
    REQ PILOT PHASE MEAS, 5, RO
    REQ TIME OFFSET MEAS, 6, RO
    REQ CANCELLATION, 7, RO
End

Begin Enum, LS BS Rsp Type enum
    REJECT, 0, RO
    PROV LOCATION RSP, 1, RO
    PROV BS CAPABILITIES, 2, RO
    PROV BS ALMANAC, 3, RO
    PROV GPS ACQUISITION ASSIST, 4, RO
    PROV GPS SENSITIVITY ASSIST, 5, RO
    PROV GPS LOC ASSIST - SPHERE COORD, 6, RO
    PROV GPS LOC ASSIST - CARTES COORD, 7, RO
    PROV GPS ALMANAC, 8, RO
    PROV GPS EPHEMERIS, 9, RO
    PROV GPS NAVIGATION MSG BITS, 10, RO
    PROV GPS ALMANAC CORRECTION, 11, RO
    PROV GPS SATELLITE HEALTH INFO, 12, RO
End

Begin Enum, LS MS Req Type enum
    RESERVED, 0, RO
    REQ LOCATION RSP, 1, RO
    REQ BS CAPABILITIES, 2, RO
    REQ BS ALMANAC, 3, RO
    REQ GPS ACQUISITION ASSIST, 4, RO
    REQ GPS SENSITIVITY ASSIST, 5, RO
    REQ GPS LOCATION ASSIST, 6, RO
    RESERVED1, 7, RO
    REQ GPS ALMANAC, 8, RO
    REQ GPS EPHEMERIS, 9, RO
    REQ GPS NAVIGATION MSG BITS, 10, RO
    REQ GPS ALMANAC CORRECTION, 11, RO
    REQ GPS SATELLITE HEALTH INFO, 12, RO
End

Begin Enum, LS MS Rsp Type enum
    REJECT, 0, RO
    PROV LOCATION RSP, 1, RO
    PROV MS INFORMATION, 2, RO
    PROV AUTO MEAS WEIGHTING FACTORS, 3, RO
    PROV PSEUDORANGE MEAS, 4, RO
    PROV PILOT PHASE MEAS, 5, RO
    PROV TIME OFFSET MEAS, 6, RO
    PROV CANCELLATION ACK, 7, RO
End

Begin Enum, Access Msg Enum
    AC - Registration, 1  , RO
    AC - Order, 2  , RO
    AC - Data Burst, 3  , RO
    AC - Origination, 4  , RO
    AC - Page Response, 5  , RO
    AC - Authentication Challenge Response, 6  , RO
    AC - Status Response, 7  , RO
    AC - TMSI Assignment Completion, 8  , RO
    AC - PACA Cancel, 9  , RO
    AC - Extended Status Response, 10 , RO
    AC - Device Information, 13 , RO
    AC - Security Mode Request, 14 , RO
    AC - Data Burst Response, 15 , RO
    AC - RR-level Registration, 16 , RO
    AC - MC-MAP Initial L3, 17 , RO
    AC - MC-MAP L3, 18 , RO
    AC - MC-MAP RRC Connection Request, 19 , RO
    AC - R-TMSI Assignment Completion, 20 , RO
    AC - Authentication Response, 21 , RO
    AC - Authentication Resynchronization, 22 , RO
    AC - Reconnect, 23 , RO
End

Begin Enum, Rcsch Address Enum
    IMSI_S and ESN (Band Class 0 Only), 0,  RO
    ESN, 1,  RO
    IMSI, 2,  RO
    IMSI and ESN, 3,  RO
    Reserved, 4,  RO
    TMSI, 5,  RO
    MC-MAP1, 6,  RO
    MC-MAP2, 7,  RO
End

Begin Enum, IMSI Class Enum
    CLASS_0, 0,  RO
    CLASS_1, 1,  RO
End

Begin Enum, IMSI Class 0 Type Enum
    IMSI_S included, 0,  RO
    IMSI_S and IMSI_11_12 included, 1,  RO
    IMSI_S and MCC included, 2,  RO
    IMSI_S IMSI_11_12 and MCC included, 3,  RO
End

Begin Enum, IMSI Class 1 Type Enum
    IMSI_S and IMSI_11_12 included, 0,  RO
    IMSI_S IMSI_11_12 and MCC included, 1,  RO
End

Begin Enum, Rcsch Pilot Rec Enum
    TYPE0, 0, RO
End

Begin Enum, Registration Type Enum
    Timer-based, 0
    Power-up, 1
    Zone-based, 2
    Power-down, 3
    Parameter-change, 4
    Ordered, 5
    Distance-based, 6
    UserZone-based, 7
    EncryptionRe-sync required, 8
End

Begin Enum, RETURN_CAUSE Codes Enum
    Normal Access, 0, RO
    Failed System Not Found, 1, RO
    Failed Protocol Mismatch, 2, RO
    Failed Registration Mismatch, 3, RO
    Failed Wrong SID, 4, RO
    Failed Wrong NID, 5, RO
End

Begin Enum, WLL_DEVICE Types Enum
    WLL NoMobility, 0
    WLL LimitMobility, 1
    WLL FullMobility, 2
End

Begin Enum, HOOK_STATUS Values Enum
    On-hook, 0
    Off-hook, 1
    Stuck Off-hook, 2
End

Begin Enum, MS Reject Type Enum
    Unspecified, 0x01, RO
    Message not accepted in this state, 0x02, RO
    Message struct not acceptable, 0x03, RO
    Message field not in valid range, 0x04, RO
    Message not understood, 0x05, RO
    Message capability not supported, 0x06, RO
    Message cannot be handled, 0x07, RO
    Message exceed allowable length, 0x08, RO
    Information record is not supported, 0x09, RO
    Search set not specified, 0x0a, RO
    Invalid search request, 0x0b, RO
    Invalid Frequency Assignment, 0x0c, RO
    Search period too short, 0x0d, RO
    RC does not match, 0x0e, RO
    Call Assignment Not Accepted, 0x10, RO
    No Such Call Control Instance, 0x11, RO
    Call Control Instance Already exist, 0x12, RO
    TAG does not match, 0x13, RO
    UAK not supported, 0x14, RO
    Configuration already restored, 0x15, RO
    MAC-I field missing, 0x16, RO
    MAC-I field present invalid, 0x18, RO
    Security sequence number invalid, 0x19, RO
    Msg can not be decrypted, 0x1a, RO
    PLCM_TYPE Mismatch, 0x1c, RO
End

Begin Enum, Paging Msg Enum
    QPCH - Indicator, 0,  RO
    PC - System Parameters, 1,  RO
    PC - Access Parameters, 2,  RO
    PC - Neighbor List, 3,  RO
    PC - CDMA Channel List, 4,  RO
    PC - Obsolete Slotted Page, 5,  RO
    PC - Obsolete Page, 6,  RO
    PC - Order Message, 7,  RO
    PC - Channel Assignment, 8,  RO
    PC - Data Burst, 9,  RO
    PC - Authentication Challenge, 10, RO
    PC - SSD Update, 11, RO
    PC - Feature Notification, 12, RO
    PC - Extended System Parameters, 13, RO
    PC - Extended Neighbor List, 14, RO
    PC - Status Request, 15, RO
    PC - Service Redirection, 16, RO
    PC - General Page, 17, RO
    PC - Global Service Redirection, 18, RO
    PC - TMSI Assignment, 19, RO
    PC - PACA, 20, RO
    PC - Extended Channel Assignment, 21, RO
    PC - General Neighbor List, 22, RO
    PC - User Zone Identification, 23, RO
    PC - Private Neighbor List, 24, RO
    PC - Reserved, 25, RO
    PC - Extended Global Service, 26, RO
    PC - Extended CDMA Channel List, 27, RO
    PC - User Zone Reject, 28, RO
    PC - ANSI-41 System Parameter, 29, RO
    PC - MC-RR Parameter, 30, RO
    PC - ANSI-41 Rand, 31, RO
    PC - Enhanced Access Parameter, 32, RO
    PC - Universal Neighbor List, 33, RO
    PC - Security Mode Command, 34, RO
    PC - Universal Page Message 1, 35, RO
    PC - Universal Page Message 2, 36, RO
    PC - Universal Page Message 3, 37, RO
    PC - Universal Page Message 4, 38, RO
    PC - Null B, 39, RO
    PC - MC-MAP System Information, 43, RO
    PC - Authentication Request, 44, RO
    PC - MEID Extended Channel Assignment, 46, RO
    PC - Alternate Tech Info, 47, RO
    PC - General Extension, 63, RO
End

Begin Enum, REV Burst Type Enum
    Unknown Burst Type [0x00], 0x00, RO
    Async Data Services [0x01], 0x01, RO
    Group-3 Facsimile [0x02], 0x02, RO
    SMS, 0x03, RO
    OTASP, 0x04, RO
    LS, 0x05, RO
    Short Data Bursts, 0x06, RO
    Ext Burst-International, 0x3e, RO
    Ext Burst Type, 0x3f, RO
End

Begin Enum, SMS Transport Msg Type Enum
    Point To Point [0x00], 0x00
    Broadcast [0x01], 0x01
    SMS Ack [0x02], 0x02
End

Begin Enum, SMS Transport Parameter Enum
    Teleserv Id [0x00], 0x00, RO
    Serv Cat [0x01], 0x01, RO
    Orig Addr [0x02], 0x02, RO
    Orig Subaddr [0x03], 0x03, RO
    Dest Addr [0x04], 0x04, RO
    Dest Subaddr [0x05], 0x05, RO
    Bearer Reply Opt [0x06], 0x06, RO
    Cause Codes [0x07], 0x07, RO
    Bearer Data [0x08], 0x08, RO
End

Begin Enum, SMS Service Category Enum
    Unknown, 0x0000
    Emergency Broadcast, 0x0001
    Administrative, 0x0002
    Maintenance, 0x0003
    General News Local, 0x0004
    General News Regional, 0x0005
    General News National, 0x0006
    General News Internatl, 0x0007
    Business News Local, 0x0008
    Business News Regional, 0x0009
    Business News National, 0x000A
    Business News Internatl, 0x000B
    Sports News Local, 0x000C
    Sports News Regional, 0x000D
    Sports News National, 0x000E
    Sports News Internatl, 0x000F
    Entertainment Local, 0x0010
    Entertainment Regional, 0x0011
    Entertainment National, 0x0012
    Entertainment Internatl, 0x0013
    Local Weather, 0x0014
    Area Traffic Report, 0x0015
    Local Airport Flght Sch, 0x0016
    Restaurants, 0x0017
    Lodgings, 0x0018
    Retail Directory, 0x0019
    Advertisements, 0x001A
    Stock Quotes, 0x001B
    Employment Opps, 0x001C
    Medical Health Hosp, 0x001D
    Technology News, 0x001E
    MultiCategory, 0x001F
End

Begin Enum, DTMF Enum
    Rsv0, 0
    1, 1
    2, 2
    3, 3
    4, 4
    5, 5
    6, 6
    7, 7
    8, 8
    9, 9
    0, 10
    *, 11
    #, 12
    Rsv13, 13
    Rsv14, 14
    Rsv15, 15
End

Begin Enum, Subaddress Type Enum
    NSAP '000', 0x00
    User Specified '001', 0x01
End

Begin Enum, SMS ErrorClass
    None '00', 0x00, RO
    Reserved '01', 0x01, RO
    Temporary '10', 0x02, RO
    Permanent '11', 0x03, RO
End

Begin Enum, IS41D Error Code Enum
    Address Vacant [0x00], 0x00
    Address Invalid [0x01], 0x01
    Netwk Resrc Shortage [0x02], 0x02
    Network Failure [0x03], 0x03
    Invalid Teleserv Id [0x04], 0x04
    Other Netwk Prob [0x05], 0x05
    No Page Response [0x20], 0x20
    Destination Busy [0x21], 0x21
    No Acknowledgement [0x22], 0x22
    Dest Resrc Shortage [0x23], 0x23
    Delivery Postponed [0x24], 0x24
    Dest Out of Service [0x25], 0x25
    Dest Not at Address [0x26], 0x26
    Other Terminal Prob [0x27], 0x27
    Radio IF Shortage [0x40], 0x40
    Radio IF Incompat [0x41], 0x41
    Other Radio Problem [0x42], 0x42
End

Begin Enum, SMS Teleservice Subparameter Type Enum
    Message Id [0x00], 0x00, RO
    User Data [0x01], 0x01, RO
    User Resp Code [0x02], 0x02, RO
    MsgCntr Time Stmp[0x03], 0x03, RO
    Validity Per ABS [0x04], 0x04, RO
    Validity Per REL [0x05], 0x05, RO
    Def Del Time ABS [0x06], 0x06, RO
    Def Del Time REL [0x07], 0x07, RO
    Priority Ind [0x08], 0x08, RO
    Privacy Ind [0x09], 0x09, RO
    Reply Option [0x0A], 0x0A, RO
    Number of Msgs [0x0B], 0x0B, RO
    Alert on Msg Del [0x0C], 0x0C, RO
    Language Ind [0x0D], 0x0D, RO
    Call Back Number [0x0E], 0x0E, RO
    Msg Disp Mode [0x0F], 0x0F, RO
    Mult Enc Usr Data[0x10], 0x10, RO
    Msg Deposit Index[0x11], 0x11, RO
    Svc Cat Prog Data[0x12], 0x12, RO
    Svc Cat Prog Rslt[0x13], 0x13, RO
    Message Status[0x14], 0x14, RO
    Ip Address[0x55], 0x55, RO
    Notify Flag[0x56], 0x56, RO
    UIM ID[0x57], 0x57, RO
End

Begin Enum, Alert Priority Style Enum
    Use Mobile Default '00', 0
    Low Priority Alert '01', 1
    Medium Pri Alert '10', 2
    High Priority Alert '11', 3
End

Begin Enum, SMS Teleservice Message Type Enum
    Reserved '0000', 0
    Deliver (MT only) '0001', 1
    Submit (MO only) '0010', 2
    Cancel (MO only) '0011', 3
    Delivr Ack (MT only) '0100', 4
    User Ack '0101', 5
End

Begin Enum, TSB58A Type Enum
    Octet '00000', 0, RO
    IS91 Ext Protocol '00001', 1, RO
    7bit ASCII '00010', 2, RO
    IA5 '00011', 3, RO
    UNICODE '00100', 4, RO
    Shift-JIS '00101', 5, RO
    KS C 5601 '00110', 6, RO
    Latin-Hebrew '00111', 7, RO
    Latin '01000', 8, RO
    GSM '01001', 9, RO
    GSM '01010', 10, RO
    Custom '10000', 16, RO
End

Begin Enum, Priority Level Enum
    Normal '00', 0
    Interactive '01', 1
    Urgent '10', 2
    Emergency '11', 3
End

Begin Enum, Privacy Level Enum
    Not Restricted '00', 0
    Restricted '01', 1
    Confidential '10', 2
    Secret '11', 3
End

Begin Enum, Language Style Enum
    Unknown [0x00], 0
    English [0x01], 1
    French [0x02], 2
    Spanish [0x03], 3
    Japanese [0x04], 4
    Korean [0x05], 5
    Chinese [0x06], 6
    Hebrew [0x07], 7
End

Begin Enum, Msg Display Style Enum
    Immediate Display '00', 0
    Mobile Default '01', 1
    User Invoke '10', 2
    Reserved '11', 3
End

Begin Enum, REV Otasp Msg Type Enum
    Configuration Response, 0x00, RO
    Download Response, 0x01, RO
    MS Key Response, 0x02, RO
    Key Generation Response, 0x03, RO
    Re-Authenticate Response, 0x04, RO
    Commit Response, 0x05, RO
    Protocol Capability Response, 0x06, RO
    SSPR Configuration Response, 0x07, RO
    SSPR Download Response, 0x08, RO
    Validation Response, 0x09, RO
    OTAPA Response, 0x0a, RO
    Extended Protocol Capability Response, 0x10, RO
End

Begin Enum, REV OTASP NAM Param Block Type Enum
    CDMA/Analog NAM, 0x00, RO
    MDN, 0x01, RO
    CDMA NAM, 0x02, RO
    IMSI_T, 0x03, RO
End

Begin Enum, FOR OTASP NAM Param Block Type Enum
    CDMA/Analog NAM, 0x00, RO
    MDN, 0x01, RO
    CDMA NAM, 0x02, RO
    IMSI_T, 0x03, RO
End

Begin Enum, REV OTASP SSPR Param Block Type Enum
    PRL Dimensions, 0x00, RO
    PRL, 0x01, RO
End

Begin Enum, FOR OTASP Validation Param Block Type Enum
    Verify SPC, 0x00, RO
    Change SPC, 0x01, RO
    Validate SPASM, 0x02, RO
End

Begin Enum, FOR OTASP Capbility Record Type Enum
    Operating Mode Information, 0x00, RO
    CDMA Band Class Information, 0x01, RO
    MEID, 0x02, RO
End

Begin Enum, REQUEST_MODE Codes Enum
    CDMA, 1
    W-Analog, 2
    Either W-Analog or CDMA, 3
    N-Analog, 4
    Either N-Analog or CDMA, 5
    Either N-Analog or W-Analog, 6
    N-Analog or W-Analog or CDMA, 7
End

Begin Enum, Number Types Enum
    International number, 1
    National number, 2
    Network-specific number, 3
    Subscribernumber, 4
    Abbreviated number, 6
End

Begin Enum, Number Plan Enum
    ISDN/Telephony, 1
    Data numbering plan, 3
    Telex numbering plan, 4
    Private numbering plan, 5
End

Begin Enum, Geo_location Type Enum
    No MS-assisted LOC CAP, 0
    IS-801 AFLT, 1
    IS-801 GPS, 2
    GPS Only, 3
End

Begin Enum, EXT_CH_IND enum
    Reserved, 0, RO
    F-PDCH F-CPCCH R-FCH, 1, RO
    F-PDCH F-CPCCH R-DCCH, 2, RO
    F-PDCH F-FCH R-FCH, 3, RO
    F-PDCH F-DCCH R-DCCH, 4, RO
    F-PDCH F-FCH R-FCH R-DCCH, 5, RO
    F-PDCH F-FCH R-FCH F-DCCH R-DCCH, 6, RO
End

Begin Enum, Access Status Qual Info Type
    Terminal Info, 0x08, RO
    Roaming Info, 0x09, RO
    Security Status, 0x0a, RO
    IMSI, 0x0C, RO
    ESN, 0x0d, RO
    Band Class Info, 0x0e, RO
    Power Class Info, 0x0f, RO
    Rate Info, 0x10, RO
    Operating Mode Info, 0x11, RO
    Service Option Info, 0x12, RO
    Multiplex Option Info, 0x13, RO
End

Begin Enum, Qual Info Type Enum
    0 [None], 0, RO
    1 [Band_Class], 1, RO
    2 [Band_Class and Op_Mode], 2, RO
End

Begin Enum, REV Information Record Type Enum
    1 [Reserved1], 1, RO
    2 [Reserved2], 2, RO
    3 [Keypad Facility], 3, RO
    4 [Called Party Number], 4, RO
    5 [Calling Party Number], 5, RO
    6 [Reserved3], 6, RO
    7 [Call Mode], 7, RO
    8 [Terminal Information], 8, RO
    9 [Roaming Information], 9, RO
    10 [Security Status], 10,RO
    11 [Connected Number], 11,RO
    12 [IMSI], 12,RO
    13 [ESN], 13,RO
    14 [Band Class Information], 14,RO
    15 [Power Class Information], 15,RO
    16 [Operating Mode Information], 16,RO
    17 [Service Option Information], 17,RO
    18 [Multiplex Option Information], 18,RO
    19 [Service Configuration], 19,RO
    20 [Called Party Subaddress], 20,RO
    21 [Calling Party Subaddress], 21,RO
    22 [Connected Subaddress], 22,RO
    23 [Power Control Information], 23,RO
    24 [IMSI_M], 24,RO
    25 [IMSI_T], 25,RO
    26 [Capability Information], 26,RO
    27 [Channel Configuration Cap], 27,RO
    28 [Extended Multiplex Option], 28,RO
    29 [Reserved4], 29,RO
    30 [Geo-location Information], 30,RO
    31 [Band Subclass Information], 31,RO
    32 [GLB Emergency Call], 32,	RO
    33 [Hook Status], 33, RO
    34 [QoS Parameters], 34,	RO
    35 [Encryption Cap], 35, RO
    36 [Sig MSG Integrity Cap], 36,	RO
    39 [MEID], 39,RO
End

Begin Enum, Fcsch Address Enum
    IMSI_S, 0,  RO
    ESN, 1,  RO
    IMSI, 2,  RO
    TMSI, 3,  RO
    Reserved1, 4,  RO
    Broadcast, 5,  RO
    Reserved2, 6,  RO
    Reserved3, 7,  RO
End

Begin Enum, Status Request Enum
    Reserved, 6, RO
    Call Mode, 7, RO
    Terminal Information, 8, RO
    Roaming Information, 9, RO
    Security Status, 10, RO
    IMSI, 12, RO
    ESN, 13, RO
    IMSI_M, 14, RO
    IMSI_T, 15, RO
End

Begin Enum, CAM Assign Mode Enum
    0 [Zero], 0, RO
    1 [One], 1, RO
    2 [Acquire Analog System], 2, RO
    3 [Analog Voice Ch Assignment], 3, RO
    4 [Ext Traffic Ch Assignment], 4, RO
    5 [Ext Paging Ch Assignment], 5, RO
    6 [Six], 6, RO
    7 [Seven], 7, RO
End

Begin Enum, FOR Burst Type Enum
    Unknown Burst Type [0x00], 0x00, RO
    Async Data Services [0x01], 0x01, RO
    Group-3 Facsimile [0x02], 0x02, RO
    SMS, 0x03, RO
    OTASP, 0x04, RO
    LS, 0x05, RO
    Short Data Bursts, 0x06, RO
    Ext Burst Type-International, 0x3e, RO
    Ext Burst Type, 0x3f, RO
End

Begin Enum, FOR Otasp Msg Type Enum
    Configuration Request, 0x00, RO
    Download Request, 0x01, RO
    MS Key Request, 0x02, RO
    Key Generation Request, 0x03, RO
    Re-Authenticate Request, 0x04, RO
    Commit Request, 0x05, RO
    Protocol Capability Request, 0x06, RO
    SSPR Configuration Request, 0x07, RO
    SSPR Download Request, 0x08, RO
    Validation Request, 0x09, RO
    OTAPA Request, 0x0a, RO
End

Begin Enum, FOR OTASP SSPR Param Block Type Enum
    PRL, 0x00, RO
    EXT PRL, 0x01, RO
End

Begin Enum, FOR Information Record Type Enum
    1 [Display], 1, RO
    2 [Called Party Number], 2, RO
    3 [Calling Party Number], 3, RO
    4 [Connected Number], 4, RO
    5 [Signal], 5, RO
    6 [Message Waiting], 6, RO
    7 [Service Configuration], 7, RO
    8 [Called Party Subaddress], 8, RO
    9 [Calling party Subaddress], 9, RO
    10 [Connected Subaddress], 10,RO
    11 [Redirecting Number], 11,RO
    12 [Redirecting Subaddress], 12,RO
    13 [Meter Pulses], 13,RO
    14 [Parametric Alerting], 14,RO
    15 [Line Control], 15,RO
    16 [Extended Display], 16,RO
    19 [Non-Negotiable Service Config], 19,RO
    20 [Multiple Char Extended Display], 20,RO
    21 [Call Waiting Indicator], 21,RO
    Extended Record Type-International, 0xfe,RO
End

Begin Enum, Status Request Record Type Enum
    6 [Reserved], 6
    7 [Call Mode], 7
    8 [Terminal Info], 8
    9 [Roaming Info], 9
    10 [Security Status], 10
    12 [IMSI], 12
    13 [ESN], 13
    14 [Band Class Info], 14
    15 [Power Class Info], 15
    16 [Op Mode Info], 16
    17 [Service Option Info], 17
    18 [Multiplex Option Info], 18
    19 [Service Configuration], 19
    23 [Power Control Information], 23
    24 [IMSI_M], 24
    25 [IMSI_T], 25
    26 [Capability Information], 26
    27 [Channel Config Cap Info], 27
    28 [Ext Multiplex Option Info], 28
    30 [Geo-location Info], 30
    31 [Band Subclass Info], 31
    33 [Hook Status], 33
    35 [Encryption Capability], 35
End

Begin Enum, Service Redirection Type Enum
    0 [NDSS off indication], 0, RO
    1 [Redirection to AMPS], 1, RO
    2 [Redirection to CDMA], 2, RO
    5 [Redirection to a DS-41 system], 5, RO
End

Begin Enum, Page Class Enum
    0_IMSI_S, 0,  RO
    0_IMSI_S_IMSI_11_12, 1,  RO
    0_IMSI_S_MCC, 2,  RO
    0_IMSI_S_IMSI_11_12_MCC, 3,  RO
    1_IMSI_S_IMSI_11_12, 4,  RO
    1_IMSI_S_IMSI_11_12_MCC, 5,  RO
    Reserved1, 6,  RO
    Reserved2, 7,  RO
    2_32, 8,  RO
    2_24, 9,  RO
    2_16, 10, RO
    2_32_TMSI_ZONE, 11, RO
    Class3_Broadcast, 12, RO
    Class3a_Broadcast, 13, RO
    Class3b_Broadcast, 14, RO
    Class3c_Broadcast, 15, RO
End

Begin Enum, Global Service Redirection Enum
    Redirection to AMPS, 1, RO
    Redirection to CDMA, 2, RO
End

Begin Enum, ECAM Assign Mode Enum
    0 [0], 0, RO
    1 [1], 1, RO
    2 [2], 2, RO
    3 [3], 3, RO
    4 [4], 4, RO
    5 [5], 5, RO
End

Begin Enum, ECAM CH Enum
    01, 1, RO
    10, 2, RO
    11, 3, RO
End

Begin Enum, OTD Pilot Enum
    1X Common Pilot w Transmit Diversity, 0, RO
    1X Auxiliary Pilot, 1, RO
    1X Aux Pilot w Transmit Diversity, 2, RO
    3X Common Pilot, 3, RO
    3X Auxiliary Pilot, 4, RO
End

Begin Enum, NGHBR Pilot Type Enum
    1X Common Pilot with TD, 0, RO
    1X Auxiliary Pilot, 1, RO
    1X Auxiliary Pilot with TD, 2, RO
    3X Common Pilot, 3, RO
    3X Auxiliary Pilot, 4, RO
End

Begin Enum, PNLM Radio Interface Type Enum
    Type 0, 0,  RO
End

Begin Enum, EGSRDM Type Enum
    Type 1, 1,  RO
    Type 2, 2,  RO
End

Begin Enum, UNLM Radio Interface Type Enum
    MC System, 0, RO
    Analog System, 1, RO
End

Begin Enum, MECAM Assign Mode Enum
    1 [1], 1, RO
    4 [4], 4, RO
End

Begin Enum, ATI Radio Interface Type Enum
    HRPD, 2, RO
    E-UTRAN, 3, RO
    WiMAX, 4, RO
End

Begin Enum, FTC General Extension Type Enum
    Reverse Channel Information, 0,  RO
    Radio Configuration Parameters, 1,  RO
    Delayed ARQ, 2,  RO
End

Begin Enum, GEM Paging Msg Enum
    PC - Channel Assignment, 8,  RO
    PC - Extended Channel Assignment, 21, RO
    PC - MEID Extended Channel Assignment, 46, RO
End

Begin Enum, GEMCAM Assign Mode Enum
    4 [Ext Traffic Ch Assignment], 4, RO
End

Begin Enum, GEMECAM Assign Mode Enum
    0 [0], 0, RO
    1 [1], 1, RO
    4 [4], 4, RO
End

Begin Enum, Parameter ID Enum
    P_MUX1_REV_FCH_1, 1,  RO
    P_MUX1_REV_FCH_2, 2,  RO
    P_MUX1_REV_FCH_3, 3,  RO
    P_MUX1_REV_FCH_4, 4,  RO
    P_MUX1_REV_FCH_5, 5,  RO
    P_MUX1_REV_FCH_6, 6,  RO
    P_MUX1_REV_FCH_7, 7,  RO
    P_MUX1_REV_FCH_8, 8,  RO
    P_MUX1_REV_FCH_9, 9,  RO
    P_MUX1_REV_FCH_10, 10, RO
    P_MUX1_REV_FCH_11, 11, RO
    P_MUX1_REV_FCH_12, 12, RO
    P_MUX1_REV_FCH_13, 13, RO
    P_MUX1_REV_FCH_14, 14, RO
    P_MUX1_FOR_FCH_1, 15, RO
    P_MUX1_FOR_FCH_2, 16, RO
    P_MUX1_FOR_FCH_3, 17, RO
    P_MUX1_FOR_FCH_4, 18, RO
    P_MUX1_FOR_FCH_5, 19, RO
    P_MUX1_FOR_FCH_6, 20, RO
    P_MUX1_FOR_FCH_7, 21, RO
    P_MUX1_FOR_FCH_8, 22, RO
    P_MUX1_FOR_FCH_9, 23, RO
    P_MUX1_FOR_FCH_10, 24, RO
    P_MUX1_FOR_FCH_11, 25, RO
    P_MUX1_FOR_FCH_12, 26, RO
    P_MUX1_FOR_FCH_13, 27, RO
    P_MUX1_FOR_FCH_14, 28, RO
    P_PAG_1, 29, RO
    P_PAG_2, 30, RO
    P_PAG_3, 31, RO
    P_PAG_4, 32, RO
    P_PAG_5, 33, RO
    P_PAG_6, 34, RO
    P_PAG_7, 35, RO
    P_ACC_1, 36, RO
    P_ACC_2, 37, RO
    P_ACC_3, 38, RO
    P_ACC_4, 39, RO
    P_ACC_5, 40, RO
    P_ACC_6, 41, RO
    P_ACC_7, 42, RO
    P_ACC_8, 43, RO
    P_LAYER2_RTC1, 44, RO
    P_LAYER2_RTC2, 45, RO
    P_LAYER2_RTC3, 46, RO
    P_LAYER2_RTC4, 47, RO
    P_LAYER2_RTC5, 48, RO
    P_OTHER_SYS_TIME, 49, RO
    P_MUX2_REV_FCH_1, 50, RO
    P_MUX2_REV_FCH_2, 51, RO
    P_MUX2_REV_FCH_3, 52, RO
    P_MUX2_REV_FCH_4, 53, RO
    P_MUX2_REV_FCH_5, 54, RO
    P_MUX2_REV_FCH_6, 55, RO
    P_MUX2_REV_FCH_7, 56, RO
    P_MUX2_REV_FCH_8, 57, RO
    P_MUX2_REV_FCH_9, 58, RO
    P_MUX2_REV_FCH_10, 59, RO
    P_MUX2_REV_FCH_11, 60, RO
    P_MUX2_REV_FCH_12, 61, RO
    P_MUX2_REV_FCH_13, 62, RO
    P_MUX2_REV_FCH_15, 64, RO
    P_MUX2_REV_FCH_16, 65, RO
    P_MUX2_REV_FCH_17, 66, RO
    P_MUX2_REV_FCH_18, 67, RO
    P_MUX2_REV_FCH_19, 68, RO
    P_MUX2_REV_FCH_20, 69, RO
    P_MUX2_REV_FCH_21, 70, RO
    P_MUX2_REV_FCH_22, 71, RO
    P_MUX2_REV_FCH_23, 72, RO
    P_MUX2_REV_FCH_24, 63, RO
    P_MUX2_REV_FCH_25, 74, RO
    P_MUX2_REV_FCH_26, 75, RO
    P_MUX2_FOR_FCH_1, 76, RO
    P_MUX2_FOR_FCH_2, 77, RO
    P_MUX2_FOR_FCH_3, 78, RO
    P_MUX2_FOR_FCH_4, 79, RO
    P_MUX2_FOR_FCH_5, 80, RO
    P_MUX2_FOR_FCH_6, 81, RO
    P_MUX2_FOR_FCH_7, 82, RO
    P_MUX2_FOR_FCH_8, 83, RO
    P_MUX2_FOR_FCH_9, 84, RO
    P_MUX2_FOR_FCH_10, 85, RO
    P_MUX2_FOR_FCH_11, 86, RO
    P_MUX2_FOR_FCH_12, 87, RO
    P_MUX2_FOR_FCH_13, 88, RO
    P_MUX2_FOR_FCH_14, 89, RO
    P_MUX2_FOR_FCH_15, 90, RO
    P_MUX2_FOR_FCH_16, 91, RO
    P_MUX2_FOR_FCH_17, 92, RO
    P_MUX2_FOR_FCH_18, 93, RO
    P_MUX2_FOR_FCH_19, 94, RO
    P_MUX2_FOR_FCH_20, 95, RO
    P_MUX2_FOR_FCH_21, 96, RO
    P_MUX2_FOR_FCH_22, 97, RO
    P_MUX2_FOR_FCH_23, 98, RO
    P_MUX2_FOR_FCH_24, 99, RO
    P_MUX2_FOR_FCH_25, 100,RO
    P_MUX2_FOR_FCH_26, 101,RO
    P_SCCH1_REV_S, 102,RO
    P_SCCH1_REV_P, 103,RO
    P_SCCH2_REV_S, 104,RO
    P_SCCH2_REV_P, 105,RO
    P_SCCH3_REV_S, 106,RO
    P_SCCH3_REV_P, 107,RO
    P_SCCH4_REV_S, 108,RO
    P_SCCH4_REV_P, 109,RO
    P_SCCH5_REV_S, 110,RO
    P_SCCH5_REV_P, 111,RO
    P_SCCH6_REV_S, 112,RO
    P_SCCH6_REV_P, 113,RO
    P_SCCH7_REV_S, 114,RO
    P_SCCH7_REV_P, 115,RO
    P_SCCH1_FOR_S, 116,RO
    P_SCCH1_FOR_P, 117,RO
    P_SCCH2_FOR_S, 118,RO
    P_SCCH2_FOR_P, 119,RO
    P_SCCH3_FOR_S, 120,RO
    P_SCCH3_FOR_P, 121,RO
    P_SCCH4_FOR_S, 122,RO
    P_SCCH4_FOR_P, 123,RO
    P_SCCH5_FOR_S, 124,RO
    P_SCCH5_FOR_P, 125,RO
    P_SCCH6_FOR_S, 126,RO
    P_SCCH6_FOR_P, 127,RO
    P_SCCH7_FOR_S, 128,RO
    P_SCCH7_FOR_P, 129,RO
    P_MM_RTC1, 130,RO
    P_MM_RTC2, 131,RO
    P_MM_RTC3, 132,RO
    P_MM_RTC4, 133,RO
    P_MM_RTC5, 134,RO
    P_MUX1_REV_FCH_15, 135,RO
    P_MUX1_REV_FCH_5_ms, 136,RO
    P_MUX1_FOR_FCH_15, 137,RO
    P_MUX1_FOR_FCH_5_ms, 138,RO
    P_MUX2_REV_FCH_27, 139,RO
    P_MUX2_REV_FCH_5_ms, 140,RO
    P_MUX2_FOR_FCH_27, 141,RO
    P_MUX2_FOR_FCH_5_ms, 142,RO
    P_MUX1_REV_DCCH_1, 143,RO
    P_MUX1_REV_DCCH_2, 144,RO
    P_MUX1_REV_DCCH_3, 145,RO
    P_MUX1_REV_DCCH_4, 146,RO
    P_MUX1_REV_DCCH_5, 147,RO
    P_MUX1_REV_DCCH_6, 148,RO
    P_MUX1_REV_DCCH_7, 149,RO
    P_MUX1_REV_DCCH_8, 150,RO
    P_MUX1_REV_DCCH_9, 151,RO
    P_MUX1_REV_DCCH_10, 152,RO
    P_MUX1_REV_DCCH_11, 153,RO
    P_MUX1_REV_DCCH_12, 154,RO
    P_MUX1_REV_DCCH_13, 155,RO
    P_MUX1_REV_DCCH_14, 156,RO
    P_MUX1_REV_DCCH_15, 157,RO
    P_MUX1_REV_DCCH_5_ms, 158,RO
    P_MUX1_FOR_DCCH_1, 159,RO
    P_MUX1_FOR_DCCH_2, 160,RO
    P_MUX1_FOR_DCCH_3, 161,RO
    P_MUX1_FOR_DCCH_4, 162,RO
    P_MUX1_FOR_DCCH_5, 163,RO
    P_MUX1_FOR_DCCH_6, 164,RO
    P_MUX1_FOR_DCCH_7, 165,RO
    P_MUX1_FOR_DCCH_8, 166,RO
    P_MUX1_FOR_DCCH_9, 167,RO
    P_MUX1_FOR_DCCH_10, 168,RO
    P_MUX1_FOR_DCCH_11, 169,RO
    P_MUX1_FOR_DCCH_12, 170,RO
    P_MUX1_FOR_DCCH_13, 171,RO
    P_MUX1_FOR_DCCH_14, 172,RO
    P_MUX1_FOR_DCCH_15, 173,RO
    P_MUX1_FOR_DCCH_5_ms, 174,RO
    P_MUX2_REV_DCCH_1, 175,RO
    P_MUX2_REV_DCCH_2, 176,RO
    P_MUX2_REV_DCCH_3, 177,RO
    P_MUX2_REV_DCCH_4, 178,RO
    P_MUX2_REV_DCCH_5, 179,RO
    P_MUX2_REV_DCCH_6, 180,RO
    P_MUX2_REV_DCCH_7, 181,RO
    P_MUX2_REV_DCCH_8, 182,RO
    P_MUX2_REV_DCCH_9, 183,RO
    P_MUX2_REV_DCCH_10, 184,RO
    P_MUX2_REV_DCCH_11, 185,RO
    P_MUX2_REV_DCCH_12, 186,RO
    P_MUX2_REV_DCCH_13, 187,RO
    P_MUX2_REV_DCCH_14, 188,RO
    P_MUX2_REV_DCCH_15, 189,RO
    P_MUX2_REV_DCCH_16, 190,RO
    P_MUX2_REV_DCCH_17, 191,RO
    P_MUX2_REV_DCCH_18, 192,RO
    P_MUX2_REV_DCCH_19, 193,RO
    P_MUX2_REV_DCCH_20, 194,RO
    P_MUX2_REV_DCCH_21, 195,RO
    P_MUX2_REV_DCCH_22, 196,RO
    P_MUX2_REV_DCCH_23, 197,RO
    P_MUX2_REV_DCCH_24, 198,RO
    P_MUX2_REV_DCCH_25, 199,RO
    P_MUX2_REV_DCCH_26, 200,RO
    P_MUX2_REV_DCCH_27, 201,RO
    P_MUX2_REV_DCCH_5_ms, 202,RO
    P_MUX2_FOR_DCCH_1, 203,RO
    P_MUX2_FOR_DCCH_2, 204,RO
    P_MUX2_FOR_DCCH_3, 205,RO
    P_MUX2_FOR_DCCH_4, 206,RO
    P_MUX2_FOR_DCCH_5, 207,RO
    P_MUX2_FOR_DCCH_6, 208,RO
    P_MUX2_FOR_DCCH_7, 209,RO
    P_MUX2_FOR_DCCH_8, 210,RO
    P_MUX2_FOR_DCCH_9, 211,RO
    P_MUX2_FOR_DCCH_10, 212,RO
    P_MUX2_FOR_DCCH_11, 213,RO
    P_MUX2_FOR_DCCH_12, 214,RO
    P_MUX2_FOR_DCCH_13, 215,RO
    P_MUX2_FOR_DCCH_14, 216,RO
    P_MUX2_FOR_DCCH_15, 217,RO
    P_MUX2_FOR_DCCH_16, 218,RO
    P_MUX2_FOR_DCCH_17, 219,RO
    P_MUX2_FOR_DCCH_18, 220,RO
    P_MUX2_FOR_DCCH_19, 221,RO
    P_MUX2_FOR_DCCH_20, 222,RO
    P_MUX2_FOR_DCCH_21, 223,RO
    P_MUX2_FOR_DCCH_22, 224,RO
    P_MUX2_FOR_DCCH_23, 225,RO
    P_MUX2_FOR_DCCH_24, 226,RO
    P_MUX2_FOR_DCCH_25, 227,RO
    P_MUX2_FOR_DCCH_26, 228,RO
    P_MUX2_FOR_DCCH_27, 229,RO
    P_MUX2_FOR_DCCH_5_ms, 230,RO
    P_SCH0_REV_1X, 231,RO
    P_SCH0_REV_2X, 232,RO
    P_SCH0_REV_4X, 233,RO
    P_SCH0_REV_8X, 234,RO
    P_SCH0_REV_16X, 235,RO
    P_SCH0_REV_LTU, 236,RO
    P_SCH0_REV_LTUOK, 237,RO
    P_SCH1_REV_1X, 238,RO
    P_SCH1_REV_2X, 239,RO
    P_SCH1_REV_4X, 240,RO
    P_SCH1_REV_8X, 241,RO
    P_SCH1_REV_16X, 242,RO
    P_SCH1_REV_LTU, 243,RO
    P_SCH1_REV_LTUOK, 244,RO
    P_SCH0_FOR_1X, 245,RO
    P_SCH0_FOR_2X, 246,RO
    P_SCH0_FOR_4X, 247,RO
    P_SCH0_FOR_8X, 248,RO
    P_SCH0_FOR_16X, 249,RO
    P_SCH0_FOR_LTU, 250,RO
    P_SCH0_FOR_LTUOK, 251,RO
    P_SCH1_FOR_1X, 252,RO
    P_SCH1_FOR_2X, 253,RO
    P_SCH1_FOR_4X, 254,RO
    P_SCH1_FOR_8X, 255,RO
    P_SCH1_FOR_16X, 256,RO
    P_SCH1_FOR_LTU, 257,RO
    P_SCH1_FOR_LTUOK, 258,RO
    P_BCCH_1, 259,RO
    P_BCCH_2, 260
    P_BCCH_3, 261
    P_BCCH_4, 262
    P_BCCH_5, 263
    P_FCCCH_1, 264
    P_FCCCH_2, 265
    P_FCCCH_3, 266
    P_FCCCH_4, 267
    P_MUX_FLEX_RFCH_1, 268
    P_MUX_FLEX_RFCH_2, 269
    P_MUX_FLEX_RFCH_3, 270
    P_MUX_FLEX_RFCH_4, 271
    P_MUX_FLEX_RFCH_5, 272
    P_MUX_FLEX_RFCH_6, 273
    P_MUX_FLEX_RFCH_7, 274
    P_MUX_FLEX_RFCH_8, 275
    P_MUX_FLEX_RFCH_9, 276
    P_MUX_FLEX_RFCH_10, 277
    P_MUX_FLEX_RFCH_11, 278
    P_MUX_FLEX_RFCH_12, 279
    P_MUX_FLEX_RFCH_13, 280
    P_MUX_FLEX_RFCH_14, 281
    P_MUX_FLEX_RFCH_15, 282
    P_MUX_FLEX_RFCH_16, 283
    P_MUX_FLEX_RFCH_17, 284
    P_MUX_FLEX_RFCH_18, 285
    P_MUX_FLEX_RFCH_19, 286
    P_MUX_FLEX_RFCH_20, 287
    P_MUX_FLEX_RFCH_21, 288
    P_MUX_FLEX_RFCH_22, 289
    P_MUX_FLEX_RFCH_23, 290
    P_MUX_FLEX_RFCH_24, 291
    P_MUX_FLEX_RFCH_25, 292
    P_MUX_FLEX_RFCH_26, 293
    P_MUX_FLEX_RFCH_27, 294
End

Begin Enum, PCNM RPC Type Enum
    Adj Gain [0x0], 0, RO
    Adj Gain For Basic Rates [0x01], 1, RO
    Adj Gain For High Rates [0x10], 2, RO
    Adj Gain For R-CQICH, 3, RO
End

Begin Enum, Search Mode Type Enum
    Search CDMA Pilot on Cand Freq [0x00], 0, RO
    Search Analog chan [0x01], 1, RO
    Search Direct Spread [0x10], 2, RO
End

Begin Enum, UHDM Active Set Enum
    0, 0, RO
    2, 2, RO
    5, 5, RO
    6, 6, RO
    7, 7, RO
End

Begin Enum, BSSRSPM Record Type enum
    Pilot Information, 0, RO
End

Begin Enum, RTC Ref Pilot Type enum
    Auxiliary Pilot, 0, RO
End

Begin Enum, CFSRPM Search Enum, BitPack
    0, 0, RO
    1, 1, RO
End

Begin Enum, RTC Pilot Type enum
    Auxiliary Pilot, 1, RO
End

Begin Enum, CH_IND enum
    No Add CH Req, 0
    FCH, 1
    DCCH, 2
    Reserved, 3
    Cont Rev Pilot CH, 4
    FCH & Cont Rev Pilot CH, 5
    Reserved1, 6
    Ext Ch Ind, 7
End

Begin Enum, BSSREQM Record Type enum
    Pilot Information, 0, RO
End

Begin Enum, Status Rsp CDMA Msg Count Enum
    Good Msgs, 0, RO
    Bad Msgs, 1, RO
    Unknown, 2, RO
End

Begin Enum, Status Rsp CP Enter Reason Enum
    Normal CDMA Op, 0, RO
    Cont Prev Op, 1, RO
    Offline CDMA Mode, 2, RO
    Orig CDMA Mode, 3, RO
    Normal AMPS Op, 4, RO
    AMPS Handoff, 5, RO
    Orig AMPS Call, 6, RO
    AMPS Page Rsp, 7, RO
    AMPS Voice CH Assign, 8, RO
    AMPS Cont Prev Op, 9, RO
    AMPS Offline Mode, 10, RO
End

Begin Enum, GCSNA Msg ID Enum
    GCSNA Circuit Service, 1, RO
    GCSNA L2 Ack, 2, RO
    GCSNA Service Reject, 3, RO
    GCSNA 1x Param Request, 4, RO
    GCSNA 1x Parameters, 5, RO
    GCSNA 1x Param Ack, 6, RO
End

Begin Enum, GCSNA Channel Type Enum
    Common, 0, RO
    Dedicated, 1, RO
End

Begin Enum, GCSNA TLAC Header Rec Type Enum
    Addressing, 0, RO
    Auth, 1, RO
End

Begin Enum, Modem Type
    LTE, 0
    CDMA, 1
    GSM, 2
    UMTS, 3
End

Begin Enum, PDN Status Type
    IDLE, 
    INITIAL ATTACHING, 
    PS_REQ HANDOVER ATTACHING, 
    ATTACHING, 
    ATTACHED, 
    SUSPENDED, 
    DISCONNECTING, 
    PENDING_ATTACH_REQ, 
    PENDING_DISCONNECT_REQ, 
    PENDING_DETACH_REQ, 
    WAIT FOR AP to SET UP Calls, 
    FAULTY CONDITION, 
    PS_REQ WAIT FOR AP to SETUP, 
End

Begin Enum, Address Type
    IPv4, 1
    IPv6, 2
    IPv4 and IPv6, 3
End

Begin Enum, Modem State Type
    ACTIVE, 
    DORMANT, 
    IDLE, 
    SUSPENDED, 
    DISABLED, 
    On1XTCH, 
    RELEASED, 
End

Begin Enum, Attaching Type
    initial attaching, 1
    handover attaching, 3
End

Begin Enum, PDP Flag Type
    PCSCF Addr is not needed, 0
    PCSCF ADdr is requested, 1
End

Begin Enum, GmssAcqSt
    GMSS_ACQ_NOT_SCANNING, 
    GMSS_ACQ_SCANNING, 
    GMSS_ACQ_RESULT_UPDATED, 
    GMSS_ACQ_CHECKED_AVAIL, 
    GMSS_ACQ_CHECKED_UNAVAIL, 
    MAX_GMSS_ACQ_STATUS, 
End

Begin Enum, IratRfcCdmaState
    CDMA_Null, 
    CDMA_Main, 
    CDMA_Tx, 
    LTE_Div, 
    CDMA_WFR_LTE_RSP, 
End

Begin Enum, IratRfcLteState
    LTE_Null, 
    LTE_Main, 
    LTE_Tx, 
    CDMA_Div, 
    LTE_WFR_LTE_RSP, 
End

Begin Enum, PDS IS801 Msg Enum
    FOR IP packet Rec LS, 0, RO
    REV IP packet Rec LS, 1, RO
End

Begin Enum, HscCdmaModeT
    1X, 0
    DO, 1
    INVALID, 2
End

Begin Enum, HscSpStateT
    Non-Slotted, 0
    Pch Monitor, 1
    Wait for Stop Ack, 2
    Sleep, 3
End

Begin Enum, L1dSPageStateT
    SP_STATE_IDLE = 0, 
    SP_STATE_CLOCK_CAL, 
    SP_STATE_DIFF_FREQ_SEARCH, 
    SP_STATE_PCH_FCCCH_MONITOR, 
    SP_STATE_WAIT_FOR_SLEEP, 
    SP_STATE_WAIT_FOR_SEARCH, 
    SP_STATE_WAIT_FOR_SLEEP_ACK, 
    SP_STATE_SLEEP, 
    SP_STATE_QPCH1_MONITOR, 
    SP_STATE_QPCH2_MONITOR, 
    SP_STATE_CCI_MONITOR, 
End

Begin Enum, WakeModeT
    PCH, 0
    QPCH_1, 1
    QPCH_2, 2
    CCI, 3
    FCCCH, 4
End

Begin Enum, DScp Attribute Type Enum
    PHY Layer Subtype, 0x0, RO
    CC MAC Subtype, 0x1, RO
    AC MAC Subtype, 0x2, RO
    FTC MAC Subtype, 0x3, RO
    RTC MAC Subtype, 0x4, RO
    Key Exchange Subtype, 0x5, RO
    Authentication Subtype, 0x6, RO
    Encryption Subtype, 0x7, RO
    Security Subtype, 0x8, RO
    Packet Consolidation Subtype, 0x9, RO
    Air-Link Management Subtype, 0xa, RO
    Initialization State Subtype, 0xb, RO
    Idle State Subtype, 0xc, RO
    Connected State Subtype, 0xd, RO
    Route Update Subtype, 0xe, RO
    Overhead Message Subtype, 0xf, RO
    Session Management Subtype, 0x10, RO
    Address Management Subtype, 0x11, RO
    Session Configuration Subtype, 0x12, RO
    Stream Subtype, 0x13, RO
    Stream 0 Application Subtype, 0x14, RO
    Stream 1 Application Subtype, 0x15, RO
    Stream 2 Application Subtype, 0x16, RO
    Stream 3 Application Subtype, 0x17, RO
    Reserved0, 0x18, RO
    Virtual Stream Subtype, 0x19, RO
    Reserved1, 0x1a, RO
    Multimode Capability Discovery Subtype, 0x1b, RO
    SessionConfigurationToken, 0x0100, RO
    SupportGAUPSessionConfigurationToken, 0x0101, RO
    PersonalityCount, 0x0110, RO
    SupportConfigurationLock, 0x0102, RO
    PriorSession, 0x1000, RO
    ATSupportedApplicaitonSubtypes, 0x1001, RO
End

Begin Enum, ATIType
    ATI_BATI, 0
    ATI_MATI, 1
    ATI_UATI, 2
    ATI_RATI, 3
    ATI_NULL, 0xff
End

Begin Enum, Session State Enum
    SESSION_CLOSE, 0
    SESSION_AMPSETUP, 1
    SESSION_ATINIT_NEGO, 2
    SESSION_ANINIT_NEGO, 3
    SESSION_OPEN, 4
    SESSION_CLOSING, 5
End

Begin Enum, ATState Enum
    PowerOff, 0
    Inactive, 1
    PilotAcq, 2
    Sync, 3
    Idle, 4
    Access, 5
    Connected, 6
End

Begin Enum, Almp State Enum
    Init, 0
    Idle, 1
    ConnectionSetup, 2
    Connected, 3
End

Begin Enum, Insp State Enum
    Inactive, 0
    NetworkDetermination, 1
    PilotAcq, 2
    Sync, 3
    TimingChange, 4
    INSP_WFR_1XASSIST_SIG, 5
End

Begin Enum, Idp State Enum
    Inactive, 0
    Monitor, 1
    Sleep, 2
    ConnectionSetup, 3
    FreezePending, 4
    Freeze, 5
    ConnFrozen, 6
    WaitFor1XAssistAcqSignal, 7
End

Begin Enum, Csp State Enum
    Inactive, 0
    Closing, 1
    Open, 2
End

Begin Enum, Omp State Enum
    Inactive, 0
    Active, 1
End

Begin Enum, RFC Rx AGC Type
    Disabled, 0
    Init Acq, 1
    Fast Prep, 2
    Fast, 3
    Steady State, 4
    Traffic, 5
    Test, 6
End

Begin Enum, RFC AFC Type
    Disabled, 0
    Init Acq - No Pilot, 1
    Init Acq - Pilot Found, 2
    Init Acq - Finger Alloc, 3
    Slotted, 4
    Online, 5
    Test, 6
End

Begin Enum, FmpAllocStatT
    0 NOT_DET (Disable), 0
    1 UNCH_ALLOC (Keep), 1
    2 UNCH_DISABLE (Disable), 2
    3 CH_ALLOC (New Alloc), 3
    4 CH_DISABLE (Disable), 4
End

Begin Enum, FmpMacAllocStatT
    0 NOT_DET (Disable), 0
    1 UNCH_ALLOC (Keep), 1
    2 UNCH_DISABLE (Disable), 2
    3 CH_ALLOC (New Alloc), 3
    4 CH_DISABLE (Disable), 4
End

Begin Enum, FmpMode
    0 FMP_INITACQ, 0
    1 FMP_TRAFFIC, 1
    3 FMP_IDLE, 3
End

Begin Enum, RmcFmpSpySenderT
    None, 0
    FngProc, 1
    CfgInitAcq, 2
    CfgIdle, 3
    CfgDisableDivPath, 4
    CfgFngAssignPrep, 5
    CfgFngExist, 6
    CfgFngDeassign, 7
    FngAlloc, 8
End

Begin Enum, FmpFingerScanAllocStatT
    0 NOT_DET (Disable), 0
    1 UNCH_ALLOC (Keep), 1
    2 UNCH_DISABLE (Disable), 2
    3 CH_ALLOC (New Alloc), 3
    4 CH_DISABLE (Disable), 4
End

Begin Enum, EEVDO_SYS_PILOT_SET_TYPE Enum
    ActiveSet, 0
    CandidateSet, 1
    NeighborSet, 2
    RemainingSet, 3
    Empty, 4
End

Begin Enum, DO PhyChanType Enum
    CC, 0
    FTC, 1
    AC, 2
    RTC, 3
    EAC, 4
    BCMC, 5
    BC_ADR, 6
End

Begin Enum, ECCM Msg Enum
    Null, 0, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
End

Begin Enum, ECCM AttributeID Enum
    CCShortPacketsMACIndex, 0, RO
End

Begin Enum, DACM Msg Enum
    ACAck, 0, RO
    AccessParameters, 1, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
End

Begin Enum, DACM AttributeID Enum
    InitialConfiguration, 0, RO
    PowerParameters, 1, RO
End

Begin Enum, EACM Msg Enum
    ACAck, 0, RO
    AccessParameters, 1, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
    AttributeUpdateRequest, 0x52,RO
    AttributeUpdateAccept, 0x53,RO
    AttributeUpdateReject, 0x54,RO
End

Begin Enum, EACM AttributeID Enum
    InitialConfiguration, 0, RO
    AccessTerminalClassOverride, 0xf9,RO
    DataOffset38k4, 0xfa,RO
    DataOffset19k2, 0xfb,RO
    DataOffset9k6, 0xfc,RO
    DataOffsetNom, 0xfd,RO
    TerminalAccessRateMax, 0xfe,RO
    APersistenceOverride, 0xff,RO
End

Begin Enum, DFTM Msg Enum
    FixedModeEnable, 0, RO
    FixedModeXoff, 1, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
End

Begin Enum, DFTM AttributeID Enum
    HandoffDelays, 0, RO
    DRCLock, 1, RO
    NullRateDRC384Enable, 0xfd,RO
    DRCGating, 0xff,RO
End

Begin Enum, EFTM Msg Enum
    FixedModeEnable, 0, RO
    FixedModeXoff, 1, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
    AttributeUpdateRequest, 0x52,RO
    AttributeUpdateAccept, 0x53,RO
    AttributeUpdateReject, 0x54,RO
End

Begin Enum, EFTM AttributeID Enum
    HandoffDelays, 0, RO
    DRCTranslationOffset, 1, RO
    DRCBoostLength, 0xf3, RO
    DRCChannelGainBoost, 0xf4, RO
    DSCBoostLength, 0xf5, RO
    DSCChannelGainBoost, 0xf6, RO
    MinimumContinuationSpan, 0xf7, RO
    DRCSupervisionTimer, 0xf8, RO
    SingleUserMultiplexPacketsEnabled, 0xf9, RO
    ShortPacketsEnabledThresh, 0xfa, RO
    DeltaACKChannelGainMUP, 0xfb, RO
    DSCLength, 0xfc, RO
    MultiUserPacketsEnabled, 0xfd, RO
    DRCLockLength, 0xfe, RO
    DRCGating, 0xff, RO
End

Begin Enum, DRTM Msg Enum
    RTCAck, 0, RO
    BroadcastReverseRateLimit, 1, RO
    UnicastReverseRateLimit, 2, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
End

Begin Enum, DRTM AttributeID Enum
    PowerParameters, 0, RO
    RateParameters, 1, RO
End

Begin Enum, RTM1 Msg Enum
    RTCAck, 0, RO
    BroadcastReverseRateLimit, 1, RO
    UnicastReverseRateLimit, 2, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
    AttributeUpdateRequest, 0x52,RO
    AttributeUpdateAccept, 0x53,RO
    AttributeUpdateReject, 0x54,RO
End

Begin Enum, RTM1 AttributeID Enum
    PowerParameters, 0, RO
    RateParameters, 1, RO
End

Begin Enum, RTM2 Msg Enum
    RTCAck, 0, RO
    BroadcastReverseRateLimit_NotUsed, 1, RO
    Request, 2, RO
    Grant, 3, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
    AttributeUpdateRequest, 0x52,RO
    AttributeUpdateAccept, 0x53,RO
    AttributeUpdateReject, 0x54,RO
End

Begin Enum, RTM3 Msg Enum
    RTCAck, 0, RO
    BroadcastReverseRateLimit_NotUsed, 1, RO
    Request, 2, RO
    Grant, 3, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
    AttributeUpdateRequest, 0x52,RO
    AttributeUpdateAccept, 0x53,RO
    AttributeUpdateReject, 0x54,RO
End

Begin Enum, DHKEP Msg Enum
    KeyRequest, 0, RO
    KeyResponse, 1, RO
    ANKeyComplete, 2, RO
    ATKeyComplete, 3, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
End

Begin Enum, DHKEP AttributeID Enum
    SessionKeyLength, 0, RO
End

Begin Enum, SHA1 AUTH Msg Enum
    Null, 0, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
End

Begin Enum, SHA1 AttributeID Enum
    ACAuthKeyLength, 0, RO
End

Begin Enum, ALMP Msg Enum
    Redirect, 0, RO
    ConnectionFailureReport, 1, RO
    ConnectionFailureReportAck, 2, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
End

Begin Enum, ALMP ConnFailReason Enum
    General Failure, 0
    TuneAway to3G1X, 1
    PDE TuneAway, 2
End

Begin Enum, ALMP AttributeID Enum
    ConnFailureRptEnabled, 0xff,RO
End

Begin Enum, INSP Msg Enum
    Sync, 0, RO
End

Begin Enum, DIDP Msg Enum
    Page, 0, RO
    ConnectionRequest, 1, RO
    ConnectionDeny, 2, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
End

Begin Enum, IDP RequestReason Enum
    AccessTerminalInitiated, 0
    AccessNetworkInitiated, 1
End

Begin Enum, IDP DenyReason Enum
    General, 0
    NetworkBusy, 1
    AuthorBillingFail, 2
    PreferredChanNotAvail, 3
End

Begin Enum, DIDP AttributeID Enum
    PrefCCCycle, 0, RO
End

Begin Enum, EIDP Msg Enum
    Page, 0, RO
    ConnectionRequest, 1, RO
    ConnectionDeny, 2, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
    AttributeUpdateRequest, 0x52,RO
    AttributeUpdateAccept, 0x53,RO
    AttributeUpdateReject, 0x54,RO
End

Begin Enum, EIDP AttributeID Enum
    PrefCCCycle, 0, RO
    SlottedMode, 1, RO
    PagingMask, 2, RO
    PageResponseAPersistence, 0xfc,RO
    ConnectionDenyBackoff, 0xfd,RO
    AccessHashingClassMask, 0xfe,RO
    SmallSlotCycleAllowed, 0xff,RO
End

Begin Enum, QIDP Msg Enum
    Page, 0, RO
    ConnectionRequest, 1, RO
    ConnectionDeny, 2, RO
    QuickPage, 3, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
    AttributeUpdateRequest, 0x52,RO
    AttributeUpdateAccept, 0x53,RO
    AttributeUpdateReject, 0x54,RO
End

Begin Enum, QIDP AttributeID Enum
    PrefCCCycle, 0, RO
    SlottedMode, 1, RO
    PagingMask, 2, RO
    QuickPage, 3, RO
    PageResponseAPersistence, 0xfc,RO
    ConnectionDenyBackoff, 0xfd,RO
    AccessHashingClassMask, 0xfe,RO
    SmallSlotCycleAllowed, 0xff,RO
End

Begin Enum, CSP Msg Enum
    ConnectionClose, 0, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
End

Begin Enum, CSP CloseReason Enum
    NormalClose, 0
    CloseReply, 1
    ConnectionError, 2
    Trans21xSystem, 3
End

Begin Enum, RUP Msg Enum
    RouteUpdate, 0, RO
    TrafficChannelAssignment, 1, RO
    TrafficChannelComplete, 2, RO
    ResetReport, 3, RO
    NeighborList, 4, RO
    AttributeOverride, 5, RO
    AttributeOverrideResponse, 6, RO
    RouteUpdateRequest, 7, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
    AttributeUpdateRequest, 0x52,RO
    AttributeUpdateAccept, 0x53,RO
    AttributeUpdateReject, 0x54,RO
End

Begin Enum, RUP AttributeID Enum
    SearchParameters, 0, RO
    SetManagementSameChannelParameters, 1, RO
    SetManagementDifferentChannelParameters, 2, RO
    SetManagementOverrideAllowed, 3, RO
    SupportedCDMAChannels, 4, RO
    SupportRouteUpdateEnhancements, 0xfd,RO
    RouteUpdateRadiusAdd, 0xfe,RO
    RouteUpdateRadiusMultiply, 0xff,RO
End

Begin Enum, RUP1 AttributeID Enum
    SearchParameters, 0, RO
    SetManagementParameters, 1, RO
    SupportedCDMAChannels, 4, RO
    SupportedDRXPatterns, 5, RO
    ForwardFeedbackMultiplexingSupported, 0xf6,RO
    MaxNumberOfSubActiveSets, 0xf7,RO
    MaxReverseLinkBandwidth, 0xf8,RO
    MaxForwardLinkBandwidthWithJammer, 0xf9,RO
    MaxForwardLinkBandwidthNoJammer, 0xfa,RO
    MaxNumberofRLSupported, 0xfb,RO
    MaxNumberofFLSupported, 0xfc,RO
    SupportRouteUpdateEnhancements, 0xfd,RO
    RouteUpdateRadiusAdd, 0xfe,RO
    RouteUpdateRadiusMultiply, 0xff,RO
End

Begin Enum, OMP Msg Enum
    QuickConfig, 0, RO
    SectorParameters, 1, RO
    HRPDSilenceParameters, 2, RO
    OtherRATNeighborList, 3, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
End

Begin Enum, OMP AttributeID Enum
    OverheadCachePeriod, 0xff
    RouteUpdateTriggerCodeListSize, 0xfe
    ShortTermOverheadCachePeriod, 0xfd
    IsSupervisionDisablingWhileIdlewithCacheSupported, 0xfc
End

Begin Enum, SMP Msg Enum
    Null, 0, RO
    SessionClose, 1, RO
    KeepAliveRequest, 2, RO
    KeepAliveResponse, 3, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
End

Begin Enum, SMP SessionCloseReason Enum
    NormalClose, 0, RO
    CloseReply, 1, RO
    ProtocolError, 2, RO
    ProtocolConfigError, 3, RO
    ProtocolNegError, 4, RO
    SessionConfigFailure, 5, RO
    SessionLost, 6, RO
    SessionUnreachable, 7, RO
    AllSessionResBusy, 8, RO
End

Begin Enum, SMP AttributeID Enum
    TSMPClose, 0xff,RO
End

Begin Enum, AMP Msg Enum
    UATIRequest, 0, RO
    UATIAssignment, 1, RO
    UATIComplete, 2, RO
    HardwareIDRequest, 3, RO
    HardwareIDResponse, 4, RO
    ConfigurationRequest, 0x50, RO
    ConfigurationResponse, 0x51, RO
    AttributeUpdateRequest, 0x52, RO
    AttributeUpdateAccept, 0x53, RO
    AttributeUpdateReject, 0x54, RO
End

Begin Enum, AMP AttributeID Enum
    Null, 0, RO
    SupportSecondaryColorCodes, 0xfb, RO
    ReducedSubnetMaskOffset, 0xfc, RO
    SupportGAUPMaxNoMonitorDist, 0xfd, RO
    HardwareSeparableFromSession, 0xfe, RO
    MaxNoMonitorDistance, 0xff, RO
End

Begin Enum, SCP Msg Enum
    ConfigurationComplete, 0, RO
    ConfigurationStart, 1, RO
    SoftConfigurationComplete, 2, RO
    LockConfiguration, 3, RO
    LockConfigurationAck, 4, RO
    UnLockConfiguration, 5, RO
    UnLockConfigurationAck, 6, RO
    DeletePersonality, 7, RO
    DeletePersonalityAck, 8, RO
    ConfigurationRequest, 0x50, RO
    ConfigurationResponse, 0x51, RO
    AttributeUpdateRequest, 0x52, RO
    AttributeUpdateAccept, 0x53, RO
    AttributeUpdateReject, 0x54, RO
End

Begin Enum, DSP Msg Enum
    NullMsg, 0, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
End

Begin Enum, DSP AttributeID Enum
    StreamConfiguration, 0,RO
End

Begin Enum, StreamApplication Enum
    DSA, 0x0000, RO
    DPA_AccessStream, 0x0001, RO
    DPA_ServiceStream, 0x0002, RO
    TAP_SUBTYPE, 0x0003, RO
    MFPA_AccessStream, 0x0004, RO
    MFPA_ServiceStream, 0x0005, RO
    CIR_SRVCS_NOT_3G1X, 0x0006, RO
    EMFPA_AccessStream, 0x0008, RO
    EMFPA_ServiceStream, 0x0009, RO
    ETAP_SUBTYPE, 0x000A, RO
    BTAP, 0x000B, RO
    NONE, 0xFFFF, RO
End

Begin Enum, DSA Msg Enum
    Reset, 0, RO
    ResetAck, 1, RO
End

Begin Enum, DPA Msg Enum
    Reset, 0, RO
    ResetAck, 1, RO
    Nak, 2, RO
    LocationRequest, 3, RO
    LocationNotification, 4, RO
    LocationAssignment, 5, RO
    LocationComplete, 6, RO
    XonRequest, 7, RO
    XonResponse, 8, RO
    XoffRequest, 9, RO
    XoffResponse, 10, RO
    DataReady, 11, RO
    DataReadyAck, 12, RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
End

Begin Enum, DPA LocationType Enum
    Type0, 0
    Type1, 1
End

Begin Enum, DPA AttributeID Enum
    RANHandoff, 0xff,RO
End

Begin Enum, MFPA Msg Enum
    ResetTxIndication, 0, RO
    ResetRxIndication, 1, RO
    Nak, 2, RO
    LocationRequest, 3, RO
    LocationNotification, 4, RO
    LocationAssignment, 5, RO
    LocationComplete, 6, RO
    XonRequest, 7, RO
    XonResponse, 8, RO
    XoffRequest, 9, RO
    XoffResponse, 10, RO
    DataReady, 11, RO
    DataReadyAck, 12, RO
    ResetTxIndicationAck, 13, RO
    ResetTxComplete, 14, RO
    ResetRxComplete, 15, RO
    StorageBLOBRequest, 16, RO
    StorageBLOBNotification, 17, RO
    StorageBLOBAssignment, 18, RO
    StorageBLOBComplete, 19, RO
    DataOverSignaling, 20, RO
    DataOverSignalingAck, 21, RO
    ReservationOnRequest, 22, RO
    ReservationOffRequest, 23, RO
    ReservationAccept, 24, RO
    ReservationReject, 25, RO
    RevReservationOn, 26, RO
    RevReservationOff, 27, RO
    FwdReservationOff, 0x22,RO
    FwdReservationOn, 0x23,RO
    FwdReservationAck, 0x24,RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
    AttributeUpdateRequest, 0x52,RO
    AttributeUpdateAccept, 0x53,RO
    AttributeUpdateReject, 0x54,RO
End

Begin Enum, EMPA Msg Enum
    ResetTxIndication, 0, RO
    ResetRxIndication, 1, RO
    Nak, 2, RO
    LocationRequest, 3, RO
    LocationNotification, 4, RO
    LocationAssignment, 5, RO
    LocationComplete, 6, RO
    XonRequest, 7, RO
    XonResponse, 8, RO
    XoffRequest, 9, RO
    XoffResponse, 10, RO
    DataReady, 11, RO
    DataReadyAck, 12, RO
    ResetTxIndicationAck, 13, RO
    ResetTxComplete, 14, RO
    ResetRxComplete, 15, RO
    StorageBLOBRequest, 16, RO
    StorageBLOBNotification, 17, RO
    StorageBLOBAssignment, 18, RO
    StorageBLOBComplete, 19, RO
    DataOverSignaling, 20, RO
    DataOverSignalingAck, 21, RO
    ReservationOnRequest, 22, RO
    ReservationOffRequest, 23, RO
    ReservationAccept, 24, RO
    ReservationReject, 25, RO
    RevReservationOn, 26, RO
    RevReservationOff, 27, RO
    FwdReservationOff, 0x22,RO
    FwdReservationOn, 0x23,RO
    FwdReservationAck, 0x24,RO
    ConfigurationRequest, 0x50,RO
    ConfigurationResponse, 0x51,RO
    AttributeUpdateRequest, 0x52,RO
    AttributeUpdateAccept, 0x53,RO
    AttributeUpdateReject, 0x54,RO
End

Begin Enum, FlowProtocolID Enum
    NULL, 0, RO
    HDLC, 1, RO
    IPv4, 2, RO
    IPv6, 3, RO
    ROHC, 4, RO
    IPv4 and IPv6, 5, RO
    HDLC with AltPPP, 6, RO
    EHRPD, 7, RO
    IP with PDNMUX, 8, RO
    Reserved, 9, RO
End

Begin Enum, ROHCProfile Enum
    Uncompressed, 0x0000, RO
    RTP, 0x0001, RO
    UDP, 0x0002, RO
    ESP, 0x0003, RO
End

Begin Enum, RouteProtocolID Enum
    NULL, 0, RO
    ROHC, 4, RO
    Reserved, 5, RO
End

Begin Enum, TAP Msg Enum
    FTAPParameterAssignment, 0, RO
    FTAPParameterComplete, 1, RO
    FTAPStatsClearRequest, 2, RO
    FTAPStatsClearResponse, 3, RO
    FTAPStatsGetRequest, 4, RO
    FTAPStatsGetResponse, 5, RO
    RTAPParameterAssignment, 0x80, RO
    RTAPParameterComplete, 0x81, RO
End

Begin Enum, FTAP AttributeID Enum
    DRCValueFixedMode, 0, RO
    DRCCoverFixedMode, 1, RO
    ACKChannelBitFixedMode, 2, RO
    LoopBackMode, 3, RO
    ACKChanModulationTypeFixedMode, 4, RO
End

Begin Enum, FTAP StatsID Enum
    NULL, 0, RO
    IdleASPStats, 4, RO
    ConnectedSSStats, 5, RO
    FirstSyncCCPktStats, 6, RO
End

Begin Enum, RTAP ParameterID Enum
    RTAPTestPktEnable, 0, RO
    PacketRateMode, 1, RO
End

Begin Enum, ETAP Msg Enum
    FETAPParameterAssignment, 0, RO
    FETAPParameterComplete, 1, RO
    FETAPStatsClearRequest, 2, RO
    FETAPStatsClearResponse, 3, RO
    FETAPStatsGetRequest, 4, RO
    FETAPStatsGetResponse, 5, RO
    RETAPParameterAssignment, 0x80, RO
    RETAPParameterComplete, 0x81, RO
    RETAPStatsClearRequest, 0x82, RO
    RETAPStatsClearResponse, 0x83, RO
    RETAPStatsGetRequest, 0x84, RO
    RETAPStatsGetResponse, 0x85, RO
End

Begin Enum, FETAP StatsID Enum
    NULL, 0, RO
    IdleASPStats, 4, RO
    ConnectedSSStats, 5, RO
    FirstSyncCCPktStats, 6, RO
End

Begin Enum, RETAP ParameterID Enum
    RETAPTestPktEnable, 0, RO
    PacketRateMode, 1, RO
    PacketPayloadSizeMode, 2, RO
    EnhancedAccessChannelRateMode, 3, RO
    BurstPeriodMode, 4, RO
    BurstSizeMode, 5, RO
End

Begin Enum, DRCTrafficType
    FlowType1, 1,
    FlowType2, 2,
    Type_1 +Type_2, 3,
    FlowType3, 4,
    Type_3+Type_1, 5,
    Type_3+Type_2, 6,
    Type_3+Type_2+Type_1, 7,
    FlowType4, 8,
    Type_4+Type_1, 9,
    Type_4+Type_2, 10,
    Type_4+Type_2+Type_1, 11,
    Type_4+Type_3, 12,
    Type_4+Type_3+Type_1, 13,
    Type_4+Type_3+Type_2, 14,
    Type_4+Type_3+Type_2+Type_1, 15,
End

Begin Enum, DRCChanType
    AWGN_ch, 0,
    FAST_ch, 1,
    SLOW_ch, 2,
    NO_Decision_ch, 3,
End

Begin Enum, RCP Tx AGC Type
    Disabled, 0
    DO Access, 1
    DO Traffic, 2
    1xRTT Reverse, 3
    Test, 4
End

Begin Enum, RCP Tx AGC Gain State
    Low PA Gain, 0
    Med PA Gain, 1
    High PA Gain, 2
End

Begin Enum, RcpModeT
    0 RCP_INACTIVE, 0
    1 RCP_ACCESS, 1
    2 RCP_TRAFFIC, 2
End

Begin Enum, RtmRmmStateT
    Rtm_Inactive, 0
    Rtm_Setup, 1
    Rtm_Setup_NoRF, 2
    Rtm_Open, 3
    Rtm_Open_NoRF, 4
End

Begin Enum, Exe Silent Log Media Type
    Log To None, 0
    Log To SRAM, 1
    Log To Flash, 2
    Log To SDCard, 3
End

Begin Enum, Exe Silent Log Crtl Type
    Log Start, 0
    Log Stop, 1
    Log Read, 2
    Log Release, 3
    Read Saved Setting, 4
    Clean Saved Setting, 5
End

Begin Enum, BOOT Reset Flag
    EXE Halt Reset, 0x55667788
    Watchdog Reset, 0x11223344
    Soft Watchdog Reset, 0x45987698
    Jump To Boot Reset, 0x34567890
    Power Board Off Reset, 0x67896789
    Enter Upload Mode, 0x85697461
End

Begin Enum, Block Database List
    Preferred Roaming List 1, 1, RO, , , disabled=GBL_UIM_SUPPORTED
    Data Services, 2
    Voice Recognition 1, 3
    Voice Recognition 2, 4
    Voice Memo 1, 5
    Voice Memo 2, 6
    Preferred Roaming List 2, 7, RO, , , disabled=GBL_UIM_SUPPORTED
    Enhanced Roaming Indicator 1, 8, RO, , , disabled=GBL_UIM_SUPPORTED
    Enhanced Roaming Indicator 2, 9, RO, , , disabled=GBL_UIM_SUPPORTED
    SLC, 10
    DMU Test Key Info, 11
    DMU Commercial Key Info, 12
    DMU Public Key OrgId, 13
    Extended GPS, 14
    PGPS PDA, 15
    GPS Lbs Driver Hash Data, 16
    Silent Logging, 17
End

Begin Enum, Muxed Pins
    DSP ICE or UIM, 0, CR, CP/MON/CP Pin Muxing
End

Begin Enum, GPIO Data
    Input, 0
    Output, 1
    NotValid, 255
End

Begin Enum, ASIC Id
    FPGA, 1, RO
    CBP70, 2, RO
    CBP71, 3, RO
    CBP63, 4, RO
    CBP80, 5, RO
    CBP82, 6, RO
    CBP3850, 7, RO
    CBP5850, 8, RO
    CBP1855, 9, RO
    CBP5880, 10, RO
    CBP3860, 11, RO
End

Begin Enum, SysVersion Id
    Rev_A0, 10, RO
    Rev_A1, 11, RO
    Rev_B0, 20, RO
    Rev_C0, 30, RO
    Rev_D0, 40, RO
End

Begin Enum, RFOption Id
    GRF 6424, 0, RO
    GRF 6414 DC, , RO
    GRF 6414, , RO
    FCI 7711, , RO
    GRF 6404, , RO
    FCI 7760, , RO
    GRF 6407, , RO
    FCI 7710, , RO
    GRF 6402, , RO
    FCI 7730, , RO
    FCI 7785, , RO
    GRF 6411, , RO
    FCI 7780, , RO
    GRF 6413, , RO
    FCI 7790, , RO
    Chieftain D2P, , RO
    GRF 6423, , RO
    GRF 6431, , RO
    VRF 1855, , RO
    CRF 2121, , RO
    GRF 6416, , RO
    CRF 2031, , RO
    CRF 3860, , RO
End

Begin Enum, RefClockFreq Id
    19.20 MHz Ref, 0, RO
    39.32 MHz Ref, 1, RO
End

Begin Enum, CP Mobile ID Type
    ESN(32 Bits), 1
    MEID(56 Bits) or ESN(32 Bits), 2
End

Begin Enum, TLBDescriptor
    Invalid, 0x0
    Coarse, 0x1
    Sector, 0x2
    Fine, 0x3
End

Begin Enum, CacheBuffer
    No C No B, 0
    No C B, 1
    C B WR TH, 2
    C B WR BK, 3
End

Begin Enum, DomainBits
    No Access Domain, 0x0
    Client Access Domain, 0x1
    Reserve Access Domain, 0x2
    Manager Access Domain, 0x3
End

Begin Enum, Access Permision
    NO_ACCESS, 0
    PRIV_ACESS, 1
    RO_ACCESS, 2
    RW_ACCESS, 3
End

Begin Enum, MMU Access Permision
    MMU_NO_ACCESS, 0
    MMU_RO_ACCESS, 1
    MMU_RW_ACCESS, 2
End

Begin Enum, Sys Carrier Id
    GENERIC CARRIER, 0,
    VERIZON, ,
    SPRINT, ,
    CHINA TELECOM, ,
    LGT, ,
    KDDI, ,
    NUM_CARRIERS, ,
End

Begin Enum, Sys Features
    SYS_ENH_SYSTEM_SELECT_FEATURE, 0,
    SYS_ERI_FEATURE, ,
    SYS_EXT_SMS_INIT_FEATURE, ,
    SYS_RSVD_ASSIGN_MODE_111_FEATURE, ,
    SYS_GPS_FEATURE, ,
    SYS_ALT_AKEY_CHKSUM_FEATURE, ,
    SYS_GPS_SUPL_FEATURE, ,
    SYS_PRL_ENHANCE_FOR_INT_ROAM_FEATURE, ,
    SYS_REGISTRATION_THROTTLING_FEATURE, ,
    SYS_SAFETY_NET_REGISTRATION_FEATURE, ,
    SYS_HSC_CLK_CAL_FAST_SETTLE_FEATURE, ,
    SYS_HWD_KEYBOARD_FEATURE, ,
    SYS_CSS_1X_MAPE_HOME_SYS_AVOID_FEATURE, ,
    SYS_CSS_1X_CDG143_MAPE_SYS_AVOID_FEATURE, ,
    SYS_CSS_1X_CDG143_REDIR_SYS_AVOID_FEATURE, ,
    SYS_CSS_1X_CDG143_REDIR_MPSS_FEATURE, ,
    SYS_CSS_1X_CDG143_CALL_RELEASE_MPSS_FEATURE, ,
    SYS_CSS_1X_FINISH_1ST_BSR_B4_DATACALL_FEATURE, ,
    SYS_CSS_1X_FINISH_1ST_BSR_AFTER_POWERUP_FEATURE, ,
    SYS_CSS_1X_USE_NAM_FOR_VALIDATION_FEATURE, ,
    SYS_CSS_1X_VOICE_ROAM_BARRING_FEATURE, ,
    SYS_CSS_1X_LOST_CHANNEL_DWELL_FEATURE, ,
    SYS_CSS_1X_RESET_GEO_UPON_SYSLOST_FEATURE, ,
    SYS_CSS_1X_RESTRICT_SILENTRETRY_TO_SAME_GEO_FEATURE, ,
    SYS_CSS_1X_ONLY_REJECT_REDIR_IF_NEG_IN_PRL_FEATURE, ,
    SYS_CSS_1X_ACCEPT_SIDNID_CHANGE_IN_IDLE_FEATURE, ,
    SYS_CSS_1X_USE_RESTRICTIVE_SIDNID_MATCH_FEATURE, ,
    SYS_CSS_DO_USE_RESTRICTIVE_SUBNET_MATCH_FEATURE, ,
    SYS_CSS_1X_MPSS_PILOT_STRENGTH_FEATURE, 
    SYS_CSS_1X_CDG143_NEW_SYS_MPSS_FEATURE, 
    SYS_CSS_1X_ALLOW_SILENTRETRY_ON_LOWER_PRI_FEATURE, 
    SYS_MMC_MBIM_API_FEATURE, 
    SYS_NUM_FEATURES, ,
End

Begin Enum, XferWidth
    Byte, 1,
    Word, 2,
    Dword, 4,
End

Begin Enum, BurstSize
    NonBurst, 1,
    Burst4, 4,
    Burst8, 8,
End

Begin Enum, ReadWrite
    Read, 0,
    Write, 1,
End

Begin Enum, IopChannelType
    IopDataChannelPPP, 2,
    IopDataChannelLBS, 3,
    IopDataChannelVoice, 4,
    IopDataChannelATCmds_1, 5,
    IopDataChannelATCmds_2, 6,
    IopDataChannelIrat1, 8,
    IopDataChannelATCmds_3, 10,
    IopDataChannelATCmds_4, 11,
    IopDataChannelATCmds_5, 12,
    IopDataChannelATCmds_6, 13,
    IopDataChannelATCmds_7, 14,
End

Begin Enum, switch
    Off, 0
    On, 1,
End

Begin Enum, ESPI Status
    ESPI_STATUS_OK, 0
    ESPI_STATUS_COM_MODE_CONFLICT, 1
    ESPI_STATUS_COM_SIDE_CONFLICT, 2
    ESPI_STATUS_ABORT_DISABLED, 3
End

Begin Enum, SDIO Status
    SDIO_STATUS_OK, 0
    SDIO_STATUS_FILE_ERR, 1
    SDIO_STATUS_FILE_READ_ERR, 2
    SDIO_STATUS_FILE_WRITE_ERR, 3
    SDIO_STATUS_COMPARE_ERR, 4
    SDIO_STATUS_ILLEGAL_CMD_ERR, 5
    SDIO_STATUS_INIT_ERR, 6
    SDIO_STATUS_LOOPBACK_STARTED, 7
    SDIO_STATUS_LOOPBACK_COMPLETE, 8
    SDIO_STATUS_BUFF_INITIALIZED, 9
End

Begin Enum, CP Full Unit List
    AV, 0,
    CLC, ,
    CSS, ,
    DBM, ,
    EXE, ,
    FCP, ,
    FSM, ,
    HLP, ,
    HSC, ,
    HWD, ,
    IOP, ,
    IPC, ,
    L1D, ,
    LEC, ,
    LMD, ,
    MON, ,
    PS_LOCSRV, ,
    PS_OTA, ,
    PS_PE, ,
    PS_PSW, ,
    PS_SCC, ,
    PS_SMS, ,
    RCP, ,
    RLP_RLPE, ,
    RLP_RLPW, ,
    RMC, ,
    SEC, ,
    SLC, ,
    SYS, ,
    UI, ,
    UIM, ,
    VAL, ,
    VAL_ATC, ,
    ALL_UNITS, 0xffff,
End

Begin Enum, Silent Logging Cmd
    INIT, 0
    PAUSE, 1
    SET_PARMS, 2
    UPDATE_PARMS, 3
End

Begin Enum, Silent Log State
    Off, 0
    Inactive, 1
    Active, 2
    Paused, 3
End

Begin Enum, Silent Log Count
    Forever, 0xFFFE
End

Begin Enum, Parm Chg
    No Change, 0
    Disable, 1
    Enable, 2
End

Begin Enum, Flash Erase Sections
    CP Boot, 0
    CP, 1
    DSPM, 2
    DSPV, 3
    FSM DATA, 4
    CDROM IMAGE, 5
    ALL (no Boot), 6
    ALL FLASH, 7
    UA BOOT, 8
    DELTA FILE, 9
    FSM USER, 10
    DDR TUNING, 11
    FAULT LOG, 12
    PRI, 13
    WALL PAPER, 14
    MAIN TOPIC, 15
    LOGO, 16
    LGPL COMP, 19
    CUST COMP, 20
End

Begin Enum, Flash Info Sections
    CP Boot, 0
    CP, 1
    DSPM, 2
    DSPV, 3
    FSM DATA, 4
    CDROM IMAGE, 5
    ALL (no Boot), 6
    ALL FLASH, 7
    UA BOOT, 8
    DELTA FILE, 9
    FSM USER, 10
    DDR TUNING, 11
    FAULT LOG, 12
    BACKUP UA BOOT, 13
    WALL PAPER, 14
    MAIN TOPIC, 15
    LOGO, 16
    UA BACKUP BUFFER, 17
    UA FLAG, 18
    LGPL COMP, 19
    CUST COMP, 20
End

Begin Enum, Boot Status Types
    Boot from 24Bit SPI, 2
    Boot from 32Bit SPI, 3
End

Begin Enum, Boot From AP Errors
    IN_PROGRESS, 0x40
    LL_CHECKSUM_ERR, 0x41
    LL_RX_SYNC_ERR, 0x42
    LL_PKT_LEN_ERR, 0x43
    PROT_WRONG_STATE, 0x44
    PROT_INVALID_MSG_ERR, 0x45
    PROT_MSG_LENGTH_ERR, 0x46
    PROT_DNLD_LENGTH_ERR, 0x47
    PROT_DATA_CHECKSUM_ERR, 0x48
    PROT_SECTION_CHECKSUM_ERR, 0x49
    PROT_EXECUTE_ADDR_ERR, 0x4A
    PROT_MAX_HWDREG_EXCEED_ERR, 0x4B
    PROT_CHIP_ID_MISMATCH_ERR, 0x4C
    PROT_INVALID_REG_OPCODE_ERR, 0x4D
End

Begin Enum, CP DB Read Type
    CP Read, 0, CR, CP/DB/DB Read
    RF Read, 1, CR, CP/DB/DB Read
End

Begin Enum, RF DB Segments
    DB HWD AFC PARMS, 0x00
    DB HWD BATTERY PARMS, 
    DB HWD TEMPERATURE PARMS, 
    DB RF UNUSED 1, 
    DB RF UNUSED 2, 
    DB HWD BANDGAP PARMS, 
    DB RF UNUSED 3, 
    DB RF UNUSED 4, 
    DB HWD BAND A TXAGC, 
    DB HWD BAND A TXAGC FREQ ADJ, 
    DB HWD BAND A TXAGC TEMP ADJ, 
    DB HWD BAND A TX LIM FREQ ADJ, 
    DB HWD BAND A TX HDET, 
    DB HWD BAND A TX HDET FREQ ADJ, 
    DB HWD BAND A TX HDET TEMP ADJ, 
    DB HWD BAND A TX HDET MAX BATT, 
    DB HWD BAND A RXAGC, 
    DB HWD BAND A RXAGC FREQ ADJ, 
    DB HWD BAND A RXAGC TEMP ADJ, 
    DB HWD BAND B TXAGC, 
    DB HWD BAND B TXAGC FREQ ADJ, 
    DB HWD BAND B TXAGC TEMP ADJ, 
    DB HWD BAND B TX LIM FREQ ADJ, 
    DB HWD BAND B TX HDET, 
    DB HWD BAND B TX HDET FREQ ADJ, 
    DB HWD BAND B TX HDET TEMP ADJ, 
    DB HWD BAND B TX HDET MAX BATT, 
    DB HWD BAND B RXAGC, 
    DB HWD BAND B RXAGC FREQ ADJ, 
    DB HWD BAND B RXAGC TEMP ADJ, 
    DB HWD BAND A SEC RXAGC TEMP ADJ, 
    DB HWD BAND A SEC RX BANK CAL, 
    DB HWD BAND B SEC RXAGC TEMP ADJ, 
    DB HWD BAND B SEC RX BANK CAL, 
    DB HWD BAND C SEC RXAGC TEMP ADJ, 
    DB HWD BAND C SEC RX BANK CAL, 
    DB HWD BAND D SEC RXAGC TEMP ADJ, 
    DB HWD BAND D SEC RX BANK CAL, 
    DB HWD BAND E SEC RXAGC TEMP ADJ, 
    DB HWD BAND E SEC RX BANK CAL, 
    DB HWD BAND A AUX TX LIM FREQ ADJ, 
    DB HWD BAND B AUX TX LIM FREQ ADJ, 
    DB HWD BAND C AUX TX LIM FREQ ADJ, 
    DB HWD BAND D AUX TX LIM FREQ ADJ, 
    DB HWD BAND E AUX TX LIM FREQ ADJ, 
    DB RF UNUSED 7, 
    DB RF UNUSED 8, 
    DB HWD BATT PDM PARMS, 
    DB HWD BAND A TXAGC BATT ADJ, 
    DB HWD BAND A TX LIM TEMP ADJ, 
    DB HWD BAND A TX LIM BATT ADJ, 
    DB HWD BAND B TXAGC BATT ADJ, 
    DB HWD BAND B TX LIM TEMP ADJ, 
    DB HWD BAND B TX LIM BATT ADJ, 
    DB RF UNUSED 9, 
    DB RF UNUSED 10, 
    DB RF UNUSED 11, 
    DB HWD GPS CALIBR, 
    DB HWD GPS RXAGC TEMP ADJ, 
    DB HWD GPS CHAR DB, 
    DB RF UNUSED 12, 
    DB RF UNUSED 13, 
    DB HWD BAND A DIV RXAGC, 
    DB HWD BAND A DIV RXAGC FREQ ADJ, 
    DB HWD BAND A DIV RXAGC TEMP ADJ, 
    DB RF UNUSED 15, 
    DB HWD BAND B DIV RXAGC, 
    DB HWD BAND B DIV RXAGC FREQ ADJ, 
    DB HWD BAND B DIV RXAGC TEMP ADJ, 
    DB RF UNUSED 17, 
    DB RF UNUSED 18, 
    DB RF UNUSED 19, 
    DB HWD BAND C TXAGC, 
    DB HWD BAND C TXAGC FREQ ADJ, 
    DB HWD BAND C TXAGC TEMP ADJ, 
    DB HWD BAND C TX LIM FREQ ADJ, 
    DB HWD BAND C TX HDET, 
    DB HWD BAND C TX HDET FREQ ADJ, 
    DB HWD BAND C TX HDET TEMP ADJ, 
    DB HWD BAND C TX HDET MAX BATT, 
    DB HWD BAND C RXAGC, 
    DB HWD BAND C RXAGC FREQ ADJ, 
    DB HWD BAND C RXAGC TEMP ADJ, 
    DB HWD BAND C TXAGC BATT ADJ, 
    DB HWD BAND C TX LIM TEMP ADJ, 
    DB HWD BAND C TX LIM BATT ADJ, 
    DB RF UNUSED 21, 
    DB RF UNUSED 22, 
    DB HWD BAND D TXAGC, 
    DB HWD BAND D TXAGC FREQ ADJ, 
    DB HWD BAND D TXAGC TEMP ADJ, 
    DB HWD BAND D TX LIM FREQ ADJ, 
    DB HWD BAND D TX HDET, 
    DB HWD BAND D TX HDET FREQ ADJ, 
    DB HWD BAND D TX HDET TEMP ADJ, 
    DB HWD BAND D TX HDET MAX BATT, 
    DB HWD BAND D RXAGC, 
    DB HWD BAND D RXAGC FREQ ADJ, 
    DB HWD BAND D RXAGC TEMP ADJ, 
    DB HWD BAND D TXAGC BATT ADJ, 
    DB HWD BAND D TX LIM TEMP ADJ, 
    DB HWD BAND D TX LIM BATT ADJ, 
    DB RF UNUSED 24, 
    DB RF UNUSED 25, 
    DB HWD BAND E TXAGC, 
    DB HWD BAND E TXAGC FREQ ADJ, 
    DB HWD BAND E TXAGC TEMP ADJ, 
    DB HWD BAND E TX LIM FREQ ADJ, 
    DB HWD BAND E TX HDET, 
    DB HWD BAND E TX HDET FREQ ADJ, 
    DB HWD BAND E TX HDET TEMP ADJ, 
    DB HWD BAND E TX HDET MAX BATT, 
    DB HWD BAND E RXAGC, 
    DB HWD BAND E RXAGC FREQ ADJ, 
    DB HWD BAND E RXAGC TEMP ADJ, 
    DB HWD BAND E TXAGC BATT ADJ, 
    DB HWD BAND E TX LIM TEMP ADJ, 
    DB HWD BAND E TX LIM BATT ADJ, 
    DB RF UNUSED 27, 
    DB RF UNUSED 28, 
    DB HWD BAND C DIV RXAGC, 
    DB HWD BAND C DIV RXAGC FREQ ADJ, 
    DB HWD BAND C DIV RXAGC TEMP ADJ, 
    DB RF UNUSED 30, 
    DB HWD BAND D DIV RXAGC, 
    DB HWD BAND D DIV RXAGC FREQ ADJ, 
    DB HWD BAND D DIV RXAGC TEMP ADJ, 
    DB RF UNUSED 32, 
    DB HWD BAND E DIV RXAGC, 
    DB HWD BAND E DIV RXAGC FREQ ADJ, 
    DB HWD BAND E DIV RXAGC TEMP ADJ, 
    DB RF UNUSED 34, 
    DB HWD BAND A RX BANK CAL, 
    DB HWD BAND B RX BANK CAL, 
    DB HWD BAND C RX BANK CAL, 
    DB HWD BAND D RX BANK CAL, 
    DB HWD BAND E RX BANK CAL, 
    DB HWD BAND A RXAGC NO IMD, 
    DB HWD BAND A DIV RXAGC NO IMD, 
    DB HWD BAND B RXAGC NO IMD, 
    DB HWD BAND B DIV RXAGC NO IMD, 
    DB HWD BAND C RXAGC NO IMD, 
    DB HWD BAND C DIV RXAGC NO IMD, 
    DB HWD BAND D RXAGC NO IMD, 
    DB HWD BAND D DIV RXAGC NO IMD, 
    DB HWD BAND E RXAGC NO IMD, 
    DB HWD BAND E DIV RXAGC NO IMD, 
    DB HWD BAND A RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND B RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND C RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND D RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND E RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND A DIV RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND B DIV RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND C DIV RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND D DIV RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND E DIV RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND A DIV RX BANK CAL, 
    DB HWD BAND B DIV RX BANK CAL, 
    DB HWD BAND C DIV RX BANK CAL, 
    DB HWD BAND D DIV RX BANK CAL, 
    DB HWD BAND E DIV RX BANK CAL, 
    DB HWD RF VERSION, 
    DB HWD BAND A TXAGC ALT THRESH, 
    DB HWD BAND B TXAGC ALT THRESH, 
    DB HWD BAND C TXAGC ALT THRESH, 
    DB HWD BAND D TXAGC ALT THRESH, 
    DB HWD BAND E TXAGC ALT THRESH, 
    DB HWD BAND A SEC RXAGC, 
    DB HWD BAND A SEC RXAGC NO IMD, 
    DB HWD BAND A SEC RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND B SEC RXAGC, 
    DB HWD BAND B SEC RXAGC NO IMD, 
    DB HWD BAND B SEC RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND C SEC RXAGC, 
    DB HWD BAND C SEC RXAGC NO IMD, 
    DB HWD BAND C SEC RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND D SEC RXAGC, 
    DB HWD BAND D SEC RXAGC NO IMD, 
    DB HWD BAND D SEC RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND E SEC RXAGC, 
    DB HWD BAND E SEC RXAGC NO IMD, 
    DB HWD BAND E SEC RXAGC MULTIGAIN FREQ ADJ, 
    DB HWD BAND A AUX TX AGC, 
    DB HWD BAND A AUX TX AGC FREQ ADJ, 
    DB HWD BAND A AUX TX AGC TEMP ADJ, 
    DB HWD BAND A AUX TX HDET, 
    DB HWD BAND A AUX TX HDET FREQ ADJ, 
    DB HWD BAND A AUX TX HDET TEMP ADJ, 
    DB HWD BAND A AUX TX HDET MAX BATT, 
    DB HWD BAND A AUX TX AGC BATT ADJ, 
    DB HWD BAND A AUX TX LIM TEMP ADJ, 
    DB HWD BAND A AUX TX LIM BATT ADJ, 
    DB HWD BAND A AUX TX AGC ALT THRESH, 
    DB HWD BAND B AUX TX AGC, 
    DB HWD BAND B AUX TX AGC FREQ ADJ, 
    DB HWD BAND B AUX TX AGC TEMP ADJ, 
    DB HWD BAND B AUX TX HDET, 
    DB HWD BAND B AUX TX HDET FREQ ADJ, 
    DB HWD BAND B AUX TX HDET TEMP ADJ, 
    DB HWD BAND B AUX TX HDET MAX BATT, 
    DB HWD BAND B AUX TX AGC BATT ADJ, 
    DB HWD BAND B AUX TX LIM TEMP ADJ, 
    DB HWD BAND B AUX TX LIM BATT ADJ, 
    DB HWD BAND B AUX TX AGC ALT THRESH, 
    DB HWD BAND C AUX TX AGC, 
    DB HWD BAND C AUX TX AGC FREQ ADJ, 
    DB HWD BAND C AUX TX AGC TEMP ADJ, 
    DB HWD BAND C AUX TX HDET, 
    DB HWD BAND C AUX TX HDET FREQ ADJ, 
    DB HWD BAND C AUX TX HDET TEMP ADJ, 
    DB HWD BAND C AUX TX HDET MAX BATT, 
    DB HWD BAND C AUX TX AGC BATT ADJ, 
    DB HWD BAND C AUX TX LIM TEMP ADJ, 
    DB HWD BAND C AUX TX LIM BATT ADJ, 
    DB HWD BAND C AUX TX AGC ALT THRESH, 
    DB HWD BAND D AUX TX AGC, 
    DB HWD BAND D AUX TX AGC FREQ ADJ, 
    DB HWD BAND D AUX TX AGC TEMP ADJ, 
    DB HWD BAND D AUX TX HDET, 
    DB HWD BAND D AUX TX HDET FREQ ADJ, 
    DB HWD BAND D AUX TX HDET TEMP ADJ, 
    DB HWD BAND D AUX TX HDET MAX BATT, 
    DB HWD BAND D AUX TX AGC BATT ADJ, 
    DB HWD BAND D AUX TX LIM TEMP ADJ, 
    DB HWD BAND D AUX TX LIM BATT ADJ, 
    DB HWD BAND D AUX TX AGC ALT THRESH, 
    DB HWD BAND E AUX TX AGC, 
    DB HWD BAND E AUX TX AGC FREQ ADJ, 
    DB HWD BAND E AUX TX AGC TEMP ADJ, 
    DB HWD BAND E AUX TX HDET, 
    DB HWD BAND E AUX TX HDET FREQ ADJ, 
    DB HWD BAND E AUX TX HDET TEMP ADJ, 
    DB HWD BAND E AUX TX HDET MAX BATT, 
    DB HWD BAND E AUX TX AGC BATT ADJ, 
    DB HWD BAND E AUX TX LIM TEMP ADJ, 
    DB HWD BAND E AUX TX LIM BATT ADJ, 
    DB HWD BAND E AUX TX AGC ALT THRESH, 
    DB HWD BAND A SEC RXAGC FREQ ADJ, 
    DB HWD BAND B SEC RXAGC FREQ ADJ, 
    DB HWD BAND C SEC RXAGC FREQ ADJ, 
    DB HWD BAND D SEC RXAGC FREQ ADJ, 
    DB HWD BAND E SEC RXAGC FREQ ADJ, 
    DB HWD GPS BAND A CALIBR, 
    DB HWD GPS BAND B CALIBR, 
    DB HWD GPS BAND C CALIBR, 
    DB HWD GPS BAND D CALIBR, 
    DB HWD GPS BAND E CALIBR, 
    DB HWD BAND A TX PA AGC SPDM, 
    DB HWD BAND B TX PA AGC SPDM, 
    DB HWD BAND C TX PA AGC SPDM, 
    DB HWD BAND D TX PA AGC SPDM, 
    DB HWD BAND E TX PA AGC SPDM, 
    DB HWD BAND A AUX TX PA AGC SPDM, 
    DB HWD BAND B AUX TX PA AGC SPDM, 
    DB HWD BAND C AUX TX PA AGC SPDM, 
    DB HWD BAND D AUX TX PA AGC SPDM, 
    DB HWD BAND E AUX TX PA AGC SPDM, 
    DB HWD EVDO REV0 GAINGR ADJ, 
    DB HWD EVDO REVA GAINGR ADJ, 
    DB HWD 1X GAINGR ADJ, 
    DB HWD PV TEMP ADJ, 
    DB HWD BAND A TXAGC 32BIT, 
    DB HWD BAND B TXAGC 32BIT, 
    DB HWD BAND C TXAGC 32BIT, 
    DB HWD BAND D TXAGC 32BIT, 
    DB HWD BAND E TXAGC 32BIT, 
End

Begin Enum, CP DB Write Type
    CP Write, 0, CR, CP/DB/DB Write
    RF Write, 1, CR, CP/DB/DB Write
End

Begin Enum, Ext Rf Ctrl Modes
    Automatic, 255
    Off, 0
    On, 1
End

Begin Enum, Hwd Digital Gain States
    0 Digital Gain States, 0
    1 Digital Gain States, 1
    2 Digital Gain States, 2
    3 Digital Gain States, 3
    4 Digital Gain States, 4
    5 Digital Gain States, 5
    6 Digital Gain States, 6
    7 Digital Gain States, 7
    8 Digital Gain States, 8
End

Begin Enum, MuxPdu Test Results
    LMD_MP_TEST_PASSED, 0
    LMD_MP_TEST_FAILED, 1
    LMD_MP_TEST_INVALID_TEST_INDEX, 2
    LMD_MP_TEST_NULL_FRAME_PTR, 3
    LMD_MP_TEST_INVALID_NUM_RX_PDUS, 4
    LMD_MP_TEST_FRAME_DATA_MISMATCH, 5
    LMD_MP_TEST_FRAME_DATA_TIMEOUT, 6
    LMD_MP_TEST_CURRENT_STATUS, 7
    LMD_MP_TEST_NOT_ACTIVE, 8
    LMD_MP_TEST_ABORTED, 9
    LMD_MP_TEST_ALREADY_ACTIVE, 10
End

Begin Enum, MpOpModeT
    Normal, 0,
    ByPass, 1,
    Automatic, 2,
End

Begin Enum, Status Rsp RF Mode Enum
    CDMA PCS, 0, RO
    CDMA Cellular, 1, RO
    Analog, 2, RO
    Sleep Mode, 3, RO
End

Begin Enum, Phone State
    No Service, 0x00,
    AMPS Initialization, 0x01,
    AMPS Idle, 0x02,
    AMPS Voice Channel Initialization, 0x03,
    AMPS Waiting for Order, 0x04,
    AMPS Waiting for Answer, 0x05,
    AMPS Conversation, 0x06,
    AMPS Release, 0x07,
    AMPS System Access, 0x08,
    Initialization, 0x81,
    Idle, 0x82,
    Voice Channel Initialization, 0x83,
    Waiting for Order, 0x84,
    Waiting for Answer, 0x85,
    Conversation, 0x86,
    Release, 0x87,
    Update Overhead Information, 0x88,
    Mobile Station Origination Attempt, 0x89,
    Page Response, 0x8a,
    Order/Message Response, 0x8b,
    Registration Access, 0x8c,
    Message Transmission, 0x8d,
    CP Disabled, 0xff,
End

Begin Enum, P_REV
    JST_008, 1
    IS_95, 2
    IS_95A, 3
    IS_95B Custom, 4
    IS_95B, 5
    IS_2000, 6
End

Begin Enum, PSW NAM Select
    NAM1, 1
    NAM2, 2
End

Begin Enum, NAM Select Results
    Dual NAM not supported - NAM1 Fixed, 0, RO
    NAM1 Selected, 1, RO
    NAM2 Selected, 2, RO
    PS Active - NAM1 Locked, 3, RO
    PS Active - NAM2 Locked, 4, RO
End

Begin Enum, SecureData Update Response
    Updated Successfully, 0
    Protocol Stack Not Powered Up, 1
    Data Services Not Supported, 2
    Mobile IP Not Supported, 3
    Previous Update not Finished, 4
    Data Out of Range, 5
    CheckSum Mismatch, 6
    Security Key or SPC Mismatch, 7
    UICC Update Prohibited, 8
End

Begin Enum, GroupID
    MUX1_REV_FCH, 0x00, RO
    MUX1_FOR_FCH, 0x01, RO
    PAG, 0x02, RO
    ACC, 0x03, RO
    LAYER2_RTC, 0x04, RO
    MUX2_REV_FCH, 0x05, RO
    MUX2_FOR_FCH, 0x06, RO
    SCCH_REV, 0x07, RO
    SCCH_FOR, 0x08, RO
    MUX1_REV_DCCH, 0x09, RO
    MUX1_FOR_DCCH, 0x0a, RO
    MUX2_REV_DCCH, 0x0b, RO
    MUX2_FOR_DCCH, 0x0c, RO
    SCH0_REV, 0x0d, RO
    SCH1_REV, 0x0e, RO
    SCH0_FOR, 0x0f, RO
    SCH1_FOR, 0x10, RO
End

Begin Enum, PS Get Mobile ID Type
    ID_NOT_SET, 0
    ESN(32 Bits), 1
    MEID(56 Bits), 2
    RUIM(32 Bits), 3
    SF_EUIMID(56 Bits), 4
End

Begin Enum, EmergencyTest
    '911', 0
    '111', 1
End

Begin Enum, WriteIMSIResult
    Write IMSI Success, 0,
    Write IMSI Fail Invalid Characters, 7,
    Write IMSI Fail Invalid Num Digits, 13,
    Write IMSI Fail Invalid MCC Characters, 14,
    Write IMSI Fail Invalid IMSI_11_12 Characters, 15,
End

Begin Enum, WriteMDNResult
    Write MDN Success, 0,
    Write MDN Fail Invalid Characters, 1,
    Write MDN Fail Invalid Num Digits, 2,
    Write MDN Fail UICC Reject, 3,
End

Begin Enum, Tuning Status
    Status OK, 0
    Param Type Invalid, 1
    Data Size Invalid, 2
    File Get Len Failed, 3
    File Open Failed, 4
    File Read Failed, 5
    File Write Failed, 6
    File Does Not Exist, 7
    Malloc Data Failed, 8
    File Format Invalid, 9
    Param Update not Allowed, 10
    File Length Mismatch, 11
    Mode Invalid, 12
End

Begin Enum, Tuning Read Messages
    Spkr Vol, 0, CR, CP/VAL/Audio Tuning, , disabled=1
    Mic Vol, 1, CR, CP/VAL/Audio Tuning, , disabled=1
    Sidetone, 2, CR, CP/VAL/Audio Tuning, , disabled=1
    Mic BIF Mode, 3, CR, CP/VAL/Audio Tuning, , disabled=1
    Mic ANS Mode, 4, CR, CP/VAL/Audio Tuning, , disabled=1
    Spkr FIF Mode, 5, CR, CP/VAL/Audio Tuning, , disabled=1
    ACP Mode, 6, CR, CP/VAL/Audio Tuning, , disabled=1
    AEC Mode, 7, CR, CP/VAL/Audio Tuning, , disabled=1
    ACP Params, 8, CR, CP/VAL/Audio Tuning, , disabled=1
    AEC Params, 9, CR, CP/VAL/Audio Tuning, , disabled=1
    Mic ANS Params, 10, CR, CP/VAL/Audio Tuning, , disabled=1
    TTY Params, 11, CR, CP/VAL/Audio Tuning, , disabled=1
    Mic FIF Params, 12, CR, CP/VAL/Audio Tuning, , disabled=1
    Mic BIF Params, 13, CR, CP/VAL/Audio Tuning, , disabled=1
    Spkr FIF Params, 14, CR, CP/VAL/Audio Tuning, , disabled=1
    Ringer Params, 15, CR, CP/VAL/Audio Tuning, , disabled=1
End

Begin Enum, Tuning Update Messages
    Spkr Vol, 0, CR, CP/VAL/Audio Tuning, , disabled=1
    Mic Vol, 1, CR, CP/VAL/Audio Tuning, , disabled=1
    Sidetone, 2, CR, CP/VAL/Audio Tuning, , disabled=1
    Mic BIF Mode, 3, CR, CP/VAL/Audio Tuning, , disabled=1
    Mic ANS Mode, 4, CR, CP/VAL/Audio Tuning, , disabled=1
    Spkr FIF Mode, 5, CR, CP/VAL/Audio Tuning, , disabled=1
    ACP Mode, 6, CR, CP/VAL/Audio Tuning, , disabled=1
    AEC Mode, 7, CR, CP/VAL/Audio Tuning, , disabled=1
    ACP Params, 8, CR, CP/VAL/Audio Tuning, , disabled=1
    AEC Params, 9, CR, CP/VAL/Audio Tuning, , disabled=1
    Mic ANS Params, 10, CR, CP/VAL/Audio Tuning, , disabled=1
    TTY Params, 11, CR, CP/VAL/Audio Tuning, , disabled=1
    Mic BIF Params, 13, CR, CP/VAL/Audio Tuning, , disabled=1
    Spkr FIF Params, 14, CR, CP/VAL/Audio Tuning, , disabled=1
End

Begin Enum, VAL WMC Svc Types
    Service None, 0
    Service AMPS, 1
    Service IS95A, 2
    Service IS95B, 3
    Service GSM, 4
    Service GPRS, 5
    Service 1XRTT, 6
    Service 1XEVDO, 7
    Service UMTS, 8
    Service 1XEVDOrA, 9
End

Begin Enum, VAL WMC Network Types
    Network Home, 0
    Network Extended, 1
    Network Roam, 2
End

Begin Enum, VAL WMC ResultCode
    VAL_WMC_RC_SUCCESS, 0
    VAL_WMC_RC_BAD_PARAMETER, 
    VAL_WMC_RC_NOT_STARTED, 
    VAL_WMC_RC_BUFFER_TOO_SMALL, 
    VAL_WMC_RC_DEVICE_NOT_AVAILABLE, 
    VAL_WMC_RC_ACTIVATE_FAILED, 
    VAL_WMC_RC_ALREADY_ACTIVATED, 
    VAL_WMC_RC_DEVICE_CONNECTED, 
    VAL_WMC_RC_SERVICE_NOT_AVAILABLE, 
    VAL_WMC_RC_ACTIVATION_INITIATED, 
End

Begin Enum, VAL CONN STATUS
    WMC_STATE_UNKNOWN, 0
    WMC_STATE_IDLE, 1
    WMC_STATE_CONNECTING, 2
    WMC_STATE_AUTH, 3
    WMC_STATE_CONNECTED, 4
    WMC_STATE_DORMANT, 5
    WMC_STATE_UPDATING_NAM, 6
    WMC_STATE_UPDATING_PRL, 7
    WMC_STATE_DISCONNECTING, 8
    WMC_STATE_ERROR, 9
End

Begin Enum, VAL Ntwk Err Code
    VAL_WMC_NETWORK_ERROR_1X_CO_NO_SERVICE, 0,
    VAL_WMC_NETWORK_ERROR_1X_CO_ACCESS_FAILURE, 
    VAL_WMC_NETWORK_ERROR_1X_CO_CANNOT_ORIGINATE, 
    VAL_WMC_NETWORK_ERROR_1X_CO_REDIRECTION, 
    VAL_WMC_NETWORK_ERROR_1X_CO_HANDOFF, 
    VAL_WMC_NETWORK_ERROR_1X_CO_IN_PROGRESS, 
    VAL_WMC_NETWORK_ERROR_1X_CO_PRIORITY_INBOUND, 
    VAL_WMC_NETWORK_ERROR_1X_CO_LOCKED, 
    VAL_WMC_NETWORK_ERROR_1X_CO_INCOMPATIBLE_SERVICES, 
    VAL_WMC_NETWORK_ERROR_1X_CO_CONCURRENT_NOT_SUPPORTED, 
    VAL_WMC_NETWORK_ERROR_1X_CO_NO_RESPONSE, 
    VAL_WMC_NETWORK_ERROR_1X_CO_REJECT, 
    VAL_WMC_NETWORK_ERROR_1X_CO_SO_NOT_SUPPORTED, 
    VAL_WMC_NETWORK_ERROR_1X_CO_CHANNEL_OPEN, 
    VAL_WMC_NETWORK_ERROR_1X_CO_ALERT_STOP, 
    VAL_WMC_NETWORK_ERROR_1X_CO_MAX_ACCESS, 
    VAL_WMC_NETWORK_ERROR_1X_CO_ACTIVATION_NOT_AVAILABLE, 
    VAL_WMC_NETWORK_ERROR_1X_CO_INTERCEPT, 
    VAL_WMC_NETWORK_ERROR_1X_CO_REORDER, 
    VAL_WMC_NETWORK_ERROR_1X_CO_OTHER, 
    VAL_WMC_NETWORK_ERROR_1X_RELEASE_FADE, 
    VAL_WMC_NETWORK_ERROR_1X_RELEASE_NO_REASON, 
    VAL_WMC_NETWORK_ERROR_1X_RELEASE_SO_NOT_SUPPORTED, 
    VAL_WMC_NETWORK_ERROR_1X_PROTOCOL_FAILURE, 
    VAL_WMC_NETWORK_ERROR_1X_REDIRECT_TO_EVDO, 
    VAL_WMC_NETWORK_ERROR_1X_FADE, 
    VAL_WMC_NETWORK_ERROR_1X_USER_DISCONNECTED, 
    VAL_WMC_NETWORK_ERROR_1X_OTASP_ENDED, 
    VAL_WMC_NETWORK_ERROR_1X_ENDED_FOR_VOICE, 
    VAL_WMC_NETWORK_ERROR_1X_E911_CALL_ENDED, 
    VAL_WMC_NETWORK_ERROR_1X_E911_EMERGENCY_CALL, 
    VAL_WMC_NETWORK_ERROR_1X_E911_GPS_FIX, 
    VAL_WMC_NETWORK_ERROR_WCDMA_PROTOCOL_FAILURE, 100,
    VAL_WMC_NETWORK_ERROR_WCDMA_ORIGINATION_FAILURE, 
    VAL_WMC_NETWORK_ERROR_WCDMA_INCOMMING_REJECTED, 
    VAL_WMC_NETWORK_ERROR_WCDMA_NETWORK_DISCONNECTED, 
    VAL_WMC_NETWORK_ERROR_WCDMA_NO_SERVICE, 
    VAL_WMC_NETWORK_ERROR_WCDMA_USER_DISCONNECTED, 
    VAL_WMC_NETWORK_ERROR_EVDO_CO_NO_SERVICE, 150
    VAL_WMC_NETWORK_ERROR_EVDO_CO_ACCESS_FAILURE, 
    VAL_WMC_NETWORK_ERROR_EVDO_CO_REDIRECTION, 
    VAL_WMC_NETWORK_ERROR_EVDO_CO_NOT_PREFERRED, 
    VAL_WMC_NETWORK_ERROR_EVDO_CO_MODE_HANDOFF, 
    VAL_WMC_NETWORK_ERROR_EVDO_CO_IN_PROGRESS, 
    VAL_WMC_NETWORK_ERROR_EVDO_CO_SETUP_TIMEOUT, 
    VAL_WMC_NETWORK_ERROR_EVDO_CO_SESSION_NOT_OPEN, 
    VAL_WMC_NETWORK_ERROR_EVDO_RELEASE_NO_REASON, 
    VAL_WMC_NETWORK_ERROR_EVDO_PROTOCOL_FAILURE, 
    VAL_WMC_NETWORK_ERROR_EVDO_DENY_NO_REASON, 
    VAL_WMC_NETWORK_ERROR_EVDO_DENY_NETWORK_BUSY, 
    VAL_WMC_NETWORK_ERROR_EVDO_DENY_AUTHENTICATION, 
    VAL_WMC_NETWORK_ERROR_EVDO_REDIRECT_TO_1X, 
    VAL_WMC_NETWORK_ERROR_EVDO_FADE, 
    VAL_WMC_NETWORK_ERROR_EVDO_USER_DISCONNECTED, 
    VAL_WMC_NETWORK_ERROR_EVDO_GPS_FIX, 
End

Begin Enum, VAL OTASP STATE
    WMC_STATE_OTASP_NONE, 0
    WMC_OTASP_STATE_IN_PROGRESS, 1
    WMC_OTASP_STATE_SPL_UNLOCKED, 2
    WMC_OTASP_STATE_NAM_DOWNLOADED, 3
    WMC_OTASP_STATE_MDN_DOWNLOADED, 4
    WMC_OTASP_STATE_IMSI_DOWNLOADED, 5
    WMC_OTASP_STATE_PRL_DOWNLOADED, 6
    WMC_OTASP_STATE_COMMIT_SUCCESS, 7
    WMC_OTASP_STATE_PROG_SUCCESS, 8
    WMC_OTASP_STATE_PROG_FAILED, 9
End

Begin Enum, Silent Log Status
    Cmd Success, 0
    File Open Err, 1
    File Write Err, 2
End

Begin Enum, HAAuthNumber
    RFC2002, 0,
    RFC2002bis, 
    Bypass MN-HA, 
End

Begin Enum, AuthAlgoNumber
    None Auth Algorithm, 
    MD5 Auth Algorithm, 
End

Begin Enum, DmuRsaPublicKeyNumber
    Enable Test Key, 0,
    Enable Commercial Key, 1,
End

Begin Enum, SIP Auth PreferT
    AUTH_None, 0,
    AUTH_CHAP_Only, 
    AUTH_PAP_Only, 
    AUTH_PAP_CHAP, 
End

Begin Enum, PswParmOperationId
    PSW_PARM_SET_ESN_MEID, 
    PSW_PARM_GET_ESN_MEID, 
    PSW_PARM_SET_SPC, 
    PSW_PARM_GET_SPC, 
    PSW_PARM_SET_AKEY, 
    PSW_PARM_GET_AKEY, 
    PSW_PARM_SET_MSID, 
    PSW_PARM_GET_MSID, 
    PSW_PARM_SET_PREV, 
    PSW_PARM_GET_PREV, 
    PSW_PARM_SET_POSITIVE_SID_NID_LIST, 
    PSW_PARM_GET_POSITIVE_SID_NID_LIST, 
    PSW_PARM_SET_NEGATIVE_SID_NID_LIST, 
    PSW_PARM_GET_NEGATIVE_SID_NID_LIST, 
    PSW_PARM_SET_PRI_SEC_CH, 
    PSW_PARM_GET_PRI_SEC_CH, 
    PSW_PARM_SET_SYSTEM_SELECT, 
    PSW_PARM_GET_SYSTEM_SELECT, 
    PSW_PARM_SET_SLOT_CYCLE_INDEX, 
    PSW_PARM_GET_SLOT_CYCLE_INDEX, 
    PSW_PARM_SET_MDN, 
    PSW_PARM_GET_MDN, 
    PSW_PARM_SET_PRL_ENABLE, 
    PSW_PARM_GET_PRL_ENABLE, 
    PSW_PARM_SET_HOME_SYS_REGISTRATION, 
    PSW_PARM_GET_HOME_SYS_REGISTRATION, 
    PSW_PARM_SET_FOREIGN_SID_REGISTRATION, 
    PSW_PARM_GET_FOREIGN_SID_REGISTRATION, 
    PSW_PARM_SET_FOREIGN_NID_REGISTRATION, 
    PSW_PARM_GET_FOREIGN_NID_REGISTRATION, 
    PSW_PARM_SET_ACCESS_OVERLOAD_CLASS, 
    PSW_PARM_GET_ACCESS_OVERLOAD_CLASS, 
    PSW_PARM_SET_CDMA_PREF_BAND, 
    PSW_PARM_GET_CDMA_PREF_BAND, 
    PSW_PARM_SET_CDMA_PREF_AorB, 
    PSW_PARM_GET_CDMA_PREF_AorB, 
    PSW_PARM_SET_SCM, 
    PSW_PARM_GET_SCM, 
    PSW_PARM_SET_PRL_INFO, 
    PSW_PARM_GET_PRL_INFO, 
    PSW_PARM_SET_OTAPA_ENABLE, 
    PSW_PARM_GET_OTAPA_ENABLE, 
    PSW_PARM_SET_OTASP_POWERUP_MODE, 
    PSW_PARM_GET_OTASP_POWERUP_MODE, 
    PSW_PARM_SET_IMSI_S1, 
    PSW_PARM_GET_IMSI_S1, 
    PSW_PARM_SET_IMSI_S2, 
    PSW_PARM_GET_IMSI_S2, 
    PSW_PARM_SET_SPC_CHANGE_ENABLE, 
    PSW_PARM_GET_SPC_CHANGE_ENABLE, 
    PSW_PARM_SET_SPASM_ENABLE, 
    PSW_PARM_GET_SPASM_ENABLE, 
    PSW_PARM_SET_SID_NID_LIST_SP, 
    PSW_PARM_GET_SID_NID_LIST_SP, 
    PSW_PARM_SET_DISTANCE_BASED_PARMS, 
    PSW_PARM_GET_DISTANCE_BASED_PARMS, 
    PSW_PARM_SET_ENCODED_MSID, 
    PSW_PARM_GET_ENCODED_MSID, 
    PSW_PARM_SET_ENABLE_OTA, 
    PSW_PARM_GET_ENABLE_OTA, 
    PSW_PARM_SET_PREF_HOME_MO_SO, 
    PSW_PARM_GET_PREF_HOME_MO_SO, 
    PSW_PARM_SET_PREF_ROAM_MO_SO, 
    PSW_PARM_GET_PREF_ROAM_MO_SO, 
    PSW_PARM_SET_PREF_HOME_MT_SO, 
    PSW_PARM_GET_PREF_HOME_MT_SO, 
    PSW_PARM_VALAT_SET_AKEY, 
    PSW_PARM_VALAT_SET_SYSTEM_SELECT, 
    PSW_PARM_SET_A21_MS_SUBSCRIPTION_INFO, 
    PSW_PARM_GET_A21_MS_SUBSCRIPTION_INFO, 
    PSW_PARM_GET_SLOTTED_MODE_ALLOWED_OBSOLETE, 
    PSW_PARM_SET_VOICE_SERVICE_ALLOWED, 
    PSW_PARM_GET_VOICE_SERVICE_ALLOWED, 
    PSW_PARM_SET_ROAM_SETTING_DOMESTIC_VOICE, 
    PSW_PARM_GET_ROAM_SETTING_DOMESTIC_VOICE, 
    PSW_PARM_SET_ROAM_SETTING_DOMESTIC_DATA, 
    PSW_PARM_GET_ROAM_SETTING_DOMESTIC_DATA, 
    PSW_PARM_SET_ROAM_SETTING_INTERNATIONAL_VOICE, 
    PSW_PARM_GET_ROAM_SETTING_INTERNATIONAL_VOICE, 
    PSW_PARM_SET_ROAM_SETTING_INTERNATIONAL_DATA, 
    PSW_PARM_GET_ROAM_SETTING_INTERNATIONAL_DATA, 
    PSW_PARM_SET_DDTM_MODE_ENABLED, 
    PSW_PARM_GET_DDTM_MODE_ENABLED, 
    PSW_PARM_SET_SO_SUPPORT, 
    PSW_PARM_GET_SO_SUPPORT, 
    PSW_PARM_SET_SLOTTED_MODE_ALLOWED, 85,
    PSW_PARM_GET_SLOTTED_MODE_ALLOWED, 
    PSW_PARM_SET_SIM_QPCH_ENABLED, 
    PSW_PARM_GET_SIM_QPCH_ENABLED, 
    PSW_PARM_SET_DIV_SUPPORT, 
    PSW_PARM_GET_DIV_SUPPORT, 
    PSW_PARM_SET_QPCH_ENABLE_DYNAMIC_CTRL, 
    PSW_PARM_GET_QPCH_ENABLE_DYNAMIC_CTRL, 
    PSW_PARM_SET_QPCH_CCI_ENABLED, 
    PSW_PARM_GET_QPCH_CCI_ENABLED, 
    PSW_PARM_SET_1XADV_ENABLED, 
    PSW_PARM_GET_1XADV_ENABLED, 
    PSW_PARM_SET_SO73_CONTROL, 
    PSW_PARM_GET_SO73_CONTROL, 
    PSW_PARM_SET_DFS_ECIO_THRESH, 
    PSW_PARM_GET_DFS_ECIO_THRESH, 
    PSW_PARM_SET_IC_MODE, 
    PSW_PARM_GET_IC_MODE, 
    PSW_PARM_SET_ALTERNATE_PN_FEATURE_MODE, 
    PSW_PARM_GET_ALTERNATE_PN_FEATURE_MODE, 
    PSW_PARM_SET_MOB_FIRM_REV, 
    PSW_PARM_GET_MOB_FIRM_REV, 
    PSW_PARM_SET_MOB_MODEL, 
    PSW_PARM_GET_MOB_MODEL, 
    PSW_PARM_OPERATION_ID_END_LIST, 
End

Begin Enum, PswParmAccessResultCode
    PSW_PARM_OPERATION_SUCCESS, 
    PSW_PARM_OPERATION_FAIL_READ_NOT_ALLOWED, 
    PSW_PARM_OPERATION_FAIL_WRITE_NOT_ALLOWED, 
    PSW_PARM_OPERATION_NOT_ALLOWED_IN_PS_STATE, 
    PSW_PARM_OPERATION_FAIL_INVALID_PTR, 
    PSW_PARM_OPERATION_FAIL_INVALID_LENGTH, 
    PSW_PARM_OPERATION_FAIL_INVALID_AKEY_CHECKSUM, 
    PSW_PARM_OPERATION_FAIL_SET_MSID_INVALID_CHARS, 
    PSW_PARM_OPERATION_FAIL_INVALID_CHANNEL, 
    PSW_PARM_OPERATION_GENERAL_FAILURE, 
    PSW_PARM_OPERATION_FAIL_SET_MDN_INVALID_CHARS, 
    PSW_PARM_OPERATION_FAIL_SET_MDN_INVALID_NUM_DIGITS, 
    PSW_PARM_OPERATION_NO_CHANGE_IN_VALUE, 
    PSW_PARM_OPERATION_FAIL_VALUE_OUT_OF_RANGE, 
    PSW_PARM_OPERATION_FAIL_SET_MSID_INVALID_NUM_DIGITS, 
    PSW_PARM_OPERATION_FAIL_SET_MSID_INVALID_MCC_CHARS, 
    PSW_PARM_OPERATION_FAIL_SET_MSID_INVALID_IMSI_11_12_CHARS, 
    PSW_PARM_OPERATION_FAIL_PRL_INVALID, 
    PSW_PARM_OPERATION_FAIL_IMSI_DIGITS_OUT_OF_RANGE, 
    PSW_PARM_OPERATION_FAIL_OP_TYPE_NOT_SUPPORTED, 
    PSW_PARM_OPERATION_FAIL_DEFAULT_NOT_DEFINED, 
    PSW_PARM_OPERATION_FAIL_DEFAULT_NOT_SUPPORTED_FOR_PARM, 
    PSW_PARM_OPERATION_FAIL_SERVICE_OPTION_NOT_SUPPORTED, 
    PSW_PARM_OPERATION_FAIL_UICC_WRITE_ERROR, 
    PSW_PARM_OPERATION_FAIL_UICC_PARM_NOT_UPDATEABLE, 
    PSW_PARM_OPERATION_RESULT_END_LIST, 
End

Begin Enum, RcNumber
    RC3, 3,
    RC4, 
    RC5, 
End

Begin Enum, IP Service Type2
    Simple IP Only, 
    Mobile IP Preferred, 
    Mobile IP Only, 
End

Begin Enum, HlpDataSOType
    Pre 701, 0,
    Qualcomm Proprietary, 1,
    IS701, 2,
End

Begin Enum, CP CustomAutoReg Enum
    NotRegisted, 0
    Registerd, 1
    RegisterDisable, 2
End

Begin Enum, DOParmOperationId
    DO Parm Init Cmd, 0,
    Hybrid Mode Set, 
    Hybrid Pref Mode Get, 
    Pref CC Cycle Set, 
    Pref CC Cycle Get, 
    Stream Configuration Set, 
    Stream Configuration Get, 
    Force Release0 Set, 
    Force Release0 Get, 
    Not Disturb Set, 
    Not Disturb Get, 
    FT MAC DRC Gating Set, 
    FT MAC DRC Gating Get, 
    LUP Unsolicited Set, 
    LUP Unsolicited Get, 
    Rx Diversity Ctrl Set, 
    Rx Diversity Ctrl Get, 
    Subtype Config Data Set, 
    Subtype Config Data Get, 
    Protocol Config Disable Set, 
    Extended Slot Cycle Set, 
    Extended Slot Cycle Get, 
    Periodical Search Cycle Set, 
    Periodical Search Cycle Get, 
    CT DO Default Band Set, 
    CT DO Default Band Get, 
    Pref Mode Set, 
    Pref Mode Get, 
    Hybrid Mode Get, 
    Hybrid Pref Mode Set, 
    eHRPD Mode Set, 
    eHRPD Mode Get, 
    Dfs Idle Interval Set, 
    Dfs Idle Interval Get, 
    Dfs Conn Interval Set, 
    Dfs Conn Interval Get, 
    Dfs Idle NumChan Set, 
    Dfs Idle NumChan Get, 
    Dfs Conn NumChan Set, 
    Dfs Conn NumChan Get, 
    Dfs Idle EcIo Thresh Set, 
    Dfs Idle EcIo Thresh Get, 
    Dfs Conn EcIo Thresh Set, 
    Dfs Conn EcIo Thresh Get, 
    Manual Avoid Sid Set, 
    Manual Avoid Sid Get, 
    SBMG Branded mode Set, 
    SBMG Branded mode Get, 
End

Begin Enum, DOParmAccessResultCode
    DO_PARM_OPERATION_SUCCESS, 
    DO_PARM_OPERATION_FAIL_READ_NOT_ALLOWED, 
    DO_PARM_OPERATION_FAIL_WRITE_NOT_ALLOWED, 
    DO_PARM_OPERATION_NOT_ALLOWED_IN_CLC_STATE, 
    DO_PARM_OPERATION_FAIL_INVALID_PTR, 
    DO_PARM_OPERATION_FAIL_INVALID_LENGTH, 
    DO_PARM_OPERATION_GENERAL_FAILURE, 
    DO_PARM_OPERATION_NO_CHANGE_IN_VALUE, 
    DO_PARM_OPERATION_FAIL_VALUE_OUT_OF_RANGE, 
    DO_PARM_OPERATION_INTERFACE_NOT_SUPPORTED, 
End

Begin Enum, HybridModeT
    Non-Hybrid, 
    Hybrid, 
End

Begin Enum, Pref Modes
    Automatic, 4
    Cdma Only, 7
    HDR Only, 8
    Hybrid Only, 9
    SHDR Only, 10
End

Begin Enum, DrcGatingT
    Continous, 
    Discontinous, 
End

Begin Enum, UnsolicitedT
    Disable, 
    Enable, 
End

Begin Enum, DScpProtocolType Enum
    None, 0xffff, RO
    PHY Layer Subtype, 0x0, RO
    CC MAC Subtype, 0x1, RO
    AC MAC Subtype, 0x2, RO
    FTC MAC Subtype, 0x3, RO
    RTC MAC Subtype, 0x4, RO
    Key Exchange Subtype, 0x5, RO
    Authentication Subtype, 0x6, RO
    Encryption Subtype, 0x7, RO
    Security Subtype, 0x8, RO
    Packet Consolidation Subtype, 0x9, RO
    Air-Link Management Subtype, 0xa, RO
    Initialization State Subtype, 0xb, RO
    Idle State Subtype, 0xc, RO
    Connected State Subtype, 0xd, RO
    Route Update Subtype, 0xe, RO
    Overhead Message Subtype, 0xf, RO
    Session Management Subtype, 0x10, RO
    Address Management Subtype, 0x11, RO
    Session Configuration Subtype, 0x12, RO
    Stream Subtype, 0x13, RO
    Virtual Stream Subtype, 0x19, RO
    Multimode Capability Discovery Subtype, 0x1b, RO
End

Begin Enum, ExtendedSC_Enum
    3072  slots(5.12s), 0x09,
    6144  slots(10.24s), 0x0a,
    12288 slots(20.48s), 0x0b,
    24576 slots(40.96s), 0x0c,
End

Begin Enum, NtwrkRelayMode_Enum
    Relay Mode, 0,
    Network Mode, 1,
End

Begin Enum, MobileIDType
    ID_NOT_SET, 0
    ESN, 1
    MEID, 2
    UIMID, 3
    SF_EUIMID, 
End

Begin Enum, SystemSelectType
    HOME_ONLY, 
    AUTOMATIC, 
    AUTOMATIC_A, 
    AUTOMATIC_B, 
End

Begin Enum, PswCdmaPrefBand
    ENG_PREF_BAND_0, 
    ENG_PREF_BAND_1, 
    ENG_PREF_BAND_0_ONLY, 
    ENG_PREF_BAND_1_ONLY, 
    ENG_PREF_BAND_2_ONLY, 
    ENG_PREF_BAND_3_ONLY, 
    ENG_PREF_BAND_4_ONLY, 
    ENG_PREF_BAND_5_ONLY, 
    ENG_PREF_BAND_6_ONLY, 
    ENG_PREF_BAND_7_ONLY, 
    ENG_PREF_BAND_8_ONLY, 
    ENG_PREF_BAND_9_ONLY, 
    ENG_PREF_BAND_10_ONLY, 
    ENG_PREF_BAND_11_ONLY, 
    ENG_PREF_BAND_12_ONLY, 
    ENG_PREF_BAND_13_ONLY, 
    ENG_PREF_BAND_14_ONLY, 
    ENG_PREF_BAND_15_ONLY, 
    ENG_PREF_BAND_16_ONLY, 
    ENG_NO_PREF_BAND, 255,
End

Begin Enum, PswCdmaPrefAorB
    ENG_PREF_SYS_A, 
    ENG_PREF_SYS_B, 
    ENG_PREF_SYS_A_ONLY, 
    ENG_PREF_SYS_B_ONLY, 
End

Begin Enum, OTASP Powerup Mode Enum
    UI Powercycle, 
    PS Auto Powercycle, 
End

Begin Enum, PswMsidFieldToUpdate
    UPDATE_MSID_IMSI_M, 
    UPDATE_MSID_IMSI_T, 
End

Begin Enum, Diversity Mode
    OFF, 0,
    ON-DYNAMIC, 1,
    ON-STATIC, 3,
End

Begin Enum, IC Mode
    IC_NORMAL, 0,
    IC_DBG_SRCH_DLY, ,
    IC_DBG_IC_DLY, ,
    IC_DBG_BYPASS, ,
    IC_OFF, 15,
End

Begin Enum, Alternate PN Mode
    Disabled, 0,
    Probe Failure Only, 1,
    Probe and Timeout Failures, 2,
    All Access Failures, 3,
End

Begin Enum, UiParmOperationId
    UI_PARM_SET_DTMF_MODE, 
    UI_PARM_GET_DTMF_MODE, 
    UI_PARM_SET_VOICE_PRIVACY, 
    UI_PARM_GET_VOICE_PRIVACY, 
    UI_PARM_SET_LOCK_CODE, 
    UI_PARM_GET_LOCK_CODE, 
    UI_PARM_SET_AUTO_ANSWER_MODE, 
    UI_PARM_GET_AUTO_ANSWER_MODE, 
    UI_PARM_INIT_MISC_DB, 
    UI_PARM_SET_AUTO_REDIAL_MODE, 
    UI_PARM_GET_AUTO_REDIAL_MODE, 
    UI_PARM_SET_VOICE_PRIVACY_ALERT_MODE, 
    UI_PARM_GET_VOICE_PRIVACY_ALERT_MODE, 
    UI_PARM_SET_SMS_CHANNEL, 
    UI_PARM_GET_SMS_CHANNEL, 
    UI_PARM_SET_SMS_PREF_SO, 
    UI_PARM_GET_SMS_PREF_SO, 
    UI_PARM_SET_AUTO_POWER_UP, 
    UI_PARM_GET_AUTO_POWER_UP, 
End

Begin Enum, UiParmAccessResultCode
    UI_PARM_OPERATION_SUCCESS, 
    UI_PARM_OPERATION_FAIL_READ_NOT_ALLOWED, 
    UI_PARM_OPERATION_FAIL_WRITE_NOT_ALLOWED, 
    UI_PARM_OPERATION_PARAMETER_NOT_SUPPORTED, 
    UI_PARM_OPERATION_INTERFACE_NOT_SUPPORTED, 
    UI_PARM_OPERATION_FAIL_VALUE_OUT_OF_RANGE, 
End

Begin Enum, SMSOverIMSEnum
    Disable, 0,
    Enable, 1,
End

Begin Enum, UiccParmOperationId
    UICC_PARM_SET_FACTORY_MODE, 
    UICC_PARM_GET_FACTORY_MODE, 
End

Begin Enum, UiccParmAccessResultCode
    UICC_PARM_OPERATION_SUCCESS, 
    UICC_PARM_OPERATION_FAIL_READ_NOT_ALLOWED, 
    UICC_PARM_OPERATION_FAIL_WRITE_NOT_ALLOWED, 
    UICC_PARM_OPERATION_PARAMETER_NOT_SUPPORTED, 
    UICC_PARM_OPERATION_INTERFACE_NOT_SUPPORTED, 
    UICC_PARM_OPERATION_FAIL_VALUE_OUT_OF_RANGE, 
End

Begin Enum, SysParmAccessResultCode
    SYS_PARM_OPERATION_SUCCESS, 
    SYS_PARM_OPERATION_FAIL_READ_NOT_ALLOWED, 
    SYS_PARM_OPERATION_FAIL_WRITE_NOT_ALLOWED, 
    SYS_PARM_OPERATION_FAIL_VALUE_OUT_OF_RANGE, 
    SYS_PARM_OPERATION_GENERAL_FAILURE, 
    SYS_PARM_OPERATION_FAIL_OP_TYPE_NOT_SUPPORTED, 
    SYS_PARM_OPERATION_NOT_SUPPORTED_BAND_CLASS, 
    SYS_PARM_OPERATION_NOT_SUPPORTED_SUB_CLASS, 
    SYS_PARM_OPERATION_RESULT_END_LIST, 
End

Begin Enum, Val Cdma Band
    BAND_CLASS_0, 
    BAND_CLASS_1, 
    BAND_CLASS_2, 
    BAND_CLASS_3, 
    BAND_CLASS_4, 
    BAND_CLASS_5, 
    BAND_CLASS_6, 
    BAND_CLASS_7, 
    BAND_CLASS_8, 
    BAND_CLASS_9, 
    BAND_CLASS_10, 
    BAND_CLASS_11, 
    BAND_CLASS_12, 
    BAND_CLASS_13, 
    BAND_CLASS_14, 
    BAND_CLASS_15, 
    BAND_CLASS_16, 
    BAND_CLASS_17, 
    BAND_CLASS_18, 
    BAND_CLASS_19, 
    BAND_CLASS_20, 
    BAND_CLASS_ALL, 0xff
End

Begin Enum, CssParmOperationId
    CSS_PARM_SET_1X_MPSS_PILOT_THRESH, 
    CSS_PARM_GET_1X_MPSS_PILOT_THRESH, 
    CSS_PARM_SET_DO_OOSA_SCANNING_TIMER, 
    CSS_PARM_GET_DO_OOSA_SCANNING_TIMER, 
    CSS_PARM_SET_1X_T_BSR_DURATION, 
    CSS_PARM_GET_1X_T_BSR_DURATION, 
    CSS_PARM_SET_1X_AVOIDANCE_DURATION, 
    CSS_PARM_GET_1X_AVOIDANCE_DURATION, 
    CSS_PARM_SET_DO_T_BSR_DURATION, 
    CSS_PARM_GET_DO_T_BSR_DURATION, 
    CSS_PARM_SET_1X_MANUAL_AVOID_SID, 
    CSS_PARM_GET_1X_MANUAL_AVOID_SID, 
    CSS_PARM_SET_MRU_CHANNEL, 
    CSS_PARM_GET_MRU_CHANNEL, 
    CSS_PARM_SET_1X_MPSS_PILOT_THRESH_LOW_RSSI, 
    CSS_PARM_GET_1X_MPSS_PILOT_THRESH_LOW_RSSI, 
    CSS_PARM_SET_1X_MPSS_HIGH_LOW_RSSI_THRESH, 
    CSS_PARM_GET_1X_MPSS_HIGH_LOW_RSSI_THRESH, 
    CSS_PARM_SET_1X_MPSS_PILOT_THRESH_SLOPE, 
    CSS_PARM_GET_1X_MPSS_PILOT_THRESH_SLOPE, 
End

Begin Enum, CssParmAccessResultCode
    CSS_PARM_OPERATION_SUCCESS, 
    CSS_PARM_OPERATION_FAIL_PARM_ID_NOT_SUPPORTED, 
    CSS_PARM_OPERATION_FAIL_READ_NOT_ALLOWED, 
    CSS_PARM_OPERATION_FAIL_WRITE_NOT_ALLOWED, 
    CSS_PARM_OPERATION_FAIL_INVALID_PTR, 
    CSS_PARM_OPERATION_FAIL_INVALID_LENGTH, 
    CSS_PARM_OPERATION_GENERAL_FAILURE, 
    CSS_PARM_OPERATION_NO_CHANGE_IN_VALUE, 
    CSS_PARM_OPERATION_FAIL_VALUE_OUT_OF_RANGE, 
    CSS_PARM_OPERATION_FAIL_OP_TYPE_NOT_SUPPORTED, 
    CSS_PARM_OPERATION_FAIL_DEFAULT_NOT_DEFINED, 
    CSS_PARM_OPERATION_FAIL_DEFAULT_NOT_SUPPORTED_FOR_PARM, 
    CSS_PARM_OPERATION_FAIL_MISSING_PARAMETER, 
End

Begin Enum, Css1xBsrTimerTypeT
    CSS_1X_T_BSR_1, 
    CSS_1X_T_BSR_2, 
    CSS_1X_T_BSR_NEWSYS, 
    CSS_1X_T_BSR_REDIR, 
    CSS_1X_T_BSR_CALL, 
End

Begin Enum, Css1xAvoidanceTimerTypeT
    CSS_1X_T_MAPE_HOME_AVOIDANCE, 
    CSS_1X_T_REDIR_AVOIDANCE, 
End

Begin Enum, CssDOBsrTimerTypeT
    CSS_DO_T_BSR_1, 
    CSS_DO_T_BSR_2, 
    CSS_DO_T_BSR_HYBRID, 
    CSS_DO_T_BSR_REDIR, 
    CSS_DO_T_BSR_CALL, 
    CSS_DO_T_BSR_HOLD, 
End

Begin Enum, CssMruSubModule
    1X, 
    DO, 
    1X and DO, 
End

Begin Enum, GmssParmOperationId
    GMSS_PARM_SET_OPMODE, 
    GMSS_PARM_GET_OPMODE, 
    GMSS_PARM_SET_OOS_SCAN_TIMEOUT, 
    GMSS_PARM_GET_OOS_SCAN_TIMEOUT, 
    GMSS_PARM_SET_OOS_SLEEP_TIME, 
    GMSS_PARM_GET_OOS_SLEEP_TIME, 
    GMSS_PARM_SET_SCAN_PREF_MODE, 
    GMSS_PARM_GET_SCAN_PREF_MODE, 
    GMSS_PARM_SET_PS_REG_RSP_TIMEOUT, 
    GMSS_PARM_GET_PS_REG_RSP_TIMEOUT, 
    GMSS_PARM_SET_PSREG_MOST_PREF_RAT_TIMEOUT, 
    GMSS_PARM_GET_PSREG_MOST_PREF_RAT_TIMEOUT, 
End

Begin Enum, GmssParmAccessResultCode
    GMSS_PARM_OPERATION_SUCCESS, 
    GMSS_PARM_OPERATION_FAIL_PARM_ID_NOT_SUPPORTED, 
    GMSS_PARM_OPERATION_FAIL_READ_NOT_ALLOWED, 
    GMSS_PARM_OPERATION_FAIL_WRITE_NOT_ALLOWED, 
    GMSS_PARM_OPERATION_FAIL_INVALID_PTR, 
    GMSS_PARM_OPERATION_FAIL_INVALID_LENGTH, 
    GMSS_PARM_OPERATION_GENERAL_FAILURE, 
    GMSS_PARM_OPERATION_NO_CHANGE_IN_VALUE, 
    GMSS_PARM_OPERATION_FAIL_VALUE_OUT_OF_RANGE, 
    GMSS_PARM_OPERATION_FAIL_OP_TYPE_NOT_SUPPORTED, 
    GMSS_PARM_OPERATION_FAIL_DEFAULT_NOT_DEFINED, 
    GMSS_PARM_OPERATION_FAIL_DEFAULT_NOT_SUPPORTED_FOR_PARM, 
    GMSS_PARM_OPERATION_FAIL_MISSING_PARAMETER, 
End

Begin Enum, GmssOpModeType
    MMC_GLOBAL, 
    MMC_LTE_ONLY, 
    MMC_CDMA_ONLY, 
    MMC_LTE_3GPP, 
    MMC_EHRPD_CDMA, 
    MMC_GERAN_ONLY, 
    MMC_UTRAN_ONLY, 
    MMC_CDMA1X_ONLY, 
    MMC_CDMADO_ONLY, 
End

Begin Enum, VAL GPS Status
    SUCCESS, 0,
    FAIL, 
End

Begin Enum, VAL GPS Fix Quality
    GPS_FIX_QUALITY_UNKNOWN, 0,
    GPS_FIX_QUALITY_GPS, 
    GPS_FIX_QUALITY_DGPS, 
End

Begin Enum, VAL GPS Fix Type
    GPS_FIX_UNKNOWN, 0,
    GPS_FIX_2D, 
    GPS_FIX_3D, 
End

Begin Enum, VAL GPS Selection Type
    GPS_FIX_SELECTION_UNKNOWN, 0,
    GPS_FIX_SELECTION_AUTO, 
    GPS_FIX_SELECTION_MANUAL, 
End

Begin Enum, VAL GPS Fix Mode
    CP_VAL_GPS_FIX_MODE_UNKNOWN, 0,
    CP_VAL_GPS_FIX_MODE_MSA, 
    CP_VAL_GPS_FIX_MODE_MSB, 
    CP_VAL_GPS_FIX_MODE_MSS, 
    CP_VAL_GPS_FIX_MODE_AFLT, 
    CP_VAL_GPS_FIX_MODE_SPEED_OPTIMAL, 
    CP_VAL_GPS_FIX_MODE_ACCURACY_OPTIMAL, 
    CP_VAL_GPS_FIX_MODE_DATA_OPTIMAL, 
    CP_VAL_GPS_FIX_MODE_CONTROL_PLANE, 
    CP_VAL_GPS_FIX_MODE_COUNT, 
End

Begin Enum, VAL GPS Fix Operation Status
    CP_VAL_GPS_SUCCESS, 0,
    CP_VAL_GPS_ERROR_INVALID_PARM, 
    CP_VAL_GPS_ERROR_INVALID_SECURITY_STATUS, 
    CP_VAL_GPS_ERROR_LOCATION_REQ_QUEUE_FULL, 
    CP_VAL_GPS_ERROR_PREV_LOCATION_REQ_PENDING, 
End

Begin Enum, VAL GPS Privacy Setting
    CP_VAL_GPS_PRIVACY_SETTING_VALUE_UNKNOWN = 0, 
    CP_VAL_GPS_PRIVACY_SETTING_VALUE_E911_ONLY, 
    CP_VAL_GPS_PRIVACY_SETTING_VALUE_LOCATION_ON, 
    CP_VAL_GPS_PRIVACY_SETTING_VALUE_LOCATION_MI_ONLY, 
    CP_VAL_GPS_PRIVACY_SETTING_VALUE_LOCATION_MT_ONLY, 
End

Begin Enum, VAL GPS Set Security Status
    CP_VAL_GPS_SET_SECURITY_SUCCESS, 
    CP_VAL_GPS_SET_SECURITY_INCORRECT_CODE, 
    CP_VAL_GPS_SET_SECURITY_REJECTED, 
End

Begin Enum, VAL LBS State
    GPS Inactive, 
    GPS Opening, 
    GPS Open, 
End

Begin Enum, RfBand
    BAND_A, 0
    BAND_B, 1
    BAND_C, 2
    BAND_D, 3
    BAND_E, 4
End

Begin Enum, MSModeResultCode
    MS_MODE_OPERATION_SUCCESS, 0
    MS_MODE_OPERATION_DEVICE_BUSY, -1
    MS_MODE_OPERATION_DEVICE_NOT_AVAILABLE, -2
    MS_MODE_OPERATION_DEVICE_OFF, -3
    MS_MODE_OPERATION_DEVICE_CONNECTED, -4
    MS_MODE_OPERATION_NOT_SUPPORTED, -5
    MS_MODE_OPERATION_CONFLICTING_POLICY, -6
End

Begin Enum, MSDevices
    PC USB Ext, 
    PC USB Int RO, 
    PC USB Int RW, 
End

Begin Enum, MSModes
    Enabled, 
    Disabled, 
End

Begin Enum, WeekDays
    Cancel Alarm, -1,
    Sun, 0,
    Mon, ,
    Tue, ,
    Wed, ,
    Thu, ,
    Fri, ,
    Sat, ,
End

Begin Enum, Audio Video Cmd
    AV Play, 0
    AV Fast Fwd, 1
    AV Rewind, 2
    AV Pause, 3
    AV Resume, 4
    AV Get Position, 5
    AV Set Position, 6
    AV Get Playtime, 7
    AV Stop, 8
End

Begin Enum, Val MP4 Result
    VAL_MP4_SUCCESS, 0
    VAL_MP4_FAIL, 
    VAL_MP4_HW_RESET, 
    VAL_MP4_FS_RW, 
    VAL_MP4_CARD_UNFORMAT, 
    VAL_MP4_INVALID_STATE, 
    VAL_MP4_FILE_NOT_SUPPORT, 
    VAL_MP4_INVALID_PARAMETER, 
    VAL_MP4_DATA_BROKEN, 
    VAL_MP4_SMALL_CLUSTER_SIZE, 
    VAL_MP4_ERR_INVALID_PARAMETER, 
    VAL_MP4_SINGLE_RW_ERROR, 
    VAL_MP4_BURST_RW_ERROR, 
    VAL_MP4_HB_AHB_RDY_ERROR, 
    VAL_MP4_STATUS_POOL_FULL, 
    VAL_MP4_CMD_RDY_ERROR, 
    VAL_MP4_TIME_OUT_ERROR, 
    VAL_MP4_HB_PAGE_NOT_AVAIL, 
    VAL_MP4_PARA_ERR001, 
    VAL_MP4_PARA_ERR002, 
    VAL_MP4_DATARW_SIZE_ERROR, 
    VAL_MP4_SUSPEND_NOT_IDLE_STATE, 
    VAL_MP4_HB_PORT_SUM_ERROR, 
    VAL_MP4_HB_PORT_CNT_ERROR, 
    VAL_MP4_CHAR_MEMORY_NOT_ERROR, 
    VAL_MP4_CHAR_CONVERT_ERROR, 
    VAL_MP4_CHAR_CONVERT_MEMORY_ERROR, 
    VAL_MP4_FILE_LEN_ZERO_ERROR, 
    VAL_MP4_DPS_INVALID_PARAMETER, 
    VAL_MP4_DPS_NOT_AVAILABLE, 
    VAL_MP4_UNKNOWN_ERROR, 
    VAL_MP4_FILE_UNSEEKABLE_ERROR, 
    VAL_MP4_CMR_ALLOC_BUFF_ERROR, 
End

Begin Enum, VAL MMApps Return Codes
    VAL_APP_OK, 0
    VAL_APP_FILE_FORMAT_INVALID, 1
    VAL_APP_FILE_IO_ERROR, 2
    VAL_APP_FAILED_ERROR, 3
    VAL_APP_WRONG_PLAY_FORMAT, 4
    VAL_APP_CONFLICT, 5
    VAL_APP_MALLOC_ERROR, 6
    VAL_APP_DATA_SIZE_INVALID, 7
    VAL_APP_TONE_ID_INVALID, 8
    VAL_APP_IMAGE_TYPE_INVALID, 9
    VAL_APP_IMAGE_CONTEXT_NOT_INIT, 10
    VAL_APP_IMAGE_WIDTH_INVALID, 11
    VAL_APP_IMAGE_ACTUAL_SIZE_UNKNOWN, 12
    VAL_APP_VMEMO_WRONG_STATE_ERR, 13
    VAL_APP_VMEMO_INVALID_REC_TYPE, 14
    VAL_APP_VMEMO_DEVICE_UNMOUNTED_OR_FULL, 15
    VAL_APP_VMEMO_INVALID_NUM_PKTS, 16
    VAL_APP_VMEMO_INVALID_SRVC_OPT, 17
    VAL_APP_VMEMO_SRVC_OPT_MISMATCH, 18
    VAL_APP_VMEMO_WRONG_REC_WHILE_ON_TRAFFIC, 19
    VAL_APP_VMEMO_INTERNAL_ERR, 20
    VAL_APP_VMEMO_INVAL_TYPE_FOR_FILE_REC, 21
    VAL_APP_VMEMO_INVAL_PLAYBACK_PARMS, 22
    VAL_APP_VMEMO_INVAL_PACKET_RATE, 23
    VAL_APP_A2DP_STREAM_OPERATION_ERR, 24
    VAL_APP_MUSIC_NOT_SUPPORTED_ERR, 25
    VAL_APP_CMD_NOT_SUPPORTED_ERR, 26
    VAP_APP_SAMPLING_RATE_INVALID, 27
    VAL_APP_NUM_CHANS_INVALID, 28
    VAL_APP_WRONG_RECORD_FORMAT, 29
    VAL_APP_DSPV_NOT_AVAIL, 30
    VAL_APP_PARAMS_INVALID, 31
End

Begin Enum, MusicPlayTime
    Failed, -1
End

Begin Enum, CP UI VAL Net Result
    NET_SUCCESS, 0
    NET_EBADF, 1
    NET_EFAULT, 2
    NET_EWOULDBLOCK, 3
    NET_EAFNOSUPPORT, 4
    NET_EPROTOTYPE, 5
    NET_ESOCKNOSUPPORT, 6
    NET_EPROTONOSUPPORT, 7
    NET_EMFILE, 8
    NET_EOPNOTSUPP, 9
    NET_EADDRINUSE, 10
    NET_EADDRREQ, 11
    NET_EINPROGRESS, 12
    NET_ESHUTDOWN, 13
    NET_EISCONN, 14
    NET_EIPADDRCHANGED, 15
    NET_ENOTCONN, 16
    NET_ECONNREFUSED, 17
    NET_ETIMEDOUT, 18
    NET_ECONNRESET, 19
    NET_ECONNABORTED, 20
    NET_ENETDOWN, 21
    NET_EPIPE, 22
    NET_EMAPP, 23
    NET_EBADAPP, 24
    NET_ESOCKEXIST, 25
    NET_EINVAL, 26
    NET_EMSGSIZE, 27
    NET_EEOF, 28
    NET_EHOSTNOTFOUND, 29
    NET_ETRYAGAIN, 30
    NET_ENORECOVERY, 31
    NET_ENOADDRESS, 32
    NET_ENETEXIST, 33
End

Begin Enum, CP UI VAL Net Status
    NET_ISCONN_STATUS, 0
    NET_INPROGRESS_STATUS, 1
    NET_NONET_STATUS, 2
    NET_CLOSEINPROGRESS_STATUS, 3
    NET_DORMINPROGRESS_STATUS, 4
    NET_INDORMANCY_STATUS, 5
    NET_WAKINGUP_STATUS, 6
End

Begin Enum, CP UI VAL Net Sock State
    SOCKET_NULL_STATE, 0
    SOCKET_OPENING_STATE, 1
    SOCKET_OPEN_STATE, 2
    SOCKET_CLOSING_STATE, 3
    SOCKET_WAITFOR_CLOSE_STATE, 4
    SOCKET_CLOSED_STATE, 5
End

Begin Enum, DSP Unit
    Exe, 0, RO
    Ipc, 1, RO
    Mon, 2, RO
    Mth, 3, RO
    Sys, 4, RO
    Fwd, 5, RO
    Msc, 6, RO
    Rev, 7, RO
    Rfc, 8, RO
    Sch, 9, RO
    Vap, 10, RO
    V13, 11,  RO
    Ve8, 12,  RO
    Vec, 13, RO
    Amp, 14, RO
    Asg, 16, RO
    App, 17, RO
End

Begin Enum, DSP Exe Err Codes
    EXE_STACK_OVERFLOW_ERR, 0x00
    EXE_TASK_ID_ERR, 0x01
    EXE_MBOX_ID_ERR, 0x02
    EXE_OUT_OF_MSG_MEM_ERR, 0x03
    EXE_OUT_OF_BUFF_MEM_ERR, 0x04
    EXE_BUFF_MEM_SIZE_ERR, 0x05
    EXE_BUFF_MEM_TYPE_ERR, 0x06
    EXE_NO_MAIL_MSG_ERR, 0x07
End

Begin Enum, DSP Ipc Err Codes
    IPC_RX_MSG_ID_ERR, 0x00
    IPC_RX_SYNC_ERR, 0x01
    IPC_RX_MBOX_SIZE_ERR, 0x02
    IPC_RX_OVERRUN_ERR, 0x03
    IPC_TX_MSG_SIZE_ERR, 0x04
    IPC_TX_MSG_NUMWORDS_ERR, 0x05
End

Begin Enum, DSP Mon Err Codes
    MON_QUEUE_EMPTY_ERR, 0x00
    MON_MSG_ID_ERR, 0x01
    MON_SPY_ID_ERR, 0x02
    MON_SPY_LEN_ERR, 0x03
    MON_TRACE_ID_ERR, 0x04
    MON_TRACE_ARG_ERR, 0x05
    MON_PRINTF_ARG_ERR, 0x06
    MON_PEEK_LEN_ERR, 0x07
    MON_POKE_LEN_ERR, 0x08
    MON_LOOPBACK_LEN_ERR, 0x09
    MON_DBG_ASSERT_ERR, 0x0A
    MON_DBUF_LOOPBACK_ERR, 0x0B
    MON_CHECKSUM_MATCH_ERR, 0x0C
End

Begin Enum, DSP Mth Err Codes
End

Begin Enum, DSP Sys Err Codes
End

Begin Enum, DSPM Fwd Err Codes
    FWD_ASSERT_ERR, 0
    FWD_FNGR_ALLOCATE_ERR, 
    FWD_FMQ_FULL_ERR, 
    FWD_CHNL_CFG_NO_CHNL_ERR, 
    FWD_VIT_NOT_DONE_ERR, 
    FWD_DMBOX_WRDY_ERR, 
    FWD_RDA_CHNL_LATE_ERR, 
    FWD_SYMB_LEN_ERR, 
    FWD_CHNL_NO_FINGER, 
End

Begin Enum, DSPM Msc Err Codes
    MSC_ILLEGAL_MSG_ID_ERR, 0
    MSC_ILLEGAL_EXE_SIG_TYPE, 
    MSC_INVLD_CMD_STATE_INIT, 
    MSC_INVLD_CMD_STATE_PCH_DECODE_NGHBR, 
    MSC_INVLD_CMD_STATE_SLEEP, 
    MSC_INVLD_CMD_STATE_PLL_SETTLE_DELAY, 
    MSC_INVLD_CMD_STATE_RF_SETTLE_DELAY, 
    MSC_INVLD_CMD_STATE_SRCH_BUFFER_DELAY, 
    MSC_INVLD_CMD_STATE_SRCH_PILOT_LIST, 
    MSC_INVLD_CMD_STATE_PCH_DECODE_NO_NGHBR_RSLT, 
    MSC_INVLD_CMD_STATE_SRCH_NGHBR, 
    MSC_INVLD_CMD_STATE_QPCH_DECODE, 
End

Begin Enum, DSPM Rev Err Codes
    REV_NODATA_ERR, 0x00
    REV_DATA_CH_ERR, 0x01
    REV_CH_CFG_ERR, 0x02
    REV_MSG_ERR, 0x03
End

Begin Enum, DSPM Rfc Err Codes
    RFC_ILLEGAL_MSG_ID_ERR, 0x00
    RFC_ILLEGAL_EXE_SIG_TYPE, 
    RFC_RX_AFC_PREV_CMD_EXIST, 
    RFC_RX_DCB_PREV_CMD_EXIST, 
    RFC_RX_AGC_PREV_CMD_EXIST, 
    RFC_TX_AGC_PREV_CMD_EXIST, 
    HWD_ERR_CALIB_PARM_INVALID, 
    RFC_RX_AGC_CAL_TBL_VAL_INVALID, 
    RFC_TX_AGC_CAL_TBL_VAL_INVALID, 
    RFC_TX_AGC_RC_INVALID, 
    RFC_RX_AGC_DCB_OUT_OF_SYNC, 
    RFC_SPI_WRITE_FAIL, 
End

Begin Enum, DSPM Sch Err Codes
    SCH_ILLEGAL_MSG_ID_ERR, 0
    SCH_ILLEGAL_EXE_SIG_TYPE, 
    SCH_LISTS_EMPTY, 
    SCH_ACTIVE_LIST_EXCEED_MAXIMUM, 
    SCH_CANDIDATE_LIST_EXCEED_MAXIMUM, 
    SCH_NEIGHBOR_LIST_EXCEED_MAXIMUM, 
    SCH_AFLT_LIST_EXCEED_MAXIMUM, 
    SCH_AFLT_COARSE_DWELL_LEN_ERR, 
    SCH_AFLT_FINE_DWELL_LEN_ERR, 
    SCH_HW_DONE_ERR, 
    SCH_HW_STALL_ERR, 
    SCH_IC_TAPSILLEGAL_ERR, 
End

Begin Enum, DSPM TraceIds
    All Off, 0, CT, DSPM/Trace, lite, 
    DSPM FWD Chk Stack Usage, 16, CT, DSPM/Trace, 
    DSPM FWD Start Viterbi, 17, CT, DSPM/Trace, 
    DSPM FWD Rda Ctrl Mismatch, 18, CT, DSPM/Trace, 
    DSPM FWD Dbg1, 19, CT, DSPM/Trace, 
    DSPM FWD Viterbi Crc, 20, CT, DSPM/Trace, 
    DSPM FWD Data Send, 21, CT, DSPM/Trace, 
    DSPM FWD Chnl Cfg, 22, CT, DSPM/Trace, 
    DSPM FWD SchDtx TurboDec Parm, 23, CT, DSPM/Trace, 
    DSPM FWD Modem, 24, CT, DSPM/Trace, 
    DSPM REV Trace1, 32, CT, DSPM/Trace, 
    DSPM REV Chnl Cfg, 33, CT, DSPM/Trace, 
    DSPM REV Chnl Data, 34, CT, DSPM/Trace, 
    DSPM REV Modem, 35, CT, DSPM/Trace, 
    DSPM RFC Trace1, 48, CT, DSPM/Trace, 
    DSPM RFC RxDAgc Gain, 49, CT, DSPM/Trace, 
    DSPM RFC IP2, 50, CT, DSPM/Trace, 
    DSPM RFC Alternate Afc, 51, CT, DSPM/Trace, 
    DSPM RFC Normal Afc, 52, CT, DSPM/Trace, 
    DSPM RFC Artd Metrics Main, 53, CT, DSPM/Trace, 
    DSPM RFC Artd Metrics Div, 54, CT, DSPM/Trace, 
    DSPM MSC Trace1, 64, CT, DSPM/Trace, 
    DSPM MSC Spage State, 65, CT, DSPM/Trace, 
    DSPM MSC Trace2, 66, CT, DSPM/Trace, 
    DSPM MSC Gps, 67, CT, DSPM/Trace, 
    DSPM MSC Spi Write, 68, CT, DSPM/Trace, 
    DSPM SCH Qpch Decode State, 80, CT, DSPM/Trace, 
    DSPM SCH Fngr Alloc, 81, CT, DSPM/Trace, 
    DSPM SCH ActPwrRpt, 82, CT, DSPM/Trace, 
    DSPM SCH Aflt Coarse Pwr, 83, CT, DSPM/Trace, 
    DSPM SCH Aflt, 84, CT, DSPM/Trace, 
    DSPM SCH Spage Mode, 85, CT, DSPM/Trace, 
    DSPM SCH MinAcq, 86, CT, DSPM/Trace, 
    DSPM SCH CoarseAfc, 87, CT, DSPM/Trace, 
    DSPM SCH Stall0, 88, CT, DSPM/Trace, 
    DSPM SCH ProgramSearcher, 89, CT, DSPM/Trace, 
    DSPM SCH NeigPwrRpt, 90, CT, DSPM/Trace, 
    DSPM SCH PilotAcq Rdy, 91, CT, DSPM/Trace, 
    DSPM SCH Act AntPilotPwr, 92, CT, DSPM/Trace, 
    DSPM SCH ActSetInfo, 93, CT, DSPM/Trace, 
    DSPM SCH IC Control Parm, 94, CT, DSPM/Trace, 
    DSPM SCH DLL Adjust, 95, CT, DSPM/Trace, 
    DSPM FPC DTX SNR, 96, CT, DSPM/Trace, 
    DSPM FPC DTX VitMetric, 97, CT, DSPM/Trace, 
    DSPM SCH Cand AntPilotPwr, 98, CT, DSPM/Trace, 
    DSPM SCH Ngbr AntPilotPwr, 99, CT, DSPM/Trace, 
    DSPM SCH MinAcq Parm, 100, CT, DSPM/Trace, 
    DSPM SCH SpageListProc, 101, CT, DSPM/Trace, 
    DSPM SCH DLL Slam, 102, CT, DSPM/Trace, 
    DSPM SCH PilotPwr Update, 103, CT, DSPM/Trace, 
End

Begin Enum, FwdIdT
    FWD_CHNL_DFG_MSG_HDLR, 
    FWD_CHNL_DFG_MSG_HDLR_2, 
    FWD_CHNL_DFG_MSG_HDLR_3, 
    FWD_CHNL_CFG_SET, 
    FWD_CHNL_CFG_SET_2, 
    FWD_CHNL_CFG_SET_3, 
    FWD_DECODE_CFG, 
    FWD_DECODE_CFG_2, 
    FWD_DECODE_CFG_3, 
    FWD_CHNL_DISABLE, 
    FWD_CHNL_DISABLE_2, 
    FWD_CHNL_DISABLE_3, 
    FWD_DBG_FWV_MSG_PARSE, 
    FWD_DBG_FWV_MSG_PARSE_2, 
    FWD_DBG_FWV_MSG_PARSE_3, 
    FWD_RDA_CNTRL_SET, 
    FWD_RDA_CNTRL_SET_2, 
    FWD_RDA_CNTRL_SET_3, 
    FWD_RX_CMDV, 
    FWD_RX_CMDV_2, 
    FWD_RX_CMDV_3, 
    FWD_HARX_CFG, 
    FWD_HARX_CFG_2, 
    FWD_HARX_CFG_3, 
    FWD_CHNL_START_VIT, 
    FWD_CHNL_START_VIT_2, 
    FWD_CHNL_START_VIT_3, 
    FWD_VIT_CLK_STATUS, 
    FWD_VIT_CLK_STATUS_2, 
    FWD_VIT_CLK_STATUS_3, 
    FWD_RXA_VIT_RESET, 
    FWD_RXA_VIT_RESET_2, 
    FWD_RXA_VIT_RESET_3, 
    FWD_RDA_H_METRICS_CFG_SET, 
    FWD_RDA_H_METRICS_CFG_SET_2, 
    FWD_RDA_H_METRICS_CFG_SET_3, 
    FWD_RDA_P_METRICS_CFG_SET, 
    FWD_RDA_P_METRICS_CFG_SET_2, 
    FWD_RDA_P_METRICS_CFG_SET_3, 
    FWD_HARX_VIT_PARMS, 
    FWD_HARX_VIT_PARMS_2, 
    FWD_HARX_VIT_PARMS_3, 
    FWD_CFG_TD_PARMS, 
    FWD_CFG_TD_PARMS_2, 
    FWD_CFG_TD_PARMS_3, 
    FWD_MAP_L_PARM, 
    FWD_MAP_L_PARM_2, 
    FWD_MAP_L_PARM_3, 
    FWD_MAP_J_PARM, 
    FWD_MAP_J_PARM_2, 
    FWD_MAP_J_PARM_3, 
    FWD_CHNL_FRM_SZ, 
    FWD_CHNL_FRM_SZ_2, 
    FWD_CHNL_FRM_SZ_3, 
    FWD_HARX_SHFT_CFG, 
    FWD_HARX_SHFT_CFG_2, 
    FWD_HARX_SHFT_CFG_3, 
    FWD_DEMOD_CFG, 
    FWD_DEMOD_CFG_2, 
    FWD_DEMOD_CFG_3, 
    FWD_MRC_HARX_CFG, 
    FWD_MRC_HARX_CFG_2, 
    FWD_MRC_HARX_CFG_3, 
    FWD_VIT_FRM_END, 
    FWD_VIT_FRM_END_2, 
    FWD_VIT_FRM_END_3, 
    FWD_TIMER_EXP, 
    FWD_TIMER_EXP_2, 
    FWD_TIMER_EXP_3, 
    FWD_EARLY_TERMINATE_CFG_CHANGE, 
    FWD_EARLY_TERMINATE_NONET_CHNL_20MS, 
    FWD_EARLY_TERMINATE_PCG, 
    FWD_EARLY_TERMINATE_PCG_2, 
    FWD_EARLY_TERMINATE_PCG_3, 
End

Begin Enum, RevIdT
    REV_T_TASK, 
    REV_T_TASK_2, 
    REV_T_TASK_3, 
    REV_T_PROCESS_CMD, 
    REV_T_PROCESS_CMD_2, 
    REV_T_PROCESS_CMD_3, 
    REV_T_PROCESS_RX_CMD, 
    REV_T_PROCESS_RX_CMD_2, 
    REV_T_PROCESS_RX_CMD_3, 
    REV_T_CHNL_CFG, 
    REV_T_CHNL_CFG_2, 
    REV_T_CHNL_CFG_3, 
    REV_T_CHNL_DTA, 
    REV_T_CHNL_DTA_RZERO, 
    REV_T_CHNL_DTA_3, 
    REV_T_ACCEL_DONE, 
    REV_T_ACCEL_DONE_2, 
    REV_T_ACCEL_DONE_3, 
    REV_T_SET_TX_CTRL, 
    REV_T_SET_TX_CTRL_2, 
    REV_T_SET_TX_CTRL_3, 
    REV_T_MOD_TX_CTRL, 
    REV_T_MOD_TX_CTRL_2, 
    REV_T_MOD_TX_CTRL_3, 
    REV_T_CALC_CHNL_SCALE, 
    REV_T_CALC_CHNL_SCALE_2, 
    REV_T_CALC_CHNL_SCALE_3, 
    REV_T_CALC_SUP_REP, 
    REV_T_CALC_SUP_REP_2, 
    REV_T_CALC_SUP_REP_3, 
    REV_T_ACCEL_PREP, 
    REV_T_ACCEL_PREP_2, 
    REV_T_ACCEL_PREP_3, 
    REV_T_ACCEL_PROG, 
    REV_T_ACCEL_PROG_2, 
    REV_T_ACCEL_PROG_3, 
    REV_T_DISABLE_CHNL, 
    REV_T_DISABLE_CHNL_2, 
    REV_T_DISABLE_CHNL_3, 
    REV_T_DISABLE_TX, 
    REV_T_DISABLE_TX_2, 
    REV_T_DISABLE_TX_3, 
    REV_T_IS95_GATING, 
    REV_T_IS95_GATING_2, 
    REV_T_IS95_GATING_3, 
    REV_T_PREAMB_GATING, 
    REV_T_PREAMB_GATING_2, 
    REV_T_PREAMB_GATING_3, 
    REV_T_PILOT_GATING_NORMAL, 
    REV_T_PILOT_GATING_RZERO, 
    REV_T_PILOT_GATING_3, 
    REV_T_IS2K_GATING, 
    REV_T_IS2K_GATING_2, 
    REV_T_IS2K_GATING_3, 
    REV_T_INIT, 
    REV_T_INIT_2, 
    REV_T_INIT_3, 
    REV_T_MIX_SIG_PARM_UPDATE, 
    REV_T_MIX_SIG_PARM_UPDATE_2, 
    REV_T_MIX_SIG_PARM_UPDATE_3, 
    REV_KS_ERR_CALC, 
    REV_KS_ERR_CALC_2, 
    REV_KS_ERR_CALC_3, 
    REV_PEAK_CLIP, 
    REV_PEAK_CLIP_2, 
    REV_PEAK_CLIP_3, 
    REV_T_RC8_TEST_CFG, 
    REV_T_RC8_TEST_CFG_2, 
    REV_T_RC8_TEST_CFG_3, 
    REV_T_MAX, 
End

Begin Enum, RfcAlternateAfcT
    FineAfc, 
    CoarseAfc, 
End

Begin Enum, DspmPwrReportTypeT
    SERVING_FREQ_RX_PWR, 
    CANDIDATE_FREQ_RX_PWR, 
    FASTTUNE_FREQ_RX_PWR, 
End

Begin Enum, SpageStates
    INIT, 0
    PCH_DECODE_NGHBR, 
    SLEEP, 
    PLL_SETTLE_DELAY, 
    RF_SETTLE_DELAY, 
    SRCH_PILOT_LIST, 
    PCH_DECODE_NO_NGHBR_RSLT, 
    SRCH_NGHBR, 
    QPCH_DECODE, 
    CCI_DECODE, 
    SRCH_BUFFER_DELAY, 
End

Begin Enum, SpageCmds
    INIT, 0
    STOP, 
    DECODE_PCH_CONT, 
    DECODE_PCH_NO_ACQ, 
    QPCH_1, 
    QPCH_2, 
    NGHBR_SRCH_ONLY, 
    QUERY_LONG_CODE, 
    DLY_TMR_EXPRD, 
    SRCH_BUFF_FULL, 
    SRCH_CMPLT, 
    SRCH_ACT_LIST_CMPLT, 
    SRCH_NGHBR_LIST_CMPLT, 
    SRCH_QPCH_DECODE_CMPLT, 
    SRCH_CCI_DECODE_CMPLT, 
    CCI, 
    DECODE_FCCCH_CONT, 
    DECODE_FCCCH_NO_ACQ, 
    RF_SHUTOFF, 
End

Begin Enum, QpchDecodeStateT
    SCH_QPCH_START_MAIN, 0
    SCH_QPCH_START_DIV, 
    SCH_PROGRAM_SYSTEM_TIMEING_PILOT_DEMOD, 
    SCH_PROGRAM_SYSTEM_TIMEING_QPCH_DEMOD, 
    SCH_PILOT_DEMOD_OBF_READY, 4
    SCH_QPCH_DEMOD_OBF_READY, 5
    SCH_DONE_READY, 6
    SCH_DONE_READY_LAST_PATH, 7
    SCH_QPCH_NOISE_NORM, 8
    SCH_QPCH_SIGNAL_NORM, 9
    SCH_Q0_THRESHOLD, 10
    SCH_Q1_THRESHOLD, 11
End

Begin Enum, SchFngrAllocType
    FGR_NEW_ALLOCATE, 0
    FGR_NEW_CHANNEL, 
    FGR_MODIFY_WALSH_CHANNEL, 
    FGR_TIME_TRACK, 
    FGR_DEL_CHANNEL, 
    FGR_DE_ALLOCATE, 
End

Begin Enum, MscSpageSrchMode
    MSC_SPAGE_SRCH_PCH_WITH_FFT, 0
    MSC_SPAGE_SRCH_PCH_NO_FFT, 
    MSC_SPAGE_SRCH_NEIGHBOR_LIST, 
    MSC_SPAGE_SRCH_NORMAL, 
    MSC_SPAGE_SRCH_FNGR_ALLOC, 
    MSC_SPAGE_SRCH_QPCH_WAKE, 
    MSC_SPAGE_SRCH_QI_DECODE, 
End

Begin Enum, SchSpageSrchMode
    SCH_SPAGE_SRCH_NON_SLOTTED, 0
    SCH_SPAGE_1ST_MINIACQ_FNGR_ALLOC, 
    SCH_SPAGE_1ST_MINIACQ_NO_FNGR_ALLOC, 
    SCH_SPAGE_SRCH_NORMAL, 
    SCH_SPAGE_SRCH_FNGR_ALLOC, 
    SCH_SPAGE_FFT_NO_FNGR_ALLOC, 
    SCH_SPAGE_SRCH_NEIGHBOR_LIST, 
    SCH_SPAGE_QI_DECODE, 
    SCH_SPAGE_VCXO_PCH_WAKE_TO_FFT, 
    SCH_SPAGE_FFT_FNGR_ALLOC, 
    SCH_SPAGE_2ND_MINIACQ_FNGR_ALLOC, 
    SCH_SPAGE_2ND_MINIACQ_NO_FNGR_ALLOC, 
End

Begin Enum, SchHwMode
    HW_RESET, 
    HW_NCOH_IAQ, 
    HW_COH_IAQ, 
    HW_FDS, 
    HW_NORMAL, 
    HW_SPAGE, 
    HW_QPCH, 
    HW_IBE, 
    HW_SNB, 
End

Begin Enum, SchListState
    LIST_INIT, 0
    LIST_ACTIVE, 
    LIST_CANDIDATE, 
    LIST_NEIGHBOR, 
    LIST_AFLT_COARSE, 
    LIST_AFLT_FINE, 
    LIST_CFS, 
End

Begin Enum, RcTypeT
    RC1, 
    RC2, 
    RC3, 
    RC4, 
    RC5, 
    RC_MAX_TYPS, 
    RC_NONE, 
End

Begin Enum, DSPM SpyIds
    All Off, 0, CT, DSPM/Spy, lite, 
    DSPM Msg Buff Stats, 1, CT, DSPM/Spy, 
    DSPM Fwv Rda Apost, 16, CT, DSPM/Spy/Fwd, 
    DSPM Fwv Viterbi Outp, 17, CT, DSPM/Spy/Fwd, 
    DSPM Fwv Rda Aprio, 18, CT, DSPM/Spy/Fwd, 
    DSPM Fwv Generic Dbg, 19, CT, DSPM/Spy/Fwd, 
    DSPM Fwv FER, 20, CT, DSPM/Spy/Fwd, 
    DSPM Fwm Finger Position, 24, CT, DSPM/Spy/Fwd, 
    DSPM Fwm Finger ModifyQ, 25, CT, DSPM/Spy/Fwd, 
    DSPM Fwm Smb Dbg, 26, CT, DSPM/Spy/Fwd, 
    DSPM Fwm Generic 20ms, 27, CT, DSPM/Spy/Fwd, 
    DSPM Fwm Fngr D3 Limiter, 28, CT, DSPM/Spy/Fwd, 
    DSPM Fwm Finger Usage, 29, CT, DSPM/Spy/Fwd, 
    DSPM Fwm Rpc Fpc Spy, 30, CT, DSPM/Spy/Fwd, 
    DSPM Fwm Fpc Average Spy, 31, CT, DSPM/Spy/Fwd, 
    DSPM Rev Chnl1 Data, 32, CT, DSPM/Spy/Rev, 
    DSPM Rev Chnl2 Data, 33, CT, DSPM/Spy/Rev, 
    DSPM Rfc TxAGC, 49, CT, DSPM/Spy/Rfc, 
    DSPM Rfc RxTx, 52, CT, DSPM/Spy/Rfc, lite, 
    DSPM Rfc Afc Freq Error, 53, CT, DSPM/Spy/Rfc, 
    DSPM Rfc RevPwrCntrl, 54, CT, DSPM/Spy/Rfc, lite, 
    DSPM Rfc Smart Antenna, 55, CT, DSPM/Spy/Rfc, 
    DSPM Rfc DAgc Spage, 56, CT, DSPM/Spy/Rfc, 
    DSPM Msc Spy1, 64, CT, DSPM/Spy/Msc, lite, 
    DSPM Msc Finger Acq Spy, 65, CT, DSPM/Spy/Msc, 
    DSPM Msc Cfs State, 66, CT, DSPM/Spy/Msc, 
    DSPM Sch Sort, 80, CT, DSPM/Spy/Sch, 
    DSPM Sch UsablePath, 81, CT, DSPM/Spy/Sch, 
    DSPM Sch Alloc, 82, CT, DSPM/Spy/Sch, 
    DSPM Sch Fngr Pwr, 83, CT, DSPM/Spy/Sch, lite, 
    DSPM Sch Fngr Status, 84, CT, DSPM/Spy/Sch, lite, 
    DSPM Sch Qpch, 85, CT, DSPM/Spy/Sch, 
    DSPM Sch Aflt Fine Sort List0, 86, CT, DSPM/Spy/Sch, 
    DSPM Sch Aflt Fine Srch Dbg, 87, CT, DSPM/Spy/Sch, 
    DSPM Sch Aflt Pwr, 88, CT, DSPM/Spy/Sch, 
    DSPM Sch Aflt Fine Srch Rpt, 89, CT, DSPM/Spy/Sch, 
    DSPM Sch Query Timing Rsp, 90, CT, DSPM/Spy/Sch, 
    DSPM Sch Cfs Rslt, 91, CT, DSPM/Spy/Sch, 
    DSPM Sch CAfc Sort, 92, CT, DSPM/Spy/Sch, 
    DSPM Sch Coherent Sort, 93, CT, DSPM/Spy/Sch, 
    DSPM Dbg Spy1, 96, CT, DSPM/Spy, 
    DSPM Dbg Spy2, 97, CT, DSPM/Spy, 
    DSPM Dbg Spy3, 98, CT, DSPM/Spy, 
    DSPM Fpc Spy1, 112, CT, DSPM/Spy/Fpc, 
    DSPM Fpc Spy2, 113, CT, DSPM/Spy/Fpc, lite, 
    DSPM Fpc Config, 114, CT, DSPM/Spy/Fpc, lite, 
    DSPM Fpc Spy3, 115, CT, DSPM/Spy/Fpc, 
    DSPM Fpc OutLp, 116, CT, DSPM/Spy/Fpc, lite, 
    DSPM Fpc OuterLoop, 117, CT, DSPM/Spy/Fpc, 
End

Begin Enum, AllocStatus
    NOT_DET, 0
    UNCH_ALLOC, 
    UNCH_DISABLE, 
    CH_ALLOC, 
    CH_DISABLE, 
End

Begin Enum, DSPM Messages Type
    DSPM Sim Msg, 0x406, CO, DSPM/DSPM Sim
    DSPM Fwd Channel Config, 0x100, CO, DSPM/DSPM Sim/Fwd
    DSPM Fwd Set Fwv Gen Spy, 0x141, CO, DSPM/DSPM Sim/Fwd
    DSPM Fwd Rda Switch, 0x142, CO, DSPM/DSPM Sim/Fwd
    DSPM Fwd EarlyTerminate Dbg, 0x143, CO, DSPM/DSPM Sim/Fwd
    DSPM Fwd Set Smb Spy, 0x1f0, CO, DSPM/DSPM Sim/Fwd
    DSPM Fwd Set Fwm Gen Spy, 0x1f1, CO, DSPM/DSPM Sim/Fwd
    DSPM Fwd TimeTrack Switch, 0x1f2, CO, DSPM/DSPM Sim/Fwd
    DSPM Fwd Finger Modify, 0x1ff, CO, DSPM/DSPM Sim/Fwd
    DSPM Fwd Pdch Parms, 0x108, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch Debugs, 0x10c, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch Finger Alloc, 0x10e, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch QamScale, 0x10f, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch TD Iteration, 0x110, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch Reset Statistics, 0x111, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch Bypass Searcher, 0x112, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch Bypass Rev, 0x113, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch MacId0 Disable, 0x114, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch Fix CQI Value, 0x115, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch Fix ACKNAK, 0x116, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch Cell Switch, 0x117, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch Cell Switch Thresh, 0x118, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch Valid Chk Disable, 0x119, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch LWCI Chk Disable, 0x11a, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch LC Scram Disable, 0x11b, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch Fix LC Pattern, 0x11c, CO, DsPM/DSPM Sim/DV
    DSPM Fwd Pdch Pdcch Scram BitRevOff, 0x11d, CO, DsPM/DSPM Sim/DV
    DSPM Rev Chnl Cfg, 0x200, CO, DSPM/DSPM Sim/Rev
    DSPM Rev Preamble Cfg, 0x201, CO, DSPM/DSPM Sim/Rev
    DSPM Rev Mixed Sig Parm, 0x202, CO, DSPM/DSPM Sim/Rev
    DSPM Rev RC8 Test Cfg, 0x280, CO, DSPM/DSPM Sim/Rev
    DSPM RxAGC Calibr Mode Parms, 0x320, CO, DSPM/DSPM Sim/Rfc
    DSPM RxAGC Settle_Target Power, 0x351, CO, DSPM/DSPM Sim/Rfc
    DSPM RxDAGC Gain State Ctrl, 0x331, CO, DSPM/DSPM Sim/Rfc
    DSPM Msc Mdm Rst, 0x400, CO, DSPM/DSPM Sim/Msc
    DSPM Msc Sync Sys Time, 0x401, CO, DSPM/DSPM Sim/Msc
    DSPM Msc Parm Msg, 0x407, CO, DSPM/DSPM Sim/Msc
    DSPM Msc Dbg Finger Acq, 0x441, CO, DSPM/DSPM Sim/Msc
    DSPM Msc Dbg Finger Scan, 0x442, CO, DSPM/DSPM Sim/Msc
    DSPM Sch Pilot_Acquire, 0x500, CO, DSPM/DSPM Sim/Sch
    DSPM Sch Normal_Pilot_Set, 0x504, CO, DSPM/DSPM Sim/Sch
    DSPM Sch Aflt Pilot Set, 0x507, CO, DSPM/DSPM Sim/Sch
    DSPM Sch Aflt Alg Value, 0x509, CO, DSPM/DSPM Sim/Sch
    DSPM Sch Query Timing, 0x50a, CO, DSPM/DSPM Sim/Sch
    DSPM Sch Diversity Control, 0x50f, CO, DSPM/DSPM Sim/Sch
    DSPM Sch SamplePhase Control, 0x510, CO, DSPM/DSPM Sim/Sch
End

Begin Enum, DSPV Vap Err Codes
    VAP_MPP_MSG_ID_ERR, 0x00
    VAP_MPP_SET_RATE_MSG_ERR, 0x01
    VAP_MPP_SRVC_OPTION_ERR, 0x02
    VAP_MPP_CODEC_ES_ERR, 0x03
    VAP_MPP_SIG_ID_ERR, 0x04
    VAP_MPP_FIF_MODE_MSG_ERR, 0x05
    VAP_MPP_FIF_CFG_MSG_ERR, 0x06
    VAP_MPP_BIF_MODE_MSG_ERR, 0x07
    VAP_MPP_BIF_CFG_MSG_ERR, 0x08
    VAP_MPP_TONE_QUEUE_FULL_ERR, 0x09
    VAP_MPP_TONE_NOT_SUPPORTED_ERR, 0x0A
    VAP_MPP_MSG_IN_APP_ACTIVE_ERR, 0x0B
    VAP_MPP_SIG_IN_APP_ACTIVE_ERR, 0x0C
    VAP_SPP_MSG_ID_ERR, 0x20
    VAP_SPP_SRVC_OPTION_ERR, 0x21
    VAP_SPP_SRVC_OPTION_MSG_ERR, 0x22
    VAP_SPP_ECHO_CANCEL_MSG_ERR, 0x23
    VAP_SPP_AUDIO_PLAYBACK_DATA_ERR, 0x24
    VAP_SPP_AUDIO_REC_PB_MODE_ERR, 0x25
    VAP_SPP_AIR_INTERFACE_MODE_ERR, 0x26
    VAP_SPP_TTY_MODE_MSG_ERR, 0x27
    VAP_SPP_TTY_CFG_MSG_ERR, 0x28
    VAP_SPP_DBG_PARMS_MSG_TYPE_ID_ERR, 0x29
    VAP_SPP_PCKT_READY_ERR, 0x2a
    VAP_SPP_CODEC_DF_ERR, 0x2b
    VAP_SPP_FIF_CFG_MSG_ERR, 0x2c
    VAP_SPP_ERROR, 0x2d
    VAP_SPP_TONE_QUEUE_FULL_ERR, 0x2e
    VAP_SPP_AUD_COMRESS_MSG_ERR, 0x2f
    VAP_SPP_TASK_SCHEDULE_1_ERR, 0x30
    VAP_SPP_TASK_SCHEDULE_2_ERR, 0x31
    VAP_SPP_AUDIO_CFG_MSG_ERR, 0x32
    VAP_SPP_MSG_IN_APP_ACTIVE_ERR, 0x33
    VAP_SPP_SIG_IN_APP_ACTIVE_ERR, 0x34
    VAP_SSOCM_RRM_ERR, 0x40
    VAP_SSOCM_M2M_ERR, 0x41
    VAP_SSOCM_INIT_ERR, 0x42
    VAP_SPP_AUD_ASVC_MSG_ERR, 0x43
    VAP_FIQ_SBC_ENC_ERR, 0x50
    VAP_SHARED_MEM_BLOCK4_ERR, 0x51
    VAP_DSPG_BUF_NOT_RDY_FOR_WRITE_ERR, 0x60
    VAP_SPP_PCM_MULTIPLE_FRAME_DATA_ERR, 0x70
    VAP_SPP_PCM_NO_FRAME_DATA_ERR, 0x71
End

Begin Enum, DSPV V13 Err Codes
End

Begin Enum, DSPV Ve8 Err Codes
End

Begin Enum, DSPV Vec Err Codes
End

Begin Enum, DSPV Amp Err Codes
    AMPS NOT USED, 0x00
End

Begin Enum, DSPV ASG Err Codes
    ASG_RNGR_SHRD_MEM_ACCESS1_ERR, 0x00
    ASG_RNGR_SHRD_MEM_ACCESS2_ERR, 0x01
    ASG_RNGR_CFG_MSG_IN_VOICE_ERR, 0x02
    ASG_RNGR_MODE_MSG_IN_VOICE_ERR, 0x03
    ASG_MPP_TONE_GEN_MSG_IN_RNGR_ERR, 0x04
    ASG_SPP_TONE_GEN_MSG_IN_RNGR_ERR, 0x05
    ASG_SSO_CONNECT_MSG_IN_RNGR_ERR, 0x06
    ASG_REC_PLAYBACK_MSG_IN_RNGR_ERR, 0x07
    ASG_RNGR_TOO_MANY_VOICES_ERR, 0x08
    ASG_RNGR_MSG_ID_ERR, 0x09
    ASG_RNGR_MSG_IN_APP_ACTIVE_ERR, 0x0A
    ASG_RNGR_SIG_IN_APP_ACTIVE_ERR, 0x0B
    ASG_RNGR_FIQ_MIDI_ERR, 0x10
    ASG_RNGR_FIQ_SBC_ENC_ERR, 0x11
End

Begin Enum, DSPV App Err Codes
    APP_MSG_ID_ERR, 0x00
    APP_APPID_ERR, 0x01
    APP_APPMODE_ERR, 0x02
    APP_STARTMSG_WHILE_PREPARATION_ERR, 0x03
    APP_MSG_HANDLER_NULL_ERR, 0x04
    APP_INIT_FUNC_NULL_ERR, 0x05
    APP_RUN_FUNC_NULL_ERR, 0x06
    APP_TERMINATE_FUNC_NULL_ERR, 0x07
    APP_INIT_DATA_SIZE_TOOBIG_ERR, 0x08
    APP_SHARED_MEMORY_CTRL_ERR, 0x09
    APP_MSG_IN_VOICE_ACTIVE_ERR, 0x0A
    APP_SIG_IN_VOICE_ACTIVE_ERR, 0x0B
    APP_MP3_FRAME_SYNC_NOT_FOUND_ERR, 0x10
    APP_MP3_LOSS_OF_FRAME_SYNC_ERR, 0x11
    APP_MP3_INSUFFICIENT_MAIN_DATA_ERR, 0x12
    APP_MP3_REPEATED_FILE_OFFSET_ERR, 0x13
    APP_FIQ_SBC_ENC_ERR, 0x20
    APP_FIQ_APP_CMD_ERR, 0x21
    APP_MIXER_OUTPUT_SIZE_ERR, 0x30
    APP_MIXER_ACC_ERR, 0x31
    ASC_RESEMP_MSG_IN_APP_ACTIVE_ERR, 0x1001
    ASC_RESEMP_SIG_IN_APP_ACTIVE_ERR, 0x1002
    ASC_RESEMP_MSG_ID_ERR, 0x1003
    ASC_FIQ_SBC_ENC_ERR, 0x1010
    ASC_FIQ_AV_SYNC_ERR, 0x1011
    ASC_SHARED_MEM_BLOCK4_ERR, 0x1012
End

Begin Enum, DSPV TraceIds
    All Off, 0, CT, DSPV/Trace, lite, 
    DSPV Voice Ctrl Regs Mpp Task, 16, CT, DSPV/Trace, 
    DSPV Mpp Samp Buf Err, 17, CT, DSPV/Trace, 
    DSPV Spch Srvc Opt Ctrl Parms, 18, CT, DSPV/Trace, 
    DSPV Mpp Enc Rates, 19, CT, DSPV/Trace, lite, 
    DSPV Voice Loopback Mode, 20, CT, DSPV/Trace, 
    DSPV Stack Profile, 21, CT, DSPV/Trace, 
    DSPV Slip and Stuff Check, 22, CT, DSPV/Trace, 
    DSPV Mpp Tty Enc Info, 23, CT, DSPV/Trace, 
    DSPV Voice Ctrl Regs Spp Task, 32, CT, DSPV/Trace, 
    DSPV Spp Samp Buf Err, 33, CT, DSPV/Trace, 
    DSPV Spp Dec Rates, 34, CT, DSPV/Trace, lite, 
    DSPV Speech Buffer Address, 35, CT, DSPV/Trace, 
    DSPV Speech Buffer Location, 36, CT, DSPV/Trace, 
    DSPV Spp Tty Dec Info, 37, CT, DSPV/Trace, 
    DSPV Acp Noiselevel, 67, CT, DSPV/Trace, 
    DSPV Acp Sppfrmpwr, 68, CT, DSPV/Trace, 
End

Begin Enum, DSPV SpyIds
    All Off, 0, CT, DSPV/Spy, lite, 
    DSPV Msg Buff Stats, 1, CT, DSPV/Spy, 
    DSPV Mpp Task Beg Spy Parms, 16, CT, DSPV/Spy/DSPV Mpp, 
    DSPV Mpp Pre Noise Supr Spy Parms, 17, CT, DSPV/Spy/DSPV Mpp, 
    DSPV Mpp Pre Aec Spy Parms, 18, CT, DSPV/Spy/DSPV Mpp, 
    DSPV Mpp Post Aec Spy Parms, 19, CT, DSPV/Spy/DSPV Mpp, lite, 
    DSPV Mpp Pre Enc Spy Parms, 20, CT, DSPV/Spy/DSPV Mpp, 
    DSPV Mpp Post Enc Spy Parms, 21, CT, DSPV/Spy/DSPV Mpp, 
    DSPV Mpp Task End Spy Parms, 22, CT, DSPV/Spy/DSPV Mpp, 
    DSPV Mpp Pre Tty Spy Parms, 23, CT, DSPV/Spy/DSPV Mpp, 
    DSPV Mpp Enc Pckt Spy Parms, 24, CT, DSPV/Spy/DSPV Mpp, lite, 
    DSPV Mpp Pre Fif Spy Parms, 25, CT, DSPV/Spy/DSPV Mpp, 
    DSPV Mpp Pre Bif Spy Parms, 26, CT, DSPV/Spy/DSPV Mpp, 
    DSPV Mpp Pre Scal Spy Parms, 27, CT, DSPV/Spy/DSPV Mpp, 
    DSPV Mpp Task End Gen Spy Parms, 28, CT, DSPV/Spy/DSPV Mpp, 
    DSPV Mpp Ans OUTPUTPWR, 29, CT, DSPV/Spy/DSPV Mpp, 
    DSPV Spp Task Beg Spy Parms, 32, CT, DSPV/Spy/DSPV Spp, 
    DSPV Spp Pre Dec Spy Parms, 33, CT, DSPV/Spy/DSPV Spp, 
    DSPV Spp Post Dec Spy Parms, 34, CT, DSPV/Spy/DSPV Spp, lite, 
    DSPV Spp Pre Tone Spy Parms, 35, CT, DSPV/Spy/DSPV Spp, lite, 
    DSPV Spp Post Mixer Spy Parms, 36, CT, DSPV/Spy/DSPV Spp, 
    DSPV Spp Post Process Spy Parms, 37, CT, DSPV/Spy/DSPV Spp, 
    DSPV Spp Task End Spy Parms, 38, CT, DSPV/Spy/DSPV Spp, 
    DSPV Spp Pre Tty Spy Parms, 39, CT, DSPV/Spy/DSPV Spp, 
    DSPV Spp Post Tty Spy Parms, 40, CT, DSPV/Spy/DSPV Spp, 
    DSPV Spp Pre Scal Spy Parms, 41, CT, DSPV/Spy/DSPV Spp, 
    DSPV Spp Task End Gen Spy Parms, 42, CT, DSPV/Spy/DSPV Spp, 
    DSPV Spp Dec Pckt Spy Parms, 43, CT, DSPV/Spy/DSPV Spp, lite, 
    DSPV Voice Apps Status, 48, CT, DSPV/Spy, 
    DSPV Aec Rin Spy Parms, 49, CT, DSPV/Spy/DSPV Aec, 
    DSPV Aec Sin1 Spy Parms, 50, CT, DSPV/Spy/DSPV Aec, 
    DSPV Aec Aec Out Spy Parms, 51, CT, DSPV/Spy/DSPV Aec, 
    DSPV Aec Ref Out Spy Parms, 52, CT, DSPV/Spy/DSPV Aec, 
    DSPV Aec Ans Out Spy Parms, 53, CT, DSPV/Spy/DSPV Aec, 
    DSPV Aec Ric Out Spy Parms, 55, CT, DSPV/Spy/DSPV Aec, 
    DSPV Aec Sin2 Out Spy Parms, 56, CT, DSPV/Spy/DSPV Aec, 
    DSPV Aec Bss1 Out Spy Parms, 57, CT, DSPV/Spy/DSPV Aec, 
    DSPV Aec Bss2 Out Spy Parms, 58, CT, DSPV/Spy/DSPV Aec, 
    DSPV Ringer Apps Status, 128, CT, DSPV/Spy, 
    DSPV Ringer Data, 129, CT, DSPV/Spy/Ringer, 
    DSPV Ringer Data FM, 130, CT, DSPV/Spy/Ringer, 
    DSPV Ringer Data VOICE, 131, CT, DSPV/Spy/Ringer, 
    DSPV Ringer Shared Mem, 132, CT, DSPV/Spy/Ringer, 
    DSPV Ringer Synth Out, 133, CT, DSPV/Spy/Ringer, 
    DSPV Ringer Mixer Out, 134, CT, DSPV/Spy/Ringer, 
    DSPV Music Apps Status, 144, CT, DSPV/Spy, 
    DSPV MP3 Quick Status, 145, CT, DSPV/Spy/Music, 
    DSPV MP3 Main Status, 146, CT, DSPV/Spy/Music, 
    DSPV App File Read Request, 157, CT, DSPV/Spy/Music, 
    DSPV App File Received, 158, CT, DSPV/Spy/Music, 
    DSPV App Fmb Check, 159, CT, DSPV/Spy/Music, 
    DSPV Resampler Left Channel Output, 160, CT, DSPV/Spy/Music, 
    DSPV Resampler Right Channel Output, 161, CT, DSPV/Spy/Music, 
    DSPV Resampler Left Channel Input, 162, CT, DSPV/Spy/Music, 
    DSPV Resampler Right Channel Input, 163, CT, DSPV/Spy/Music, 
    DSPV EQ_OUTPUT_L_CHAN_SPY_ID, 164, CT, DSPV/Spy/Music, 
    DSPV EQ_OUTPUT_R_CHAN_SPY_ID, 165, CT, DSPV/Spy/Music, 
    DSPV MIXER1_OUTPUT_L_CHAN_SPY_ID, 166, CT, DSPV/Spy/Music, 
    DSPV MIXER1_OUTPUT_R_CHAN_SPY_ID, 167, CT, DSPV/Spy/Music, 
    DSPV MIXER2_OUTPUT_L_CHAN_SPY_ID, 168, CT, DSPV/Spy/Music, 
    DSPV MIXER2_OUTPUT_R_CHAN_SPY_ID, 169, CT, DSPV/Spy/Music, 
    DSPV AAC Quick Status, 176, CT, DSPV/Spy/Music, 
    DSPV AAC Main Status, 177, CT, DSPV/Spy/Music, 
    DSPV AAC Parser Output, 178, CT, DSPV/Spy/Music, 
    DSPV APP_MIXER_MSG_BUF_SPY_ID, 192, CT, DSPV/Spy/Music, 
    DSPV APP_MIXER_INPUT_BUF_SPY_ID, 193, CT, DSPV/Spy/Music, 
    DSPV APP_MIXER_SRC_DATA_SPY_ID, 194, CT, DSPV/Spy/Music, 
    DSPV APP_MIXER_OUT_DATA_SPY_ID, 195, CT, DSPV/Spy/Music, 
    DSPV APP_MIXER_WRITE_PTR_SPY_ID, 196, CT, DSPV/Spy/Music, 
    DSPV APP_MIXER_READ_PTR_SPY_ID, 197, CT, DSPV/Spy/Music, 
    DSPV APP_MIXER_DATA_ACC_SPY_ID, 198, CT, DSPV/Spy/Music, 
    DSPE HDDEC MSG, 208, CT, DSPV/Spy/EDGE/DSPE, 
    DSPE DATDEC MSG, 209, CT, DSPV/Spy/EDGE/DSPE, 
    DSPE ENC MSG, 210, CT, DSPV/Spy/EDGE/DSPE, 
    DSPE IDC G2E MSG, 211, CT, DSPV/Spy/EDGE/DSPE, 
    DSPE IDC E2G MSG, 212, CT, DSPV/Spy/EDGE/DSPE, 
    DSPE UL CHNL INFO, 213, CT, DSPV/Spy/EDGE/DSPE, 
    DSPE DL CHNL INFO, 214, CT, DSPV/Spy/EDGE/DSPE, 
    DSPE SPY 0, 215, CT, DSPV/Spy/EDGE/DSPE, 
    DSPE SPY 1, 216, CT, DSPV/Spy/EDGE/DSPE, 
    DSPE SPY 2, 217, CT, DSPV/Spy/EDGE/DSPE, 
    DSPE SPY 3, 218, CT, DSPV/Spy/EDGE/DSPE, 
    DSPE SPY 4, 219, CT, DSPV/Spy/EDGE/DSPE, 
    DSPE SPY 5, 220, CT, DSPV/Spy/EDGE/DSPE, 
    DSPE SPY 6, 221, CT, DSPV/Spy/EDGE/DSPE, 
    DSPG SPY 0, 224, CT, DSPV/Spy/EDGE/DSPG, 
    DSPG SPY 1, 225, CT, DSPV/Spy/EDGE/DSPG, 
    DSPG SPY 2, 226, CT, DSPV/Spy/EDGE/DSPG, 
    DSPG SPY 3, 227, CT, DSPV/Spy/EDGE/DSPG, 
    DSPG SPY 4, 228, CT, DSPV/Spy/EDGE/DSPG, 
    DSPG SPY 5, 229, CT, DSPV/Spy/EDGE/DSPG, 
    DSPG SPY 6, 230, CT, DSPV/Spy/EDGE/DSPG, 
    DSPG SPY 7, 231, CT, DSPV/Spy/EDGE/DSPG, 
    DSPG SPY 8, 232, CT, DSPV/Spy/EDGE/DSPG, 
    DSPG SPY 9, 233, CT, DSPV/Spy/EDGE/DSPG, 
    DSPV Gen Spy_0 data, 240, CT, DSPV/Spy/General, 
    DSPV Gen Spy_1 data, 241, CT, DSPV/Spy/General, 
    DSPV Gen Spy_2 data, 242, CT, DSPV/Spy/General, 
    DSPV Gen Spy_3 data, 243, CT, DSPV/Spy/General, 
    DSPV Gen Spy_4 data, 244, CT, DSPV/Spy/General, 
End

Begin Enum, Enum SpchSrvcOptions
    NULL, 0, RO
    SO3, 3, RO
    SO17, 17, RO
    SO68, 68, RO
    SO73, 73, RO
    SO73-WB, 173, RO
    AMR, 100, RO
    AMR-WB, 101, RO
    GSM-FR, 256, RO
    GSM-EFR, 257, RO
    GSM-HR, 258, RO
End

Begin Enum, Enum AudioPaths
    HANDSET, 0, RO
    HEADSET, 1, RO
    LOUDSPEAKER, 2, RO
    BLUETOOTH, 3, RO
End

Begin Enum, Enum NumMics
    SINGLE MIC, 1, RO
    DUAL MIC, 2, RO
    TRIPLE MIC, 3, RO
End

Begin Enum, Enum SamplingRates
    16 kHz, 0, RO
    8 kHz, 1, RO
End

Begin Enum, Enum VapVmemoType
    OFF, 0x0000, RO
    REV_REC_PKT, 0x0001, RO
    FWD_REC_PKT, 0x0002, RO
    BOTH_REC_PKT, 0x0004, RO
    REV_REC_PCM, 0x0010, RO
    FWD_REC_PCM, 0x0020, RO
    BOTH_REC_PCM, 0x0040, RO
    PLAY_PCM, 0x0100, RO
End

Begin Enum, Enum AudioRecPlaybackModes
    OFF, 0, RO
    RECORD, 1, RO
    PLAY, 2, RO
    REC AND PLAY, 3, RO
End

Begin Enum, Enum VapLoopbackMode
    OFF, 0, RO
    ISR, 3, RO
    SSO, 4, RO
    MULTIPLEX_SUBLAYER, 7, RO
    MPP_SPP, 8, RO
End

Begin Enum, Enum AppCh
    MONO, 0x0000, RO
    STEREO, 0x0001, RO
End

Begin Enum, Enum SampleRateIndex
    8 kHz, 0,  RO
    11.025 kHz, 1,  RO
    12 kHz, 2,  RO
    16 kHz, 3,  RO
    22.05 kHz, 4,  RO
    24 kHz, 5,  RO
    32 kHz, 6,  RO
    44.1 kHz, 7,  RO
    48 kHz, 8,  RO
End

Begin Enum, Enum RngrModeRegEnum
    ALL_OFF, 0x0000, RO
    DTMF_SPKR_ON, 0x0001, RO
    DTMF_MIC_ON, 0x0002, RO
    DTMF_SPKR_ON_MIC_ON, 0x0003, RO
    RNGR_ON, 0x0004, RO
    LDSPKR_ON_VOICE, 0x0008, RO
    LDSPKR_ON_DTMF_SPKR_ON, 0x0009, RO
    LDSPKR_ON_DTMF_MIC_ON, 0x000A, RO
    LDSPKR_ON_DTMF_SPKR_ON_MIC_ON, 0x000B, RO
    LDSPKR_ON_RNGR_ON, 0x000C, RO
End

Begin Enum, Enum AppAudioPaths
    MONO HIFI DAC, 0x0001, RO
    STEREO HIFI DAC, 0x0002, RO
    EDAI, 0x0004, RO
    I2S, 0x0008, RO
    BLUETOOTH, 0x0010, RO
    VADC-I2S, 0x0020, RO
End

Begin Enum, EnumAppId
    IPC_APP_NULL, 0x0000
    IPC_APP_TEST, 0x0001
    IPC_APP_MIDI, 0x0002
    IPC_APP_MP3, 0x0004
    IPC_APP_AAC, 0x0008
    IPC_APP_WMA, 0x0010
    IPC_APP_WAV, 0x0020
    IPC_APP_FLAC, 0x0021
    IPC_APP_VORBIS, 0x0022
    IPC_APP_SO3, 0x0040
    IPC_APP_SO17, 0x0080
    IPC_APP_GSMFR, 0x0100
    IPC_APP_GSMHR, 0x0110
    IPC_APP_GSMEFR, 0x0200
    IPC_APP_SO68, 0x0400
    IPC_APP_ENC_WAV, 0x0800
    IPC_APP_ENC_AAC, 0x0810
    IPC_APP_TONE, 0x1000
    IPC_APP_AMR, 0x2000
    IPC_APP_AMRWB, 0x2100
    IPC_APP_SO73, 0x4000
    IPC_APP_SO73WB, 0x8000
End

Begin Enum, Enum AppState
    NULL, 0x0000, RO
    PREPARATION_BEGIN, 0x0001, RO
    PREPARATION_CONFIGURING_CHANNELS, 0x0002, RO
    PREPARATION_CHANNELS_CONFIGURED, 0x0003, RO
    PREPARATION_CODE_DOWNLOADING, 0x0004, RO
    PREPARATION_CODE_AVAILABLE, 0x0005, RO
    INIT, 0x0100, RO
    RUN, 0x0101, RO
    TERMINATING, 0x0102, RO
End

Begin Enum, FMB Cmd Id
    FIQ_CMDID_APP, 1
    FIQ_CMDID_MIDI, 2
    FIQ_CMDID_AV_SYNC, 4
    FIQ_CMDID_SBC_ENC, 8
End

Begin Enum, Audio Modules
    AUDIO_STATUS, 0
    TTY_CONFIG_PARMS, 1
    ANS_CONFIG_PARMS, 2
    ASC_ACP_CTRL_PARMS, 3
    AEC_MAIN_CONFIG_PARMS, 4
    AEC_AUX_CONFIG_PARMS, 5
    ASC_MPP_FIF_CONFIG_PARMS, 6
    ASC_MPP_BIF_CONFIG_PARMS, 7
    ASC_SPP_FIF_CONFIG_PARMS, 8
    RNGR_AUDIO_STATUS, 9
    APP_STATUS, 10
End

Begin Enum, SpkrPath
    AUDIO_CFG_DAC_DIFF, 0x0001
    AUDIO_CFG_DAC_SE, 0x0002
    AUDIO_CFG_EDAI, 0x0004
    AUDIO_CFG_PDM_DIFF, 0x0008
    AUDIO_CFG_PDM_SE, 0x0010
    AUDIO_CFG_PWM_DIFF, 0x0020
    AUDIO_CFG_PWM_SE, 0x0040
    AUDIO_CFG_I2S, 0x0080
End

Begin Enum, Status
    STATUS_SUCCESS, 0
    STATUS_FAIL, 1
End

Begin Enum, CalAction
    Read, 0,
    Write, ,
End

Begin Enum, PGPS Modes
    DISABLED_PGPS, 0,
    ENABLED_PGPS_ON_AP, 1,
End

Begin Enum, Sensitivity Mode
    GN_GPS_SENS_MODE_HIGH, 
    GN_GPS_SENS_MODE_NORMAL, 
    GN_GPS_SENS_MODE_DYNAMIC, 
End

Begin Enum, TTFF Mode states
    GN_GPS_COLD_TTFF_BALANCE, 
    GN_GPS_COLD_TTFF_FASTER, 
    GN_GPS_COLD_TTFF_SENSITIVE, 
End

Begin Enum, Power vs Perf Mode
    GN_GPS_POW_PERF_DEFAULT, 
    GN_GPS_POW_PERF_HI_PERF, 
    GN_GPS_POW_PERF_LO_POW, 
End

Begin Enum, IopHalChannelId
    IPC_Control, 0
    IPC_ETS, 1
    IPC_DATA, 2
    IPC_GPS, 3
    IPC_Voice, 4
    IPC_ATCmd, 5
    IPC_ATCmd_1, 6
    IPC_ETS_1, 7
End

Begin Enum, IopHalDeviceId
    IPC_Serial, 0
    IPC_USB, 1
    IPC_DPRAM, 2
    IPC_SDIO_SLAVE, 3
    IPC_ESPI, 4
    IPC_SHMEM, 5
    IOP_MUX, 6
End

Begin Enum, EspiStatus
    Idle, 0
    Tx, 1
    Rx, 2
End

Begin Enum, EspiChannel
    Control, 0
    PPP, 1
    ETS, 2
    AT1, 3
    VOICE, 4
    LBS, 5
End

Begin Enum, EspiTxStatus
    Init, 0
    More, 1
    Last, 2
    Error, 3
    Wait Slave, 4
End

Begin Enum, TstSearcherItems
    Init_Acq_Compl_Sch, 1
    Init_Acq_Sch_With_Window, 2
    Online_Sch_BuffCapT_longer, 3
    Online_Sch_BuffCapT_interrupt, 4
    Slot_Search_AlwaysSearch, 5
    Slot_Search_NotAlwaysSearch, 6
    Register_Test_1x, 7
    DO_Secher_Test_Buffer_Test, 8
    DO_Secher_Register_Test, 9
End

Begin Enum, TstPassFail
    Fail, 0
    Pass, 1
End

Begin Enum, RxStaticItems
    FingerTst, 1
    RxPathWholePath, 2
    EqRxPathWholePath, 3
    FingerTst_dummmy2, 4
End

Begin Enum, TstRfSpiExternalDevices
    ExternalDevice0, 0
    ExternalDevice1, 1
    ExternalDevice2, 2
    ExternalDevice3, 3
    ExternalDevice4, 4
    ExternalDevice5, 5
    VirtualDevice, 7
End

Begin Enum, UimStatusT
    NotReady, 0,
    CardError, 1,
    Replaced, 2,
    Ready, 3,
    BootUp, 4,
    LinkFailure, 5
End

Begin Enum, ValCardStatusT
    CT_UICC_CARD, 0x804,
    UICC_CARD, 0x04,
    CT_UIM_CARD, 0x801,
    CT_UIM_SIM_CARD, 0x803,
    UIM_SIM_CARD, 0x03,
    UIM_CARD, 0x01,
    SIM_CARD, 0x02,
    UNKNOWN_CARD, 0x80,
    NEED_PIN_CARD, 0x1000,
    CARD_NOT_READY, 0x100,
    BOOTUP, 0x200,
    LINK_FAILURE, 0x400
End

Begin Enum, ModeT
    TRUE, 1,
    FALSE, 0,
End

Begin Enum, RxAGCBlock
    Main, 0x01
    Diversity, 0x02
End

Begin Enum, AFCActiveFingers
    Auto, 0xFF
    One, 1
    Two, 2
    Three, 3
    Four, 4
    Five, 5
    Six, 6
End

Begin Enum, FmpEqSelectT
    SELECT_EQ0, 0
    SELECT_EQ1, 1
    SELECT_EQ2, 2
    SELECT_EQ3, 3
End

Begin Enum, FmpEqWWLSelectT
    SELECT_NONE, 0
    SELECT_W, 1
    SELECT_WL, 2
    SELECT_FIR, 3
    SELECT_ADC, 4
    SELECT_EQFN, 5
End

Begin Enum, FmpEqWWLValueFormatT
    SELECT_VALUE, 0
    SELECT_POWER, 1
End

Begin Enum, FlowType Enum
    BEPPP, 0
    PPPFREE, 1
    SIP, 2
    RTPAUDIO, 3
    RTPVIDEO, 4
End

Begin Enum, RFC Protocol Numbers
    ICMP, 1
    IP, 4
    ST, 5
    TCP, 6
    UDP, 17
    RDP, 27
    IRTP, 28
    SIP, 41
    SDRP, 42
    SIP-SR, 43
    SIP-FRAG, 44
    RSVP, 46
    NoNextHdr, 59
    GRE, 
End

Begin Enum, Rev Channel Scale
    Rev Pilot, 0
    Rev Access Preable, 1
    Rev Aux Pilot, 2
    Rev RRI ACK, 3
    Rev RRI NAK, 4
    Rev ACK SUP, 5
    Rev ACK MUP, 6
    Rev DSC, 7
    Rev DSC Boost, 8
    Rev DRC, 9
    Rev DRC Boost, 10
    Rev Data ACK 0, 11
    Rev Data ACK 1, 12
    Rev Data ACK 2, 13
    Rev Data ACK 3, 14
    Rev Data NAK 0, 15
    Rev Data NAK 1, 16
    Rev Data NAK 2, 17
    Rev Data NAK 3, 18
End

Begin Enum, Delay Control Unit
    PA1 Delay Ctrl, 0
    PA2 Delay Ctrl, 1
    PDM1 Delay Ctrl, 2
    PDM2 Delay Ctrl, 3
    RFSPI Delay Ctrl, 4
End

Begin Enum, Delay Hardware Unit
    TX_ON0, 0
    TX_ON1, 1
    TX_ON2, 2
    TX_ON3, 3
    TX_ON4, 4
    TX_ON5, 5
    TX_ON6, 6
    TX_ON7, 7
    PDM0, 8
    PDM1, 9
    PDM2, 10
    PDM3, 11
    PDM4, 12
    PDM5, 13
    RFSPI, 14
End

Begin Enum, CssOOSAPhaseRsp
    Phase Operation Success, 0,
    FAIL General Failure, 
    FAIL Phase Does Not Exist, 
    FAIL Phase Index Too High, 
    FAIL OOSA Sleep Out of Range, 
End

Begin Enum, CssSubModule
    1X, 0,
    DO, 1,
End

Begin Enum, CpsmOOSAStage
    Power Up, 0,
    System Lost, 1,
End

Begin Enum, CpsmOOSAScanMethod
    Scan By Timer, 0,
    Scan Through List Once, 1,
End

Begin Enum, CssSystem
    1X, 0,
    DO, 1,
End

Begin Enum, SEC AuthResultT
    AKAAuth_Success, 
    AKAAuth_AUTNFailure, 
    AKAAuth_SQNSyncFailure, 
    AKAAuth_RESInvalid, 
    AKAAuth_CKInvalid, 
    AKAAuth_IKInvalid, 
    AKAAuth_UnknowFailure, 
End

Begin Enum, Acq Cause Type
    Gobal_Acq, 0
    MCC_Acq, 1
End

Begin Enum, IratPriorityClassT
    MMC_PRI_HOME, 0
    MMC_PRI_PREF, 1
    MMC_PRI_ANY, 2
    SYS_UNAVAILABLE, 3
    SYS_NO_CHANGE, 4
End

Begin Enum, Rat Type
    LTE_CDMA2K1X, 2,
    LTE_CDMA2KHRPD, 4,
End

Begin Enum, Data Command Type
    Suspend, 0,
    Resume, 1,
    Disable, 2,
    Release, 3,
End

Begin Enum, System Type
    SYSTEM_CDMA, 0,
    SYSTEM_UTRAN, 
    SYSTEM_GERAN, 
    SYSTEM_EUTRAN, 
    SYSTEM_INVALID, 
End

Begin Enum, Meas Result Type
    CDMA_MEAS_SUCCESS, 0,
    CDMA_MEAS_1X_ONCALL, 
    CDMA_ACQ_FAIL, 
    CDMA_EMPTY_PNLIST, 
    CDMA_BAND_NOT_SUPPORT, 
    CDMA_MEAS_FAIL, 
End

Begin Enum, CdmaT
    IRAT_1XRTT, 0,
    IRAT_HRPD, 
    IRAT_NULL, 
End

Begin Enum, RAT StatusT
    RAT Success, 0,
    RAT Acq Fail, 
    RAT PS Reg Fail, 
    RAT PS Session Fail, 
    RAT Fail, 
End

Begin Enum, Cdma Meas ResultT
    RES_SUCCESS, 0,
    RES_ACQ_FAIL, 
    RES_BAND_NOT_SUPPORT, 
    RES_REG_FAIL, 
End

Begin Enum, MbimSubReadyStateT
    NotInitialized, 0,
    Initialized, 
    SimNotInserted, 
    BadSim, 
    Failure, 
    NotActivated, 
    DeviceLocked, 
End

Begin Enum, MbimUniqIdFlagsT
    None, 0,
    ProtectUniqueID, 
End

Begin Enum, ApMmcMbimStatusCode
    MBIM_Status_Success, 0,
    MBIM_Status_Busy, 
    MBIM_Status_Failure, 
    MBIM_Status_SIM_Not_Inserted, 
    MBIM_Status_Bad_SIM, 
    MBIM_Status_PIN_Required, 
    MBIM_Status_PIN_Disabled, 
    MBIM_Status_Not_Registered, 
    MBIM_Status_Providers_Not_Found, 
    MBIM_Status_No_Device_Support, 
    MBIM_Status_Provider_Not_Visible, 
    MBIM_Status_Data_Class_Not_Available, 
    MBIM_Status_Packet_Service_Detached, 
    MBIM_Status_Max_Activated_Contexts, 
    MBIM_Status_Not_Initialized, 
    MBIM_Status_Voice_Call_In_Progress, 
    MBIM_Status_Context_Not_Activated, 
    MBIM_Status_Invalid_Access_String, 
    MBIM_Status_Invalid_User_Name_Pwd, 
    MBIM_Status_Radio_Power_Off, 
    MBIM_Status_Invalid_Parameters, 
    MBIM_Status_Read_Failure, 
    MBIM_Status_Write_Failure, 
    MBIM_Status_Reserved, 
    MBIM_Status_No_PhoneBook, 
    MBIM_Status_Parameter_Too_Long, 
    MBIM_Status_STK_Busy, 
    MBIM_Status_Operation_Not_Allowed, 
    MBIM_Status_Memory_Failure, 
    MBIM_Status_Invalid_Memory_Index, 
    MBIM_Status_Memory_Full, 
    MBIM_Status_Filter_Not_Supported, 
    MBIM_Status_DSS_Instance_Limit, 
    MBIM_Status_Invalid_Device_Service_Operation, 
    MBIM_Status_AUTH_Incorrect_Autn, 
    MBIM_Status_AUTH_Sync_Failure, 
    MBIM_Status_AUTH_AMF_Not_Set, 
    MBIM_Status_SMS_Unknown_Smsc_Address, 100,
    MBIM_Status_SMS_Network_Timeout, 
    MBIM_Status_SMS_Lang_Not_Supported, 
    MBIM_Status_SMS_Encoding_Not_Supported, 
    MBIM_Status_SMS_Format_Not_Supported, 
End

Begin Enum, ActivationStateT
    Unknown_State, 0,
    Attached_State, 
    Attaching_State, 
    Detached_State, 
    Detaching_State, 
End

Begin Enum, VCallStateT
    Voice_Call_None, 0,
    Voice_Call_InProgress, 
    Voice_call_Hangup, 
End

Begin Enum, IPAddrType
    IPtype_DontCare, 0,
    IPv4_only, 1,
    IPv6_only, 2,
    IPv4_IPv6_Dual, 3,
    IPv4_IPv6_Dual_only, 4,
End

Begin Enum, Err Type from PDN
    GeneralError, 0
    Unauthorized APN, 
    PDN Limit Exceeded, 
    No PGW Available, 
    PGW Unreachable, 
    PGW Reject, 
    Insufficient Parameters, 
    Resource Unavailable, 
    Admin Prohibited, 
    PDNID Already In Use, 
    Subscription Limitation, 
    PDN Connection Already Exist, 
    EAP AKA failure, 0x80
    Retry Tmr Throttling, 
    Network No Rsp, 
    PDN Attach Abort, 
    PDN Limit Exceeded In UE Side, 
    PDN IDA lready In Use In UE Side, 
    Invalid PDN Attach Req, 
    Pdn Rec Failure, 
    Main Connection Setup Failure, 
    Bearer Resource UnAvailable, 
    Operation Aborted By User, 
    Rtt Data Connected, 
    EAP AKA Reject, 
    LCP Negotiation 3 Failures, 
    TCH Setup Failure, 
    Nw No Rsp In LCP, 
    Nw No Rsp In Auth, 
    No Errors, 0xff
End

Begin Enum, CL modem type
    LTE Modem, 
    CDMA Modem, 
    GSM Modem, 
    UMTS Modem, 
End

Begin Enum, AntennaT
    No Antenna, 0,
    LTE_Main_Antenna, 
    CDMA_Main_Antenna, 
    LTE_and_CDMA_Antenna, 
End

Begin Enum, RfcActionT
    No Reason, 0,
    Packet Service, 1,
    Measurement, 2,
    Acqusition, 3,
End

Begin Enum, rfcErrT
    Request is pending, 0,
    Invalid Parameter, 1,
    Resource Conflict, 2,
    Request Success, 255,
End

Begin Enum, LTEbandT
    SYS_LTE_BAND_CLASS_NOT_USED, 0,
    SYS_LTE_BAND_CLASS_1, 
    SYS_LTE_BAND_CLASS_2, 
    SYS_LTE_BAND_CLASS_3, 
    SYS_LTE_BAND_CLASS_4, 
    SYS_LTE_BAND_CLASS_5, 
    SYS_LTE_BAND_CLASS_6, 
    SYS_LTE_BAND_CLASS_7, 
    SYS_LTE_BAND_CLASS_8, 
    SYS_LTE_BAND_CLASS_9, 
    SYS_LTE_BAND_CLASS_10, 
    SYS_LTE_BAND_CLASS_11, 
    SYS_LTE_BAND_CLASS_12, 
    SYS_LTE_BAND_CLASS_13, 
    SYS_LTE_BAND_CLASS_14, 
    SYS_LTE_BAND_CLASS_SKIP_1, 
    SYS_LTE_BAND_CLASS_SKIP_2, 
    SYS_LTE_BAND_CLASS_17, 
    SYS_LTE_BAND_CLASS_18, 
    SYS_LTE_BAND_CLASS_19, 
    SYS_LTE_BAND_CLASS_20, 
    SYS_LTE_BAND_CLASS_21, 
    SYS_LTE_BAND_CLASS_22, 
    SYS_LTE_BAND_CLASS_23, 
    SYS_LTE_BAND_CLASS_24, 
    SYS_LTE_BAND_CLASS_25, 
    SYS_LTE_BAND_CLASS_26, 
    SYS_LTE_BAND_CLASS_27, 
    SYS_LTE_BAND_CLASS_28, 
    SYS_LTE_BAND_CLASS_29, 
    SYS_LTE_BAND_CLASS_30, 
    SYS_LTE_BAND_CLASS_31, 
    SYS_LTE_BAND_CLASS_MAX, 
    SYS_LTE_BAND_CLASS_UNSUPPORTED, 
End

Begin Enum, IratMsgId
    MMC_CDMA_REGISTRATION_HYBRID_REQ, 0xD100
    MMC_CDMA_REGISTRATION_1X_ONLY_REQ, 
    MMC_CDMA_MCC_SEARCH_REQ, 
    MMC_CDMA_TRIGGER_PS_REG_REQ, 
    MMC_CDMA_TRIGGER_PS_REG_FREQ_REQ, 
    MMC_CDMA_TRIGGER_PS_REG_CELLIDS_REQ, 
    MMC_CDMA_CDMA_NO_SERVICE_REQ, 
    MMC_CDMA_DATA_CONNECTION_REQ, 
    MMC_CDMA_MEASURE_IRAT_REQ, 
    MMC_CDMA_MEASURE_SIB8_REQ, 
    MMC_CDMA_EHRPD_DEFAULT_BEARER_REQ, 
    MMC_CDMA_EHRPD_DEDICATED_BEARER_REQ, 
    MMC_CDMA_EHRPD_DETACH_REQ, 
    MMC_CDMA_EHRPD_BEARER_DISCONNECT_REQ, 
    MMC_CDMA_STOP_CDMA_MEAS_REQ, 
    MMC_CDMA_CDMA_SERVING_MEAS_REQ, 
    MMC_CDMA_CDMA_TX_POWER_REQ, 
    MMC_CDMA_EHRPD_SET_IPV6_ADDR, 
    MMC_CDMA_EHRPD_CLEAR_IPV6_ADDR, 
    MMC_CDMA_DISABLE_1X_ONLY_REQ, 
    MMC_CDMA_1X_ACQUISITION_REQ, 
    MMC_CDMA_DO_ACQUISITION_REQ, 
    MMC_CDMA_DO_REQUEST_RF_RSP, 
    MMC_CDMA_LTE_REQUEST_RF_REQ, 
    MMC_CDMA_LTE_RELEASE_RF_IND, 
    MMC_CDMA_DO_MEAS_WAKEUP_REQ, 
    MMC_CDMA_SIB8_DO_WINDOW_MEAS_REQ, 
    MMC_CDMA_POWER_UP_REQ, 
    MMC_CDMA_POWER_DOWN_REQ, 
    MMC_CDMA_IRAT_REDIRECTION_RSP, 
    MMC_CDMA_IRAT_MEAS_RSP, 
    MMC_CDMA_NULL_CMD, 
    CDMA_MMC_REGISTRATION_HYBRID_CNF, 0xD150
    CDMA_MMC_REGISTRATION_1X_ONLY_CNF, 
    CDMA_MMC_DATA_NETWORK_STATE_CHANGE_NOTIFY, 
    CDMA_MMC_IRAT_MCC_SEARCH_RSP, 
    CDMA_MMC_IRAT_TRIGGER_PS_REG_RSP, 
    CDMA_MMC_IRAT_TRIGGER_PS_REG_FREQ_RSP, 
    CDMA_MMC_IRAT_TRIGGER_PS_REG_CELLIDS_RSP, 
    CDMA_MMC_IRAT_CDMA_NO_SERVICE_RSP, 
    CDMA_MMC_IRAT_CDMA_DATASTATE_IND, 
    CDMA_MMC_IRAT_MEASURE_RESULT_IND, 
    CDMA_MMC_IRAT_MEASURE_SIB8_RESULT_IND, 
    CDMA_MMC_IRAT_LTE_MEASURE_INFO_IND, 
    CDMA_MMC_EHRPD_DEFAULT_BEARER_CNF, 
    CDMA_MMC_EHRPD_DEDICATED_BEARER_CNF, 
    CDMA_MMC_EHRPD_DEDICATED_BEARER_IND, 
    CDMA_MMC_EHRPD_DETACH_CNF, 
    CDMA_MMC_EHRPD_BEARER_DISCONNECT_CNF, 
    CDMA_MMC_EHRPD_DEFAULT_BEARER_DISCONNECT_IND, 
    CDMA_MMC_EHRPD_BEARER_DISCONNECT_IND, 
    CDMA_MMC_CDMA_SERVING_MEAS_RSP, 
    CDMA_MMC_CDMA_TX_POWER_RSP, 
    CDMA_MMC_IRAT_CMD_REJ_IND, 
    CDMA_MMC_DISABLE_1X_ONLY_RSP, 
    CDMA_MMC_1X_ACQUISITION_RSP, 
    CDMA_MMC_DO_ACQUISITION_RSP, 
    CDMA_MMC_DO_REQUEST_RF_REQ, 
    CDMA_MMC_DO_RELEASE_RF_IND, 
    CDMA_MMC_LTE_REQUEST_RF_RSP, 
    CDMA_MMC_DO_MEAS_WAKEUP_RSP, 
    CDMA_MMC_SIB8_DO_WINDOW_MEAS_RSP, 
    CDMA_MMC_POWER_UP_RSP, 
    CDMA_MMC_POWER_DOWN_RSP, 
    CDMA_MMC_IRAT_REDIRECT_REQ, 
    CDMA_MMC_IRAT_MEAS_REQ, 
End

Begin Enum, IratDOST
    DOPOWERUP, 0
    DONOSERVICESUSP, 
    DONOSERVICE, 
    DOSESSIONOPENED, 
    DODATACONED, 
    DODATASUSPEND, 
End

Begin Enum, Irat1XST
    POWERUP1X, 0
    NOSERVICE1XSUSP, 
    NOSERVICE1X, 
    VOICE1X, 
    DATA1X, 
    SUSPEND1X, 
End

Begin Enum, IratCPST
    IRAT_DEEPSLEEP, 0
    IRAT_CSSOOSA, 
    IRAT_INIT, 
    IRAT_RESCAN, 
    IRAT_SYSTEMLOST, 
    IRAT_IDLE, 
    IRAT_CONNECTION, 
    IRAT_EXHAUST, 
    IRAT_DO_NO_ASSO, 
    IRAT_HANDOFF, 
    IRAT_SCANNING, 
End

Begin Enum, IratAct
    IRAT_NO_ACTION, 0
    IRAT_POWERUP, 
    IRAT_1X_ACQUIRING, 
    IRAT_MCC_SEARCH, 
    IRAT_CDMA_MODE_SCAN, 
    IRAT_GLOBAL_MODE_SCAN, 
    IRAT_MEAS_IRAT_SCAN, 
    IRAT_MEAS_SIB8_SCAN, 
    IRAT_IRAT_MEASURING, 
    IRAT_SIB8_MEASURING, 
    IRAT_HANDOFF_FREQ, 
    IRAT_HANDOFF_CELLIDS, 
    IRAT_ATTACHING, 
    IRAT_CONN_EHRPD, 
    IRAT_CONN_HRPD, 
    IRAT_CONN_1X, 
    IRAT_DEATTACHING, 
    IRAT_SUSPENDING, 
    IRAT_RESUMING, 
    IRAT_DISABLING, 
    IRAT_TURNING_OFF, 
    IRAT_RELEASING, 
    IRAT_TRANS_PS, 
    IRAT_DISABLING_1X, 
    IRAT_GLOBAL_MODE_ACQ, 
    IRAT_GLOBAL_MODE_ACQ_LTE_1ST, 
    IRAT_WIN_ACTIVE_MEAS, 
    IRAT_WIN_ACTIVE_MEASURING, 
    IRAT_WIN_IDLE_MEAS, 
    IRAT_WIN_IDLE_MEAS_START, 
    IRAT_WIN_IDLE_MEAS_DONE, 
    IRAT_WIN_IDLE_MEASURING, 
    NUM_IRAT_ACTIONS, 
End

Begin Enum, IratPST
    IRAT_PS_NO, 0
    IRAT_PS_1X, 
    IRAT_PS_HRPD, 
    IRAT_PS_EHRPD, 
End

Begin Enum, GPS Privacy Setting
    LOCATION_OFF, 0,
    LOCATION_ON, 
End

Begin Enum, PDS GPS Status
    SUCCESS, 0,
    FAIL, 
End

Begin Enum, PDS GPS Fix Operation Status
    CP_PDS_GPS_SUCCESS, 0,
    CP_PDS_GPS_ERROR_INVALID_PARM, 
    CP_PDS_GPS_ERROR_INVALID_SECURITY_STATUS, 
    CP_PDS_GPS_ERROR_LOCATION_REQ_QUEUE_FULL, 
    CP_PDS_GPS_ERROR_PREV_LOCATION_REQ_PENDING, 
End

Begin Enum, PDS GPS Set Security Status
    CP_PDS_GPS_SET_SECURITY_SUCCESS, 
    CP_PDS_GPS_SET_SECURITY_INCORRECT_CODE, 
    CP_PDS_GPS_SET_SECURITY_REJECTED, 
End

Begin Enum, Baud Rates
    19200, 0
    38400, 1
    57600, 2
    115200, 3
    153600, 4
    230400, 5
    460800, 6
    921600, 7
    9600, 8
    4800, 9
    2400, 10
    1200, 11
    600, 12
    300, 13
    3100000, 14
    3600000, 15
End

Begin Enum, Uart Numbers
    Uart0, 0
    Uart1, 1
    Uart2, 2
End

Begin Enum, Data Baud Rates
    19200, 0
    38400, 1
    57600, 2
    115200, 3
    153600, 4
    230400, 5
End

Begin Enum, Uart Select
    No_Uart, 0
    Ets_Uart, 1
End

Begin Enum, IopDeviceInfoId
    Serial, 0
    USB, 2
End

Begin Enum, IopDeviceDataId
    Serial, 0
    USB, 1
End

Begin Enum, MonAddrAdvs
    Memory (advanced by 2 bytes), 0
    Register (advanced by 4 bytes), 
    Access 32bit Data, 
End

Begin Enum, Vocoder Test Modes
    Encoder Only, 1
    Decoder Only, 2
    Encoder and Decoder, 4
End

Begin Enum, Vocoder Packet Sizes
    Rate Set I (12 words), 12
    Rate Set II (18 words), 18
End

Begin Enum, Vocoder Max Rate
    Blank (0), 0
    Eighth (1), 1
    Quarter (2), 2
    Half (3), 3
    Full (4), 4
End

Begin Enum, GPIO Actions
    CLEAR, 0
    SET, 1
End

Begin Enum, CBP Compatibility ID
    CBP_COMPATIBILITY_ID, 0x0001,   RO
End

Begin Enum, MonOperators
    TOGGLE, 0,
    SET, 1,
    CLEAR, 2,
End

Begin Enum, DspProcId
    DSPM, 1,
    DSPV, 2,
End

Begin Enum, BootStep
    Step 1, 1
    Step 2, 2
    Step 3, 4
    Steps 1 2, 3
    Steps 1 2 3, 7
End

Begin Enum, Start Triggers
    Immediate, 0
    By Thread Occurrence, 1
    By Min Thread Time/Frame, 2
End

Begin Enum, Stop Triggers
    Never, 0
    By Thread Occurrence, 1
    By Min Thread Time/Frame, 2
    By Time, 3
    When Buffer Full, 4
End

Begin Enum, MpuBlockSizeT
    BLKSIZE_1BYTE, 0
    BLKSIZE_2BYTES, 1
    BLKSIZE_4BYTES, 2
    BLKSIZE_8BYTES, 3
End

Begin Enum, MpuSegSizeT
    SEGSIZE_2MB, 0
    SEGSIZE_4MB, 1
    SEGSIZE_8MB, 2
    SEGSIZE_16MB, 3
    SEGSIZE_32MB, 4
    SEGSIZE_64MB, 5
    SEGSIZE_128MB, 6
    SEGSIZE_0MB, 7
End

Begin Enum, Key State
    Key 0, 0
    Key 1, 
    Key 2, 
    Key 3, 
    Key 4, 
    Key 5, 
    Key 6, 
    Key 7, 
    Key 8, 
    Key 9, 
    Key Pound, 
    Key Star, 
    Key Send, 
    Key End, 13
    Key Clear, 0xC0
    Key Mem, 15
    Key Power, 
    Key Up, 
    Key Down, 
    Key Func, 
    Key Right, 
    Key Left, 
    Key Ok, 
    Key Camera, 
    Key Soft Right, 
    Key Soft Left, 
    Key VolumeP, 
    Key VolumeM, 
    Key Invalid, 
    Key A, 
    Key B, 
    Key C, 
    Key D, 
    Key Message, 
End

Begin Enum, ESPI Commands
    Data Test, 0
    Abort Test, 1
End

Begin Enum, Abort Type
    Lose Data, 0
    Head Error, 1
End

Begin Enum, SDIO Types
    SD Mem Card, 1
    SDIO Master, 2
    SDIO Slave, 3
End

Begin Enum, SDIO Commands
    Init SDIO, 0
    Write File, 1
    Read File and Compare, 2
    Start Loopback, 3
    Stop Loopback, 4
End

Begin Enum, CP Memory Dump Mode
    BOOT, 0,
    CP, 1,
End

Begin Enum, Hwd Profile Start Triggers
    Immediate, 0
    Conditional, 1
End

Begin Enum, Hwd Profile Stop Triggers
    None, 0
    Conditional, 1
End

Begin Enum, Spy Ids
    CP System Time, 0
    SysSpyDecimate A, 1
    SysSpyDecimate B, 2
End

Begin Enum, Flash Program Sections
    CP Boot, 0
    CP, 1
    DSPM, 2
    DSPV, 3
    FSM DATA, 4
    CDROM IMAGE, 5
    ALL (no Boot), 6
    ALL FLASH, 7
    UA BOOT, 8
    DELTA FILE, 9
    FSM USER, 10
    DDR TUNING, 11
    FAULT LOG, 12
    PRI, 13
    WALL PAPER, 14
    MAIN TOPIC, 15
    LOGO, 16
    UA BACKUP, 17
    UA FLAG, 18
    LGPL COMP, 19
    CUST COMP, 20
End

Begin Enum, CpDbType
    CP, 0
    RF, 1
    SYS, 2
End

Begin Enum, Data Base Ids
    CP, 0
    RF, 1
    RFS Backup, 99
End

Begin Enum, CG_CK Mux
    CG_MUX_DISABLE, 0x00
    CG_DSPV_PROC_CLK, 0x01
    CG_CPMXSPI_CLK, 0x02
    CG_DSPV_FCLK, 0x03
    CG_DSPM_PROC_CLK, 0x04
    CG_GTX1X_DRT_CLK, 0x05
    CG_DSPM_FCLK, 0x06
    CG_SRDO_CLK, 0x07
    CG_GFN_CLK9, 0x08
    CG_GTX1X_CLK9, 0x09
    CG_STDO_CLK, 0x0A
    CG_TXDO_CLK, 0x0B
    CG_GTX1X_CLK39, 0x0C
    CG_GPCTL_CLK9_1X, 0x0D
    CG_MXSPI_CLK, 0x0E
    CLK_USB_PHY, 0x0F
    CG_CPRX_CLK, 0x10
    CG_CLK32, 0x11
    CG_GSRCH_CLK, 0x12
    CG_GVD_CLK, 0x13
    CG_GTHA_CLK, 0x14
    CG_GRHA_CLK, 0x15
    CG_USB_HCLK, 0x16
    CG_GRX_CLK9_1X, 0x17
    CG_VC_DCK, 0x18
    CG_UT0_ARM_CLK, 0x19
    CG_UT1_ARM_CLK, 0x1A
    CG_UT2_ARM_CLK, 0x1B
    CG_GTX1X_CLK19, 0x1C
    CG_GUIM2_CLK, 0x1D
    CG_G_CLK19M2, 0x1E
    CG_DINT_CLK, 0x1F
    CG_HIFI_DCK, 0x20
    CG_FNDO/EQ_CLK, 0x21
    CG_GUIM_CLK, 0x22
    CG_UT0_BAUDCLK, 0x23
    CG_UT1_BAUDCLK, 0x24
    CG_UT2_BAUDCLK, 0x25
    CG_JIT0_CLK, 0x26
    CG_JIT1_CLK, 0x27
    CG_JIT2_CLK, 0x28
    CG_G_CLK2, 0x29
    CG_GSPI_CLK, 0x2A
    CG_GRX_CLK39_1X, 0x2B
    CG_GRX_CLK9_DO, 0x2C
    CG_I2C_CLK9, 0x2D
    CG_CPSDIO_CLK, 0x2E
    CG 39.3216 MHz, 0x2F
    CG_MAC_CLK, 0x30
    CG 9.8304 MHz, 0x31
    OCLK_JPEG_JPGRSZ, 0x32
    OCLK_PVI_PRERSZ, 0x33
    CG_VCRG_CLK, 0x34
    CG_G_CLK9, 0x35
    CG_IC_CLK, 0x36
    CG_GMPDU_CLK, 0x37
    CG_PDM_DCK, 0x38
    CG_VC_DCK_NOISE, 0x39
    CG_TDDO_CLK, 0x3A
    CG_IC_CLK9, 0x3B
    CG_GPCTL_CLK9_DO, 0x3C
    OCLK_DCT, 0x3D
    CG_GRX_CLK39_DO, 0x3E
    GDBB_CLKOUT0, 0x3F
    MDMPLLA_OUT, 0x40
    USB_PLLOUT, 0x41
    DSP_PLLOUT, 0x42
    MDMPLLM_OUT, 0x43
    HIFI_PLLOUT, 0x44
    CP PLLOUT, 0x45
    CAM PLLOUT, 0x46
    DRAM PLLOUT, 0x47
    CG_GTXDO_CLK9, 0x48
    CG_TD1X_CLK, 0x49
    CG_GPWM0_CLK, 0x4A
    CG_GPWM1_CLK, 0x4B
    GCLK_ARM_PROC, 0x4C
    CG_AHB01_CLK, 0x4D
    CG_AHB0_CLK, 0x4E
    CG_AHBDO_CLK, 0x4F
    CG_CPUIM_CLK, 0x50
    CG_CPUIM2_CLK, 0x51
    CG_CPRFSP_CLK, 0x52
    CG_PPP_CLK, 0x53
    CG_DMA_CLK, 0x54
    CG_CPC2I_CLK, 0x55
    CG_AHB1_CLK, 0x56
    CG_DMOD_CLK, 0x57
    CG_GTXDO_CLK39, 0x58
    CG_GTXDO_DRT_CLK, 0x59
    CG_FSP_CLK, 0x5A
    GCLK_GPS, 0x5B
    GCLK_GPS_GPS, 0x5C
    GCLK_GPS_9M8, 0x5D
    GCLK_GPS_19M2, 0x5E
    GCLK_DDR_MCLK, 0x5F
    GCLK_SPI, 0x60
    GCLK_NFC, 0x61
    GCLK_NFC_NFC, 0x62
    GCLK_SD0, 0x63
    GCLK_MCLK_SD0, 0x64
    GCLK_SD1, 0x65
    GCLK_MCLK_SD1, 0x66
    GCLK_LCDIF, 0x67
    GCLK_CGPIO, 0x68
    GCLK_MPU, 0x69
    GCLK_AVC, 0x6A
    GCLK_MP4, 0x6B
    GCLK_MP4_SRAM, 0x6C
    GCLK_GFX, 0x6D
    GCLK_DMAC, 0x6E
    GCLK_AMBA_JPGRSZ, 0x6F
    GCLK_AMBA_PRERSZ, 0x70
    GCLK_AMBA_PSTRSZ, 0x71
    GCLK_AMBA_CAM, 0x72
    EBIF_CLK, 0x73
    CLK_EXTMEM, 0x74
    GCLK_ARM_USB, 0x75
    GCLK_GSM_AMBA, 0x76
    GCLK_DDR_AHB0, 0x77
    GCLK_DDR_AHB1, 0x78
    GCLK_DDR_AHB2, 0x79
    GCLK_DDR_AHB3, 0x7A
    GCLK_DDR_AHB4, 0x7B
    GCLK_DDR_AHB5, 0x7C
    GCLK_DDR_AHB6, 0x7D
    GCLK_DDR_AHB7, 0x7E
    GCLK_DDR_REG, 0x7F
End

Begin Enum, Rx AGC Ctrl
    Automatic, 0,
    Disabled, ,
    DO INITACQ, ,
    DO FAST, ,
    DO STEADY_STATE, ,
    DO TRAFFIC, ,
    1x Rx AGC ENABLE_NO_LOAD, ,
End

Begin Enum, Rf Mode Type
    1xRTT, 1
    EVDO, 2
    Both, 3
End

Begin Enum, Rf Paths
    None, 0
    Main, 1
    Diversity, 2
    Main and Diversity, 3
End

Begin Enum, RF Reg Ctrl
    Automatic, 0
    Disable, 1
    Manual, 2
End

Begin Enum, AGC Hyst Gain States
    Low Gain, 0
    Medium Gain, 1
    High Gain, 2
    Auto Config, 0xff
End

Begin Enum, DAgcGainState
    Rx AGC Gain 0, 0x0
    Rx AGC Gain 1, 0x1
    Rx AGC Gain 2, 0x2
    Rx AGC Gain 3, 0x3
    Rx AGC Gain 4, 0x4
    Rx AGC Gain 5, 0x5
    Rx AGC Gain 6, 0x6
    Rx AGC Gain 7, 0x7
End

Begin Enum, Tx Rate
    Access, 1
    Tr Full Rate, 2
    Tr 1/2 Rate, 3
    Tr 1/4 Rate, 4
    Tr 1/8 Rate, 5
End

Begin Enum, Tx Path
    Main Tx, 0x02
End

Begin Enum, CalibModeT
    NVRAM, 0
    Default, 1
End

Begin Enum, Ctrl Unit Type
    CSS, 1
    HWD, 2
    Both, 3
End

Begin Enum, Rf Rx Paths
    None, 0
    Main Rx, 1
    Div Rx, 2
    Sec Rx, 4
End

Begin Enum, Tx Path Bit
    Main Tx Path, 0x04
End

Begin Enum, Rx Path
    Main Rx Path, 0x00
    Div Rx Path, 0x01
End

Begin Enum, RmcImdTableCalib
    Automatic, 0
    Imd, 1
    NoImd, 2
End

Begin Enum, AFC Reg Ctrl
    Automatic, 0
    Disable, 1
    Manual, 2
    Resume Auto, 3
    Save Disable, 4
    Restore Disable, 5
    Restore Auto, 6
    GPS Mode Enable, 7
    GPS Mode Disable, 8
End

Begin Enum, TxAGC Closed Loop Ctrl
    Report Status, 0
    Disable, 1
    Enable, 2
End

Begin Enum, Xmm Rx AGC Ctrl
    Automatic, 4
    Init Acq, 0
    Short Acq, 1
    Force Gain, 2
    Soft Gain, 3
End

Begin Enum, CpBufStatusT
    FWD_STAS, 0
    FWD_IRAM_FREE, 1
    FWD_IRAM_BUSY, 2
    FWD_SRAM_FREE, 3
    FWD_SRAM_BUSY, 4
    REV_STAS, 5
    REV_IRAM_FREE, 6
    REV_IRAM_BUSY, 7
    REV_SRAM_FREE, 8
    REV_SRAM_BUSY, 9
    SIG_STAS, 10
    SIG_IRAM_FREE, 11
    SIG_IRAM_BUSY, 12
    SIG_SRAM_FREE, 13
    SIG_SRAM_BUSY, 14
    HDR_STAS, 15
    HDR_IRAM_FREE, 16
    HDR_IRAM_BUSY, 17
    HDR_SRAM_FREE, 18
    HDR_SRAM_BUSY, 19
    FWD1X_STAS, 20
    FWD1X_SRAM_FREE, 21
    FWD1X_SRAM_BUSY, 22
End

Begin Enum, RegCancelEnum
    REGISTER, 0
    CANCEL, 1
End

Begin Enum, TestTagEnum
    FLUSH_QUEUE_1X, 0
    FLUSH_QUEUE_DO, 1
    KEEP_QUEUE_1X, 2
    KEEP_QUEUE_DO, 3
    OFT_FLUSH_QUEUE_DO, 5
    OFT_KEEP_QUEUE_DO, 7
End

Begin Enum, SysEventTypeT
    SLOT_EVENT, 0
    ACTION_EVENT, 1
    ACTION_SLOT_EVENT, 3
    PERIODIC_SLOT_EVENT, 4
    ACTION_PERIODIC_SLOT_EVENT, 7
End

Begin Enum, Action
    Power Up, 0
    Hybrid Registration, 1
    Set DO to 1X Threshold, 2
    Set 1X to DO Threshold, 3
    Default Bearer Attach, 4
    Set IPv6 Address, 5
    Dedicate Bearer Attach, 6
    Detach All, 7
    Send PING4, 8
    Send PING6, 9
End

Begin Enum, DefaultBearerAddrType
    IPv4, 1
    IPv6, 2
    IPv4 and IPv6, 3
End

Begin Enum, DefaultBearerAttachType
    Initial Attach, 1
    Handover Attach, 3
End

Begin Enum, PPP Route Type
    Default, 0
    NDIS, 1
End

Begin Enum, Network Family
    IPV4, 2
    IPV6, 28
End

Begin Enum, Rtp Input Source
    NET, 1
    IS, 2
End

Begin Enum, FpcCalActions
    Write, 0,
    Read, 1,
End

Begin Enum, FpcCalRCs
    RC 1, 0,
    RC 2, 1,
    RC 3, 2,
    RC 4, 3,
    RC 5, 4,
End

Begin Enum, Idle Diff Freq Srch Mode
    Enable, 0
    Disable, 1
End

Begin Enum, Disable L1D Reset Mode
    FALSE, 0
    TRUE, 1
End

Begin Enum, Clear Stats Masks
    Clear TX Stats, 0x01
    Clear RX Stats, 0x02
    Clear Both Stats, 0x03
End

Begin Enum, MuxPdu Test Index
    All Test Vectors, 0
    Type1: 171 bits Hdr 0, 1
    Type1: 168 bits Hdr 1 1 11, 2
    Type2: 266 bits Hdr 0, 3
    Type2: 262 bits Hdr 1 0111, 4
    Type3: RS1 single          (Mux809), 5
    Type3: RS1 single NonRLP   (Mux809), 6
    Type3: RS1 single          (Mux811), 7
    Type3: RS1 single NonLTU   (Mux811), 8
    Type3: RS1 single 1LTUFail (Mux811), 9
    Type3: RS1 single          (Mux821), 10
    Type3: RS1 single 2LTUFail (Mux821), 11
    Type3: RS1 double          (Mux905), 12
    Type3: RS1 double          (Mux909), 13
    Type3: RS1 double 1LTUFail (Mux909), 14
    Type3: RS1 double          (Mux911), 15
    Type3: RS1 double 1LTUFail (Mux911), 16
    Type3: RS1 double          (Mux921), 17
    Type3: RS1 double NonLTU   (Mux921), 18
    Type3: RS1 double 5LTUFail (Mux921), 19
    Type3: RS2 single          (Mux822), 20
    Type3: RS2 single NonRLP   (Mux822), 21
    Type3: RS2 double          (Mux912), 22
    Type3: RS2 double NonRLP   (Mux912), 23
    Type5: Ltu744   2 LTUs   5 PDUs, 24
    Type5: Ltu1128  2 LTUs   6 PDUs, 25
    Type5: Ltu1512  4 LTUs   6 PDUs, 26
    Type5: Ltu2280  4 LTUs  12 PDUs, 27
    Type5: Ltu3048  8 LTUs  20 PDUs, 28
    Type5: Ltu4584  8 LTUs  25 PDUs, 29
    Type5: Ltu6120  8 LTUs  33 PDUs, 30
    Type5: NoLtu360    1 PDU, 31
    Type5: NoLtu360    1 PDU NoFill, 32
    Type5: NoLtu744    5 PDUs, 33
    Type5: NoLtu1512   9 PDUs, 34
    Type5: NoLtu2280  15 PDUs, 35
    Type5: NoLtu3048  19 PDUs, 36
    Type5: NoLtu4584  22 PDUs, 37
    Type5: NoLtu6120  26 PDUs, 38
    Type3: RS1 double          BadHdr1  (Mux911), 39
    Type3: RS1 double          BadHdr03 (Mux911), 40
    Type3: RS1 double 1LTUFail BadHdr0  (Mux911), 41
    Type3: RS1 double 1LTUFail BadHdr12 (Mux911), 42
    Type3: RS1 double BadHdr0   (Mux921), 43
    Type3: RS1 double BadHdr5   (Mux921), 44
    Type3: RS1 double BadHdr7   (Mux921), 45
    Type3: RS1 double BadHdr236 (Mux921), 46
End

Begin Enum, ClearHighWaterMarkEnum
    No, 0,
    Yes, 1,
End

Begin Enum, StatCounterT
    MUX1_REV_FCH, 0x00
    MUX1_FOR_FCH, 0x01
    PAG, 0x02
    ACC, 0x03
    LAYER2_RTC, 0x04
    MUX2_REV_FCH, 0x05
    MUX2_FOR_FCH, 0x06
    SCCH_REV, 0x07
    SCCH_FOR, 0x08
    MUX1_REV_DCCH, 0x09
    MUX1_FOR_DCCH, 0x0a
    MUX2_REV_DCCH, 0x0b
    MUX2_FOR_DCCH, 0x0c
    SCH0_REV, 0x0d
    SCH1_REV, 0x0e
    SCH0_FOR, 0x0f
    SCH1_FOR, 0x10
End

Begin Enum, Request Mode Type
    Cdma Only, 1
    Wide, 2
    Cdma Wide, 3
    Narrow Only, 4
    Cdma Narrow Only, 5
    Narrow Wide, 6
    Narrow Wide Cdma, 7
End

Begin Enum, Call Mode Type
    CALL_MODE_UNKNOWN, 0
    NORMAL_VOICE, 1
    EMERGENCY_E911, 2
    WPS, 3
    WPS_E911, 4
    OTASP, 5
End

Begin Enum, Service Option Category
    Voice Service, 3
    SMS Service, 6
    Location Service, 35
    OTASP Service, 18
    Markov Service, 54
    Data Loopback Service, 55
    Async Data Service, 4
    Fax Data Service, 5
    LSPD Service, 7
    HSPD Service, 33
End

Begin Enum, Number Type
    Unknown, 0
    International, 1
    National, 2
    Network Specific, 3
    Subscriber, 4
    Abbreviated, 6
End

Begin Enum, Number Plan Type
    Number Plan Unknown, 0
    Isdn Telephony, 1
    Data, 3
    Telex, 4
    Private, 9
End

Begin Enum, CPN Presentation Type
    PSW_PI_ALLOWED, 0
    PSW_PI_RESTRICTED, 1
    PSW_PI_NUMBER_NA, 2
    PSW_PI_RSVD, 3
End

Begin Enum, CPN Screening Type
    PSW_SI_USER_PROVIDED_NOT_SCREENED, 0
    PSW_SI_USER_PROVIDED_VERIFIED_PASSED, 1
    PSW_SI_USER_PROVIDED_VERIFIED_FAILED, 2
    PSW_SI_NETWORK_PROVIDED, 3
End

Begin Enum, Service Type
    PSW_UNKNOWN_SERVICE_TYPE, 0
    PSW_VOICE_SERVICE_TYPE, 1
    PSW_ANALOG_VOICE_SERVICE_TYPE, 2
    PSW_ASYNC_FAX_DATA_SERVICE_TYPE, 3
    PSW_ASYNC_DATA_SERVICE_TYPE, 4
    PSW_FAX_DATA_SERVICE_TYPE, 5
    PSW_UP_ASYNC_DATA_SERVICE_TYPE, 6
    PSW_PACKET_DATA_SERVICE_TYPE, 7
    PSW_QNC_PACKET_DATA_SERVICE_TYPE, 8
    PSW_UP_PACKET_DATA_SERVICE_TYPE, 9
    PSW_LPBK_SERVICE_TYPE, 10
    PSW_SMS_SERVICE_TYPE, 11
    PSW_OTASP_SERVICE_TYPE, 12
    PSW_TCP_BROWSER_DATA_SERVICE_TYPE, 13
    PSW_LOC_SERVICE_TYPE, 14
End

Begin Enum, SubAddress Type
    PSW_SUBADDRESS_TYPE_NSAP, 0
    PSW_SUBADDRESS_TYPE_USER_SPECIFIED, 2
End

Begin Enum, Packet Data App Type
    ASYNC_DATA, 0
    NETWORK_RM, 1
    PPP_ONLY, 2
    RELAY_RM, 3
    MAIN_CONN, 4
End

Begin Enum, Test Modes
    Enable/Disable CRC, 0
    Remain In Sync, 1
    Enable Idle Handdoff, 2
    Enable Msg Injection, 3
    Enable Slotted Mode, 4
    Enable Registration, 5
    Idle Handoff threshold, 13
    Idle Handoff timeout, 14
    Set QPCH C threshold, 15
    Set QPCH Delta threshold, 16
    Enable Qpch Mode, 17
    Disable Acccess Auth Fields, 18
    Location Service stats, 19
    Enable Remain Set Search, 20
    Ignore OTA AKey Prev, 21
    Qpch PI-1 Override, 22
    Qpch PI-2 Override, 23
    Continuous BCCH, 24
    Start BCCH, 25
    Sleep Delay, 26
    Remain In Pilot State, 30
    Remain In Idle State (Slotted OFF), 31
    Remain In Idle State (Slotted ON), 32
    Remain In Traffic State, 33
    Secure Data Info Dump, 34
End

Begin Enum, ActiveControlHold
    CP_HSPD_CONTROL_HOLD_STATE, 0
    CP_HSPD_ACTIVE_STATE, 1
End

Begin Enum, SchPrefRate
    CP_SCH_9_6_KBPS, 0
    CP_SCH_19_2_KBPS, 1
    CP_SCH_38_4_KBPS, 2
    CP_SCH_76_8_KBPS, 3
    CP_SCH_153_6_KBPS, 4
    CP_SCH_307_2_KBPS, 5
    CP_SCH_614_4_KBPS, 6
End

Begin Enum, Data PAM Type
    No Pre-Arrangement, 0
    Incoming fax call for next call, 1
    Incoming fax calls until power down, 2
    Incoming data call for next call, 3
    Incoming data calls until power down, 4
End

Begin Enum, Via Vocoder Type
    Default, 0
    Analog Voice, 1
    8K EVRC, 2
    13K QCELP Mux1, 3
    EVRCB, 4
    13K QCELP Mux2, 5
    EVRC WB, 6
End

Begin Enum, RcPrefType
    RC_PREF_1, 1
    RC_PREF_2, 2
    RC_PREF_3, 3
    RC_PREF_4, 4
    RC_PREF_5, 5
    RC_PREF_6, 6
    RC_PREF_7, 7
    RC_PREF_8, 8
    RC_PREF_9, 9
    RC_PREF_10, 10
    RC_PREF_11, 11
End

Begin Enum, Async Service Options
    SO4, 4
    SO12, 12
    SO4100, 4100
End

Begin Enum, Fax Service Options
    SO5, 5
    SO13, 13
    SO4101, 4101
End

Begin Enum, LSPD Service Options
    SO7, 7
    SO15, 15
    SO4103, 4103
End

Begin Enum, HSPD Service Options
    SO22, 22
    SO23, 23
    SO24, 24
    SO25, 25
    SO33, 33
End

Begin Enum, Data Loopback Service Options
    SO2, 2
    SO9, 9
    SO55, 55
End

Begin Enum, Markov Service Options
    SO32798, 32798
    SO32799, 32799
    SO54, 54
End

Begin Enum, OTASP Service Options
    SO18, 18
    SO19, 19
End

Begin Enum, SMS Service Options
    SO6, 6
    SO14, 14
End

Begin Enum, LOC Service Options
    SO35, 35
    SO36, 36
End

Begin Enum, Via Voice Service Options
    Analog Amp Voice, 0xFFFF
    Srv Opt 3 8K EVRC, 3
    Srv Opt 17 13K QCELP, 17
    Srv Opt 68 EVRC-B Vocoder, 68
    Srv Opt 73 EVRC-WB, 73
End

Begin Enum, PS Set Mobile ID Type
    ESN(32 Bits), 1
    MEID(56 Bits), 2
End

Begin Enum, SMS Number Type
    NT_UNKNOWN, 0x00
    NT_INTERNATIONAL, 0x01
    NT_NATIONAL, 0x02
    NT_NETWORK_SPECIFIC, 0x03
    NT_SUBSCRIBER, 0x04
    NT_RESERVED, 0x05
    NT_ABBREVIATED, 0x06
End

Begin Enum, SMS Messages
    Not Used, 0x00
    8bit:"VIA Telecom", 0x01
    8bit:"Wireless Design Center", 0x02
    8bit:Traffic "VIA (repeated)", 0x03
    7bit:"San Diego CA", 0x04
    16bit:"Logic", 0x05
    6bit:"ABBA!", 0x06
End

Begin Enum, SMS MesgEncoding
    Octet unspecified (8-bit), 0x00, RO
    IS-91-A Extended Protocol Message (6-bit), 0x01, RO
    7-bit ASCII, 0x02, RO
    UNICODE (16-bit), 0x04, RO
End

Begin Enum, SMS AbsRel
    Not Used, 0x00
    Absolute, 0x01
    Relative, 0x02
End

Begin Enum, SMS Priority
    Not Used, 0x00
    Normal '00', 0x01
    Interactive '01', 0x02
    Urgent '10', 0x03
    Emergency '11', 0x04
End

Begin Enum, SMS Privacy
    Not Used, 0x00
    Not Restricted '00', 0x01
    Restricted '01', 0x02
    Confidential '10', 0x03
    Secret '11', 0x04
End

Begin Enum, SMS AlertonDelivery
    Not Used, 0x00
    Mobile Default '00', 0x01
    Low Priority '01', 0x02
    Medium Priority '10', 0x03
    High Priority '11', 0x04
End

Begin Enum, SMS Language
    Not Used, 0x00
    Unknown (0x00), 0x01
    English (0x01), 0x02
    French (0x02), 0x03
    Spanish (0x03), 0x04
    Japanese (0x04), 0x05
    Korean (0x05), 0x06
    Chinese (0x06), 0x07
    Hebrew (0x07), 0x08
End

Begin Enum, SMS ServiceCategory
    Not Used, 0x0000
    Unknown (0x0000), 0x0001
    Emergency Bcast (0x0001), 0x0002
    Administrative (0x0002), 0x0003
    Maintenance (0x0003), 0x0004
    News Local (0x0004), 0x0005
    News Regional (0x0005), 0x0006
    News National (0x0006), 0x0007
    News Internatl(0x0007), 0x0008
    Business Local (0x0008), 0x0009
    Business Regional (0x0009), 0x000A
    Business National (0x000A), 0x000B
    Business Internatl(0x000B), 0x000C
    Sports Local (0x000C), 0x000D
    Sports Regional (0x000D), 0x000E
    Sports News Natl (0x000E), 0x000F
    Sports News Intl (0x000F), 0x0010
    Entertain Locl (0x0010), 0x0011
    Entertain Regionl (0x0011), 0x0012
    Entertain Nationl (0x0012), 0x0013
    Entertain Intnatl (0x0013), 0x0014
    Local Weather (0x0014), 0x0015
    Traffic Report (0x0015), 0x0016
    Airport Flght Sch (0x0016), 0x0017
    Restaurants (0x0017), 0x0018
    Lodgings (0x0018), 0x0019
    Retail Directory (0x0019), 0x001A
    Advertisements (0x001A), 0x001B
    Stock Quotes (0x001B), 0x001C
    Employment Ops (0x001C), 0x001D
    Med Health Hosp (0x001D), 0x001E
    Technology News (0x001E), 0x001F
    MultiCategory (0x001F), 0x0020
End

Begin Enum, SMS Term Status
    No Terminal Problems, 0
    Destination Resource Shortage, 1
    Destination out of service, 2
End

Begin Enum, Tcpb Status
    VAL_TCPB_CONNECT_SUCCESS, ,
    VAL_TCPB_CONNECT_FAIL_TCP, ,
    VAL_TCPB_CONNECT_FAIL_PPP, ,
    VAL_TCPB_CONNECT_FAIL_RLP, ,
    VAL_TCPB_CONNECT_FAIL_UART, ,
    VAL_TCPB_DISCONNECT_NORMAL, ,
    VAL_TCPB_DISCONNECT_MS, ,
    VAL_TCPB_DISCONNECT_FADE, ,
    VAL_TCPB_CONNECT_FAIL_TRAFFIC, ,
    VAL_TCPB_CONNECT_FAIL_NOSVC, ,
    VAL_TCPB_NUM_CONNECT_STATUS, ,
End

Begin Enum, VALOtaStatusInd
    VAL_OTASP_Connect, ,
    VAL_OTA_Disconnect, ,
    VAL_OTAPA_SessionStart, ,
    VAL_OTAPA_SessionStop, ,
    VAL_OTAPA_VerifyOK, ,
    VAL_OTA_AkeyEx, ,
    VAL_OTA_SPLUnlock, ,
    VAL_OTA_SSDUpd, ,
    VAL_OTA_NAMDownload, ,
    VAL_OTA_MDNDownload, ,
    VAL_OTA_IMSIDownload, ,
    VAL_OTA_PRLDownload, ,
    VAL_OTA_DataMaskCommitToNVRAM, ,
    VAL_OTA_CommitOK, ,
    VAL_OTA_ExcessSPCFailure, ,
    VAL_OTA_AnalogCDMADownload, ,
End

Begin Enum, VALNwkRptBandClassT
    VAL_NWK_RPT_BAND_CLASS_0, ,
    VAL_NWK_RPT_BAND_CLASS_1, ,
    VAL_NWK_RPT_BAND_CLASS_3, 3,
    VAL_NWK_RPT_BAND_CLASS_NOT_USED, ,
End

Begin Enum, IMSI Update Field
    Update IMSI_M, 0,
    Update IMSI_T, 1,
End

Begin Enum, Init All Data Mode
    Factory Default Non Provisioned, 0,
    Factory Default Provisioned, 1,
End

Begin Enum, Pref Voice Service Options
    Srv Opt 1  Basic 8K Vocoder, 1,
    Srv Opt 3  Enhanced 8K Vocoder, 3,
    Srv Opt 17 Basic 13K Vocoder, 17,
    Srv Opt EVRC-B, 68,
    Srv Opt EVRC-NW, 73,
    Srv Opt QUALCOMM 17, 0x8000,
End

Begin Enum, UiParmOperationType
    MIN_VALUE, 
    MAX_VALUE, 
    DEFAULT_VALUE, 
    CUSTOM_VALUE, 
End

Begin Enum, UiccParmOperationType
    MIN_VALUE, 
    MAX_VALUE, 
    DEFAULT_VALUE, 
    CUSTOM_VALUE, 
End

Begin Enum, SysParmOperationId
    SYS_PARM_SET_BAND_CLASS, 
    SYS_PARM_GET_BAND_CLASS, 
    SYS_PARM_SET_SUB_CLASS, 
    SYS_PARM_GET_SUB_CLASS, 
End

Begin Enum, Val Sub Class
    SUB_CLASS_0, 
    SUB_CLASS_1, 
    SUB_CLASS_2, 
    SUB_CLASS_3, 
    SUB_CLASS_4, 
    SUB_CLASS_5, 
    SUB_CLASS_6, 
    SUB_CLASS_7, 
    SUB_CLASS_8, 
    SUB_CLASS_9, 
    SUB_CLASS_10, 
    SUB_CLASS_11, 
End

Begin Enum, CssMarkSystemT
    CSS_1X_MARK_SYSTEM_AS_NEGATIVE, 
    CSS_1X_CLEAR_MARKED_SYSTEM_LIST, 
End

Begin Enum, CssParmOperationType
    MIN_VALUE, 
    MAX_VALUE, 
    DEFAULT_VALUE, 
    CUSTOM_VALUE, 
End

Begin Enum, GmssParmOperationType
    MIN_VALUE, 
    MAX_VALUE, 
    DEFAULT_VALUE, 
    CUSTOM_VALUE, 
End

Begin Enum, VAL Http Action
    HTTP GET, 
    HTTP POST, 
    HTTP UNKNOWN, 
End

Begin Enum, VAL Ftp Action
    FTP LIST, 
    FTP GET, 
    FTP PUT, 
    FTP DELE, 
End

Begin Enum, VAL GPS Assistance Data
    CP_VAL_GPS_ASSISTANCE_DATA_ALMANAC, 
    CP_VAL_GPS_ASSISTANCE_DATA_EPHEMERIS, 
    CP_VAL_GPS_ASSISTANCE_DATA_LAST_LOCATION, 
    CP_VAL_GPS_ASSISTANCE_DATA_BASE_STATION_ALMANAC, 
    CP_VAL_GPS_ASSISTANCE_DATA_ALMANAC_CORRECTION, 
    CP_VAL_GPS_ASSISTANCE_DATA_SV_HEALTH_INFO, 
    CP_VAL_GPS_ASSISTANCE_DATA_NAVIGATION_MSG_BITS, 
    CP_VAL_GPS_ASSISTANCE_DATA_ALL_GPS_DATA, 
End

Begin Enum, VAL GPS Restart Mode
    HotReStart, 1,
    WarmReStart, 
    ColdReStart, 
End

Begin Enum, VAL GPS Security State
    CP_VAL_GPS_SECURITY_DISABLE, 
    CP_VAL_GPS_SECURITY_ENABLE, 
End

Begin Enum, VAL GPS Search Technology
    CP_VAL_GPS_TECHNOLOGY_CELL_ID_BASED, 
    CP_VAL_GPS_TECHNOLOGY_GPS_BASED, 
    CP_VAL_GPS_TECHNOLOGY_AFLT_BASED, 
    CP_VAL_GPS_TECHNOLOGY_GPS_AND_AFLT_BASED, 
End

Begin Enum, VAL GPS Start Mode
    VAL_GPS_START_MODE_HOT, 1,
    VAL_GPS_START_MODE_WARM, 2,
    VAL_GPS_START_MODE_COLD, 3,
End

Begin Enum, VAL GPS Test Mode
    UNKOWN_MODE, 0,
    NORMAL_GPS_MODE, ,
    VGTT, ,
    AT_GPS, ,
End

Begin Enum, ImsAppTypeEnum
    APP_DIAL_UP, 0
    APP_SIP, 1
    APP_VOIP, 2
End

Begin Enum, MmiAudioDtmfModeT
    MMI_AUDIO_DTMF_MODE_CONT, ,
    MMI_AUDIO_DTMF_MODE_BURST, ,
End

Begin Enum, VAL Music Types
    MIDI Melody, 2
    MP3 Melody, 3
    iMelody, 4
    PCM, 5
    CMF, 6
    AAC Melody, 7
    Vocoder, 8
    FM, 9
    MP4 AAC, 10
    MP4 MP3, 11
    WMA, 12
    WAV, 13
    I2S Input, 14
    ASF WMA, 15
    FLAC Melody, 18
    VORBIS Melody, 19
End

Begin Enum, UI Music Record Formats
    WAV, 16
    AAC, 17
End

Begin Enum, VAL Sampling Rates
    8k, 0
    11.025k, 1
    12k, 2
    16k, 3
    22.05k, 4
    24k, 5
    32k, 6
    44.1k, 7
    48k, 8
End

Begin Enum, UI Music Record BitRate
    HIGH QUALITY, 0
    MID QUALITY, 1
    LOW QUALITY, 2
End

Begin Enum, BandType
    PCS, ,
    Amps, ,
    Cellular, ,
    T53, ,
    KPCS, ,
End

Begin Enum, CP UI VAL Net Domain
    NET_AF_INET_DOMAIN, 0
End

Begin Enum, CP UI VAL Net Type
    NET_SOCK_STREAM_TYPE, 0
    NET_SOCK_DGRAM_TYPE, 1
    SOCK_ICMP_TYPE, 2
End

Begin Enum, CP UI VAL Net Protocol
    NET_IP_PROTOCOL, 0
    NET_ICMP_PROTOCOL, 1
    NET_TCP_PROTOCOL, 6
    NET_UDP_PROTOCOL, 17
End

Begin Enum, CP UI VAL Net RLP Settings
    NET_RLP_DEFAULT_SETTINGS, 0
    NET_RLP_CURRENT_SETTINGS, 1
    NET_RLP_NEGOTIATED_SETTINGS, 2
End

Begin Enum, CP UI VAL PSW Call Mode
    CALL_MODE_UNKNOWN, 0
    NORMAL_VOICE, 1
    EMERGENCY_E911, 2
    WPS, 3
    WPS_E911, 4
    OTASP, 5
End

Begin Enum, CP UI VAL PSW Request Mode
    PSW_REQUEST_MODE_CDMA_ONLY, 1
    PSW_REQUEST_MODE_WIDE, 2
    PSW_REQUEST_MODE_CDMA_WIDE, 3
    PSW_REQUEST_MODE_NARROW_ONLY, 4
    PSW_REQUEST_MODE_CDMA_NARROW_ONLY, 5
    PSW_REQUEST_MODE_NARROW_WIDE, 6
    PSW_REQUEST_MODE_NARROW_WIDE_CDMA, 7
End

Begin Enum, CP UI VAL PSW Service Option
    PSW_NULL_SERVICE_OPTION, 0,
    PSW_SERVICE_OPTION_1, 1,
    PSW_SERVICE_OPTION_2, 2,
    PSW_SERVICE_OPTION_3, 3,
    PSW_SERVICE_OPTION_4, 4,
    PSW_SERVICE_OPTION_5, 5,
    PSW_SERVICE_OPTION_6, 6,
    PSW_SERVICE_OPTION_7, 7,
    PSW_SERVICE_OPTION_8, 8,
    PSW_SERVICE_OPTION_9, 9,
    PSW_SERVICE_OPTION_10, 10,
    PSW_SERVICE_OPTION_11, 11,
    PSW_SERVICE_OPTION_12, 12,
    PSW_SERVICE_OPTION_13, 13,
    PSW_SERVICE_OPTION_14, 14,
    PSW_SERVICE_OPTION_15, 15,
    PSW_SERVICE_OPTION_16, 16,
    PSW_SERVICE_OPTION_17, 17,
    PSW_SERVICE_OPTION_18, 18,
    PSW_SERVICE_OPTION_19, 19,
    PSW_SERVICE_OPTION_20, 20,
    PSW_SERVICE_OPTION_21, 21,
    PSW_SERVICE_OPTION_22, 22,
    PSW_SERVICE_OPTION_23, 23,
    PSW_SERVICE_OPTION_24, 24,
    PSW_SERVICE_OPTION_25, 25,
    PSW_SERVICE_OPTION_26, 26,
    PSW_SERVICE_OPTION_27, 27,
    PSW_SERVICE_OPTION_28, 28,
    PSW_SERVICE_OPTION_29, 29,
    PSW_SERVICE_OPTION_30, 30,
    PSW_SERVICE_OPTION_31, 31,
    PSW_SERVICE_OPTION_32, 32,
    PSW_SERVICE_OPTION_33, 33,
    PSW_SERVICE_OPTION_34, 34,
    PSW_SERVICE_OPTION_35, 35,
    PSW_SERVICE_OPTION_36, 36,
    PSW_SERVICE_OPTION_54, 54,
    PSW_SERVICE_OPTION_55, 55,
    PSW_SERVICE_OPTION_68, 68,
    PSW_SERVICE_OPTION_73, 73,
    PSW_SERVICE_OPTION_75, 75,
    PSW_SERVICE_OPTION_4100, 4100,
    PSW_SERVICE_OPTION_4101, 4101,
    PSW_SERVICE_OPTION_4102, 4102,
    PSW_SERVICE_OPTION_4103, 4103,
    PSW_SERVICE_OPTION_4104, 4104,
    PSW_SERVICE_OPTION_8000, 32768,
    PSW_SERVICE_OPTION_8002, 32770,
    PSW_SERVICE_OPTION_801E, 32798,
    PSW_SERVICE_OPTION_801F, 32799,
    PSW_SERVICE_OPTION_805A, 32858,
    PSW_SERVICE_OPTION_805B, 32859,
    PSW_SERVICE_AMPS, 0xFFFF,
End

Begin Enum, CP UI VAL PSW Service Type
    PSW_UNKNOWN_SERVICE_TYPE, 0
    PSW_VOICE_SERVICE_TYPE, 1
    PSW_ANALOG_VOICE_SERVICE_TYPE, 2
    PSW_ASYNC_FAX_DATA_SERVICE_TYPE, 3
    PSW_ASYNC_DATA_SERVICE_TYPE, 4
    PSW_FAX_DATA_SERVICE_TYPE, 5
    PSW_UP_ASYNC_DATA_SERVICE_TYPE, 6
    PSW_PACKET_DATA_SERVICE_TYPE, 7
    PSW_QNC_PACKET_DATA_SERVICE_TYPE, 8
    PSW_UP_PACKET_DATA_SERVICE_TYPE, 9
    PSW_LPBK_SERVICE_TYPE, 10
    PSW_SMS_SERVICE_TYPE, 11
    PSW_OTASP_SERVICE_TYPE, 12
    PSW_TCP_BROWSER_DATA_SERVICE_TYPE, 13
    PSW_LOC_SERVICE_TYPE, 14
End

Begin Enum, CP UI VAL PSW OTASP Code
    PSWF_OTASP_A_BAND, 0
    PSWF_OTASP_B_BAND, 1
    PSWF_OTASP_A_BLOCK, 2
    PSWF_OTASP_B_BLOCK, 3
    PSWF_OTASP_C_BLOCK, 4
    PSWF_OTASP_D_BLOCK, 5
    PSWF_OTASP_E_BLOCK, 6
    PSWF_OTASP_F_BLOCK, 7
    PSWF_OTASP_PREFERRED, 8
    PSWF_MAX_OTASP_CODE, 9
End

Begin Enum, CP UI VAL NamNumber
    NAM_1, 1
    NAM_2, 2
End

Begin Enum, CP UI VAL SMS TeleSrv ID
    VAL_SMS_TS_ID_IS91_PAGE, 0
    VAL_SMS_TS_ID_IS91_VOICE_MAIL, 1
    VAL_SMS_TS_ID_IS91_SHORT_MESSAGE, 2
    VAL_SMS_TS_ID_VOICE_MAIL_MWI, 3
    VAL_SMS_TS_ID_IS91, 4096
    VAL_SMS_TS_ID_PAGE, 4097
    VAL_SMS_TS_ID_MESSAGE, 4098
    VAL_SMS_TS_ID_VOICE_MAIL, 4099
    VAL_SMS_TS_ID_WAP, 4100
    VAL_SMS_TS_ID_WEMT, 4101
    VAL_SMS_TS_ID_SCPT, 4102
    VAL_SMS_TS_ID_CATPT, 4103
    VAL_SMS_BROAD_CAST_SRV, 4104
End

Begin Enum, CP UI VAL Device
    VAL_DEV_NONE, 0x0000
    VAL_DEV_UIM, 0x1000
    VAL_DEV_RAM, 0x2000
    VAL_DEV_FLASH, 0x3000
    VAL_DEV_UIM_FLASH, 0x4000
End

Begin Enum, CP UI VAL SMS State
    FREE, 0
    READ, 1
    TO_BE_READ, 3
    SENT, 5
    TO_BE_SENT, 7
End

Begin Enum, CP UI VAL SMS Trans Msg Type
    VAL_SMS_SMS_MSG_TYPE_POINT_TO_POINT, 0
    VAL_SMS_SMS_MSG_TYPE_BROADCAST, 1
    VAL_SMS_SMS_MSG_TYPE_ACKNOWLEDGE, 2
    VAL_SMS_MAX_SMS_MSG_TYPE, 3
End

Begin Enum, CP UI VAL SMS Tele Message
    VAL_SMS_MSG_TYPE_RESERVED, 0
    VAL_SMS_MSG_TYPE_TERMINATION_DELIVER, 1
    VAL_SMS_MSG_TYPE_ORIGINATION_SUBMIT, 2
    VAL_SMS_MSG_TYPE_ORIGINATION_CANCELLATION, 3
    VAL_SMS_MSG_TYPE_TERMINATION_DELIVERY_ACK, 4
    VAL_SMS_MSG_TYPE_USER_ACK, 5
    VAL_SMS_MSG_TYPE_READ_ACK, 6
End

Begin Enum, CP UI VAL SMS Service Category
    VAL_SMS_SVR_CAT_UNKNOWN, 0
    VAL_SMS_SVR_CAT_EMERGENCIES, 1
    VAL_SMS_SVR_CAT_ADMINISTRATIVE, 2
    VAL_SMS_SVR_CAT_MAINTENANCE, 3
    VAL_SMS_SVR_CAT_GEN_NEWS_LOCAL, 4
    VAL_SMS_SVR_CAT_GEN_NEWS_REGIONAL, 5
    VAL_SMS_SVR_CAT_GEN_NEWS_NATIONAL, 6
    VAL_SMS_SVR_CAT_GEN_NEWS_INTERNATIONAL, 7
    VAL_SMS_SVR_CAT_FINANCE_NEWS_LOCAL, 8
    VAL_SMS_SVR_CAT_FINANCE_NEWS_REGIONAL, 9
    VAL_SMS_SVR_CAT_FINANCE_NEWS_NATIONAL, 10
    VAL_SMS_SVR_CAT_FINANCE_NEWS_INTERNATIONAL, 11
    VAL_SMS_SVR_CAT_SPORTS_NEWS_LOCAL, 12
    VAL_SMS_SVR_CAT_SPORTS_NEWS_REGIONAL, 13
    VAL_SMS_SVR_CAT_SPORTS_NEWS_NATIONAL, 14
    VAL_SMS_SVR_CAT_SPORTS_NEWS_INTERNATIONAL, 15
    VAL_SMS_SVR_CAT_ENTERTAINMENT_NEWS_LOCAL, 16
    VAL_SMS_SVR_CAT_ENTERTAINMENT_NEWS_REGIONAL, 17
    VAL_SMS_SVR_CAT_ENTERTAINMENT_NEWS_NATIONAL, 18
    VAL_SMS_SVR_CAT_ENTERTAINMENT_NEWS_INTERNATIONAL, 19
    VAL_SMS_SVR_CAT_LOCAL_WEATHER, 20
    VAL_SMS_SVR_CAT_TRAFFIC, 21
    VAL_SMS_SVR_CAT_FLIGHT_SCHEDULE, 22
    VAL_SMS_SVR_CAT_RESTAURANTS, 23
    VAL_SMS_SVR_CAT_LODGINGS, 24
    VAL_SMS_SVR_CAT_RETAIL_DIRECTORY, 25
    VAL_SMS_SVR_CAT_ADVERTISEMENT, 26
    VAL_SMS_SVR_CAT_STOCK_QUOTES, 27
    VAL_SMS_SVR_CAT_EMPLOYMENT_OPPORTUNITIES, 28
    VAL_SMS_SVR_CAT_MEDICAL_HEALTH, 29
    VAL_SMS_SVR_CAT_TECH_NEWS, 30
    VAL_SMS_SVR_CAT_MULTI_CATEGORY, 31
End

Begin Enum, CP UI VAL SMS Digit Mode
    VAL_SMS_DIGIT_MODE_4_BIT, 0
    VAL_SMS_DIGIT_MODE_8_BIT, 1
End

Begin Enum, CP UI VAL SMS Number Mode
    VAL_SMS_NUMBER_MODE_ANSI_T1_607, 0
    VAL_SMS_NUMBER_MODE_DATA_NETWORK, 1
End

Begin Enum, CP UI VAL SMS Number Type
    VAL_SMS_NUMBER_TYPE_UNKNOWN, 0
    VAL_SMS_NUMBER_TYPE_INTERNATIONAL, 1
    VAL_SMS_NUMBER_TYPE_NATIONAL, 2
    VAL_SMS_NUMBER_TYPE_NETWORK_SPECIFIC, 3
    VAL_SMS_NUMBER_TYPE_SUBSCRIBER, 4
    VAL_SMS_NUMBER_TYPE_RESERVED, 5
    VAL_SMS_NUMBER_TYPE_ABBREVIATED, 6
End

Begin Enum, CP UI VAL SMS Data Number Type
    VAL_SMS_DATA_NUM_TYPE_UNKNOWN, 0
    VAL_SMS_DATA_NUM_TYPE_RFC_791, 1
    VAL_SMS_DATA_NUM_TYPE_RFC_822, 2
End

Begin Enum, CP UI VAL SMS Number Plan
    VAL_SMS_NUMBER_PLAN_UNKNOWN, 0
    VAL_SMS_NUMBER_PLAN_TELEPHONY, 1
    VAL_SMS_NUMBER_PLAN_DATA, 3
    VAL_SMS_NUMBER_PLAN_TELEX, 4
    VAL_SMS_NUMBER_PLAN_PRIVATE, 9
End

Begin Enum, CP UI VAL SMS Subaddress Type
    VAL_SMS_SUBADDR_TYPE_NSAP, 0
    VAL_SMS_SUBADDR_TYPE_USER, 1
End

Begin Enum, CP UI VAL SMS Msg Encode Type
    VAL_SMS_MSG_ENCODE_OCTET, 0
    VAL_SMS_MSG_ENCODE_IS91_EXT_PROT_MSG, 1
    VAL_SMS_MSG_ENCODE_7BIT_ASCII, 2
    VAL_SMS_MSG_ENCODE_IA5, 3
    VAL_SMS_MSG_ENCODE_UNICODE, 4
    VAL_SMS_MSG_ENCODE_SHIFT_JIS, 5
    VAL_SMS_MSG_ENCODE_KS_C_5601, 6
    VAL_SMS_MSG_ENCODE_LATIN_HEBREW, 7
    VAL_SMS_MSG_ENCODE_LATIN, 8
End

Begin Enum, CP UI VAL SMS Priority
    VAL_SMS_PRIORITY_NORMAL, 0
    VAL_SMS_PRIORITY_INTERACTIVE, 1
    VAL_SMS_PRIORITY_URGENT, 2
    VAL_SMS_PRIORITY_EMERGENCY, 3
End

Begin Enum, CP UI VAL SMS Privacy
    VAL_SMS_PRIVACY_NOT_RESTRICTED, 0
    VAL_SMS_PRIVACY_RESTRICTED, 1
    VAL_SMS_PRIVACY_CONFIDENTIAL, 2
    VAL_SMS_PRIVACY_SECRET, 3
End

Begin Enum, CP UI VAL SMS Alert
    VAL_SMS_ALERT_MOBILE_DEFAULT, 0
    VAL_SMS_ALERT_LOW_PRIORITY, 1
    VAL_SMS_ALERT_MEDIUM_PRIORITY, 2
    VAL_SMS_ALERT_HIGH_PRIORITY, 3
End

Begin Enum, CP UI VAL SMS Language
    VAL_SMS_LANGUAGE_UNKNOWN, 0
    VAL_SMS_LANGUAGE_ENGLISH, 1
    VAL_SMS_LANGUAGE_FRENCH, 2
    VAL_SMS_LANGUAGE_SPANISH, 3
    VAL_SMS_LANGUAGE_JAPANESE, 4
    VAL_SMS_LANGUAGE_KOREAN, 5
    VAL_SMS_LANGUAGE_CHINESE, 6
    VAL_SMS_LANGUAGE_HEBREW, 7
End

Begin Enum, CP UI VAL SMS Display Mode
    VAL_SMS_DISP_MODE_IMMEDIATE, 0
    VAL_SMS_DISP_MODE_DEFAULT, 1
    VAL_SMS_DISP_MODE_USER_INVOKE, 2
    VAL_SMS_DISP_MODE_RESERVED, 3
End

Begin Enum, CP UI VAL SMS Error Class
    VAL_SMS_ERRCLASS_NO_ERROR, 1
    VAL_SMS_ERRCLASS_TEMPORARY, 2
    VAL_SMS_ERRCLASS_PERMANENT, 3
End

Begin Enum, CP UI VAL SMS Status Code
    VAL_SMS_MSGSTATUS_ACCEPTED, 1
    VAL_SMS_MSGSTATUS_DEPOSITED_TO_INTERNET, 2
    VAL_SMS_MSGSTATUS_DELIVERED, 3
    VAL_SMS_MSGSTATUS_CANCELLED, 4
    VAL_SMS_MSGSTATUS_NETWORK_CONGESTION, 5
    VAL_SMS_MSGSTATUS_NETWORK_ERROR, 6
    VAL_SMS_MSGSTATUS_CANCEL_FAILED, 7
    VAL_SMS_MSGSTATUS_BLOCKED_DESTINATION, 8
    VAL_SMS_MSGSTATUS_TEXT_TOO_LONG, 9
    VAL_SMS_MSGSTATUS_DUPLICATE_MESSAGE, 10
    VAL_SMS_MSGSTATUS_INVALID_DESTINATION, 11
    VAL_SMS_MSGSTATUS_EXPIRED, 12
End

Begin Enum, CP UI VAL SMS Category Result Code
    VAL_SMS_CATRESULT_SUCCESS, 1
    VAL_SMS_CATRESULT_MEMORY_EXCEEDED, 2
    VAL_SMS_CATRESULT_LIMIT_EXCEEDED, 3
    VAL_SMS_CATRESULT_ALREADY_PROGRAMMED, 4
    VAL_SMS_CATRESULT_NOT_PREVIOUSLY_PROGRAMMED, 5
    VAL_SMS_CATRESULT_INVALID_MAX_MESSAGES, 6
    VAL_SMS_CATRESULT_INVALID_ALERT_OPTION, 7
    VAL_SMS_CATRESULT_INVALID_CATEGORY_NAME, 8
    VAL_SMS_CATRESULT_UNSPECIFIED_FAILURE, 9
End

Begin Enum, CP UI VAL CHV ID
    VAL_CHV1, 1
    VAL_CHV2, 2
End

Begin Enum, CP UI VAL UTK Gen Result
    VAL_UTK_RST_CMD_OK, 0x00
    VAL_UTK_RST_CMD_PART_OK, 0x01
    VAL_UTK_RST_CMD_MISS_OK, 0x02
    VAL_UTK_RST_EF_REFRESH, 0x03
    VAL_UTK_RST_CMD_OK_NO_ICON, 0x04
    VAL_UTK_RST_CMD_OK_LTD_SERV, 0x06
    VAL_UTK_RST_CMD_OK_NOTIFY, 0x07
    VAL_UTK_RST_REF_NO_NAA, 0x08
    VAL_UTK_RST_USER_TERMINATE, 0x10
    VAL_UTK_RST_USER_BACK_MOVE, 0x11
    VAL_UTK_RST_USER_NO_RSP, 0x12
    VAL_UTK_RST_USER_REQ_HELP, 0x13
    VAL_UTK_RST_ME_UNABLE, 0x20
    VAL_UTK_RST_NET_UNABLE, 0x21
    VAL_UTK_RST_USER_NOT_ACCEPT, 0x22
    VAL_UTK_RST_USER_CLEAR_CALL, 0x23
    VAL_UTK_RST_ACTION_CONT, 0x24
    VAL_UTK_RST_NAA_CC_TEMP_PROBLEM, 0x25
    VAL_UTK_RST_BROW_ERR, 0x26
    VAL_UTK_RST_CMD_BYD_CAP, 0x30
    VAL_UTK_RST_CMD_TYPE_NOT_UND, 0x31
    VAL_UTK_RST_CMD_DATA_NOT_UND, 0x32
    VAL_UTK_RST_CMD_NUM_UNK, 0x33
    VAL_UTK_RST_REQ_VAL_MISS, 0x36
    VAL_UTK_RST_NULTICARD_CMD_ERR, 0x38
    VAL_UTK_RST_NAA_CC_PERM_PROBLEM, 0x39
    VAL_UTK_RST_BEARER_PROTOCOL_ERR, 0x40
    VAL_UTK_RST_ACCESS_TECH_UNABLE, 0x41
End

Begin Enum, CP UI VAL UTK Additional Info
    VAL_INF_NO_CAUSE, 0x00
    VAL_UTK_ADD_INF_SCR_BUSY, 0x01
    VAL_UTK_ADD_INF_BUSY_CALL, 0x02
    VAL_UTK_ADD_INF_NO_SERVICE, 0x04
    VAL_UTK_ADD_INF_ACC_CLASS_BAR, 0x05
    VAL_UTK_ADD_INF_RADIO_RES_NOT_GRANT, 0x06
    VAL_UTK_ADD_INF_NOT_SPEECH_CALL, 0x07
    VAL_UTK_ADD_INF_BUSY_SEND_DTMF, 0x09
    VAL_UTK_ADD_INF_NO_NAA, 0x0A
End

Begin Enum, Enable Modes
    No, 0
    Yes, 1
End

Begin Enum, Start Test Num
    Read/Write w/ Mas Isr (cmd= -2 -1), 1
    Deint: send zeros (cmd= len), 2
    Write from memory (cmd= delay), 3
End

Begin Enum, RC Type
    RC_1, 0
    RC_2, 1
    RC_3, 2
    RC_4, 3
    RC_5, 4
    RC_6, 5
End

Begin Enum, Fwd Channel Type
    FSYNC, 0
    FPAGE, 1
    FBCCH, 2
    FQPCH, 3
    FCPCCH, 4
    FCACH, 5
    FCCCH, 6
    FDCCH, 7
    FFCH, 8
    FSCH, 9
End

Begin Enum, Fwd Frame Duration Type
    F80MS, 0
    F40MS, 1
    F26MS, 2
    F20MS, 3
    F10MS, 4
    F5MS, 5
    F160MS, 6
End

Begin Enum, Fwd Code Rate Type
    NO_ENCODE, 0x000
    HALF_RT, 0x001
    THIRD_RT, 0x002
    QUARTER_RT, 0x003
End

Begin Enum, Cmd Type
    Smb Spy, 40
End

Begin Enum, Mode Type
    Single, 0x01
    Continuous, 0x02
End

Begin Enum, Fwd Finger ModQ Type
    FWD_FMQ_STATE_IDLE, 0xffff
    FWD_NEW_FINGER_ALLOCATE, 2
    FWD_FINGER_CHANNEL_ADD, 4
    FWD_FINGER_CHANNEL_DELETE, 8
    FWD_FINGER_DEALLOCATE, 16
    FWD_FINGER_TIME_TRACK, 32
    FWD_FINGER_MOD_WALSH_ONLY, 64
End

Begin Enum, Rev ACK Enable
    No ACK, 0
    ACK1, 1
    ACK2, 2
    Both ACKs, 3
End

Begin Enum, Rfc Ctrl Mode Type
    Manual, 0
    Automatic, 1
End

Begin Enum, PilotCombAlgT
    Average, 0
    Sum, 
    Tbd, 
End

Begin Enum, SamplePhaseT
    Phase 7/3, 0
    Phase 1/5, 
    Phase 0/4, 
    Phase 2/6, 
End

Begin Enum, Mic Fif Modes
    Mic Fif Mode Off, 0
    Mic Fif Mode On, 1
End

Begin Enum, Mic Ans Modes
    Mic Acoustic Noise Suppression Off, 0
    Mic Acoustic Noise Suppression On, 1
End

Begin Enum, Mic Bif Modes
    Mic Bif Mode Off, 0
    Mic Bif Mode On, 1
End

Begin Enum, Speech Rates
    Blank, 0
    Eigth, 1
    Quarter, 2
    Half, 3
    Full, 4
    Erasure, 14
    Full Likely, 15
End

Begin Enum, Mic Sim Msg Ids
    Set Mic Fif Mode, 0x800
    Set Mic Ans Mode, 0x802
    Send Mic Ans Cfg Params, 0x803
    Set Mic Bif Mode, 0x804
    Send Mic Bif Cfg Params, 0x805
    Set Mic Vol Scal Fctr, 0x806
    Send Send Mpp Tone Gen Params, 0x809
    Set Mic Voice Enc Max Rate, 0x80A
    Set Mic Voice Enc Min Rate, 0x80B
    Send Mic Sim Msg, 0x80D
    Debug Parm Msg, 0xA50
End

Begin Enum, enumTonePath
    IPC_DSV_NO_DTMF, 0
    IPC_DSV_DTMF_SPKR, 1
    IPC_DSV_DTMF_MIC, 2
    IPC_DSV_DTMF_MIC_SPKR, 3
End

Begin Enum, enumMode
    IPC_TONE_MODE_STOP, 0
    IPC_TONE_MODE_START, 1
    IPC_TONE_MODE_ABORT, 2
End

Begin Enum, Spkr Fif Modes
    Spkr Fif Mode Off, 0
    Spkr Fif Mode On, 1
End

Begin Enum, Air Interface Modes
    CDMA Mode, 0
End

Begin Enum, Rate Reduced Mode Levels
    Only Full Rate Packets, 0
    Full To Half Rate Packets, 1
    Full To Quarter Rate Packets, 2
    Full To Half and Quarter Rate Packets, 3
    Only Half Rate Packets, 4
End

Begin Enum, Mobile-to-Mobile Modes
    Mode Disabled, 0
    Mode Enabled, 1
End

Begin Enum, Initialize Code Modes
    Mode Disabled, 0
    Mode Enabled, 1
End

Begin Enum, Audio Loopback Modes
    LoopBack Disabled, 0
    Mixed-Signal Hardware Loopback, 1
    Digital Hardward Loopback, 2
    Sample ISR Loopback, 3
    Speech Service Option Loopback, 4
    Multiplex Sublayer Loopback, 7
    Mpp Task to Spp Task Loopback, 8
End

Begin Enum, Echo Cancel Modes
    Echo Cancel Off, 0
    Echo Cancel On, 1
End

Begin Enum, Voice Record Playback Modes
    Disabled, 0
    Voice Record Only, 1
    Voice Playback Only, 2
    Voice Record and Playback, 3
End

Begin Enum, Voice Record Playback Data Type
    Packets Only, 0
    PCM Only, 1
    Packets and PCM, 2
End

Begin Enum, Spkr Sim Msg Ids
    Send Spkr Fwd Ch Pckt Data, 0x900
    Send Spkr Voice Rec Pb Pckt Data, 0x903
    Send Spp Tone Gen Params, 0x904
    Set Spkr Fif Mode, 0x906
    Send Spkr Fif Cfg Params, 0x907
    Send Spkr Vol Scal Fctr, 0x908
    Set Audio Air Interface Mode, 0x0A00
    Send Audio SSO Connect, 0x0A01
    Send Audio SSO Disconnect, 0x0A02
    Send Audio SSO Ctrl Params, 0x0A03
    Send Audio ISR Scal Fctr, 0x0A04
    Set Audio Loopback Mode, 0x0A05
    Set Audio Aec Mode, 0x0A08
    Send Audio Aec Cfg Params, 0x0A09
    Set Audio Voice Record Playback Mode, 0x0A0A
    Send Spkr Sim Msg, 0x0A0B
    Debug Parm Msg, 0x0A50
End

Begin Enum, Tty Modes
    Off, 0
    On, 1
End

Begin Enum, Audio Compression Modes
    Off, 0
    On, 1
End

Begin Enum, DtmfPath
    NO_DTMF, 0x0000
    DTMF_SPKR, 0x0001
    DTMF_MIC, 0x0002
    DTMF_MIC_SPKR, 0x0003
End

Begin Enum, RngrCtrlMode
    RNGR_ON, 0x0000
    RNGR_OFF, 0x0001
    RNGR_RELEASE, 0x0002
End

Begin Enum, Fix Modes
    MS-Assisted, 1
    MS-Based, 2
    MS-Standalone, 3
    Control-Plane, 4
End

Begin Enum, Inject Modes
    EPH, 1
    ALM, 2
    LOC, 3
    EPHALM, 4
    All, 5
End

Begin Enum, ClockAction
    Set_Freq, 0,
    Adj_Freq, ,
    Set_RMS_ppb, ,
End

Begin Enum, $PGNV Commands
    GET_VERSION, 
    RESET_HOT_START, 
    RSET_WARM_START, 
    RSET_COLD_START, 
    RSET_FACTORY_START, 
    SLEEP, 
    COMA, 
    WAKEUP, 
    SHUTDOWN, 
    DIAG_MODE0, 
    DIAG_MODE1, 
    DIAG_MODE2, 
    DIAG_MODE3, 
End

Begin Enum, GN APIs
    GN_GPS_READ_PGNV, 
    GN_GPS_WRITE_GNB_PATCH, 
    GN_GPS_READ_NV_STORE, 
    GN_GPS_WRITE_NV_STORE, 
    GN_GPS_GET_OS_TIME_MS, 
    GN_GPS_READ_UTC, 
    GN_GPS_WRITE_UTC, 
    GN_GPS_READ_GNB_MEAS, 
    GN_GPS_WRITE_GNB_CTRL, 
End

Begin Enum, DpramQ
    FORMAT_Q, 0
    RAW_Q, 1
End

Begin Enum, DpramDir
    DPRAM_TX_Q, 0
    DPRAM_RX_Q, 1
End

Begin Enum, CSFB Buffer ID Enum
    CSFB_CDMA_PARM, 
    CSFB_SIB8, 
    CSFB_REDIR, 
End

Begin Enum, IntFrameType
    20ms, 0
    26ms, 1
End

Begin Enum, CpIntSrc
    166_125, 0
    333_250, 1
    500_375, 2
    666_500, 3
    833_650, 4
    1000_800, 5
    1166_925, 6
    1333_1050, 7
    1500_1175, 8
    1666_1300, 9
    1833_1425, 10
    2000_1500, 11
    2166_1675, 12
    2333_1800, 13
    2500_1925, 14
    2666_2000, 15
End

Begin Enum, SysTime Ctrl Mode
    Automatic, 0
    Manual, 1
End

Begin Enum, GenericDmaTestItems
    Dma_Automatic_Test, 1
    Dma_Manual_Test, 2
    Dma_Single_Test, 3
End

Begin Enum, TstMacTestCaseEnum
    TC_15DB_128SLOT, 0
    TC_15DB_128SLOT_REVA, 1
    TC_M10DB_128SLOT, 2
    TC_M10DB_128SLOT_REVA, 3
    TC_MBD_3PCG_REVA, 4
    TC_MBD_3PCG, 5
End

Begin Enum, TstCpDspmSelect
    CP, 0
    DSPM, 1
End

Begin Enum, TstTxOn
    TxOn0, 0
    TxOn1, 1
    TxOn2, 2
    TxOn3, 3
    TxOn4, 4
    TxOn5, 5
    TxOn6, 6
    TxOn7, 7
End

Begin Enum, TstRfOn
    RfOn0, 0
    RfOn1, 1
    RfOn2, 2
    RfOn3, 3
    RfOn4, 4
    RfOn5, 5
    RfOn6, 6
    RfOn7, 7
End

Begin Enum, MmSpiExtDevices
    MSpiDev0, 0
    MSpiDev1, 1
    MSpiDev2, 2
    MSpiDev3, 3
End

Begin Enum, MmSpiTxList
    MSPTX0, 0
    MSPTX1, 1
End

Begin Enum, MmSpiClkRateList
    ClkRate0, 0
    ClkRate1, 1
    ClkRate2, 2
    ClkRate3, 3
End

Begin Enum, MmSpiTstCase
    SendOnlyThenRecvOnly, 0
    SendThenRecvTogether, 1
    SendAndRecvTogether, 2
    RecvAndSendTogether, 3
    SendAndRecvInterleaved, 4
End

Begin Enum, StatusT
    FALSE, 0
    TRUE, 1
End

Begin Enum, HscOwnerT
    SYS_MODE_1X, 0
    SYS_MODE_DO, 1
End

Begin Enum, MpaReqT
    MPA_PATH_MAIN, 1
    MPA_PATH_DIV, 2
    MPA_PATH_MAIN_DIV, 3
    MPA_PATH_TX, 4
End

Begin Enum, QpchRateT
    HALF, 0
    FULL, 1
End

Begin Enum, SleepModeT
    PCH, 0
    QPCH1, 1
    QPCH2, 2
    CCI, 3
    FCCCH1, 4
End

Begin Enum, CpDspmSpageRspnsMsgIdT
    QPCH_IND, 0
    STOP_CMD_ACK, 1
    SYS_TIME_ERR_AFT_ACQ, 2
    LONG_CODE_STATE, 3
    PWR_OFF_MIX_SIG, 4
End

Begin Enum, RfPathsT
    Main, 1
    Diversity, 2
    Main and Diversity, 3
End

Begin Enum, RmcIratLteModeT
    RMC_IRAT_LTE_MODE_IDLE, 0
    RMC_IRAT_LTE_MODE_CONN, 1
End

Begin Enum, RmcIratMeasModeT
    RMC_IRAT_MEAS_MODE_DRX_GAP, 0
    RMC_IRAT_MEAS_MODE_MEAS_GAP, 1
    RMC_IRAT_MEAS_MODE_DRX_NO1X_GAP, 2
    RMC_IRAT_MEAS_MODE_MEAS_NO1X_GAP, 3
End

Begin Enum, FmpTestModeT
    Real, 0
    Real 1 SCHPath, 1
    FmpSchProc RunOnce, 2
    FmpSchProc Repeat, 3
    FmpSchProc Bypass, 4
End

Begin Enum, Mac Finger Alloc Status
    0 NOT_DET (Disable), 0
    1 UNCH_ALLOC (Keep), 1
    3 CH_ALLOC (New Alloc), 3
End

Begin Enum, Sector PCG Id
    PCG0, 0
    PCG1, 1
    PCG2, 2
    PCG3, 3
    PCG4, 4
    PCG5, 5
End

Begin Enum, RAB Length
    RAB_LENGTH_8, 0
    RAB_LENGTH_16, 1
    RAB_LENGTH_32, 2
    RAB_LENGTH_64, 3
End

Begin Enum, RAC Gain
    RACG_MINUS6, 0
    RACG_MINUS9, 1
    RACG_MINUS12, 2
    RACG_MINUS15, 3
End

Begin Enum, EqTimeTrackRef
    STRONGEST, 0
    EARLIEST, 1
End

Begin Enum, EqEq Alloc Status
    InAct (Disable), 0
    Alloc (NewAlloc), 1
    Track (Keep), 2
    Drop  (DeAlloc), 3
    UnUsed, 4
End

Begin Enum, EqEqfn Alloc Status
    InAct (Disable), 0
    Alloc (NewAlloc), 1
    Track (Keep), 2
    Drop  (DeAlloc), 3
    UnUsed, 4
End

Begin Enum, RFC Air Interface
    1xRTT Modem Path, 0
    EVDO Modem Path, 1
    GPS Modem Path, 2
End

Begin Enum, AFC Test Ctrl
    Automatic, 0xFF
    Disabled, 0
    Init Acq - No Pilot, 1
    Init Acq - Pilot Found, 2
    Init Acq - Finger Alloc, 3
    Slotted, 4
    Online, 5
    Test, 6
End

Begin Enum, L1CDEMobilityStateT
    L1CDE_MOBILITY_STATE_NOT_AVAILABLE, 0
    L1CDE_MOBILITY_STATE_NORMAL_MOBILITY, 1
    L1CDE_MOBILITY_STATE_LOW_MOBILITY, 2
End

Begin Enum, L1CDEIratServiceRequestModeT
    L1CDE_START_PLMN_SEARCH_LTE, 0
    L1CDE_FINISH_PLMN_SEARCH_LTE, 1
    L1CDE_START_CELL_RESEL_LTE, 2
    L1CDE_TAKEOVER_FROM_LTE, 3
End

Begin Enum, L1CDERatIdT
    L1CDE_RAT_EUTRAN, 0
    L1CDE_RAT_NONE, 1
End

Begin Enum, UpdDcOffsetTestModeT
    COEF_AUTO, 0
    COEF_FAST, 1
    COEF_FAST_DO, 2
    COEF_NOM, 3
    COEF_SLOW, 4
    COEF_POKE_HW, 5
End

Begin Enum, DRCChanTypeT
    FAST_2_ch, 0
    FAST_1_ch, 1
    SLOW_ch, 2
    Stationary_ch, 3
    AWGN_ch, 4
    NO_Decision_ch, 5
    Non_Force_chTyp, 6
End

Begin Enum, ReduceCfgT
    PER_START, 1
    REV0_REVA, 2
    DRC, 3
    PER_STOP, 4
    PER_FORCE, 5
    RSSI, 6
    RSSI_STOP, 7
    MACID, 8
    INVALID, 9
End

Begin Enum, TestModes
    NO HLP, 0
    HLP ASYNC DATA, 1
    HLP NETWORK RM, 2
    HLP PPP ONLY, 3
    HLP RELAY RM, 4
End

Begin Enum, PafTestCases
    TestCase0:No Octets Missed, 0
    TestCase1:No Octets Missed but Duplicated Octets Retx, 1
    TestCase2:Octets Missed and Missed Octets are Retx exactly, 2
    TestCase3:Octets Missed and Missed Octets are Retx with Overrided those AT has rcvd(header part), 3
    TestCase4:Octets Missed and Missed Octets are Retx with Overrided those AT has rcvd(tailer part), 4
    TestCase5:Octets Missed and Missed Octets are Retx with Overrided those AT has rcvd(both), 5
    TestCase6:Octets Missed and Missed Octets are Retx in two RLP packets, 6
    TestCase7:Octets Missed and Missed Octets are Retx partly, 7
    TestCase8:Octets Missed and Missed Octets are Retx disorder(Naked firstly but Retx later), 8
    TestCase9:RLP Reset happens during data transfer, 9
    TestCase10:Test with HLP and no RLP Packet missed, 10
    TestCase11:Test with HLP but with RLP Packets missed, 11
    TestCase12:Test with HLP and PAR, 12
    TestCase13:Test with HLP and PAR and Octets missed and NAK exactly, 13
    TestCase14:Test with HLP and PAR and Octets missed and Nak not transmitted, 14
    TestCase15:Test with HLP and PAR and Not Sent Ind received, 15
    TestCase16:Test with HLP and PAR and Reset happens during data transfer, 16
End

Begin Enum, RTMRevRate
    0kbps, 0
    9.6kbps, 1
    19.2kpbs, 2
    38.4kpbs, 3
    76.8kpbs, 4
    153.6kbps, 5
End

Begin Enum, ConnectionLayer Formats
    Format A Preferred, 0
    Format B Preferred, 1
End

Begin Enum, RPC Test Mode Type
    RPC_TEST_UP, 0
    RPC_TEST_DOWN, 1
    RPC_TEST_ALTERNATE, 2
    RPC_TEST_REAL, 3
End

Begin Enum, RtmTestModeT
    Real, 0
    Txhw/Fixed Rate, 1
    Deactivate, 2
    Activation/RcpSig, 3
    Init/RcpSig, 4
    Cont/RcpSig, 5
    AddBytes, 6
    RF Release, 7
    RF Ready, 8
    Rtap Test, 9
End

Begin Enum, AckNak
    ACK, 0
    NAK, 1
End

Begin Enum, MfpaSimpleAttr
    FlowNNDOSAllowedRev, 0xf600
    FlowNNTransmitAbortTimerRev, 0xf700
    ResvKKIdleStateRev, 0xf800
    ResvKKIdleStateFwd, 0xf900
    FlowNNPhyLayerNakEnabledRev, 0xfa00
    FlowNNHLProtocolRev, 0xfb00
    FlowNNHLProtocolFwd, 0xfc00
    FlowNNNakEnabledRev, 0xfd00
    FlowNNNakEnabledFwd, 0xfe00
    MaxAbortTimer, 0xfffc
    RANHandoff, 0xffff
End

Begin Enum, App Type
    MFPA Access Stream, 4
    MFPA Service Stream, 5
    EnMFPA Access Stream, 8
    EnMFPA Service Stream, 9
End

Begin Enum, CssDbmId
    1X, 0x01,
    DO, 0x02,
    MISC, 0x04,
    ALL, 0xFF,
End

Begin Enum, IratRatLteAcqResultT
    MMC_ACQUIRED, 0
    MMC_ACQFAILED, 1
End

Begin Enum, RatRegResultT
    RAT_REG_REGISTERED, 0
    RAT_REG_ACQUIRED, 1
    RAT_REG_ACQFAILED, 2
    RAT_REG_ATTACHFAILED, 4
End

Begin Enum, IratRatLtePsTypeT
    MMC_PSTYPE_NO_PS, 0
    MMC_PSTYPE_1xRTT, 1
    MMC_PSTYPE_HRPD, 2
    MMC_PSTYPE_EHRPD, 3
    MMC_PSTYPE_LTE, 4
    MMC_PSTYPE_GERAN, 5
    MMC_PSTYPE_UTRAN, 6
End

Begin Enum, IratRatCpStatusT
    GMSS_RAT_INIT, 0
    GMSS_RAT_ACQUIRED, 1
    GMSS_RAT_REGISTERED, 2
    GMSS_RAT_CONNECT, 3
    GMSS_RAT_SYSLOST, 4
    GMSS_RAT_DISABLED, 5
    GMSS_RAT_POWERED_DOWN, 6
End

Begin Enum, IratRatStatusIndCauseT
    MMC_AUTOMATIC, 0
    MMC_RAT_SYSLOST, 1
    MMC_PS_REL, 2
    MMC_PS_CHG, 3
    MMC_PRI_CHG, 4
    MMC_RAT_RECOVERY, 5
    MMC_HO_REQ, 6
    MMC_RAT_ACQUIRED, 7
    MMC_RAT_SUSPEND, 8
    MMC_RAT_RESUME, 9
    MMC_CMD_CNF, 10
    MMC_CMD_REJ, 11
    MMC_ST_UPD, 12
    MMC_RES_RACE, 13
    MMC_CELL_CHG, 14
End

Begin Enum, Data Response Type
    MODEM ACTIVE, 
    MODEM DORMANT, 
    MODEM IDLE, 
    MODEM SUSPENDED, 
    MODEM DISABLED, 
    MODEM ON 1X TRAFFIC, 
    MODEM RELEASED, 
End

Begin Enum, Attach Address Type
    IPv4 PDN, 1
    IPv6 PDN, 2
    IPv4 and IPv6 PDN, 3
End

Begin Enum, GeranBandIndT
    GERAN_DCS1800, 
    GERAN_PCS1900, 
End

Begin Enum, GeranArfcnT
    EXPLICIT_ARFCN, 
    EQUALLY_SPACED, 
    VARIABLE_BITMAP, 
End

Begin Enum, MmcIratHOCauseT
    MMC_REDIRECTION, 0
    MMC_RESELECTION, 1
    MMC_CELLCHANGEORDER, 2
    MMC_HANDOVER, 3
    MMC_HO_INVALID, 4
End

Begin Enum, MmcMeasStatusResultT
    MMC_MEAS_SUCCESS, 0
    MMC_MEAS_ACQ_FAIL, 1
    MMC_MEAS_BAND_NOT_SUPPORTED, 2
    MMC_MEAS_REG_FAIL, 3
    MMC_MEAS_INVALID_CMD, 4
End

Begin Enum, MmcRatStatusT
    MMC_IRAT_SUCCESS, 0,
    MMC_IRAT_ACQ_FAIL, 
    MMC_IRAT_PS_REG_FAIL, 
    MMC_IRAT_PS_SESSION_FAIL, 
    MMC_IRAT_FAIL, 
End

Begin Enum, GeranT304T
    MS100, 
    MS200, 
    MS500, 
    MS1000, 
    MS2000, 
    MS4000, 
    MS8000, 
End

Begin Enum, MmcRadioSwitchStateT
    RadioOff, 0,
    RadioOn, 
End

Begin Enum, Attaching Action Type
    Initial Attaching, 1
    Handover Attaching, 3
End

Begin Enum, PDP Type
    No PCSCF flag, 0
    Request PCSCF flag, 1
End

Begin Enum, sub module type
    GMSS sub module, 
    MEAS sub module, 
    CDMA sub module, 
    LTE sub module, 
End

Begin Enum, HO Network Type
    No network, 
    1X RTT, 
    HRPD network, 
    eHRPD network, 
    LTE network, 
End

Begin Enum, HO Action Type
    Initiated, 
    Completed, 
    Failed in HO, 
End

Begin Enum, Yes No Type
    No, 0
    Yes, 1
End

Begin Enum, Disconnect Response Type
    nothing to be disconnected, 0
    successfully, 1
End

Begin Enum, MeasTypeT
    MMC_IRAT_MEAS, 0
    MMC_RESEL_MEAS, 1
End

Begin Enum, MmcMeasResultStatusT
    MMC_MEAS_RES_SUCCESS, 0
    MMC_MEAS_RES_ACQ_FAIL, 1
    MMC_MEAS_RES_BAND_NOT_SUPPORT, 2
    MMC_MEAS_REG_FAIL, 3
    MMC_MEAS_CMD_INVALID, 
End

Begin Enum, MmcMeasCnfResultT
    MMC_MEAS_GO, 0
    MMC_MEAS_ABORT, 1
End

Begin Enum, IratCdmaStatusT
    IRAT_ACQ_FAIL, 0
    IRAT_ACQUIRED, 1
    IRAT_REGISTERED, 2
    IRAT_TRAFFIC, 3
    IRAT_SYSLOST, 4
    IRAT_DEEPSLP, 5
End

Begin Enum, prefer settingT
    Fixed, 
    Preferred, 
End

Begin Enum, MMC Debug Module Id
    All, 0
    GMSS Only, 1
    PKT Only, 2
    MEAS Only, 3
End

Begin Enum, Gmss Test Modes
    Set MCC Rsp MCC, 0
    Set MCC Rsp MNC, 1
    PKT RAT Disabling, 2
    MEAS Start Ind, 3
    MEAS End Ind, 4
    PKT PsState Cnf, 5
    PKT Ps Rsp, 6
End

Begin Enum, MmcRatApiIdT
    RAT_MMC_API_POWERUP_REQ, 0xA000,
    RAT_MMC_API_POWERDOWN_REQ, 
    RAT_MMC_API_RAT_ONLY_MODE_REQ, 
    RAT_MMC_API_RAT_3GPP_MODE_REQ, 
    RAT_MMC_API_ACQ_REQ, 
    RAT_MMC_API_MCC_SEARCH_REQ, 
    RAT_MMC_API_PS_REG_REQ, 
    RAT_MMC_API_NO_SERVICE_REQ, 
    RAT_MMC_API_CELL_GLOBAL_ID_RSP, 
    RAT_MMC_API_DATACONNECTION_CMD_REQ, 
    RAT_MMC_API_DEFAULTBEARER_REQ, 
    RAT_MMC_API_DEDICATEDBEARER_REQ, 
    RAT_MMC_API_BEARER_DISCONNECT_REQ, 
    RAT_MMC_API_BEARER_DETACH_REQ, 
    RAT_MMC_API_IRAT_MEAS_IND, 
    RAT_MMC_API_IRAT_SYSTEM_CHG_RSP, 
    RAT_MMC_API_IRAT_SIB8_MEAS_IND, 
    RAT_MMC_API_RAT_MEASCMD, 
    RAT_MMC_API_RAT_RESELMEASCMD, 
    RAT_MMC_API_STOP_IRAT_RATMEAS_CMD, 
    RAT_MMC_API_CELL_INFO_PS_REG_REQ, 
    RAT_MMC_API_CDMA_TXPWR_RSP, 
    RAT_MMC_API_IRAT_RESELMEAS_IND, 
    RAT_MMC_API_IRAT_HANDOVER_RSP, 
    RAT_MMC_API_RAT_HANDOVER_PS_REG_REQ, 
    RAT_MMC_API_SET_IDLEMODEMOBILITYINFO, 
    RAT_MMC_API_PACKET_STATISTICS_RSP, 
    RAT_MMC_API_PDN_TABLE_SETUP_REQ, 
    RAT_MMC_API_RAT_MODE_REQ, 
    MMCRPC_APMMCAPI_GMSS_MODE_SELECT_RSP, 0x9001,
    MMCRPC_APMMCAPI_GMSS_MODE_QUERY_RSP, 0x9002,
    MMCRPC_APMMCAPI_GMSS_POWER_UP_RSP, 0x9003,
    MMCRPC_APMMCAPI_GMSS_POWER_DOWN_RSP, 0x9004,
    MMCRPC_APMMCAPI_GMSS_SERVICE_STATUS_IND, 0x9005,
    MMCRPC_APMMCAPI_GMSS_SERVICE_STATUS_RSP, 0x9006,
    MMCRPC_APMMCAPI_PKT_CALL_SETUP_RSP, 0x9007,
    MMCRPC_APMMCAPI_PKT_DEFAULT_BEARER_RSP, 0x9008,
    MMCRPC_APMMCAPI_PKT_HRPD_1X_SETUP_RSP, 0x9009,
    MMCRPC_APMMCAPI_PKT_CALL_RCNT_IND, 0x900a,
    MMCRPC_APMMCAPI_PKT_CALL_DISCONNECT_RSP, 0x900b,
    MMCRPC_APMMCAPI_PKT_DEDICATED_SETUP_IND, 0x900c,
    MMCRPC_APMMCAPI_PKT_DEDICATED_SETUP_RSP, 0x900d,
    MMCRPC_APMMCAPI_PKT_BEARER_DISCONNECT_RSP, 0x900e,
    MMCRPC_APMMCAPI_PKT_BEARER_DISCONNECT_IND, 0x900f,
    MMCRPC_APMMCAPI_PKT_DETACH_RSP, 0x9010,
    MMCRPC_APMMCAPI_PKT_SET_PDN_TABLE_RSP, 0x9011,
    MMCRPC_APMMCAPI_PKT_APN_ENABLE_RSP, 0x9012,
    MMCRPC_APMMCAPI_PKT_PDN_UPDATE_RSP, 0x9013,
    MMCRPC_APMMCAPI_PKT_SET_QOS_TABLE_RSP, 0x9014,
    MMCRPC_APMMCAPI_PKT_GET_QOS_TABLE_RSP, 0x9015,
    MMCRPC_APMMCAPI_PKT_SET_SIP_NAI_PSWD_RSP, 0x9016,
    MMCRPC_APMMCAPI_GMSS_CS_CALL_INITIATE_RSP, 0x9017,
    MMCRPC_APMMCAPI_LTE_RPC_MSG, 0x9020,
End

Begin Enum, MmcApApiIdT
    AP_MMC_API_GMSS_MODE_SELECT_RSP, 0,
    AP_MMC_API_GMSS_MODE_QUERY_RSP, 
    AP_MMC_API_GMSS_POWER_UP_RSP, 
    AP_MMC_API_GMSS_POWER_DOWN_RSP, 
    AP_MMC_API_GMSS_SERVICE_STATUS_IND, 
    AP_MMC_API_GMSS_SERVICE_STATUS_RSP, 
    AP_MMC_API_PKT_CALL_SETUP_RSP, 
    AP_MMC_API_PKT_DEFAULT_BEARER_RSP, 
    AP_MMC_API_PKT_HRPD_1X_SETUP_RSP, 
    AP_MMC_API_PKT_CALL_RCN_IND, 
    AP_MMC_API_PKT_DEDICATED_SETUP_IND, 
    AP_MMC_API_PKT_DEDICATED_SETUP_RSP, 
    AP_MMC_API_PKT_BEARER_DISCONNECT_RSP, 
    AP_MMC_API_PKT_BEARER_DISCONNECT_IND, 
    AP_MMC_API_PKT_BEARER_DETACH_RSP, 
    AP_MMC_API_PKT_SET_PDN_TABLE_RSP, 
    AP_MMC_API_PKT_APN_ENABLE_RSP, 
    AP_MMC_API_PKT_PDN_UPDATE_RSP, 
    AP_MMC_API_PKT_SET_QOS_TABLE_RSP, 
    AP_MMC_API_PKT_GET_QOS_TABLE_RSP, 
    AP_MMC_API_PKT_DISCONNECT_RSP, 
    AP_MMC_API_LTE_RPC_MSG, 
    AP_MMC_API_SIP_SET_NAI_PSWD_RSP, 
End

Begin Enum, PDS GPS Fix Mode
    CP_PDS_GPS_FIX_MODE_UNKNOWN, 0,
    CP_PDS_GPS_FIX_MODE_MSA, 
    CP_PDS_GPS_FIX_MODE_MSB, 
    CP_PDS_GPS_FIX_MODE_MSS, 
    CP_PDS_GPS_FIX_MODE_AFLT, 
    CP_PDS_GPS_FIX_MODE_SPEED_OPTIMAL, 
    CP_PDS_GPS_FIX_MODE_ACCURACY_OPTIMAL, 
    CP_PDS_GPS_FIX_MODE_DATA_OPTIMAL, 
    CP_PDS_GPS_FIX_MODE_CONTROL_PLANE, 
    CP_PDS_GPS_FIX_MODE_COUNT, 
End

Begin Enum, PDS GPS Assistance Data
    CP_PDS_GPS_ASSISTANCE_DATA_ALMANAC, 
    CP_PDS_GPS_ASSISTANCE_DATA_EPHEMERIS, 
    CP_PDS_GPS_ASSISTANCE_DATA_LAST_LOCATION, 
    CP_PDS_GPS_ASSISTANCE_DATA_BASE_STATION_ALMANAC, 
    CP_PDS_GPS_ASSISTANCE_DATA_ALMANAC_CORRECTION, 
    CP_PDS_GPS_ASSISTANCE_DATA_SV_HEALTH_INFO, 
    CP_PDS_GPS_ASSISTANCE_DATA_NAVIGATION_MSG_BITS, 
    CP_PDS_GPS_ASSISTANCE_DATA_ALL_GPS_DATA, 
End

Begin Enum, PDS GPS Security State
    CP_PDS_GPS_SECURITY_DISABLE, 
    CP_PDS_GPS_SECURITY_ENABLE, 
End

Begin Enum, Band Class
    Band Class 0, 0
    Band Class 1, 1
    Band Class 2, 2
    Band Class 3, 3
    Band Class 4, 4
    Band Class 5, 5
    Band Class 6, 6
    Band Class 7, 7
    Band Class 8, 8
    Band Class 9, 9
    Band Class 10, 10
    Band Class 11, 11
    Band Class 12, 12
    Band Class 13, 13
    Band Class 14, 14
    Band Class 15, 15
    Band Class 16, 16
    Band Class Not Used, 255
End

Begin Enum, Pref Bands
    Eng Pref Band 0, 0
    Eng Pref Band 1, 1
    Eng Pref Band 0  Only, 2
    Eng Pref Band 1  Only, 3
    Eng Pref Band 2  Only, 4
    Eng Pref Band 3  Only, 5
    Eng Pref Band 4  Only, 6
    Eng Pref Band 5  Only, 7
    Eng Pref Band 6  Only, 8
    Eng Pref Band 7  Only, 9
    Eng Pref Band 8  Only, 10
    Eng Pref Band 9  Only, 11
    Eng Pref Band 10 Only, 12
    Eng Pref Band 11 Only, 13
    Eng Pref Band 12 Only, 14
    Eng Pref Band 13 Only, 15
    Eng Pref Band 14 Only, 16
    Eng Pref Band 15 Only, 17
    Eng Pref Band 16 Only, 18
    Eng No Pref Band, 255
End

Begin Enum, Block Bands
    A Block, 0
    B Block, 1
    C Block, 2
    D Block, 3
    E Block, 4
    F Block, 5
    G Block, 6
    H Block, 7
    I Block, 8
    J Block, 9
    K Block, 10
    L Block, 11
    M Block, 12
    N Block, 13
    All Blocks, 255
End

Begin Enum, Pref System
    Eng Pref Sys A, 0
    Eng Pref Sys B, 1
    Eng Pref Sys A Only, 2
    Eng Pref Sys B Only, 3
End

Begin Enum, System Select Type
    Home Only, 0
    Automatic, 1
    Automatic A, 2
    Automatic B, 3
End

Begin Enum, UI EncryptMode Enum
    CP_UI_ENCRYPTION_DISABLED, 0
    CP_UI_ORYX_ENABLED, 1
End

Begin Enum, ServOptBitmapInd
    SO_0_BITS, 0
    SO_4_BITS, 1
    SO_8_BITS, 2
End

Begin Enum, GatingRateSetType
    GATING_RATE_SET_00, 0
    GATING_RATE_SET_01, 1
    GATING_RATE_SET_10, 2
    GATING_RATE_SET_11, 3
End

Begin Enum, FchFrameSizeType
    FCH_FS_20MS, 0
    FCH_FS_5MS_AND_20MS, 1
End

Begin Enum, Support Type
    Not supported, 0
    Supported, 1
End

Begin Enum, DcchFrameSizeType
    DCCH_FS_5MS_OR_20MS, 0
    DCCH_FS_20MS, 1
    DCCH_FS_5MS, 2
    DCCH_FS_5MS_AND_20MS, 3
End

Begin Enum, ForSchRs1MultiplexOption
    For SCH 0 0x03 Mux option, 0x0001
    For SCH 0 0x809 Mux option, 0x0002
    For SCH 0 0x811 Mux option, 0x0004
    For SCH 0 0x821 Mux option, 0x0008
    For SCH 0 0x905 Mux option, 0x0010
    For SCH 0 0x909 Mux option, 0x0020
    For SCH 0 0x911 Mux option, 0x0040
    For SCH 0 0x921 Mux option, 0x0080
End

Begin Enum, ForSchRs2MultiplexOption
    For SCH 0 0x04  Mux option, 0x0100
    For SCH 0 0x80a Mux option, 0x0200
    For SCH 0 0x812 Mux option, 0x0400
    For SCH 0 0x822 Mux option, 0x0800
    For SCH 0 0x906 Mux option, 0x1000
    For SCH 0 0x90a Mux option, 0x2000
    For SCH 0 0x912 Mux option, 0x4000
    For SCH 0 0x922 Mux option, 0x8000
End

Begin Enum, RevSchRs1MultiplexOption
    Rev SCH 0 0x03 Mux option, 0x0001
    Rev SCH 0 0x809 Mux option, 0x0002
    Rev SCH 0 0x811 Mux option, 0x0004
    Rev SCH 0 0x821 Mux option, 0x0008
    Rev SCH 0 0x905 Mux option, 0x0010
    Rev SCH 0 0x909 Mux option, 0x0020
    Rev SCH 0 0x911 Mux option, 0x0040
    Rev SCH 0 0x921 Mux option, 0x0080
End

Begin Enum, RevSchRs2MultiplexOption
    Rev SCH 0 0x04  Mux option, 0x0100
    Rev SCH 0 0x80a Mux option, 0x0200
    Rev SCH 0 0x812 Mux option, 0x0400
    Rev SCH 0 0x822 Mux option, 0x0800
    Rev SCH 0 0x906 Mux option, 0x1000
    Rev SCH 0 0x90a Mux option, 0x2000
    Rev SCH 0 0x912 Mux option, 0x4000
    Rev SCH 0 0x922 Mux option, 0x8000
End

Begin Enum, GeoLocType
    GL_NO_SUPPORT, 0
    GL_AFLT, 1
    GL_AFLT_AND_GPS, 2
    GL_GPS, 3
End

Begin Enum, Encrypt Mode Enum
    BasicEncryptionSupported, 0
    BasicandEnhancedSupported, 1
End

Begin Enum, Channel Indicator Enum
    Ch Ind Reserved, 0
    Ch Ind FCH, 1
    Ch Ind DCCH, 2
    Ch Ind FCH and DCCH, 3
End

Begin Enum, NAM Select
    NAM1, 1
    NAM2, 2
End

Begin Enum, PendingRegEnum
    PEND_REG_NONE, 
    PEND_REG_PARM_CHANGE, 
    PEND_REG_POWERUP, 
End

Begin Enum, Voice Service Options
    Srv Opt 1  Basic 8K Vocoder, 1,
    Srv Opt 3  Enhanced 8K Vocoder, 3,
    Srv Opt 17 Basic 13K Vocoder, 17,
    Srv Opt EVRC-B, 68,
    Srv Opt EVRC-NW, 73,
    Srv Opt QUALCOMM 17, 0x8000,
    Reset All to default pref, 0,
End

Begin Enum, PA Gain States
    0 PA Gain States, 0
    1 PA Gain States, 1
    2 PA Gain States, 2
    3 PA Gain States, 3
End

Begin Enum, Digital Gain States
    0 Digital Gain States, 0
    1 Digital Gain States, 1
    2 Digital Gain States, 2
    3 Digital Gain States, 3
    4 Digital Gain States, 4
    5 Digital Gain States, 5
    6 Digital Gain States, 6
    7 Digital Gain States, 7
    8 Digital Gain States, 8
End

Begin Message, ETS
    Id, uint16, base=enum:ETS Id
    Message, union,  enum=Id
End

Begin Message, ETS CP Loopback Cmd
    Data, array, type=uint8, maxsize=273, size=end, columns=60
End

Begin Message, ETS CP SetBaud Cmd
    Cmd, uint8, base=enum:Ack/Now
    Baud, uint8, base=enum:Baud Rates
    Delay, uint8
End

Begin Message, ETS CP DBuf Loopback Cmd
    Loops, uint32, min=0, max=65535
    Words, uint16, min=1, max=200
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, ETS CP Data SetBaud Cmd
    UartNum, uint8, base=enum:Uart Numbers
    Baud, uint8, base=enum:Data Baud Rates
End

Begin Message, ETS CP Uart Select Cmd
    Uart0 Sel, uint8, base=enum:Uart Select
    Uart1 Sel, uint8, base=enum:Uart Select
    Uart2 Sel, uint8, base=enum:Uart Select
End

Begin Message, ETS Enable Generic Ack Cmd
    Enable, uint16, base=bool
End

Begin Message, ETS CP Set Device Cmd
    ETS  Device, uint8, base=enum:IopDeviceInfoId
    Data Device, uint8, base=enum:IopDeviceDataId
End

Begin Message, ETS CP Set Def Trace Spy Config Cmd
    Default Config, uint8
End

Begin Message, ETS CP Enter Calibration Mode Cmd
End

Begin Message, ETS CP Trace
    TraceId, uint16, base=enum:CP TraceIds
    TraceMsg, union,  enum=TraceId
End

Begin Message, CP Trace Cmd
    Enable, uint8, base=bool
End

Begin Message, ETS CP Spy
    SpyId, uint16, base=enum:CP SpyIds
    SpyMsg, union,  enum=SpyId
End

Begin Message, CP Spy Cmd
    Enable, uint8, base=bool
End

Begin Message, ETS CP Get Exe Fault Dump Log Cmd
End

Begin Message, ETS CP Clr Exe Fault Dump Log Cmd
    Clear Fault Log, uint8, base=enum:False/True, default=True
    Clear Fault Count, uint8, base=enum:False/True, default=True
End

Begin Message, ETS CP Check New Halt Log Cmd
End

Begin Message, ETS CP Enable Boot Dump RAM Cmd
    Disable/Enable, uint8, base=enum:False/True
    Save Setting To File, uint8, base=enum:False/True
End

Begin Message, ETS CP Exe Silent Log Setting Cmd
    Media Type, uint8, base=enum:Exe Silent Log Media Type,indent = 1
    Log Limit Size, uint32, base=16, default=0x00100000, indent = 1
    Ets Log Freeze, uint8, base=enum:False/True,  default=True, indent = 1
    Save Setting To File, uint8, base=enum:False/True, default=False, indent = 1
    Sd Card File Name, string, length=32   ,indent = 1
End

Begin Message, ETS CP Exe Silent Log Ctrl Cmd
    Control Type, uint8, base=enum:Exe Silent Log Crtl Type
End

Begin Message, ETS CP Check Task Stack Cmd
End

Begin Message, ETS CP BOOT Reset Flag Cmd
End

Begin Message, ETS CP BOOT Reset Cmd
End

Begin Message, ETS CP Get Memory Pool Info Cmd
End

Begin Message, ETS CP Enable Boot Dog Before Jump Cmd
End

Begin Message, ETS CP CP Buf Busy Trace Ctrl Cmd
    Enable, uint8, base=enum:False/True
End

Begin Message, ETS CP Event History Trace Ctrl Cmd
    Event History, uint8, base=enum:False/True
    Context History, uint8, base=enum:False/True
End

Begin Message, ETS CP Task Event Log Setting Cmd
    Enable All, uint8, base=enum:False/True
    Disable All, uint8, base=enum:False/True
    Event, uint8, base=enum:Thread Event Types
    Enable, uint8, base=enum:False/True
End

Begin Message, ETS CP Task Event Log Status Cmd
End

Begin Message, ETS CP Enable Message Status Cmd
End

Begin Message, ETS CP Version Cmd
End

Begin Message, ETS CP Memory Test Cmd
    Start, uint32
    Bytes, uint32, min=1
    BytePattern, uint8
    TestNum, uint8
End

Begin Message, ETS CP Peek Cmd
    Address, uint32
    Words (16), uint8, min=1, max=123
    Addr Adv, uint8, base=enum:MonAddrAdvs, default=Memory (advanced by 2 bytes)
End

Begin Message, ETS CP Poke Cmd
    Address, uint32
    Words (16), uint8, min=0, max=123
    Addr Adv, uint8, base=enum:MonAddrAdvs, default=Memory (advanced by 2 bytes)
    Data, array, type=uint16, maxsize=123, size=Words (16), columns=50
End

Begin Message, ETS CP Vocoder Test Cmd
    Download Address, uint32, default=0x01100000
    Upload Address, uint32, default=0x01180000
    Download Length (words), uint32, default=0x0
    Upload Length (words), uint32, default=0x0
    Vocoder Test Mode, uint8,  base=enum:Vocoder Test Modes,   Default=Encoder Only
    Enable Hw, uint8,  base=enum:No/Yes,               Default=Yes
    PacketSize, uint32, base=enum:Vocoder Packet Sizes, Default=Rate Set I (12 words)
    Serv Opt Max Rate, uint16, base=enum:Vocoder Max Rate,     Default=Full (4)
End

Begin Message, ETS CP Speech Write Cmd
    Sequence Num, uint32
    Msg Type, uint8, base=enum:Init/Data
    Write Addr, uint32
    Checksum, uint16
    Num Bytes, uint8, max=238
    Data, array, type=uint8, maxsize=238, size=Num Bytes, columns=60
End

Begin Message, ETS CP Speech Read Cmd
    Sequence Num, uint32
    Read Addr, uint32
    Num Bytes, uint8, max=240
End

Begin Message, ETS CP Fault Ctrl Cmd
    Control, uint16, base=enum:Disable/Enable
End

Begin Message, ETS CP DB Block Write Cmd
    Sequence Num, uint32
    Msg Type, uint32, base=enum:Init/Data/Done
    DB Id, uint32, base=enum:Block Database List
    Offset, uint32
    Checksum, uint16
    Num Bytes, uint16, max=259
    Data, array, type=uint8, maxsize=259, size=Num Bytes, columns=60
End

Begin Message, ETS CP DB Block Read Cmd
    Sequence Num, uint32
    DB Id, uint32, base=enum:Block Database List
    Offset, uint32
    Num Bytes, uint16, max=256
End

Begin Message, ETS CP CBP Version Cmd
End

Begin Message, ETS CP Pin Muxing
    Pin Select, uint8, base=enum:Muxed Pins
    Mode Select, union, enum=Pin Select
End

Begin Message, CP Pin Muxing DSP ICE or UIM Cmd
    Mode Select, uint8, base=enum:DSP ICE/UIM
End

Begin Message, ETS CP Set Clear GPIO Cmd
    GPIO Num, uint8, base=10, min=0, max=171
    Action, uint8, base=enum:GPIO Actions
End

Begin Message, ETS CP Read GPIO Cmd
    GPIO Num, uint8, base=10, min=0, max=171
End

Begin Message, ETS CP Rev Channel Data Cmd
    ChnlDataRdy, uint16, base=16
    FundRate, uint16, base=10
    Words, uint16, min=1, max=200
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, ETS CP Jump to Loader Cmd
End

Begin Message, ETS CP Jump to Offline Cmd
End

Begin Message, ETS CP Monitor GPIO Cmd
    GPIO Num, uint8, base=10, min=0, max=171
End

Begin Message, ETS CP Boot Version Cmd
End

Begin Message, ETS CP Boot Compatibility Cmd
End

Begin Message, ETS CP Boot to Loader Cmd
End

Begin Message, ETS CP CBP Compatibility Cmd
    Id, uint16, base=enum:CBP Compatibility ID, default=CBP_COMPATIBILITY_ID
End

Begin Message, ETS CP Configuration Info Cmd
End

Begin Message, ETS CP Bitwise Operation Cmd
    Address, uint32
    Operator, uint8,base=enum:MonOperators
    Mask (16bit), uint16
End

Begin Message, ETS CP Timestamp Ctrl Cmd
    Cmd, uint8, base=enum:INIT/START/RESET/SPY
End

Begin Message, ETS CP Timestamp Setup Cmd
    Cmd, uint8, base=enum:STATUS/IDs/ALL
    Mode, uint8, base=enum:Disable/Enable
    NumIds, uint8
    Id, array, type=uint8, maxsize=16, size=NumIds
End

Begin Message, ETS CP Cache Traces Cmd
    Mode, uint8, base=enum:Uncache/Cache
    NumTraces, uint8
    Trace Id, array, type=uint16, maxsize=64, size=NumTraces, columns=30
End

Begin Message, ETS CP Cache Spies Cmd
    Mode, uint8, base=enum:Uncache/Cache
    NumSpies, uint8
    Spy Id, array, type=uint16, maxsize=64, size=NumSpies, columns=30
End

Begin Message, ETS CP Dump Traces Cmd
End

Begin Message, ETS CP DSP JTAG Power Cmd
    DSP Processor, uint8, base=enum:DspProcId
    JTAG Power, uint8, base=enum:Off/On
End

Begin Message, ETS CP DSP Sim Init Cmd
End

Begin Message, ETS CP DSP Sim Cmd Cmd
    Id, uint16
    Msg, array, type=uint16, maxsize=150, size=end , columns=30
End

Begin Message, ETS CP DSP Sim Execute Cmd
    PcgNum, uint8, default=0, max=15
End

Begin Message, ETS CP Test DSPM Boot Code Cmd
    Step, uint32, base=enum:BootStep, default=Step 1
End

Begin Message, ETS CP Test DSPV Boot Code Cmd
    Step, uint32, base=enum:BootStep, default=Step 1
End

Begin Message, ETS CP Profile Start Cmd
    Start Trigger, uint8,  base=enum:Start Triggers, default=Immediate, indent=1
    Start Thread Id, uint16, base=enum:CP Thread Ids, default=0, indent=1
    Start Time (ms), uint32, scale=Q5, default=10, indent=1
    Stop Trigger, uint8,  base=enum:Stop Triggers, default=When Database Full, indent=1
    Stop Thread Id, uint16, base=enum:CP Thread Ids, default=0, indent=1
    Stop Time (ms), uint32, scale=Q5, max=341000.000, default=10000, indent=1
    Capture SCHEDULER, uint8,  base=bool, default=True, indent=1
    Spy Interval (ms), uint16, base=10,   default=1000, indent=1
    Display Task Ids, uint8,  base=bool, default=True, indent=1
    Display LISR Ids, uint8,  base=bool, default=True, indent=1
    Display HISR Ids, uint8,  base=bool, default=True, indent=1
    Display SCHEDULER, uint8,  base=bool, default=True, indent=1
    Profile MonIdle Only, uint8, base=bool, default=False, indent=1
    Periodic Data Reset, uint8, base=bool, default=False, indent=1
End

Begin Message, ETS CP Profile Stop Cmd
End

Begin Message, ETS CP Profile Get Data Size Cmd
End

Begin Message, ETS CP Profile Get Debug Info Cmd
End

Begin Message, ETS CP Profile Set Spy Display Filters Cmd
    Spy Interval (ms), uint16, base=10,   default=1000, indent=1
    Display Task Ids, uint8,  base=bool, default=True, indent=1
    Display LISR Ids, uint8,  base=bool, default=True, indent=1
    Display HISR Ids, uint8,  base=bool, default=True, indent=1
    Display SCHEDULER, uint8,  base=bool, default=True, indent=1
End

Begin Message, ETS CP Memory Copy Cmd
    Source Address, uint32, base=16
    Destination Address, uint32, base=16
    Num Bytes, uint16, base=10, default=0
End

Begin Message, ETS CP MonPrintf Ctrl Cmd
    Disable Or Enable, uint8, base=enum:FALSE/TRUE
    Save Setting To File, uint8, base=enum:FALSE/TRUE
End

Begin Message, ETS CP Profile Set Mode Cmd, BitPack
    Run Indefinitely, bit, count=6,base=enum:Off/On,pos=none
    Auto Start, bit, count=1,base=enum:Off/On,pos=none
    Statistics Type, bit,count=1,base=enum:Performance Stats and Thread Id History/Thread Id History Only,pos=none
End

Begin Message, ETS CP Profile Get Mode Cmd
End

Begin Message, ETS CP Mpu Populated Block Ctrl Cmd
    BlockAddr, uint32,
    BlockNum, uint8, base=10
    BlockSize, uint8, base=enum:MpuBlockSizeT
    EnableRead, uint8, base=enum:0=dis/1=enb, default=dis
    EnableWrite, uint8, base=enum:0=dis/1=enb, default=dis
    MasterMask, uint8, default=0x7F
End

Begin Message, ETS CP Mpu Unpopulated Segment Ctrl Cmd
    SegNum, uint8, base=10
    SegSize, uint8, base=enum:MpuSegSizeT
    EnableRead, uint8, base=enum:0=dis/1=enb, default=dis
    EnableWrite, uint8, base=enum:0=dis/1=enb, default=dis
    MasterMask, uint8, default=0x7F
End

Begin Message, ETS CP Enable DSPV JTAG Cmd
    Enable, uint8, base=enum:FALSE/TRUE, default=TRUE
End

Begin Message, ETS CP Enable DSPM JTAG Cmd
    Enable, uint8, base=enum:FALSE/TRUE, default=TRUE
End

Begin Message, ETS CP CBP SW Version Cmd
End

Begin Message, ETS CP Key Press Cmd
    Key State, int8, base=enum:Down/Up
    Key Id, int8, base=enum:Key State
End

Begin Message, ETS CP Sim Msg Cmd
    Task Id, uint8,  base=enum:CP Thread Ids
    Mbox Id, uint8,  base=10
    Msg Id, uint16, base=10
    Msg Data, array,  type=uint8, maxsize=60, size=end, columns=60
End

Begin Message, ETS CP Reset Processor Cmd
    Processor Id, uint8, base=enum:Processor Id
End

Begin Message, ETS CP Sleep Control Cmd
    Light Sleep, uint8, base=enum:Disable/Enable
    Deep Sleep, uint8, base=enum:Disable/Enable
End

Begin Message, ETS CP Sleep Enter Cmd
    Interface, uint8, base=enum:1xRTT/EVDO, Default=1xRTT
    Sleep Duration in 32K ticks, uint32, default=0x01000000
    Schedule Resync Interrupt, uint8, base=enum:No/Yes, Default=No
End

Begin Message, ETS CP Sleep Cancel Cmd
    Interface, uint8, base=enum:1xRTT/EVDO, Default=1xRTT
    Wake CS, uint8, base=enum:No/Yes, Default=Yes
End

Begin Message, ETS CP Sleep Veto Ctrl Cmd
    Interface, uint8, base=enum:1xRTT/EVDO, Default=1xRTT
    Control, uint8, base=enum:Resume/Suspend, Default=Resume
    Veto Bit Map, uint64
End

Begin Message, ETS CP MMU Control Cmd
    MMU Bit Map, uint32
    enaled, uint32
End

Begin Message, ETS CP Bitwise 32 Operation Cmd
    Address, uint32
    Operator, uint8,base=enum:MonOperators
    Mask (16bit), uint32
End

Begin Message, ETS CP MON MMU get TLB Entry Cmd
    Address, uint32
    Parameters, uint32
    Flag, uint32
End

Begin Message, ETS CP MON MMU get TLB Config Cmd
End

Begin Message, ETS CP Get Features Support Cmd
End

Begin Message, ETS CP Get Entire TLB Cmd
End

Begin Message, ETS CP Memory Bandwidth Cmd
    Start Addr, uint32
    Number of Bytes, uint32,
    Xfer width, uint8, base=enum:XferWidth
    Burst Size, uint8, base=enum:BurstSize
    Read/Write, uint8, base=enum:ReadWrite
End

Begin Message, ETS CP MON Shmem Test By Timer Cmd
    Loop Timermode Iop channel, uint8, base=enum:IopChannelType
    Loop Timermode Schedule Time, uint32, base=10, min=10, max=1000
    Loop Timermode transfer length, uint32, base=10, min=512, max=2048
    Loop Timermode Control, uint8, base=enum:switch,indent=1
End

Begin Message, ETS CP MON Shmem Test By Task Cmd
    Loop Taskmode Iop channel, uint8,base=enum:IopChannelType
    Loop Taskmode interval, uint32,base=10,min=10,max=1000
    Loop Taskmode tranfer length, uint32,base=10,min=512,max=2048
    Loop Task control, uint8,base=enum:switch,indent=1
End

Begin Message, ETS CP MON ESPI Test Cmd
    ESPI Command, uint8,  base=enum:ESPI Commands
    Block Size, uint16, default=512
    Num Blocks, uint16, default=1
    Enable Abort Test, uint8,  base=enum:0=dis/1=enb
    Abort Error Type, uint8,  base=enum:Abort Type
End

Begin Message, ETS CP MON SDIO Test Cmd
    SDIO Type, uint8,  base=enum:SDIO Types
    Block Size, uint16, default=512
    Num Blocks, uint16, default=50
    File Size, uint32, default=1000000
    SDIO Command, uint8,  base=enum:SDIO Commands
    Iterations, uint16, base=10
End

Begin Message, ETS CP MON Get USB IDs Cmd
End

Begin Message, ETS CP Get Unit Build Info Cmd
    Unit, uint16, base=enum:CP Full Unit List
End

Begin Message, ETS CP Memory Addresses Cmd
    Mode, uint32, base=enum:CP Memory Dump Mode
End

Begin Message, ETS CP CP or Boot Mode Cmd
End

Begin Message, ETS CP Hwd Profile CP Start Cmd
    Start Trigger, uint8,  base=enum:Hwd Profile Start Triggers, default=Immediate, indent=1
    Stop Trigger, uint8,  base=enum:Hwd Profile Stop Triggers,  default=None, indent=1
    Spy Interval (ms), uint16, base=10, default=1000, min=20, indent=1
    Periodic Data Reset, uint8,  base=bool, default=False, indent=1
End

Begin Message, ETS CP Hwd Profile CP Stop Cmd
End

Begin Message, ETS CP Hwd Profile CP Get Spy Data Cmd
End

Begin Message, ETS CP Hwd Profile DSPM Start Cmd
    Start Trigger, uint8,  base=enum:Hwd Profile Start Triggers, default=Immediate, indent=1
    Stop Trigger, uint8,  base=enum:Hwd Profile Stop Triggers,  default=None, indent=1
    Spy Interval (ms), uint16, base=10, default=1000, min=20, indent=1
    Periodic Data Reset, uint8,  base=bool, default=False, indent=1
End

Begin Message, ETS CP Hwd Profile DSPM Stop Cmd
End

Begin Message, ETS CP Hwd Profile DSPM Get Spy Data Cmd
End

Begin Message, ETS CP Hwd Profile DSPV Start Cmd
    Start Trigger, uint8,  base=enum:Hwd Profile Start Triggers, default=Immediate, indent=1
    Stop Trigger, uint8,  base=enum:Hwd Profile Stop Triggers,  default=None, indent=1
    Spy Interval (ms), uint16, base=10, default=1000, min=20, indent=1
    Periodic Data Reset, uint8,  base=bool, default=False, indent=1
End

Begin Message, ETS CP Hwd Profile DSPV Stop Cmd
End

Begin Message, ETS CP Hwd Profile DSPV Get Spy Data Cmd
End

Begin Message, ETS CP Measure ISR Time Start Cmd
    Spy Interval (ms), uint16, base=10,  default=1000, indent=1
    Hisr Spy Threshold (us), uint32, base=10, default=1000, indent=1
    Irq Spy Threshold (us), uint32, base=10, default=1000, indent=1
    Fiq Spy Threshold (us), uint32, base=10, default=1000, indent=1
End

Begin Message, ETS CP Measure ISR Time Stop Cmd
End

Begin Message, ETS CP Set Spy Decimate Cmd
    Spy Id, uint8, base=enum:Spy Ids, indent=1
    Decimate Value, uint8, base=10, default=5, indent=1
End

Begin Message, ETS CP BB Config Cmd
    Mode, uint8,  base=enum:BB Config Mode
    Start Addr, uint32, max=0x03ffffff
    Stop Addr, uint32, max=0x03ffffff
End

Begin Message, ETS CP BB Write Cmd
    Sequence Num, uint32, default=1
    Num Words, uint16, max=64
    Data, array,    type=uint16, maxsize=64, size=Num Words, columns=60
End

Begin Message, ETS CP BB Read Cmd
    Sequence Num, uint32, default=1
    Num Words, uint16, max=64
End

Begin Message, ETS CP BB Checksum Cmd
    Checksum, uint16
End

Begin Message, ETS CP Boot vRM Update Cmd
End

Begin Message, ETS CP Boot Erase UA Flag Cmd
End

Begin Message, ETS CP Boot vRM Start Cmd
End

Begin Message, ETS CP Boot Reboot Cmd
End

Begin Message, ETS CP FOTA Update Cmd
End

Begin Message, ETS CP Flash Id Cmd
End

Begin Message, ETS CP Flash Erase Cmd
    Section Type, uint8, base=enum:Flash Erase Sections
End

Begin Message, ETS CP Flash Program Cmd
    Sequence Num, uint32
    Msg Type, uint8,  base=enum:Init/Data
    Section Type, uint8,  base=enum:Flash Program Sections
    Checksum, uint16
    Num Bytes, uint16, max=460
    Data, array,  type=uint8, maxsize=460, size=Num Bytes, columns=60
End

Begin Message, ETS CP Flash Section Info Cmd
End

Begin Message, ETS CP Flash Addr Erase Cmd
    Start Address, uint32
    Erase size, uint32
End

Begin Message, ETS CP Flash Addr Program Cmd
    Sequence Num, uint32
    Msg Type, uint8,  base=enum:Init/Data
    Start Address, uint32
    Program size, uint32
    Checksum, uint16
    Num Bytes, uint16, max=960
    Data, array,  type=uint8, maxsize=960, size=Num Bytes, columns=60
End

Begin Message, ETS CP Flash Get Status Cmd
End

Begin Message, ETS ASICBOOT_AP_MSGID_ACK Cmd
End

Begin Message, ETS ASICBOOT_AP_MSGID_NACK Cmd
End

Begin Message, ETS ASICBOOT_AP_MSGID_HANDSHAKE Cmd
End

Begin Message, ETS ASICBOOT_AP_MSGID_HWDREG Cmd
    ChipID, uint32, base=16
    ChipID_Mask, uint32, base=16
    RegWidth, uint8
    OpCode, uint8,  base=enum:WRITE/SET/CLEAR/DELAY
    RegAddr, uint32, base=16
    RegData, uint32, base=16
End

Begin Message, ETS ASICBOOT_AP_MSGID_HWDREG_PROG Cmd
    BaudRateChange, uint8, base=enum:FALSE/TRUE
End

Begin Message, ETS ASICBOOT_AP_MSGID_HEADER Cmd
    DnldAddr, uint32
    DnldLength, uint32
    MaxDataMsgLen, uint16
End

Begin Message, ETS ASICBOOT_AP_MSGID_DATA Cmd
    DataDnld, array,  type=uint8, size=end, maxsize=1000, columns=10
    Checksum, uint16, base=16
    SeqNum, uint16, base=16
End

Begin Message, ETS ASICBOOT_AP_MSGID_CHECKSUM Cmd
    SectionChecksum, uint32, base=16
End

Begin Message, ETS ASICBOOT_AP_MSGID_COMPLETE Cmd
    ExecuteAddr, uint32, base=16
End

Begin Message, ETS ASICBOOT_AP_MSGID_PEEK Cmd
    PeekLen, uint8
    PeekAddr, uint32
End

Begin Message, ETS ASICBOOT_AP_MSGID_POKE Cmd
    PokeWidth, uint8
    PokeAddr, uint32
    PokeData, uint32
End

Begin Message, ETS CP DB Clear Cmd
    DB Id, uint8, base=enum:CpDbType
End

Begin Message, ETS CP DB Cache Cmd
    DB Id, uint8, base=enum:CpDbType
End

Begin Message, ETS CP DB Flush Cmd
    DB Id, uint8, base=enum:Data Base Ids
End

Begin Message, ETS CP DB Read
    DB Id, uint8, base=enum:CP DB Read Type
    DbRead, union, enum=DB Id
End

Begin Message, CP DB Read CP Read Cmd
    Segment, uint16,  base=enum:CP DB Segments
    Offset, uint16, base=10
    Bytes, uint16, base=10, max=548
End

Begin Message, CP DB Read RF Read Cmd
    Segment, uint16,  base=enum:RF DB Segments
    Offset, uint16, base=10
    Bytes, uint16, base=10, max=300
End

Begin Message, ETS CP DB Write
    DB Id, uint8, base=enum:CP DB Write Type
    DbWrite, union, enum=DB Id
End

Begin Message, CP DB Write CP Write Cmd
    Segment, uint16,  base=enum:CP DB Segments
    Offset, uint16, base=10
    Bytes, uint16, base=10, max=548
    Write Thru, uint8,  base=bool
    Data, array,  type=uint8, maxsize=548, size=Bytes, columns=60
End

Begin Message, CP DB Write RF Write Cmd
    Segment, uint16,  base=enum:RF DB Segments
    Offset, uint16, base=10
    Bytes, uint16, base=10, max=300
    Write Thru, uint8,  base=bool
    Data, array,  type=uint8, maxsize=300, size=Bytes, columns=60
End

Begin Message, ETS CP HWD Init Cmd
End

Begin Message, ETS CP Pwr Savings Mode Config Cmd
    Pwr Saving Mode, uint8,  base=enum:Power Save Modes
    Main Rx, uint8,  base=enum:Ext Rf Ctrl Modes, default=Automatic
    Div Rx, uint8,  base=enum:Ext Rf Ctrl Modes, default=Automatic
    Main Tx, uint8,  base=enum:Ext Rf Ctrl Modes, default=Automatic
End

Begin Message, ETS CP Pwr Savings Get Mode Cmd
    RfMode, uint8, base=enum:1xRTT/EVDO, default=1xRTT
End

Begin Message, ETS CP CG_CK MUX Set Cmd
    Clock, uint16, base=enum:CG_CK Mux
End

Begin Message, ETS CP Hwd USB Device Control Cmd
    Enable, uint8, base=enum:Off/On
End

Begin Message, ETS CP PLL Reconfig Cmd
    M value, uint16
    N value, uint16
End

Begin Message, ETS CP Rf Driver Command Cmd
    Code0, uint16, default=0
    Code1, uint16, default=0
End

Begin Message, ETS CP RSSI Correction Cmd
    RSSI Correction Table, record, type=RSSI Correction Data, maxsize=14
End

Begin Record, RSSI Correction Data
    Offset (dB), int16, scale=Q7
    Slope (dB), int16, scale=Q7
End

Begin Message, ETS CP Rx AGC Config Cmd
    Ctrl Mode, uint8,  base=enum:Rx AGC Ctrl
    Rf Mode, uint8,  base=enum:Rf Mode Type
    Rf Path, uint8,  base=enum:Rf Paths, default=Main
End

Begin Message, ETS CP Tx AGC Config Cmd
    Ctrl Mode, uint8,  base=enum:RF Reg Ctrl
    Rf Mode, uint8,  base=enum:Rf Mode Type
    Method, uint16, base=enum:Hw Value/dB Gain, default=Hw Value
    HW Val, uint32, default=0x7ff
    Hyst State, uint16, base=enum:AGC Hyst Gain States, default=Low Gain
    Power (dBm), int16,  scale=Q6
End

Begin Message, ETS CP Rx AGC Gain Set Cmd
    Ctrl Mode, uint8, base=enum:Automatic/Manual
    Rf Mode, uint8, base=enum:Rf Mode Type
    Rf Path, uint8, base=enum:Rf Paths, default=Main
    RxAGC Gain State, uint8, base=enum:DAgcGainState
End

Begin Message, ETS CP Tx Test Cmd
    Tx Test Mode, uint8, base=enum:Off/On
    Rf Mode, uint8, base=enum:1xRTT/EVDO
    Rate, uint8, base=enum:Tx Rate
    Device, uint8, base=enum:Tx Path
End

Begin Message, ETS CP Cal Initialize Cmd
    Calib Mode, uint8, base=enum:CalibModeT
End

Begin Message, ETS CP PLL Channel Config Cmd
    Ctrl Mode, uint8,  base=enum:RF Reg Ctrl
    Ctrl Unit, uint8, base=enum:Ctrl Unit Type, default=Both
    Rf Mode, uint8, base=enum:1xRTT/EVDO
    Mdm Main Rx, uint8, base=enum:Rf Rx Paths, default=Main
    Mdm Div Rx, uint8,  base=enum:Rf Rx Paths, default=Main
    Band, uint8,  base=enum:Cdma Band, default=BAND_CLASS_0
    Channel, uint16, base=10, max=2047
End

Begin Message, ETS CP Get PLL Channel Cmd
    Rf Path, uint8,	base=enum:Rf Rx Paths, default=Main Rx
End

Begin Message, ETS CP Tx Tone Test Cmd
    Enable, uint8, base=enum:Off/On, default = On
    Amplitude, uint16, base=16
    RfMode, uint8, base=enum:1xRTT/EVDO, default=1xRTT
    Tx Path, uint8, base=enum:Tx Path Bit, default=Aux Tx Path
End

Begin Message, ETS CP Transmitter Ctrl Cmd
    Device, uint8, base=enum:Tx Path
    Interface, uint8, base=enum:1xRTT/EVDO
    Mode, uint8, base=enum:Off/On, default=On
End

Begin Message, ETS CP Receiver Ctrl Cmd
    Device, uint8, base=enum:Rx Path
    Interface, uint8, base=enum:1xRTT/EVDO
    Mode, uint8, base=enum:Off/On, default=On
End

Begin Message, ETS CP Read Current Temperature Cmd
    Device, uint8, base=enum:Tx Path
End

Begin Message, ETS CP Read Current Batt Voltage Cmd
End

Begin Message, ETS CP Read Current Tx Power Cmd
    Device, uint8, base=enum:Tx Path
End

Begin Message, ETS CP Cal Init NVRAM Cmd
End

Begin Message, ETS CP Change RF Constants Cmd
    Tx Mdm Delay (Q3), uint16, base=10, default=552
    TCXO Settle (ms), uint16, base=10, default=0
    SlpOvr to ResyncDly (ticks), uint16, base=10, default=20
    Rx Vco Settle (ms), uint16, base=10, default=3
    Rx Slotted Backoff (ms), uint16, base=10, default=7
    Rx Agc Settle (symb), uint16, base=10, default=9
    Mini Acq Time (us), uint16, base=10, default=2800
    Channel Normalization time (us), uint16, base=10, default = 1700
    Tx Dac Filter Tune Value, uint16, base=16, default = 0x14
    Tx Macro Ctrl Delay, int32, base=10, default = 4224
    Tx Off Macro Drv Delay, int32, base=10, default = 0
    Tx Off Macro 1x Delay, int32, base=10, default = 0
    Tx Off Macro DO Delay, int32, base=10, default = 0
    Tx TPC Timing Adjust, int32, base=10, default = 0
    Tx TPC Timing Adjust Value, int32, base=10, default = 0
    Tx OFF Trailing Zeros 1x Value, int32, base=10, default = 0
    Tx OFF Trailing Zeros DO Value, int32, base=10, default = 0
End

Begin Message, ETS CP Get RF Constants Cmd
End

Begin Message, ETS CP Set RxTx IQ Swap Cmd
    Band, uint8, base=enum:RfBand, default=BAND_A
    RxSwap, uint8, base=enum:No Swap/Swap, default=No Swap
    TxSwap, uint8, base=enum:No Swap/Swap, default=No Swap
    DivRxSwap, uint8, base=enum:No Swap/Swap, default=No Swap
End

Begin Message, ETS CP Get RxTx IQ Swap Cmd
    Band, uint8, base=enum:RfBand, default=BAND_A
End

Begin Message, ETS CP Set Tx Power Limits Cmd
    Band, uint8,  base=enum:Cdma Band, default=BAND_CLASS_0
    Min dBm, int16, scale=Q6, default=-55
    Max dBm, int16, scale=Q6, default=23.8
End

Begin Message, ETS CP Get Rx AGC Default Hysteresis Cmd
    Band, uint8,  base=enum:Cdma Band, default=BAND_CLASS_0
    Rf Path, uint8,	base=enum:Rf Paths, default=Main
    Defaults for, uint8,  base=enum:No IMD/IMD
End

Begin Message, ETS CP TxAgc Alternative Thresholds Cmd
    Ctrl Mode, uint8,  base=enum:RF Reg Ctrl
    Thres1Low dB, int16,  scale=Q6
    Thres1High dB, int16,  scale=Q6
    Thres2Low dB, int16,  scale=Q6
    Thres2High dB, int16,  scale=Q6
End

Begin Message, ETS CP RFC Rx AGC Gain Table Select Cmd
    Mode, uint8, base=enum:1xRTT/EVDO
    MainTable, uint8, base=enum:RmcImdTableCalib, default=Automatic
    DivTable, uint8, base=enum:RmcImdTableCalib, default=Automatic
    SecTable, uint8, base=enum:RmcImdTableCalib, default=Automatic
End

Begin Message, ETS 1x Rx Agc Get Parms Cmd
End

Begin Message, ETS 1x Tx Agc Get Parms Cmd
End

Begin Message, ETS CP AFC Config Cmd
    Ctrl Mode, uint8, base=enum:AFC Reg Ctrl
    Rf Mode, uint8, base=enum:Rf Mode Type
    AfcErrHz, int32, default = 0x0000
End

Begin Message, ETS CP AFC Get Parms Cmd
    Rf Mode, uint8, base=enum:Rf Mode Type
End

Begin Message, ETS DSPM TxAGC Closed Loop Status Cmd
    TxAGC Closed Loop, uint16, base=enum:TxAGC Closed Loop Ctrl
End

Begin Message, ETS CP Rx Fine Gain Control Cmd
    Ctrl Mode, uint8,  base=enum:Xmm Rx AGC Ctrl
    Rf Mode, uint8,  base=enum:1xRTT/EVDO, default=EVDO
    Rf Path, uint8,  base=enum:Rf Paths, default=Main
    Method, uint8,  base=enum:Gain State/dB Gain, default=Gain State
    AGC Gain State, uint8,  base=enum:DAgcGainState
    Total Gain dB, int16,  scale=Q3
    Analog Gain dB, int16,  scale=Q3
End

Begin Message, ETS CP RxTx RF Alg Control Cmd
    Interface, uint8, base=enum:1x/EvDO, default=EvDO
    HwdRfPllFreqAdjustTxAFCEn, uint8, base=bool, default=True
    HwdRfPllFreqAdjustRxAFCEn, uint8, base=bool, default=True
    HwdRfPllFreqAdjustBctEn, uint8, base=bool, default=True
    HwdRfPllFreqAdjustPulsedEn, uint8, base=bool, default=True
    HwdRfDllAdjustTxAdretEn, uint8, base=bool, default=True
    HwdRfDllAdjustBctAdretEn, uint8, base=bool, default=True
    AdjCntRegAsyncUpdateEn, uint8, base=bool, default=True
    AdjCntRegPeriodicUpdtEn, uint8, base=bool, default=True
    AdjCntRegPeriodicUpdtTC, uint8, base=enum:0/1/2/3/4, default=3
    HwdRfPllFreqAdjustLtlUpdtEn, uint8, base=bool, default=True
    HwdRfDllAdjustAdretOverrideEn, uint8, base=bool, default=False
    HwdRfDllAdjustAdretOverrideVal, int8, base=10, default = 0
    AdjCntRegInitialOverrideVal, uint16, base=16, default = 0x24E
    AdjCntRegInitialOverrideEn, uint8, base=bool, default=False
    HwdRfPllFreqAdjustAfcAdjOverrideEn, uint8, base=bool, default=False
    HwdRfPllFreqAdjustAfcAdjOverrideVal, int16, base=10, default = 0
End

Begin Message, ETS CP_SYS_CPBUF_TEST_GET_CMD Cmd
    type, uint8, base=enum:CpBufTypeT
End

Begin Message, ETS CP_SYS_CPBUF_TEST_FREE_CMD Cmd
    freeAllFlag, uint8, base=enum:0 FALSE/1 TRUE, default=0 FALSE
    freeIndex, uint32, base=10
End

Begin Message, ETS CP_SYS_CPBUF_TEST_STATS_CMD Cmd
    type, uint8, base=enum:CpBufStatusT
End

Begin Message, ETS CP_SYS_CPBUF_STATUS_CMD Cmd
    ResetAllWaterMarksAfterUse, uint8, base=enum:No/Yes, default=No
End

Begin Message, ETS CP SYS Transit 1x to Do Cmd
End

Begin Message, ETS CP SYS Transit Do to 1x Cmd
End

Begin Message, ETS CP SYS Register Sys Time Cmd
    RegCancel, uint8,  base=enum:RegCancelEnum, default=REGISTER
    ActionTime, uint32, base=16
    SlotNum, uint16, base=10
    TagType, uint32,  base=enum:TestTagEnum
    Event, uint32,  base=enum:SysEventTypeT
    TaskId, uint32,  base=enum:ExeTaskIdT
    SignalId, uint32,  base=16, default=0
    Routine, uint32, base=16, default=0
End

Begin Message, ETS CP SYS Set FrameOffset Cmd
    FrameOffset, uint8,  default=4, base=10
End

Begin Message, ETS CP SYS Time DO Get Cmd
End

Begin Message, ETS CP SYS 9MHz Cnt Init Cmd
End

Begin Message, ETS CP SYS TimeData Get Cmd
End

Begin Message, ETS CP Browser Call Cmd
    I am going to do, uint8, base=enum:Action, default = Hybrid Registration
    IPv4 Src Addr, uint32, base=16, default=0
    IPv4 Dst Addr, uint32, base=16, default=0
    IPv6 Src Addr, array, type=uint32, maxsize=4, size=4
    IPv6 Dst Addr, array, type=uint32, maxsize=4, size=4
    PDN ID, uint8,  base=10, default=0
    PDN type, uint8,	base=enum:DefaultBearerAddrType, default=IPv4 and IPv6
    Attach type, uint8,  base=enum:DefaultBearerAttachType, default=Initial Attach
    APN String, string, size=end, columns=24, default=IMS-APN
End

Begin Message, ETS CP Browser End Cmd
    Graceful, uint8, base=enum:False/True
End

Begin Message, ETS CP Browser Idle Time Out Cmd
    Channel Type, uint8, base=enum:Primary Traffic/Secondary Traffic, default=Primary Traffic
    Time Out in second, uint16, base=10, default=100
End

Begin Message, ETS CP PPP Open Cmd
    Service Option, uint16, base=enum:Service Options, default=Srv Opt 33 High Speed Packet Data
    User ID, string, size=end, columns=24, rows=1, default=qnc
    Password, string, size=end, columns=24, rows=1, default=qnc
    Called Number, string, size=end, columns=33, rows=1, default=#777
End

Begin Message, ETS CP PPP Close Cmd
End

Begin Message, ETS CP Socket Create Cmd
    SocketType, uint8, base=enum:UDP/TCP, default = TCP
    SocketId, int16, base=10, default=100
End

Begin Message, ETS CP Socket Bind Cmd
    Sap, uint8, base=10
End

Begin Message, ETS CP Socket Connect Cmd
    sap, uint8, base=10
    mode, uint8, base=enum:Active/Listen
    ipAddr, uint32, base=16
    Port, uint16, base=16
End

Begin Message, ETS CP Socket Close Cmd
    sap, uint8, base=10
    graceful, uint8, base=enum:False/True
End

Begin Message, ETS CP DO handoff 1X Request Cmd
End

Begin Message, ETS CP PPP Route Set Cmd
    route, uint8, base=enum:PPP Route Type, default = Default
End

Begin Message, ETS CP TCP ACK Tag Rate Get Cmd
End

Begin Message, ETS CP TCP ACK Tag Rate Set Cmd
    pureAckTagRateTD, uint8, base=10, default=97
    pureAckTagRate, uint8, base=10, default=0xFF
End

Begin Message, ETS CP HLP Throttling Timer Status Get Cmd
End

Begin Message, ETS CP HL SIP Act Req Cmd
    LocalAddrFamily, uint8, base=enum:Network Family, default=IPV6
    FlowId, uint8, default=0xff
    LocalAddrPort, uint16, base=10, default=5060
    LocalAddrIp, array, type=uint32, maxsize=4
End

Begin Message, ETS CP HL SIP Reg Req Cmd
    ServerAddr, string, length=72, columns=72, rows=1
End

Begin Message, ETS CP HL SIP Session Setup Req Cmd
    CI, uint8, base=10, default=1
    DI, uint8, base=10, default=0xFF
    Audio Set, uint16, base=16, default=0x8001
    Video Set, uint16, base=16
    Other Set, uint16, base=16
    Audio Port, uint16, base=10, default=6003
    Video Port, uint16, base=10
    CalleeAddrLen, uint16, base=10, default=30
    CalleeAddr, string, size=CalleeAddrLen, columns=30, default=sip:10000@192.168.0.1
End

Begin Message, ETS CP HL SIP Session Disc Req Cmd
    CI, uint8, base=10
    DI, uint8, base=10
    Cause, uint8, base=10
    Filler, uint8
End

Begin Message, ETS CP HL SIP Unreg Req Cmd
    act, uint32
End

Begin Message, ETS CP HL SIP Session Setup Net Rsp Cmd
    CI, uint8, base=10
    DI, uint8, base=10
    Rspcode, uint16, base=10, default=200
End

Begin Message, ETS CP HL IMS DEBUG MSG SEND Cmd
    MsgId, uint16, base=enum:HLP MsgId Enum
    Parm1, uint16, base=10
    Parm2, uint16, base=10
    Parm3, uint16, base=10
End

Begin Message, ETS CP HL IMS DEBUG SET IMS STATE Cmd
    State, uint8, base=enum:IMSState Enum
End

Begin Message, ETS CP HL IMS DEBUG SET PDN STATE Cmd
    PdnId, uint8, base=10
    State, uint8, base=enum:PdnState Enum
End

Begin Message, ETS CP HL SIP Set Sigcomp Cmd
    Value, uint32, base=10
End

Begin Message, ETS CP HL SIP SET AKA SQN Cmd
    msSQN1, array, type=uint8, maxsize=6, size=6, base=16, default=0x00
    msSQN2, array, type=uint8, maxsize=6, size=6, base=16
    msSQN3, array, type=uint8, maxsize=6, size=6, base=16
    msSQN4, array, type=uint8, maxsize=6, size=6, base=16
    msSQN5, array, type=uint8, maxsize=6, size=6, base=16
    msSQN6, array, type=uint8, maxsize=6, size=6, base=16
    msSQN7, array, type=uint8, maxsize=6, size=6, base=16
    msSQN8, array, type=uint8, maxsize=6, size=6, base=16
    msSQN9, array, type=uint8, maxsize=6, size=6, base=16
    msSQN10, array, type=uint8, maxsize=6, size=6, base=16
    msSQN11, array, type=uint8, maxsize=6, size=6, base=16
    msSQN12, array, type=uint8, maxsize=6, size=6, base=16
    msSQN13, array, type=uint8, maxsize=6, size=6, base=16
    msSQN14, array, type=uint8, maxsize=6, size=6, base=16
    msSQN15, array, type=uint8, maxsize=6, size=6, base=16
    msSQN16, array, type=uint8, maxsize=6, size=6, base=16
    msSQN17, array, type=uint8, maxsize=6, size=6, base=16
    msSQN18, array, type=uint8, maxsize=6, size=6, base=16
    msSQN19, array, type=uint8, maxsize=6, size=6, base=16
    msSQN20, array, type=uint8, maxsize=6, size=6, base=16
    msSQN21, array, type=uint8, maxsize=6, size=6, base=16
    msSQN22, array, type=uint8, maxsize=6, size=6, base=16
    msSQN23, array, type=uint8, maxsize=6, size=6, base=16
    msSQN24, array, type=uint8, maxsize=6, size=6, base=16
    msSQN25, array, type=uint8, maxsize=6, size=6, base=16
    msSQN26, array, type=uint8, maxsize=6, size=6, base=16
    msSQN27, array, type=uint8, maxsize=6, size=6, base=16
    msSQN28, array, type=uint8, maxsize=6, size=6, base=16
    msSQN29, array, type=uint8, maxsize=6, size=6, base=16
    msSQN30, array, type=uint8, maxsize=6, size=6, base=16
    msSQN31, array, type=uint8, maxsize=6, size=6, base=16
    msSQN32, array, type=uint8, maxsize=6, size=6, base=16
End

Begin Message, ETS CP RTP Local SDP Cmd
    StreamId, uint8, base=10, default=0
    StreamType, uint8, base=enum:AUDIO/VIDEO, default=AUDIO
    StreamDirection, uint8, base=enum:inactive/sendonly/recvonly/sendrecv, default=sendrecv
    LocalAddrFamily, uint8, base=enum:Network Family, default=IPV4
    FlowId, uint8, default=0xff
    LocalAddrPort, uint16, base=10
    LocalAddrIp, array, type=uint32, maxsize=4
End

Begin Message, ETS CP RTP Peer SDP Cmd
    StreamId, uint8, base=10, default=0
    StreamType, uint8, base=enum:AUDIO/VIDEO, default=AUDIO
    StreamDirection, uint8, base=enum:inactive/sendonly/recvonly/sendrecv, default=sendrecv
    PeerRtpAddrFamily, uint8, base=enum:Network Family, default=IPV4
    RtpFlowId, uint8, default=0xff
    PeerRtpAddrPort, uint16, base=10
    PeerRtpAddrIp, array, type=uint32, maxsize=4
    PeerRtcpAddrFamily, uint8, base=enum:Network Family, default=IPV4
    RtcpFlowId, uint8, default=0xff
    PeerRtcpAddrPort, uint16, base=10
    PeerRtcpAddrIp, array, type=uint32, maxsize=4
    PeerMCap, record, type=RtpMCapT, maxsize=1
End

Begin Record, RtpMCapT
    SupportCodec1, uint8, indent=1
    Codec1LocalId, uint8
    Codec1PtNum, uint8
    SupportCodec2, uint8, indent=1
    Codec2LocalId, uint8
    Codec2PtNum, uint8
    SupportCodec3, uint8, indent=1
    Codec3LocalId, uint8
    Codec3PtNum, uint8
    SupportCodec4, uint8, indent=1
    Codec4LocalId, uint8
    Codec4PtNum, uint8
End

Begin Message, ETS CP RTP Del Stream Cmd
    StreamId, uint8, base=10, default=0
End

Begin Message, ETS CP RTP Config Stream Cmd
    StreamId, uint8, base=10, default=0
    StreamConfig, record, type=RtpStreamConfigT, maxsize=1
End

Begin Record, RtpStreamConfigT
    ListenEnable, uint8
    OutputEnable, uint8
    InputEnable, uint8
    SendEnable, uint8
End

Begin Message, ETS CP RTP Set Local MCap Cmd
    StreamId, uint8, base=10, default=0
    LocalMCap, record, type=RtpMCapT, maxsize=1
End

Begin Message, ETS CP RTP Rtp Input Cmd
    nbytes, int32
    buffer, array, type=uint8, size=nbytes, maxsize=1028
End

Begin Message, ETS CP RTP Rtcp Input Cmd
    nbytes, int32
    buffer, array, type=uint8, size=nbytes, maxsize=1028
End

Begin Message, ETS CP RTP Input Source Cmd
    src, uint8, base=enum:Rtp Input Source, default=NET
End

Begin Message, ETS CP RTP IS Start Cmd
End

Begin Message, ETS CP RTP IS Stop Cmd
End

Begin Message, ETS CP RTP IP6 Input Cmd
    nbytes, int32
    buffer, array, type=uint8, size=nbytes, maxsize=1028
End

Begin Message, ETS CP IP6 UDP Connection Open Cmd
    FlowId, uint8, base=10, default=0
    AddrType, uint8, base=enum:PUBLIC/PUBLICTEMP/LOCAL
    LocalAddrPort, uint16, base=10, default=9000
    PeerAddrPort, uint16, base=10, default=20300
    PeerAddrIp0, uint32, base=16, default=0x80FE
    PeerAddrIp1, uint32, base=16, default=0x0
    PeerAddrIp2, uint32, base=16, default=0xFF49C002
    PeerAddrIp3, uint32, base=16, default=0x97C3CAFE
    PayloadSize, int32,  base=10, default=300
End

Begin Message, ETS CP IP6 UDP Connection Close Cmd
End

Begin Message, ETS CP IP6 TCP Connection Open Cmd
    FlowId, uint8, base=10, default=0
    AddrType, uint8, base=enum:PUBLIC/PUBLICTEMP/LOCAL
    LocalAddrPort, uint16, base=10, default=9000
    PeerAddrPort, uint16, base=10, default=20300
    PeerAddrIp0, uint32, base=16, default=0x80FE
    PeerAddrIp1, uint32, base=16, default=0x0
    PeerAddrIp2, uint32, base=16, default=0xFF49C002
    PeerAddrIp3, uint32, base=16, default=0x97C3CAFE
End

Begin Message, ETS CP IP6 TCP Connection Close Cmd
End

Begin Message, ETS CP Set PDN INFO Cmd Cmd
    PdnNum, uint8
    MainPdnId, uint8
    PdnInfo, record, type=PDN Info Rec, maxsize=5
    APN1Len, uint8, default=9, indent=1
    APN2Len, uint8, default=9
    APN3Len, uint8, default=9
    APN4Len, uint8, default=9
    APN5Len, uint8, default=9
    APN1, string, length = 101, default=vzw3g.com,indent=1
    APN2, string, length = 101, default=vzw4g.com, indent=1
    APN3, string, length = 101, default=vzw4g.com, indent=1
    APN4, string, length = 101, default=vzw4g.com, indent=1
    APN5, string, length = 101, default=vzw4g.com, indent=1
End

Begin Record, PDN Info Rec
    PdnId, uint8, indent=1
    AddrType, uint8
    AppNum, uint8, indent=1
    AppType0, uint8
    AppType1, uint8
    AppType2, uint8
    AppType3, uint8
End

Begin Message, ETS CP Get PDN INFO Cmd Cmd
End

Begin Message, ETS CP Send PING Cmd Cmd
    DestAddr, uint32, base=16
    PDNIndex, uint8,  base=16
    DataLength, uint8,  base=10
    Data, array,  type=uint8, maxsize=32
End

Begin Message, ETS CP L1D Diagnostic Parms Cmd
End

Begin Message, ETS CP L1D Get Phone State Cmd
End

Begin Message, ETS DSPM AFC Parm Cmd
    Decim, uint16, base=10, default=16
    DecimMsg, uint16, base=10, default=12
    Shift, int16,  base=10, default=3
    CorrGain, int16,  base=10, default=2048
    CorrGainQ, int16,  base=10, default=15
    PdmPpmSlopeQ, int16,  base=10, default=0
    PpmOfst, int16,  base=10, default=0
    PpmQ, int16,  base=10, default=11
    RStatPwrTh, int32,  base=10, default=1
    PpmPerRot, int16,  base=10, default=327
    PpmPerRotQ, int16,  base=10, default=10
    PpmUpdateScaleQ, int16,  base=10, default=10
    AfcFgrCombInd, int16,  base=10, default=0
End

Begin Message, ETS DSPM Afc Cal Parms Cmd
    PdmPpmSlope, int16,  base=10, default=7424
    PdmOfst, int16,  base=10, default=650
End

Begin Message, ETS DSPM Rx AGC Parm Cmd
    HW Val (Q5), uint16,            default=0x1000, base=16
    TargetPwr(Q8log2(2^13)), int16, default=3425
    PDM Min Value, uint16,            default=0x0100, base=16
    PDM Max Value, uint16,            default=0x0FFF, base=16
End

Begin Message, ETS DSPM Tx AGC Parm Cmd
    Open Loop Corr Gain, uint16, default=0x0f
    Open Loop Max Slew, uint16, default=0x4b
End

Begin Message, ETS DSPM Tx AGC Power Calibr Cmd
    PowerMaxdBQ, int16,          default=2112
    PowerMindBQ, int16,          default=-3200
End

Begin Message, ETS DSPM Tx TXONs Table Cmd
    LowHystState Txons, uint16, default=0xfff7
    MedHystState Txons, uint16, default=0xffff
    HighHystState Txons, uint16, default=0xffff
    Pa1 Delayed Load, record, type=DelayLoad Table, maxsize=4
    Pa2 Delayed Load, record, type=DelayLoad Table, maxsize=4
    PDM Delayed Load, record, type=DelayLoad Table, maxsize=4
    Delay Load BitMap, record, type=DelayLoad BitMaps, maxsize=4
End

Begin Record, DelayLoad Table
    Comp Address, uint16
    Comp Value, uint16
End

Begin Record, DelayLoad BitMaps
    Txon BitMap, uint16
    Pdm BitMap, uint16
End

Begin Message, ETS CP L1D Fpc Cal Factor Cmd
    Action, uint8, base=enum:FpcCalActions, default=Read
    RC, uint8, base=enum:FpcCalRCs
    CalFactors, array, type=int16, maxsize=8, columns=60
End

Begin Message, ETS CP L1D Debug Filter Cmd
    Enable Rx Power Msg Traces/Spies, uint8, base=bool
    Enable Search Rslt Msg Traces/Spies, uint8, base=bool
End

Begin Message, ETS CP L1d Idle Diff Freq Srch Mode Cmd
    Mode, uint8, base=enum:Idle Diff Freq Srch Mode
End

Begin Message, ETS DSPM RxAgc SettleTime Parm Cmd
    Fast Settle Time, int16, default=2
    Slow Settle Time, int16, default=9
    Fast Decim Msg, int16, default=2
    Slow Decim Msg, int16, default=24
End

Begin Message, ETS CP L1d Disable Reset Msg Cmd
    Disable L1D Reset, uint8, base=enum:Disable L1D Reset Mode
End

Begin Message, ETS CP L1d FPDCHS Param Msg Cmd
    AckDelayAndNumArqChan, uint16, default=0x202, indent=1
    PilotGatingInfo, uint16, default=0
    ForPdchRcAndFullCI, uint16, default=0, indent=1
    RevCqichFrameOffset, uint16, default=0
    RevCqichAckReps, uint16, default=1
    NumSwitchingFrames, uint16, default=0, indent=1
    NumSwitchingFramesChm, uint16, default=0
    NumSwitchingSlot, uint16, default=0, indent=1
    NumSwitchingSlotChm, uint16, default=0
    PdchSwitchingDelay, uint16, default=0, indent=1
    NumPilots, uint16, default=1
    BaseStationCfg, record, type=IpcDsmFPdchsBaseStationCfgT, maxsize=7
End

Begin Record, IpcDsmFPdchsBaseStationCfgT
    PilotPn, uint16, indent=2
    WalshTableIdAndNumPdcch, uint16
    ForPdcchWalsh, uint16
    MacIdAndRevCqichCover, uint16, indent=2
    PdchGroupIndAndPwrCombInd, uint16
End

Begin Message, ETS CP L1d FPDCHS Disable Msg Cmd
End

Begin Message, ETS CP L1d FPDCHS CQIAck Msg Cmd
    FullCIFeedbackInd, uint16, default=0, indent=1
    RevCqichAckReps, uint16, default=0
    NumSwitchingFrames, uint16, default=0, indent=1
    NumSwitchingFramesChm, uint16, default=0
    RevAckchPwr, uint16, default=0, indent=1
    RevCqichHighPwr, uint16, default=0
    RevCqichLowPwr, uint16, default=0
End

Begin Message, ETS CP L1d FPDCHS CtrlHold Msg Cmd
    PilotGatingInfo, uint16, default=0
    NumSwitchingFramesChm, uint16, default=0
End

Begin Message, ETS CP L1d GPS AUTONOMOUS Msg Cmd
    Enable, uint16, base=enum:Off/On/Null, default=off
    Test, uint16, base=enum:None/GpsHw Off/GpsHw On/DD Trigger
End

Begin Message, ETS CP L1d GPS DBG Msg Cmd
    DbgGps, uint16,
    Chan, uint16,
    Data, uint16,
    Decim, uint16,
    Scr, uint16, base=10, default=0
    DbgArg, array, type=uint16, base=10, maxsize=5
End

Begin Message, ETS CP L1d GPS Acq Aid Msg Cmd
    Valid, uint16, base=enum:0/1
    SyncTime, uint16, base=enum:None/CDMA Time/Pulse Only
    DataWipe, int32,
    TOA, uint8, base=10
    NumSV, uint8, base=10
    AzElIncl, uint8, base=enum:0/1
    SV, array, type=uint8, maxsize=9, base=10
    Dopp, array, type=int16,  maxsize=9
    DoppRate, array, type=int8,   maxsize=9, base=10
    pad, uint8
    DoppSR, array, type=uint16, maxsize=9, base=10
    Code, array, type=int16,  maxsize=9
    CodePhInt, array, type=int8,   maxsize=9, base=10, default=-1
    GpsBitNum, array, type=int8,   maxsize=9, base=10, default=-1
    CodeSR, array, type=int16,  maxsize=9, base=10
    Azim, array, type=int8,   maxsize=9, base=10
    Elev, array, type=int8,   maxsize=9, base=10
End

Begin Message, ETS CP L1d NST Traffic On Msg Cmd
    Reverse RC, uint8,  base=enum:Tx Rate
    Long Code Mask, array,  type=uint8, maxsize=6
End

Begin Message, ETS CP L1d AFLT Input Buf Sel Msg Cmd
    InputBufLen, uint16, default=8K,     base=enum:2K/8K
End

Begin Message, ETS CP L1d AFLT Test PilotSetSize Msg Cmd
    TestPilotSetSize, uint16, default=0,      base=10
End

Begin Message, ETS CP Clear Markov Stats Cmd
    DirFlag, uint32, base=enum:Clear Stats Masks, default=Clear Both Stats
End

Begin Message, ETS CP Clear Tdso Stats Cmd
    DirFlag, uint32, base=enum:Clear Stats Masks, default=Clear Both Stats
End

Begin Message, ETS CP Random Number Calc Cmd
    NewSeed, uint8, base=bool, default=True
    Seed, uint32, default=0x1234507
End

Begin Message, ETS CP Clear FER Cmd
End

Begin Message, ETS CP MuxPDU Test Mode Cmd
    Action, uint8,  base=enum:Start Test/Stop Test/Test Status, default=Start Test
    ByPass (forces MuxType 1), uint8,  base=bool, default=False
    Continue on Error, uint8, base=bool, default=False
    TestIndex, uint8,  base=enum:MuxPdu Test Index
    NumLoops (0 means continuous), uint16, base=10, default=1
End

Begin Message, ETS CP MuxPDU Buffer Status Cmd
    ClearHighWaterMarkAfterUse, uint8, base=enum:ClearHighWaterMarkEnum
End

Begin Message, ETS CP MuxPDU PDCH Test Mode Cmd
    TestModeFlag, uint8, base=enum:Normal Mode/Test Mode, default=Normal Mode
End

Begin Message, ETS CP MuxPDU Set Raw Spy Len Cmd
    MpRawSpyLen, uint8
End

Begin Message, ETS CP MuxPDU Set Op Mode Cmd
    Preferred Mode, uint32, base=enum:MpOpModeT, default=ByPass
End

Begin Message, ETS CP MuxPDU Get Op Mode Cmd
End

Begin Message, ETS CP Clear Fwd Sch Dtx Stats Cmd
End

Begin Message, ETS CP Set FER Running Avg Num Frames Cmd
    NumFrames, uint16, base=10, default=100
End

Begin Message, ETS CP Timer Enable Cmd
    Enable, uint8, base=enum:Off/On
End

Begin Message, ETS CP Access Signal Cmd
    Max Cap Size, uint32, base=10, max=7, default=7
    Power Correction, uint16, base=10
    Current MIP Enable, uint8,  base=bool:Off/On
    Data Length, uint8,  base=10, default=13
    Data, array,  type=uint8, maxsize=30
    Repeat Data Enabl, uint8,  base=bool:Off/On
    Long Code Mask, array,  type=uint8, maxsize=6
    Pam Size, uint8,  base=10, max=15,  default=5
    RN (Delay in chips), uint16, base=10, max=512, default=5
End

Begin Message, ETS CP Status Request Cmd
End

Begin Message, ETS CP Init Nam Cmd
End

Begin Message, ETS CP Init MS Cap Db Cmd
End

Begin Message, ETS CP Current Time Cmd
End

Begin Message, ETS CP Phone State and Event Count Cmd
End

Begin Message, ETS CP Protocol Rev in use Cmd
End

Begin Message, ETS CP Clear MRU Cmd
End

Begin Message, ETS CP Get Active NAM Cmd
End

Begin Message, ETS CP Select Active NAM Cmd
    Active NAM, uint8, base=enum:PSW NAM Select, default=NAM1
End

Begin Message, ETS CP Enter AKey Cmd
    A-Key, uint64, base=10
    Checksum, uint32, base=10
End

Begin Message, ETS CP Force Analog Mode Cmd
End

Begin Message, ETS CP Set SPC Cmd
    SPC, uint32, base=10, default=0
End

Begin Message, ETS CP Init Secure DB Cmd
End

Begin Message, ETS CP Get Retrievable Statistics Cmd
    Statistics Counter Group, uint32,  base=enum:StatCounterT, default=MUX1_REV_FCH
End

Begin Message, ETS CP Set Retrievable Statistics Cmd
    Parameter ID, uint16,  default=0x0001
    Parameter value, uint32, default=0x00000000
End

Begin Message, ETS CP Inject Handoff Cmd
    nomPwrExt, uint8,  base=bool, default=0
    nomPwr, int8,   base=10, default=0
    numPreabmle, uint8,  base=10, default=0
    bandClass, uint8,  base=10, default=1
    cdmaFreq, uint16, base=10, default=50
    pilotPN, uint16, base=10, default=36
    codeChanFCH, uint8,  base=10, default=8
End

Begin Message, ETS CP Set Silent Retry Cmd
    Silent Retry, uint8, base=enum:disable/enable
    Number of Attempts, uint8, base=10, default=3
    Time Between Attempts (sec), uint8, base=10, default=4
    Total Time before abort (sec), uint8, base=10, default=30
End

Begin Message, ETS CP Get Silent Retry Status Cmd
End

Begin Message, ETS CP Get Debug Screen Info Cmd
End

Begin Message, ETS CP Exit Emergency Mode Cmd
End

Begin Message, ETS CP Set Lost Scan Ping Frequency Cmd
    CSS Geo Scan Ping Frequency, uint8, base=10, default = 5
    CSS NON-Geo Scan Ping Frequency, uint8, base=10, default = 5
End

Begin Message, ETS CP ERI Version Number Msg Cmd
End

Begin Message, ETS CP Get PRL Id Cmd
End

Begin Message, ETS CP Init PSW Misc Db Cmd
End

Begin Message, ETS CP Enable Cmd
    Enable, uint8, base=enum:Off/On/OffNoSleep
End

Begin Message, ETS CP Call Initiate Cmd
    Request Mode, uint8,  base=enum:Request Mode Type, default=Cdma Only, Readonly=1
    Call Mode, uint8,  base=enum:Call Mode Type, default=NORMAL_VOICE
    Service Option, uint16, base=enum:Service Option Category, default=Voice Service
    Encoded, uint8,  base=bool
    Digit Mode, uint8,  base=bool
    Number Type, uint8,  base=enum:Number Type, default=Unknown
    Number Plan, uint8,  base=enum:Number Plan Type, default=Number Plan Unknown
    Number of Digits, uint8,  base=10, default=7
    Otasp Mode, uint8,  base=10, default=100, hidden=1
    Digits, string, length=32, Default=3505560
    Reserved0, uint8,  base=10, default=0, hidden=1
    CPN Number Type, uint8,  base=enum:Number Type, default=Unknown, hidden = 1
    CPN Number Plan, uint8,  base=enum:Number Plan Type, default=Number Plan Unknown, hidden = 1
    Presentation Ind, uint8,  base=enum:CPN Presentation Type, default=PSW_PI_ALLOWED, hidden = 1
    Screening Ind, uint8,  base=enum:CPN Screening Type, default=PSW_SI_USER_PROVIDED_NOT_SCREENED, hidden = 1
    CPN Digits, string, length=32, Default=1234567, hidden = 1
    Reserved1, uint8,  base=10, default=0, hidden=1
    Service Type, uint8,  base=enum:Service Type, default=PSW_VOICE_SERVICE_TYPE, hidden=1
    Multi CPN Incl, uint8,  base=bool, default=0, hidden = 1
    Calling Sub Addr Incl, uint8,  base=bool, default=0, hidden = 1
    Calling SubAdd Extenstion, uint8,  base=bool, default=0, hidden = 1
    Calling SubAdd Type, uint8,  base=enum:SubAddress Type, default=PSW_SUBADDRESS_TYPE_NSAP, hidden = 1
    Calling SubAdd Ind, uint8,  base=bool, default=0, hidden = 1
    Calling Sub Address, string, length=32, Default=0, hidden = 1
    Reserved2, uint8,  base=10, default=0, hidden=1
    Called Sub Addr Incl, uint8,  base=bool, default=0, hidden = 1
    Called SubAdd Extenstion, uint8,  base=bool, default=0, hidden = 1
    Called SubAdd Type, uint8,  base=enum:SubAddress Type, default=PSW_SUBADDRESS_TYPE_NSAP, hidden = 1
    Called SubAdd Ind, uint8,  base=bool, default=0, hidden = 1
    Called Sub Address, string, length=32, Default=0, hidden = 1
    Reserved3, uint8,  base=10, default=0, hidden=1
    Packet Data Inc Timer, uint16, base=10, default=0, hidden=1
    Packet Data App, uint8,  base=enum:Packet Data App Type, default=NETWORK_RM, hidden=1
End

Begin Message, ETS CP Call Answer Cmd
End

Begin Message, ETS CP Call Hangup Cmd
End

Begin Message, ETS CP Test Modes Cmd
    Mode, uint32,  base=enum:Test Modes
    Qualifier, uint16, base=enum:Off/On
    Value, uint16,
End

Begin Message, ETS CP Set Idle HO Parameters Cmd
    ThrMinImmed, uint8, base=10, default=4
    MinActImmed, uint8, base=10, default=34
    ThrSlopeImmed, uint8, base=10, default=2
    ThrMinDelayed, uint8, base=10, default=1
    MinActDelayed, uint8, base=10, default=34
    ThrSlopeDelayed, uint8, base=10, default=1
    DelayCount, uint8, base=10, default=2
    MinNghbrThr, uint8, base=10, default=36
End

Begin Message, ETS CP HSPD Active and Control Hold Cmd
    ControlHoldState, uint8, base=enum:ActiveControlHold, default=CP_HSPD_CONTROL_HOLD_STATE
End

Begin Message, ETS CP SCH Request Message Cmd
    SrId, uint8, base=10, default=1
    PrefRate, uint8, base=enum:SchPrefRate, default=CP_SCH_19_2_KBPS
    Duration, uint16,base=16, default=0x1FF
End

Begin Message, ETS CP Data Calls PreArrangement Cmd
    PreArrange Type, uint8, base=enum:Data PAM Type, default = No Pre-Arrangement
End

Begin Message, ETS CP Location Service PDDM Cmd, BitPack
    PDDM Length, uint8, default=13
    Sess Start, bit,count=1,pos=none,base=enum:FALSE/TRUE,default=TRUE
    Sess End, bit,count=1,pos=none,base=enum:FALSE/TRUE,default=FALSE
    Sess Source, bit,count=1,pos=none,base=enum:BS Init/MS Orig,default=BS Init
    Sess Tag, bit,count=5,pos=none,base=16,default=0
    PD Msg Type, uint8, base=16, default=0
    Num Requests, bit,count=4,pos=none,default=1
    Num Responses, bit,count=4,pos=none,default=1
    Reserved1, bit,count=4,pos=none,default=0
    Req Type, bit,count=4,pos=none,default=4
    Req Par Len, uint8, default=3
    Pref Resp Qual, bit,count=3,pos=none,default=7
    Num Fixes, bit,count=8,pos=none,default=0
    T Betw Fixes, bit,count=8,pos=none,default=0
    Offset Req, bit,count=1,pos=none,default=1
    Reserved2, bit,count=4,pos=none,default=0
    Reserved3, bit,count=3,pos=none,default=0
    Unsol Resp, bit,count=1,pos=none,default=0
    Resp Type, bit,count=4,pos=none,default=4
    Resp Par Len, uint8, default=3
    Num SV, bit,count=4,pos=none,default=1
    Time of App, bit,count=8,pos=none,default=1
    Dopp Incl, bit,count=1,pos=none,default=0
    Code Ph Par Incl, bit,count=1,pos=none,default=0
    Az El Incl, bit,count=1,pos=none,default=0
    SV Prn Num, bit,count=6,pos=none,default=1
    Reserved4, bit,count=3,pos=none,default=0
End

Begin Message, ETS CP Set PKZID Hysteresis Timer Cmd
    HAT timer duration (sec), uint8, base=10, default=0,  indent=1
    HT timer duration (sec), uint8, base=10, default=30, indent=1
End

Begin Message, ETS CP Get PKZID Hysteresis Timer Cmd
End

Begin Message, ETS CP Set Access HO Parameters Cmd
    noiseFloor, uint8, base=10, default=50
    thrMin, uint8, base=10, default=4
    minAct, uint8, base=10, default=34
    thrSlope, uint8, base=10, default=1
End

Begin Message, ETS CP Set Voice Pref Serv Config Cmd
    Vocoder Pref, uint8,  base=enum:Via Vocoder Type, default=8K EVRC
    Mux Option Pref, uint8,  base=10, default=1, Hidden = 1
    To Negotiate, uint8,  base=bool
    Forward RC, uint8,  base=enum:RcPrefType
    Reverse RC, uint8,  base=enum:RcPrefType
End

Begin Message, ETS CP Set Data Pref Serv Config Cmd
    Page Accept Map, uint8,  base=10, default=3, Hidden = 1
    Async SO Pref, uint16,  base=enum:Async Service Options, default=SO4
    Fax SO Pref, uint16,  base=enum:Fax Service Options, default=SO5
    Dormant By SCC, uint8,  base=bool, default=1, Hidden = 1
    LSPD SO Pref, uint16, base=enum:LSPD Service Options, default=SO7
    HSPD SO Pref, uint16, base=enum:HSPD Service Options, default=SO33
    Pkt Serv Pref, uint8,  base=10, default=0, Hidden = 1
    Forward RC, uint8,  base=enum:RcPrefType
    Reverse RC, uint8,  base=enum:RcPrefType
End

Begin Message, ETS CP Set Loopback Pref Serv Config Cmd
    Page Accept Map, uint8,  base=10, default=0, Hidden = 1
    Data Loopback SO, uint16, base=enum:Data Loopback Service Options, default=55
    Markov SO, uint16, base=enum:Markov Service Options, default=54
    Supplemental SO, uint16, base=10, default=30, Hidden = 1
    To Negotiate, uint8,  base=bool
    Forward RC, uint8,  base=enum:RcPrefType
    Reverse RC, uint8,  base=enum:RcPrefType
End

Begin Message, ETS CP Set OTASP Pref Serv Config Cmd
    SO Pref, uint8,  base=enum:OTASP Service Options, default=SO18
    Forward RC, uint8,  base=enum:RcPrefType
    Reverse RC, uint8,  base=enum:RcPrefType
End

Begin Message, ETS CP Set SMS Pref Serv Config Cmd
    SO Pref, uint8,  base=enum:SMS Service Options, default=SO6
    Forward RC, uint8,  base=enum:RcPrefType
    Reverse RC, uint8,  base=enum:RcPrefType
End

Begin Message, ETS CP Set Location Pref Serv Config Cmd
    SO Pref, uint8,  base=enum:LOC Service Options, default=SO35
    Forward RC, uint8,  base=enum:RcPrefType
    Reverse RC, uint8,  base=enum:RcPrefType
End

Begin Message, ETS CP Switch Voice Service Option Cmd
    Service Option, uint16,  base=enum:Via Voice Service Options, default=Srv Opt 3 8K EVRC
End

Begin Message, ETS CP Set Service Option Cmd
    Service Option, uint16, base=enum:Service Options, Default=Srv Opt 3  Enhanced 8K Vocoder
    To Negotiate, uint32, base=enum:No/Yes, Default=Yes
    Forward RC, uint8,  base=enum:RcPrefType
    Reverse RC, uint8,  base=enum:RcPrefType
End

Begin Message, ETS CP Test Power Control Cmd
    PWR_CNTL_STEP, uint8,  default=1
    USE_TIME, uint8,  base=bool, default=0
    ACTION_TIME, uint8
    FPC_INCL, uint8,  base=bool, default=0
    FPC_MODE, uint8,  default=3
    FPC_PRI_CHAN, uint8,  base=bool, default=0
    FPC_OLPC_FCH_INCL, uint8,  base=bool, default=0
    FPC_FCH_FER, uint8
    FPC_FCH_MIN_SETPT, uint8
    FPC_FCH_MAX_SETPT, uint8
    FPC_OLPC_DCCH_INCL, uint8,  base=bool, default=0
    FPC_DCCH_FER, uint8
    FPC_DCCH_MIN_SETPT, uint8
    FPC_DCCH_MAX_SETPT, uint8
    FPC_SEC_CHAN, uint8,  base=bool, default=0
    NUM_SUP, uint8,  default=1, Readonly=1
    SCH_ID, uint8
    FPC_SCH_FER, uint8
    FPC_SCH_MIN_SETPT, uint8
    FPC_SCH_MAX_SETPT, uint8
    FPC_THRESH_INCL, uint8,  base=bool, default=0
    FPC_SETPT_THRESH, uint8
    FPC_THRESH_SCH_INCL, uint8,  base=bool, default=0
    FPC_SETPT_THRESH_SCH, uint8
    RPC_INCL, uint8,  base=bool, default=0
    RPC_NUM_REC, uint8
    RPC_ADJ_REC_TYPE_0, uint8
    RPC_ADJ_REC_LEN_0, uint8
    FCH_INCL, uint8,  base=bool, default=0
    FCH_CHAN_ADJ_GAIN, uint8
    DCCH_INCL, uint8,  base=bool, default=0
    DCCH_CHAN_ADJ_GAIN, uint8
    SCH0_INCL, uint8,  base=bool, default=0
    SCH0_CHAN_ADJ_GAIN, uint8
    SCH1_INCL, uint8,  base=bool, default=0
    SCH1_CHAN_ADJ_GAIN, uint8
    RPC_ADJ_REC_TYPE_1, uint8
    RPC_ADJ_REC_LEN_1, uint8
    RL_ATT_ADJ_GAIN_TYPE_1, uint8, base=bool, default=0
    RC3_RC5_20MS_INCL_1, uint8, base=bool, default=0
    RL_ATT_ADJ_GAIN_1500, uint8
    RL_ATT_ADJ_GAIN_2700, uint8
    RL_ATT_ADJ_GAIN_4800, uint8
    RL_ATT_ADJ_GAIN_9600, uint8
    RC4_RC6_20MS_INCL_1, uint8,  base=bool, default=0
    RL_ATT_ADJ_GAIN_1800, uint8
    RL_ATT_ADJ_GAIN_3600, uint8
    RL_ATT_ADJ_GAIN_7200, uint8
    RL_ATT_ADJ_GAIN_14400, uint8
    MS5_INCL, uint8,  base=bool, default=0
    NORM_ATT_GAIN_9600_5MS, uint8
    RPC_ADJ_REC_TYPE_2, uint8
    RPC_ADJ_REC_LEN_2, uint8
    CODE_TYPE, uint8, base=bool, default=0
    RL_ATT_ADJ_GAIN_TYPE_2, uint8, base=bool, default=0
    RC3_RC5_20MS_INCL_2, uint8,  base=bool, default=0
    RL_ATT_ADJ_GAIN_19200, uint8
    RL_ATT_ADJ_GAIN_38400, uint8
    RL_ATT_ADJ_GAIN_76800, uint8
    RL_ATT_ADJ_GAIN_153600, uint8
    RL_ATT_ADJ_GAIN_307200, uint8
    RL_ATT_ADJ_GAIN_614400, uint8
    RC4_RC6_20MS_INCL_2, uint8,  base=bool, default=0
    RL_ATT_ADJ_GAIN_28800, uint8
    RL_ATT_ADJ_GAIN_576600, uint8
    RL_ATT_ADJ_GAIN_115200, uint8
    RL_ATT_ADJ_GAIN_230400, uint8
    RL_ATT_ADJ_GAIN_460800, uint8
    RL_ATT_ADJ_GAIN_1036800, uint8
End

Begin Message, ETS CP Get GPS Debug Info Cmd
End

Begin Message, ETS CP Set Mobile ID Cmd
    SPC Code, uint32, base=10
    Security Code, uint64, base=10
    Id Type, uint8, base=enum:PS Set Mobile ID Type, default=ESN(32 Bits)
    Value, uint64, base=16
End

Begin Message, ETS CP Get Mobile ID Cmd
End

Begin Message, ETS CP Get SPC Cmd
End

Begin Message, ETS CP Get SSD Cmd
End

Begin Message, ETS CP_LOC_STATE_CHANGE_TEST Cmd
    Event, uint8, base=enum:Loc Event enum
    MsgBuffer, array, type=uint8, maxsize=256
End

Begin Message, ETS CP CSFB Get Status Cmd
End

Begin Message, ETS CP SMS Connect Cmd
    Teleservice Id, uint16, base=10, default=4098
End

Begin Message, ETS CP SMS Disconnect Cmd
    Teleservice Id, uint16, base=10, default=4098
End

Begin Message, ETS CP SMS BCast Connect Cmd
    Service Mask, uint32, base=10
    Language Mask, uint32, base=10
    Priority Value, uint8, base=10
End

Begin Message, ETS CP SMS BCast Disconnect Cmd
End

Begin Message, ETS CP SMS Submit Cmd
    Teleservice Id, uint16, base=10, default=4098
    Traffic Send, uint8, base=bool
    Message Id, uint16, base=10, default=0
    DigitMode, uint8, base=bool
    NumberMode, uint8, base=bool
    NumberType, uint8, base=enum:SMS Number Type,default=NT_UNKNOWN
    Num Dest Digits, uint8, base=10, default=10
    Dest Digits, string, length=32, default=8583505560
    Num CallBack Digits, uint8, base=10, default=0
    CallBack Digits, string, length=32
    Default Msgs, uint8, base=enum:SMS Messages, default=Not Used
    User defined Msg Encoding, uint8, base=enum:SMS MesgEncoding, default=Octet
    User defined Msg, string, length=200, columns=40, rows=5, default=You can enter a user defined message here upto 200 octets long.
    User Ack, uint8, base=bool
    Delivery Ack, uint8, base=bool
    Validity, uint8, base=enum:SMS AbsRel, default=Not Used
    Validity Year, uint8, base=10
    Validity Month, uint8, base=10
    Validity Day, uint8, base=10
    Validity Hours, uint8, base=10
    Validity Minutes, uint8, base=10
    Validity Seconds, uint8, base=10
    Relative Validity, uint8, base=10
    Delivery, uint8, base=enum:SMS AbsRel, default=Not Used
    Delivery Year, uint8, base=10
    Delivery Month, uint8, base=10
    Delivery Day, uint8, base=10
    Delivery Hours, uint8, base=10
    Delivery Minutes, uint8, base=10
    Delivery Seconds, uint8, base=10
    Relative Delivery, uint8, base=10
    Priority, uint8, base=enum:SMS Priority, default=Not Used
    Privacy, uint8, base=enum:SMS Privacy, default=Not Used
    Alert on Delivery, uint8, base=enum:SMS AlertonDelivery, default=Not Used
    Language, uint8, base=enum:SMS Language, default=Not Used
    Service Category, uint16, base=enum:SMS ServiceCategory, default=Not Used
End

Begin Message, ETS CP SMS User Ack Cmd
    Teleservice Id, uint16, base=10, default=4098
    MsgEncoding, uint8, base=10
    NumFields, uint8, base=10
    Char, array, type=uint8, maxsize=256
End

Begin Message, ETS CP SMS Srv Opt Pref Cmd
    Srv Opt, uint32, base=10, default=6
End

Begin Message, ETS CP SMS Cancel Cmd
    Teleservice Id, uint16, base=10, default=4098
    Msg Id, uint16, base=10
    SendSmsCancelDb, uint8,  base=enum:FALSE/TRUE, default=FALSE
End

Begin Message, ETS CP SMS BCast Parms Cmd
    Service Mask, uint32, base=10
    Language Mask, uint32, base=10
    Priority Value, uint8, base=10
End

Begin Message, ETS CP SMS Term Status Cmd
    Status, uint8,  base=enum:SMS Term Status
End

Begin Message, ETS CP SMS Cause Code Status Cmd
End

Begin Message, ETS CP SMS Retx Amount Cmd
    NumTempRetries, uint8,  base=10, default=3
    NumPermRetries, uint8,  base=10, default=3
    NumTimeoutRetries, uint8, base=10, default=3
End

Begin Message, ETS CP Flush Final Cmd
End

Begin Message, ETS CP Nwk Rpt Data Svc Status Word Cmd
    Status Str, string, length=15
End

Begin Message, ETS CP Set AT cmds default Cmd
End

Begin Message, ETS CP TCPB Conn Status Cmd
    Status, uint8, base=enum:Tcpb Status
End

Begin Message, ETS CP TCPB Data Send Rsp Cmd
End

Begin Message, ETS CP Socket InAct Tmo Request Cmd
    RLP Channel, uint8, base=enum:Primary Traffic/Secondary Traffic, default=Primary Traffic
    Time Out, uint16, base=10, default=20
End

Begin Message, ETS CP UPB Conn Status Cmd
    Status, uint8
End

Begin Message, ETS CP UPB Idle Tmo Cmd
End

Begin Message, ETS CP UPB Sent Data Rsp Cmd
End

Begin Message, ETS CP HLP IP DNS Addr Get Cmd
End

Begin Message, ETS CP OTASP Conn Ind Cmd
End

Begin Message, ETS CP OTASP Disconn Ind Cmd
End

Begin Message, ETS CP OTASP Ind Cmd
    status, uint8, base=enum:VALOtaStatusInd
End

Begin Message, ETS CP OTASP Premature Term Ind Cmd
End

Begin Message, ETS CP OTASP Rx Ind Cmd
End

Begin Message, ETS CP OTASP Start Ind Cmd
End

Begin Message, ETS CP OTASP Stop Ind Cmd
End

Begin Message, ETS CP OTASP System Error Ind Cmd
End

Begin Message, ETS CP OTASP Tx Rsp Cmd
    Success, uint8
End

Begin Message, ETS CP Access Max Capsule Size Cmd
    Size, uint8
End

Begin Message, ETS CP Bs Co Ord Cmd
    baseId, uint16
    baseLat, int32
    baseLong, int32
End

Begin Message, ETS CP Nwk Retrieve Channel Cmd
End

Begin Message, ETS CP Nwk Rpt Burst Dtmf Cmd
    DtmfOnLength, uint8
    DtmfOffLength, uint8
    NumDigits, uint8
    Digits, string, size=NumDigits, maxsize=16, columns=16
End

Begin Message, ETS CP Nwk Rpt Data Burst Cmd
    MsgNumber, uint8
    BurstType, uint8
    NumMsgs, uint8
    NumFields, uint8, default=10
    Data, string, size=end, columns=40, rows=4
End

Begin Message, ETS CP Nwk Rpt Lock Cmd
End

Begin Message, ETS CP Nwk Rpt Maintenance Required Cmd
End

Begin Message, ETS CP Nwk Rpt Order Cmd
End

Begin Message, ETS CP Nwk Rpt Registration Accept Cmd
    RoamIndPresent, uint8
    RoamInd, uint8
End

Begin Message, ETS CP Nwk Rpt Registration Reject Cmd
End

Begin Message, ETS CP Nwk Rpt Service Ready Cmd
    BandClassInd, uint32, base=enum:VALNwkRptBandClassT
    BandBlockInd, uint8
    Sid, uint16
    Nid, uint16
    NetworkType, uint8
    ProtRev, uint8
End

Begin Message, ETS CP Nwk Rpt Service Negotiation Mode Cmd
End

Begin Message, ETS CP Nwk Rpt Start Continuous Dtmf Cmd
End

Begin Message, ETS CP Nwk Rpt Stop Continuous Dtmf Cmd
End

Begin Message, ETS CP Nwk Rpt System Time Cmd
    SysTime, array, type=uint8, maxsize=5
    LpSec, uint8
    LtmOff, int8
    DayLt, uint8
End

Begin Message, ETS CP Nwk Rpt Unlock Cmd
End

Begin Message, ETS CP Psw E911 Mode Cmd
    mode, uint8
End

Begin Message, ETS CP Roam Indication Cmd
    RoamInd, uint8
End

Begin Message, ETS CP Rpt Cqa Cmd
    Alarm, uint8
End

Begin Message, ETS CP KPad Disabled Cmd
    Disabled, uint8, base=bool:False/True, default=False
End

Begin Message, ETS CP Emergency Mode Test Cmd
    Qualifier, uint16, base=enum:Off/On, default = OFF
End

Begin Message, ETS CP Flush Ack Cmd
End

Begin Message, ETS CP Flush Rf Ack Cmd
End

Begin Message, ETS CP Nv Msg Ack Cmd
End

Begin Message, ETS CP Read Raw IMSI Cmd
End

Begin Message, ETS CP Write Raw IMSI Cmd
    Update, uint32,base=enum:IMSI Update Field, default=IMSI_M
    Raw IMSI_S, string ,length=10, columns=55
    Update IMSI_11_12, uint8,  base=bool
    Raw IMSI_11_12, string,length = 2, columns=17
    Update MCC, uint8, base=bool
    Raw MCC, string ,length = 3,columns=10
    Overwrite MDN with IMSI_S, uint8,base=bool:False/True, default=True
End

Begin Message, ETS CP Write Raw MDN Cmd
    Raw MDN, string ,length=15, columns=55
End

Begin Message, ETS CP TCPB Send Data Request Cmd
    Sap, uint8
    Canned Data Set, uint8
End

Begin Message, ETS CP UDPB Send Data Request Cmd
    Sap, uint8, default=2
    IP Addr, uint32, default=0xFAFFFFEF
    Port, uint16, default=1900
End

Begin Message, ETS CP VAL Audio Tuning Init Params Cmd
    Data Source, uint8, base=enum:Init Defaults/Init from File, default=Init Defaults
    File Name, string, length=90, columns=30
End

Begin Message, ETS CP VAL Audio Tuning Read Params
    Param Type, uint8,  base=enum:Tuning Read Messages
    Upd Msgs, union,  enum=Param Type
End

Begin Message, CP VAL Audio Tuning Read Params Spkr Vol Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params Mic Vol Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params Sidetone Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params Mic BIF Mode Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params Mic ANS Mode Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params Spkr FIF Mode Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params ACP Mode Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params AEC Mode Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params ACP Params Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params AEC Params Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params Mic ANS Params Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params TTY Params Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params Mic FIF Params Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params Mic BIF Params Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params Spkr FIF Params Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, CP VAL Audio Tuning Read Params Ringer Params Cmd
    Read Defaults, uint8, base=bool
End

Begin Message, ETS CP VAL Audio Tuning Update Params
    Param Type, uint8,  base=enum:Tuning Update Messages
    Upd Msgs, union,  enum=Param Type
End

Begin Message, CP VAL Audio Tuning Update Params Spkr Vol Cmd
    Mode, uint8,  base=10
    Data Size, uint16
    Spkr Vol, array, type=int16, size=end, maxsize=320
End

Begin Message, CP VAL Audio Tuning Update Params Mic Vol Cmd
    Mode, uint8,  base=10
    Data Size, uint16
    Mic Vol, array, type=int16, maxsize=32
End

Begin Message, CP VAL Audio Tuning Update Params Sidetone Cmd
    Mode, uint8,  base=10
    Data Size, uint16
    Multiplier, uint16, base=10
    Sidetone, array, type=int8, maxsize=32
End

Begin Message, CP VAL Audio Tuning Update Params Mic BIF Mode Cmd
    Mode, uint8,  base=10
    Data Size, uint16
    Mic BIF Mode, array, type=int16, maxsize=32
End

Begin Message, CP VAL Audio Tuning Update Params Mic Ans Mode Cmd
    Mode, uint8,  base=10
    Data Size, uint16
    Mic ANS Mode, array, type=int8, maxsize=32
End

Begin Message, CP VAL Audio Tuning Update Params Spkr FIF Mode Cmd
    Mode, uint8,  base=10
    Data Size, uint16
    Spkr FIF Mode, array, type=int16, maxsize=32
End

Begin Message, CP VAL Audio Tuning Update Params Acp Mode Cmd
    Mode, uint8,  base=10
    Data Size, uint16
    ACP Mode, array, type=int16, maxsize=96
End

Begin Message, CP VAL Audio Tuning Update Params AEC Mode Cmd
    Mode, uint8,  base=10
    Data Size, uint16
    AEC Mode, array, type=int16, maxsize=32
End

Begin Message, CP VAL Audio Tuning Update Params Acp Params Cmd
    Mode, uint8,  base=10
    Data Size, uint16
    ACP Parms, array, type=int16, maxsize=287
End

Begin Message, CP VAL Audio Tuning Update Params Aec Params Cmd
    Mode, uint8,  base=10
    Data Size, uint16
    AEC Parms, array, type=int16, maxsize=287
End

Begin Message, CP VAL Audio Tuning Update Params Mic ANS Params Cmd
    Mode, uint8,  base=10
    Data Size, uint16
    Mic ANS Parms, array, type=int16, maxsize=7
End

Begin Message, CP VAL Audio Tuning Update Params TTY Params Cmd
    Mode, uint8,  base=10
    Data Size, uint16
    TTY Parms, array, type=int16, maxsize=14
End

Begin Message, CP VAL Audio Tuning Update Params Mic BIF Params Cmd
    Mode, uint8,  base=10
    Data Size, uint16
    Mic BIF Parms, array, type=int16, maxsize=133
End

Begin Message, CP VAL Audio Tuning Update Params Spkr FIF Params Cmd
    Mode, uint8,  base=10
    Data Size, uint16
    Spkr FIF Parms, array, type=int16, maxsize=133
End

Begin Message, ETS CP VAL Audio Tuning Store Params File Cmd
    File Name, string, length=90, columns=30
End

Begin Message, ETS CP VAL Get Network Info Cmd
End

Begin Message, ETS CP VAL OTA Activate Cmd
    Automatic, uint8, base=bool,default=FALSE
    MDN, string, length=17
    MIN, uint64,base=10
    ActivateCode, string, length=9
    HomeSID, uint32,base=10
    SetMNHA, uint8, base=bool
    MNHASize, uint32,base=10
    MNHA, string, length=17
    SetMNAAA, uint8, base=bool
    MNAAASize, uint32,base=10
    MNAAA, string, length=17
End

Begin Message, ETS CP VAL Get Conn Info Cmd
End

Begin Message, ETS CP VAL Get Ntwk Err Str Cmd
    ErrCode, uint32,base=enum:VAL Ntwk Err Code
End

Begin Message, ETS CP VAL Silent Log Cfg Create Cmd
    FileName, string, length=128, columns=30
End

Begin Message, ETS CP VAL Silent Log Parms Set Cmd
    Count (0 to disable), uint16, base=10, default=0
    Continuous Logging, uint32,  base=enum:Parm Chg
    Log Fault Messages, uint32,  base=enum:Parm Chg
    Cfg FileName, string, length=128, columns=30
End

Begin Message, ETS CP VAL Silent Log Parms Get Cmd
End

Begin Message, ETS CP VAL Silent Log Data Info Get Cmd
End

Begin Message, ETS CP HSPD Profile Data Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default =All Params in a Profile Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    ProfileId, uint8,  base=10, default=0
    Valid, uint32,  base=enum:Invalid/Valid, default=Valid
    MN Home IP Address, array,  type=uint8, maxsize=4, base=10, default=0
    HA Primary IP Address, array,  type=uint8, maxsize=4, base=10, default=255
    HA Secondary IP Address, array,  type=uint8, maxsize=4, base=10, default=255
    MN NAI, string, length=72, default=1234567890@vzw3g.com
    DUN NAI, string, length=72, default=1234567890@vzw3g.com
    MN Reverse Tunneling, uint8,  base=bool:False/True, default=True
    MN HA SPI Enable, uint32,  base=bool:False/True, default=True
    MN HA SPI, uint32, base=10, default=300
    MN AAA SPI Enable, uint32,  base=bool:False/True, default=True
    MN AAA SPI, uint32, base=10, default=2
End

Begin Message, ETS CP HSPD Profile Data Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default =All Params in a Profile Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    ProfileId, uint8,  base=10, default=0
End

Begin Message, ETS CP HSPD Secure Profile Text Data Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default =Secure Text Data in a profile Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    ProfileId, uint8,  base=10, default=0
    Valid, uint32,  base=enum:Invalid/Valid, default=valid
    AAA Password Length, uint8,  base=10, default = 6
    MN_AAA_PASSWORD, string, length=16,default = secret
    HA Password Length, uint8,  base=10, default = 6
    MN_HA_PASSWORD, string, length=16,default = secret
End

Begin Message, ETS CP HSPD Secure Profile Byte Data Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default =Secure Byte Data in a profile Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    ProfileId, uint8,  base=10, default=0
    Valid, uint32,  base=enum:Invalid/Valid, default=valid
    AAA Password Length, uint8,  base=10, Readonly = 1, default=16
    MN_AAA_PASSWORD, array,  type=uint8, maxsize=16, size=AAA Password Length, base=16
    HA Password Length, uint8,  base=10, Readonly = 1, default=16
    MN_HA_PASSWORD, array,  type=uint8, maxsize=16, size=HA Password Length, base=16
End

Begin Message, ETS CP HSPD Secure Profile Data Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default =Secure Data in a profile Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    ProfileId, uint8,  default=0, base=10
End

Begin Message, ETS CP Active Profile ID Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Profile Id of Active Profile Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    ActiveProfile, uint32, base=10, default=0
End

Begin Message, ETS CP Active Profile ID Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Profile Id of Active Profile Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP Number Of Profile Set Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default = Number of Profiles Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    NumProfiles, uint8, base=10, default=1
End

Begin Message, ETS CP Number Of Profile Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Number of Profiles Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP All Data Init Cmd
    Mode, uint32, base=enum:Init All Data Mode, Default=Factory Default Non Provisioned
End

Begin Message, ETS CP Seg Data Init Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = All HSPD Seg Data Init, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP Seg Profile Data Init Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Seg Profile Data Init, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    ProfileId, uint8, default=0, base=10
End

Begin Message, ETS CP Secure DB Init Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Secure Seg Data Init, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    ProfileId, uint8, base=10, default=0
End

Begin Message, ETS CP MIP Password String Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP Password String Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Profile ID, uint8,  base=10, default=0
    MIP HA PASSWORD, string, length=16, default = ABCDE1234567890
    MIP AAA PASSWORD, string, length=16, default = 1234567890ABCDE
End

Begin Message, ETS CP MIP Password String Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP Password String Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Profile ID, uint8,  base=10, default=0
End

Begin Message, ETS CP MIP Password Hex Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP Password HEX Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Profile ID, uint8,  base=10, default=0
    AAA Password Length, uint8,  Readonly = 1, min=0, max=16, base=10, default=16
    MIP AAA Password, array,  type=uint8, maxsize=16, size=AAA Password Length, base=16
    HA Password Length, uint8,  Readonly = 1, min=0, max=16, base=10, default=16
    MIP HA Password, array,  type=uint8, maxsize=16, size=HA Password Length, base=16
End

Begin Message, ETS CP MIP Password Hex Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP Password HEX Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Profile ID, uint8,  base=10, default=0
End

Begin Message, ETS CP Mobile Node HA Authentication Mode Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Mobile Node-HA Authentication Set, Readonly = 1
    opType, uint8,        base=enum:ParmOperationType, Default=Parm Custom Value
    MN_HA_AUTH, uint8,  base=enum:HAAuthNumber, default=RFC2002bis
End

Begin Message, ETS CP Mobile Node HA Authentication Mode Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Mobile Node-HA Authentication Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP MN HA Auth Algorithm Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MN HA Auth Algorithm Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    MN_HA_Auth_Algo, uint8,  base=enum:AuthAlgoNumber,default=MD5 Auth Algorithm
End

Begin Message, ETS CP MN HA Auth Algorithm Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MN HA Auth Algorithm Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP MN AAA Auth Algorithm Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MN AAA Auth Algorithm Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    MN_AAA_Auth_Algo, uint8,  base=enum:AuthAlgoNumber,default=MD5 Auth Algorithm
End

Begin Message, ETS CP MN AAA Auth Algorithm Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MN AAA Auth Algorithm Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP MIP Registration Response Timeout Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP Registration Response Timeout Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    RRPTimeout, uint8, base=10, default=3
End

Begin Message, ETS CP MIP Registration Response Timeout Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP Registration Response Timeout Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP MIP Registration Retries Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP Registration Retries Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    NumRegRetries, uint8, base=10, default=2
End

Begin Message, ETS CP MIP Registration Retries Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP Registration Retries Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP MIP Pre-Reregistration Timeout Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP Pre-Reregistration Timeout Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    RRA(sec), uint16, base=10, default=26
End

Begin Message, ETS CP MIP Pre-Reregistration Timeout Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP Pre-Reregistration Timeout Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP DMU RSA Public Key or DMU Test RSA Public Key Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = DMU RSA or DMU Test RSA Public Key Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    ActiveDmuRsaPublicKey, uint8,  base=enum:DmuRsaPublicKeyNumber, default=1
End

Begin Message, ETS CP DMU RSA Public Key or DMU Test RSA Public Key Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = DMU RSA or DMU Test RSA Public Key Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP NPKOI Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Active nPKOI Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    nPKOI, uint8, base=16, default=10
End

Begin Message, ETS CP NPKOI Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Active nPKOI Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP MN Authenticator Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MN_Authenticator Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    MN_Authenticator, array,  type=uint8, maxsize=3, base=16, default=0xFF
End

Begin Message, ETS CP MN Authenticator Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MN_Authenticator Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP MIP De_Registration Retries Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP De-Registration Retries Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    NumDeRegRetries, uint8, base=10, default=2
End

Begin Message, ETS CP MIP De_Registration Retries Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP De-Registration Retries Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP MIP Re-Reg Only If Traffic Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP Re-Reg Only If Traffic Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    Re-Reg Only If Traffic Enabled, uint32, base=bool:False/True, default=True
End

Begin Message, ETS CP MIP Re-Reg Only If Traffic Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP Re-Reg Only If Traffic Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD MIP NAI Enabled Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP NAI Enable Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    MIP NAI Enabled, uint32, base=bool:False/True, default=True
End

Begin Message, ETS CP HSPD MIP NAI Enabled Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP NAI Enable Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP SIP NAI Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default=SIP NAI Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    SIP_NAI, string, length = 72, default=01234567890@vzw3g.com
End

Begin Message, ETS CP SIP NAI Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = SIP NAI Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP SIP Password String Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = SIP Password String Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    SIP_PASSWORD, string, length=16
End

Begin Message, ETS CP SIP Password String Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = SIP Password String Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP SIP Password Hex Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = SIP Password HEX Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    SIP Password Length, uint8,  Readonly = 1, max=16, base=10, default=16
    SIP Password array, array,  type=uint8, maxsize=16, size=SIP Password Length, base=16
End

Begin Message, ETS CP SIP Password Hex Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = SIP Password HEX Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP SIP DUN NAI Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = SIP DUN NAI Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    SIP_NAI, string, length = 72, default=1234567890@vzw3g.com
End

Begin Message, ETS CP SIP DUN NAI Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = SIP DUN NAI Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP VAL PPP-Um Configuration Set Cmd
    ParmOperationId, uint8,    base=enum:HlpParmOperationId, Default = PPP-UM Configuration Set, Readonly = 1
    opType, uint8,    base=enum:ParmOperationType, Default=Parm Custom Value
    LCP Req Retry, uint8,    base=10, default= 10
    LCP NAK Retry, uint8,    base=10, default= 10
    LCP Restart Timer, uint16,   base=10, default= 3000
    LCP Term Retry, uint8,    base=10, default= 2
    LCP Term Timer, uint16,   base=10, default= 3000
    PPP Auth Retry, uint8,    base=10, default= 5
    PPP Auth Timer, uint16,   base=10, default= 3000
    NCP Req Retry, uint8,    base=10, default= 10
    NCP NAK Retry, uint8,    base=10, default= 10
    NCP Restart Timer, uint16,   base=10, default= 3000
    NCP Term Retry, uint8,    base=10, default= 2
    NCP Term Timer, uint16,   base=10, default= 3000
End

Begin Message, ETS CP VAL PPP-Um Configuration Get Cmd
    ParmOperationId, uint8,    base=enum:HlpParmOperationId, Default = PPP-UM Configuration Get, Readonly = 1
    opType, uint8,    base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD PPP Rm Config Set Cmd
    ParmOperationId, uint8,    base=enum:HlpParmOperationId, Default = PPP-RM Configuration Set, Readonly = 1
    opType, uint8,    base=enum:ParmOperationType, Default=Parm Custom Value
    PPP Keep Alive Mode, uint32,    base=bool:False/True, default=False
    PPP Detect Mode, uint32,    base=bool:False/True, default=False
    LCP Req Retry, uint8,    base=10, default=3
    LCP NAK Retry, uint8,    base=10, default=3
End

Begin Message, ETS CP HSPD PPP Rm Config Get Cmd
    ParmOperationId, uint8,    base=enum:HlpParmOperationId, Default = PPP-RM Configuration Get, Readonly = 1
    opType, uint8,    base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD TCP Config Set Cmd
    ParmOperationId, uint8,    base=enum:HlpParmOperationId, Default = TCP Configuration Set, Readonly = 1
    opType, uint8,    base=enum:ParmOperationType, Default=Parm Custom Value
    TCP MTU, uint16,   base=10, default = 1460
End

Begin Message, ETS CP HSPD TCP Config Get Cmd
    ParmOperationId, uint8,    base=enum:HlpParmOperationId, Default = TCP Configuration Get, Readonly = 1
    opType, uint8,    base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP SIP Auth Prefer Set Cmd
    ParmOperationId, uint8,    base=enum:HlpParmOperationId, Default = SIP Auth Pref Set, Readonly = 1
    opType, uint8,    base=enum:ParmOperationType, Default=Parm Custom Value
    Auth Prefer, uint8,   base=enum:SIP Auth PreferT, default=AUTH_PAP_CHAP
End

Begin Message, ETS CP SIP Auth Prefer Get Cmd
    ParmOperationId, uint8,    base=enum:HlpParmOperationId, Default = SIP Auth Pref Get, Readonly = 1
    opType, uint8,    base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP AN NAI Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = AN NAI(A12 Testing)Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    AN_NAI, string, length = 72,default=1234567890@vzw3g.com
End

Begin Message, ETS CP AN NAI Get Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default = AN NAI(A12 Testing)Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP AN Password Set Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default = AN Password Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    AN_PASSWORD, string, length = 16
End

Begin Message, ETS CP AN Password Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = AN Password Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP AN Password Hex Set Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default = AN Password HEX Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    AN Password Len, uint8,  Readonly=1, base=10, default=16
    AN Password, array,  type=uint8, maxsize=16, size=AN Password Len, base=16
End

Begin Message, ETS CP Primary DNS IP Addr Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = DNS Primary Addr Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Primary DNS IP Addr, array,  type=uint8, maxsize=4, base=10
End

Begin Message, ETS CP Primary DNS IP Addr Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = DNS Primary Addr Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP Secondary DNS IP Addr Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = DNS Secondary Addr Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Secondary DNS IP Addr, array,  type=uint8, maxsize=4, base=10
End

Begin Message, ETS CP Secondary DNS IP Addr Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = DNS Secondary Addr Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD Mn Nai Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_SET_MN_NAI, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
    MN NAI, string, indent=1, length = 72, default =1234567890@vzw3g.com
End

Begin Message, ETS CP HSPD Mn Nai Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_GET_MN_NAI, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
End

Begin Message, ETS CP HSPD Mn Dun Nai Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_SET_MN_DUN_NAI, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
    MN DUN NAI, string, indent=1, length = 72,default=1234567890@vzw3g.com
End

Begin Message, ETS CP HSPD Mn Dun Nai Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_GET_MN_DUN_NAI, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
End

Begin Message, ETS CP HSPD Mn Ha Spi Enable Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_SET_MN_HA_SPI_ENABLE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
    MN HA SPI Enable, uint32,base=bool,default = 1, indent = 1
End

Begin Message, ETS CP HSPD Mn Ha Spi Enable Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_GET_MN_HA_SPI_ENABLE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
End

Begin Message, ETS CP HSPD Mn Ha Spi Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_SET_MN_HA_SPI, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
    MN HA SPI, uint32,base=10,indent=1,default=300
End

Begin Message, ETS CP HSPD Mn Ha Spi Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_GET_MN_HA_SPI, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
End

Begin Message, ETS CP HSPD Mn Aaa Spi Enable Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_SET_MN_AAA_SPI_ENABLE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
    MN AAA SPI Enable, uint32,base=bool,default = 1, indent = 1
End

Begin Message, ETS CP HSPD Mn Aaa Spi Enable Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_GET_MN_AAA_SPI_ENABLE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
End

Begin Message, ETS CP HSPD Mn Aaa Spi Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_SET_MN_AAA_SPI, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
    MN AAA SPI, uint32,base=10,indent=1,default=2
End

Begin Message, ETS CP HSPD Mn Aaa Spi Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_GET_MN_AAA_SPI, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
End

Begin Message, ETS CP HSPD Mn Reverse Tunneling Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_SET_MN_REVERSE_TUNNELING, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
    MN Reverse Tunneling, uint8,base=bool, default=1,indent =1
End

Begin Message, ETS CP HSPD Mn Reverse Tunneling Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_GET_MN_REVERSE_TUNNELING, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
End

Begin Message, ETS CP HSPD Mn Home Ip Address Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_SET_MN_HOME_IP_ADDRESS, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
    MN Home IP Address, array, type=uint8,base=10,maxsize=4,indent=1
End

Begin Message, ETS CP HSPD Mn Home Ip Address Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_GET_MN_HOME_IP_ADDRESS, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
End

Begin Message, ETS CP HSPD Home Agent Primary Ip Address Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_SET_HOME_AGENT_PRIMARY_IP_ADDRESS, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
    MN HA Pri IP Address, array, type=uint8,base=10,maxsize=4,indent=1
End

Begin Message, ETS CP HSPD Home Agent Primary Ip Address Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_GET_HOME_AGENT_PRIMARY_IP_ADDRESS, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
End

Begin Message, ETS CP HSPD Home Agent Secondary Ip Address Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_SET_HOME_AGENT_SECONDARY_IP_ADDRESS, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
    MN HA Sec IP Address, array, type=uint8,base=10,maxsize=4,indent=1
End

Begin Message, ETS CP HSPD Home Agent Secondary Ip Address Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HL_PARM_GET_HOME_AGENT_SECONDARY_IP_ADDRESS, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Profile Id, uint8,base=10,indent = 1
End

Begin Message, ETS CP Dormant Handoff Optimization Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Dormant Handoff Optimization Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    DormantHandoffOptSet, uint8,  base=enum:False/True, default=True
End

Begin Message, ETS CP Dormant Handoff Optimization Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Dormant Handoff Optimization Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP Data SCRM Enable Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Data SCRM Enable Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    DataScrmEnabled, uint8,  base=enum:False/True, default=True
End

Begin Message, ETS CP Data SCRM Enable Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Data SCRM Enable Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP Data Throttling Enable Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Data Throttling Enable Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    DataTrtlEnabled, uint8,  base=enum:False/True, default=True
End

Begin Message, ETS CP Data Throttling Enable Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Data Throttling Enable Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP VJ Compression Enable Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = VJ Compression Enable Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    VJ Compression Enabled, uint8,  base=bool:False/True, default=False
End

Begin Message, ETS CP VJ Compression Enable Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = VJ Compression Enable Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD Data QNC Enabled Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = QNC Enabled Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    QNC Enabled, uint32,  base=bool:False/True, default=False
End

Begin Message, ETS CP HSPD Data QNC Enabled Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = QNC Enabled Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD Data DDTM Enabled Set Cmd
    ParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_DDTM_MODE_ENABLED, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    HSPD Data DDTM Enabled, uint8,  base=bool:False/True, default=False
End

Begin Message, ETS CP HSPD Data DDTM Enabled Get Cmd
    ParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_DDTM_MODE_ENABLED, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD Data DO to 1X Enabled Set Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default = HSPD Data DO to 1X Enabled Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    HSPD Data DO to 1X Enabled, uint8,  base=bool:False/True, default=True
End

Begin Message, ETS CP HSPD Data DO to 1X Enabled Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = HSPD Data DO to 1X Enabled Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD IS801 IPAddr Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = IS801 Ip Addr Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Is801_IpAddr, array,  type=uint8, maxsize=4, base=10
End

Begin Message, ETS CP HSPD IS801 IPAddr Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = IS801 Ip Addr Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD IS801 Port Number Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = IS801 IP Port Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Is801_PortNum, uint16
End

Begin Message, ETS CP HSPD IS801 Port Number Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = IS801 IP Port Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP IS801 UserID Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = IS801 userID Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Is801_UserId, string, length=72
End

Begin Message, ETS CP IS801 UserID Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = IS801 userID Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP IS801 PassWord Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = IS801 Password Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Is801_Pswd, string, length=16
End

Begin Message, ETS CP IS801 PassWord Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = IS801 Password Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP IS801 Called Number Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = IS801 Callnumber Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Is801_CalledNumber, string, length=33
End

Begin Message, ETS CP IS801 Called Number Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = IS801 Callnumber Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD Data All Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default =All HSPD Seg Data Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    RRPTimeout, uint8,  default=3, base=10
    NumRegRetries, uint8,  default=2, base=10
    RRA(sec), uint16, default=26, base=10
    Is801_IpAddr, array,  type=uint8, maxsize=4, base=10, default=255
    Is801_PortNum, uint16, base=10, default=0
    Is801_UserId, string, length=72, default=1234567890@vzw3g.com
    Is801_Pswd, string, length=16, default=secret
    Is801_CalledNumber, string, length=33, default=#777
    MN_HA_AUTH, uint8,  base=enum:HAAuthNumber, default=RFC2002bis
    MN_HA_Auth_Algo, uint8,  base=enum:AuthAlgoNumber, default=MD5 Auth Algorithm
    MN_AAA_Auth_Algo, uint8,  base=enum:AuthAlgoNumber, default=MD5 Auth Algorithm
    MN_Authenticator, array,  type=uint8, maxsize=3, base=16, default=0xFF
    ActiveDmuRsaPublicKey, uint8,  base=enum:DmuRsaPublicKeyNumber, default=Enable Test Key
    nPKOI, uint8,  default=0xA
    SIP_NAI, string, length = 72, default=1234567890@vzw3g.com
    SIP_DUN_NAI, string, length = 72, default=1234567890@vzw3g.com
    AN_NAI, string, length = 72, default=1234567890@vzw3g.com
    DormantHandoffOptSet, uint8,  base=bool:False/True, default=True
    DataScrmEnabled, uint8,  base=bool:False/True, default=True
    DataTrtlEnabled, uint8,  base=bool:False/True, default=True
    PrefRc, uint8,  base=enum:RcNumber, default=RC3
    DNS_PRI_IP_ADDR, array,  type=uint8, maxsize=4, base=10
    DNS_SEC_IP_ADDR, array,  type=uint8, maxsize=4, base=10
    MIPMode, uint8,  base=enum:IP Service Type2, default=Mobile IP Preferred
    ActiveProfile, uint32, base=10, default=0
    NumProfiles, uint8,  base=10, default=8, Readonly=1
    VJCompressionEnabled, uint8,  base=bool:False/True, default=False, Readonly = 1
    SipAuthPref, uint8,  base=enum:SIP Auth PreferT, default=AUTH_PAP_CHAP
    SIP_PASSWORD, string, length=16, default=secret
    AN_PASSWORD, string, length=16, default=secret
    ConRetryMaxCounter, uint8,  base=10, default=3
End

Begin Message, ETS CP HSPD Data All Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default =All HSPD Seg Data Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP Mobile IP Mode Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP Mode Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    IP Service Type, uint8,  base=enum:IP Service Type2, default = Mobile IP Preferred
End

Begin Message, ETS CP Mobile IP Mode Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MIP Mode Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP Preferred Radio Config Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Preferred Radio Config Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    PrefRc, uint8,  base=enum:RcNumber,default=RC3
End

Begin Message, ETS CP Preferred Radio Config Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Preferred Radio Config Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP Packet Dial String Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Packet Dial String Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Packet Dial String, string, length = 11, default=#777
End

Begin Message, ETS CP Packet Dial String Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Packet Dial String Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD Data MDR Mode Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MDR Mode Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    MDR Mode, uint8,  base=10
End

Begin Message, ETS CP HSPD Data MDR Mode Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = MDR Mode Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP AKA Password Set Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default = AKA Password Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    AKA_PASSWORD, array, type=uint8, maxsize=16, base=16
End

Begin Message, ETS CP AKA Password Get Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default = AKA Password Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP AKA Profile Data Set Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default = AKA Profile Data Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    NAI, string, length = 72
    AccessNetwork Identity, string, length = 72
    OP Codes, array, type=uint8, maxsize=16, base=16
    msSQN1, array, type=uint8, maxsize=6, base=16
    msSQN2, array, type=uint8, maxsize=6, base=16
    msSQN3, array, type=uint8, maxsize=6, base=16
    msSQN4, array, type=uint8, maxsize=6, base=16
    msSQN5, array, type=uint8, maxsize=6, base=16
    msSQN6, array, type=uint8, maxsize=6, base=16
    msSQN7, array, type=uint8, maxsize=6, base=16
    msSQN8, array, type=uint8, maxsize=6, base=16
    msSQN9, array, type=uint8, maxsize=6, base=16
    msSQN10, array, type=uint8, maxsize=6, base=16
    msSQN11, array, type=uint8, maxsize=6, base=16
    msSQN12, array, type=uint8, maxsize=6, base=16
    msSQN13, array, type=uint8, maxsize=6, base=16
    msSQN14, array, type=uint8, maxsize=6, base=16
    msSQN15, array, type=uint8, maxsize=6, base=16
    msSQN16, array, type=uint8, maxsize=6, base=16
    msSQN17, array, type=uint8, maxsize=6, base=16
    msSQN18, array, type=uint8, maxsize=6, base=16
    msSQN19, array, type=uint8, maxsize=6, base=16
    msSQN20, array, type=uint8, maxsize=6, base=16
    msSQN21, array, type=uint8, maxsize=6, base=16
    msSQN22, array, type=uint8, maxsize=6, base=16
    msSQN23, array, type=uint8, maxsize=6, base=16
    msSQN24, array, type=uint8, maxsize=6, base=16
    msSQN25, array, type=uint8, maxsize=6, base=16
    msSQN26, array, type=uint8, maxsize=6, base=16
    msSQN27, array, type=uint8, maxsize=6, base=16
    msSQN28, array, type=uint8, maxsize=6, base=16
    msSQN29, array, type=uint8, maxsize=6, base=16
    msSQN30, array, type=uint8, maxsize=6, base=16
    msSQN31, array, type=uint8, maxsize=6, base=16
    msSQN32, array, type=uint8, maxsize=6, base=16
End

Begin Message, ETS CP AKA Profile Data Get Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default = AKA Profile Data Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD Lock Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Lock Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD Lock Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Lock Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Lock Code, uint16, base=10
    Lock Value, uint32,  base=enum:FALSE/TRUE
End

Begin Message, ETS CP HSPD Lock Code Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Lock Code Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Current Lock Code, uint16, base=10
    New Lock Code, uint16, base=10
End

Begin Message, ETS CP HSPD Data Auto Packet Detection Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Data Auto Packet Detection Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    Enable, uint32,  base=bool
End

Begin Message, ETS CP HSPD Data Auto Packet Detection Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Data Auto Packet Detection Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD Data SO Set Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Data SO Set, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
    SO, uint32,  base=enum:HlpDataSOType, Default=IS701
End

Begin Message, ETS CP HSPD Data SO Get Cmd
    ParmOperationId, uint8, base=enum:HlpParmOperationId, Default = Data SO Get, Readonly = 1
    opType, uint8,  base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP SMS Set AUTOREG Flag Cmd
    Data, record, type=CP Customized Data Rec, maxsize=1
End

Begin Record, CP Customized Data Rec
    AutoReg, uint8, base=enum:CP CustomAutoReg Enum
End

Begin Message, ETS CP SMS Get AUTOREG Flag Cmd
End

Begin Message, ETS CP DO Parm Init Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default = DO Parm Init Cmd, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP DO Hybrid Mode Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId,Default=Hybrid Mode Set,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    HybridMode, uint32,base=enum:HybridModeT,default=Hybrid
End

Begin Message, ETS CP DO Hybrid Pref Mode Get Cmd
    ParmOperationId, uint8,base=enum:DOParmOperationId,Default=Hybrid Pref Mode Get,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP DO Pref CC Cycle Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Pref CC Cycle Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    PrefCCCycleEnable, uint32, base=enum:Diable/Enable, default=Enable
    PrefCCCycle, uint32,default=0
End

Begin Message, ETS CP DO Pref CC Cycle Get Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Pref CC Cycle Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP DO Stream Configuration Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default=Stream Configuration Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    Stream0Configuration, uint16, default=0
    Stream1Configuration, uint16, default=0xffff
    Stream2Configuration, uint16, default=5
    Stream3Configuration, uint16, default=0xffff
End

Begin Message, ETS CP DO Stream Configuration Get Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Stream Configuration Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP DO Force Release0 Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Force Release0 Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    ScpForceRel0Config, uint32,base=enum:Disable/Enable, default=Enable
End

Begin Message, ETS CP DO Force Release0 Get Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Force Release0 Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP DO Not Disturb Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Not Disturb Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    NotDisturb, uint8,base=enum:Disable/Enable, default=Enable
End

Begin Message, ETS CP DO Not Disturb Get Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Not Disturb Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP DO FT MAC DRC Gating Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =FT MAC DRC Gating Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    FtMacDrcGating, uint8,  base=enum:DrcGatingT,default=Continous
End

Begin Message, ETS CP DO FT MAC DRC Gating Get Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =FT MAC DRC Gating Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP DO LUP Unsolicited Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =LUP Unsolicited Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    LUPUnsolicitedEnable, uint32,base=enum:UnsolicitedT, default=Enable
End

Begin Message, ETS CP DO LUP Unsolicited Get Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =LUP Unsolicited Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP DO Rx Diversity Ctrl Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Rx Diversity Ctrl Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    RxDiversityCtrl, uint8
End

Begin Message, ETS CP DO Rx Diversity Ctrl Get Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Rx Diversity Ctrl Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP DO Subtype Config Data Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Subtype Config Data Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    Protocol Type, uint16,base=enum:DScpProtocolType Enum
    numValue, uint8
    Protocol Subtypes, array, type=uint16, maxsize=5, base=10
End

Begin Message, ETS CP DO Subtype Config Data Get Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Subtype Config Data Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    Protocol Type, uint16,base=enum:DScpProtocolType Enum, default=0xffff
End

Begin Message, ETS CP DO Protocol Config Disable Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Protocol Config Disable Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    Protocol Type, uint16,base=enum:DScpProtocolType Enum
End

Begin Message, ETS CP DO Extended Slot Cycle Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Extended Slot Cycle Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    T_Dual_Idle(unit:seconds), uint16, base=10, default= 60
    T_HRPD_ExtendedSC, uint8, base=enum:ExtendedSC_Enum, default=24576 slots(40.96s)
    T_1x_ExtendedSC, uint8, base=enum:ExtendedSC_Enum, default=24576 slots(40.96s)
End

Begin Message, ETS CP DO Extended Slot Cycle Get Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Extended Slot Cycle Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP DO Periodical Search Cycle Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Periodical Search Cycle Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    T_HRPD_Init(unit:seconds), uint16, base=10
    T_1x_Init(unit:seconds), uint16, base=10
End

Begin Message, ETS CP DO Periodical Search Cycle Get Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =Periodical Search Cycle Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD Dormant Timer Set Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default =Dormant Timer Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    T_Dormancy(unit:seconds), uint16, base=10, default= 30
    T_HRPD_Search(unit:seconds), uint16, base=10, default= 300
    T_Rapid_Dormancy(unit:seconds), uint16, base=10, default= 3
    T_ResDef_Dormancy(unit:seconds), uint16, base=10, default= 2
End

Begin Message, ETS CP HSPD Dormant Timer Get Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default =Dormant Timer Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP CT DO Default Band Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =CT DO Default Band Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    Band(1), uint32,  base=enum:Cdma Band, default=BAND_CLASS_0
    Channe(l), uint16, base=10, max=2047, default= 37
    Band(2), uint32,  base=enum:Cdma Band, default=BAND_CLASS_0
    Channel(2), uint16, base=10, max=2047, default= 78
    Band(3), uint32,  base=enum:Cdma Band, default=BAND_CLASS_0
    Channel(3), uint16, base=10, max=2047, default= 0
    Band(4), uint32,  base=enum:Cdma Band, default=BAND_CLASS_0
    Channel(4), uint16, base=10, max=2047, default= 0
    Band(5), uint32,  base=enum:Cdma Band, default=BAND_CLASS_0
    Channel(5), uint16, base=10, max=2047, default= 0
End

Begin Message, ETS CP CT DO Default Band Get Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default =CT DO Default Band Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD Network Or Relay Mode Set Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default = Network or Relay Mode Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    ProtocolConfig, uint32,  base=enum:NtwrkRelayMode_Enum, Default=Network Mode
End

Begin Message, ETS CP HSPD Network Or Relay Mode Get Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default =Network or Relay Mode Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP DO Pref Mode Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default = Pref Mode Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    Prefered Mode, uint32,base=enum:Pref Modes,default=Automatic
End

Begin Message, ETS CP DO Pref Mode Get Cmd
    ParmOperationId, uint8,base=enum:DOParmOperationId,Default=Pref Mode Get,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP DO Hybrid Mode Get Cmd
    ParmOperationId, uint8,base=enum:DOParmOperationId,Default=Hybrid Mode Get,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP KDDI DO Retry Timer Set Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default =Retry Timer Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    DO_Retry(unit:seconds), uint16, base=10, default= 60
End

Begin Message, ETS CP KDDI DO Retry Timer Get Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default =Retry Timer Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP HSPD OMADM Dormant Timer Set Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default =OMADM Dormant Timer Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    1x_to_LTE_handup_enabled, uint8,  base=enum:False/True, default=False
    T_1xps_Active_Duration(unit:seconds), uint16, base=10, default= 2
    T_1xps_Dormancy(unit:seconds), uint16, base=10, default= 2
    T_Max_Scan_Time(unit:seconds), uint16, base=10, default= 2
End

Begin Message, ETS CP HSPD OMADM Dormant Timer Get Cmd
    ParmOperationId, uint8,  base=enum:HlpParmOperationId, Default =OMADM Dormant Timer Get, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP DO eHRPD Mode Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default = eHRPD Mode Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    Mode, uint32,base=enum: [0 eHRPD Disable] / [1 eHRPD Enable]
End

Begin Message, ETS CP DO eHRPD Mode Get Cmd
    ParmOperationId, uint8,base=enum:DOParmOperationId,Default=eHRPD Mode Get,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP SBMG Branded mode Set Cmd
    ParmOperationId, uint8,  base=enum:DOParmOperationId, Default = SBMG Branded mode Set, Readonly = 1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    Mode, uint8,base=enum: [0 MODE Disable] / [1 MODE Enable]
End

Begin Message, ETS CP SBMG Branded mode Get Cmd
    ParmOperationId, uint8,base=enum:DOParmOperationId,Default=SBMG Branded mode Get,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Esn Meid Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_ESN_MEID, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Get Esn Meid Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_ESN_MEID, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Spc Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_SPC, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    SPC, uint32, base=10
End

Begin Message, ETS CP VAL PSW Parm Get Spc Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_SPC, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Akey Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_AKEY, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Akey, uint64, base=16
    checkSum, uint32, base=16
End

Begin Message, ETS CP VAL PSW Parm Get Akey Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_AKEY, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Prev Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_PREV, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    PRev, uint8, base=10
End

Begin Message, ETS CP VAL PSW Parm Get Prev Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_PREV, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Positive Sid Nid List Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_POSITIVE_SID_NID_LIST, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    SID, array, type=uint16, maxsize=20, base=10, indent = 2
    NID, array, type=uint16, maxsize=20, base=10, indent = 2
    max_count_in_List, uint32, base=10
End

Begin Message, ETS CP VAL PSW Parm Get Positive Sid Nid List Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_POSITIVE_SID_NID_LIST, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Negative Sid Nid List Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_NEGATIVE_SID_NID_LIST, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    SID, array, type=uint16, maxsize=20, base=10, indent = 2
    NID, array, type=uint16, maxsize=20, base=10, indent = 2
    max_count_in_List, uint32, base=10
End

Begin Message, ETS CP VAL PSW Parm Get Negative Sid Nid List Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_NEGATIVE_SID_NID_LIST, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Pri Sec Ch Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_PRI_SEC_CH, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    setA, uint32, base=bool
    CPC_A, uint16, base=10
    CSC_A, uint16, base=10
    setB, uint32, base=bool
    CPC_B, uint16, base=10
    CSC_B, uint16, base=10
End

Begin Message, ETS CP VAL PSW Parm Get Pri Sec Ch Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_PRI_SEC_CH, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set System Select Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_SYSTEM_SELECT, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    systemSelect, uint32, base=enum:SystemSelectType
End

Begin Message, ETS CP VAL PSW Parm Get System Select Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_SYSTEM_SELECT, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Slot Cycle Index Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_SLOT_CYCLE_INDEX, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    SlotCycleIndex, uint8, base=10
End

Begin Message, ETS CP VAL PSW Parm Get Slot Cycle Index Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_SLOT_CYCLE_INDEX, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Mdn Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_MDN, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Mdn_Digits, string, length=16
End

Begin Message, ETS CP VAL PSW Parm Get Mdn Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_MDN, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Prl Enable Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_PRL_ENABLE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Prl_Enable, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Get Prl Enable Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_PRL_ENABLE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Home Sys Registration Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_HOME_SYS_REGISTRATION, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Home_System_Registration, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Get Home Sys Registration Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_HOME_SYS_REGISTRATION, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Foreign Sid Registration Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_FOREIGN_SID_REGISTRATION, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Foreign_Sid_Registration, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Get Foreign Sid Registration Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_FOREIGN_SID_REGISTRATION, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Foreign Nid Registration Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_FOREIGN_NID_REGISTRATION, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Foreign_Nid_Registration, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Get Foreign Nid Registration Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_FOREIGN_NID_REGISTRATION, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Access Overload Class Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_ACCESS_OVERLOAD_CLASS, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Accolc, uint8, base=10
End

Begin Message, ETS CP VAL PSW Parm Get Access Overload Class Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_ACCESS_OVERLOAD_CLASS, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Cdma Pref Band Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_CDMA_PREF_BAND, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    prefBand, uint32, base= enum:PswCdmaPrefBand
End

Begin Message, ETS CP VAL PSW Parm Get Cdma Pref Band Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_CDMA_PREF_BAND, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Cdma Pref Aorb Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_CDMA_PREF_AorB, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    CDMA A or B, uint32, base=enum:PswCdmaPrefAorB
End

Begin Message, ETS CP VAL PSW Parm Get Cdma Pref Aorb Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_CDMA_PREF_AorB, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Scm Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_SCM, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    SCM, array, type=uint8, maxsize=5, base=10
End

Begin Message, ETS CP VAL PSW Parm Get Scm Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_SCM, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Prl Info Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_PRL_INFO, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Get Prl Info Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_PRL_INFO, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set OTAPA Enable Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_OTAPA_ENABLE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    OTAPA Enable, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Get OTAPA Enable Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_OTAPA_ENABLE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set OTA Powerup Mode Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_OTASP_POWERUP_MODE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    PowerupMode, uint8, base=enum:OTASP Powerup Mode Enum
End

Begin Message, ETS CP VAL PSW Parm Get OTA Powerup Mode Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_OTASP_POWERUP_MODE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set IMSI S1 Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_IMSI_S1, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    UpdateField, uint32, base=enum:PswMsidFieldToUpdate, default=UPDATE_MSID_IMSI_M
    IMSI_S1, string, length = 7
End

Begin Message, ETS CP VAL PSW Parm Get IMSI S1 Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_IMSI_S1, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Field, uint32, base=enum:PswMsidFieldToUpdate, default=UPDATE_MSID_IMSI_M
End

Begin Message, ETS CP VAL PSW Parm Set IMSI S2 Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_IMSI_S2, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    UpdateField, uint32, base=enum:PswMsidFieldToUpdate, default=UPDATE_MSID_IMSI_M
    IMSI_S2, string, length = 3
End

Begin Message, ETS CP VAL PSW Parm Get IMSI S2 Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_IMSI_S2, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Field, uint32, base=enum:PswMsidFieldToUpdate, default=UPDATE_MSID_IMSI_M
End

Begin Message, ETS CP VAL PSW Parm Set Spc Change Enable Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_SPC_CHANGE_ENABLE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Spc Change Enable, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Get Spc Change Enable Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_SPC_CHANGE_ENABLE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Spasm Enable Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_SPASM_ENABLE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    SPASM Enable, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Get Spasm Enable Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_SPASM_ENABLE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Sid Nid List Sp Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_SID_NID_LIST_SP, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    ValidSidNidEntry, uint32, base=bool,                    Default=1
    SID, uint16, base=10,
    NID, uint16, base=10,
    ageTimer (seconds), uint16, base=10,
    timerEnabled, uint32, base=bool,
    block, uint8, base=10,
    bandClass, uint32, base=enum:Cdma Band,
End

Begin Message, ETS CP VAL PSW Parm Get Sid Nid List Sp Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_SID_NID_LIST_SP, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Distance Based Parms Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_DISTANCE_BASED_PARMS, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    BASE_LAT_REGsp, int32, base=10
    BASE_LONG_REGsp, int32, base=10
    REG_DIST_REGsp, uint16, base=10
End

Begin Message, ETS CP VAL PSW Parm Get Distance Based Parms Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_DISTANCE_BASED_PARMS, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Msid Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_MSID, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    UpdateField, uint32, base=enum:PswMsidFieldToUpdate
    Imsi_Digits, string, length = 10
    UpdateIMSI_11_12, uint8, base=bool
    IMSI_11_12, string, length = 2
    UpdateMCC, uint8, base=bool
    MCC, string, length = 3
    Overwrite MDN with IMSI S, uint8, base=bool
End

Begin Message, ETS CP VAL PSW Parm Get Msid Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_MSID, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Encoded Msid Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_ENCODED_MSID, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Field, uint32, base=enum:PswMsidFieldToUpdate, indent=2
    Update MCC, uint32, base=bool, indent=2
    MCC, uint16,base=16,   indent=2
    Update IMSI_11_12, uint32, base=bool, indent=2
    IMSI_11_12, uint8, base=16,   indent=2
    Update IMSI_S2, uint32, base=bool, indent=2
    IMSI_S2, uint16,base=16,   indent=2
    Update IMSI_S1, uint32, base=bool, indent=2
    IMSI_S1, uint32,base=16,   indent=2
    Update Imsi Class, uint32, base=bool, indent=2
    IMSI Class, uint8, base=16,   indent=2
    Update AddrNum, uint32, base=bool, indent=2
    Addr Num, uint8, base=16,   indent=2
End

Begin Message, ETS CP VAL PSW Parm Get Encoded Msid Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_ENCODED_MSID, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Field, uint32, base=enum:PswMsidFieldToUpdate, indent=2
End

Begin Message, ETS CP VAL PSW Parm Set Enable Ota Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_ENABLE_OTA, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Enable OTA, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Get Enable Ota Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_ENABLE_OTA, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Pref Home MO SO Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_PREF_HOME_MO_SO, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Field, uint16, base=enum:Pref Voice Service Options, Default = Srv Opt 3 Enhanced 8K Vocoder
End

Begin Message, ETS CP VAL PSW Parm Get Pref Home MO SO Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_PREF_HOME_MO_SO, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Pref Roam MO SO Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_PREF_ROAM_MO_SO, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Field, uint16, base=enum:Pref Voice Service Options, Default=Srv Opt 3 Enhanced 8K Vocoder
End

Begin Message, ETS CP VAL PSW Parm Get Pref Roam MO SO Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_PREF_ROAM_MO_SO, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Pref Home MT SO Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_PREF_HOME_MT_SO, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Field, uint16, base=enum:Pref Voice Service Options, Default=Srv Opt 3 Enhanced 8K Vocoder
End

Begin Message, ETS CP VAL PSW Parm Get Pref Home MT SO Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_PREF_HOME_MT_SO, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set A21 MS Subs Info Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_A21_MS_SUBSCRIPTION_INFO,  Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Get A21 MS Subs Info Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_A21_MS_SUBSCRIPTION_INFO,  Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP Slotted Mode Allowed Set Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_SLOTTED_MODE_ALLOWED, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Slotted Mode Allowed, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP Slotted Mode Allowed Get Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_SLOTTED_MODE_ALLOWED, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Voice Service Allowed Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_VOICE_SERVICE_ALLOWED, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Voice Service, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP VAL PSW Parm Get Voice Service Allowed Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_VOICE_SERVICE_ALLOWED, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Roam Setting Domestic Voice Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_ROAM_SETTING_DOMESTIC_VOICE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Allow Domestic Voice, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Get Roam Setting Domestic Voice Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_ROAM_SETTING_DOMESTIC_VOICE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Roam Setting Domestic Data Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_ROAM_SETTING_DOMESTIC_DATA, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Allow Domestic Data, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Get Roam Setting Domestic Data Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_ROAM_SETTING_DOMESTIC_DATA, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Roam Setting International Voice Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_ROAM_SETTING_INTERNATIONAL_VOICE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Allow International Voice, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Get Roam Setting International Voice Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_ROAM_SETTING_INTERNATIONAL_VOICE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Roam Setting International Data Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_ROAM_SETTING_INTERNATIONAL_DATA, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Allow International Data, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Get Roam Setting International Data Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_ROAM_SETTING_INTERNATIONAL_DATA, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Service Option Support Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_SO_SUPPORT, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Service Option, uint16, base=enum:Service Options, default=Srv Opt 68 EVRC-B Vocoder
    Supported, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP VAL PSW Parm Get Service Option Support Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_SO_SUPPORT, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Service Option, uint16, base=enum:Service Options, default=Srv Opt 68 EVRC-B Vocoder
End

Begin Message, ETS CP VAL PSW Parm Set Simulated QPCH Enabled Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_SIM_QPCH_ENABLED, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Enabled, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP VAL PSW Parm Get Simulated QPCH Enabled Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_SIM_QPCH_ENABLED, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Dynamic QPCH Control Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_QPCH_ENABLE_DYNAMIC_CTRL, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Enabled, uint32, base=enum:FALSE/TRUE, Default=FALSE
    ThreshLow, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10, Default=-12
    ThreshHigh, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10, Default=-10
End

Begin Message, ETS CP VAL PSW Parm Get Dynamic QPCH Control Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_QPCH_ENABLE_DYNAMIC_CTRL, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Diversity Support Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_DIV_SUPPORT, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Mode, uint32, base=enum:Diversity Mode
End

Begin Message, ETS CP VAL PSW Parm Get Diversity Support Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_DIV_SUPPORT, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set QPCH CCI Enabled Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_QPCH_CCI_ENABLED, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Enabled, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP VAL PSW Parm Get QPCH CCI Enabled Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_QPCH_CCI_ENABLED, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set 1xAdv Enabled Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_1XADV_ENABLED, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Enabled, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP VAL PSW Parm Get 1xAdv Enabled Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_1XADV_ENABLED, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set SO73 Control Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_SO73_CONTROL, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    SO73Enabled, uint32, base=enum:FALSE/TRUE
    SO73WBEnabled, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP VAL PSW Parm Get SO73 Control Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_SO73_CONTROL, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set DFS EcIo Thresh Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_DFS_ECIO_THRESH, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default= Parm Custom Value
    EcIo Thresh (-0.5 dB), uint8, base=10
End

Begin Message, ETS CP VAL PSW Parm Get DFS EcIo Thresh Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_DFS_ECIO_THRESH, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default= Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set IC Mode Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_IC_MODE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default= Parm Custom Value
    IC Mode, uint32, base=enum:IC Mode
End

Begin Message, ETS CP VAL PSW Parm Get IC Mode Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_IC_MODE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default= Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set Alternate PN Mode Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_ALTERNATE_PN_FEATURE_MODE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
    Mode, uint32, base=enum:Alternate PN Mode,  Default=Disabled
End

Begin Message, ETS CP VAL PSW Parm Get Alternate PN Mode Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_ALTERNATE_PN_FEATURE_MODE, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default=Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set MOB_FIRM_REV Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_MOB_FIRM_REV, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default= Parm Custom Value
    MOB_FIRM_REV, uint16, base=16, default=0x0000
End

Begin Message, ETS CP VAL PSW Parm Get MOB_FIRM_REV Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_MOB_FIRM_REV, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default= Parm Custom Value
End

Begin Message, ETS CP VAL PSW Parm Set MOB_MODEL Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_SET_MOB_MODEL, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default= Parm Custom Value
    MOB_MODEL, uint8, base=16, default=0x00
End

Begin Message, ETS CP VAL PSW Parm Get MOB_MODEL Cmd
    PswParmOperationId, uint8, base=enum:PswParmOperationId, Default = PSW_PARM_GET_MOB_MODEL, Readonly = 1
    opType, uint8, base=enum:ParmOperationType,  Default= Parm Custom Value
End

Begin Message, ETS CP Init UI Misc Database Cmd
    UiParmOperationId, uint8, base=enum:UiParmOperationId, Default=UI_PARM_INIT_MISC_DB, Readonly=1
    opType, uint8, base=enum:UiParmOperationType, Default=CUSTOM_VALUE
End

Begin Message, ETS CP VAL SMS Over IMS Set Cmd
    SMS Over IP Networks, uint8, base=enum:SMSOverIMSEnum, default= Enable
    SIP SigComp, uint8, base=enum:SMSOverIMSEnum, default= Disable
    IMS domain, string, length=72, default= vzims.com
    IMS Password, string, length=72
    SIP T1timer_ims, uint16, base=10, default= 3000
    SIP TFtimer_ims, uint16, base=10, default= 30000
    SIP T2timer_ims, uint16, base=10, default= 16000
    SIP P-CSCF Port #, uint16, base=10, default= 5060
End

Begin Message, ETS CP VAL SMS Over IMS Get Cmd
End

Begin Message, ETS CP VAL UICC Parm Set Factory Mode Cmd
    UiccParmOperationId, uint8, base=enum:UiccParmOperationId, Default = UICC_PARM_SET_FACTORY_MODE, Readonly = 1
    opType, uint8, base=enum:UiccParmOperationType, Default=CUSTOM_VALUE
    FactoryMode, uint8, base=enum:FALSE/TRUE
End

Begin Message, ETS CP VAL UICC Parm Get Factory Mode Cmd
    UiccParmOperationId, uint8, base=enum:UiccParmOperationId, Default = UICC_PARM_GET_FACTORY_MODE, Readonly = 1
    opType, uint8, base=enum:UiccParmOperationType, Default=CUSTOM_VALUE
End

Begin Message, ETS CP VAL SYS Parm Set Band Class Cmd
    SysParmOperationId, uint32, base=enum:SysParmOperationId, Default = SYS_PARM_SET_BAND_CLASS, Readonly = 1
    opType, uint32, base=enum:ParmOperationType,  Default=Parm Custom Value
    Band Class, uint8, base=enum:Val Cdma Band, default=BAND_CLASS_0
    Status, uint8, base=enum:Disable/Enable
End

Begin Message, ETS CP VAL SYS Parm Get Band Class Cmd
    SysParmOperationId, uint32, base=enum:SysParmOperationId, Default = SYS_PARM_GET_BAND_CLASS, Readonly = 1
    opType, uint32, base=enum:ParmOperationType,  Default=Parm Custom Value
    Band Class, uint8, base=enum:Val Cdma Band, default=BAND_CLASS_0
End

Begin Message, ETS CP VAL SYS Parm Set Sub Class Cmd
    SysParmOperationId, uint32, base=enum:SysParmOperationId, Default = SYS_PARM_SET_SUB_CLASS, Readonly = 1
    opType, uint32, base=enum:ParmOperationType,  Default=Parm Custom Value
    Band Class, uint8, base=enum:Val Cdma Band, default=BAND_CLASS_0
    Sub Class, uint8, base=enum:Val Sub Class, default=SUB_CLASS_0
    Status, uint8, base=enum:Disable/Enable
End

Begin Message, ETS CP VAL SYS Parm Get Sub Class Cmd
    SysParmOperationId, uint32, base=enum:SysParmOperationId, Default = SYS_PARM_GET_SUB_CLASS, Readonly = 1
    opType, uint32, base=enum:ParmOperationType,  Default=Parm Custom Value
    Band Class, uint8, base=enum:Val Cdma Band, default=BAND_CLASS_0
End

Begin Message, ETS CP VAL DO Parm Set Dfs Idle Interval Cmd
    ParmOperationId, uint8, base=enum:DOParmOperationId,Default=Dfs Idle Interval Set,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    Interval (sec), uint8, base=10
End

Begin Message, ETS CP VAL DO Parm Get Dfs Idle Interval Cmd
    ParmOperationId, uint8, base=enum:DOParmOperationId,Default=Dfs Idle Interval Get,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP VAL DO Parm Set Dfs Conn Interval Cmd
    ParmOperationId, uint8, base=enum:DOParmOperationId,Default=Dfs Conn Interval Set,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    Interval (sec), uint8, base=10
End

Begin Message, ETS CP VAL DO Parm Get Dfs Conn Interval Cmd
    ParmOperationId, uint8, base=enum:DOParmOperationId,Default=Dfs Conn Interval Get,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP VAL DO Parm Set Dfs Idle NumChan Cmd
    ParmOperationId, uint8, base=enum:DOParmOperationId,Default=Dfs Idle NumChan Set,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    NumChan, uint8, base=10
End

Begin Message, ETS CP VAL DO Parm Get Dfs Idle NumChan Cmd
    ParmOperationId, uint8, base=enum:DOParmOperationId,Default=Dfs Idle NumChan Get,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP VAL DO Parm Set Dfs Conn NumChan Cmd
    ParmOperationId, uint8, base=enum:DOParmOperationId,Default=Dfs Conn NumChan Set,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    NumChan, uint8, base=10
End

Begin Message, ETS CP VAL DO Parm Get Dfs Conn NumChan Cmd
    ParmOperationId, uint8, base=enum:DOParmOperationId,Default=Dfs Conn NumChan Get,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP VAL DO Parm Set Dfs Idle EcIo Thresh Cmd
    ParmOperationId, uint8, base=enum:DOParmOperationId,Default=Dfs Idle EcIo Thresh Set,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    EcIo Thresh (dB), uint16, base=10
End

Begin Message, ETS CP VAL DO Parm Get Dfs Idle EcIo Thresh Cmd
    ParmOperationId, uint8, base=enum:DOParmOperationId,Default=Dfs Idle EcIo Thresh Get,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP VAL DO Parm Set Dfs Conn EcIo Thresh Cmd
    ParmOperationId, uint8, base=enum:DOParmOperationId,Default=Dfs Conn EcIo Thresh Set,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
    EcIo Thresh (dB), uint16, base=10
End

Begin Message, ETS CP VAL DO Parm Get Dfs Conn EcIo Thresh Cmd
    ParmOperationId, uint8, base=enum:DOParmOperationId,Default=Dfs Conn EcIo Thresh Get,Readonly=1
    opType, uint8, base=enum:ParmOperationType, Default=Parm Custom Value
End

Begin Message, ETS CP VAL CSS Mark Current 1X System As Negative Cmd
    Action, uint8, base=enum:CssMarkSystemT
End

Begin Message, ETS CP VAL CSS Parm Set DO OOSA Scanning Timer Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_SET_DO_OOSA_SCANNING_TIMER, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
    Duration (ms), uint32, base=10, Default=30000
End

Begin Message, ETS CP VAL CSS Parm Get DO OOSA Scanning Timer Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_GET_DO_OOSA_SCANNING_TIMER, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
End

Begin Message, ETS CP VAL CSS Parm Set 1X T_BSR Duration Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_SET_1X_T_BSR_DURATION, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
    BSR Type, uint8, base=enum:Css1xBsrTimerTypeT, Default=CSS_1X_T_BSR_1
    Duration (s), uint32, base=10, Default=180
End

Begin Message, ETS CP VAL CSS Parm Get 1X T_BSR Duration Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_GET_1X_T_BSR_DURATION, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
    BSR Type, uint8, base=enum:Css1xBsrTimerTypeT, Default=CSS_1X_T_BSR_1
End

Begin Message, ETS CP VAL CSS Parm Set 1X Avoidance Duration Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_SET_1X_AVOIDANCE_DURATION, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
    Avoidance Type, uint8, base=enum:Css1xAvoidanceTimerTypeT, Default=CSS_1X_HOME_MAPE_AVOIDANCE
    Duration (s), uint32, base=10, Default=900
End

Begin Message, ETS CP VAL CSS Parm Get 1X Avoidance Duration Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_GET_1X_AVOIDANCE_DURATION, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
    Avoidance Type, uint8, base=enum:Css1xAvoidanceTimerTypeT, Default=CSS_1X_HOME_MAPE_AVOIDANCE
End

Begin Message, ETS CP VAL CSS Parm Set DO T_BSR Duration Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_SET_DO_T_BSR_DURATION, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
    BSR Type, uint8, base=enum:CssDOBsrTimerTypeT, Default=CSS_DO_T_BSR_1
    Duration (s), uint32, base=10, Default=180
End

Begin Message, ETS CP VAL CSS Parm Get DO T_BSR Duration Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_GET_DO_T_BSR_DURATION, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
    BSR Type, uint8, base=enum:CssDOBsrTimerTypeT, Default=CSS_DO_T_BSR_1
End

Begin Message, ETS CP VAL CSS Parm Set Manual Avoid Sid Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_SET_1X_MANUAL_AVOID_SID, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
    sid(1), uint16, base=10,  default=0xFFFF
    sid(2), uint16, base=10,  default=0xFFFF
    sid(3), uint16, base=10,  default=0xFFFF
    sid(4), uint16, base=10,  default=0xFFFF
    sid(5), uint16, base=10,  default=0xFFFF
    sid(6), uint16, base=10,  default=0xFFFF
End

Begin Message, ETS CP VAL CSS Parm Get Manual Avoid Sid Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_GET_1X_MANUAL_AVOID_SID, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
End

Begin Message, ETS CP VAL CSS Parm Set MRU Channel Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_SET_MRU_CHANNEL, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
    module, uint8, base=enum:CssSubModule, default=1X
    index, uint8, base=10, Default=0
    band, uint8,  base=enum:Cdma Band, default=BAND_CLASS_0
    channel, uint16, base=10, Default=384
End

Begin Message, ETS CP VAL CSS Parm Get MRU Channel Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_GET_MRU_CHANNEL, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
    module, uint8, base=enum:CssMruSubModule, default=1X
    index, uint8, base=10, Default=0
End

Begin Message, ETS CP VAL GMSS Parm Set OpMode Cmd
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId, Default = GMSS_PARM_SET_OPMODE, Readonly = 1
    opType, uint8, base=enum:GmssParmOperationType, Default=CUSTOM_VALUE, Readonly = 1
    GmssOpMode, uint8, base=enum:GmssOpModeType
End

Begin Message, ETS CP VAL GMSS Parm Get OpMode Cmd
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId, Default = GMSS_PARM_GET_OPMODE, Readonly = 1
    opType, uint8, base=enum:GmssParmOperationType, Default=CUSTOM_VALUE, Readonly = 1
End

Begin Message, ETS CP VAL GMSS Parm Set OOS Scan Timeout Cmd
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId, Default = GMSS_PARM_SET_OOS_SCAN_TIMEOUT, Readonly = 1
    opType, uint8, base=enum:GmssParmOperationType, Default=CUSTOM_VALUE, Readonly = 1
    Timeout (Sec), uint16, base=10
End

Begin Message, ETS CP VAL GMSS Parm Get OOS Scan Timeout Cmd
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId, Default = GMSS_PARM_GET_OOS_SCAN_TIMEOUT, Readonly = 1
    opType, uint8, base=enum:GmssParmOperationType, Default=CUSTOM_VALUE, Readonly = 1
End

Begin Message, ETS CP VAL GMSS Parm Set OOS Sleep Time Cmd
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId, Default = GMSS_PARM_SET_OOS_SLEEP_TIME, Readonly = 1
    opType, uint8, base=enum:GmssParmOperationType, Default=CUSTOM_VALUE, Readonly = 1
    Duration (Sec), uint16, base=10
End

Begin Message, ETS CP VAL GMSS Parm Get OOS Sleep Time Cmd
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId, Default = GMSS_PARM_GET_OOS_SLEEP_TIME, Readonly = 1
    opType, uint8, base=enum:GmssParmOperationType, Default=CUSTOM_VALUE, Readonly = 1
End

Begin Message, ETS CP VAL GMSS Parm Set Scan Pref Mode Cmd
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId, Default = GMSS_PARM_SET_SCAN_PREF_MODE, Readonly = 1
    opType, uint8, base=enum:GmssParmOperationType, Default=CUSTOM_VALUE, Readonly = 1
    ScanPrefMode, uint8, base=enum:GmssPrefScanModeType
End

Begin Message, ETS CP VAL GMSS Parm Get Scan Pref Mode Cmd
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId, Default = GMSS_PARM_GET_SCAN_PREF_MODE, Readonly = 1
    opType, uint8, base=enum:GmssParmOperationType, Default=CUSTOM_VALUE, Readonly = 1
End

Begin Message, ETS CP VAL GMSS Parm Set PsRegRsp Timeout Cmd
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId, Default = GMSS_PARM_SET_PS_REG_RSP_TIMEOUT, Readonly = 1
    opType, uint8, base=enum:GmssParmOperationType, Default=CUSTOM_VALUE, Readonly = 1
    Timeout (Sec), uint16, base=10
End

Begin Message, ETS CP VAL GMSS Parm Get PsRegRsp Timeout Cmd
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId, Default = GMSS_PARM_GET_PS_REG_RSP_TIMEOUT, Readonly = 1
    opType, uint8, base=enum:GmssParmOperationType, Default=CUSTOM_VALUE, Readonly = 1
End

Begin Message, ETS CP VAL GMSS Parm Set PsRegMostPrefRat Wait Timeout Cmd
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId, Default = GMSS_PARM_SET_PSREG_MOST_PREF_RAT_TIMEOUT, Readonly = 1
    opType, uint8, base=enum:GmssParmOperationType, Default=CUSTOM_VALUE, Readonly = 1
    Timeout (Sec), uint16, base=10
End

Begin Message, ETS CP VAL GMSS Parm Get PsRegMostPrefRat Wait Timeout Cmd
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId, Default = GMSS_PARM_GET_PSREG_MOST_PREF_RAT_TIMEOUT, Readonly = 1
    opType, uint8, base=enum:GmssParmOperationType, Default=CUSTOM_VALUE, Readonly = 1
End

Begin Message, ETS CP VAL CSS Parm Set 1x MPSS Pilot Thresh High Rssi Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_SET_1X_MPSS_PILOT_THRESH, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
    Threshold, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10, Default=-12
End

Begin Message, ETS CP VAL CSS Parm Get 1x MPSS Pilot Thresh High Rssi Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_GET_1X_MPSS_PILOT_THRESH, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
End

Begin Message, ETS CP VAL CSS Parm Set 1x MPSS Pilot Thresh Low Rssi Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_SET_1X_MPSS_PILOT_THRESH_LOW_RSSI, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
    Threshold, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10, Default=-9
End

Begin Message, ETS CP VAL CSS Parm Get 1x MPSS Pilot Thresh Low Rssi Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_GET_1X_MPSS_PILOT_THRESH_LOW_RSSI, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
End

Begin Message, ETS CP VAL CSS Parm Set 1x MPSS High-Low Rssi Thresh Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_SET_1X_MPSS_HIGH_LOW_RSSI_THRESH, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
    Threshold, int16, Default=-94
End

Begin Message, ETS CP VAL CSS Parm Get 1x MPSS High-Low Rssi Thresh Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_GET_1X_MPSS_HIGH_LOW_RSSI_THRESH, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
End

Begin Message, ETS CP VAL CSS Parm Set 1x MPSS Pilot Thresh Slope Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_SET_1X_MPSS_PILOT_THRESH_SLOPE, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
    Slope, uint8, base=10, Default=4
End

Begin Message, ETS CP VAL CSS Parm Get 1x MPSS Pilot Thresh Slope Cmd
    CssParmOperationId, uint8, base=enum:CssParmOperationId, Default = CSS_PARM_GET_1X_MPSS_PILOT_THRESH_SLOPE, Readonly = 1
    opType, uint8, base=enum:CssParmOperationType,  Default=CUSTOM_VALUE, Readonly = 1
End

Begin Message, ETS CP_VAL_HTTP_Session_Create Cmd
    dummy, uint16, base=10, default=1
    SessionRegId, uint16, base=10, default=1
    HTTP Action, uint16, base=enum:VAL Http Action, default=HTTP POST
    URL, string, size=end, columns=30, default=www.via-telecom.com
End

Begin Message, ETS CP_VAL_FTP_Session_Create Cmd
    dummy, uint16, base=10, default=1
    SessionRegId, uint16, base=10, default=1
    Username, string, length=32, columns=32, default=anonymous
    Password, string, length=32, columns=32, default=anonymous
    URL, string, length=64, columns=64, default=ftp://ftp.freebsd.org/pub/FreeBSD/releases/README.TXT
    FTP Action, uint16, base=enum:VAL Ftp Action, default=FTP LIST
End

Begin Message, ETS CP VAL GPS Open Device HW Init Cmd
End

Begin Message, ETS CP VAL GPS Get Position Cmd
    Instance ID, uint32
End

Begin Message, ETS CP VAL GPS Close Device Cmd
End

Begin Message, ETS CP VAL GPS Start Fix Cmd
    Instance ID, uint32
    GPS Start Fix Flag, uint32
End

Begin Message, ETS CP VAL GPS Query Fix Cmd
    Instance ID, uint32
End

Begin Message, ETS CP VAL GPS Stop Fix Cmd
    Instance ID, uint32
End

Begin Message, ETS CP VAL GPS Configure Fix Mode Cmd
    Instance ID, uint32
    GPS Fix Mode, uint32, base=enum:VAL GPS Fix Mode
End

Begin Message, ETS CP VAL GPS Configure Fix Rate Cmd
    Instance ID, uint32
    GPS Number of Fixes, uint32
    GPS Time Between Fixes, uint32
End

Begin Message, ETS CP VAL GPS Configure QOS Cmd
    Instance ID, uint32
    GPS Horizontal Accuracy, uint32
    GPS Vertical Accuracy, uint32
    GPS Performance, uint32
End

Begin Message, ETS CP VAL GPS Write Server Configuration Cmd
    GPS Server Address Validity Flag, uint8, base=enum:FALSE/TRUE
    IP Type, uint8, base=enum:ipv4/ipv6
    GPS Server ipv4 Address, array,  type=uint8, maxsize=4, base=10, indent=2
    ipv6Ip0, uint32, base=16
    ipv6Ip1, uint32, base=16
    ipv6Ip2, uint32, base=16
    ipv6Ip3, uint32, base=16
    GPS Server Port Number, uint32
    GPS Server URL Validity Flag, uint8, base=enum:FALSE/TRUE
    GPS Server URL, string, length=256
End

Begin Message, ETS CP VAL GPS Read Server Configuration Cmd
End

Begin Message, ETS CP VAL GPS Enable Security Cmd
    Instance ID, uint32
End

Begin Message, ETS CP VAL GPS Write Security Configuration Cmd
    Instance ID, uint32
    Security Data ID, uint8
    Security Data Length, uint8
    Security Data, array, type=uint8, maxsize=20
End

Begin Message, ETS CP VAL GPS Read Security Configuration Cmd
    Instance ID, uint32
End

Begin Message, ETS CP VAL GPS Read Encrypt Configuration Cmd
    Instance ID, uint32
End

Begin Message, ETS CP VAL GPS Get LBS Privacy Setting Cmd
End

Begin Message, ETS CP VAL LBS Set LBS Privacy Setting Cmd
    Privacy Setting Status, uint8,  base=enum:VAL GPS Privacy Setting
End

Begin Message, ETS CP VAL GPS Get Base SSD Cmd
    InstanceID, uint32
End

Begin Message, ETS CP VAL GPS Set Rand Period Cmd
    Instance ID, uint32
    Rand Period, uint32
End

Begin Message, ETS CP VAL GPS Reset Assist Cmd
    GPS Assistance Data, uint32, base=enum:VAL GPS Assistance Data
End

Begin Message, ETS CP VAL GPS Tcp Conn Test Cmd
End

Begin Message, ETS CP VAL GPS Tcp Close Test Cmd
End

Begin Message, ETS CP VAL GPS Nmea Cfg Set Cmd
    Interval, uint32
    GPGGA Enable, uint8  , base=enum:No/Yes
    GPGSV Enable, uint8  , base=enum:No/Yes
    GPGSA Enable, uint8  , base=enum:No/Yes
    GPRMC Enable, uint8  , base=enum:No/Yes
    GPGST Enable, uint8  , base=enum:No/Yes
    GPGLL Enable, uint8  , base=enum:No/Yes
    GPVTG Enable, uint8  , base=enum:No/Yes
End

Begin Message, ETS CP VAL GPS Nmea Cfg Get Cmd
End

Begin Message, ETS CP VAL GPS Restart Fix Cmd
    Instance ID, uint32
    Mode, uint8, base=enum:VAL GPS Restart Mode
End

Begin Message, ETS CP VAL GPS Set Security Cmd
    GPS Security, uint8, base=enum:VAL GPS Security State
    GPS Security Code, uint32, base=10
End

Begin Message, ETS CP VAL GPS Configure Technology Cmd
    InstanceID, uint32
    Search Technology, uint8, base=enum:VAL GPS Search Technology
End

Begin Message, ETS CP VAL VGPS Cfg Set Cmd
    Vendor ID, string, length = 50, default=245123
    User Name, string, length = 50, default=VGPSTA1
    Pass Word, string, length = 50, default=8756239
    VGPS Server 1, string, length = 72, default=vgps1.via-telecom.com
    VGPS Server 2, string, length = 72, default=vgps2.via-telecom.com
    VGPS Server 3, string, length = 72, default=vgps3.via-telecom.com
    Server 1 Port #, uint16, base=10, default=80
    Server 2 Port #, uint16, base=10, default=80
    Server 3 Port #, uint16, base=10, default=80
End

Begin Message, ETS CP VAL VGPS Cfg Get Cmd
End

Begin Message, ETS CP VAL VGPS Start Cmd
End

Begin Message, ETS CP VAL GPS Write Offset Info Cmd
    InstanceID, uint32
    OffsetsSize, uint32
    GPS_Offset_hash, array, type=uint8, maxsize=500, size=OffsetsSize*28, indent=2
End

Begin Message, ETS CP VAL GPS Read Offset Info Cmd
    InstanceID, uint32
End

Begin Message, ETS CP VAL GPS Set Base SSD Cmd
    Base SSD, array, type=uint8, maxsize=16
    UTC Time, record, type= VAL GPS System Time Rec, maxsize=1
End

Begin Record, VAL GPS System Time Rec
    Year, uint16
    Month, uint16
    DayOfWeek, uint16
    Day, uint16
    Hour, uint16
    Minute, uint16
    Second, uint16
    Milliseconds, uint16
    GPS week, uint32
    GPS TimeOf Week, uint32
End

Begin Message, ETS CP VAL GPS Get Fix Mode Cmd
End

Begin Message, ETS CP VAL GPS Set Start Mode Cmd
    Start Mode, uint8, base=enum:VAL GPS Start Mode
End

Begin Message, ETS CP VAL GPS NMEA Output Settings Cmd
    Nmea Output, uint8, base=enum:disable/enable
End

Begin Message, ETS CP VAL GPS Configure Fix Rate Get Cmd
    Instance ID, uint32
End

Begin Message, ETS CP VAL GPS Set CT Mpc Setting Cmd
    CT Mpc IP Address, array,  type=uint8, maxsize=4, base=10, indent=2
    CT Mpc Port Number, uint32
End

Begin Message, ETS CP VAL MPC PPP UserName PassWord Cmd
    SIP_NAI, string, length = 72, default=ctwap@mycdma.cn
    SIP_PASSWORD, string, length=16, default=vnet.mobi
End

Begin Message, ETS CP VAL GPS State Get Cmd
    Instance ID, uint32
End

Begin Message, ETS CP VAL GPS Test Mode Set Cmd
    GPS Test Mode, uint8, base=enum:VAL GPS Test Mode
End

Begin Message, ETS CP VAL GPS RfDelay Set Cmd
    BAND, uint8,    base=enum:RfBand
    RFDELAY_1X, int32,  base=10, default=86300
    RFDELAY_DO, int32,  base=10, default=86300
End

Begin Message, ETS CP Mass Storage Mode Set Cmd
    Device, uint8,  base=enum:MSDevices, default = PC USB Ext
    Mode, uint8,  base=enum:MSModes, default = Enabled
End

Begin Message, ETS CP Mass Storage Mode Get Cmd
    Device, uint8,  base=enum:MSDevices, default = PC USB Ext
End

Begin Message, ETS CP VAL IMS CONN SETUP Cmd
End

Begin Message, ETS CP VAL IMS CONN RELEASE Cmd
End

Begin Message, ETS CP VAL IMS APP CONN SETUP Cmd
    AppType, uint8, base = enum:ImsAppTypeEnum
    DstAddr, string, length=72, columns=72, rows=1,default=sip:10000@192.168.0.1
    FlowNum, uint8
    SrcPort0, uint16
    SrcPort1, uint16
End

Begin Message, ETS CP VAL IMS APP CONN RELEASE Cmd
    PdnId, uint8
    AppType, uint8, base = enum:ImsAppTypeEnum
End

Begin Message, ETS CP VAL IMS RESOURCE SET Cmd
End

Begin Message, ETS CP VAL IP Counters Reset Cmd
End

Begin Message, ETS CP VAL IP Counters Peek Cmd
End

Begin Message, ETS CP Val RTC Init Cmd
End

Begin Message, ETS CP Val RTC Time Get Cmd
End

Begin Message, ETS CP Val RTC Time Set Cmd
    Year, uint16,     base=10, default=2013, min=0,    max=2199
    Mon, uint8,      base=10, default=1,    min=1,    max=12
    Day, uint8,      base=10, default=1,    min=1,    max=31
    Hour, uint8,      base=10, default=0,    min=0,    max=23
    Min, uint8,      base=10, default=0,    min=0,    max=59
    Sec, uint8,      base=10, default=0,    min=0,    max=59
    Wkday, int8,       base=enum:WeekDays
End

Begin Message, ETS CP Val RTC Alarm Get Cmd
    AlarmId, int8,      base=enum:Alarm1/Alarm2
End

Begin Message, ETS CP Val RTC Alarm Set Cmd
    Day, int8,      base=10, default=1,    min=-1,    max=31
    Hour, int8,      base=10, default=0,    min=-1,    max=23
    Min, int8,      base=10, default=0,    min=-1,    max=59
    Wkday, int8,      base=enum:WeekDays
    AlarmId, int8,      base=enum:Alarm1/Alarm2, default=Alarm1
End

Begin Message, ETS CP Val RTC ASEC Set Cmd
    Value, uint16,    base=10, default=32767, min=21626, max=42598
End

Begin Message, ETS CP Reset RLP Event Stats Cmd
End

Begin Message, ETS CP Reset RLP Frame Counts Cmd
End

Begin Message, ETS CP Peek RLP Frame Stats Cmd
End

Begin Message, ETS CP Power Cmd
    Power, uint8, base=enum:Down/Up/DownWithSleep
End

Begin Message, ETS CP Set DTMF Type Cmd
    DtmfType, uint8, base=enum:MmiAudioDtmfModeT
End

Begin Message, ETS CP Set Privacy Mode Cmd
    Mode, uint8, base=enum:Disabled/Enabled
End

Begin Message, ETS CP Read data from Dbm Cmd
End

Begin Message, ETS CP UI Set DeepSleep Time Slice Cmd
    TimeSlice (in msec - 0 is off), uint32, base=10, default=1000
End

Begin Message, ETS CP UI Set Ringer File Cmd
    FileName, string, length=256, columns=32
End

Begin Message, ETS CP UI Audio Video File Cmd
    AV Command, uint8,  base=enum:Audio Video Cmd, default=AV Play
    FileName, string, length=257, columns=32
    BaseOffset(bytes), uint32
    PositionSet(sec), uint32
End

Begin Message, ETS CP UI Get Music Play Time Cmd
    FileName, string, length=257, columns=32
    DataPtr, uint32
    DataBytes, uint32
    Music Type, uint8,  base=enum:VAL Music Types, default=MIDI Melody
End

Begin Message, ETS CP UI Music Record Cmd
    Format, uint8, base=enum:UI Music Record Formats, default=WAVE
    Sampling Rate, uint8, base=enum:VAL Sampling Rates, default=8k
    Num Channels, uint8, default=1
    Bit Rate/Quality, uint8, base=enum:UI Music Record BitRate
    FileName, string, length=257, columns=32
End

Begin Message, ETS CP UI Start Refurbish Test Cmd
    Band, uint8, base=enum:BandType, default = Cellular
    Channel, uint16, base=10, default = 607
End

Begin Message, ETS CP UI Stop Refurbish Test Cmd
End

Begin Message, ETS CP UI Refurbish Test Increase Pwr Cmd
End

Begin Message, ETS CP UI Refurbish Test Decrease Pwr Cmd
End

Begin Message, ETS CP UI TTY Rev Chan Cmd
    TtyChar, uint8, base=10
End

Begin Message, ETS CP UI TTY Enable Fwd Chan Cmd
    Enable, uint8, base=enum:FALSE/TRUE
End

Begin Message, ETS CP UI VAL Net Initialize Cmd
End

Begin Message, ETS CP UI VAL Net PPP Open Cmd
    RegId, int16
End

Begin Message, ETS CP UI VAL Net PPP Close Cmd
    RegId, int16
End

Begin Message, ETS CP UI VAL Net PPP Dormant Req Cmd
    RegId, int16
End

Begin Message, ETS CP UI VAL Net Get PPP Status Cmd
    RegId, int16
End

Begin Message, ETS CP UI VAL Net Event Select Cmd
    sockfd, int16
    evtMask, uint32
End

Begin Message, ETS CP UI VAL Net Socket Cmd
    RegId, int16
    domain, uint8, base=enum:CP UI VAL Net Domain
    type, uint8, base=enum:CP UI VAL Net Type
    protocol, uint8, base=enum:CP UI VAL Net Protocol
End

Begin Message, ETS CP UI VAL Net Connect Cmd
    sockfd, int16
    SinFamily, uint16
    SinPort, uint16
    Address, uint32
    SizeZero, array, type=uint8, size=8, maxsize=8
    namelen, int16
End

Begin Message, ETS CP UI VAL Net Close Cmd
    sockfd, int16
End

Begin Message, ETS CP UI VAL Net Get Sock Status Cmd
    sockfd, int16
End

Begin Message, ETS CP UI VAL Net Recv Cmd
    sockfd, int16
    nbytes, int32
    buffer, array, type=uint8, size=nbytes, maxsize=1028
End

Begin Message, ETS CP UI VAL Net Send Cmd
    sockfd, int16
    nbytes, int32
    buffer, array, type=uint8, size=nbytes, maxsize=1028
End

Begin Message, ETS CP UI VAL Net Bind Cmd
    sockfd, int16
    SinFamily, uint16
    SinPort, uint16
    Address, uint32
    SizeZero, array, type=uint8, size=8, maxsize=8
    namelen, int16
End

Begin Message, ETS CP UI VAL Net Listen Cmd
    sockfd, int16
    backlog, int16
End

Begin Message, ETS CP UI VAL Net Accept Cmd
    sockfd, int16
    SinFamily, uint16
    SinPort, uint16
    Address, uint32
    SizeZero, array, type=uint8, size=8, maxsize=8
End

Begin Message, ETS CP UI VAL Net Send To Cmd
    sockfd, int16
    nbytes, int16
    buffer, array, type=uint8, size=nbytes, maxsize=1028
    SinFamily, uint16
    SinPort, uint16
    Address, uint32
    SizeZero, array, type=uint8, size=8, maxsize=8
    tolen, int16
End

Begin Message, ETS CP UI VAL Net Recv From Cmd
    sockfd, int16
    nbytes, int16
    buffer, array, type=uint8, size=nbytes, maxsize=1028
    SinFamily, uint16
    SinPort, uint16
    Address, uint32
    SizeZero, array, type=uint8, size=8, maxsize=8
    tolen, int16
End

Begin Message, ETS CP UI VAL Net Get Host By Name Cmd
    RegId, int16
    HostName, string, size=end, columns=15
    IPAddrP, uint32
End

Begin Message, ETS CP UI VAL Net Inet Addr Cmd
    cp, string, size=end, columns=15
End

Begin Message, ETS CP UI VAL Net Get PPP Auth Parms Cmd
    LenP, int16
    AuthStrP, string, size=LenP, columns=40
End

Begin Message, ETS CP UI VAL Net Set PPP Auth Parms Cmd
    AuthStrP, string, size=end, columns=40
End

Begin Message, ETS CP UI VAL Net Get Dial Str Parms Cmd
End

Begin Message, ETS CP UI VAL Net Set Dial Str Parms Cmd
    DialStrP, string, size=end, columns=40
End

Begin Message, ETS CP UI VAL Net Set RLP Inact TMO Req Cmd
    nInactTime, uint16
End

Begin Message, ETS CP UI VAL Net Get RLP Setting Cmd
    RlpSettingsType, uint8, base=enum:CP UI VAL Net RLP Settings
    FwdNakRounds, uint8
    FwdNaksPerRound, array, type=uint8, size=7, maxsize=7
    RevNakRounds, uint8
    RevNaksPerRound, array, type=uint8, size=7, maxsize=7
End

Begin Message, ETS CP UI VAL Net Set RLP Setting Cmd
    RlpSettingsType, uint8, base=enum:CP UI VAL Net RLP Settings
    FwdNakRounds, uint8
    FwdNaksPerRound, array, type=uint8, size=7, maxsize=7
    RevNakRounds, uint8
    RevNaksPerRound, array, type=uint8, size=7, maxsize=7
End

Begin Message, ETS CP UI VAL Net Get IP Address Cmd
    IpAddrP, uint32
End

Begin Message, ETS CP UI VAL Net Get DNS Server IP Addr Cmd
End

Begin Message, ETS CP UI VAL Net Get Peer Name Cmd
    SockFd, int16
    SinFamily, uint16
    SinPort, uint16
    Address, uint32
    SizeZero, array, type=uint8, size=8, maxsize=8
    AddrLenP, int16
End

Begin Message, ETS CP UI VAL Net Set DNS Server IP Addr Cmd
    IpAddrPrimary, array, type=uint8, base=10, size=4, maxsize=4
    IpAddrSecondary, array, type=uint8, base=10, size=4, maxsize=4
End

Begin Message, ETS CP UI VAL Initiate Call Cmd
    RegId, uint32
    CallMode, uint8,  base=enum:CP UI VAL PSW Call Mode, default=NORMAL_VOICE
    RequestMode, uint8,  base=enum:CP UI VAL PSW Request Mode
    ServiceOpt, uint16, base=enum:CP UI VAL PSW Service Option, default=PSW_SERVICE_OPTION_3
    NumDigits, uint8,  base=10, default=7
    Digits, string, length=32
    ServiceType, uint8,  base=enum:CP UI VAL PSW Service Type
    OtaspCode, uint8,  base=enum:CP UI VAL PSW OTASP Code
End

Begin Message, ETS CP UI VAL Answer Call Cmd
    RegId, int16
End

Begin Message, ETS CP UI VAL Hangup Call Cmd
    RegId, int16
End

Begin Message, ETS CP UI VAL Change Akey Cmd
    RegId, int16
    Akey, uint64
    Checksum, uint32
End

Begin Message, ETS CP UI VAL Set PRL Enable Cmd
    PrlEnable, uint8,  base=enum:False/True
End

Begin Message, ETS CP UI VAL Get Active NAM Cmd
End

Begin Message, ETS CP UI VAL Set Active NAM Cmd
    NamNumber, uint8,  base=enum:CP UI VAL NamNumber
End

Begin Message, ETS CP UI VAL Get Akey Checksum Cmd
    Akey, uint64
    ESN, uint32
End

Begin Message, ETS CP UI VAL E911 Disable Cmd
End

Begin Message, ETS CP UI VAL SMS Start Reg Service Cmd
    RegId, int16
    TeleSrvId, uint16, base=enum:CP UI VAL SMS TeleSrv ID
End

Begin Message, ETS CP UI VAL SMS Stop Reg Service Cmd
    RegId, int16
    TeleSrvId, uint16, base=enum:CP UI VAL SMS TeleSrv ID
End

Begin Message, ETS CP UI VAL SMS Set Storage Cmd
    StoreSet, uint8, base=enum:CP UI VAL Device
End

Begin Message, ETS CP UI VAL SMS Send Text Message Cmd
    RegId, int16
    RecId, uint16
    FieldMask, uint32
    SmsMsgRecId, uint16
    SmsState, uint8,  base=enum:CP UI VAL SMS State
    NumUserData, uint8
    TransMsgType, uint8,  base=enum:CP UI VAL SMS Trans Msg Type
    MsgId, uint16
    HeaderInd, uint8,  base=enum:False/True
    TeleMsgType, uint8,  base=enum:CP UI VAL SMS Tele Message
    TeleSrvId, uint16, base=enum:CP UI VAL SMS TeleSrv ID
    SrvCat, uint8,  base=enum:CP UI VAL SMS Service Category
    DigitMode, uint8,  base=enum:CP UI VAL SMS Digit Mode
    NumberMode, uint8,  base=enum:CP UI VAL SMS Number Mode
    NumType, uint8,  base=enum:CP UI VAL SMS Number Type
    DataNumType, uint8,  base=enum:CP UI VAL SMS Data Number Type
    NumberPlan, uint8,  base=enum:CP UI VAL SMS Number Plan
    NumAddrFields, uint8,  base=10
    Address, array,  type=uint8, maxsize=32, columns=32
    SubAddressType, uint8,  base=enum:CP UI VAL SMS Subaddress Type
    Odd, uint8
    NumSubAddrFields, uint8,  base=10
    SubAddress, array,  type=uint8, maxsize=30, columns=30
    UserData, record, type=VAL SMS User Data Rec, maxsize=2
    UserRspCode, uint8
    TimeStamp, record, type=VAL SMS Time Stamp Rec, maxsize=1
    TimeAbs, record, type=VAL SMS Time Stamp Rec, maxsize=1
    RelValPeriod, uint8
    AbsDelTime, record, type=VAL SMS Time Stamp Rec, maxsize=1
    RelDelPeriod, uint8
    Priority, uint8,  base=enum:CP UI VAL SMS Priority
    Privacy, uint8,  base=enum:CP UI VAL SMS Privacy
    UserAckReq, uint8,  base=enum:False/True
    DakReq, uint8,  base=enum:False/True
    ReadAckReq, uint8,  base=enum:False/True
    NumMsgs, uint8
    Alrt, uint8,  base=enum:CP UI VAL SMS Alert
    Lang, uint8,  base=enum:CP UI VAL SMS Language
    CallbckDigitMode, uint8,  base=enum:CP UI VAL SMS Digit Mode
    CallbckNumType, uint8,  base=enum:CP UI VAL SMS Number Type
    CallbckNumPlan, uint8,  base=enum:CP UI VAL SMS Number Plan
    CallbckNumFields, uint8
    CallbckDigits, array,  type=uint8, maxsize=30, columns=30
    SmsDisplayMode, uint8,  base=enum:CP UI VAL SMS Display Mode
    Reserved, uint8
    MsgDepIndex, uint16
    ErrorClass, uint8,  base=enum:CP UI VAL SMS Error Class
    StatusCode, uint8,  base=enum:CP UI VAL SMS Status Code
    NumCategories, uint8
    SmsCatProgResult, record, type=VAL SMS Category Prog Result Rec, maxsize=10
    SmsCatProgDataEnc, uint8,  base=enum:CP UI VAL SMS Msg Encode Type
    NumCats, uint8
    SmsCatProgData, record, type=VAL SMS Category Prog Data Rec, maxsize=10
    ToBeSave, uint8,  base=enum:False/True
End

Begin Record, VAL SMS User Data Rec
    UsrDataMsgEnc, uint8,  base=enum:CP UI VAL SMS Msg Encode Type
    UsrDataMsgType, uint8
    UsrDataNumFields, uint8
    UsrDataData, array,  type=uint8, maxsize=255, columns=64, rows=4
End

Begin Record, VAL SMS Time Stamp Rec
    Year, uint8
    Month, uint8
    Day, uint8
    Hours, uint8
    Mins, uint8
    Secs, uint8
End

Begin Record, VAL SMS Category Prog Result Rec
    CatRsltCategory, uint8, base=enum:CP UI VAL SMS Service Category
    CatRsltCode, uint8, base=enum:CP UI VAL SMS Category Result Code
End

Begin Record, VAL SMS Category Prog Data Rec
    OperationCode, uint8
    SrcCat, uint8
    Language, uint8
    MaxMsg, uint8, base=10
    Alert, uint8
    NumChar, uint8, base=10
    Chari, array, type=uint8, maxsize=20, columns=20
End

Begin Message, ETS CP UI VAL SMS Send PDU Message Cmd
    RegId, int16
    nBytes, uint8
    MsgBuf, array, type=uint8, maxsize=255, size=nBytes, columns=nBytes
    ToBeSave, uint8, base=enum:False/True
End

Begin Message, ETS CP UI VAL Get Phb Rec Params Cmd
End

Begin Message, ETS CP UI VAL Get Phb Record Cmd
    nIndex, uint8
End

Begin Message, ETS CP UI VAL Update Phb Record Cmd
    nIndex, uint8
    Name, string, size=end, columns=15
    PhNum, array,  type=uint8, size=end, maxsize=21
End

Begin Message, ETS CP UI VAL Erase Phb Record Cmd
    nIndex, uint8
End

Begin Message, ETS CP UI VAL Get SMS Rec Params Cmd
End

Begin Message, ETS CP UI VAL Get SMS Record Cmd
    nIndex, uint8
End

Begin Message, ETS CP UI VAL Update SMS Record Cmd
    nIndex, uint8
    nStatus, uint8
    MsgLen, uint8
    MsgData, array, type=uint8, size=MsgLen, maxsize=255
End

Begin Message, ETS CP UI VAL Erase SMS Record Cmd
    nIndex, uint8
End

Begin Message, ETS CP UI VAL CHV Get Status Cmd
End

Begin Message, ETS CP UI VAL CHV Verify Cmd
    ChvId, uint8, base=enum:CP UI VAL CHV ID
    ChvLen, uint8
    Chv, array, type=uint8, size=ChvLen, maxsize=8
End

Begin Message, ETS CP UI VAL CHV Change Cmd
    ChvId, uint8, base=enum:CP UI VAL CHV ID
    OldChvLen, uint8
    OldChv, array, type=uint8, size=OldChvLen, maxsize=8
    NewChvLen, uint8
    NewChv, array, type=uint8, size=NewChvLen, maxsize=8
End

Begin Message, ETS CP UI VAL CHV Disable Cmd
    Chv1Len, uint8
    Chv1, array, type=uint8, size=Chv1Len, maxsize=8
End

Begin Message, ETS CP UI VAL CHV Enable Cmd
    Chv1Len, uint8
    Chv1, array, type=uint8, size=Chv1Len, maxsize=8
End

Begin Message, ETS CP UI VAL CHV Unblock Cmd
    ChvId, uint8, base=enum:CP UI VAL CHV ID
    UnblockChvLen, uint8
    UnblockChv, array, type=uint8, size=UnblockChvLen, maxsize=8
    NewChvLen, uint8
    NewChv, array, type=uint8, size=NewChvLen, maxsize=8
End

Begin Message, ETS CP UI VAL Get Max MDN Rec Num Cmd
End

Begin Message, ETS CP UI VAL Get MDN Rec Cmd
    Index, uint8
End

Begin Message, ETS CP UI VAL Update MDN Rec Cmd
    Index, uint8
    Len, uint8
    Mdn, array, type=uint8, size=Len, maxsize=16
End

Begin Message, ETS CP UI VAL Del MDN Rec Cmd
    Index, uint8
End

Begin Message, ETS CP UI VAL UTK Profile Init Cmd
    HeightNumChars, uint8
    SizingParam, uint8, base=enum:False/True
    WidthNumChars, uint8
    VarSizeFont, uint8, base=enum:False/True
    Resized, uint8, base=enum:False/True
    TextWrap, uint8, base=enum:False/True
    TextScroll, uint8, base=enum:False/True
    ExtText, uint8, base=enum:False/True
    WidthReduction, uint8
End

Begin Message, ETS CP UI VAL UTK Exit Cmd
End

Begin Message, ETS CP UI VAL UTK SMS Download Cmd
    Len, uint8
    Apdu, array, type=uint8, size=Len, maxsize=255
    DigitMode, uint8, base=enum:False/True
    NumMode, uint8, base=enum:False/True
    NumType, uint8
    NumPlan, uint8
    NumAddrFields, uint8
    Address, array, type=uint8, maxsize=30
    Type, uint8
    Odd, uint8, base=enum:False/True
    NumSubAddrFields, uint8
    Subaddress, array, type=uint8, maxsize=30
    MsgId, uint16
End

Begin Message, ETS CP UI VAL UTK Select Menu Cmd
    ItemId, uint8
,   uint8, base=enum:False/True
End

Begin Message, ETS CP UI VAL UTK Comm Cmd Result Cmd
    CmdNum, uint8
    CmdType, uint8
    CmdQualifier, uint8
    GenResult, uint8, base=enum:CP UI VAL UTK Gen Result
    AddInfoPre, uint8, base=enum:False/True
    AddInfo, uint8, base=enum:CP UI VAL UTK Additional Info
End

Begin Message, ETS CP UI VAL UTK Get Input Done Cmd
    CmdNum, uint8
    CmdType, uint8
    CmdQualifier, uint8
    CodeScheme, uint8, type=enum:CP UI VAL UTK Code Scheme
    Len, uint8
    Text, array, type=uint8, size=Len, maxsize=255
End

Begin Message, ETS CP Get Alert Status Cmd
End

Begin Message, ETS DSPM Loopback Cmd
    Data, array, type=uint16, maxsize=40, size=end, columns=60
End

Begin Message, ETS DSPM DBuf Loopback Cmd
    Loops, uint32, min=0, max=65535
    Words, uint16, min=1, max=200
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, ETS DSPM Trace
    TraceId, uint16, base=enum:DSPM TraceIds
    TraceMsg, union,  enum=TraceId
End

Begin Message, DSPM Trace Cmd
    Enable, uint16, base=bool
End

Begin Message, ETS DSPM Spy
    SpyId, uint16, base=enum:DSPM SpyIds
    SpyMsg, union,  enum=SpyId
End

Begin Message, DSPM Spy Cmd
    Enable, uint16, base=bool
End

Begin Message, ETS DSPM Peek Cmd
    Address, uint16
    Words (16), uint16, min=1, max=30
End

Begin Message, ETS DSPM Poke Cmd
    Address, uint16
    Words (16), uint16, min=0, max=30
    Data, array, type=uint16, maxsize=30, size=Words (16), columns=30
End

Begin Message, ETS DSPM Memory Test Cmd
    Start, uint16
    Words (16), uint16, min=1
End

Begin Message, ETS DSPM Version Cmd
End

Begin Message, ETS DSPM Fault Ctrl Cmd
    Control, uint16, base=enum:Disable/Enable
End

Begin Message, ETS DSPM Heart Beat Ctrl Cmd
    Control, uint16, base=enum:Disable/Enable
End

Begin Message, ETS DSPM Code Peek Cmd
    Address, uint16
    Words (16), uint16, min=1, max=30
End

Begin Message, ETS DSPM Code Poke Cmd
    Address, uint16
    Words (16), uint16, min=0, max=30
    Data, array, type=uint16, maxsize=30, size=Words (16), columns=30
End

Begin Message, ETS DSPM Code Memory Test Cmd
    Start, uint16
    Words (16), uint16, min=1
End

Begin Message, ETS DSPM Bitwise Operation Cmd
    Address, uint16
    Operator, uint16,base=enum:MonOperators
    Mask (16bit), uint16
End

Begin Message, ETS DSPM Fwd Chnl Pwr Puncture Cmd
    Change, uint16, base=enum:Enable Modes, default=Yes
    Enable, uint16, base=enum:Enable Modes, default=Yes
End

Begin Message, ETS DSPM Fwd Chnl Scramble Cmd
    Change, uint16, base=enum:Enable Modes, default=Yes
    Enable, uint16, base=enum:Enable Modes, default=Yes
End

Begin Message, ETS DSPM Start Test Cmd
    Cmd, int16
    Test Num, uint16, base=enum:Start Test Num
End

Begin Message, ETS DSPM Sim
    Id, uint16, base=enum:DSPM Messages Type
    Msg, union, enum=Id
End

Begin Message, DSPM Sim DSPM Sim Msg Cmd
    Id, int16
    Msg, array, type=uint16, maxsize=150, size=end , columns=30
End

Begin Message, DSPM Sim DSPM Fwd Channel Config Cmd
    Disable, uint16, default=0,       base=10
    Dest, uint16, default=0x0000,  base=16
    ChnlNum, uint16, default=0,       base=10
    Change, uint16, default=0x001f,  base=16
    RC, uint16, default=RC_3,    base=enum:RC Type
    FrameOffset, uint16, default=0,       base=10
    LcMask0, array, type=uint16, maxsize=3
    LcMask1, array, type=uint16, maxsize=3
    ChnlTyp, uint16, default=FFCH,    base=enum:Fwd Channel Type
    NumBits (0), uint16, default=172,     base=10
    NumBits (1), uint16, default=80,      base=10
    NumBits (2), uint16, default=40,      base=10
    NumBits (3), uint16, default=16,      base=10
    FrameDuration, uint16, default=F20MS,   base=enum:Fwd Frame Duration Type
    CrcIdx, uint16, default=0x2235,  base=16
    Rate, uint16, default=QUARTER_RT, base=enum:Fwd Code Rate Type
    FrepM, uint16, default=0,       base=16
    PuncIdx, uint16, default=0,       base=16
    IntrlvMJ, uint16, default=0,       base=16
    RxaSum, uint16, default=1,       base=10
    LcMaskIdx, uint16, default=0x0,     base=16
    SymbolLen, uint16, default=64,      base=10
    VitScale, uint16, default=DIV_2,   base=enum:DIV_1/DIV_2/DIV_4/DIV_8
    MrcScale, uint16,  default=5,       base=10
    RdaDecAllRates, uint16, default=0,     base=10
    FourChnlConfig, uint16, default=0,     base=10
    TurboMode, uint16, default=0,       base=10
    DtxEnabled, uint16, default=0,       base=10
End

Begin Message, DSPM Sim DSPM Fwd Set Fwv Gen Spy Cmd
    Spy Address, uint16, default=0, base=16
    Spy Data Len, uint16, default=1, base=10
End

Begin Message, DSPM Sim DSPM Fwd Rda Switch Cmd
    Rda Mode, uint16, default=Enable, base=enum:Enable/Disable
End

Begin Message, DSPM Sim DSPM Fwd EarlyTerminate Dbg Cmd
    Change, uint16, default=1,      base=10
    PcgMasks, uint16, default=0x0008, base=16
    RC11Enable, uint16, default=Enable, base=enum:Disable/Enable
    FERMAxCnt, uint16, default=1000,   base=10
End

Begin Message, DSPM Sim DSPM Fwd Set Smb Spy Cmd
    Cmd Number, uint16, default=4, base=enum:Cmd Type
    Mode, uint16, base=enum:Mode Type
    Buffer Size, uint16, default=96, base=10
    Start Symbol, uint16, default=1,  base=10
    Decim Factor, uint16, default=16, base=10
    Spy Address (Append '0 0' to end), array,  type=uint16, maxsize=10, size=end
End

Begin Message, DSPM Sim DSPM Fwd Set Fwm Gen Spy Cmd
    Spy Address, uint16, default=0, base=16
    Spy Data Len, uint16, default=1, base=10
End

Begin Message, DSPM Sim DSPM Fwd TimeTrack Switch Cmd
    TimeTrack, uint16, default=Enable, base=enum:Enable/Disable
End

Begin Message, DSPM Sim DSPM Fwd Finger Modify Cmd
    Finger ModQ Cmd, uint16, base=enum:Fwd Finger ModQ Type
    Finger Num, uint16, base=enum:0/1/2/3/SysTm
    Pilot PN, uint16, default=0x0, base=10
    Offset Int, uint16, default=0, base=10
    Offset Frac, uint16, default=0, base=10
    Pilot Walsh, uint16, default=0, base=10
    ChnlNum, uint16, base=enum:0/1/2/3/4
    ChnlWalsh, uint16, default=32, base=10
    Adv/Ret, uint16, base=enum:Null/Adv/Ret
End

Begin Message, DSPM Sim DSPM Fwd Pdch Parms Cmd
    SysTime, uint16, base=10, default=0
    AckDelayAndNumArqChan, uint16, base=10, default=0
    PilotGatingInfo, uint16, base=10, default=0
    ForPdchRcAndFullCI, uint16, base=10, default=0
    RevCqichFrameOffset, uint16, base=10, default=0
    RevCqichAckReps, uint16, base=10, default=0
    NumSwitchingFrames, uint16, base=10, default=0
    NumSwitchingFramesChm, uint16, base=10, default=0
    NumSwitchingSlot, uint16, base=10, default=0
    NumSwitchingSlotChm, uint16, base=10, default=0
    PdchSwitchingDelay, uint16, base=10, default=0
    NumPilots, uint16, base=10, default=0
    BS, record, type=BaseStationConfigT, maxsize=7
End

Begin Record, BaseStationConfigT
    PilotPn, uint16, base=10
    WlshTblNumPdcch, uint16, base=10
    PdcchW10, uint16, base=10
    MacIdCqichCover, uint16, base=10
    GroupIndxPwrCmbIdx, uint16, base=10
End

Begin Message, DSPM Sim DSPM Fwd Pdch Debugs Cmd
    Cmd, uint16, base=10, default=0
    Test1, uint16, base=10, default=0
    Test2, uint16, base=10, default=0
    Test3, uint16, base=10, default=0
    Test4, uint16, base=10, default=0
End

Begin Message, DSPM Sim DSPM Fwd Pdch Finger Alloc Cmd
    Cmd (Alloc -> 1 DeAlloc -> 2 TTrac -> 3), uint16, base=16, default=0x0000
    Finger Number (0 1 2), uint16, base=16, default=0x0000
    Pilot PN, uint16, base=16, default=0x0000
    OffsetInt, uint16, base=16, default=0x0000
    OffsetFrac, uint16, base=16, default=0x0000
    AdvRet (Adv -> 1 Ret -> 2), uint16, base=16, default=0x0000
End

Begin Message, DSPM Sim DSPM Fwd Pdch QamScale Cmd
    Cmd (Enable -> 1 Disable -> 0), uint16, base=16, default=0x0001
    QamScaleOffset, uint16, base=16, default=0xFFFF
    QamSymbScale, uint16, base=16, default=0x077E
    QamRmsScale, uint16, base=16, default=0x0678
End

Begin Message, DSPM Sim DSPM Fwd Pdch TD Iteration Cmd
    Cmd (Enable -> 1 Disable -> 0), uint16, base=16, default=0x0001
    TD Iteration Number, uint16, base=16, default=0x0003
End

Begin Message, DSPM Sim DSPM Fwd Pdch Reset Statistics Cmd
End

Begin Message, DSPM Sim DSPM Fwd Pdch Bypass Searcher Cmd
    Cmd (Bypass1 ->  Pass -> 0), uint16, base=16, default=0x0001
End

Begin Message, DSPM Sim DSPM Fwd Pdch Bypass Rev Cmd
    Cmd (Bypass -> 1 Pass -> 0), uint16, base=16, default=0x0001
End

Begin Message, DSPM Sim DSPM Fwd Pdch MacId0 Disable Cmd
    Cmd (Disable -> 1 Enable -> 0), uint16, base=16, default=0x0001
End

Begin Message, DSPM Sim DSPM Fwd Pdch Fix CQI Value Cmd
    Cmd (Enable -> 1 Disable -> 0), uint16, base=16, default=0x0001
    CQI Value (10log10(val/8192)), uint16, base=16, default=0x1000
End

Begin Message, DSPM Sim DSPM Fwd Pdch Fix ACKNAK Cmd
    Cmd (Enable -> 1 Disable -> 0), uint16, base=16, default=0x0001
    AckNakPattern, uint16, base=16, default=0x1234
    AckNakValid, uint16, base=16, default=0x1234
End

Begin Message, DSPM Sim DSPM Fwd Pdch Cell Switch Cmd
    PilotPN, uint16, base=16, default=0x0000
    PilotIndex (0 to 6), uint16, base=16, default=0x0000
    WalshCover (0 to 7), uint16, base=16, default=0x0000
    NumSwitchingFrames (20ms units), uint16, base=16, default=0x0000
    NumSwitchingSlots (2 4 7), uint16, base=16, default=0x0002
End

Begin Message, DSPM Sim DSPM Fwd Pdch Cell Switch Thresh Cmd
    Cmd (Enable -> 1 Disable -> 0), uint16, base=16, default=0x0001
    PersistTimerVal (80ms units - 1), uint16, base=16, default=0x0002
    PersistThreshScaleQ15 (linear scale), uint16, base=16, default=0x65AD
    PersistInstThreshShiftVal (3dB per shift), uint16, base=16, default=0x0002
End

Begin Message, DSPM Sim DSPM Fwd Pdch Valid Chk Disable Cmd
    Cmd (Disable -> 1 Enable -> 0), uint16, base=16, default=0x0001
End

Begin Message, DSPM Sim DSPM Fwd Pdch LWCI Chk Disable Cmd
    Cmd (Disable -> 1 Enable -> 0), uint16, base=16, default=0x0001
End

Begin Message, DSPM Sim DSPM Fwd Pdch LC Scram Disable Cmd
    Cmd (Disable -> 1 Enable -> 0), uint16, base=16, default=0x0001
End

Begin Message, DSPM Sim DSPM Fwd Pdch Fix LC Pattern Cmd
    Cmd (Enable -> 1 Disable -> 0), uint16, base=16, default=0x0001
    LCPattern, uint16, base=16, default=0x0000
End

Begin Message, DSPM Sim DSPM Fwd Pdch Pdcch Scram BitRevOff Cmd
    Cmd (BitRevOff -> 1 BitRevOn -> 0), uint16, base=16, default=0x0000
End

Begin Message, DSPM Sim DSPM Rev Chnl Cfg Cmd
    Rev Chnl Cfg, array, type=uint16, maxsize=30, size=end
End

Begin Message, DSPM Sim DSPM Rev Preamble Cfg Cmd
    Rev Preamble Chnl Cfg, array, type=uint16, maxsize=30, size=end
End

Begin Message, DSPM Sim DSPM Rev Mixed Sig Parm Cmd
    Rev Mixed Sig Parm, array, type=uint16, maxsize=30, size=end
End

Begin Message, DSPM Sim DSPM Rev RC8 Test Cfg Cmd
    F-FCH Fund Rate, uint16, default=Full, base=enum:Full/Half/Quarter/Eighth/Zero
    R-FCH Ack Chnl Enable, uint16, default=ACK1, base=enum:Rev ACK Enable
    FCH Ack Polarity, uint16, default=NORMAL, base=enum:NORMAL/REVERSE
    R-FCH Ack1 Scale, uint16, default=90, base=10
    R-FCH Ack2 Scale, uint16, default=90, base=10
    R-FCH Ack Mask, uint16, default=0x5550, base=16
    R-FCH Terminate, uint16, default=CONT, base=enum:END/CONT
End

Begin Message, DSPM Sim DSPM RxAGC Calibr Mode Parms Cmd
    Mantissa, uint16, base=16,    default=0x9000
    Exponent, int16,  base=16,    default=0xffee
    Target, int16,  base=10,    default=3250
    Disable Slope Calc, uint16, base=bool, default=True
End

Begin Message, DSPM Sim DSPM RxAGC Settle_Target Power Cmd
    Tsettle, int16,  default=24
    TargetPwrQ8log2(2^13), int16,  default=3450
End

Begin Message, DSPM Sim DSPM RxDAGC Gain State Ctrl Cmd
    Ctrl Mode, uint16, base=enum:Rfc Ctrl Mode Type
    Rf Path, uint16, base=enum:Main/Div
    Gain State, uint16, base=10, default=0, max=5
End

Begin Message, DSPM Sim DSPM Msc Mdm Rst Cmd
    SeqNum, uint16, base=10
    Reset, uint16, base=16
    Type, uint16, base=enum:0 Cold/1 Warm
End

Begin Message, DSPM Sim DSPM Msc Sync Sys Time Cmd
    Immediate, uint16, base=10
    PilotPn, uint16
    LCState, array,  type=uint16, maxsize=3
End

Begin Message, DSPM Sim DSPM Msc Parm Msg Cmd
    RxTxOffset, int16, base=10
End

Begin Message, DSPM Sim DSPM Msc Dbg Finger Acq Cmd
End

Begin Message, DSPM Sim DSPM Msc Dbg Finger Scan Cmd
    Finger, uint16, base=10, default=0
    NumOffset, uint16, base=10, default=32
    OffsetQ2, uint16
    DwellLen, uint16, base=10, default = 16
    ShiftDown, uint16, base=10, default = 12
    Walsh, uint16, base=10, default = 12
    Sort, uint16, base=10, default = 0
End

Begin Message, DSPM Sim DSPM Sch Pilot_Acquire Cmd
    CdmaBand, uint16, base=10
    FreqChan, uint16, base=10
    NumCycles, uint16, base=10
End

Begin Message, DSPM Sim DSPM Sch Normal_Pilot_Set Cmd
    Next Frame, uint16, base=10
    Change, uint16
    SearchMode, uint16, base=10
    NumActive, uint16, base=10
    Active, record, type=IpcActiveConfigT, maxsize=6
    NumCand, uint16, base=10
    Candidate, record, type=IpcCandConfigT, maxsize=5
    NumNeigh, uint16, base=10
    Neighbor, record, type=IpcNghbrConfigT, maxsize=20
    PilotInc, uint16, base=10
End

Begin Record, IpcActiveConfigT
    Pn Wlsh PwrComb ChnlWalsh[4], array, type=uint16, maxsize=7
End

Begin Record, IpcCandConfigT
    Pn Wlsh, array, type=uint16, maxsize=2
End

Begin Record, IpcNghbrConfigT
    Pn Wlsh Pri, array, type=uint16, maxsize=3
End

Begin Message, DSPM Sim DSPM Sch Aflt Pilot Set Cmd
    SeqNum, uint16, default=1,      base=10
    SrchWin, uint16, default=64,     base=10
    NumPilots, uint16, default=2,      base=10
    Aflt, record, type=IpcAfltConfigT, maxsize=10
End

Begin Record, IpcAfltConfigT
    PilotPN, uint16, base=16
    TimeCorrect, uint16, base=16
End

Begin Message, DSPM Sim DSPM Sch Aflt Alg Value Cmd
    Msets, uint16, default=2,      base=10
    DwellLen1, uint16, default=0x7f,   base=16
    DwellLen2, uint16, default=0x7f,   base=16
    CoarseAverageNum, uint16, default=8,      base=10
    FineAverageNum, uint16, default=4,      base=10
    CoarseMaskRelShft, uint16, default=0x16,   base=16
    CoarseThreshAbs, uint16, default=0x0,    base=16
    FineWinSize, uint16, default=1,      base=10
    Fine1to2ChipMask, int16, default=0x392d, base=16
    Fine2to3ChipMask, int16, default=0x287a, base=16
    FineOtherMask, int16, default=0x16c3, base=16
    FineThreshAbs, uint16, default=0x01b0, base=16
    SpyPilotPN, uint16, default=0x8,    base=16
    NormFactor, uint16, default=0x3300, base=16
End

Begin Message, DSPM Sim DSPM Sch Query Timing Cmd
End

Begin Message, DSPM Sim DSPM Sch Diversity Control Cmd
    Diversity, uint16, default=Enable, base=enum:On/Off
    PilotCombAlg, uint16, default=Enable, base=enum:PilotCombAlgT
End

Begin Message, DSPM Sim DSPM Sch SamplePhase Control Cmd
    Tc/8 Phase, uint16, default=0, base=enum:SamplePhaseT
End

Begin Message, ETS DSPM Rev Mixed Signal Parms Cmd
    GainComp1, uint16, base=16, default=0xFFF0
    GainComp2, uint16, base=16, default=0xFFF0
    GainSelect, uint16, base=10, default=6
    ClipLevel, uint16, base=16, default=0x03FF
    Clipmaxthres, uint16, base=16, default=0x007F
    Clipmaxsigmax, uint16, base=16, default=0x03FF
    Clipsigmap, uint16, base=16, default=0x07FF
    Ksthres, array, type=uint16, maxsize=9
End

Begin Message, ETS DSPM Fpc Algorithm Parms Cmd
    OLCoarseK1, uint16, base=10, default=4000
    OLCoarseK2, uint16, base=16, default=0x2000
    OLFineC1, uint16, base=10, default=1638
    OLFineC2, uint16, base=10, default=8192
    NtIIRCoef, uint16, base=16, default=0x6CCD
    NtFloor, uint16, base=10, default=10
    MaxEsNt, uint16, base=16, default=0x3000
    ThrCorrVal, uint16, base=16, default=0x0100
    StepCorrVal, uint16, base=16, default=0x0100
    StepNumFrmBits, uint16, base=10, default=8
    StepSizeDefault, uint16, base=16, default=0x0080
    StepSzEstEnable, uint16, base=10, default=0
End

Begin Message, ETS DSPM Sch Algorithm Parms Cmd
    Searcher, uint16, base=16, default = 0x39A9
    Finger, uint16, base=16, default = 0x329F
    AverageNum, uint16, base=10, default = 3
    Interval, uint16, base=10, default = 180
    EcIoAbsThresh, uint16, base=10, default = 1646
    OffsetDist, uint16, base=10, default = 8
    FngrEcIoFiltConst, uint16, base=10, default = 31129
    FngrEcIoInstConst, uint16, base=10, default = 30719
    SideLobeDist, uint16, base=10, default = 15
    EcIoRelThresh, uint16, base=10, default = 3
    FastSystemTimeTrackNum, uint16, base=10, default = 32
    FastTimeTrackNum, uint16, base=10, default = 4
    FgrAllocOffsetDistQ3, uint16, base=10, default = 8
    TrkSysTimeMinFrames, uint16, base=10, default = 4
    TrkMinPwr, uint16, base=16, default = 0x28F
    TimeTrackCoefR1, uint16, base=10, default = 6719
    CompPn, uint16, base=10, default = 2
    ActSetTimer, uint16, base=10, default = 180
    PwrRptTimer, uint16, base=10, default = 4096
    UsablePathCntr, uint16, base=10, default = 3072
    FingerStatusCntr, uint16, base=10, default = 4096
End

Begin Message, ETS DSPM Rfc RxAgc Alg Parms Cmd
    RxAgcFastSTime, uint16, base=10, default = 6
    RxAgcSlowSTime, uint16, base=10, default = 12
End

Begin Message, ETS DSPM Fwd Rda HMetric Parms Cmd
    FwdVitScale[RC1][FWD_RDA_RT_FULL], uint16, base=16, default = 0x0000
    FwdVitScale[RC1][FWD_RDA_RT_HALF], uint16, base=16, default = 0x0000
    FwdVitScale[RC1][FWD_RDA_RT_QUARTER], uint16, base=16, default = 0x0010
    FwdVitScale[RC1][FWD_RDA_RT_EIGHTH], uint16, base=16, default = 0x0020
    FwdVitScale[RC2][FWD_RDA_RT_FULL], uint16, base=16, default = 0x0000
    FwdVitScale[RC2][FWD_RDA_RT_HALF], uint16, base=16, default = 0x0000
    FwdVitScale[RC2][FWD_RDA_RT_QUARTER], uint16, base=16, default = 0x0010
    FwdVitScale[RC2][FWD_RDA_RT_EIGHTH], uint16, base=16, default = 0x0020
    FwdVitScale[RC3][FWD_RDA_RT_FULL], uint16, base=16, default = 0x0010
    FwdVitScale[RC3][FWD_RDA_RT_HALF], uint16, base=16, default = 0x0020
    FwdVitScale[RC3][FWD_RDA_RT_QUARTER], uint16, base=16, default = 0x0020
    FwdVitScale[RC3][FWD_RDA_RT_EIGHTH], uint16, base=16, default = 0x0020
    FwdVitScale[RC4][FWD_RDA_RT_FULL], uint16, base=16, default = 0x0000
    FwdVitScale[RC4][FWD_RDA_RT_HALF], uint16, base=16, default = 0x0000
    FwdVitScale[RC4][FWD_RDA_RT_QUARTER], uint16, base=16, default = 0x0010
    FwdVitScale[RC4][FWD_RDA_RT_EIGHTH], uint16, base=16, default = 0x0020
    FwdVitScale[RC5][FWD_RDA_RT_FULL], uint16, base=16, default = 0x0000
    FwdVitScale[RC5][FWD_RDA_RT_HALF], uint16, base=16, default = 0x0010
    FwdVitScale[RC5][FWD_RDA_RT_QUARTER], uint16, base=16, default = 0x0020
    FwdVitScale[RC5][FWD_RDA_RT_EIGHTH], uint16, base=16, default = 0x0020
    FwdRdaTtbl[RC1][FE], uint16, base=16, default  = 0x4CCD
    FwdRdaTtbl[RC1][HE], uint16, base=16, default  = 0x3666
    FwdRdaTtbl[RC1][QE], uint16, base=16, default  = 0x28A4
    FwdRdaTtbl[RC1][FQ], uint16, base=16, default  = 0x3666
    FwdRdaTtbl[RC1][HQ], uint16, base=16, default  = 0x29EC
    FwdRdaTtbl[RC1][FH], uint16, base=16, default  = 0x2800
    FwdRdaTtbl[RC2][HF], uint16, base=16, default  = 0x747B
    FwdRdaTtbl[RC2][QF], uint16, base=16, default  = 0x570A
    FwdRdaTtbl[RC2][EF], uint16, base=16, default  = 0x3D71
    FwdRdaTtbl[RC2][QH], uint16, base=16, default  = 0x63D7
    FwdRdaTtbl[RC2][EH], uint16, base=16, default  = 0x4CCD
    FwdRdaTtbl[RC2][EQ], uint16, base=16, default  = 0x6666
    FwdRdaTtbl[RC3][HF], uint16, base=16, default  = 0x628F
    FwdRdaTtbl[RC3][QF], uint16, base=16, default  = 0x4CCD
    FwdRdaTtbl[RC3][EF], uint16, base=16, default  = 0x399A
    FwdRdaTtbl[RC3][QH], uint16, base=16, default  = 0x6666
    FwdRdaTtbl[RC3][EH], uint16, base=16, default  = 0x50A4
    FwdRdaTtbl[RC3][EQ], uint16, base=16, default  = 0x651F
    FwdRdaTtbl[RC4][HF], uint16, base=16, default  = 0x68F6
    FwdRdaTtbl[RC4][QF], uint16, base=16, default  = 0x528F
    FwdRdaTtbl[RC4][EF], uint16, base=16, default  = 0x3F5C
    FwdRdaTtbl[RC4][QH], uint16, base=16, default  = 0x68F6
    FwdRdaTtbl[RC4][EH], uint16, base=16, default  = 0x53D7
    FwdRdaTtbl[RC4][EQ], uint16, base=16, default  = 0x68F6
    FwdRdaTtbl[RC5][HF], uint16, base=16, default  = 0x72B0
    FwdRdaTtbl[RC5][QF], uint16, base=16, default  = 0x56A8
    FwdRdaTtbl[RC5][EF], uint16, base=16, default  = 0x3EB8
    FwdRdaTtbl[RC5][QH], uint16, base=16, default  = 0x651F
    FwdRdaTtbl[RC5][EH], uint16, base=16, default  = 0x4A3D
    FwdRdaTtbl[RC5][EQ], uint16, base=16, default  = 0x64BC
End

Begin Message, ETS DSPM Fwd Rda PMetric Parms Cmd
    FwdRdaChkStaticBytesLen[RC1], uint16, base=10, default = 3
    FwdRdaChkStaticBytesLen[RC2], uint16, base=10, default = 3
    FwdRdaChkStaticBytesLen[RC3], uint16, base=10, default = 3
    FwdRdaChkStaticBytesLen[RC4], uint16, base=10, default = 3
    FwdRdaChkStaticBytesLen[RC5], uint16, base=10, default = 3
    FwdRdaYamatbl[EIGHTH_RT], uint16, base=16, default = 0x0203
    FwdRdaYamatbl[QUARTER_RT], uint16, base=16, default = 0x0246
    FwdRdaT0tbl[RC1][T0_HF], uint16, base=16, default = 0x5EB8
    FwdRdaT0tbl[RC1][T0_QF], uint16, base=16, default = 0x251F
    FwdRdaT0tbl[RC1][T0_EF], uint16, base=16, default = 0x0EB8
    FwdRdaT0tbl[RC1][T0_QH], uint16, base=16, default = 0x347B
    FwdRdaT0tbl[RC1][T0_EH], uint16, base=16, default = 0x1333
    FwdRdaT0tbl[RC1][TP_HF], uint16, base=16, default = 0x0000
    FwdRdaT0tbl[RC1][T0_EQ], uint16, base=16, default = 0x2CCD
    FwdRdaT0tbl[RC1][TP_QH], uint16, base=16, default = 0x0000
    FwdRdaT0tbl[RC1][TP_QF], uint16, base=16, default = 0x0000
    FwdRdaT0tbl[RC1][TP_EQ], uint16, base=16, default = 0x0000
    FwdRdaT0tbl[RC1][TP_EH], uint16, base=16, default = 0x0E14
    FwdRdaT0tbl[RC1][TP_EF], uint16, base=16, default = 0x0A3D
    FwdRdaT0tbl[RC2][T0_HF], uint16, base=16, default = 0x67AE
    FwdRdaT0tbl[RC2][T0_QF], uint16, base=16, default = 0x28F6
    FwdRdaT0tbl[RC2][T0_EF], uint16, base=16, default = 0x11EB
    FwdRdaT0tbl[RC2][T0_QH], uint16, base=16, default = 0x31EC
    FwdRdaT0tbl[RC2][T0_EH], uint16, base=16, default = 0x1333
    FwdRdaT0tbl[RC2][TP_HF], uint16, base=16, default = 0x63D7
    FwdRdaT0tbl[RC2][T0_EQ], uint16, base=16, default = 0x347B
    FwdRdaT0tbl[RC2][TP_QH], uint16, base=16, default = 0x2E14
    FwdRdaT0tbl[RC2][TP_QF], uint16, base=16, default = 0x228F
    FwdRdaT0tbl[RC2][TP_EQ], uint16, base=16, default = 0x2B85
    FwdRdaT0tbl[RC2][TP_EH], uint16, base=16, default = 0x0F5C
    FwdRdaT0tbl[RC2][TP_EF], uint16, base=16, default = 0x0A3D
    FwdRdaT0tbl[RC3][T0_HF], uint16, base=16, default = 0x2F5C
    FwdRdaT0tbl[RC3][T0_QF], uint16, base=16, default = 0x2000
    FwdRdaT0tbl[RC3][T0_EF], uint16, base=16, default = 0x1999
    FwdRdaT0tbl[RC3][T0_QH], uint16, base=16, default = 0x5D70
    FwdRdaT0tbl[RC3][T0_EH], uint16, base=16, default = 0x4A3D
    FwdRdaT0tbl[RC3][TP_HF], uint16, base=16, default = 0x30A3
    FwdRdaT0tbl[RC3][T0_EQ], uint16, base=16, default = 0x699A
    FwdRdaT0tbl[RC3][TP_QH], uint16, base=16, default = 0x5AE1
    FwdRdaT0tbl[RC3][TP_QF], uint16, base=16, default = 0x2000
    FwdRdaT0tbl[RC3][TP_EQ], uint16, base=16, default = 0x5333
    FwdRdaT0tbl[RC3][TP_EH], uint16, base=16, default = 0x3AE1
    FwdRdaT0tbl[RC3][TP_EF], uint16, base=16, default = 0x151F
    FwdRdaT0tbl[RC4][T0_HF], uint16, base=16, default = 0x5AE1
    FwdRdaT0tbl[RC4][T0_QF], uint16, base=16, default = 0x23D7
    FwdRdaT0tbl[RC4][T0_EF], uint16, base=16, default = 0x0E14
    FwdRdaT0tbl[RC4][T0_QH], uint16, base=16, default = 0x31EC
    FwdRdaT0tbl[RC4][T0_EH], uint16, base=16, default = 0x1333
    FwdRdaT0tbl[RC4][TP_HF], uint16, base=16, default = 0x628F
    FwdRdaT0tbl[RC4][T0_EQ], uint16, base=16, default = 0x347B
    FwdRdaT0tbl[RC4][TP_QH], uint16, base=16, default = 0x30A4
    FwdRdaT0tbl[RC4][TP_QF], uint16, base=16, default = 0x23D7
    FwdRdaT0tbl[RC4][TP_EQ], uint16, base=16, default = 0x28F6
    FwdRdaT0tbl[RC4][TP_EH], uint16, base=16, default = 0x0F5C
    FwdRdaT0tbl[RC4][TP_EF], uint16, base=16, default = 0x0A3D
    FwdRdaT0tbl[RC5][T0_HF], uint16, base=16, default = 0x2F5C
    FwdRdaT0tbl[RC5][T0_QF], uint16, base=16, default = 0x0F5C
    FwdRdaT0tbl[RC5][T0_EF], uint16, base=16, default = 0x0B85
    FwdRdaT0tbl[RC5][T0_QH], uint16, base=16, default = 0x2CCD
    FwdRdaT0tbl[RC5][T0_EH], uint16, base=16, default = 0x2000
    FwdRdaT0tbl[RC5][TP_HF], uint16, base=16, default = 0x2F5C
    FwdRdaT0tbl[RC5][T0_EQ], uint16, base=16, default = 0x628F
    FwdRdaT0tbl[RC5][TP_QH], uint16, base=16, default = 0x2E14
    FwdRdaT0tbl[RC5][TP_QF], uint16, base=16, default = 0x10A4
    FwdRdaT0tbl[RC5][TP_EQ], uint16, base=16, default = 0x50A4
    FwdRdaT0tbl[RC5][TP_EH], uint16, base=16, default = 0x1AE1
    FwdRdaT0tbl[RC5][TP_EF], uint16, base=16, default = 0x099A
    FwdRdaSerThres[EIGHTH_RT], uint16, base=10, default = 8
    FwdRdaSerThres[QUARTER_RT], uint16, base=10, default = 19
End

Begin Message, ETS DSPM Fwd Fngr Noise Norm Parms Cmd
    On/Off, uint16, base=enum:Disable/Enable, default=Enable
    A0 (Shift), uint16, base=10,  default=5
    B0 (Mult), uint16, base=16,  default=0x7000
    Noise Min, uint16, base=10,  default=4
    FwdFngrNoNormMultTbl[RC1][0], uint16, base=16, default = 0x31D6
    FwdFngrNoNormMultTbl[RC1][1], uint16, base=16, default = 0x2EE8
    FwdFngrNoNormMultTbl[RC1][2], uint16, base=16, default = 0x2C4C
    FwdFngrNoNormMultTbl[RC1][3], uint16, base=16, default = 0x29F8
    FwdFngrNoNormMultTbl[RC1][4], uint16, base=16, default = 0x27DE
    FwdFngrNoNormMultTbl[RC1][5], uint16, base=16, default = 0x25F8
    FwdFngrNoNormMultTbl[RC1][6], uint16, base=16, default = 0x243E
    FwdFngrNoNormMultTbl[RC1][7], uint16, base=16, default = 0x22AB
    FwdFngrNoNormMultTbl[RC1][8], uint16, base=16, default = 0x2139
    FwdFngrNoNormMultTbl[RC1][9], uint16, base=16, default = 0x1FE5
    FwdFngrNoNormMultTbl[RC1][10], uint16, base=16, default = 0x1EAB
    FwdFngrNoNormMultTbl[RC1][11], uint16, base=16, default = 0x1D88
    FwdFngrNoNormMultTbl[RC1][12], uint16, base=16, default = 0x1C7A
    FwdFngrNoNormMultTbl[RC1][13], uint16, base=16, default = 0x1B7F
    FwdFngrNoNormMultTbl[RC1][14], uint16, base=16, default = 0x1A94
    FwdFngrNoNormMultTbl[RC1][15], uint16, base=16, default = 0x19B9
    FwdFngrNoNormMultTbl[RC2][0], uint16, base=16, default = 0x2554
    FwdFngrNoNormMultTbl[RC2][1], uint16, base=16, default = 0x2323
    FwdFngrNoNormMultTbl[RC2][2], uint16, base=16, default = 0x212F
    FwdFngrNoNormMultTbl[RC2][3], uint16, base=16, default = 0x1F70
    FwdFngrNoNormMultTbl[RC2][4], uint16, base=16, default = 0x1DDD
    FwdFngrNoNormMultTbl[RC2][5], uint16, base=16, default = 0x1C71
    FwdFngrNoNormMultTbl[RC2][6], uint16, base=16, default = 0x1B26
    FwdFngrNoNormMultTbl[RC2][7], uint16, base=16, default = 0x19F8
    FwdFngrNoNormMultTbl[RC2][8], uint16, base=16, default = 0x18E2
    FwdFngrNoNormMultTbl[RC2][9], uint16, base=16, default = 0x17E4
    FwdFngrNoNormMultTbl[RC2][10], uint16, base=16, default = 0x16F8
    FwdFngrNoNormMultTbl[RC2][11], uint16, base=16, default = 0x161F
    FwdFngrNoNormMultTbl[RC2][12], uint16, base=16, default = 0x1554
    FwdFngrNoNormMultTbl[RC2][13], uint16, base=16, default = 0x1498
    FwdFngrNoNormMultTbl[RC2][14], uint16, base=16, default = 0x13E8
    FwdFngrNoNormMultTbl[RC2][15], uint16, base=16, default = 0x1344
End

Begin Message, ETS DSPV Loopback Cmd
    Data, array, type=uint16, maxsize=40, size=end, columns=60
End

Begin Message, ETS DSPV Trace
    TraceId, uint16, base=enum:DSPV TraceIds
    TraceMsg, union,  enum=TraceId
End

Begin Message, DSPV Trace Cmd
    Enable, uint16, base=bool
End

Begin Message, ETS DSPV Spy
    SpyId, uint16, base=enum:DSPV SpyIds
    SpyMsg, union,  enum=SpyId
End

Begin Message, DSPV Spy Cmd
    Enable, uint16, base=bool
End

Begin Message, ETS DSPV Peek Cmd
    Address, uint16
    Words (16), uint16, min=1, max=30
End

Begin Message, ETS DSPV Poke Cmd
    Address, uint16
    Words (16), uint16, min=0, max=30
    Data, array, type=uint16, maxsize=30, size=Words (16), columns=30
End

Begin Message, ETS DSPV Memory Test Cmd
    Start, uint16
    Words (16), uint16, min=1
End

Begin Message, ETS DSPV Version Cmd
End

Begin Message, ETS DSPV Fault Ctrl Cmd
    Control, uint16, base=enum:Disable/Enable
End

Begin Message, ETS DSPV Heart Beat Ctrl Cmd
    Control, uint16, base=enum:Disable/Enable
End

Begin Message, ETS DSPV Code Peek Cmd
    Address, uint16
    Words (16), uint16, min=1, max=30
End

Begin Message, ETS DSPV Code Poke Cmd
    Address, uint16
    Words (16), uint16, min=0, max=30
    Data, array, type=uint16, maxsize=30, size=Words (16), columns=30
End

Begin Message, ETS DSPV Code Memory Test Cmd
    Start, uint16
    Words (16), uint16, min=1
End

Begin Message, ETS DSPV Bitwise Operation Cmd
    Address, uint16
    Operator, uint16,base=enum:MonOperators
    Mask (16bit), uint16
End

Begin Message, ETS DSPV Mixed Sig Reg Init Cmd
End

Begin Message, ETS DSPV Jtag Pwr Cfg Cmd
    Control, uint16, base=enum:Disable/Enable
End

Begin Message, ETS DSPV Set Mic Fif Mode Cmd
    Mic Fif Mode, uint16, base=enum:Mic Fif Modes, default=Mic Fif Mode On
End

Begin Message, ETS DSPV Set Mic Ans Mode Cmd
    Mic Ans Mode, uint16, base=enum:Mic Ans Modes, default=Mic Acoustic Noise Suppression On
End

Begin Message, ETS DSPV Send Mic Ans Cfg Params Cmd
    AnsVmThres, uint16, default= 0x0023		   ,indent = 3
    AnsTceThres, uint16, default= 0x0100		   ,indent = 3
    AnsSpecDevThres, uint16, default= 0x0380		   ,indent = 3
    AnsCntThres, uint16, default= 0x0020		   ,indent = 3
    AnsHysCntThres, uint16, default= 0x0006		   ,indent = 3
    AnsStckCntrThres, uint16, default= 0x0300		   ,indent = 3
End

Begin Message, ETS DSPV Set Mic Bif Mode Cmd
    Mic Bif Mode, uint16, base=enum:Mic Bif Modes, default=Mic Bif Mode Off
End

Begin Message, ETS DSPV Send Mic Bif Cfg Params Cmd
    MicBifNumBqSects, int16, default= 3					,indent = 3
    MicBifBqCoefs[0], int16, default= 8192					,indent = 3
    MicBifBqCoefs[1], int16, default= 2142					,indent = 3
    MicBifBqCoefs[2], int16, default= -2771				,indent = 3
    MicBifBqCoefs[3], int16, default= -1944				,indent = 3
    MicBifBqCoefs[4], int16, default= 2025					,indent = 3
    MicBifBqCoefs[5], int16, default= 8192					,indent = 3
    MicBifBqCoefs[6], int16, default= 8192					,indent = 3
    MicBifBqCoefs[7], int16, default= -6905				,indent = 3
    MicBifBqCoefs[8], int16, default= 3887					,indent = 3
    MicBifBqCoefs[9], int16, default= 3435					,indent = 3
    MicBifBqCoefs[10], int16, default= -6006				,indent = 3
    MicBifBqCoefs[11], int16, default= 8192					,indent = 3
    MicBifBqCoefs[12], int16, default= 10588				,indent = 3
    MicBifBqCoefs[13], int16, default= 4581					,indent = 3
    MicBifBqCoefs[14], int16, default= 3505					,indent = 3
    MicBifBqCoefs[15], int16, default= 4047					,indent = 3
    MicBifBqCoefs[16], int16, default= 4366					,indent = 3
    MicBifBqCoefs[17], int16, default= 8192					,indent = 3
End

Begin Message, ETS DSPV Set Mic Vol Scal Fctr Cmd
    Scale Factor, uint16, default=0x0100
End

Begin Message, ETS DSPV Send Mpp Tone Gen Params Cmd
End

Begin Message, ETS DSPV Set Mic Voice Enc Max Rate Cmd
    Max Speech Rate, uint16, base=enum:Speech Rates
End

Begin Message, ETS DSPV Set Mic Voice Enc Min Rate Cmd
    Min Speech Rate, uint16, base=enum:Speech Rates
End

Begin Message, ETS DSPV Send Mic Sim Msg Cmd
    Id, uint16, base=enum:Mic Sim Msg Ids,  default=Debug Parm Msg
    Msg, array, type=uint16, maxsize=40, size=end , columns=30
End

Begin Message, ETS DSPV Set Rev Ch SSO Config Msg Cmd
    LpcIROptEn, uint16, base=16, default=1
    LpcIRMaxLen, uint16, base=16, default=20
    LpcIRMinLen, uint16, base=16, default=5
    LpcIRPctPwr, uint16, base=16, default=0xC000
    FcbSubSampEn, uint16, base=16, default=1
    FcbSubSampParm, uint16, base=16, default=0
    MicVoiceEncFracPitchMode, uint16, base=16, default=1
    V13ScaleFactor, uint16, base=16, default=0x0800
End

Begin Message, ETS DSPV Send Spkr Fwd Ch Pckt Data Cmd
    Speech Encode Rate, uint16, base=enum:Speech Rates, default=4
    Words (16), uint16, min=0, max=18
    Speech Data, array,  type=uint16, maxsize=18, size=Words (16), columns=30
End

Begin Message, ETS DSPV Send Spkr Voice Rec Pb Pckt Data Cmd
    Speech Encode Rate, uint16, base=enum:Speech Rates, default=4
    Words (16), uint16, min=0, max=18
    Speech Data, array,  type=uint16, maxsize=18, size=Words (16), columns=30
End

Begin Message, ETS DSPV Send Spp Tone Gen Params Cmd
    ToneId, uint16, default=0
    TonePath, uint16, base=enum:enumTonePath, default=IPC_DSV_DTMF_SPKR
    Mode, uint16, base=enum:enumMode,     default=IPC_TONE_MODE_START
    Duration, uint16, default=0xffff
    Freq_1, uint16, default=1000
    Freq_2, uint16, default=0
End

Begin Message, ETS DSPV Set Spkr Fif Mode Cmd
    Spkr Fif Mode, uint16, base=enum:Spkr Fif Modes, default=Spkr Fif Mode Off
End

Begin Message, ETS DSPV Send Spkr Fif Cfg Params Cmd
    SpkrFifNumBqSects, int16, default= 3					   ,indent = 3
    SpkrFifBqCoefs[0], int16, default= 8192				   ,indent = 3
    SpkrFifBqCoefs[1], int16, default= -5452				   ,indent = 3
    SpkrFifBqCoefs[2], int16, default= -655				   ,indent = 3
    SpkrFifBqCoefs[3], int16, default= -435				   ,indent = 3
    SpkrFifBqCoefs[4], int16, default= -1578				   ,indent = 3
    SpkrFifBqCoefs[5], int16, default= 8192				   ,indent = 3
    SpkrFifBqCoefs[6], int16, default= 8192				   ,indent = 3
    SpkrFifBqCoefs[7], int16, default= 9342				   ,indent = 3
    SpkrFifBqCoefs[8], int16, default= 3554				   ,indent = 3
    SpkrFifBqCoefs[9], int16, default= 3616				   ,indent = 3
    SpkrFifBqCoefs[10], int16, default= 9491				   ,indent = 3
    SpkrFifBqCoefs[11], int16, default= 8192				   ,indent = 3
    SpkrFifBqCoefs[12], int16, default= 9049				   ,indent = 3
    SpkrFifBqCoefs[13], int16, default= -9028				   ,indent = 3
    SpkrFifBqCoefs[14], int16, default= 5006				   ,indent = 3
    SpkrFifBqCoefs[15], int16, default= 4703				   ,indent = 3
    SpkrFifBqCoefs[16], int16, default= -8438				   ,indent = 3
    SpkrFifBqCoefs[17], int16, default= 8192				   ,indent = 3
End

Begin Message, ETS DSPV Send Spkr Vol Scal Fctr Cmd
    Scale Factor, uint16, default=0x0100
End

Begin Message, ETS DSPV Set Fwd Ch SSO Config Msg Cmd
    SpkrVoiceDecPitchPreFltrMode, uint16,   default=1
    SpkrVoiceDecSynPostFltrMode, uint16,   default=1
    FrameErasureFcbExicitionMode, uint16,   default=0
End

Begin Message, ETS DSPV Set Audio Air Interface Mode Cmd
    Air Interface Mode, uint16, base=enum:Air Interface Modes, default=CDMA Mode
End

Begin Message, ETS DSPV Send Audio SSO Connect Cmd
    Speech Service Option, uint16, base=enum:Service Options, default=Srv Opt 3  Enhanced 8K Vocoder
    Max Encode Rate, uint16, base=enum:Speech Rates, default=Full
End

Begin Message, ETS DSPV Send Audio SSO Disconnect Cmd
End

Begin Message, ETS DSPV Send Audio SSO Ctrl Params Cmd
    Rate Reduced Mode Level, uint16, base=enum:Rate Reduced Mode Levels, default=Only Full Rate Packets
    Mobile-to-Mobile Mode, uint16, base=enum:Mobile-to-Mobile Modes, default=Mode Disabled
    Initialize Code Mode, uint16, base=enum:Initialize Code Modes, default=Mode Disabled
End

Begin Message, ETS DSPV Send Audio ISR Scal Fctr Cmd
    Side Tone Scale Factor, int16, default=36
End

Begin Message, ETS DSPV Set Audio Loopback Mode Cmd
    Audio Loopback Mode, uint16, base=enum:Audio Loopback Modes, default=Speech Service Option Loopback
    Delay (secs), uint16, base=10, default=5, max=5
End

Begin Message, ETS DSPV Set Audio Aec Mode Cmd
    Echo Cancel Mode, uint16, base=enum:Echo Cancel Modes, default=Echo Cancel Off
End

Begin Message, ETS DSPV Send Audio Aec Cfg Params Cmd
    phone_mode, uint16, default=0x0000	    ,indent = 3
    NumMic, uint16, default=0x0002	    ,indent = 3
    DacPgaVal, uint16, default=0x0000	    ,indent = 3
    AecClipSatThres, uint16, default=0x7fff	    ,indent = 3
    BNE_base, uint16, default=0xf39a	    ,indent = 3
    Mu_max, uint16, default=0x1999	    ,indent = 3
    Mu_min, uint16, default=0x0000	    ,indent = 3
    Converge_prd, uint16, default=0x0005	    ,indent = 3
    Rin2SinDelay, uint16, default=0x015e	    ,indent = 3
    Res_spkr_vm_Thres, uint16, default=0x0096	    ,indent = 3
    Res_spkr_ch_engy_Thres, uint16, default=0x05a0	    ,indent = 3
    Res_mic_vm_Thres, uint16, default=0x002d	    ,indent = 3
    Res_mic_ch_engy_Thres, uint16, default=0x05a0	    ,indent = 3
    dt_ratio, uint16, default=0x1400	    ,indent = 3
    converge_thre, uint16, default=0x3fff	    ,indent = 3
    fre_bin_start, uint16, default=0x0003	    ,indent = 3
    fre_bin_end, uint16, default=0x0007	    ,indent = 3
    MaxCoupling, uint16, default=0x0c04	    ,indent = 3
    StepShift, uint16, default=0x0003	    ,indent = 3
    BinEnergyAlpha, uint16, default=0x4000	    ,indent = 3
    beta, uint16, default=0x3fff	    ,indent = 3
    eta, uint16, default=0xd998	    ,indent = 3
    eta2, uint16, default=0xd998	    ,indent = 3
    Delay, uint16, default=0x0000	    ,indent = 3
    MaxHGain, uint16, default=0x0033	    ,indent = 3
    MaxHGain_dt, uint16, default=0x0002	    ,indent = 3
    BSSDtRatio, uint16, default=0x656f	    ,indent = 3
    StepFacMax, uint16, default=0x1999	    ,indent = 3
    StepFacMin, uint16, default=0x0041	    ,indent = 3
    FilterQ, uint16, default=0x0012	    ,indent = 3
    WeightedSIRmax, uint16, default=0x1964	    ,indent = 3
    WeightedSIRmin, uint16, default=0x1770	    ,indent = 3
    BandGainWeightMax, uint16, default=0x6665	    ,indent = 3
    BandGainWeightMin, uint16, default=0x1999	    ,indent = 3
    SIR_Thres, uint16, default=0x1770	    ,indent = 3
    LPF_cutoff_band, uint16, default=0x0020	    ,indent = 3
    P_fe, uint16, default=0x0147	    ,indent = 3
    P_dt, uint16, default=0x7eb7	    ,indent = 3
    P_dt_high, uint16, default=0x0ccc	    ,indent = 3
    dt_th, uint16, default=0x7eb7	    ,indent = 3
    Aggressive_Echo_Supr, uint16, default=0x0000	    ,indent = 3
End

Begin Message, ETS DSPV Set Audio Voice Record Playback Mode Cmd
    Record Playback Mode, uint16, base=enum:Voice Record Playback Modes, default=Disabled
    Vocoder Type, uint16, base=enum:Speech Service Options,default=SSO 3 Enhanced 8K
    Data Type, uint16, base=enum:Voice Record Playback Data Type, default=Packets Only
    Max Encode Rate, uint16, base=enum:Speech Rates, default=Full
    Min Encode Rate, uint16, base=enum:Speech Rates, default=Blank
End

Begin Message, ETS DSPV Send Spkr Sim Msg Cmd
    Id, uint16, base=enum:Spkr Sim Msg Ids,  default=Send Spkr Sim Msg
    Msg, array, type=uint16, maxsize=40, size=end , columns=30
End

Begin Message, ETS DSPV Send Audio Tty Mode Msg Cmd
    Audio Tty Mode, uint16, base=enum:Tty Modes, default=Off
End

Begin Message, ETS DSPV Send Audio Tty Cfg Parms Msg Cmd
    TtyLogicEngyTh, int16, default=8191			,indent = 3
    TtySilnceEngyTh, int16, default=2			,indent = 3
    TtyOnsetWin, int16, default=16			,indent = 3
    TtyEarlyOnsetThres, int16, default=7			,indent = 3
    TtyDetctThres, int16, default=74			,indent = 3
    TtyFrmSyncMemTh, int16, default=9			,indent = 3
    TtyFrmSyncStartTh, int16, default=7			,indent = 3
    TtyFrmSyncDataTh, int16, default=7			,indent = 3
    TtyFrmSyncStopTh, int16, default=8			,indent = 3
    TtyFrmSyncSilnceTh, int16, default=7			,indent = 3
    TtyXmtTime, int16, default=66			,indent = 3
    TtyMaxHngOvrTime, int16, default=120			,indent = 3
    TtySilnceTh, int16, default=2			,indent = 3
    TtyToneGenGain, int16, default=4096			,indent = 3
End

Begin Message, ETS DSPV Send Audio Vap Cfg Parms Msg Cmd
    Ve8MppSampOffset, uint16, default=0x40
    Ve8SppSampOffset, uint16, default=0x40
    Ve8SppTaskTime, uint16, default=0x80
    V13MppSampOffset, uint16, default=0x40
    V13SppSampOffset, uint16, default=0x40
    V13SppTaskTime, uint16, default=0x80
    CodecIntCtrl, uint16, default=0x00
End

Begin Message, ETS DSPV Send Audio Compression Cfg Parms Msg Cmd
    Acp_BlockSize, uint16, default=0x0001   ,indent = 3
    Acp_BlockNum, uint16, default=0x00A0   ,indent = 3
    RmsQ, uint16, default=0x3999   ,indent = 3
    RmsScalFctr, uint16, default=0x0000   ,indent = 3
    GammaHi, uint16, default=0xFD60   ,indent = 3
    GammaLo, uint16, default=0xF880   ,indent = 3
    BetaHi, uint16, default=0x0666   ,indent = 3
    BetaLo, uint16, default=0x7FFF   ,indent = 3
    BetaLoQ, uint16, default=0xFFFF   ,indent = 3
    AttackTime, uint16, default=0x0377   ,indent = 3
    ReleaseTime, uint16, default=0x0059   ,indent = 3
    AsvcMinGain, uint16, default=0x0000   ,indent = 3
    AsvcMaxState, uint16, default=0x0010   ,indent = 3
    AsvcNoiseStep, uint16, default=0x0155   ,indent = 3
    AsvcGainStep, uint16, default=0x0018   ,indent = 3
    AsvcNoiseThres, uint16, default=0x0800   ,indent = 3
    AsvcHysterisis, uint16, default=0x0100   ,indent = 3
    AsvcNoiseScalFctr, uint16, default=0x0CCC   ,indent = 3
    AsvcVmThres, int16, default=35       ,indent = 3
    AsvcTceThres, int16, default=256      ,indent = 3
    AsvcSpecDevThres, int16, default=1792     ,indent = 3
    AsvcCntThres, int16, default=10       ,indent = 3
    AsvcHysCntThres, int16, default=6        ,indent = 3
    AsvcSpkrWeight, uint16, default=0x7FFF   ,indent = 3
    AsvcScalFctrQ, int16, default=-8       ,indent = 3
    AsvcSmoothFctr, int16, default=29491    ,indent = 3
    AsvcMaxSpkrGain, uint16, default=0x400    ,indent = 3
    FramePwrStep, uint16, default=0x0040   ,indent = 3
    FramePwrThres, uint16, default=0x0600   ,indent = 3
    FramePwrHyst, uint16, default=0x0030   ,indent = 3
    SppGainStep, uint16, default=0x0018   ,indent = 3
    SppGainMaxState, uint16, default=0x0010   ,indent = 3
    SppFrmPwrBufLen, int16, default=10       ,indent = 3
    SppFrameCntThres, int16, default=150      ,indent = 3
    GainUpdateThres, int16, default=5        ,indent = 3
    GainUpdateSwch, int16, default=1        ,indent = 3
    AcpToneThres, uint16, default=0x0248   ,indent = 3
    AcpToneSuppress, uint16, default=0x0240   ,indent = 3
End

Begin Message, ETS DSPV Send Audio Compression Mode Cmd
    Spp Path Compressor Mode, uint16, base=enum:Audio Compression Modes, default=Off
    Mpp Path AGC Mode, uint16, base=enum:Audio Compression Modes, default=Off
    Spp Path AGC Mode, uint16, base=enum:Audio Compression Modes, default=Off
End

Begin Message, ETS DSPV Send Audio Cfg Query Cmd
    Module Id, uint16, base=enum:Audio Modules, default=AUDIO_STATUS
End

Begin Message, ETS DSPV Send Audio Aec Aux Cfg Params Cmd
    EncDecDelay, uint16, default=0xfff6			 ,indent = 3
    FrmPwrScalFctrQ, uint16, default=0xfff8			 ,indent = 3
    LngAvgScalFctr, uint16, default=0x0000			 ,indent = 3
    DblTlkCorrLen, uint16, default=0x0040			 ,indent = 3
    DblTalkCorrIndx, uint16, default=0x0001			 ,indent = 3
    DblTlkScalFctr, uint16, default=0x6000			 ,indent = 3
    DblTlkWghtUpdThres, uint16, default=0x0000			 ,indent = 3
    SysDstnceScalFctr, uint16, default=0x6666			 ,indent = 3
    ACFScalFctr, uint16, default=0x7333			 ,indent = 3
    MaxModeCount, uint16, default=0x0001			 ,indent = 3
    FeMdeHngOvr, uint16, default=0x0005			 ,indent = 3
    NeMdeHngOvr, uint16, default=0x000A			 ,indent = 3
    ErleScalFctr, uint16, default=0x4000			 ,indent = 3
    StepSize, uint16, default=0x0A3D			 ,indent = 3
    ChnNgyScalFctr, uint16, default=0x3999			 ,indent = 3
    NzeScalFctr, uint16, default=0x7333			 ,indent = 3
    CeptScalFctr, uint16, default=0x3999			 ,indent = 3
    EstEchScalQ, uint16, default=0x0000			 ,indent = 3
    EngyScalFctr, uint16, default=0x7999			 ,indent = 3
End

Begin Message, ETS DSPV Send Audio Path Cfg Cmd
    SpkrPath, uint16, base=enum:SpkrPath, default=AUDIO_CFG_DAC_DIFF
End

Begin Message, ETS DSPV Combo Volume Scal Fctr Cmd
    SpkrVolScalFctr, uint16,  default=0x0100                   ,indent = 3
    SidetoneScalFctr, uint16,  default=0x0100                   ,indent = 3
    RngrVolScalFctr, uint16,  default=0x0100                   ,indent = 3
    AppVolScalFctr, uint16,  default=0x0100                   ,indent = 3
    MicVolScalFctr, uint16,  default=0x0100                   ,indent = 3
    DacPgaVal, uint16,  default=0x0100                   ,indent = 3
    ToneVolScalFctr, uint16,  default=0x0100                   ,indent = 3
End

Begin Message, ETS DSPV Voice Frame Resync Cmd
End

Begin Message, ETS DSPV Rngr Init Cmd
    MaxNumVoices, uint16, default=32
    SampleRate, uint16, default=32
    RngrCtrlReg, uint16, default=0x40C8
    DtmfPath, uint16, base=enum:DtmfPath, default=NO_DTMF
End

Begin Message, ETS DSPV Rngr Mode Cmd
    RngrCtrlMode, uint16, base=enum:RngrCtrlMode, default=RNGR_OFF
End

Begin Message, ETS DSPV Rngr Config Cmd
    BlockSzMs, uint16, default=2
    RampTime, uint16, default=20
    CntrlField, uint16, default=1
End

Begin Message, ETS DSPV Rngr Vol Scal Fctr Cmd
    Scale Factor, uint16, default=0x0100
End

Begin Message, ETS DSPV Rngr Ldspkr Vol Scal Fctr Cmd
    Scale Factor, uint16, default=0x0100
End

Begin Message, ETS DSPV App Vol Scal Fctr Cmd
    Scale Factor, uint16,    default=0x0100
End

Begin Message, ETS DSPV App Info Query Cmd
End

Begin Message, ETS CP PAC Test Debug1 Cmd
End

Begin Message, ETS CP PAC Test Debug2 Cmd
End

Begin Message, ETS CP PAC Test Debug3 Cmd
End

Begin Message, ETS CP PAC Test Debug4 Cmd
End

Begin Message, ETS CP PAC Test Debug5 Cmd
End

Begin Message, ETS CP LEC Tst Gps Hw Power On Cmd
End

Begin Message, ETS CP LEC Tst Gps Hw Power Off Cmd
End

Begin Message, ETS CP LEC Tst Gps Hw Reset Cmd
End

Begin Message, ETS CP LEC Tst Gps Engine Start Cmd
    FixMode, uint32,  base=enum:Fix Modes, default=3
    FixRate_NumFixes, uint32,  base=10, default=1
    FixRate_TimeBeFixes, uint32,  base=10, default=30
    QoS_Accuracy(sec), uint32,  base=10, default=16
    QoS_Performance(m), uint32,  base=10, default=50
End

Begin Message, ETS CP LEC MSBasedStart Cmd
    InjectMode, uint32,  base=enum:Inject Modes, default=5
    QoS_Accuracy(sec), uint32,  base=10, default=16
    QoS_Performance(m), uint32,  base=10, default=50
End

Begin Message, ETS CP LEC MSBasedGetAssist Cmd
    InjectMode, uint32,  base=enum:Inject Modes, default=5
    QoS_Accuracy(sec), uint32,  base=10, default=16
    QoS_Performance(m), uint32,  base=10, default=50
End

Begin Message, ETS CP LEC Tst Gps Ref Freq Adj Msg Cmd
    Action, uint16, base=enum:ClockAction
    Ref_Hz, int16, base=10, default=0
    Max_RMS_pps, int32, base=10, default=1000
    RMS_pps_Const, int32, base=10, default=400
End

Begin Message, ETS CP LEC Tst Gps Factory Get Rf CNo Cmd
    Mode[TimerBased:0 & CounterBased:1], uint8, base=10, default=0
    Para1[TB:10..60 & CB:01..30], uint8, base=10, default=10
End

Begin Message, ETS CP LEC Tst Gps Factory Stop Rf CNo Cmd
End

Begin Message, ETS CP LEC Tst Gps Set Calibration Mode Cmd
End

Begin Message, ETS CP LEC Tst Gps Read Write Cal Parms Cmd
    Action, uint8, base=enum:CalAction
    GroupDelay[-9770], int32, base=10, default=0
    CodePhase [0..10], uint8, base=10, default=0
    WholeChips[0..10], uint8, base=10, default=0
    FractChips[0..99], uint8, base=10, default=0
End

Begin Message, ETS CP LEC Tst Gps Read Write NV Cal Parms Cmd
    Action, uint8, base=enum:CalAction
    GpsCellGrpDelay  [-9770], int32,  base=10, default=0
    GpsCellAACoPhAdj [0..10], uint16, base=10, default=0
    GpsCellWChipAdj  [0..10], uint16, base=10, default=0
    GpsCellFChipAdj  [0..99], uint16, base=10, default=0
    GpsPcsGrpDelay   [-9770], int32,  base=10, default=0
    GpsPcsAACoPhAdj  [0..10], uint16, base=10, default=0
    GpsPcsWChipAdj   [0..10], uint16, base=10, default=0
    GpsPcsFChipAdj   [0..99], uint16, base=10, default=0
    Gps1xDoSysTOffset[34195], int32,  base=10, default=0
    GpsCalStatus     [1..04], uint16, base=10, default=0
End

Begin Message, ETS CP LEC Tst Gps Set 1x DO Delay Cmd
    Action, uint8, base=enum:CalAction
    GpsGroupDelay, int32, base=10, default=0
End

Begin Message, ETS CP LEC Tst Gps Pgps On Off Cmd
    PGPSmode, uint8, base=enum:PGPS Modes
    IntervalReqEE(sec), uint8, base=10
End

Begin Message, ETS CP LEC Tst Gps Pgps Debug1 Cmd
End

Begin Message, ETS CP LEC Tst Gps Pgps Debug2 Cmd
End

Begin Message, ETS CP LEC Tst UserMode Time Cmd
    UserModerGuideTime(sec), uint32,  base=10, default=5
End

Begin Message, ETS CP LEC Tst Lab Test Mode Cmd
    Lab Test Mode, uint32, base=enum:AntTstOff/AntTstOn/PwrSave, default=AntTstOff
    Lab Test Param, uint32
End

Begin Message, ETS CP LEC Power Save Time Cmd
    UserModerGuideTime(s), uint32,  base=10, default=1
End

Begin Message, ETS CP LEC Tst GNS7560 PGNV Cmds Cmd
    Command, uint16,  base=enum:$PGNV Commands
    Param1, uint16,  base=10, default=0
    Param2, uint16,  base=10, default=0
    Param3, uint16,  base=10, default=0
    Param4, uint16,  base=10, default=0
End

Begin Message, ETS CP LEC Tst GNS7560 API Tst Cmds Cmd
    API Name, uint8,  base=enum:GN APIs, default=6
    Command, uint8,  base=enum:$PGNV Commands
    Num_Bytes, uint16, base=10, max=2047
End

Begin Message, ETS CP LEC Tst GNS7560 Version Cmd
End

Begin Message, ETS CP LEC Tst GNS7560 Get Config Cmd
End

Begin Message, ETS CP LEC Tst GNS7560 Set Config Cmd
    SensMode, uint8,    base=enum:Sensitivity Mode,    default=0,indent=1
    ColdTTFF, uint8,    base=enum:TTFF Mode states,    default=0,indent=1
    PowerPerf, uint8,    base=enum:Power vs Perf Mode, default=0,indent=1
    BGA_Chip, uint8,    base=bool, default=TRUE,indent=1
    c32KHz_NotFitted, uint8,    base=bool, default=TRUE,indent=1
    SBAS_Enabled, uint8,    base=bool, default=FALSE,indent=1
    PosFiltMode, uint8,    base=10,   default=3,indent=1
    FixInterval, uint16,   base=10,   default=1000,indent=1
    H_AccEst_Mask[0], uint16,   base=10,   default=100,indent=1
    H_AccEst_Mask[1], uint16,   base=10,   default=50,indent=1
    V_AccEst_Mask[0], uint16,   base=10,   default=150,indent=1
    V_AccEst_Mask[1], uint16,   base=10,   default=75,indent=1
    SleepModeTimeOut, uint16,   base=10,   default=60,indent=1
    ComaModeTimeOut, uint32,   base=10,   default=256,indent=1
    GPGLL_Rate, uint8,    base=10,   default=1,indent=1
    GPGGA_Rate, uint8,    base=10,   default=1,indent=1
    GPGSA_Rate, uint8,    base=10,   default=1,indent=1
    GPGST_Rate, uint8,    base=10,   default=1,indent=1
    GPGSV_Rate, uint8,    base=10,   default=1,indent=1
    GPRMC_Rate, uint8,    base=10,   default=1,indent=1
    GPVTG_Rate, uint8,    base=10,   default=1,indent=1
    GPZCD_Rate, uint8,    base=10,   default=1,indent=1
    GPZDA_Rate, uint8,    base=10,   default=1,indent=1
    PGNVD_Rate, uint8,    base=10,   default=0,indent=1
    ForceCold_Timeout, uint8,    base=10,   default=1,indent=1
    NV_Write_Interval, uint16,   base=10,   default=10,indent=1
    Enable_Nav_Debug, uint16,   base=10,   default=1,indent=1
    Enable_GNB_Debug, uint16,   base=10,   default=1,indent=1
    Enable_Event_Log, uint16,   base=10,   default=1,indent=1
End

Begin Message, ETS CP EEP Tst FSM_Read Cmd
End

Begin Message, ETS CP EEP Tst FSM_Write Cmd
End

Begin Message, ETS CP EEP Tst Get RxN Version Cmd
End

Begin Message, ETS CP EEP Tst Seed Create from TSeed Cmd
End

Begin Message, ETS CP EEP Tst Seed Check Seed File Cmd
End

Begin Message, ETS CP EEP Tst Seed Delete Seed File Cmd
End

Begin Message, ETS CP EEP Tst EEph Start Propagator Cmd
End

Begin Message, ETS CP EEP Tst EEph Stop Propagator Cmd
End

Begin Message, ETS CP EEP Tst EEph Check Eeph Files Cmd
End

Begin Message, ETS CP EEP Tst EEph Delete Eeph Files Cmd
End

Begin Message, ETS CP RLP Forward Data Indication Cmd
    NumFrames, uint16
    Frames, record, type=IopRlpFwdDataIndMsgT, maxsize=9, indent=1
End

Begin Record, IopRlpFwdDataIndMsgT
    dataPtr, uint32
    offset, uint16
    dataLen, uint16
End

Begin Message, ETS CP Set Data Thr Cmd
    Thr, uint16
End

Begin Message, ETS CP Chan OnOff Cmd
    Channel, uint8, base=enum:IopHalChannelId, default=IPC_Control
    State, uint8, base=enum:Disable/Enable, default=Enable
End

Begin Message, ETS CP Chan Query Cmd
    Channel, uint8, base=enum:IopHalChannelId, default=IPC_Control
End

Begin Message, ETS CP Chan Switch Cmd
    Channel, uint8, base=enum:IopHalChannelId, default=IPC_ETS
    Device, uint8, base=enum:IopHalDeviceId, default=IPC_SHMEM
End

Begin Message, ETS CP Dpram DbgInfo Cmd
End

Begin Message, ETS CP Dpram DmaCtrl Cmd
    DpramQtype, uint8, base=enum:DpramQ
    Direction, uint8, base=enum:DpramDir
    DmaState, uint8, base=enum:0/1
End

Begin Message, ETS CP SDIO Slave DbgInfo Cmd
    TraceTk, uint32, base=16, default=0xFFFFFFFF
    RstIdx, uint8,  base=enum:False/True, default=False
    RstS2MFlag, uint8,  base=enum:False/True, default=False
End

Begin Message, ETS CP LTEDO Uart DbgInfo Cmd
End

Begin Message, ETS CP Tx StatusMch Ctrl Cmd
    enable, uint8,  base=enum:False/True, default=False
End

Begin Message, ETS CP ESPI DbgInfo Cmd
End

Begin Message, ETS CP Shmem DbgInfo Cmd
End

Begin Message, ETS CP Tst CSFB Set Buffer Cmd
    buffId, uint8,  base=enum:CSFB Buffer ID Enum
    length, uint8,  base=10
    data, array,  type=uint8, maxsize=255, size=length, base=16
End

Begin Message, ETS CP Tst CSFB Parm Rsp Cmd
    inclRand, uint8,  base=enum:FALSE/TRUE
    Rand, uint32, base=10
    inclMobParms, uint8,  base=enum:FALSE/TRUE
End

Begin Message, ETS CP Tst CSFB Sib8 Cmd
End

Begin Message, ETS CP Tst CSFB Gcsna DL Cmd
End

Begin Message, ETS CP Tst CSFB Meas Req Cmd
End

Begin Message, ETS CP Tst CSFB HO Eutra Prep Cmd
    InclRand, uint8,  base=enum:FALSE/TRUE
    Rand, uint32, base=10
    InclMobParms, uint8,  base=enum:FALSE/TRUE
End

Begin Message, ETS CP Tst CSFB Mob From Eutra Cmd
    SysTimeIncl, uint8,  base=enum:FALSE/TRUE
    SysTime, array,  type=uint8, maxsize=5
End

Begin Message, ETS CP Tst Hwd Searcher Cmd
    Items, uint16,  base=enum:TstSearcherItems, default=Init_Acq_Sch_With_Window
    Sub_Item1, uint16,  default=8382
    Sub_Item2, uint16,  default=0xff00
    Sub_Item3, uint16,  default=0xffff
    Sub_Item4, uint16,  default=1
End

Begin Message, ETS CP Tst Hwd System Time Cmd
    Items, uint16, default=0
End

Begin Message, ETS CP Tst Hwd Rx Filter and Rx AGC Cmd
    Items, uint16, default=0
End

Begin Message, ETS CP Tst Hwd Tx Data Path Cmd
    Items, uint16, default=0
End

Begin Message, ETS CP Tst Hwd Rx Data Path Static Cmd
    Items, uint8,  base=enum:RxStaticItems, default=RxPathWholePath
    FngrStopSlot, uint8,  default=0x14
    FngrEnableBitMap, uint8,  default=0x01
    FngrDllAfcSnr, uint8,  default=0x01
    FngrDscrDintBuff, uint8,  default=0x01
    PreambleOutput, uint8,  default=0x01
    PacketRecord, uint8,  default=0x01
    DmaOutput, uint8,  default=0x01
    DeintMemory, uint8,  default=0x01
End

Begin Message, ETS CP Tst Hwd Rx Data Path Dynamic Cmd
    Items, uint16, default=0
End

Begin Message, ETS CP Tst Hwd MAC path Cmd
    Items, uint16, default=0
End

Begin Message, ETS CP Tst Hwd DRC Generator Cmd
    Items, uint16, default=0
End

Begin Message, ETS CP Tst Hwd AFC Cmd
    Items, uint16, default=0
End

Begin Message, ETS CP Tst Hwd SysTime Ev CpInt Src Cmd
    Frame Type, uint8, base=enum:IntFrameType
    Interrupt Source, uint8, base=enum:CpIntSrc
    Ctrl Mode, uint8, base=enum:SysTime Ctrl Mode
    AutoMode FileHandle, uint32, default=0
End

Begin Message, ETS CP Tst Hwd SysTime Ev Mdm Status Cmd
End

Begin Message, ETS CP Tst Hwd SysTime Ev Init Load Cmd
    Items, uint16, default=0
End

Begin Message, ETS CP Tst Hwd SysTime Ev Adj Sync Time Cmd
    Items, uint16, default=0
End

Begin Message, ETS CP Tst Hwd SysTime Ev Adj TMTRK Cmd
    Items, uint16, default=0
End

Begin Message, ETS CP Tst Hwd SysTime Ev ShortCode Seq Gen Cmd
    Items, uint16, default=0
End

Begin Message, ETS CP Tst Hwd SysTime Ev LongCode Seq Gen Cmd
    Items, uint16, default=0
End

Begin Message, ETS CP Tst Hwd DMA Module Cmd
    Items, uint16,  base=enum:GenericDmaTestItems, default=Dma_Automatic_Test
    SingleTest_Dma_Channel, uint8,   default=0x01
    Test_Pattern, uint8,   default=0xFF
    Byte_Transfer_Count, uint16,  default=0x80
    Source_Addr, uint32,  default=0xC0008004
    Dest_Addr, uint32,  default=0xC0008804
    Dma_CCR_Ch0, uint32,  default=0x00703111
    Dma_CCR_Ch1, uint32,  default=0x00703111
    Dma_CCR_Ch2, uint32,  default=0x00703111
    Dma_CCR_Ch3, uint32,  default=0x00703111
    Dma_CCR_Ch4, uint32,  default=0x00703111
    Dma_CCR_Ch5, uint32,  default=0x00703111
    Dma_CCR_Ch6, uint32,  default=0x00703111
    Dma_CCR_Ch7, uint32,  default=0x00703111
End

Begin Message, ETS CP Tst Hwd DMA MDM TX Cmd
    Items, uint16,  default=0
    Byte_Transfer_Count, uint16,  default=0x40
    Test_Pattern, uint8,   default=0xFF
End

Begin Message, ETS CP Tst Hwd DMA MDM RX Cmd
    Items, uint16,  default=0
    Byte_Transfer_Count, uint16,  default=0x40
    Test_Pattern, uint8,   default=0xFF
End

Begin Message, ETS CP Tst Hwd PPP HA Decoder 0 Cmd
    Input Data Pointer, uint32,  base=16,   default=0xC0000000
    Input Data Length (Words), uint16,  base=16,   default=0
    Expd Result Data Pointer, uint32,  base=16,   default=0xA11EA000
    Expd Result Data Len, uint16,  base=10,   default=0
    Config Reg Val, uint16,  base=16,   default=0x350
    Trnscnt Reg Val, uint16,  base=10,   default=0
    Index To LLD, uint16,  base=10,   default=0
    Last in LLD, uint8,   base=bool, default=False
    Setup LLD, uint8,   base=bool, default=True
    Request decode, uint8,   base=bool, default=False
    Reset Flag, uint8,   base=bool, default=False
End

Begin Message, ETS CP Tst Hwd PPP HA Decoder 1 Cmd
    Input Data Pointer, uint32,  base=16,   default=0xC0000000
    Input Data Length (Bytes), uint16,  base=10,   default=0
    Expd Result Data Pointer, uint32,  base=16,   default=0xA11EA000
    Expd Result Data Len, uint16,  base=10,   default=0
    Config Reg Val, uint16,  base=16,   default=0x350
    Trnscnt Reg Val, uint16,  base=10,   default=0
    Reset Flag, uint8,   base=bool, default=True
End

Begin Message, ETS CP Tst Hwd PPP HA Encoder 0 Cmd
    Input Data Pointer, uint32,  base=16,   default=0xC0000000
    Input Data Length (Bytes), uint16,  base=10,   default=0
    Expd Result Data Pointer, uint32,  base=16,   default=0xA11EA000
    Expd Result Data Len, uint16,  base=10,   default=0
    Accm Reg Val, uint32,  base=16,   default=0
    Config Reg Val, uint16,  base=16,   default=0x350
    Trnscnt Reg Val, uint16,  base=10,   default=0
    Reset Flag, uint8,   base=bool, default=True
End

Begin Message, ETS CP Tst Hwd PPP HA Encoder 1 Cmd
    Input Data Pointer, uint32,  base=16,   default=0xC0000000
    Input Data Length (Bytes), uint16,  base=10,   default=0
    Expd Result Data Pointer, uint32,  base=16,   default=0xA11EA000
    Expd Result Data Len, uint16,  base=10,   default=0
    Accm Reg Val, uint32,  base=16,   default=0
    Config Reg Val, uint16,  base=16,   default=0x350
    Trnscnt Reg Val, uint16,  base=10,   default=0
    Reset Flag, uint8,   base=bool, default=True
End

Begin Message, ETS CP Tst Hwd Mac Bit Detect Test Cmd
    Mac Test Case, uint16,  base=enum:TstMacTestCaseEnum, default=TC_15DB_128SLOT_REVA
End

Begin Message, ETS CP Tst Hwd RF SPI Tx Data Rate Test Cmd
    ExternalDevice, uint8, base=enum:TstRfSpiExternalDevices, default=ExternalDevice0
    DATA_TH, uint8, default=0x00, base=16
    DATA_TSU, uint8, default=0x00, base=16
End

Begin Message, ETS CP Tst Hwd RF SPI Delay Mode Send Test Cmd
    DATA0_TH, uint8, default=0x08, base=16
    DATA0_TSU, uint8, default=0x08, base=16
    DATA1_TH, uint8, default=0x08, base=16
    DATA1_TSU, uint8, default=0x08, base=16
    RFSP0Device, uint8, base=enum:TstRfSpiExternalDevices, default=ExternalDevice0
    RFSP1Device, uint8, base=enum:TstRfSpiExternalDevices, default=ExternalDevice0
    RFSP0Data_MSB, uint16, default=0x01, base=16
    RFSP0Data_LSB, uint16, default=0x02, base=16
    RFSP1Data_MSB, uint16, default=0x03, base=16
    RFSP1Data_LSB, uint16, default=0x04, base=16
End

Begin Message, ETS CP Tst Hwd RF SPI Imme Mode Send Test Cmd
    DATA_TH, uint8, default=0x08, base=16
    DATA_TSU, uint8, default=0x08, base=16
    WordToSend, uint8, min=1, max=32, base=10,     default=1
    Data(16bitHex), array, type=uint16, maxsize=96, size=3*WordToSend, base=16
End

Begin Message, ETS CP Tst Hwd RF SPI Imme Mode Receive Test Cmd
    DATA_TH, uint8, default=0x08, base=16
    DATA_TSU, uint8, default=0x08, base=16
    DeviceID, uint8, default=0x43, base=16
    RegID, uint8, default=0x05, base=16
    WordToSend, uint8, min=1, max=32, base=10, default=1
    Data(8bitHex), array, type=uint8, maxsize=32, size=WordToSend, base=16
End

Begin Message, ETS CP Tst Hwd RF SPI Timing Diagrams Test Cmd
    ExternalDevice, uint8, base=enum:TstRfSpiExternalDevices, default=ExternalDevice0
    CLK_POL, uint8, base=10, default=0
    XFER_FMT, uint8, base=10, default=0
    LD_PULSE, uint8, base=10, default=0
    LD_LEV, uint8, base=10, default=0
    LD_LEAD, uint8, base=16, default=0x00
    LD_TRAIL, uint8, base=16, default=0x00
    EXTRA_CLK_LEAD, uint8, base=16, default=0x0
    EXTRA_CLK_TRAIL, uint8, base=16, default=0x0
End

Begin Message, ETS CP Tst Hwd RF SPI Load Enable Test Cmd
    ExternalDevice, uint8, base=enum:TstRfSpiExternalDevices, default=ExternalDevice0
End

Begin Message, ETS CP Tst Hwd RF SPI Virtual Mode Send Test Cmd
    ExternalDevice, uint8, base=enum:TstRfSpiExternalDevices, default=VirtualDevice
    Data_MSB, uint16,  default=0x00, base=16
    Data_LSB, uint16,  default=0x00, base=16
End

Begin Message, ETS CP Tst Hwd RfTxOn CP DSPM Select Cmd
    TX_ON_INT, uint8, base=enum:TstCpDspmSelect, default=CP
    TX_ON0, uint8, base=enum:TstCpDspmSelect, default=CP
    TX_ON1, uint8, base=enum:TstCpDspmSelect, default=CP
    TX_ON2, uint8, base=enum:TstCpDspmSelect, default=CP
    TX_ON3, uint8, base=enum:TstCpDspmSelect, default=CP
    TX_ON4, uint8, base=enum:TstCpDspmSelect, default=CP
    TX_ON5, uint8, base=enum:TstCpDspmSelect, default=CP
    TX_ON6, uint8, base=enum:TstCpDspmSelect, default=CP
    TX_ON7, uint8, base=enum:TstCpDspmSelect, default=CP
    TX_ON_INT2, uint8, base=enum:TstCpDspmSelect, default=CP
    RF_ON0, uint8, base=enum:TstCpDspmSelect, default=CP
    RF_ON1, uint8, base=enum:TstCpDspmSelect, default=CP
    RF_ON2, uint8, base=enum:TstCpDspmSelect, default=CP
    RF_ON3, uint8, base=enum:TstCpDspmSelect, default=CP
    RF_ON4, uint8, base=enum:TstCpDspmSelect, default=CP
    RF_ON5, uint8, base=enum:TstCpDspmSelect, default=CP
    RF_ON6, uint8, base=enum:TstCpDspmSelect, default=CP
    RF_ON7, uint8, base=enum:TstCpDspmSelect, default=CP
End

Begin Message, ETS CP Tst Hwd RfTxOn CP TXON Internal Cmd
    TXON_INT_SETUP, uint8,  default=0x00, base=16
    TXON_INT_HOLD, uint8,  default=0x00, base=16
    TXON_INT_ENBLE, uint8,  default=0x00, base=16
    TXON_INT_ORSEL, uint8,  default=0x00, base=16
    TXON_INT_DIN, uint8,  default=0x00, base=16
End

Begin Message, ETS CP Tst Hwd RfTxOn CP TXON General Cmd
    TXON_SELECT, uint8,  base=enum:TstTxOn, default=TxOn0
    TXON_SETUP, uint8,  default=0x00, base=16
    TXON_HOLD, uint8,  default=0x00, base=16
    TXON_TYPE, uint8,  default=0x00, base=16
    TXON_POL, uint8,  default=0x00, base=16
    TXON_ENBLE, uint8,  default=0x00, base=16
    TXON_OVSEL, uint8,  default=0x00, base=16
    TXON_DIN, uint8,  default=0x00, base=16
End

Begin Message, ETS CP Tst Hwd RfTxOn CP TXON Delay Cmd
    TX_ON_DLY_DIN1_CFG(binary), uint8, default=00000001, base=2
    TX_ON_DLY_DIN2_CFG(binary), uint8, default=00000001, base=2
End

Begin Message, ETS CP Tst Hwd RfTxOn CP RFON General Cmd
    RFON_SELECT, uint8, base=enum:TstRfOn, default=RfOn0
    RFON_TYPE, uint8,  default=0x00, base=16
    RFON_POL, uint8,  default=0x00, base=16
    RFON_ENBL, uint8,  default=0x00, base=16
    RFON_DIN, uint8,  default=0x00, base=16
End

Begin Message, ETS CP Tst Hwd MMSPI MSP Genl Config Cmd
    MSpiDevice, uint8,   base=enum:MmSpiExtDevices,  default=MSpiDev0
    LEV, uint8,   default=0x00, base=16
    LEVTRI, uint8,   default=0x01, base=16
    LEVCMD, uint8,   default=0x00, base=16
    LEVCLK, uint8,   default=0x00, base=16
    DATTRI, uint8,   default=0x01, base=16
    CLKDRI, uint8,   default=0x01, base=16
    CMDTRI, uint8,   default=0x01, base=16
End

Begin Message, ETS CP Tst Hwd MMSPI MSP Ctrl Config Cmd
    MmSpiTx, uint8,   base=enum:MmSpiTxList,     default=MSPTX0
    MSpiDevice, uint8,   base=enum:MmSpiExtDevices, default=MSpiDev0
    MmSpiClkRate, uint8,   base=enum:MmSpiClkRateList,default=ClkRate1
    LSB_1ST, uint8,   default=0x00, base=16
    DATA_TH, uint8,   default=0x0F, base=16
    DATATSU, uint8,   default=0x0F, base=16
    RISE_CLK, uint8,   default=0x00, base=16
    LE_PULSE, uint8,   default=0x00, base=16
    CTRL_CMD, uint8,   default=0x00, base=16
    LE_TRAIL, uint8,   default=0x00, base=16
    LE_LEAD, uint8,   default=0x00, base=16
    CMD_OFF, uint8,   default=0x00, base=16
    CDATTRI, uint8,   default=0x01, base=16
    CDATVAL, uint8,   default=0x01, base=16
End

Begin Message, ETS CP Tst Hwd MMSPI MSP RxTx Test Cmd
    SpiTstCase, uint8,   base=enum:MmSpiTstCase, default=SendThenRecv
    MmSpiTx, uint8,   base=enum:MmSpiTxList,  default=MSPTX0
    MSpiDevice, uint8,   base=enum:MmSpiExtDevices, default=MSpiDev0
    GAP_COUNT, uint8,   default=0x1f, base=16
    WordToSend, uint8,   min=0, max=7, base=10, default=0
    BitToSend, uint8,   min=0, max=255, base=10, default=0
    WordToRecv, uint8,   min=0, max=7, base=10, default=0
    BitToRecv, uint8,   min=0, max=255, base=10, default=0
    WRT_DATA(Hex), array, type=uint32, maxsize=8, size=WordToSend, base=16
End

Begin Message, ETS CP Tst NST Power Up Cmd
    Band, uint32,  base=10, default=0
    Channel, uint16, base=10, default=387
    Walsh Code, uint8,  base=10, default=10
    RC, uint8,  base=10, default=1
    Num Frames, uint16, base=10, default=1
    AFC, uint8,  base=enum:DISABLED/ENABLED, default=ENABLED
    Tx Power (dBm), int16, base=10, default=100
    Meas Type, uint8,  base=10, default=4
End

Begin Message, ETS CP Tst NST Transmit Traffic Channel Cmd
    Radio Config, uint8,  base=10, default=1
    Power Ctrl Mode, uint8,  base=10, default=0
    Tx Power (dBm), int16, scale=Q6
End

Begin Message, ETS CP Tst NST Exit Test Mode Cmd
End

Begin Message, ETS CP Tst NST List Set Cmd
    Count, uint8,  base=10, default=0
    Index, array, type=uint8, base=10, maxsize=10, default=0
    Protocol, array, type=uint8, base=10, maxsize=10, default=0
    Offset, array, type=uint8, base=10, maxsize=10, default=0
    Band, array, type=uint32, base=10, maxsize=10, default=0
    Channel, array, type=uint16, base=10, maxsize=10, default=0
    Walsh Code, array, type=uint8,  base=10, maxsize=10, default=12
    RadioConfig, array, type=uint8,  base=10, maxsize=10, default=3
    Num Frames, array, type=uint16, base=10, maxsize=10, default=0
    Power Ctrl Mode, array, type=uint8, base=10, maxsize=10, default=0
    Tx Power (dBm), array, type=int16, base=10, maxsize=10, default=100
End

Begin Message, ETS CP UIM Raw Command Cmd
    Cmd, array, type=uint8, maxsize=5
    Len, uint8
    Data, array, type=uint8, maxsize=256, size=Len
End

Begin Message, ETS CP UIM Select Cmd
    EfId, uint16
    DfIndex, uint32, base=enum:MF/DF_CDMA/DF_TELECOM/DF_GSM/DF_PHS/CURRENT_DF/DFID/CSIM/USIM/ISIM
End

Begin Message, ETS CP UIM Read Binary Cmd
    EfId, uint16
    DfIndex, uint32, base=enum:MF/DF_CDMA/DF_TELECOM/DF_GSM/DF_PHS/CURRENT_DF
    Offset, uint16, base=10
    Len, uint8, base=10
End

Begin Message, ETS CP UIM Update Binary Cmd
    EfId, uint16
    DfIndex, uint32, base=enum:MF/DF_CDMA/DF_TELECOM/DF_GSM/DF_PHS/CURRENT_DF
    Offset, uint16, base=10
    Len, uint8, base=10
    Data, array, type=uint8, maxsize=256, size=Len
End

Begin Message, ETS CP UIM Read Record Cmd
    EfId, uint16
    DfIndex, uint32, base=enum:MF/DF_CDMA/DF_TELECOM/DF_GSM/DF_PHS/CURRENT_DF
    RecordIndex, uint8
End

Begin Message, ETS CP UIM Update Record Cmd
    EfId, uint16
    DfIndex, uint32, base=enum:MF/DF_CDMA/DF_TELECOM/DF_GSM/DF_PHS/CURRENT_DF
    RecordIndex, uint8
    Len, uint8, base=10
    Data, array, type=uint8, maxsize=256, size=Len
End

Begin Message, ETS CP UIM BS Challenge Cmd
    RandSeed, uint32, default=0
    RandSSD, array,  type=uint8, maxsize=7, size=7
    ProcessCtrl, uint8, default=0
    ESN, uint32
End

Begin Message, ETS CP UIM Confirm SSD Cmd
    AuthBS, array,  type=uint8, maxsize=3, size=3
End

Begin Message, ETS CP UIM Run Cave Cmd
    RandType, uint8, base=enum:RAND/RANDU
    Rand or Randu, array, type=uint8, maxsize=4, size=4
    DigitLength, uint8
    Digit, array, type=uint8, maxsize=3,size=3
    ProcessCtrl, uint8
    ESN, uint32
    CaveSeqId, uint8
    CaveMsgId, uint16
End

Begin Message, ETS CP UIM Generate Key VPM Cmd
    VPMFirst, uint16, base=10
    VPMLast, uint16, base=10
End

Begin Message, ETS CP UIM Get CST Cmd
End

Begin Message, ETS CP UIM 3G AKA AUTH Cmd
    RandLength, uint8
    AuthLength, uint8
    Rand, array, type=uint8, maxsize=16,size=RandLength
    Auth, array, type=uint8, maxsize=16,size=AuthLength
End

Begin Message, ETS CP UIM 3G AKA READ EFKeysPS Cmd
End

Begin Message, ETS CP UIM 3G AKA UPDATE EFKeysPS Cmd
    KSIPS, uint8
    CKPS, array,  type=uint8, maxsize=16, size=16
    IKPS, array,  type=uint8, maxsize=16, size=16
End

Begin Message, ETS CP UIM 3G SIP CHAP Cmd
    ChapId, uint8
    NAIEntryId, uint8
    ChallengeLen, uint8
    ChallengeData, array,  type=uint8, maxsize=256, size=ChallengeLen
End

Begin Message, ETS CP UIM 3G MIP MNHA AUTH Cmd
    NAIEntryId, uint8
    RRQLen, uint8
    pRRQData, array,  type=uint8, maxsize=256, size=RRQLen
End

Begin Message, ETS CP UIM 3G MIP RRQ HASH Cmd
    PreRRQLen, uint8
    pPreRRQData, array,  type=uint8, maxsize=256, size=PreRRQLen
End

Begin Message, ETS CP UIM 3G MIP MNAAA AUTH Cmd
    NAIEntryId, uint8
    ChallengeLen, uint8
    ChallengeData, array,  type=uint8, maxsize=256, size=ChallengeLen
End

Begin Message, ETS CP UIM Get Status Cmd
End

Begin Message, ETS CP GPSVT ConsoleInput Cmd
    Data, array, type=uint8, maxsize=100, size=end
End

Begin Message, ETS CP GPSVT AdcCapture Cmd
    Address, uint32, default=0x01100000
    DWord Size, uint32, default=0x100000
    Mode, uint32, base=enum:0 Unpack/1 Packed, default=0 Unpack
End

Begin Message, ETS CP HSC Test MPA RF Preempt Rsp Cmd
    Status, uint32, base=enum:StatusT,   default=TRUE
    Owner, uint32, base=enum:HscOwnerT, default=SYS_MODE_DO
    Req, uint8,  base=enum:MpaReqT,   default=MPA_PATH_MAIN
    RfId, uint32, base=16
    RfAntenna, uint8,  base=enum:MpaReqT,   default=MPA_PATH_MAIN
    AntTS, uint64, base=16
    Duration, uint32, base=16
End

Begin Message, ETS CP HSC Test MPA RF Release Ind Cmd
    Owner, uint32, base=enum:HscOwnerT, default=SYS_MODE_DO
    Req, uint8,  base=enum:MpaReqT,   default=MPA_PATH_MAIN
    RfId, uint32, base=16
    AntTS, uint64, base=16
End

Begin Message, ETS CP HSC Test MPA RF Norm Req Cmd
    Owner, uint32, base=enum:HscOwnerT, default=SYS_MODE_DO
    Req, uint8,  base=enum:MpaReqT,   default=MPA_PATH_MAIN
    ResUse, uint32, base=enum:Norm/Gap/IdleMeas
    AntTS, uint64, base=16
    Duration, uint32, base=16
    Band, uint8,  base=16
    Channel, uint32, base=16
End

Begin Message, ETS CP HSC Test MPA RF Shutoff Rsp Cmd
    Status, uint32, base=enum:StatusT,   default=TRUE
    Owner, uint32, base=enum:HscOwnerT, default=SYS_MODE_DO
    Req, uint8,  base=enum:MpaReqT,   default=MPA_PATH_MAIN
    RfId, uint32, base=16
    RfAntenna, uint8,  base=enum:MpaReqT,   default=MPA_PATH_MAIN
    AntTS, uint64, base=16
    Duration, uint32, base=16
End

Begin Message, ETS CP HSC Test SPDO Disable SPage Cmd
End

Begin Message, ETS CP HSC Test SPDO Enable SPage Cmd
    PageSlot, uint16, base=16, default=0
    SlotCycleIndex, uint16, base=10, default=2
End

Begin Message, ETS CP HSC Test SPDO Handoff Cmd Cmd
End

Begin Message, ETS CP HSC Test SPDO Wake Cmd Cmd
End

Begin Message, ETS CP HSC Test SPDO Sleep Cmd Cmd
    PchWakeFrame Lower32, uint32,  base=16, default=0xc0
    PchWakeFrame Upper6, uint8,   base=16, default=0
End

Begin Message, ETS CP HSC Test SPDO Srch Done Cmd
End

Begin Message, ETS CP HSC Test SPDO Stop Ack Cmd
End

Begin Message, ETS CP HSC Test SPDO Mini Acq Err Cmd
    PilotPN, int16,  base=16, default=0
    RxTxOffsetTc2, int16,  base=16, default=0
    MiniAcqErrTc2, int16,  base=16, default=0
    PwrEst, uint16, base=16, default=0
End

Begin Message, ETS CP HSC Test SP1X Disable SPage Cmd
End

Begin Message, ETS CP HSC Test SP1X Enable SPage Cmd
    PageSlot, uint16, base=16, default=0
    SlotCycleIndex, uint8,  base=10, default=2
    QpchEnabled, uint8,  base=enum:StatusT, default=FALSE
    Qpch Channel, uint8,  base=16, default=0
    Qpch Rate, uint8,  base=enum:QpchRateT, default=FULL
End

Begin Message, ETS CP HSC Test SP1X Wake Cmd Cmd
    WakeMode, uint32,  base=enum:SleepModeT, default=PCH
End

Begin Message, ETS CP HSC Test SP1X Sleep Cmd Cmd
    PchWakeSystemTimeFrame, uint32,  base=16, default=0
    PiPosition, int16,   base=16, default=0
    QpchRatioIdx, int16,   base=16, default=0
    SleepMode, uint32,  base=enum:SleepModeT, default=PCH
    TargetPn, int16,   base=16, default=0
End

Begin Message, ETS CP HSC Test SP1X Srch Done Cmd
End

Begin Message, ETS CP HSC Test SP1X Stop Ack Cmd
    MsgResponse, uint16, base=enum:CpDspmSpageRspnsMsgIdT, default=STOP_CMD_ACK
End

Begin Message, ETS CP HSC Test SP1X Mini Acq Err Cmd
End

Begin Message, ETS CP HSC Test CMD Resync DO Cmd
    ResyncFrame Lower32, uint32,  base=16, default=0xc0
    ResyncFrame Upper6, uint8,   base=16, default=0
End

Begin Message, ETS CP HSC Test CMD Resync 1X Cmd
    ResyncFramesin20ms, uint32,  base=16, default=0x100
End

Begin Message, ETS CP HSC Test CMD Ssm Status Cmd
End

Begin Message, ETS CP HSC Test CMD RxShutOff Cmd
    Owner, uint32,  base=enum:HscOwnerT, default=SYS_MODE_DO
End

Begin Message, ETS CP HSC Test CMD RxActivate Cmd
    Owner, uint32,  base=enum:HscOwnerT, default=SYS_MODE_DO
End

Begin Message, ETS CP HSC Test CMD Dbg Mode Cmd
    ByPassPS, uint8,  base=enum:StatusT, default=FALSE
    ByPassRF, uint8,  base=enum:StatusT, default=FALSE
    Priority, uint32, base=enum:HscOwnerT, default=SYS_MODE_1X
    Gen1xCall, uint8,  base=enum:StatusT, default=FALSE
    GenDoCall, uint8,  base=enum:StatusT, default=FALSE
    DoResyncDenyCnt, uint8, base=10, default=2
End

Begin Message, ETS CP HSC Test CMD Clk Cal Cmd
    Owner, uint32,   base=enum:HscOwnerT, default=SYS_MODE_DO
End

Begin Message, ETS CP HSC Test CMD Clk Cal Mode Cmd
    Test, uint8,  base=enum:StatusT, default=TRUE
    Owner, uint32, base=enum:HscOwnerT, default=SYS_MODE_DO
    Register, uint8,  base=enum:StatusT, default=TRUE
End

Begin Message, ETS CP HSC Test CMD OOSA Cmd
    Owner, uint32,  base=enum:HscOwnerT, default=SYS_MODE_DO
    SleepDuration, uint32,  base=10, default=300
End

Begin Message, ETS CP HSC Test Online Sleep Clock Calibration Cmd
    Settle Time Normal-High, uint8,  base=10, default=1
    Settle Time Normal-Med, uint8,  base=10, default=2
    Settle Time Normal-Min, uint8,  base=10, default=8
    Settle Time Fast-High, uint8,  base=10, default=1
    Settle Time Fast-Med, uint8,  base=10, default=2
    Settle Time Fast-Min, uint8,  base=10, default=8
    Fast Settle Period (in Seconds), uint16, base=10, default=120
End

Begin Message, ETS CP SLC STATE Get Cmd
End

Begin Message, ETS CP SLC ETS Activate Msg Cmd
End

Begin Message, ETS CP SLC ETS STORED FILE CLOSE MSG Cmd
End

Begin Message, ETS CP SLC ETS Scp Config Msg Cmd
    Protocol 1 Type, uint16, base=enum:DScpProtocolType Enum, default=0xffff
    Num Subtypes1, uint8, base=10, default = 0
    Protocol 1 Subtypes, array, type=uint16, maxsize=5, base=10
    Protocol 2 Type, uint16, base=enum:DScpProtocolType Enum, default=0xffff
    Num Subtypes2, uint8, base=10, default = 0
    Protocol 2 Subtypes, array, type=uint16, maxsize=5, base=10
    Protocol 3 Type, uint16, base=enum:DScpProtocolType Enum, default=0xffff
    Num Subtypes3, uint8, base=10, default = 0
    Protocol 3 Subtypes, array, type=uint16, maxsize=5, base=10
    Protocol 4 Type, uint16, base=enum:DScpProtocolType Enum, default=0xffff
    Num Subtypes4, uint8, base=10, default = 0
    Protocol 4 Subtypes, array, type=uint16, maxsize=5, base=10
    Protocol 5 Type, uint16, base=enum:DScpProtocolType Enum, default=0xffff
    Num Subtypes5, uint8, base=10, default = 0
    Protocol 5 Subtypes, array, type=uint16, maxsize=5, base=10
    Configure the Following Attributes, uint8, base=bool, default=0
    Support GAUP Session Config Token, uint16, base=enum:NO/YES
    Support Config Lock, uint16, base=enum:NO/YES
    PersonalityCount, uint16, base=10, default=4
    ATSupportedAppSubtypes: numAppSubtypes, uint8, base=10, default=1
    appSubtypes, array, type=uint16, maxsize=12, base=10
End

Begin Message, ETS CP CLC INITACQ CMD Cmd
    OvhFlag, uint8, base=10
    SysType, uint8, base=10
    BandClass, uint8,  base=enum:Cdma Band
    Channel, uint16, base=10, default=305
    PilotPN, uint16, base=10
    Interval, uint16, base=10, default=200
    RmcRFMode, uint8, base=enum:0 NO RF/1 RF
    RF Path, uint8, base=enum:RfPathsT
    C3Enable, uint8, base=enum:Disable/Enable
    SessionAutoMode, uint8, base=enum:Disable/Enable
    CssEnabled, uint8, base=enum:False/True, default=False
End

Begin Message, ETS CP CLC CMD OPEN CONNECTION Cmd
    AutomaticCallSetup, uint8, base=enum:FALSE/TRUE/ConnReq
    RevProtocol, uint8, base=enum:Rev0/RevA
    RevATestDataRate, uint8, base=enum:0/1/2/3/4/5/6/7/8/9/10/11/12/12_test/Circular/Real_QOS
    RevATestDRCValue, uint8, base=10
    Rev0TestDataRate, uint8, base=enum:Real/0/1/2/3/4/5/5_test/Circular
    TestRABInfo, uint8, base=enum:Real/Alternate/Always UP/Always Down
    CloseLoopEnable, uint8, base=enum:Disable/Enable
    HwAckEnable, uint8, base=enum:Disable/Enable
    RevATestHarq, uint8, base=enum:Ack/Nak
    RevATestMaxNumSubPkt, uint8, base=enum:Real/0/1/2/3
    RevATestTransmitMode, uint8, base=enum:RTM_TM_HICAP/RTM_TM_LOLAT/Real
    TxDelayLoadingTestMode, uint8, base=enum:NormalMode/TestMode
    RTM3FixedQueueTestMode, uint8, base=enum:NormalMode/TestMode
    RPCTestTriggerSubframeCount, uint16, base=10, default=0xffff
End

Begin Message, ETS CP CLC CMD RELEASE CONNECTION Cmd
End

Begin Message, ETS CP_CLC_IDLE_HANDOFF_CMD Cmd
    BandClass, uint8,  base=enum:Cdma Band
    Channel, uint16, base=10, default=200
    PilotPN, uint16, base=10, default=12
End

Begin Message, ETS CP CLC L3 STATUS Get cmd
End

Begin Message, ETS CP_CLC_CMD_POWERDOWN Cmd
End

Begin Message, ETS CP_CLC_CMD_POWERUP Cmd
End

Begin Message, ETS CP_CLC_CMD_SETUP_CONNECTION Cmd
End

Begin Message, ETS CP_CLC_CMD_REL_CONNECTION Cmd
End

Begin Message, ETS CP_CLC_CMD_ALU_NW_TEST Cmd
End

Begin Message, ETS CP CLC IDP Slotted Mode Set cmd
    Slotted Mode, uint32, base=enum:Disable/Enable/ControlOff
End

Begin Message, ETS CP CLC IDP Test FREEZE CMD cmd
End

Begin Message, ETS CP CLC IDP Test THAW CMD cmd
End

Begin Message, ETS CP CLC IDP Test WAKE UP CMD cmd
End

Begin Message, ETS CP CLC IDP Test RESYNC IND CMD cmd
End

Begin Message, ETS CP CLC IDP Test RESYNC DENIED CMD cmd
End

Begin Message, ETS CP CLC IDP DO SYS STATUS Get cmd
End

Begin Message, ETS CP CLC OMP Test DFS Insert Nghbr Cmd
    Num Neighbor, uint8, base=10
    NghbrRec, record, type=DfsNghbr Record, maxsize=5
End

Begin Record, DfsNghbr Record
    PilotPN, uint16, base=10
    Channel, uint16, base=10
    Band, uint8, base=10
End

Begin Message, ETS CP RMC INSP Pilot Acq Msg Cmd
    Rf Path, uint32, base=enum:RfPathsT, default=1
    Band, uint32, base=enum:Cdma Band
    Channel, uint16, base=10, default=600
End

Begin Message, ETS CP_RMC_TEST_RMC_DEACTIVATE_CMD Cmd
End

Begin Message, ETS CP_RMC_TEST_RMC_SPY_DECI_CMD Cmd
    SearcherSpyDecimate, uint32, base=enum:0/1/2/3/4/5/6/7/8/9/10, default=10
    FngPosSpyDecimate, uint32, base=enum:0/1/2/3/4/5/6/7/8/9/10, default=10
    RfcRxTxSpyDecimate, uint32, base=enum:0/1/2/3/4/5/6/7/8/9/10, default=3
    AfcSpyDecimate, uint32, base=enum:0/1/2/3/4/5/6/7/8/9/10, default=3
    FngHwCfgSpyDecimate, uint32, base=enum:0/1/2/3/4/5/6/7/8/9/10, default=10
    EqFnHwCfgSpyDecimate, uint32, base=enum:0/1/2/3/4/5/6/7/8/9/10, default=10
    EqHwCfgSpyDecimate, uint32, base=enum:0/1/2/3/4/5/6/7/8/9/10, default=10
End

Begin Message, ETS CP_RMC_TEST_DO_DFS_CMD Cmd
    PersistFlag, uint32, base=enum:FALSE/TRUE, default=TRUE
    Band, uint32, base=enum:Cdma Band
    Channel, uint16, base=10, default=600
End

Begin Message, ETS CP_RMC_SCH_CAPTURE_INPUT_BUFFER_CMD Cmd
End

Begin Message, ETS CP_RMC_SCH_MINIACQ_WINSIZE_CMD Cmd
    MiniAcqWinSizeIndex, uint16, base=16, default=0xA
End

Begin Message, ETS CP_RMC_TEST_IRAT_SRCH_CFG_MSG Cmd
    StartTime, uint64, default=0
    Duration, uint32, default=0
    LteMode, uint32, base=enum:RmcIratLteModeT, default = RMC_IRAT_LTE_MODE_CONN
    MeasMode, uint32, base=enum:RmcIratMeasModeT, default= RMC_IRAT_MEAS_MODE_MEAS_NO1X_GAP
    CdmaBand, uint8, base=10,default=0
    FreqChan, uint16, base=10,default=200
    SchWinSize, uint8, base=10,default=0
    NumOfPN, uint8, base=10,default=1
    PilotPN, array, type=uint16, base=10,maxsize=40, size=NumOfPN, columns=50
End

Begin Message, ETS CP_RMC_FMP_TEST_HWTESTMODE_CMD Cmd
    RF Mode, uint32, base=enum:0 RF bypass/1 RF on, default=1 RF on
    FmpTest Mode, uint32, base=enum:FmpTestModeT, default=Real
    FngAlgo, uint32, base=enum:0 FALSE/1 TRUE, default=1 TRUE
    FngTT, uint32, base=enum:0 FALSE/1 TRUE, default=1 TRUE
    FastTT, uint32, base=enum:0 FALSE/1 TRUE, default=1 TRUE
    SysTT, uint32, base=enum:0 FALSE/1 TRUE, default=0 FALSE
    ConnSetup, uint32, base=enum:0 FALSE/1 TRUE, default=0 FALSE
    FMPMode, uint32, base=enum:FmpMode
End

Begin Message, ETS CP_RMC_FMP_TEST_UPDATEFINGERS_CMD Cmd
    Finger Alloc, record, type=FmpFingerAllocRecT, maxsize=6
End

Begin Record, FmpFingerAllocRecT
    allocStatus, uint32, base=enum:Finger Alloc Status, default=0 NOT_DET (Disable)
    pilotPN, uint16, base=10
    offsetTc16, int16,  base=10
    macId, uint16, base=10
End

Begin Message, ETS CP_RMC_FMP_TEST_UPDATEMACFINGERS_CMD Cmd
    Mac Finger Alloc, record, type=FmpMacFingerAllocRecT, maxsize=12
    numSec, uint16, base=10
    Mac Sector Info, record, type=FmpMacSectorRecT, maxsize=6
End

Begin Record, FmpMacFingerAllocRecT
    allocStatus, uint32, base=enum:Mac Finger Alloc Status, default=0 NOT_DET (Disable)
    pilotPN, uint16, base=10
    offsetTc16, int16,  base=10
    macId, uint16, base=10
End

Begin Record, FmpMacSectorRecT
    pilotPN, uint16, base=10
    pcgId, uint32, base=enum:Sector PCG Id, default =PCG0
    RABLength, uint32, base=enum:RAB Length, default =RAB_LENGTH_8
    RABOffset, uint16, base=10
    RACGain, uint32, base=enum:RAC Gain, default =RACG_MINUS6
End

Begin Message, ETS CP_RMC_FMP_TEST_INSP_SYNC_CMD Cmd
    SyncMsgPN, uint16, base=10
    PhaseTc16(signed), int16,  base=10
    FirstCcOffset, uint8,  base=10
    FirstCcTimeStamp, uint8,  base=10
    SyncMsgSysTime(Frame), record, type=FrameRecT, maxsize=1
End

Begin Record, FrameRecT
    Lower32bit, uint32, base=10
    Upper6bit, uint8,  base=10
End

Begin Message, ETS CP_RMC_FMP_TEST_SCHPROC_CMD Cmd
    connSetup, uint8, base=10
    numUsablePaths, uint8, base=10
    winSize, uint16, base=10
    usablePaths, record, type=FmpSchUsablePathT, maxsize=42
End

Begin Record, FmpSchUsablePathT
    assocAnt, uint8,  base=10
    pilotPN, uint16, base=10
    offsetTc16, int16,  base=10
    macId, uint16, base=10
    pwrEstQ16, uint16, base=10
End

Begin Message, ETS CP_RMC_ALMP_DEACTIVATE_MSG_CMD Cmd
    Cause, uint32, base=enum:RxDeactivate Cause Enum
End

Begin Message, ETS CP_RMC_ALMP_NETWORK_RESET_MSG_CMD Cmd
End

Begin Message, ETS CP_RMC_FMP_ALMP_CONNECTION_CLOSED_MSG_CMD Cmd
End

Begin Message, ETS CP_RMC_FMP_TEST_FNHW_MSG_CMD Cmd
    Mode, uint32, base=enum:0 MMSE/1 MRC
End

Begin Message, ETS CP_RMC_FMP_FNALGOPARMS_GET_CMD Cmd
End

Begin Message, ETS CP_RMC_FMP_FNALGOPARMS_SET_CMD Cmd
    Type, uint32, base=enum:0 DEFAULT/1 NEW
    FGRALLOC_ECIO_ABSTHRESH_SCH (Q16 scalar), uint16, base=10, default=2609
    FGRALLOC_ECIO_ABSTHRESH_FNG (Q16 scalar), uint16, base=10, default=2609
    FGRALLOC_RELTHRESH (3db unit), uint8, base=10, min=0, max=8, default=1
    FGRALLOC_ECIO_RELTHRESH1 (3db unit), uint8, base=10, min=0, default=4
    FGRALLOC_ECIO_RELTHRESH2 (3db unit), uint8, base=10, min=0, default=4
    FGRALLOC_OFFSETDIST1 (Tc16), uint32, base=10, default=24
    FGRALLOC_OFFSETDIST2 (Tc16), uint32, base=10, default=40
    FGRALLOC_MINPATHDIST (Tc16), uint32, base=10, default=16
    FGRALLOC_ANTPAIRDIST (Tc16), uint32, base=10, default=8
    FGRALLOC_GRACE_PERIOD (ms), uint32, base=10, default=100
    FGRALLOC_DROP_TIMER (ms), uint32, base=10, default=500
    FMP_DLL_R1_THRESH_TC16 (Q16 scalar), uint16, base=10, default=6554
    FMP_RXTXOFFSET (Tc16), uint16, base=10, default=80
    FMP_MAX_CCSYNCMSG_DELAY (slots), uint8, base=10, default=10
    FMP_FASTTIMETRK_DELAY (slots), uint8, base=10, default=3
    FMP_FNGASSIGN_DELAY (slots), uint8, base=10, default=2
    FMP_FNGASSIGN_CTS_DELTA (chips), uint8, base=10, default=40
    FMP_FNGASSIGN_CTS_CALLBK_TC (chips), uint32, base=10, default=1748
    FMP_FNGPOS_DELTA_TC16 (Tc16), int16, base=10, default=0
    FMP_SCH_PATHS, uint8, base=10, default=1
    FMP_SPY_FNGPOS_INTERVAL, uint8, base=10, default=20
    FMPTEST_DLLSTAT_MAX_COUNT, uint32, base=10, default=100
    FMPTEST_DLLSTAT_MAX_DELAY, uint32, base=16, default=0x500
End

Begin Message, ETS CP_RMC_FMP_TEST_FINGER_SCAN_CMD Cmd
    FingerIndex, uint8, base=10, default=1
    offsetTc16, int16, base=10, default=0
End

Begin Message, ETS CP_RMC_FMP_TEST_FINGER_COMB_CFG_CMD Cmd
    FgrCombSel, uint32, base=enum:0 COMB_DEFAULT/1 COMB_MAIN/2 COMB_DIV/3 COMB_MAIN_DIV, default=0 COMB_DEFAULT
    EqFgrCombSel, uint32, base=enum:0 COMB_DEFAULT/1 COMB_MAIN/2 COMB_DIV/3 COMB_MAIN_DIV, default=0 COMB_DEFAULT
End

Begin Message, ETS CP_RMC_MAC_TARGET_TEST_CMD Cmd
    MacTestTarget, uint8,   base=16
    EvalWithTap, uint32,  base=enum:0 FALSE/1 TRUE, default=0 FALSE
    DrcImprove, uint32,  base=enum:0 FALSE/1 TRUE, default=0 FALSE
End

Begin Message, ETS CP_RMC_FMP_EQFNALGOPARMS_SET_CMD Cmd
    Type, uint32, base=enum:0 DEFAULT/1 NEW
    EQ_FGRALLOC_ADD_THRESH (Q9 linear), uint16, base=10, default=1022
    EQ_FGRALLOC_DROP_THRESH (Q9 linear), uint16, base=10, default=257
    EQ_FGRALLOC_DROP_TIMER (ms), uint32, base=10, default=1000
    EQ_FGRALLOC_TIME_TRACK_THRESH (Q9 linear), uint16, base=10, default=257
    EQ_FGRALLOC_TIME_TRACK_REF, uint32, base=enum:EqTimeTrackRef,default=STRONGEST
End

Begin Message, ETS CP_RMC_FMP_EQFEATURE_SET_CMD Cmd
    EqCombModeForced, uint32, base=enum: 0 FALSE/1 TRUE, default=0 FALSE
    EqFeatureSet, uint32, base=enum: 0 FALSE/1 TRUE, default=1 TRUE
    CurEqCombMode, uint32, base=enum: NotChg/RakOnly/EqOnly/SelMax/CombSum/DataSum/AutoComb/MaxAll, default=AutoComb
    EqConfig, uint32, base=enum: Independent/Concatenated/Overlapped/OverlappedAplha, default=Overlapped
End

Begin Message, ETS CP_RMC_FMP_EQ_MANUAL_ASSIGN_CMD Cmd
    EqEqfnAlloc, record, type=FmpEqEqfnAllocRecT, maxsize=4
End

Begin Record, FmpEqEqfnAllocRecT
    EqManualAssign, uint8,   base=bool, default=False
    EqAssigned, uint32,  base=enum:EqEq Alloc Status, default=InAct (Disable)
    EqFnAssigned, uint32,  base=enum:EqEqfn Alloc Status, default=InAct (Disable)
    AssocFng, uint8,   base=10, default=0
    EqLmsMode, uint32,  base=enum:Indep/Overlapped/Overlappedalpha, default=Indep
    EqTapLen, uint8,   base=10, default=16
    EqTapPos, uint16,  base=16, default=88
    FnCenterPos, uint16,  base=16, default=0
    FnRefPos, uint16,  base=16, default=0
End

Begin Message, ETS CP_RMC_FMP_DO_FWD_ENH_CFG_CMD Cmd
    FmpIntraPairSNRCombEn, uint16,  base=bool, default=False
    FmpEqMaxCmbEnForSNR, uint16,  base=bool, default=False
    FmpEqMaxCmbEnForData, uint16,  base=bool, default=False
    FmpRakeMaxCmbEnForSNR, uint16,  base=bool, default=False
    FmpRakeMaxCmbEnForData, uint16,  base=bool, default=False
    FmpRakeMrcAdjMaxEn, uint16,  base=bool, default=False
    FmpEqMrcAdjMaxEn, uint16,  base=bool, default=False
End

Begin Message, ETS CP_RMC_FMP_RAKEEQDELAY_SET_CMD Cmd
    SetHwdDelay, uint16, base=enum: 0 FALSE/1 TRUE, default=0 FALSE
    SetRakeEqDelay, uint16, base=10, default=850
    SetHwdEQConfig, uint16, base=enum: 0 FALSE/1 TRUE, default=0 FALSE
    EqTapLenSet0, uint16, base=10, default=16
    EqTapLenSet1, uint16, base=10, default=32
    EqTapLenSet2, uint16, base=10, default=16
    EqTapLenSet3, uint16, base=10, default=32
    EqTapPosSet0, uint16, base=16, default=0x70
    EqTapPosSet1, uint16, base=16, default=0xf8
    EqTapPosSet2, uint16, base=16, default=0x70
    EqTapPosSet3, uint16, base=16, default=0xf8
    EqPosAdjExtra, int16,  base=10, default=0
    EqFnPosAdjExtra, int16,  base=10, default=0
    DisableEqDrop, uint16, base=10, default=0
    SetHwdEQRegs, uint16, base=enum: 0 FALSE/1 TRUE, default=0 FALSE
    Fmp_HWD_EQ_CTRL0, uint16, base=16, default=0
    Fmp_HWD_EQ_CTRL1, uint16, base=16, default=0
    Fmp_HWD_EQ_CTRL2, uint16, base=16, default=0
    Fmp_HWD_EQ_NLMS, uint16, base=16, default=0
End

Begin Message, ETS CP_RMC_CSM_TEST_CELL_SWITCH_CMD Cmd
    CmdId, uint32, base=enum:Cell Switch/Variable Rate To Fixed Rate/Fixed Rate To Variable Rate
    TargetPilotPN, int16,  base=10, default = 0
    TargetDRCCover, int8,   base=10, default = -1
    TargetDSC, int8,   base=10, default = -1
End

Begin Message, ETS CP_RMC_CSM_PROG_ACTIVE_MACID_CMD Cmd
    Active_1_MacId, int16, base=10, default = 0
    Active_2_MacId, int16, base=10, default = 0
    Active_3_MacId, int16, base=10, default = 0
    Active_4_MacId, int16, base=10, default = 0
    Active_5_MacId, int16, base=10, default = 0
    Active_6_MacId, int16, base=10, default = 0
End

Begin Message, ETS CP_RMC_CSM_PROG_SWITCH_THRESHOLDS Cmd
    InstantThreshold(dB), int32,  base=10, default = 6
    PersistThreshold(dB), int32,  base=10, default = 1
    ServingDropThreshold(dB), int32,  base=10, default = -15
    FastSwitchC2IThreshold(dB), int32,  base=10, default = -14
    SoftHandoffTimerThreshold, uint16, base=10, default = 3
    C2IHwCounterThreshold, uint8,  base=10, default = 4
End

Begin Message, ETS CP_RMC_PREEMPT_CMD cmd
End

Begin Message, ETS CP_RMC_ACTIVATE_CMD cmd
End

Begin Message, ETS CP RFC Config Modem Resources Cmd
    Modem Config, uint32, base=enum:RFC Air Interface
End

Begin Message, ETS CP RFC Emulate DSPM RFC Spy Cmd
    Enable Flag, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP RFC AGC ISR ST Match Get Cmd
End

Begin Message, ETS CP RFC AGC ISR ST Match Set Cmd
    Slot ISR ST Match (chips), uint16, base=10
    HalfSlot ISR ST Match (chips), uint16, base=10
End

Begin Message, ETS CP RFC Settle Times Get Cmd
End

Begin Message, ETS CP RFC Settle Times Set Cmd
    Slow Rx AGC Settle Time (usec), uint16, base=10, max=20000
    Fast Rx AGC Settle Time (usec), uint16, base=10, max=20000
End

Begin Message, ETS CP RFC Rx AGC Config Cmd
    Rx AGC Block, uint32, base=enum:RxAGCBlock
    Rx AGC PeriodMask, uint16, base=16,   default=0x1FFF
    Rx AGC Window, uint32, base=16,   default=0x00001FFC
    Rx AGC Target, uint16, base=16,   default=0x340
    Rx AGC LoopCoef, uint8,  base=16,   max=8, default=1
    Rx AGC DigiGain Timing, uint16, base=16,   default=0x0
    Rx AGC StepGain Timing, uint16, base=16,   default=0x0
    Enable Slot ISR, uint8,  base=bool, default=True
    Enable Half-Slot ISR, uint8,  base=bool, default=False
End

Begin Message, ETS CP RFC Rx AGC Get Config Cmd
    Rx AGC block, uint32,  base=enum:RxAGCBlock
End

Begin Message, ETS CP RFC Rx AGC Get DigiGain Cmd
End

Begin Message, ETS CP RFC AFC Mode Set Cmd
    RFC AFC Mode, uint32,  base=enum:AFC Test Ctrl, default=Automatic
End

Begin Message, ETS CP RFC AFC Metric Config Get Cmd
End

Begin Message, ETS CP RFC AFC Metric Config Set Cmd
    Active Fingers, uint32, base=enum:AFCActiveFingers
    Selective Accumulation Length, uint8,  base=10
    Track Accumulation Length, uint8,  base=10
    Selective RSNR Threshold, uint8,  base=10
    Track RSNR Threshold, uint8,  base=10
    Slow Alpha Filter Gain, uint16, scale=Q4
    Fast Alpha Filter Gain, uint16, scale=Q4
    Slow Beta Filter Gain, uint16, scale=Q4
    Fast Beta Filter Gain, uint16, scale=Q4
    Nyquist Limit Cap, uint8,  base=10, max=3
    AFC DFlag, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP RFC Emulate DSPM AFC Spy Cmd
    Enable Flag, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP RFC DC Offset Config Cmd
    Rx AGC Block, uint32,  base=enum:RxAGCBlock
    DC Offset Mode, uint32,  base=enum:Auto/Manual
    I-Channel DC Offset, int16,   base=10, min=-4096, max=4095
    Q-Channel DC Offset, int16,   base=10, min=-4096, max=4095
End

Begin Message, ETS CP RMC CMD RUP SEND TCA Cmd
    ChannelIncluded, uint8
    Channel, record, type = Rup Channel Rec, maxsize = 1
    FrameOffset, uint8
    DRCLength, uint8
    DRCChannelGainBase, uint8
    ACKChannelGain, uint8
    NumPilots, uint8
    PilotRec, record, type = TchAssign Pilot Rec, maxsize=8
    RAChannelGainIncluded, uint8
    RAChannelGain, array, type = uint8, maxsize=8
    MACIndexMSBsIncluded, uint8
    MACIndexMSB, array, type = uint8, maxsize=8
    DSCChannelGainBase, uint8
    DSC, array, type = uint8, maxsize=8
End

Begin Record, Rup Channel Rec
    SystemType, uint8
    BandClass, uint8
    ChannelNumber, uint16
End

Begin Record, TchAssign Pilot Rec, BitPack
    PilotPN, uint16
    SofterHandoff, uint8
    MACIndexLSBs, uint8
    DRCCover, uint8
    RABLength, uint8
    RABOffset, uint8
End

Begin Message, ETS CP RMC CMD RUP SET SUPP CHAN Cmd
    BandClassCount, uint8
    BandClass, array, type=uint8, maxsize=3
    SubBand, record, type=SubBand Rec, maxsize=3
End

Begin Record, SubBand Rec
    BandSubClassCount, uint8
    BandSubClass, array, type = uint8, maxsize=8
End

Begin Message, ETS CP RMC CMD RUP SET SIMPLE ATTR Cmd
    SupportRouteUpdateEnhInc, uint8, base=bool
    SupportRouteUpdateEnh, uint8
    OverrideAllowInc, uint8, base = bool
    OverrideAllow, uint8
    RupRadiusMultInc, uint8, base = bool
    RupRadiusMult, uint8
    RupRadiusAddInc, uint8, base = bool
    RupRadiusAdd, uint16
End

Begin Message, ETS CP RMC CMD RUP SET SEARCH PARM Cmd
    PilotIncrement, uint8
    SearchWinActive, uint8
    SearchWinNghbr, uint8
    SearchWinRemaining, uint8
End

Begin Message, ETS CP RMC CMD RUP SET MANCHAN PARM Cmd
    bSameChan, uint8, base = bool
    PilotAdd, uint8
    PilotComp, uint8
    PilotDrop, uint8
    PilotDropTimer, uint8
    DynamicThresh, uint8, base = bool
    SoftSlope, uint8
    AddIntercept, uint8
    DropIntercept, uint8
    NghbrMaxAge, uint8
End

Begin Message, ETS CP RMC CMD RUP OTA Msg Cmd
    data, array, type = uint8, maxsize=400, size=end
End

Begin Message, ETS CP RMC CMD RUP PILOT UPDATE MSG Cmd
    NumActPilots, uint8
    ActivePnPhase, array, type=int16, maxsize=6
    ActivePN, array, type=uint16, maxsize=6
    ActiveInfo, record, type=ActivePilotInfo Rec, maxsize=6
    NumCanPilots, uint8
    CandPnPhase, array, type=int16, maxsize=10
    CandPN, array, type=uint16, maxsize=10
    NumNghPilots, uint8
    NghbrInfo, record, type=NghbrPilotInfo Rec, maxsize=10
End

Begin Record, ActivePilotInfo Rec
    PCGMap, uint8, base=enum:0/1
    MacIndices, uint8
    RAdbGain, uint8,  base=enum:-6db/-9db/-12db/-15db
    RABOffset, uint8, base=enum:0/1/2/3/4/5/6/7
    RABLength, uint8, base=enum:8slots/16slots/32slots/64slots
End

Begin Record, NghbrPilotInfo Rec
    PilotPN, uint16
    WinSize, uint8
    WinOff, uint8
End

Begin Message, ETS CP RMC CMD RUP SEND RUP REQ Cmd
End

Begin Message, ETS CP RMC CMD RUP SET MAC PARM Cmd
    DRCLockPeriod, uint8, base=enum:8/16
    DRCLockLength, uint8, base=enum:4/8/16/32
    SubType, uint8, base=enum:Rev0/RevA
    arqModeServCell, uint8, base=enum:BPSK/OOK
End

Begin Message, ETS CP RMC CMD RUP GET DFS INFO MSG Cmd
End

Begin Message, ETS CP RMC CMD RUP DFS START MSG Cmd
    Cause, uint32, base=enum:DFS Start Code Enum
    NumChan, uint8, base=10
End

Begin Message, ETS CP RMC CMD RUP DFS SECPARM MSG Cmd
End

Begin Message, ETS CP RMC CMD RUP DFS ABORT MSG Cmd
End

Begin Message, ETS CP RMC CMD RUP DFS SRCH RSLT MSG Cmd
End

Begin Message, ETS CP RMC CMD RUP DFS RXDEACTIND MSG Cmd
End

Begin Message, ETS CP_RMC_EQ_SELECT_GET_CMD Cmd
End

Begin Message, ETS CP_RMC_EQ_SELECT_SET_CMD Cmd
    FmpEqSelect, uint32, base=enum:FmpEqSelectT,  default=SELECT_EQ0
    FmpEqWWLSelect, uint32, base=enum:FmpEqWWLSelectT, default=SELECT_W
    FmpEqWWLValueFormat, uint32, base=enum:FmpEqWWLValueFormatT, default=SELECT_VALUE
End

Begin Message, ETS CP_L1ECD_IRAT_MEAS_REPORT_IND Cmd
    Earfcn, uint16, base=10
    nof_result, uint8,  base=10,min=1, max=32, default=1
    IsLastReport, uint32, base= enum:FALSE/TRUE, default=FALSE
    CellMeasResults, record, type = EUTRAN CellMeas Result Rec, maxsize=32
End

Begin Record, EUTRAN CellMeas Result Rec
    Rsrp, uint8
    Rsrq, uint8
    CellID, uint16
End

Begin Message, ETS CP_L1ECD_EUTRAN_GAP_IND Cmd
    gapStart, uint64, base=16
    gapDuration, uint32, base=10
    newTMeas, uint32, base=enum:FALSE/TRUE,default=FALSE
    gapPurpose, uint32, base=enum:L1CDGapPurposeT
    gapId, uint32, base=enum:L1CDGapId
    drxPeriod, uint16, base=10
    nofLTEifreq, uint8,  base=10
    gapRatModeBefore, uint32, base=enum:L1CDIratGapRatModeT
    gapRatModeAfter, uint32, base=enum:L1CDIratGapRatModeT
    delayStopGapInd, uint32, base=enum:FALSE/TRUE,default=FALSE
    mobilityState, uint32, base=enum:L1CDEMobilityStateT
End

Begin Message, ETS CP_L1CDE_IRAT_SERVICE_REQ Cmd
    IratServiceReq, uint32, base=enum:L1CDEIratServiceRequestModeT
End

Begin Message, ETS CP_L1CDE_MASTER_RAT_REQ Cmd
    RatId, uint32, base=enum:L1CDERatIdT
End

Begin Message, ETS CP_L1CDE_CDMA_IRAT_CELL_LIST_REQ Cmd
    ListSize, uint8, base=10
    CellList, record, type = L1CDMeasCellListT,maxsize=5
    MeasCmd, record, type = L1CDECdmrIratMeasReqT,maxsize=1
End

Begin Record, L1CDMeasCellListT
    Band, uint8,  base=10
    Channel, uint16, base=10
    CellReselPri, uint8,  base=10
    SearchWinSize, uint8,  base=10
    NumPn, uint8,  base=10
    PN, array,  type=uint16, maxsize=7
End

Begin Record, L1CDECdmrIratMeasReqT
    MeasMode, uint32, base=enum:L1CDEutranMeasModeT
    MeasPerCycleMask, uint8,  base=16
    MeasEveryCycleMask, uint8,  base=16
End

Begin Message, ETS CP_L1CDE_CDMA_IRAT_MEAS_REQ Cmd
    MeasMode, uint32, base=enum:L1CDEutranMeasModeT
    MeasPerCycleMask, uint8,  base=16
    MeasEveryCycleMask, uint8,  base=16
End

Begin Message, ETS CP_L1CDE_STOP_GAP_IND_CMD Cmd
End

Begin Message, ETS CP_L1CDE_EUTRAN_GAP_ABORT_REQ Cmd
End

Begin Message, ETS CP_L1CDE_IRAT_STOP_ALL_REQ Cmd
End

Begin Message, ETS CP_L1CD_PLMN_SEARCH_REQ Cmd
End

Begin Message, ETS CP_L1CD_STOP_PLMN_SEARCH_REQ Cmd
End

Begin Message, ETS CP_L1CD_IRAT_MEAS_CFG_REQ Cmd
    ListSize, uint8, base=10
    Eutra, record, type = L1CDIratEUTRANNeighborT, maxsize=8
End

Begin Record, L1CDIratEUTRANNeighborT
    Earfcn, uint16, base=10
    EarfcnPri, uint8,  base=10
    ThreshX, uint8,  base=10
    RxLevMinEutra, int16,  base=10
    RxLevMinEutraOffset, uint8,  base=10
    PeMax, uint8,  base=10
    MeasBandWidth, uint8,  base=10
    NumPlmn, uint8,  base=10
    PlmnId, array,  type=uint32, maxsize=8
End

Begin Message, ETS CP_L1CD_IRAT_MEAS_REQ Cmd
    MeasMode, uint32, base=enum:L1CDCdmaMeasModeT
    NumFreq, uint8,  base=10
    Earfcn, array,  type=uint16, maxsize=8
End

Begin Message, ETS CP_L1CD_IRAT_RESEL_REQ Cmd
End

Begin Message, ETS CP_L1CD_ACTIVATE_REQ Cmd
End

Begin Message, ETS CP_L1CD_DEACTIVATE_REQ Cmd
End

Begin Message, ETS CP_IRAT_RMC_MEAS_REPORT_MSG Cmd
    Band, uint8,  base=10
    Channel, uint16, base=10
    NumPn, uint8,  base=10
    PilotPN, record, type = L1CDCdmaPilotMeasResultT, maxsize=7
End

Begin Record, L1CDCdmaPilotMeasResultT
    PN, uint16
    Phase, int16
    Strength, uint16
End

Begin Message, ETS CP_IRAT_RMC_RF_ASSIGN_IND Cmd
    Status, uint32, base=enum:FALSE/TRUE, default=TRUE
End

Begin Message, ETS CP_IRAT_RMC_RF_RELEASE_IND Cmd
End

Begin Message, ETS CP CDRR TEST CMD Cmd
    MsgId, uint32,  base=enum:CAS Message Name
    Parm1, uint16, base=16, default=0
    Parm2, uint16, base=16, default=0
    Parm3, uint16, base=16, default=0
    Parm4, uint16, base=16, default=0
End

Begin Message, ETS CP IRATRFC TEST CMD Cmd
    MsgId, uint32,  base=enum:IRATRFC Message Name
    Parm1, uint16, base=16, default=0
    Parm2, uint16, base=16, default=0
    Parm3, uint16, base=16, default=0
    Parm4, uint16, base=16, default=0
End

Begin Message, ETS CP FTM RUP Activate Msg Cmd
End

Begin Message, ETS CP_FCP_FTAP_STAT_GET_REQ Cmd
    IdleASPStats, uint8, base=enum:NO/YES
    ConnectedSSStats, uint8, base=enum:NO/YES
    FirstSyncCCPktStats, uint8, base=enum:NO/YES
End

Begin Message, ETS CP_FCP_FTAP_STAT_CLR_REQ Cmd
    IdleASPStats, uint8, base=enum:NO/YES
    ConnectedSSStats, uint8, base=enum:NO/YES
    FirstSyncCCPktStats, uint8, base=enum:NO/YES
End

Begin Message, ETS CP_FCP_CCM_ACTIVATE_CMD Cmd
End

Begin Message, ETS CP_FCP_CCM_DEACTIVATE_CMD Cmd
End

Begin Message, ETS CP_FCP_CCM_PKT_MSG Cmd
    RepeatTimes, uint8
    Interal, uint16
    PktSeq, uint8
    bNext, uint8
    CCHeader, uint8
    MACHeader, array, type=uint8, maxsize=6, size=6
    data, array, type=uint8, maxsize=120, size=end
End

Begin Message, ETS CP_FCP_CCM_OTA_MSG Cmd
    RepeatTimes, uint8
    Interal, uint16
    PilotPN, uint16
End

Begin Message, ETS CP_FCP_FWD_TEST_MODE Cmd
    DcOffset, uint32, base=enum:UpdDcOffsetTestModeT, default=COEF_AUTO
    RxsdFirTap, uint32, base=enum:FIR_AUTO/FIR_DEFAULT/FIR_POKE_HW, default=FIR_AUTO
    DRCChanType, uint32, base=enum:DRCChanTypeT, default=Non_Force_chTyp
    FingerMmseMode, uint32, base=enum:AUTO/FORCE_MRC, default=AUTO
    RmcFngR1Scale, uint16, base=16, default=0xffff
    RmcFngR1Scale2, uint16, base=16, default=0xffff
    SnrBkOff, uint16, base=16, default=0xffff
    SnrBkOffNew, uint16, base=16, default=0xffff
End

Begin Message, ETS CP_FCP_ETS_HW_TRIG Cmd
End

Begin Message, ETS CP_FCP_PACKET_PERF_STAT_RESET Cmd
End

Begin Message, ETS CP_FCP_REDUCED_TEST_MODE Cmd
    ReducedTestMode, uint8, base=enum:NO/YES
    EVDO Revision, uint8, base=enum:Rev0/RevA
    DRC value, uint8, base=enum:0/1/2/3/4/5/6/7/8/9/10/11/12/RevA13/RevA14
    MACID, uint8, default=4
End

Begin Message, ETS CP_FCP_REDUCED_TEST_CFG Cmd
    config_type, uint32, base=enum:ReduceCfgT,default=PER_START
    value, array, type=uint32,   maxsize=16, base=10
End

Begin Message, ETS CP FCP PAF TEST INIT Cmd
    Test Mode, uint32, base=enum:TestModes, default=TestCase0:NO HLP
End

Begin Message, ETS CP FCP PAF TEST START Cmd
    TestCase, uint8, base=enum:PafTestCases, default=TestCase0:No Otects Missed
    Test Buffer Size, uint16, base=10, default=1000
    FCP Task Sig Timer(in Slot), uint16, base=10, default=20
    Test Repeat Count, uint16, base=10, default=0
    RTM Rev Rate, uint8, base=enum:RTMRevRate, default=76.8kpbs
    ConnectionLayer Format, uint8,base=enum:ConnectionLayer Formats, default=Format A Preferred
End

Begin Message, ETS CP FCP PAF TEST RESET Cmd
End

Begin Message, ETS CP FCP PAF TEST END Cmd
End

Begin Message, ETS CP FCP CMD DPA RLP STATS RESET Cmd
End

Begin Message, ETS CP FCP CMD DPA RLP STATS PEEK Cmd
End

Begin Message, ETS CP FCP CMD MFPA RLP STATS RESET Cmd
End

Begin Message, ETS CP FCP CMD MFPA RLP STATS PEEK Cmd
End

Begin Message, ETS CP_FCP_OTAMSG_MSG Cmd
    data, array, type=uint8, maxsize=125, size=end
End

Begin Message, ETS CP_FCP_DESIGNATE_DRC_SET Cmd
    DesigDRC, uint16
    MaxDRCLim, uint16
    ReserveData1, uint16
    ReserveData2, uint16
End

Begin Message, ETS CP FCP DSAF MSG BLK CFG Cmd
    MsgBlkCfg, record, type = Msg Block Rec, maxsize=8
End

Begin Record, Msg Block Rec, BitPack
    ProtocolType, uint8,base=enum:DO Protocol Type Enum,default=0xff
    MessageId, uint8,default=0xff
    BlockCnt, uint8,default=0
    Repeat, uint8,default=0
End

Begin Message, ETS CP_RCP_ACM_TEST_CFG_CMD Cmd
    AcmTestMode, uint8, base=enum:Real/Deactivate/TxHw/TxHwRepeat, default=Real
    AcmDataRate, uint8, base=enum:0/1/2/3, default=1
    AccessCycDur(slots), uint8, base=10, default=4
    PreambleLen(frames), uint8, base=enum:0/1/2/3/4/5/6/7, default=1
    ProbeSeqMax, uint8, base=enum:0/1/2/3/4/5/6/7/8/9/10/11/12/13/14/15, default=3
    ProbeNumStep, uint8, base=enum:0/1/2/3/4/5/6/7/8/9/10/11/12/13/14/15, default=3
    ColorCode, uint8, base=10, default=0
    SectorId, uint32, base=10, default=0
    RpcTestMode, uint8,  base=enum:RPC Test Mode Type
End

Begin Message, ETS CP_RCP_ACM_TEST_ACACK_CMD Cmd
End

Begin Message, ETS CP_RCP_RTM_TEST_CFG_CMD Cmd
    RtmTestMode, uint8, base=enum:RtmTestModeT, default=0
    RcpMode, uint8, base=enum:0 Inactive/1 Access/2 Traffic, default=0 Inactive
    RtmSubtype, uint8, base=enum:0/1/2/3, default=0
    RtmState, uint8, base=enum:RtmRmmStateT, default=3
    RtmCurrInterlace, uint8, base=enum:0/1/2, default=0
    RtmCurrSubframeCnt, uint8, base=enum:0/1/2/3, default=0
    RtmCurrTxHistSubframe, uint8, base=10, default=200
    minRateLimAN, uint8, base=enum:0/1/2/3/4/5, default=5
    testTxhwRate, uint8, base=enum:0/1/2/3/4/5, default=4
    testTxhwPktSz, uint8, base=enum:0/1/2/3/4/5/6/7/8/9/10/11/12, default=10
    hlarq, uint8, base=enum:0 NAK/1 ACK, default=1 ACK
    parq, uint8, base=enum:0 NAK/1 ACK, default=1 ACK
    addByteSize, uint32, base=10, default=200
    addByteMacFlowId, uint8, base=10, default=0
    bTestPktMode, uint8, base=10, default=0
    configuredPacketRateMode, uint8, base=bool, default=True
    rtapMinRate, uint8, base=enum:0/1/2/3/4/5, default=0
    rtapMaxRate, uint8, base=enum:0/1/2/3/4/5, default=5
    configuredPacketPayloadSizeMode, uint8, base=bool, default=True
    rtapMinPayloadSize, uint8, base=enum:0/1/2/3/4/5/6/7/8/9/10/11/12, default=0
    rtapMaxPayloadSize, uint8, base=enum:0/1/2/3/4/5/6/7/8/9/10/11/12, default=8
    RtmSpyTxHistInterval, uint8, base=10
    RpcTestMode, uint8,  base=enum:RPC Test Mode Type
End

Begin Message, ETS CP_RCP_RTM_TEST_PARM_GET_CMD Cmd
End

Begin Message, ETS CP_RCP_RTM_TEST_PARM_SET_CMD Cmd
    Type, uint8, base=enum:0 DEFAULT/1 NEW
    revlinkSilenceDuration (frames), uint8, base=10, default=0
    revlinkSilencePeriod (frames), uint8, base=10
    frameOffset (slots), uint8, base=10
    drcLen (2^x slots), uint8, base=enum:0/1/2/3
    drcChanGainBase (0.5db), int8, base=10, min=-18, max=12
    dscChanGainBase (0.5db), int8, base=10, min=-18, max=12
    ackChanGain (0.5db), int8, base=10, min=-18, max=12
    drcGating, uint8, base=enum:0 cont/1 disc
    dscLen (8 slots), uint8, base=10
    drcBoostLen (2 slots), uint8, base=10
    dscBoostLen (8 slots), uint8, base=10
    drcChanGainBoost (db), uint8, base=10
    dscChanGainBoost (db), uint8, base=10
    deltaAckChanGainMUP (0.5db), uint8, base=10
    rpcStep, uint8, base=enum:0.5db/1.0db
    dataOffNom_01   (0.5db), int8, base=10
    dataOff9k6_01   (0.25db), int8, base=10
    dataOff19k2_01  (0.25db), int8, base=10
    dataOff38k4_01  (0.25db), int8, base=10
    dataOff76k8_01  (0.25db), int8, base=10
    dataOff153k6_01 (0.25db), int8, base=10
    auxPilotChanGain (db), int8, base=10, min=-15, max=0
    auxPilotMinPayload (128bits), uint8, base=16, min=0, max=0xb
    rriGainScale_3 (Q7), uint16, base=10
    dataGainScale0_3 (Q7), uint16, base=10
    dataGainScale1_3 (Q7), uint16, base=10
    dataGainScale2_3 (Q7), uint16, base=10
    dataGainScale3_3 (Q7), uint16, base=10
End

Begin Message, ETS CP_RCP_RTM_TEST_TXCHANSTAT_GET_CMD Cmd
End

Begin Message, ETS CP RCP ACH TEST Msg Cmd
    FRAME_OFFSET, uint16, base=16, default=0
    PRE_PILOT_SCALE, uint16, base=16, default=0
    PILOT_SCALE, uint16, base=16, default=0
    RRI_DATA_ACK0, uint16, base=16, default=0
    DATA_SCALE0_ACK, uint16, base=16, default=0
    SD_SCALE1, uint16, base=16, default=0
    SD_SCALE2, uint16, base=16, default=0
    FRAME_DATA, array, type=uint32, maxsize=32, size=32
    BB_CAPTURE_FR, uint16, base=16, default=0
    TEST_CASE, uint16, base=16, default=0
End

Begin Message, ETS CP RCP TCH01 TEST Msg Cmd
    PILOT_SCALE, uint16, base=16, default=0
    DRC_GATING, uint16, base=16, default=0
    DRC_LEN, uint16, base=16, default=0
    DRC_SCALE, uint16, base=16, default=0
    ACK_SUP_SCALE, uint16, base=16, default=0
    ACK_MUP_SCALE, uint16, base=16, default=0
    RRI_DATA_ACK1, array, type=uint16, maxsize=4, size=4
    DATA_SCALE0_ACK, array, type=uint16, maxsize=4, size=4
    SD_SCALE1, array, type=uint16, maxsize=4, size=4
    SD_SCALE2, array, type=uint16, maxsize=4, size=4
    DRC_COVER, uint16, base=16, default=0
    DRC_VALUE, uint16, base=16, default=0
    RRI_SCAL_ACK, uint16, base=16, default=0
    BB_CAPTURE_FR, uint16, base=16, default=0
    TEST_CASE, uint16, base=16, default=0
End

Begin Message, ETS CP RCP TCH2 TEST Msg Cmd
    PILOT_SCALE, uint16, base=16, default=0
    DRC_GATING, uint16, base=16, default=0
    DRC_LEN, uint16, base=16, default=0
    DRC_SCALE, uint16, base=16, default=0
    ACK_SUP_SCALE, uint16, base=16, default=0
    ACK_MUP_SCALE, uint16, base=16, default=0
    RRI_DATA_ACK2, array, type=uint16, maxsize=12, size=12
    RRI_DATA_NAK2, array, type=uint16, maxsize=12, size=12
    DATA_SCALE0_ACK, array, type=uint16, maxsize=12, size=12
    DATA_SCALE0_NAK, array, type=uint16, maxsize=12, size=12
    DATA_SCALE1_ACK, array, type=uint16, maxsize=12, size=12
    DATA_SCALE1_NAK, array, type=uint16, maxsize=12, size=12
    DATA_SCALE2_ACK, array, type=uint16, maxsize=12, size=12
    DATA_SCALE2_NAK, array, type=uint16, maxsize=12, size=12
    DATA_SCALE3_ACK, array, type=uint16, maxsize=12, size=12
    DATA_SCALE3_NAK, array, type=uint16, maxsize=12, size=12
    DATA_SCALE_ACK, array, type=uint16, maxsize=12, size=12
    REV_ACK_DATA, array, type=uint16, maxsize=12, size=12
    TWO_BIT_ACK_NAK, array, type=uint16, maxsize=12, size=12
    DRC_LEN_BOOST, array, type=uint16, maxsize=12, size=12
    DSC_LEN_BOOST, array, type=uint16, maxsize=12, size=12
    FWD_ACK_DATA, array, type=uint16, maxsize=48, size=48
    RRI_SCAL_ACK, uint16, base=16, default=0
    RRI_SCAL_NAK, uint16, base=16, default=0
    DSC_SCALE, uint16, base=16, default=0
    DRC_SCALE_BOOST, uint16, base=16, default=0
    DSC_SCALE_BOOST, uint16, base=16, default=0
    AUX_MIN_PAYLOAD, uint16, base=16, default=0
    AUX_SCALE, uint16, base=16, default=0
    BB_CAPTURE_FR, uint16, base=16, default=0
    TEST_CASE, uint16, base=16, default=0
End

Begin Message, ETS CP RCP TX DMA TEST CFG Msg Cmd
    LLD_ADDR, uint32, base=16, default=0
    SRC_ADDR, uint32, base=16, default=0
    DEST_ADDR, uint32, base=16, default=0
    NEXT_LLD_ADDR, uint32, base=16, default=0
    SRC_DATA, array, type=uint8, maxsize=32, size=32
    DATA_LEN, uint16, base=16, default=0
    ACK_NAK, uint16, base=enum:AckNak
    FIRST_LLD, uint16, base=bool
    BYTES_WIDTH, uint16, base=16
End

Begin Message, ETS CP RCP TX DMA TEST START Msg Cmd
    ACK_NAK, uint8, base=enum:AckNak
End

Begin Message, ETS CP RCP TX DMA TEST READ Msg Cmd
    Num Words, uint16, base=16, default=0
    Address, uint32, base=16, default=0
End

Begin Message, ETS CP RCP TCH TEST DATA WRITE Msg Cmd
    OFFSET, uint32, base=16, default=0
    LENGTH, uint32, base=16, default=0
    TEST_DATA, array, type=uint32, maxsize=128, size=128
End

Begin Message, ETS CP RCP PACKET PERF STAT RESET Msg Cmd
End

Begin Message, ETS CP RCP RTMQOS TXMODE ALGO SELECTION Msg Cmd
    Mode, int8,  base=enum:MaxPS/IFFLL
End

Begin Message, ETS CP_DSAR_MSG_BLK_CFG_CMD Cmd
    MsgBlkCfg, record, type = Msg Block Rec, maxsize=8
End

Begin Message, ETS CP RCP SET STREAM TOAPPTYPE Cmd
    AppType, array, type=uint16, size=4, maxsize=4
End

Begin Message, ETS CP RCP MFPA SET SIMPLE ATTR Cmd
    AttributeId, uint16,  base=enum:MfpaSimpleAttr
    FlowNN, uint8
    Value, uint16
End

Begin Message, ETS CP RCP MFPA SET FlowNNIdentification Attr Cmd
    Direction, uint8, base=enum:0[Rev]/1[Fwd]
    FlowNN, uint8
    Active, uint8
    SequenceLength, uint8
    RLPIDLength, uint8
    RLPID, uint32
End

Begin Message, ETS CP RCP MFPA SET FlowNNReservation Attr Cmd
    Direction, uint8, base=enum:0[Rev]/1[Fwd]
    FlowNN, uint8
    ReservationCount, uint8
    ReservationLabel, array, type=uint8,maxsize=15
End

Begin Message, ETS CP RCP MFPA SET FlowNNTimers Attr Cmd
    Direction, uint8, base=enum:0[Rev]/1[Fwd]
    FlowNN, uint8
    AbortTimer, uint16
    FlushTimer, uint16
End

Begin Message, ETS CP RCP MFPA SET SupportedHLProtocols Attr Cmd
    ProtocolCount, uint8
    ProtocolIdentifier, array, type=uint8, maxsize=4
End

Begin Message, ETS CP RCP MFPA SET QoSProfiles Attr Cmd
    Profilenum, uint8
    ProfileId, array, type=uint16,maxsize=6
    QoSBlobNum, uint8
    QoSBlob, record, type=QoSBlob Rec, maxsize=10
End

Begin Record, QoSBlob Rec
    Direction, uint8, base=enum:0[Bi]/1[Rev]/2[Fwd]
    FlowType, uint8, base=enum:FlowType Enum
    Label, uint8
    Priority, uint8
    AttrSetNum, uint8
    AttriId1, uint8
    AttriId2, uint8
    AttriId3, uint8
    AttriId4, uint8
    bIpV4, uint8, base=enum:0[FALSE]/1[TRUE]
    PrecedenceIndex, uint8
    DestPortNum, uint16
    ProNumOrNHdr, uint8, base=enum:RFC Protocol Numbers
    Spi, uint32
    TrafficClass, uint8
    TrafficMask, uint8
    FlowLabel, uint32
End

Begin Message, ETS CP RCP MFPA IPFLOW Request Cmd
    AppType, uint8, base=enum:FlowType Enum
    Direction, uint8, base=enum:0[Bi]/1[Rev]/2[Fwd]
End

Begin Message, ETS CP RCP MFPA Read QoSProfiles Cmd
End

Begin Message, ETS CP RCP MFPA SET Current Label Cmd
    Label, uint8
End

Begin Message, ETS CP RCP MFPA Reservation Cmd
    bOn, uint8, base=enum:0[Off]/1[Open]
    Count, uint8
    Link, uint8, base=enum:0[Rev]/1[Fwd]
    Label, uint8
End

Begin Message, ETS CP RCP MFPA Delete IPFlow Cmd
    Direction, uint8, base=enum:0[Bi]/1[Rev]/2[Fwd]
    Label, uint8
End

Begin Message, ETS CP RCP MFPA PPP OPEN cmd
End

Begin Message, ETS CP RCP MFPA RLP STATS RESET Cmd
End

Begin Message, ETS CP RCP MFPA RLP STATS PEEK Cmd
End

Begin Message, ETS CP RCP MFPA SEND DOS Cmd
    App Type, uint8, base=enum:App Type
    RLP Flow Id, uint8
    Route, uint8, base=enum: Route A/Route B
    Resv Label, uint8
    AckRequired, uint8, base=enum:FALSE/TRUE
    Reset indication, uint8, base=enum:FALSE/TRUE
    Data Len, uint8
    Dos Data, array, type=uint8, maxsize=100, columns=50
End

Begin Message, ETS CP RCP TAP TEST INIT Cmd
    AppType, uint8
    StreamNum, uint8
    AutomaticCallSetup, uint8, base=enum:FALSE/TRUE
    TestMode, uint8,        base=enum:FTAP/RTAP/BOTH
End

Begin Message, ETS CP RCP TAP CONN CLOSE Cmd
    TestMode, uint8,        base=enum:FTAP/RTAP/BOTH
End

Begin Message, ETS CP RCP Get Gain Scale Cmd
    Rev Channel Scale, uint8,  base=enum:Rev Channel Scale
End

Begin Message, ETS CP RCP Set Gain Scale Cmd
    Rev Channel Scale, uint8,  base=enum:Rev Channel Scale
    Mode, uint8,  base=enum:Auto/Manual
    Scale Format, uint8,  base=enum:dB/Linear/Register
    Gain Value (dB), int16,  scale=Q7, min=-16.000000, max=32.000000
    Gain Value (linear), uint16, scale=Q7
    Register Value, uint16, base=16
End

Begin Message, ETS CP RCP Get Tx Gain Delay Vars Cmd
    Delay Control Unit, uint8,  base=enum:Delay Control Unit
End

Begin Message, ETS CP RCP Set Tx Gain Delay Vars Cmd
    Delay Control Unit, uint8,  base=enum:Delay Control Unit
    Mode, uint8,  base=enum:Auto/Manual
    RevProtocol, uint8,  base=enum:Rev0/RevA
    Delay Hardware, uint8,  base=enum:Delay Hardware Unit
    LowToMed Slot Value, uint16, base=16
    MedToLow Slot Value, uint16, base=16
    MedToHigh Slot Value, uint16, base=16
    HighToMed Slot Value, uint16, base=16
    LowToMed Hslot Value, uint16, base=16
    MedToLow Hslot Value, uint16, base=16
    MedToHigh Hslot Value, uint16, base=16
    HighToMed Hslot Value, uint16, base=16
    SlotGainOffset, int16, base=16
    HslotGainOffset, int16, base=16
End

Begin Message, ETS CP RCP Get Tx Clip Level Cmd
End

Begin Message, ETS CP RCP Set Tx Clip Level Cmd
    Tx Clip Level, uint16, base=16, max=0x03FF
End

Begin Message, ETS CP RCP Test Tx Gain Switch Cmd
    Tx Gain State, uint8,  base=enum:Low Gain/Medium Gain/High Gain
    Power (dBm), int16,  scale=Q7
    Latch Boundary, uint8,  base=enum:Immediate/Slot/Half-Slot
End

Begin Message, ETS CP RCP Get Tx Delay Load Window Cmd
End

Begin Message, ETS CP RCP Set Tx Delay Load Window Cmd
    Tx Delay Load Window, uint16, base=16, max=0x03FF
End

Begin Message, ETS CP_RCP_ETS_SET_HW_TRIGGER_MSG Cmd
    Trigger, uint8,  base=enum:disable/Access/Traffic
    FrameDelay, uint8, base=10
    LongCodeMIL0, uint16, base=16
    LongCodeMIL1, uint16, base=16
    LongCodeMIH0, uint16, base=16
End

Begin Message, ETS CP_RCP_ETS_GET_CL_RANGE_MSG Cmd
End

Begin Message, ETS CP_RCP_ETS_SET_CL_RANGE_MSG Cmd
    UpLimit, uint8, base=10, default=40
    DownLimit, uint8, base=10, default=34
    UseC2IThr, uint8,  base=enum:FALSE/TRUE
    C2IThr, int16,  base=10, default=512
End

Begin Message, ETS CP_RCP_ETS_GET_TX_AVAIL_PWR_MSG Cmd
End

Begin Message, ETS CP_RCP_ETS_SET_TX_AVAIL_PWR_MSG Cmd
    PwrMarginQ7, int16, base=10, default=0
End

Begin Message, ETS CP_RCP_ETS_TX_AVAIL_PWR_TEST_MODE_MSG Cmd
    Mode, int8,  base=enum:Normal/NoAck/NoAckDsc
End

Begin Message, ETS CP_RCP_ETS_GET_TXHYST_CHANGE_POINT_MSG Cmd
End

Begin Message, ETS CP_RCP_ETS_SET_TXHYST_CHANGE_POINT_MSG Cmd
    UpLimit, int8, base=10, default=-10
    DownLimit, int8, base=10, default=-13
End

Begin Message, ETS CP_RCP_ETS_TX_RF_PERF_TEST_MODE_MSG Cmd
    Mode, int8,  base=enum:NormalMode/TestMode
End

Begin Message, ETS CP CSS Test Cfg Cmd
    Operation Mode, uint32,base=enum:Hybrid/1X Only/DO Only,default=Hybrid
    Hybrid Pref Mode, uint32,base=enum:1X Voice/Data Pref/VoIP,default=1X Voice
    Mpss_Duration, uint16,base=10,default=180
End

Begin Message, ETS CP CSS OOSA Set Parms Cmd
    Css Sub-Module, uint32,  base=enum:CssSubModule
    Power Saving Stage, uint32,  base=enum:CpsmOOSAStage
    Phase, uint8,  base=10
    Scan Method, uint32,  base=enum:CpsmOOSAScanMethod
    Scan Time for Timer Method (Secs), uint32, base=10
    Number of Cycles, uint8,  base=10
    Delay between Cycles (Secs), uint32, base=10
End

Begin Message, ETS CP CSS Clear 1X MRU Cmd
End

Begin Message, ETS CP CSS Clear DO MRU Cmd
End

Begin Message, ETS CP CSS OOSA Set Enable Cmd
    Css Sub-Module, uint32,  base=enum:CssSubModule, indent = 1
    Enable OOSA, uint8, base=enum:DISABLED/ENABLED
End

Begin Message, ETS CP CSS OOSA Get Enable Cmd
    Css Sub-Module, uint32,  base=enum:CssSubModule, indent = 1
End

Begin Message, ETS CP CSS OOSA Get Parms Cmd
    Css Sub-Module, uint32,  base=enum:CssSubModule, indent = 1
    Power Saving Stage, uint32,  base=enum:CpsmOOSAStage, indent = 1
    Phase, uint8,  base=10, indent = 1
End

Begin Message, ETS CP CSS OOSA Set Num Phases Cmd
    Css Sub-Module, uint32,  base=enum:CssSubModule, indent = 1
    Power Saving Stage, uint32,  base=enum:CpsmOOSAStage, indent = 1
    Number of Phases, uint8,  base=10, indent = 1
End

Begin Message, ETS CP CSS OOSA Get Num Phases Cmd
    Css Sub-Module, uint32,  base=enum:CssSubModule, indent = 1
    Power Saving Stage, uint32,  base=enum:CpsmOOSAStage, indent = 1
End

Begin Message, ETS CP CSS OOSA Set Current Stage Cmd
    Css Sub-Module, uint32,  base=enum:CssSubModule, indent = 1
    Power Saving Stage, uint32,  base=enum:CpsmOOSAStage, indent = 1
    Power Saving Phase, uint8,  base=10, indent = 1
    Cycle, uint8,  base=10, indent = 1
End

Begin Message, ETS CP CSS OOSA Get Current Stage Cmd
    Css Sub-Module, uint32,  base=enum:CssSubModule, indent = 1
End

Begin Message, ETS CP CSS Get MCC Cmd
    System, uint32,  base=enum:CssSystem, indent = 1
End

Begin Message, ETS CP Init CSS DBM Cmd
    CSS DBM Id, uint32,  base=enum:CssDbmId,default=ALL
End

Begin Message, ETS CP EAKA TEST AUTH CMD Cmd
    Rand, array, type=uint8, maxsize=16, size=16
    Autn, array, type=uint8, maxsize=16, size=16
End

Begin Message, ETS CP EAKA TEST MK DERIVE CMD Cmd
    Identify, array, type=uint8, maxsize=72, size=72
    Ck, array, type=uint8, maxsize=16, size=16
    Ik, array, type=uint8, maxsize=16, size=16
End

Begin Message, ETS CP EAKA TEST REAUTHXKEY DERIVE CMD Cmd
    Identify, array, type=uint8, maxsize=72, size=72
    Counter, array, type=uint8, maxsize=2,  size=2
    Nonces, array, type=uint8, maxsize=16, size=16
    Mk, array, type=uint8, maxsize=20, size=20
End

Begin Message, ETS CP EAKA TEST MSK DERIVE CMD Cmd
    Mk, array, type=uint8, maxsize=20, size=20
End

Begin Message, ETS CP EAKA TEST MAC DERIVE CMD Cmd
    K_aut, array, type=uint8, maxsize=32, size=32
    MsgBodyLen, uint8, base=10, default=0
    MsgBody, array, type=uint8, maxsize=100, size=100
    ExtraMsgBodyLen, uint8, base=10, default=0
    ExtraMsgBody, array, type=uint8, maxsize=16, size=16
End

Begin Message, ETS CP EAKA TEST PMK DERIVE CMD Cmd
    Key, array, type=uint8, maxsize=16, size=16
    Msk, array, type=uint8, maxsize=16, size=16
End

Begin Message, ETS CP EAKA TEST AES CRYPT CMD Cmd
    bEncrypt, uint8, base=enum:No/Yes
    Key, array, type=uint8, maxsize=16, size=16
    Iv, array, type=uint8, maxsize=16, size=16
End

Begin Message, ETS CP EAKA TEST SQN INIT CMD Cmd
End

Begin Message, ETS CP TLS TEST ANON Cmd
    Cipher Pri, string, length=256, columns=256, rows=1
End

Begin Message, ETS CP TLS TEST X509 Cmd
    Cipher Pri, string, length=256, columns=256, rows=1
End

Begin Message, ETS CP MMD Camera Mode Set Cmd
    Mode, uint8,base=10
End

Begin Message, ETS CP MMD Camera Preview PropSet Cmd
    EffectIndex, uint32,  	default=0
    SepiaU, uint32,  	default=0
    SepiaV, uint32,  	default=0
    OilLevel, uint32,  	default=0
    SolarThreshold, uint32,  	default=0
    Zoom, uint32,		default=0
    Rotate, uint32,		default=0
    Scene, uint32,		default=0
    Mode, uint32,		default=0
    FPSMax, uint32,		default=15
    FPSMin, uint32,		default=7
    LcdTarget, uint32,         default=0
    Frame, uint32,		default=0
    Brightness, uint32,		default=0
    Contrast, uint32,		default=0
    WhiteBlance, uint32,		default=0
    Size, uint32,		default=0
End

Begin Message, ETS CP MMD Camera Preview Cmd
End

Begin Message, ETS CP MMD Camera Preview Stop Cmd
End

Begin Message, ETS CP MMD Camera Palette Update Cmd
End

Begin Message, ETS CP MMD Camera OSD Update Cmd
End

Begin Message, ETS CP MMD Camera Capture PropSet Cmd
    Quality, uint32,		default=0
    StickStatus, uint32,		default=0
End

Begin Message, ETS CP MMD Camera Capture Cmd
End

Begin Message, ETS CP MMD Camera Capture Stop Cmd
End

Begin Message, ETS CP MMD Camera Capture Save Cmd
    Name, string,		size=end,	columns=20
End

Begin Message, ETS CP MMD Camera Capture Info Get Cmd
End

Begin Message, ETS CP MMD Camera Capture Save Host Cmd
End

Begin Message, ETS CP MMD Camera Video Record PropSet Cmd
    Quality, uint32,		default=0
End

Begin Message, ETS CP MMD Camera Video Record Cmd
    Name, string,		size=end,	columns=20
End

Begin Message, ETS CP MMD Camera Video Record Stop Cmd
End

Begin Message, ETS CP MMD Camera Playback Start Cmd
End

Begin Message, ETS CP MMD Camera Playback Pause Cmd
End

Begin Message, ETS CP MMD Camera Playback Resume Cmd
End

Begin Message, ETS CP MMD Camera Playback Position Get Cmd
End

Begin Message, ETS CP MMD Camera Playback Position Set Cmd
    Pos, uint16,base=10
End

Begin Message, ETS CP MMD Camera Playback Stop Cmd
End

Begin Message, ETS CP MMD Camera Playback PropSet Cmd
    Rotate, uint32,		default=0
    RectX, uint32, 	default=0
    RectY, uint32,  	default=0
    RectWidth, uint32,  	default=240
    RectHeight, uint32,  	default=320
    ClipX, uint32,  	default=0
    ClipY, uint32,  	default=0
    ClipWidth, uint32,  	default=0
    ClipHeight, uint32,  	default=0
    NonOverlapOp, uint32,  	default=0
    BitBltMode, uint32,  	default=0
    BlendingMode, uint32,  	default=0
    BlendingParam, uint32,  	default=0
    EffectIndex, uint32,  	default=0
    SepiaU, uint32,  	default=0
    SepiaV, uint32,  	default=0
    OilLevel, uint32,  	default=0
    SolarThreshold, uint32,  	default=0
End

Begin Message, ETS CP MMD Camera JPEG Capture Playback Cmd
End

Begin Message, ETS CP MMD Camera JPEG Playback Cmd
    Name, string,		size=end,	columns=20
End

Begin Message, ETS CP MMD Camera JPEG Decode By Name Cmd
    Name, string,		size=end,	columns=20
End

Begin Message, ETS CP MMD Camera JPEG Decode Cmd
End

Begin Message, ETS CP MMD Camera Color Conversion Cmd
    Cmd, uint32,		default=0
    Rotate, uint32,		default=0
    SrcWidth, uint32,		default=128
    SrcHeight, uint32,		default=96
    SrcDataWidth, uint32,		default=160
    SrcDataHeight, uint32,		default=96
    DestX, uint32,		default=0
    DestY, uint32,		default=0
    DestWidth, uint32,		default=240
    DestHeight, uint32,		default=320
End

Begin Message, ETS MMC_RAT_API_POWERUP_RSP Cmd
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS MMC_RAT_API_POWERDOWN_RSP Cmd
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS MMC_RAT_API_CMD_REJ_IND Cmd
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS MMC_RAT_API_RAT_ONLY_MODE_RSP Cmd
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS MMC_RAT_API_RAT_3GPP_MODE_RSP Cmd
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS MMC_RAT_API_ACQ_RSP Cmd
    RatId, uint8,    base=enum:GmssRatId
    AcquisitonResult, uint8,    base=enum:IratRatLteAcqResultT, default=MMC_ACQFAILED
    PriorityClass, uint8,    base=enum:IratPriorityClassT,   default=SYS_UNAVAILABLE
    Mcc, uint16,   base=10
    Mnc, uint16,   base=10
    Valid, uint8,    base=enum:NotValid/valid
    RatSysInfo, record,   type=Mmc3GppRatInfoT, maxsize=1
End

Begin Record, Mmc3GppRatInfoT
    Earfcn, uint16
    Plmn, uint32
End

Begin Message, ETS MMC_RAT_API_MCC_SEARCH_RSP Cmd
    RatId, uint8, base=enum:GmssRatId
    Mcc, uint16, base=10
    Mnc, uint16, base=10
    Valid, uint8, base=enum:FALSE/TRUE
End

Begin Message, ETS MMC_RAT_API_PS_REG_RSP Cmd
    RatId, uint8,      base=enum:GmssRatId
    PsRegResult, uint8,      base=enum:RatRegResultT,      default=RAT_REG_REGISTERED
    PsType, uint8,      base=enum:IratRatLtePsTypeT,  default=MMC_PSTYPE_LTE
    SystemPriority, uint8,      base=enum:IratPriorityClassT, default=MMC_PRI_HOME
End

Begin Message, ETS MMC_RAT_API_NO_SERVICE_RSP Cmd
    RatId, uint8, base=enum:GmssRatId
    Status, uint8, base=10
End

Begin Message, ETS MMC_RAT_API_NTW_ST_CHG_IND Cmd
    RatId, uint8, base=enum:GmssRatId
    Status, uint8, base=enum:IratRatCpStatusT
    Cause, uint8, base=enum:IratRatStatusIndCauseT
    SysPri, uint8, base=enum:IratPriorityClassT, default=MMC_PRI_HOME
    PsType, uint8, base=enum:IratRatLtePsTypeT,  default=MMC_PSTYPE_LTE
    Mcc, uint16,   base=10
    Mnc, uint16,   base=10
    RatInfoValid, uint16,   base=enum:FALSE/TRUE
    SysInfo, record, type=MmcLTESysInfoT, maxsize=1
End

Begin Record, MmcLTESysInfoT
    Earfcn, uint16,  base=10
    PriorityClass, uint8,   base=enum:IratPriorityClassT, default=MMC_PRI_HOME
    PlmnId, uint32,  base=10
End

Begin Message, ETS MMC_RAT_API_CELL_GLOBAL_ID_REQ Cmd
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS MMC_RAT_API_DATACONNECTION_CMD_RSP Cmd
    RatId, uint8,  base=enum:GmssRatId
    Respond with, uint8,  base=enum:Data Response Type
End

Begin Message, ETS MMC_RAT_API_DEFAULTBEARER_RSP Cmd
    RatId, uint8,   base=enum:GmssRatId
    PDN Id, uint8,   base=16
    Bearer Id, uint8,   base=16
    Status, uint8,   base=enum:AP Status Type
    Addr Type, uint8,   base=enum:Attach Address Type
    Local IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    Local IPv4 Addr, array,   type=uint8, maxsize=4, size=4
    PCSCF6 Number, uint8,   base=16
    PCSCF1 IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    PCSCF2 IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    PCSCF3 IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    PCSCF4 IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    DNS6 Number, uint8,   base=16
    DNS1 IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    DNS2 IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    DNS3 IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    DNS4 IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    PCSCF4 Number, uint8,   base=16
    PCSCF1 IPv4 Addr, array,	  type=uint8, maxsize=4, size=4
    PCSCF2 IPv4 Addr, array,	  type=uint8, maxsize=4, size=4
    PCSCF3 IPv4 Addr, array,	  type=uint8, maxsize=4, size=4
    PCSCF4 IPv4 Addr, array,	  type=uint8, maxsize=4, size=4
    DNS4 Number, uint8
    DNS1 IPv4 Addr, array,   type=uint8, maxsize=4, size=4
    DNS2 IPv4 Addr, array,   type=uint8, maxsize=4, size=4
    DNS3 IPv4 Addr, array,   type=uint8, maxsize=4, size=4
    DNS4 IPv4 Addr, array,   type=uint8, maxsize=4, size=4
    Route Addr, uint32
    IPv6 IID, array,	  type=uint8, maxsize=8, size=8
    Sel Bearer Ctrl Mode, uint8
    Error Code, uint8,  base=enum:PDN ErrCode Type
End

Begin Message, ETS MMC_RAT_API_DEDICATEDBEARER_IND Cmd
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS MMC_RAT_API_DEDICATEDBEARER_RSP Cmd
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS MMC_RAT_API_BEARER_DISCONNECT_RSP Cmd
    RatId, uint8, base=enum:GmssRatId
    PDN id, uint8
    Bearer id, uint8
    Status, uint8, base=enum:No prior connection existed/Successful
End

Begin Message, ETS MMC_RAT_API_BEARER_DISCONNECT_IND Cmd
    RatId, uint8, base=enum:GmssRatId
    PDN id, uint8
    Bearer id, uint8
End

Begin Message, ETS MMC_RAT_API_BEARER_DETACH_RSP Cmd
    RatId, uint8, base=enum:GmssRatId
    Status, uint8, base=enum:No prior connection existed/Successful
End

Begin Message, ETS MMC_RAT_API_IRAT_MEAS_CMD Cmd
    RatId, uint8,  base=enum:GmssRatId
    NumberOfMeas, uint8
    SystemType, uint8, base=enum:System Type, default=SYSTEM_CDMA
    Period, uint32, base=10, default=0
    MeasureObj, record, type=MmcGeranMeasObjectInfoT, maxsize=8
End

Begin Record, MmcGeranMeasObjectInfoT
    MeasObjId, uint8
    StartingArfcn, uint16
    BandInd, uint8, base=enum:GeranBandIndT
    ArfcnType, uint8, base=enum:GeranArfcnT
    Number, uint8
    ArfcnFreq, array, type=uint16, maxsize=32, size=32
    offsetFreq, uint16
    nccPermit, uint8
    bCgiRpt, uint8, type=enum:FALSE/TRUE
    NwColorCode, uint8
    BsColorCode, uint8
End

Begin Message, ETS MMC_RAT_API_IRAT_SYSTEM_CHG_REQ Cmd
    RatId, uint8, base=enum:GmssRatId
    Cause, uint8, base=enum:MmcIratHOCauseT
    Target System, uint8, base=enum:MmcSystemTypeT
    GeranCarrierInfo, record, type=MmcCarrierInfoGeran, maxsize=1
End

Begin Record, MmcCarrierInfoGeran
    Arfcn, uint16,  base=10
    BandInd, uint8, base=enum:GeranBandIndT
    NwColorCode, uint8
    BsColorCode, uint8
    Mcc, uint16
    Mnc, uint16
    locationAreaCode, uint16
    cellId, uint16
    routingAreaCode, uint8
End

Begin Message, ETS MMC_RAT_API_IRAT_SIB8_MEAS_CMD Cmd
    RatId, uint8,  base=enum:GmssRatId
    Period, uint32, base=10, default=0
    Type, uint8,  base=enum:MmcCdmaTypeT, default=MMC_IRAT_HRPD
    SearchWinSize, uint8,  base=10, default=0
    ListSize, uint8,  base=10, default=0
    CellList, record, type=MmcSIB8MeasCellListT, maxsize=10, size=ListSize
End

Begin Record, MmcSIB8MeasCellListT
    CellToReportCgi, uint16, base=10, default=0
    Band, uint8,  base=10, default=0
    Channel, uint16, base=10, default=0
    CellReselPri, uint8,  base=10, default=0
    NumPn, uint8,  base=10, default=0
    Pn[0], uint16, base=10, default=0
    Pn[1], uint16, base=10, default=0
    Pn[2], uint16, base=10, default=0
    Pn[3], uint16, base=10, default=0
    Pn[4], uint16, base=10, default=0
    Pn[5], uint16, base=10, default=0
    Pn[6], uint16, base=10, default=0
End

Begin Message, ETS MMC_RAT_API_RAT_MEASIND Cmd
    RatId, uint8,  base=enum:GmssRatId
    MsgLength, uint16
    MeasResultNum, uint8,  base=10, default=0
    SystemType, uint8,  base=enum:MmcSystemTypeT
    MeasResultList, record, type=MmcIratGERANMeasResultRecT, maxsize=7
End

Begin Record, MmcIratGERANMeasResultRecT
    Result, uint8,   base=enum:MmcMeasStatusResultT, default=MMC_MEAS_SUCCESS
    MeasObjId, uint8
    Arfcn, uint16,  base=10
    BandInd, uint8,   base=enum:GeranBandIndT
    NwColorCode, uint8
    BsColorCode, uint8
    Mcc, uint16
    Mnc, uint16
    locAreaCode, uint16
    cellId, uint16
    routingAreaCode, uint8
    rssi, uint8
End

Begin Message, ETS MMC_RAT_API_RAT_RESELMEASIND Cmd
    RatId, uint8,  base=enum:GmssRatId
    SystemType, uint8,  base=enum:MmcSystemTypeT
    NumberOfMeas, uint8,  base=10, default=1
    GeranMeasResultList, record, type=MmcIratGERANReselMeasResultRecT, maxsize=1
End

Begin Record, MmcIratGERANReselMeasResultRecT
    Result, uint8,   base=enum:MmcMeasStatusResultT, default=MMC_MEAS_SUCCESS
    Arfcn, uint16,  base=10
    BandInd, uint8, base=enum:GeranBandIndT
    NwColorCode, uint8
    BsColorCode, uint8
    CgiMCC, uint16
    CgiMNC, uint16
    locAreaCode, uint16
    cellId, uint16
    srxLev, uint8
End

Begin Message, ETS MMC_RAT_API_STOP_IRAT_MEAS_CMD Cmd
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS MMC_RAT_API_CELL_INFO_PS_REG_RSP Cmd
    RatId, uint8, base=enum:GmssRatId
    Result, uint8, base=enum:MmcRatStatusT, default=MMC_IRAT_SUCCESS
    TargetSystem, uint8, base=enum:MmcSystemTypeT
    PriClass, uint8, base=enum:IratPriorityClassT, default=MMC_PRI_HOME
    MCC, uint16,
    MNC, uint16,
    RatInfoValid, uint8, base=enum:NotValid/valid
    RatSysInfo, record, type=Mmc3GppRatInfoT, maxsize=1
End

Begin Message, ETS MMC_RAT_API_CDMA_TXPWR_REQ Cmd
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS MMC_RAT_API_RAT_HANDOVER_PS_REG_RSP Cmd
    RatId, uint8, base=enum:GmssRatId
    Result, uint8, base=enum:MmcRatStatusT, default=MMC_IRAT_SUCCESS
    TargetSystem, uint8, base=enum:MmcSystemTypeT, default=MMC_IRAT_LTE
    PriorityClass, uint8, base=enum:IratPriorityClassT,   default=SYS_UNAVAILABLE
    Mcc, uint16
    Mnc, uint16
    RatInfoValid, uint8, base=enum:NotValid/Valid
    RatInfo, record,type=Mmc3GppRatInfoT, maxsize=1
End

Begin Message, ETS MMC_RAT_API_IRAT_HANDOVER_REQ Cmd
    RatId, uint8, base=enum:GmssRatId
    Cause, uint8, base=enum:MmcIratHOCauseT
    TargetSystem, uint8, base=enum:MmcSystemTypeT, default=MMC_IRAT_LTE
    HoInfo, record, type=MmcGeranHoInfo, maxsize=1
End

Begin Record, MmcGeranHoInfo
    RRCtranId, uint8
    MsgLen, uint16
    MsgContainer, array, type=uint8, maxsize=256, size=256
    NasSecParmFromEutrn, uint8
    lenth, uint8
    SystemInfo, array, type=uint8, maxsize=10, size=10
    T304, uint8, base=enum:GeranT304T
    NwColorCode, uint8
    BsColorCode, uint8
    Arfcn, uint16,  base=10
    CarrierBandInd, uint8, base=enum:GeranBandIndT
    NwCtrlOrder, uint8
    LengthSysInfo, uint8
    SysInfo, array, type=uint8, maxsize=10, size=10
    BandInd, uint8, base=enum:GeranBandIndT
    MsgAuthCode, uint32
    RrcMsgSeqNum, uint8
End

Begin Message, ETS MMC_RAT_API_IRAT_RESELMEAS_CMD Cmd
    RatId, uint8, base=enum:GmssRatId
    MeasObjectType, uint8, base=enum:MmcSystemTypeT,
    NumOfMeas, uint8
    Period, uint32
    GeranReselCmd, record, type=MmcMeasReselGeranT, maxsize=1
End

Begin Record, MmcMeasReselGeranT
    StartingArfcn, uint16
    BandInd, uint8, base=enum:GeranBandIndT
    ArfcnType, uint8, base=enum:GeranArfcnT
    Number, uint8
    ArfcnFreq, array, type=uint16, maxsize=32, size=32
    nccPermitted, uint8
    qRxLevMin, uint8
    pMaxGeran, uint8
    ThreshXhi, uint8
    ThreshXlo, uint8
End

Begin Message, ETS MMC_RAT_API_SET_IDLEMODEMOBILITYINFO Cmd
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS MMC_RAT_API_PACKET_STATISTICS_REQ Cmd
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS MMC_RAT_API_PDN_TABLE_SETUP_RSP Cmd
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS MMC_RAT_API_MODE_RSP Cmd
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS MMC_AP_MBIM_READY_STATUS_QUERY Cmd
    CmdId, uint8, base=10
End

Begin Message, ETS MMC_AP_MBIM_RADIO_STATE_SET_REQ Cmd
    SwRadioSt, uint8, base=enum:MmcRadioSwitchStateT, default=RadioOn
End

Begin Message, ETS MMC_AP_MBIM_RADIO_STATE_QUERY Cmd
    CmdId, uint8, base=10
End

Begin Message, ETS MMC_AP_MBIM_INIT_REQ Cmd
    ValidApnCount, uint32, base=10, default=1
    APNattribute, record, type=APN Attribute Rec, maxsize=5
End

Begin Record, APN Attribute Rec
    PDNid, uint32, base=10
    APNString, string, length=20
    APNclass, uint32, base=10
    APNenable, uint32, base=enum:Disable/Enable, default=Enable
    APNinactTmer, uint32, base=10
End

Begin Message, ETS MMC_AP_MBIM_CONNECT_STATE_REQ Cmd
    SessionId, uint32, default=1
End

Begin Message, ETS MMC_AP_MBIM_CONNECT_REQ Cmd
    SessionId, uint32, default=1
    ActivationCmd, uint32, base=enum:Disconnect/Connect, default=Connect
    Compression, uint32, base=enum:None/Enabled, default=Enabled
    IPType, uint32, base=enum:IPAddrType, default=IPv4_IPv6_Dual
    Context, array,  type=uint8, maxsize=16
    PDNid, uint32, default=1
End

Begin Message, ETS RFC_LTE_DO_RF_RSP Cmd
    needTx, uint8, base=enum:No/Yes, default=No
    ReqAnt, uint8, base=enum:AntennaT
    ErrCode, uint8, base=enum:rfcErrT
End

Begin Message, ETS RFC_LTE_RF_REQ Cmd
    requestTx, uint8, base=enum:False/True, default=TRUE
    ReqAnt, uint8, base=enum:AntennaT, default=LTE_Main_Antenna
    Action, uint8, base=enum:RfcActionT
    LTE_Band_Main, uint8, base=enum:LTEbandT
    LTE_Band_Div, uint8, base=enum:LTEbandT
End

Begin Message, ETS RFC_LTE_RELEASE_RF_IND Cmd
    Released Antenna, uint8, base=enum:AntennaT, default=LTE_Main_Antenna
End

Begin Message, ETS RFC_LTE_BAND_REQ Cmd
    LTE_Band_Main, uint8, base=enum:LTEbandT
    LTE_Band_Div, uint8, base=enum:LTEbandT
End

Begin Message, ETS CP Default Bearer Attach Req Cmd
    PDN Id, uint8,   base=16
    PDN Type, uint8,   base=enum:Attach Address Type
    Attach Type, uint8,	  base=enum:Attaching Action Type
    PDN IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    PDN IPv4 Addr, array,   type=uint8, maxsize=4, size=4
    Default Router, array,	  type=uint8, maxsize=4, size=4
    PDP Flag, uint8,   base=enum:PDP Type
    APN Length, uint8,   base=16
    APN Name, string,  size=end, columns=24, default=VZWIMS
End

Begin Message, ETS CP Default Bearer Attach Rsp Cmd
    PDN Id, uint8,   base=16
    Bearer Id, uint8,   base=16
    Status, uint8,   base=enum:AP Status Type
    Addr Type, uint8,   base=enum:Attach Address Type
    Local IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    Local IPv4 Addr, array,   type=uint8, maxsize=4, size=4
    PCSCF6 Number, uint8,   base=16
    Padding1, uint8
    Padding2, uint16
    PCSCF1 IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    PCSCF2 IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    DNS6 Number, uint8,   base=16
    Padding3, uint8
    Padding4, uint16
    DNS1 IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    DNS2 IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    PCSCF4 Number, uint8,   base=16
    Padding5, uint8
    Padding6, uint16
    PCSCF1 IPv4 Addr, array,	  type=uint8, maxsize=4, size=4
    PCSCF2 IPv4 Addr, array,	  type=uint8, maxsize=4, size=4
    DNS4 Number, uint8
    Padding7, uint8
    Padding8, uint16
    DNS1 IPv4 Addr, array,   type=uint8, maxsize=4, size=4
    DNS2 IPv4 Addr, array,   type=uint8, maxsize=4, size=4
    Route Addr, uint32
    IPv6 IID, array,	  type=uint8, maxsize=8, size=8
    Sel Bearer Ctrl Mode, uint8
    Error Code, uint8,  base=enum:PDN ErrCode Type
    Padding9, uint16
    Modem, uint32,  base=enum:CL modem type
End

Begin Message, ETS CP HO State Ind Cmd
    From module, uint8,  base=enum:sub module type
    HO Target, uint8,  base=enum:HO Network Type
    HO action, uint8,  base=enum:HO Action Type
End

Begin Message, ETS CP PS REQ Cmd
    From module, uint8, base=enum:sub module type
    HO Target, uint8, base=enum:HO Network Type
End

Begin Message, ETS CP PS Disconnect Req Cmd
    PDN Id, uint8,  base=16
    Bearer Id, uint8,  base=16
    HRPD or 1X call, uint8,  base=enum:Yes No Type
End

Begin Message, ETS CP PS Detach Req Cmd
End

Begin Message, ETS CP PS Disconnect Rsp Cmd
    PDN Id, uint8,  base=16
    Bearer Id, uint8,  base=16
    Status, uint8,  base=enum:Disconnect Response Type
End

Begin Message, ETS CP Data Cmd Resp Cmd
    From RAT, uint32,  base=enum:GmssRatId
    Respond with, uint8,  base=enum:Data Response Type
End

Begin Message, ETS CP MMC_MEAS_LTE_SIB8_MEAS_CMD Cmd
    Period, uint32, base=10, default=0
    Type, uint8, base=enum:MmcCdmaTypeT, default=MMC_IRAT_HRPD
    SearchWinSize, uint8, base=10, default=0
    ListSize, uint8, base=10, default=0
    CellList, record, type=MmcSIB8MeasCellListT, maxsize=10
End

Begin Message, ETS CP MMC_MEAS_IRAT_MEAS_CMD Cmd
    MeasObjectNum, uint8, base=10, default=0
    MeasObjectInfo, record, type=MmcMeasObjectCdmaT, maxsize=8
End

Begin Record, MmcMeasObjectCdmaT
    Period, uint32, base=10, default=0
    Type, uint8, base=enum:MmcCdmaTypeT, default=MMC_IRAT_HRPD
    CellToReportCgi, uint16, base=10, default=0
    Band, uint8, base=10, default=0
    Channel, uint16, base=10, default=0
    SearchWinSize, uint8, base=10, default=0
    NumPn, uint8, base=10, default=0
    Pn[0], uint16, base=10, default=0
    Pn[1], uint16, base=10, default=0
    Pn[2], uint16, base=10, default=0
    Pn[3], uint16, base=10, default=0
    Pn[4], uint16, base=10, default=0
    Pn[5], uint16, base=10, default=0
    Pn[6], uint16, base=10, default=0
End

Begin Message, ETS CP MMC_MEAS_LTE_SYSTEM_CHANGE_REQ Cmd
    Cause, uint8, base=enum:MmcIratHOCauseT, default=MMC_HO_INVALID
    TargetSystemType, uint8, base=enum:MmcSystemTypeT, default=MMC_SYSTEM_CDMA
    Type, uint8, base=enum:MmcCdmaTypeT, default=MMC_IRAT_HRPD
    Band, uint8, base=10, default=0
    Channel, uint16, base=10, default=0
    NumPn, uint8, base=10, default=0
    Pn, array, type=uint16, maxsize=16
End

Begin Message, ETS CP MMC_MEAS_CDMA_LTE_MEAS_INFO_IND Cmd
    LteInfoAvailable, uint8,  base=enum:Yes No Type, default=Yes
    MaxReselectionTimer, uint8,  base=16, default=0xff
    MinMeasurementBackoff, uint8,  base=16, default=0xff
    MaxMeasurementBackoff, uint8,  base=16, default=0xff
    ListSize, uint8,  base=10, default=0
    Padding1, uint8,  base=10, default=0
    Padding2, uint16,  base=10, default=0
    Eutra, record, type=IratEUTRANNeighborT, maxsize=7
    Type, uint8,  base=enum:MmcCdmaTypeT, default=MMC_IRAT_HRPD
    ServingPriority, uint8,  base=10, default=0
    ThreshServing, int8,   base=10, default=0
    Band, uint8,  base=10
    Channel, uint16, base=10
    PilotPn, uint16, base=10
    PilotPhase, int16,  base=10
    PilotStrength, int8,   base=10
End

Begin Record, IratEUTRANNeighborT
    Earfcn, uint16,  base=10
    EarfcnPri, uint8,   base=10
    ThreshX, uint8,   base=10
    RxLevMinEutra, int16,   base=10, default=0
    RxLevMinEutraOffset, uint8,   base=10, default=0
    PeMax, uint8,   base=10, default=10
    MeasBandWidth, uint8,   base=10, default=10
    NumPlmn, uint8,   base=10, default=0
    Padding2, uint16,  base=10, default=0
    PlmnId[0], uint32,  base=10, default=0
    PlmnId[1], uint32,  base=10, default=0
    PlmnId[2], uint32,  base=10, default=0
    PlmnId[3], uint32,  base=10, default=0
    PlmnId[4], uint32,  base=10, default=0
    PlmnId[5], uint32,  base=10, default=0
    PlmnId[6], uint32,  base=10, default=0
    PlmnId[7], uint32,  base=10, default=0
End

Begin Message, ETS CP MMC_MEAS_LTE_MEAS_RESULT_IND Cmd
    CmdType, uint8,  base=enum:MeasTypeT, default=MMC_IRAT_MEAS
    Result, uint8,  base=enum:MmcMeasResultStatusT, default=MMC_MEAS_RES_SUCCESS
    ListSize, uint8,  base=10, default=0
    Padding1, uint8,   base=10, default=0
    EutraMeasResultList, record, type=MmcIratEUTRANMeasResultRecT, maxsize=7
End

Begin Record, MmcIratEUTRANMeasResultRecT
    Result, uint8,   base=enum:MmcMeasStatusResultT, default=MMC_MEAS_SUCCESS
    MeasObjId, uint8
    Earfcn, uint16,  base=10
    PhyCellId, uint16,  base=10
    Mcc, uint16
    Mnc, uint16
    CellId, uint32
    TrackingAreaCode, uint16
    NumPlmn, uint8,   base=10, default=0
    Mcc[0], uint16
    Mnc[0], uint16
    Mcc[1], uint16
    Mnc[1], uint16
    Mcc[2], uint16
    Mnc[2], uint16
    Mcc[3], uint16
    Mnc[3], uint16
    Mcc[4], uint16
    Mnc[4], uint16
    Mcc[5], uint16
    Mnc[5], uint16
    Mcc[6], uint16
    Mnc[6], uint16
    Mcc[7], uint16
    Mnc[7], uint16
    Rsrp, uint8
    Rsrq, uint8
End

Begin Message, ETS CP MMC_MEAS_GMSS_MEAS_START_CNF Cmd
    CnfResult, record, type=MmcMeasStartCnfResultT, maxsize=1
End

Begin Record, MmcMeasStartCnfResultT
    Result, uint8,   base=enum:MmcMeasCnfResultT, default=MMC_MEAS_GO
End

Begin Message, ETS CP MMC_MEAS_GMSS_MEAS_END_CNF Cmd
End

Begin Message, ETS CP MMC_MEAS_GMSS_SERV_PS_WEAK_CNF Cmd
    PsWeakCnf, record, type=MmcMeasGmssEndIndT, maxsize=1
End

Begin Record, MmcMeasGmssEndIndT
    Result, uint8,   base=enum:MmcMeasStatusResultT, default=MMC_PS_NO_CHANGE
    TargetPsType, uint8,   base=enum:HO Network Type, default=No network
End

Begin Message, ETS CP MMC_MEAS_GMSS_PS_STATUS_IND Cmd
    PsStatusInd, record, type=MmcMeasPsStatusIndT, maxsize=1
End

Begin Record, MmcMeasPsStatusIndT
    TargetPsType, uint8,   base=enum:HO Network Type, default=No network
End

Begin Message, ETS CP MMC_MEAS_CDMA_IRAT_PS_REG_FREQ_RSP Cmd
    Status1X, uint8,		base=enum:IratCdmaStatusT, default=IRAT_REGISTERED
    StatusDO, uint8,		base=enum:IratCdmaStatusT, default=IRAT_REGISTERED
    TargetPsType, uint8,		base=enum:HO Network Type, default=eHRPD network
    SystemPriority, uint8,      base=enum:IratPriorityClassT, default=IRAT_ANY
End

Begin Message, ETS CP MMC_MEAS_LTE_IRAT_LTE_CELL_INFO_PS_REG_RSP Cmd
    Result, uint8,		base=enum:MmcIratStatusT, default=MMC_IRAT_SUCCESS
    TargetPsType, uint8,		base=enum:MmcSystemTypeT, default=MMC_SYSTEM_EUTRAN
    LTESysInfo, record,     type=MmcLTESysInfoT, maxsize=1
End

Begin Message, ETS CP MMC_MEAS_CDMA_IRAT_SERVING_MEAS_RSP Cmd
    CdmaSysType, uint8,		base=enum:MmcCdmaTypeT, default=MMC_IRAT_HRPD
    Band, uint8, 		base=10, default=0
    Channel, uint16, 	base=10, default=0
    PilotPn, uint16, 	base=10
    PilotPhase, int16,  	base=10
    PilotStrength, int8,   	base=10
    SystemPriority, uint8,      base=enum:IratPriorityClassT, default=IRAT_ANY
End

Begin Message, ETS CP MMC AP Set PDN Table Request Cmd
    PDN1 Id, uint8,  base=16
    PDN1 Type, uint8,  base=enum:Attach Address Type
    APN1 Name, string, length=20
    PDN2 Id, uint8,  base=16
    PDN2 Type, uint8,  base=enum:Attach Address Type
    APN2 Name, string, length=20
    PDN3 Id, uint8,  base=16
    PDN3 Type, uint8,  base=enum:Attach Address Type
    APN3 Name, string, length=20
    PDN4 Id, uint8,  base=16
    PDN4 Type, uint8,  base=enum:Attach Address Type
    APN4 Name, string, length=20
End

Begin Message, ETS CP MMC AP Set PDN PCO Auth Request Cmd
    Pdn Id, uint8,  base=16
    AuthMode, uint8,  base=enum:AUTHMODE_NULL/AUTHMODE_PAP/AUTHMODE_CHAP
    ModelName, string, length=72
    UserName, string, length=72
    LenPassword, uint8,  base=10
    Password, string, length=16
End

Begin Message, ETS CP MMC AP Data Call Set Up Cmd
    Prefer Mode, uint32,  base=enum:prefer settingT
    Packet Service, uint8,  base=enum:HO Network Type
    PDN Id, uint8,  base=10
End

Begin Message, ETS CP MMC_GMSS_CLEAR_GMRU_CMD Cmd
End

Begin Message, ETS CP MMC_DEBUG_STATUS_GET_CMD Cmd
    ModuleId, uint8,  base=enum:MMC Debug Module Id
End

Begin Message, ETS CP MMC_GMSS_TEST_MODE_CMD Cmd
    Mode, uint32,  base=enum:Gmss Test Modes
    Qualifier, uint16, base=enum:Off/On
    Value, uint16, base=10
End

Begin Message, ETS CP MMC_RAT_ACQ_RSP Cmd
    RatId, uint8,    base=enum:GmssRatId
    AcquisitonResult, uint8,    base=enum:IratRatLteAcqResultT, default=MMC_ACQFAILED
    SystemPriority, uint8,    base=enum:IratPriorityClassT,   default=SYS_UNAVAILABLE
End

Begin Message, ETS CP MMC_RAT_PS_REG_RSP Cmd
    RatId, uint8,      base=enum:GmssRatId
    PsRegResult, uint8,      base=enum:RatRegResultT,  default=LTE_REG_REGISTERED
    PsType, uint8,      base=enum:IratRatLtePsTypeT,  default=MMC_PSTYPE_LTE
    SystemPriority, uint8,      base=enum:IratPriorityClassT, default=MMC_PRI_HOME
End

Begin Message, ETS CP MMC_RAT_ONLY_MODE_RSP Cmd
    RatId, uint8,      base=enum:GmssRatId
    SystemPriority, uint8,      base=enum:IratPriorityClassT, default=MMC_PRI_HOME
    PsType, uint8,      base=enum:IratRatLtePsTypeT,  default=MMC_PSTYPE_LTE
End

Begin Message, ETS CP MMC_RAT_3GPP_MODE_RSP Cmd
    RatId, uint8,      base=enum:GmssRatId
    SystemPriority, uint8,      base=enum:IratPriorityClassT, default=MMC_PRI_HOME
    PsType, uint8,      base=enum:IratRatLtePsTypeT,  default=MMC_PSTYPE_LTE
End

Begin Message, ETS CP MMC_RAT_MCC_SRCH_RSP Cmd
    RatId, uint16,     base=enum:GmssRatId
    MCC, uint16,     base=10
    MNC, uint16,     base=10
    RatInfoValid, uint8,      base=enum:FALSE/TRUE
    Sid, uint16,     base=10
    Nid, uint16,     base=10
End

Begin Message, ETS CP MMC_RAT_DISABLE_RSP Cmd
    RatId, uint8,    base=enum:GmssRatId
End

Begin Message, ETS CP MMC_RAT_NWK_ST_CHG_IND Cmd
    RatId, uint8,    base=enum:GmssRatId
    CpSt, uint32,    base=enum:IratRatCpStatusT, default=MMC_RAT_REGISTERED
    Cause, uint32,    base=enum:IratRatStatusIndCauseT, default=MMC_AUTOMATIC
    SystemPriority, uint8,    base=enum:IratPriorityClassT, default=MMC_PRI_HOME
    PsType, uint8,    base=enum:IratRatLtePsTypeT,  default=MMC_PSTYPE_LTE
    Res, uint8,    base=10
    Mcc, uint16,   base=10
    Mnc, uint16,   base=10
    RatInfoValid, uint16,   base=enum:FALSE/TRUE
End

Begin Message, ETS CP MMC_AP_MODE_SELECT_REQ Cmd
    MMSS Mode, uint32,    base=enum:GmssopMode, default=MMC_GLOBAL
End

Begin Message, ETS CP MMC_AP_POWER_UP_REQ Cmd
End

Begin Message, ETS CP MMC_AP_POWER_DOWN_REQ Cmd
End

Begin Message, ETS CP MMC_AP_SERVICE_STATUS_REQ Cmd
End

Begin Message, ETS CP MMC_RAT_API_TEST Cmd
    Cmd, uint16,   base=enum:MmcRatApiIdT, default=RAT_MMC_API_POWERUP_REQ
    RatId, uint8,    base=enum:GmssRatId
    Op, uint16,   base=10, default=0
End

Begin Message, ETS CP MMC_AP_API_TEST Cmd
    cmd, uint16,   base=enum:MmcApApiIdT, default=AP_MMC_API_GMSS_MODE_SELECT_RSP
    op, uint16,   base=10, default=0
End

Begin Message, ETS CP_PDS_AP_PRECISE_TIME_AIDING_REQ_MSG Cmd
    FTA Control, uint8,    base=enum:disable/enable
    Period(unit msec ex 1000), int32,  base=10, default=1000
End

Begin Message, ETS CP_PDS_AP_FREQUENCY_AIDING_REQ_MSG Cmd
    DWB Delay, uint8,  base=enum:disable/enable
    GroupDelay(ex 25.950 Chips:25950), int32,  base=10, default=25950
End

Begin Message, ETS CP_PDS_AP_GPS_PSEUDORANGE_MSMT_RSP_MSG Cmd
    InstanceId, uint32, base=10
End

Begin Message, ETS CP_PDS_AP_GPS_CONTROL_PLANE_ABORT_CNF_MSG Cmd
    InstanceId, uint32, base=10
End

Begin Message, ETS CP_PDS_AP_IS801_SESSION_START_MSG Cmd
    InstanceId, uint32, base=10
    NumFixes, uint32, base=10
    TimeBtwFixes, uint32, base=10
    QosHAccuracy, uint32, base=10
    QosVAccuracy, uint32, base=10
    QosPerformance, uint32, base=10
    PosMode, uint32, base=enum:PDS PosMode enum
End

Begin Message, ETS CP_PDS_AP_ASSIST_DATA_REQ_MSG Cmd
    RefPosReq, uint32, base=10
    GpsEphReq, uint32, base=10
    GpsAlmReq, uint32, base=10
    GpsIonReq, uint32, base=10
End

Begin Message, ETS CP_PDS_AP_GPS_MSB_POSITION_REPORT_MSG Cmd
    InstanceId, uint32, base=10
End

Begin Message, ETS CP_PDS_AP_IS801_SESSION_STOP_MSG Cmd
    InstanceId, uint32, base=10
End

Begin Message, ETS CP_PDS_AP_IS801_SESSION_TRIGGER_RSP_MSG Cmd
    InstanceId, uint32, base=10
End

Begin Message, ETS CP_PDS_AP_AFLT_REQ_MSG Cmd
    InstanceId, uint32, base=10
End

Begin Message, ETS CP_PDS_AP_AFLT_ABORT_REQ_MSG Cmd
    InstanceId, uint32, base=10
End

Begin Message, ETS CP_PDS_AP_SET_PRIVACY_MODE_MSG Cmd
    Privacy Setting, uint32,  base=enum:GPS Privacy Setting
End

Begin Message, ETS CP_PDS_AP_GET_PRIVACY_MODE_MSG Cmd
End

Begin Message, ETS CP PDS GPS Open Device HW Init Cmd
End

Begin Message, ETS CP PDS GPS Start Fix Cmd
    Instance ID, uint32
    GPS Start Fix Flag, uint32
End

Begin Message, ETS CP PDS GPS Stop Fix Cmd
    Instance ID, uint32
End

Begin Message, ETS CP PDS GPS Configure Fix Mode Cmd
    Instance ID, uint32
    GPS Fix Mode, uint32, base=enum:PDS GPS Fix Mode
End

Begin Message, ETS CP PDS GPS Configure Fix Rate Cmd
    Instance ID, uint32
    GPS Number of Fixes, uint32
    GPS Time Between Fixes, uint32
End

Begin Message, ETS CP PDS GPS Configure QOS Cmd
    Instance ID, uint32
    GPS Horizontal Accuracy, uint32
    GPS Vertical Accuracy, uint32
    GPS Performance, uint32
End

Begin Message, ETS CP PDS GPS Write Server Configuration Cmd
    GPS Server Address Validity Flag, uint8, base=enum:FALSE/TRUE
    IP Type, uint8, base=enum:ipv4/ipv6
    GPS Server ipv4 Address, array,  type=uint8, maxsize=4, base=10, indent=2
    ipv6Ip0, uint32, base=16
    ipv6Ip1, uint32, base=16
    ipv6Ip2, uint32, base=16
    ipv6Ip3, uint32, base=16
    GPS Server Port Number, uint32
    GPS Server URL Validity Flag, uint8, base=enum:FALSE/TRUE
    GPS Server URL, string, length=256
End

Begin Message, ETS CP PDS GPS Enable Security Cmd
    Instance ID, uint32
End

Begin Message, ETS CP PDS GPS Reset Assist Cmd
    GPS Assistance Data, uint32, base=enum:PDS GPS Assistance Data
End

Begin Message, ETS CP PDS GPS Set Security Cmd
    GPS Security, uint8, base=enum:PDS GPS Security State
    GPS Security Code, uint32, base=10
End

Begin Message, ETS CP Loopback Rsp
    Data, array, type=uint8, maxsize=273, size=end
End

Begin Message, ETS CP SetBaud Rsp
End

Begin Message, ETS CP DBuf Loopback Rsp
    Result, uint8, base=enum:Fail/Pass
End

Begin Message, ETS CP Data SetBaud Rsp
End

Begin Message, ETS CP Uart Select Rsp
End

Begin Message, ETS Enable Generic Ack Rsp
End

Begin Message, ETS CP Enter Calibration Mode Rsp
End

Begin Message, ETS CP Fault Rsp
    Fault Data, record, type=CP Fault, maxsize=1, size=end, ConsumeBytes=0
End

Begin Record, CP Fault
    Unit, uint32, base=enum:CP Unit
    Codes, union, enum=Unit
End

Begin Message, CP Fault Cp Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Cp Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Record, SysTimeRec
    SysTime, uint64, base=date
End

Begin Message, CP Fault Dbm Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Dbm Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Exe Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Exe Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Ipc Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Ipc Err Codes
    Code 2, union,  enum=Code 1
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, Ipc Rx Sync Error Rsp
    SyncChar, uint32
End

Begin Message, Ipc Rx Overrun Error Rsp
    ProcId, uint32, base=enum:Processor Id
End

Begin Message, Ipc Rx Mailbox Size Error Rsp
    MboxSize, uint32
End

Begin Message, Ipc Rx Message Id Error Rsp
    MsgId, uint32, base=enum:DSP HW Rx Mailbox Ids
End

Begin Message, Ipc Tx Message Size Error Rsp
    MsgSize, uint32
End

Begin Message, Ipc DSP Mailbox Not Ready Error Rsp
    ProcId, uint32, base=enum:Processor Id
End

Begin Message, Ipc No Message in Mbox Error Rsp
    Code2, uint32
End

Begin Message, Ipc No Data in Requesed Direct Buffer Rsp
    ChnlRdy, uint32
End

Begin Message, Ipc Forward frame missing Rsp
    LastFrameDelta, uint32
End

Begin Message, Ipc Odd Tx Message Size Error Rsp
    MsgId, uint32, base=enum:DSP HW Tx Mailbox Ids
End

Begin Message, Ipc Cant Send Msg To Clocked Off Dsp Rsp
    MsgId, uint32, base=enum:DSP HW Tx Mailbox Ids
End

Begin Message, Ipc Dspm Version Not Compatible Error Rsp
    Code2, uint32
End

Begin Message, Ipc Dspm Phy Chan Type Error Rsp
    PhyChanType, uint32
End

Begin Message, Ipc PSW Reset DSPm Error Rsp
    Code2, uint32
End

Begin Message, Ipc Dspm Unexpected Alive Error Rsp
    Code2, uint32
End

Begin Message, Ipc Dspm Not Responding Error Rsp
    Code2, uint32
End

Begin Message, CP Fault L1d Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP L1d Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Lmd Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Lmd Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Mon Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Mon Err Codes
    Code 2, union,  enum=Code 1
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, Mon Message Id Error Rsp
    Code2, uint32
End

Begin Message, Mon Spy Id Error Rsp
    Code2, uint32
End

Begin Message, Mon Spy Length Error Rsp
    Code2, uint32
End

Begin Message, Mon Trace Id Error Rsp
    Code2, uint32
End

Begin Message, Mon Num Trace Args Error Rsp
    Code2, uint32
End

Begin Message, Mon BB Mode Error Rsp
    Code2, uint32
End

Begin Message, Mon Num Printf Args Error Rsp
    Code2, uint32
End

Begin Message, Mon Peek Len Error Rsp
    Code2, uint32
End

Begin Message, Mon Poke Len Error Rsp
    Code2, uint32
End

Begin Message, Mon Sequence Number Error Rsp
    Code2, uint32
End

Begin Message, Mon Flash Section Error Rsp
    Code2, uint32
End

Begin Message, Mon Checksum Error Rsp
    Code2, uint32
End

Begin Message, Mon Vocoder Test Mode Error Rsp
    Code2, uint32
End

Begin Message, Mon Asic Revision Error Rsp
    Code2, uint32
End

Begin Message, Mon Direct Buffer Loopback Error Rsp
    Code2, uint32
End

Begin Message, Mon ARM Run time library Error Rsp
    Code2, uint32
End

Begin Message, Mon CBP Compatibility ID Mismatch Rsp
    Code2, uint32
End

Begin Message, Mon DSP Download File Id Error Rsp
    DspName, uint32, base=enum:DspNames
End

Begin Message, Mon DSP Download Asic Revision Error Rsp
    DspName, uint32, base=enum:DspNames
End

Begin Message, Mon DSP Download Asic Version Error Rsp
    DspName, uint32, base=enum:DspNames
End

Begin Message, Mon DSP Download Too Many Patches Error Rsp
    DspName, uint16, base=enum:DspNames
    NumPatches, uint16, base=10
End

Begin Message, Mon DSP Download No Patch Error Rsp
    DspName, uint32, base=enum:DspNames
End

Begin Message, Mon DSP Download Timeout Rsp
    DspName, uint32, base=enum:DspNames
End

Begin Message, Mon DSP Download Checksum Error Rsp
    DspName, uint32, base=enum:DspNames
End

Begin Message, Mon DSP Download Complete Error Rsp
    DspName, uint32, base=enum:DspNames
End

Begin Message, Mon DSP Download Patchset ID Error Rsp
    DspName, uint16, base=enum:DspNames
    Expected Patchset Id, uint16, base=10
End

Begin Message, Mon Reset Exception Error Rsp
    Code2, uint32
End

Begin Message, Mon Undefined Instruction Error Rsp
    Code2, uint32
End

Begin Message, Mon Software Interrupt Exception Error Rsp
    Code2, uint32
End

Begin Message, Mon Prefetch Abort Exception Error Rsp
    Code2, uint32
End

Begin Message, Mon Data Abort Exception Error Rsp
    Code2, uint32
End

Begin Message, Mon Reserved Exception Error Rsp
    Code2, uint32
End

Begin Message, Mon BB Not Ready Error Rsp
    ModeId, uint32, base=enum:BB Config Mode
End

Begin Message, Mon BB FromBuffer Not Ready Error Rsp
    ModeId, uint32, base=enum:BB Config Mode
End

Begin Message, Mon BB Invalid Mode Error Rsp
    ModeId, uint32, base=enum:BB Config Mode
End

Begin Message, Mon BB Operation Failed Rsp
    ModeId, uint32, base=enum:BB Config Mode
End

Begin Message, Mon System Release Asic Version Error Rsp
    Code2, uint32
End

Begin Message, Mon System Release Asic Type Error Rsp
    Code2, uint32
End

Begin Message, Mon System Release CP Software Revision Error Rsp
    Code2, uint32
End

Begin Message, Mon System Release DSPv Software Revision Error Rsp
    Code2, uint32
End

Begin Message, Mon System Release DSPm Software Revision Error Rsp
    Code2, uint32
End

Begin Message, Mon Test Not Supported Rsp
    Code2, uint32
End

Begin Message, Mon Invalid Num App Msgs Error Rsp
    NumAppMsgs, uint32
End

Begin Message, Mon Dynamic Code Download Failed Rsp
    Code2, uint32
End

Begin Message, Mon Invalid App Chan Msg Id Error Rsp
    MsgId, uint32, base=enum:IpcDspAppMsgIdT
End

Begin Message, Mon Invalid File Offset Error Rsp
    FileOffset, uint32
End

Begin Message, Mon EVDO Auto Spy Id Error Rsp
    Code2, uint32
End

Begin Message, Mon Unexpected DSPV Reset Error Rsp
    Code2, uint32
End

Begin Message, Mon Flash Section Size Error Rsp
    Code2, uint32
End

Begin Message, Mon Deep Sleep Preparation Time Too Large Rsp
    Code2, uint32
End

Begin Message, Mon Stack Overflow Error Rsp
    Thread Id, uint32, base=enum:CP Thread Ids
End

Begin Message, Mon Stack Size Too Small Warning Rsp
    Thread Id, uint32, base=enum:CP Thread Ids
End

Begin Message, Mon DSPm Fault Halt Rsp
    Code2, uint32
End

Begin Message, Mon DSPv Fault Halt Rsp
    Code2, uint32
End

Begin Message, Mon DSP Failed To Start Rsp
    Code2, uint32
End

Begin Message, Mon Unexpected DSPm Reset Err Rsp
    Code2, uint32
End

Begin Message, Mon Requested Heap Not Avail Rsp
    Code2, uint32
End

Begin Message, Mon Too Many Heap Alloc Requests Rsp
    Code2, uint32
End

Begin Message, Mon No Debug Heap Allocated Rsp
    Code2, uint32
End

Begin Message, Mon Silent Logging Upload Err Rsp
    Code2, uint32, base=enum:Silent Logging Upload Errs
End

Begin Message, Mon Deep Sleep Multimode Err Rsp
    Code2, uint32
End

Begin Message, Mon Alingnment Address Violation Err Rsp
    Code2, uint32
End

Begin Message, Mon MMU access permission Violation Err Rsp
    Code2, uint32
End

Begin Message, Mon BOOT Compatibility ID Missing Rsp
    Valid Flag, uint32
End

Begin Message, Mon BOOT incompatible with CP Rsp
    Compat ID CP/Boot, uint32
End

Begin Message, Mon Comp LGPL Code Invalid Rsp
    Code States, uint32, base=16
End

Begin Message, Mon Comp CUST Code Invalid Rsp
    Code States, uint32, base=16
End

Begin Message, Mon Sw Buffer Overrun Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Cp Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Psw Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Psw Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Hwd Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32,  base=enum:CP Hwd Err Codes
    Code 2, union,   enum=Code 1
    Fault Type, uint32,   base=enum:Continue/Halt
End

Begin Message, Hwd 0x00 Test task received unknown command Rsp
    Code2, uint32
End

Begin Message, Hwd 0x01 Test task received unknown event Rsp
    Code2, uint32
End

Begin Message, Hwd 0x02 Test task received unknown signal Rsp
    Code2, uint32
End

Begin Message, Hwd 0x03 Invalid PLL selection Rsp
    Code2, uint32
End

Begin Message, Hwd 0x04 Invalid MDM PLL state Rsp
    Code2, uint32
End

Begin Message, Hwd 0x05 Serializer immediate load time out Rsp
    Code2, uint32
End

Begin Message, Hwd 0x06 Invalid mixed signal device Rsp
    Code2, uint32
End

Begin Message, Hwd 0x07 Aux immediate interrupt ready timeout Rsp
    Code2, uint32
End

Begin Message, Hwd 0x08 Aux timed interrupt ready timeout error Rsp
    Code2, uint32
End

Begin Message, Hwd 0x09 PDM timed interrupt ready timeout error Rsp
    Code2, uint32
End

Begin Message, Hwd 0x0A PDM immediate interrupt ready timeout error Rsp
    Code2, uint32
End

Begin Message, Hwd 0x0B Invalid Rx channel type Rsp
    Code2, uint32
End

Begin Message, Hwd 0x0C Invalid mail message at startup time Rsp
    Code2, uint32
End

Begin Message, Hwd 0x0D Invalid signal at startup time Rsp
    Code2, uint32
End

Begin Message, Hwd 0x0E Timeout condition at startup time Rsp
    Code2, uint32
End

Begin Message, Hwd 0x0F Calibration parms not received Rsp
    Code2, uint32
End

Begin Message, Hwd 0x10 Startup signal not received Rsp
    Code2, uint32
End

Begin Message, Hwd 0x11 Flash memory erase error Rsp
    Code2, uint32
End

Begin Message, Hwd 0x12 Flash memory program error Rsp
    Code2, uint32
End

Begin Message, Hwd 0x13 Flash sector is protected Rsp
    Code2, uint32
End

Begin Message, Hwd 0x14 Illegal GPIO selected error Rsp
    Code2, uint32
End

Begin Message, Hwd 0x15 Illegal request Rsp
    Code2, uint32
End

Begin Message, Hwd 0x16 calibration parameter exceeds limits Rsp
    Code2, uint32
End

Begin Message, Hwd 0x17 ADC measurement conversion timeout Rsp
    Code2, uint32
End

Begin Message, Hwd 0x18 GPIO configuration collision Rsp
    Code2, uint32
End

Begin Message, Hwd 0x19 Rx ADC Bandwidth calibration failure Rsp
    Code2, uint32
End

Begin Message, Hwd 0x1A Sleep LPT Schedule Error Rsp
    Code2, uint32
End

Begin Message, Hwd 0x1B Ts2Ts calculation error Rsp
    Code2, uint32
End

Begin Message, Hwd 0x1C Rx ADC DC offset calibration failure Rsp
    Code2, uint32
End

Begin Message, Hwd 0x1D Key Scan Error Rsp
    Code2, uint32
End

Begin Message, Hwd 0x1E RF PLL Lock Lost Rsp
    Code2, uint32
End

Begin Message, Hwd 0x1F DSPV Is Clocked Off Rsp
    Code2, uint32
End

Begin Message, Hwd 0x22 Error Read Temperature Rsp
    Code2, uint32
End

Begin Message, Hwd 0x23 Error Read Battery Voltage Rsp
    Code2, uint32
End

Begin Message, Hwd 0x24 RF Table Of Function Pointers Has Null Entry Rsp
    Code2, uint32
End

Begin Message, Hwd 0x25 Tune Count Read Failure Rsp
    Code2, uint32
End

Begin Message, Hwd 0x26 Tx DC Offset Cal I Diff Failure Rsp
    Code2, uint32
End

Begin Message, Hwd 0x27 Tx DC Offset Cal Q Diff Failure Rsp
    Code2, uint32
End

Begin Message, Hwd 0x28 Invalid Uart Baud Rate Detected Rsp
    Code2, uint32
End

Begin Message, Hwd 0x3E USB Core Config Error Rsp
    Code2, uint32
End

Begin Message, Hwd 0x3F Audio mode requested is not supported Rsp
    Code2, uint32
End

Begin Message, Hwd 0x40 Gain State FIQ Resource Contention Rsp
    Code2, uint32
End

Begin Message, Hwd 0x41 MMC Card Status Reported Error Rsp
    Code2, uint32
End

Begin Message, Hwd 0x42 RF mapping assignments format error Rsp
    Code2, uint32
End

Begin Message, Hwd 0x92 Pwr Saving Mode Config Out of Range Rsp
    Code2, uint32
End

Begin Message, Hwd 0x93 Audio Set Mode Sem Timeout Rsp
    Code2, uint32
End

Begin Message, Hwd 0x94 Audio Set Vol Sem Timeout Rsp
    Code2, uint32
End

Begin Message, Hwd 0x95 Audio Set Path Sem Timeout Rsp
    Code2, uint32
End

Begin Message, Hwd 0x96 IMelody Event Invalid Rsp
    Code2, uint32, base=enum:Hwd MIDI Error Codes
End

Begin Message, Hwd 0x97 HWD DMA Status Error Rsp
    Code2, uint32
End

Begin Message, Hwd 0x98 HWD DMA Register write Error Rsp
    Code2, uint32
End

Begin Message, Hwd 0x99 Pwr Saving Switching Out of Range Rsp
    Code2, uint32
End

Begin Message, Hwd 0x9A Diversity Rf is not supported Rsp
    Code2, uint32
End

Begin Message, Hwd 0x9B Sidetone Not Sent to DSPV Rsp
    Code2, uint32, base=enum:Hwd SideTone Error Codes
End

Begin Message, Hwd 0x9C Mp3 Frame Sync Not Found Rsp
    Code2, uint32
End

Begin Message, Hwd 0x9D MIDI Invalid Pitch Range Rsp
    Code2, uint32
End

Begin Message, Hwd 0x9E Audio Tone Sem Timeout Rsp
    Code2, uint32
End

Begin Message, Hwd 0x9F MIDI Max Tracks Exceeded Rsp
    Code2, uint32
End

Begin Message, Hwd 0xA0 TONE Invalid Tone Id Rsp
    Code2, uint32, base=enum:HWD MMApps App Ids
End

Begin Message, Hwd 0xA1 TONE Vocoder App not Downloaded Rsp
    Code2, uint32, base=enum:HWD MMApps App Ids
End

Begin Message, Hwd 0xA2 CMF Unexpected SubChunk Type Rsp
    Code2, uint32
End

Begin Message, Hwd 0xA3 CMF Too Many Jump Points Rsp
    Code2, uint32
End

Begin Message, Hwd 0xA4 CMF Jump Cmd with Zero Jumps Rsp
    Code2, uint32
End

Begin Message, Hwd 0xA5 CMF No Empty NoteOff Tbl Entries Rsp
    Code2, uint32
End

Begin Message, Hwd 0xA6 CMF Pitch Bend Overflow Rsp
    Code2, uint32
End

Begin Message, Hwd 0xA7 CMF DLS Feature Not Supported Rsp
    Code2, uint32
End

Begin Message, Hwd 0xA8 No RF Calib Data File -- using defaults Rsp
    Code2, uint32
End

Begin Message, Hwd 0xA9 Cdma1 Calibration parms not received Rsp
    Code2, uint32
End

Begin Message, Hwd 0xAA Cdma2 Calibration parms not received Rsp
    Code2, uint32
End

Begin Message, Hwd 0xAB Cdma3 Calibration parms not received Rsp
    Code2, uint32
End

Begin Message, Hwd 0xAC PwrDet measurement out of range - check cal Rsp
    Code2, uint32
End

Begin Message, Hwd 0xAD Requested RF Band is not supported Rsp
    Code2, uint32
End

Begin Message, Hwd 0xAE Not all cdma4 cal parms were received Rsp
    Code2, uint32
End

Begin Message, Hwd 0xAF SDIO AHBTX not zero Rsp
    Code2, uint32
End

Begin Message, Hwd 0xB0 Invalid Delay Control Unit is received Rsp
    Code2, uint32
End

Begin Message, Hwd 0xB1 Rf Driver and Default Data Mismatch Rsp
    Code2, uint32, base=enum:Hwd RfDriver Error Codes
End

Begin Message, Hwd 0xB2 Rf Driver SMARTi RF ERR_RB Rsp
    Code2, uint32
End

Begin Message, Hwd 0xB3 MMApps Music Malloc Fail Rsp
    Code2, uint32
End

Begin Message, Hwd 0xB4 MXS SPI Write Error Rsp
    Code2, uint32
End

Begin Message, Hwd 0xB5 MXS SPI Read Error Rsp
    Code2, uint32
End

Begin Message, Hwd 0xB6 MXS SPI Queue Full Error Rsp
    Code2, uint32
End

Begin Message, Hwd 0xB7 MIDI File Read Fail Rsp
    FsiStat, uint32, base=enum:Hwd FSI Error Codes
End

Begin Message, Hwd 0xB8 MIDI Track Buf Not Ready Rsp
    BufState, uint32, base=enum:READY/RELOADING/EMPTY
End

Begin Message, Hwd 0xB9 MIDI Too Many Tempo Events Rsp
    Code2, uint32
End

Begin Message, Hwd 0xBA MSG ID mismatch detected Rsp
    Code2, uint32
End

Begin Message, Hwd 0xBB Pwr Saving Sem Error Rsp
    Code2, uint32
End

Begin Message, Hwd 0xBC Internal PMU Error Rsp
    Code2, uint32
End

Begin Message, Hwd 0xBD I2C Interrupt Timeout Rsp
    Code2, uint32
End

Begin Message, Hwd 0xBE I2C Operation Error Rsp
    Code2, uint32
End

Begin Message, Hwd 0xBF I2C Lock Sem Error Rsp
    Code2, uint32
End

Begin Message, Hwd 0xC0 HWD_ERR_AUDIO_TUNING_MALLOC_FAILED Rsp
    Code2, uint32
End

Begin Message, Hwd 0xC1 HWD_ERR_AUDIO_TUNING_PARAMS_NOT_LOADED Rsp
    Code2, uint32
End

Begin Message, Hwd 0xC2 HWD_ERR_AUDIO_TUNING_TYPE_INVALID Rsp
    Code2, uint32
End

Begin Message, Hwd 0xC3 HWD_ERR_AUDIO_TUNING_FILE_GET_LEN_FAIL Rsp
    Code2, uint32
End

Begin Message, Hwd 0xC4 HWD_ERR_AUDIO_TUNING_FILE_OPEN_FAIL Rsp
    Code2, uint32
End

Begin Message, Hwd 0xC5 HWD_ERR_AUDIO_TUNING_FILE_READ_FAIL Rsp
    Code2, uint32
End

Begin Message, Hwd 0xC6 HWD_ERR_AUDIO_TUNING_FILE_WRITE_FAIL Rsp
    Code2, uint32
End

Begin Message, Hwd 0xC7 HWD_ERR_AUDIO_TUNING_SIZE_INVALID Rsp
    Code2, uint32
End

Begin Message, Hwd 0xC8 HWD_ERR_AUDIO_TUNING_FORMAT_INVALID Rsp
    Code2, uint32
End

Begin Message, Hwd 0xC9 HWD_ERR_AUDIO_TUNING_FILE_LEN_MISMATCH Rsp
    Code2, uint32
End

Begin Message, Hwd 0xCA HWD_ERR_AUDIO_TUNING_MODE_INVAL Rsp
    Code2, uint32
End

Begin Message, Hwd 0xCB HWD_ERR_MIDI_MODE_RESP_NOT_RCVD Rsp
    State, uint32, base=enum:HWD Midi States
End

Begin Message, Hwd 0xCC HWD_ERR_RF_PIN_TYPE_INVALID Rsp
    Code2, uint32
End

Begin Message, Hwd 0xCD HWD_ERR_BAND_SUPPORTED_REQUEST_FAILED Rsp
    Code2, uint32
End

Begin Message, Hwd 0xCE HWD_ERR_BAND_SUPPORTED_INVALID Rsp
    Code2, uint32
End

Begin Message, Hwd 0xCF HWD_ERR_MUXSEL0_CONFLICT Rsp
    Code2, uint32
End

Begin Message, Hwd 0xD0 HWD_ERR_PLL_LOCK_FAILURE Rsp
    Code2, uint32
End

Begin Message, Hwd 0xD1 HWD_ERR_VECTOR_DEMUX_DUP_ENTRY Rsp
    Code2, uint32
End

Begin Message, Hwd 0xD2 HWD_ERR_DAC_PLL_LOCK_ERR Rsp
    IrqStatus, uint32
End

Begin Message, Hwd 0xD3 HWD_ERR_TONE_STOP_RESP_NOT_RCVD Rsp
    AbortCnt, uint32
End

Begin Message, Hwd 0xD4 HWD_ERR_SLEEP_MODE_MISMATCH_ERR Rsp
    Code2, uint32
End

Begin Message, Hwd 0xD5 HWD_ERR_DAC_BT_INVAL_IN_SLAVE_MODE Rsp
    Code2, uint32
End

Begin Message, Hwd 0xD6 HWD_ERR_DSPV_VOICE_PARAM_TBL_SIZE_ERR Rsp
    Code2, uint32
End

Begin Message, Hwd 0xD7 HWD_ERR_MIDI_AUDIO_CFG_NOT_RCVD Rsp
    Abort Pend Cnt, uint32
End

Begin Message, Hwd 0xD8 HWD_ERR_MIDI_AUDIO_CLEANUP_NOT_RCVD Rsp
    Abort Pend Cnt, uint32
End

Begin Message, Hwd 0xD9 Failed powerup RF Calibration Rsp
    Code2, uint32
End

Begin Message, Hwd 0xDA HWD_ERR_ESPI_ACK_TIMEOUT Rsp
    Code2, uint32
End

Begin Message, Hwd 0xDB HWD_ERR_ESPI_LOSE_DATA Rsp
    Code2, uint32
End

Begin Message, Hwd 0xDC HWD_ERR_ESPI_ERROR_DATA Rsp
    Code2, uint32
End

Begin Message, Hwd 0xDD HWD_ERR_ESPI_DATA_ALIGN_ERROR Rsp
    Code2, uint32
End

Begin Message, Hwd 0xDE HWD_ERR_ESPI_HEADER_ERROR Rsp
    Code2, uint32
End

Begin Message, Hwd 0xDF HWD_ERR_I2C_HANDLE_INVALID Rsp
    Thread Id, uint32, base=enum:CP Thread Ids
End

Begin Message, Hwd 0xE0 HWD_ERR_I2C_CONTENTION_DETECTED Rsp
    Thread Id, uint32, base=enum:CP Thread Ids
End

Begin Message, Hwd 0xE1 HWD_ERR_IRAM_DBM_SIZE_ERROR Rsp
    Code2, uint32
End

Begin Message, Hwd 0xE2 HWD_ERR_SHMEM_ERROR Rsp
    Shmem Code 2, uint32, base=enum:HWD SHMEM Error Codes
End

Begin Message, Hwd 0xE3 HWD_ERR_VECTOR_DEMUX_INVALID_IRQ Rsp
    Shmem Code 2, uint32, base=16
End

Begin Message, Hwd 0xE4 HWD_ERR_VECTOR_DEMUX_INVALID_FIQ Rsp
    Shmem Code 2, uint32, base=16
End

Begin Message, Hwd 0xE5 HWD_ERR_I2C_NUM_BYTES_OUT_OF_RANGE Rsp
    NumBytes, uint32, base=10
End

Begin Message, Hwd 0xE6 HWD_ERR_RX_AGC_READBACK_TIMEOUT Rsp
    NumBytes, uint32, base = 10
End

Begin Message, Hwd 0xE7 HWD_ERR_SW_BUFFER_OVERRUN_ERROR Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Cp Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, Hwd 0xE8 HWD_ERR_INVALID_PMAX Rsp
    Code, uint32, base = 10
End

Begin Message, Hwd 0xFF Hwd Watchdog Reset Rsp
    Timeout Value (ms), uint32, base=10
End

Begin Message, CP Fault Tst Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Tst Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Val Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Val Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Sys Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Sys Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault RLP Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP RLP Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault HLP Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP HLW Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Uim Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Uim Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Clc Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Clc Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Fcp Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Fcp Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Hsc Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Hsc Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Rmc Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Rmc Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Rcp Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Rcp Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Slc Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Slc Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Css Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Css Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Sec Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Sec Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Ets Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP Ets Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault PDS Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP PDS Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault MMC Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP MMC Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, CP Fault Pac Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint32, base=enum:CP L1d Err Codes
    Code 2, uint32
    Fault Type, uint32,  base=enum:Continue/Halt
End

Begin Message, ETS CP Printf Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Format, string, length=128
    Args, array,  type=uint32, maxsize=10, size=end
End

Begin Message, ETS CP Display Rsp
    Row, int8,   max=1
    Column, int8,   max=15
    Text, string, size=end, columns=32
End

Begin Message, ETS CP Exe Fault Rsp
    CP Exe Fault Data, record, type=CP Exe Fault, maxsize=1, size=end, ConsumeBytes=0
End

Begin Record, CP Exe Fault
    ExeErrType, uint8, base=enum:Exe Fault Codes
    Codes, union, enum=ExeErrType
End

Begin Message, CP Exe Fault Msg Buffer Memory Empty Error HALT Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Executing Task Id, uint8, base=enum:CP Thread Ids, indent=1
    Msg Buff 1 In Use, uint16, indent=1
    Msg Buff 2 In Use, uint16,
    Msg Buff 3 In Use, uint16,
    Msg Buff 4 In Use, uint16,
    Msg Buff Size Requested, uint16, indent=1
End

Begin Message, CP Exe Fault Msg Buffer Memory Size Error HALT Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Executing Task Id, uint8, base=enum:CP Thread Ids, indent=1
    Msg Buff 1 In Use, uint16, indent=1
    Msg Buff 2 In Use, uint16,
    Msg Buff 3 In Use, uint16,
    Msg Buff 4 In Use, uint16,
    Msg Buff Size Requested, uint16, indent=1
End

Begin Message, CP Exe Fault Nucleus Error HALT Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Executing Task Id, uint8, base=enum:CP Thread Ids, indent=1
    Nucleus Error, int32, base=enum:CP Nucleus Status, indent=1
End

Begin Message, CP Exe Fault Msg Buffer Overwrite Error HALT Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Executing Task Id, uint8, base=enum:CP Thread Ids, indent=1
    Msg Buff 1 In Use, uint16, indent=1
    Msg Buff 2 In Use, uint16,
    Msg Buff 3 In Use, uint16,
    Msg Buff 4 In Use, uint16,
    Receiving Task Id, uint8, base=enum:CP Thread Ids, indent=1
    Mailbox Id, uint8, indent=1
    Msg Id, uint32, indent=1
    Msg Size, uint16, indent=1
End

Begin Message, CP Exe Fault Mail Queue Full Error HALT Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Executing Task Id, uint8, base=enum:CP Thread Ids, indent=1
    Msg Buff 1 In Use, uint16, indent=1
    Msg Buff 2 In Use, uint16,
    Msg Buff 3 In Use, uint16,
    Msg Buff 4 In Use, uint16,
    Receiving Task Id, uint8, base=enum:CP Thread Ids, indent=1
    Mailbox Id, uint8, indent=1
    Msg Id, uint32, indent=1
    Msg Size, uint16, indent=1
End

Begin Message, CP Exe Fault Msg Buffer Redundant Free Error HALT Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Executing Task Id, uint8, base=enum:CP Thread Ids, indent=1
    MsgFreePtr, uint32, indent=1
End

Begin Message, CP Exe Fault Msg Buffer Free Invalid Ptr Error HALT Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Executing Task Id, uint8, base=enum:CP Thread Ids, indent=1
    MsgFreePtr, uint32, indent=1
End

Begin Message, CP Exe Fault Msg Buffer Already Sent Error HALT Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Executing Task Id, uint8, base=enum:CP Thread Ids, indent=1
    Msg Buff 1 In Use, uint8, indent=1
    Msg Buff 2 In Use, uint8,
    Msg Buff 3 In Use, uint8,
    Msg Buff 4 In Use, uint8,
    Receiving Task Id, uint8, base=enum:CP Thread Ids, indent=1
    Mailbox Id, uint8, indent=1
    Msg Id, uint16, indent=1
    Msg Size, uint16, indent=1
End

Begin Message, CP Exe Fault Msg Buffer Get Corrupted Ptr Error HALT Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Executing Task Id, uint8, base=enum:CP Thread Ids, indent=1
    MsgFreePtr, uint32, indent=1
End

Begin Message, CP Exe Fault Msg Buffer Free Corrupted Ptr Error HALT Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Executing Task Id, uint8, base=enum:CP Thread Ids, indent=1
    MsgBuffPtr, uint32, indent=1
End

Begin Message, CP Exe Fault Msg Buffer Send Corrupted Ptr Error HALT Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Executing Task Id, uint8, base=enum:CP Thread Ids, indent=1
    MsgBuffPtr, uint32, indent=1
End

Begin Message, CP Exe Fault Msg Buffer Read Corrupted Ptr Error HALT Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Executing Task Id, uint8, base=enum:CP Thread Ids, indent=1
    MsgBuffPtr, uint32, indent=1
End

Begin Message, ETS CP File Info Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Info, string, size=end, columns=128
End

Begin Message, ETS CP Exception Rsp
    Exception Data, record, type=Exception Rec, maxsize=1, size=end, ConsumeBytes=0
End

Begin Record, Exception Rec
    Exception Type, uint8,  base=enum:CP Mon Exception Codes, indent=1
    Thread Id, uint32, base=enum:CP Thread Ids, indent=1
    spsr, uint32, indent=1
    cpsr, uint32, indent=1
    r0, uint32, indent=1
    r1, uint32, indent=1
    r2, uint32, indent=1
    r3, uint32, indent=1
    r4, uint32, indent=1
    r5, uint32, indent=1
    r6, uint32, indent=1
    r7, uint32, indent=1
    r8, uint32, indent=1
    r9, uint32, indent=1
    r10, uint32, indent=1
    r11, uint32, indent=1
    r12, uint32, indent=1
    r13, uint32, indent=1
    r14, uint32, indent=1
    Return address, record, type=Return Address, maxsize=8, size=8
    IRAM contents, record, type=IRAM Contents, maxsize=8, size=8
    Arm mode regs, record, type=Arm Mode Regs, maxsize=6, size=6
End

Begin Record, Return Address
    Execution Address, uint32, indent=1
    Data, uint32
End

Begin Record, IRAM Contents
    IRAM Address, uint32, indent=1
    Original Data, uint32,
    Current Data, uint32
End

Begin Record, Arm Mode Regs
    ARM Mode, uint8, base=enum:ARM Modes, indent=1
    CPSR, uint32
    SP, uint32
    LR, uint32
    SPSR, uint32
End

Begin Message, ETS CP Exe Fault Queue Data Rsp
    TaskId, uint8,  base=enum:CP Thread Ids, indent = 1
    QueNum, uint8,  base=10
    NumMsgs, uint16, base=10
    Msg Params, record, type=MsgParams, maxsize=80, size=end
End

Begin Record, MsgParams
    MsgId, uint32, indent = 1
    MsgPtr, uint32
    MsgLen, uint32
    Time(ms), uint32, scale=Q5, format=%7.3f
End

Begin Message, ETS CP Exe Fault Task Control Block Rsp
    TaskId, uint8,  base=enum:CP Thread Ids
    (0x10) tc_name, string, length=8, indent = 1
    (0x18) tc_status, uint8, indent = 1
    (0x1A) tc_priority, uint8, indent = 1
    (0x1C) tc_scheduled, uint32, indent = 1
    (0x24) tc_stack_start, uint32, indent = 1
    (0x28) tc_stack_end, uint32, indent = 1
    (0x2C) tc_stack_pointer, uint32, indent = 1
    (0x30) tc_stack_size, uint32, indent = 1
    (0x34) tc_stack_minimum, uint32, indent = 1
    (0x5C) tc_entry ptr, uint32, indent = 1
    (0xA4) tc_thread_id, uint32, base=10, indent = 1
End

Begin Message, ETS CP Exe Fault Msg Buff Ptr Stats Rsp
    MsgPtrStats, record, type=MsgPtrStats, maxsize=120, size=end
End

Begin Record, MsgPtrStats
    BuffPtr, uint32, indent = 1
    Type, uint8
    State, uint8, base=enum:MsgBufferState
    TaskAlloc, uint8, base=enum:CP Thread Ids
    TaskSentTo, uint8, base=enum:CP Thread Ids
    MsgId, uint32
    FuncName, string, length=16
    Line, uint16, base=10
End

Begin Message, ETS CP Exe Fault Task Program Counter Rsp
    PCStats, record, type=PCStats, maxsize=65, size=end
End

Begin Record, PCStats
    Task Id, uint32, base=enum:CP Thread Ids, indent = 1
    Task Status, uint8,  base=enum:CP Nucleus Task Status
    PC, uint32
End

Begin Message, ETS CP Exe Fault Task Stack Status Rsp
    TaskStackStats, record, type=TaskStackStats, maxsize=65, size=end
End

Begin Record, TaskStackStats
    Task Id, uint8, base=enum:CP Thread Ids, indent = 1
    StackSize, uint32, base=10
    Current Use(%), int32, base=10
    Max Use(%), int32, base=10
End

Begin Message, ETS CP Exe Fault Task Status Part1 Rsp
    Task Id In Running, uint32, base=enum:CP Thread Ids, indent = 1
    PC Pointer, uint32, base=16, indent = 1
    Task Status, record, type=Task Status Part1 Rec, maxsize=sizeofenum:CP Thread Ids, size=end
End

Begin Record, Task Status Part1 Rec
    Id, uint8,  base=10,           indent = 1
    Task, uint8,  base=enum:CP Thread Ids
    tc_name, string, length=8
    Pri, uint8,  base=10
    Status, uint8,  base=enum:CP Nucleus Task Status
    PC, uint32, base=16
End

Begin Message, ETS CP Exe Fault Task Status Part2 Rsp
    Task Status, record, type=Task Status Part2 Rec, maxsize=sizeofenum:CP Thread Ids, size=end
End

Begin Record, Task Status Part2 Rec
    Task, uint8,  base=enum:CP Thread Ids, indent = 1
    Time(ms), uint32, scale=Q5,  format=%7.3f
    Event, uint8,  base=enum:Thread Event Types
    Arg1, uint32, base=16
    Arg2, uint16, base=16
    Status, uint8,  base=enum:CP Nucleus Task Status
    Messages, array, type=uint8, maxsize=127, size=5, base=10
End

Begin Message, ETS CP Exe Fault Task Event History Rsp
    Task Id, uint32, base=enum:CP Thread Ids, indent = 1
    Index, uint8,  base=10
    TaskEventItem, record, type=Task Event Item Rec, maxsize=100, size=end
End

Begin Record, Task Event Item Rec
    Time(ms), uint32, scale=Q5, format=%9.3f, indent = 1
    Arg1, uint32,  base=16
    Arg2, uint16,  base=16
    Event, uint8,  base=enum:Thread Event Types
End

Begin Message, ETS CP Exe Fault Task Stack Data Rsp
    Task Id, uint16, base=enum:CP Thread Ids, indent = 1
    Task Stack, record, type=Task Stack Data Rec, maxsize=10, size=end
End

Begin Record, Task Stack Data Rec
    Stack Data, array, type=uint32, maxsize=10, size=10, base=16, indent = 1
End

Begin Message, ETS CP Exe Fault HISR Event History Rsp
    Index, uint8,  base=10, indent = 1
    HisrEventItem, record, type=HISR Event Item Rec, maxsize=100, size=end
End

Begin Record, HISR Event Item Rec
    Time(ms), uint32, scale=Q5, format=%8.3f, indent = 1
    Arg1, uint32,  base=16
    Arg2, uint16,  base=16
    Event, uint8,  base=enum:Thread Event Types
    Thread, uint8,  base=enum:CP Thread Ids
End

Begin Message, ETS CP Exe Fault Time Info Rsp
    Year, uint16, base=10, indent = 1
    Month, uint16, base=10
    Date, uint16, base=10
    Hour, uint16, base=10
    Minute, uint16, base=10
    Second, uint16, base=10
    SysTime, uint32, base=16
    32kTime, uint32, base=16
End

Begin Message, ETS CP Exe Fault Task Msg Data Rsp
    TaskId, uint32,  base=enum:CP Thread Ids, indent = 1
    MsgId, uint32,   base=16
    MsgLenth, uint16,  base=10
    Msg Data, record, type=Message Data Rec, maxsize=30, size=MsgLenth/20
    Data, array,   type=uint8, maxsize=20, size=end, base=16, indent = 1
End

Begin Record, Message Data Rec
    Data, array,   type=uint8, maxsize=20, size=20, base=16, indent = 1
End

Begin Message, ETS CP Exe Fault Hisr Control Block Rsp
    ThreadId, uint32, base=enum:CP Thread Ids
    tc_created, record, type=CS_NODE, maxsize=1
    (0x0C) tc_id, uint32, indent = 1
    (0x10) tc_name, string, length=8, indent = 1
    (0x18) tc_not_used_1, uint8, indent = 1
    (0x19) tc_not_used_2, uint8, indent = 1
    (0x1A) tc_status, uint8, indent = 1
    (0x1B) tc_not_used_3, uint8, indent = 1
    (0x1C) tc_scheduled, uint32, indent = 1
    (0x20) tc_cur_time_slice, uint32, indent = 1
    (0x24) tc_stack_start, uint32, indent = 1
    (0x28) tc_stack_end, uint32, indent = 1
    (0x2C) tc_stack_pointer, uint32, indent = 1
    (0x30) tc_stack_size, uint32, indent = 1
    (0x34) tc_stack_minimum, uint32, indent = 1
    (0x38) tc_current_protect ptr, uint32, indent = 1
    (0x3C) tc_active_next, uint32, indent = 1
    (0x40) tc_activation_count, uint32, indent = 1
    (0x44) tc_entry, uint32, indent = 1
    (0x48) tc_system_reserved_1, uint32, indent = 1
    (0x4C) tc_system_reserved_2, uint32, indent = 1
    (0x50) tc_system_reserved_3, uint32, indent = 1
    (0x54) tc_thread_id, uint32, base=10, indent = 1
End

Begin Record, CS_NODE
    (0x00) cs_previous ptr, uint32, indent = 1
    (0x04) cs_next ptr, uint32, indent = 1
    (0x08) cs_priority, uint8, indent = 1
    (0x09) cs_pad1, uint8, indent = 1
    (0x0A) cs_pad2, uint8, indent = 1
    (0x0B) cs_pad3, uint8, indent = 1
End

Begin Message, ETS CP Exe Fault Context History Rsp
    Index, uint16, base=10, indent = 1
    ContextItem, record, type=Context Item Rec, maxsize=200, size=end
End

Begin Record, Context Item Rec
    Time(ms), uint32, scale=Q5, format=%7.3f, indent = 1
    Thread Id, uint8,  base=enum:CP Thread Ids
End

Begin Message, ETS CP Exe Fault CPU Allotment Rsp
    CPU Data, record, type=CPU Allot Rec, maxsize=100, size=end
End

Begin Record, CPU Allot Rec
    Thread Id, uint16,  base=enum:CP Thread Ids, indent = 1
    ConsumeTime(ms), uint16,  base=10
End

Begin Message, ETS CP Exe Fault Timer Call Info Rsp
    Timer Call Data, record, type=Timer Call Info Rec, maxsize=200, size=end
End

Begin Record, Timer Call Info Rec
    Callback Addr, uint32,  base=16, indent = 1
    BeginTime(ms), uint32, scale=Q5, format=%7.3f
    ConsumeTime(ms), uint32, scale=Q5,  format=%5.3f
End

Begin Message, ETS CP Exe Fault Log Size Indicator Rsp
    Log  Size Bytes, uint32,  base=16, indent = 1
    Flash Log Space, uint32,  base=16, indent = 1
    SRAM  Log Space, uint32,  base=16, indent = 1
    SRAM  ALL Space, uint32,  base=16, indent = 1
    SRAM Start Addr, uint32,  base=16, indent = 1
End

Begin Message, ETS CP Exe Fault ARM Regs Info Rsp
    R 0, uint32, base=16,  indent = 1
    R 1, uint32, base=16
    R 2, uint32, base=16
    R 3, uint32, base=16
    R 4, uint32, base=16
    R 5, uint32, base=16
    R 6, uint32, base=16
    R 7, uint32, base=16
    R 8, uint32, base=16,  indent = 1
    R 9, uint32, base=16
    R10, uint32, base=16
    R11, uint32, base=16
    R12, uint32, base=16
    R13, uint32, base=16
    R14, uint32, base=16
    R15, uint32, base=16
End

Begin Message, ETS CP Exe Fault ISR Stack Status Rsp
    IsrStackStats, record, type=IsrStackStats, maxsize=65, size=end
End

Begin Record, IsrStackStats
    ISR Id, uint8, base=enum:CP ISR Stack Ids, indent = 1
    StackSize, uint32, base=10
    Current Use(%), int32, base=10
    Max Use(%), int32, base=10
End

Begin Message, ETS CP Exe Fault ISR Stack Data Rsp
    ISR Id, uint16, base=enum:CP ISR Stack Ids, indent = 1
    ISR Stack, record, type=Task Stack Data Rec, maxsize=10, size=end
End

Begin Message, ETS CP Exe Event History Trace Rsp
    HisrEventItem, record, type=Event Trace Item Rec, maxsize=50, size=end
End

Begin Record, Event Trace Item Rec
    Index, uint32,  base=10, indent = 1
    TimeStamp, uint32, base=16
    Arg1, uint32,  base=16
    Arg2, uint16,  base=16
    Event, uint8,  base=enum:Thread Event Types
    ThreadId, uint8,  base=enum:CP Thread Ids
End

Begin Message, ETS CP Memory Exception Rsp
    Exception Data, record, type=Exception Rec, maxsize=1, size=1, ConsumeBytes=0
    Memory Data, record, type=Mem Exception Rec, maxsize=1, size=1, ConsumeBytes=0
End

Begin Record, Mem Exception Rec
    Address, uint32, indent=1
    Master Number, uint16, base=10
    Fault Type, uint8,  base=enum:CP Mem Fault Type
    Access Type, uint8,  base=enum:CP Mem Access Type
End

Begin Message, ETS CP Exe Fault System Event History Rsp
    Index, uint8,  base=10, indent = 1
    HisrEventItem, record, type=HISR Event Item Rec, maxsize=100, size=end
End

Begin Message, ETS CP Exe Fault Profile Data Rsp
    TotalTime (ms), uint32, scale=Q5, format=%.2f
    Averages, record, type=Thread Averages, maxsize=50, size=end
End

Begin Record, Thread Averages
    ThreadId, uint16, base=enum:CP Thread Ids, indent=1
    Average (percent), uint16, scale=Q5, format=%.2f
    Total (ms), uint32, scale=Q5, format=%.2f
End

Begin Message, ETS CP Exe Fault DSP MBox Data Rsp
    MBox Data, array, type=uint16, base=16, maxsize=256, columns=16, indent=1
End

Begin Message, ETS CP Exe Fault DSPM Crash Data Rsp
    MBox Data, array, type=uint16, base=16, maxsize=160, columns=16, indent=1
End

Begin Message, ETS CP Exe Fault MMU Exception Data Rsp
    Data, record, type=EventMmuExceptionData Rec, maxsize=80, size=end, ConsumeBytes=0
End

Begin Record, EventMmuExceptionData Rec
    FSR Data Status, uint8 , base=enum:FsrStatusDescr ,indent=1
    FSR Data Domain, uint8  ,indent=1
    FSR Instruction Status, uint8 , base=enum:FsrStatusDescr ,indent=1
    FSR Instruction Domain, uint8  ,indent=1
    Fault  Address register, uint32 ,indent=1
    mmuEnabled, uint32 , base=enum:MmuEnableEnum   ,indent=1
End

Begin Message, ETS CP Exe Fault Thread History Rsp
    Thread History, record, type=ThHist, maxsize=32, size=end, ConsumeBytes=0
End

Begin Record, ThHist
    ThreadId, uint16, base=enum:CP Thread Ids, indent = 1
    Execution Time (12MHz ticks), uint32, base=10
    TimeStamp (12MHz ticks), uint32
End

Begin Message, ETS CP Exe Fault FSM Event Data Rsp
    Num Events, uint8,  base=10, indent=1
    Reclaim Veto Mask, uint16, indent=1
    DFS Write Error, uint32, indent=1
    FSM Event, record, type=FSM Event Data, maxsize=16, size=Num Events
End

Begin Record, FSM Event Data
    Event Type, uint8,  base=enum:FSM Event Type, indent=1
    Thread ID, uint32, base=enum:CP Thread Ids
    FSM Arg2, uint32
    Time(ms), uint32, scale=Q5, format=%7.3f
End

Begin Message, ETS Generic Ack Rsp
    MsgId, uint16, base=enum:ETS Id
End

Begin Message, CP Trace All Off Rsp
    printformat All Traces
End

Begin Message, CP Trace CP MON Generic Dec1 Rsp
    printformat , 1, 1, CP MON Generic Dec1, N=%d, <systime>  CP - MON Generic Dec1: %d, %d, %d, %d, %d, %d, %d, %d, %d, %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP MON Generic Dec2 Rsp
    printformat , 1, 1, CP MON Generic Dec2, N=%d, <systime>  CP - MON Generic Dec2: %d, %d, %d, %d, %d, %d, %d, %d, %d, %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP MON Generic Hex1 Rsp
    printformat , 1, 1, CP MON Generic Hex1, N=%d, <systime>  CP - MON Generic Hex1: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP MON Generic Hex2 Rsp
    printformat , 1, 1, CP MON Generic Hex2, N=%d, <systime>  CP - MON Generic Hex2: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP MON Msg Trace Rsp
    printformat , 1, 1, CP MON Msg Trace, N=%d, <systime>  CP - MON Msg Trace: Msg ID - %d, Source Task ID - %s, Dest Task ID - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg ID, uint32
    Source Task ID, uint32, base=enum:CP Thread Ids
    Dest Task ID, uint32, base=enum:CP Thread Ids
End

Begin Message, CP Trace CP MON Deep Sleep Control Rsp
    printformat , 1, 1, CP MON Deep Sleep Control, N=%d, <systime>  CP - Deep Sleep Control: %s, Interface: %s, Curr32K: 0x%08X, Args: 0x%08X 0x%08X 0x%08X 0x%08X 0x%08X 0x%08X 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Control, uint32, base=enum:Sleep Control
    Interface, uint32, base=enum:1xRTT/EVDO/GPS/BD/SW
    Curr32K, uint32, base=16
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP MON Deep Sleep Veto Mask Rsp
    printformat , 1, 1, CP MON Deep Sleep Veto Mask, N=%d, <systime>  Upper Deep Sleep Veto Mask 0x%08X, Lower Deep Sleep Veto Mask 0x%08X, Interface: %s, Deep Sleep Requested: %s, Current 32K: 0x%08X, Deep Light Sleep Enabled: 0x%08X, Power saving mode 1x: %s, Power Save DO: %s, Wakeup 32K: 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Upper Deep Sleep Veto Mask, uint32
    Lower Deep Sleep Veto Mask, uint32
    Interface, uint32, base=enum:1xRTT/EVDO/GSM/CBP
    Deep Sleep Requested, uint32, base=enum:No/Yes
    Current 32K, uint32
    DeepLight Sleep Enabled, uint32
    Power saving mode 1x, uint32, base=enum:Power Save Modes
    Power saving mode DO, uint32, base=enum:Power Save Modes
    Wakeup 32K, uint32
End

Begin Message, CP Trace CP MON IPCLog Open Rsp
    printformat , 1, 1, 0x%08X CP - MON IPCLog FN: %s, %x, %x, %x, %x
    Sys Time, uint32
    FunctionName, uint32, base=enum:MON IPCLog FunctionName
    Param 1, uint32
    Param 2, uint32
    Param 3, uint32
    Param 4, uint32
End

Begin Message, CP Trace CP MON Dyn Code Dnld Rsp
    printformat , 1, 1, CP MON Dyn Code Dnld, N=%d, <systime>  CP - Dyn Code Dnld Func=%s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Func, uint32, base=enum:Dyn Code Dnld Functions
    Data, union,  enum=Func
End

Begin Message, CP MON Dyn Code Dnld Dcd Msg Input Rsp
    ChannelId, uint32
    NumAppMsgs, uint32
End

Begin Message, CP MON Dyn Code Dnld Dcd Msg Output Rsp
    NumAppMsgs, uint32
End

Begin Message, CP MON Dyn Code Dnld Dcd Msg Id Rsp
    MsgId, uint32, base=enum:IpcDspAppMsgIdT
    AppId, uint32, base=enum:IpcDspAppChannelCodeDownloadSourceT
End

Begin Message, CP MON Dyn Code Dnld Dcd App Read Req Input Rsp
    AppId, uint32, base=enum:IpcDspAppChannelCodeDownloadSourceT
    AbsFileOffsetBytes, uint32
    NumBytesToRead, uint32
End

Begin Message, CP MON Dyn Code Dnld Dcd App Read Req Output Rsp
    FileId, uint32
    AbsFileOffsetBytes, uint32
    NumBytesToRead, uint32
    NumBytesReadOrError, uint32
    RefNum, uint32
End

Begin Message, CP Trace CP L1d SpState Rsp
    printformat , 1, 1, CP L1d SpState, N=%d, <systime>  CP - L1D SPage State: prev %s, new %s, SubFrameTime %d, LO 32K counter: 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PrevState, uint32, base=enum:Slotted State
    State, uint32, base=enum:Slotted State
    SubFrameTime, uint32, base=10
    LO 32K counter, uint32, base=16
End

Begin Message, CP Trace CP L1d Sleep32k Rsp
    printformat , 1, 1, CP L1d Sleep32k, N=%d, <systime>  CP - L1D SPage: Sleep - wake duration %.02f
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    WakeTime, uint32,  scale=0.030517578125
End

Begin Message, CP Trace CP L1d Event Entry Rsp
    printformat , 1, 1, CP L1d Event Entry, N=%d, <systime>  CP - L1D SPage: Entering - Event  %s, SubFrameTime %d, LO 32K counter: 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:SPageEvent
    SubFrameTime, uint32, base=10
    LO 32K counter, uint32, base=16
End

Begin Message, CP Trace CP L1d Event Exit Rsp
    printformat , 1, 1, CP L1d Event Exit, N=%d, <systime>  CP - L1D SPage: Exiting - Event  %s, SubFrameTime %d, LO 32K counter: 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:SPageEvent
    SubFrameTime, uint32, base=10
    LO 32K counter, uint32, base=16
End

Begin Message, CP Trace CP L1d Calibration Start Rsp
    printformat , 1, 1, CP L1d Calibration Start, N=%d, <systime>  CP - L1D SPage: Calib Start - Initial 32KHz %d, Initial 9MHz %d, Initial system time 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    start32KHz, uint32
    start9MHz, uint32
    Systimefrm, uint32
End

Begin Message, CP Trace CP L1d Calibration End Rsp
    printformat , 1, 1, CP L1d Calibration End, N=%d, <systime>  CP - L1D SPage: Calib End - Final 32KHz %d, Final 9MHz %d, Final system time 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    end32KHz, uint32
    end9MHz, uint32
    Systimefrm, uint32
End

Begin Message, CP Trace CP L1d Calibration Done Rsp
    printformat , 1, 1, CP L1d Calibration Done, N=%d, <systime>  CP - L1D SPage: Calib Done - 32KHz delta %d, 9MHz Delta %d, 9MHz Inst Dev %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    cal32KHz, uint32
    cal9MHz, uint32
    delta9mhz, uint32
End

Begin Message, CP Trace CP L1d Slotted Params Message Rsp
    printformat , 1, 1, CP L1d Slotted Params Message, N=%d, <systime>  CP - L1D SPage: Params message - Page Slot %d, Slot Cycle index %d, QPch Enabled %s, Qpch Walsh %d, Qpch Rate %d, Pch len %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PageSlot, uint32
    SlotCycleIndex, uint32
    QpchEnabled, uint32, base=enum:QPCHENABLE
    QpageCh, uint32
    QpchRate, uint32
    PchSlotCycleLenInFrames, uint32
End

Begin Message, CP Trace CP L1d Resync Enter Rsp
    printformat , 1, 1, CP L1d Resync Enter, N=%d, <systime>  CP - L1D SPage: Resync Interrupt entered -  Resync Type : %s, SubFrameTime %d, LO 32K counter: 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SlpType, uint32, base=enum:WAKETYPE
    SubFrameTime, uint32, base=10
    LO 32K counter, uint32, base=16
End

Begin Message, CP Trace CP L1d Slotted Long Code Read Rsp
    printformat , 1, 1, CP L1d Slotted Long Code Read, N=%d, <systime>  CP - L1D SPage: Long Code Read - Current Long Code: 0x%08X, 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurrLCUpper, uint32
    CurrLCLower, uint32
End

Begin Message, CP Trace CP L1d Slotted Initial Long Code Rsp
    printformat , 1, 1, CP L1d Slotted Initial Long Code, N=%d, <systime>  CP - L1D SPage: Initialized Long Code - Hop Frames %d, Long Code Systime  0x%08X Current Long Code: 0x%08X, 0x%08X Next Long Code: 0x%08X, 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    HopFrames, uint32
    LCsystime, uint32
    CurrLCUpper, uint32
    CurrLCLower, uint32
    NextLCUpper, uint32
    NextLCLower, uint32
End

Begin Message, CP Trace CP L1d Slotted Sleep Pch Calib Rsp
    printformat , 1, 1, CP L1d Slotted Sleep Pch Calib, N=%d, <systime>  CP - L1D SPage: Sleep Calibration - Norm Resync Wake Time: 0x%08X, Pch Wake Time: 0x%08X, PE order Wake Time: 0x%08X,Target SF %d, Ref SF %d, Ref9MHz %d, Reference 32KHz %d, 9MHz Filt Dev %d, Cal Filter Scaling Factor %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NormWakeSystime, uint32
    PchWakeFrm, uint32
    PeOrderedWakeSystime, uint32
    TargetSF, uint32
    RefSF, uint32
    Ref9MHz, uint32
    Ref32KHz, uint32
    Filt9MHzDev, uint32
    CalFilterScalingFactor, uint32
End

Begin Message, CP Trace CP L1d Slotted Sleep Pch2 Calib Rsp
    printformat , 1, 1, CP L1d Slotted Sleep Pch2 Calib, N=%d, <systime>  CP - L1D SPage: Sleep Calibration - Wake Type %s, 9MHz Target %d, 9MHz dur %d, Resync 9MHz %d, 32KHz match %d, 32KHz Delta %d, Ref Systime 0x%08X, Resync1: 0x%08X Resync0: 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SlpType, uint32, base=enum:WAKETYPE
    Target9MHz, uint32
    Targ9MHzDur, uint32
    SystimeResync, uint32
    Resync32KHzMat, uint32
    ResyncDelta, uint32
    RefsysTime, uint32
    Resync1, uint32
    Resync0, uint32
End

Begin Message, CP Trace CP L1d Slotted Sleep Pch3 Calib Rsp
    printformat , 1, 1, CP L1d Slotted Sleep Pch3 Calib, N=%d, <systime>  CP - L1D SPage: Sleep Calibration - Backoff time %d ms, Resync Start symbol %d, Dspm Rxagc Start Symbol %d, QsRef %d, QsDelta %d, QsTime %d, QsBackoff %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    BackoffTimems, uint32
    ResyncStartSymbol, uint32
    DspmAbsStarttime, uint32
    QsearchRef, uint32
    QsearchDelta, uint32
    QseachTime, uint32
    QsearchBackoff, uint32
End

Begin Message, CP Trace CP L1d Resync Exit Rsp
    printformat , 1, 1, CP L1d Resync Exit, N=%d, <systime>  CP - L1D SPage: Resync Interrupt exit - SubFrameTime %d, Lisr Enter %d, Lisr Exit %d, Lisr time delta %.02fms, Hisr Enter %d, Hisr Exit %d, Hisr Time delta %.02fms, Hisr Enter 32K: 0x%08X, Hisr Exit 32K: 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SubFrameTime, uint32
    startLisr, uint32
    endLisr, uint32
    LisrTimeDelta, uint32, scale=0.4166666666
    startHisr, uint32
    endHisr, uint32
    HisrTimeDelta, uint32, scale=0.4166666666
    Hisr Enter 32K, uint32, base=16
    Hisr Exit 32K, uint32, base=16
End

Begin Message, CP Trace CP L1d Resync state sleep Rsp
    printformat , 1, 1, CP L1d Resync state sleep, N=%d, <systime>  CP - L1D SPage: Resync state - Osc enable 32KHz %d, SlpOvr 32KHz %d, SlpOver-Resync Delta %.02fus, Expected Resync %d, Actual Resync %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    OSCEnable32KHz, uint32
    SleepOver32KHz, uint32
    SlpRsyncDelta, uint32,  scale=30.517578125
    ExpectedResync, uint32
    ActualResync, uint32
End

Begin Message, CP Trace CP L1d Long Code Hop Rsp
    printformat , 1, 1, CP L1d Long Code Hop, N=%d, <systime>  CP - L1D SPage: Long Code Hop - Reference LC systime 0x%08X Current Long Code: 0x%08X, 0x%08X Target LC Systime 0x%08X Next Long code: 0x%08X, 0x%08X Number of hop frames %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RefLCSystime, uint32
    CurrLCUpper, uint32
    CurrLCLower, uint32
    TargLcSystime, uint32
    NextLCUpper, uint32
    NextLCLower, uint32
    NumberofFrames, uint32
End

Begin Message, CP Trace CP L1d 32KHz Trace Rsp
    printformat , 1, 1, CP L1d 32KHz Trace, N=%d, <systime>  CP - L1D SPage: 32KHz : %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    32KHz, uint32
End

Begin Message, CP Trace CP L1d Mini-Acq Trace Rsp
    printformat , 1, 1, CP L1d Mini-Acq Trace, N=%d, <systime>  CP - L1D SPage: Mini-Acq Results: Actual TC/2 = %d, EcIo = %4.3f dB, PN = %d, TCelsius = %d, CalValue = 0x%04x, Quotient = 0x%04x, Remainder = 0x%04x, SubFrameTime = %d, LO 32K counter: 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MiniAcqErrTc2, int32
    Ec_Io, int32, scale=Q16, log10=true, logscale=10
    PN, uint32, base=10
    TCelsius, int32
    CalValue, int32
    Quotient, int32
    Remainder, int32
    SubFrameTime, uint32
    LO 32K counter, uint32, base=16
End

Begin Message, CP Trace CP L1d Immediate Wake Trace Rsp
    printformat , 1, 1, CP L1d Immediate Wake Trace, N=%d, <systime>  CP - L1D SPage: IMMEDIATE WAKE : SleepFrm Cnt %d, Target SF %d, Ref SF %d, Ref9MHz %d, Cal Ref 9MHz %d, Cal 32KHz Wake %d, Calib Scale Factor %d, Target 9MHz %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SleepFrmCnt, uint32
    TargetSF, uint32
    RefSF, uint32
    Ref9MHz, uint32
    CalRef9MHz, uint32
    Cal32KHzWake, uint32
    CalScalingFact, uint32
    Target9MHz, uint32
End

Begin Message, CP Trace CP L1d Immediate Wake Trace2 Rsp
    printformat , 1, 1, CP L1d Immediate Wake Trace2, N=%d, <systime>  CP - L1D SPage: IMMEDIATE WAKE 2 : System Time Resync %d, Num Hop Frames %d, Ref Systime Frame 0x%08X, Norm Wake Frm 0x%08X, Pch Wake Frm 0x%08X, Long Code Ref Time 0x%08X LC upper: 0x%08X, LC lower: 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SystemTimeResync, uint32
    NumberOfHopFrames, uint32
    RefSystemTime, uint32
    NormWakeSystime, uint32
    PchWakeSystemTimeFrame, uint32
    LcodeRefTime, uint32
    CurrLCUpper10, uint32
    CurrLCLower32, uint32
End

Begin Message, CP Trace CP L1d Clock Calib Dump Rsp
    printformat , 1, 1, CP L1d Clock Calib Dump, N=%d, <systime>  CP - L1D SPage: 9MHz %d, 32KHz %d, 9MHz Delta sum %d, 32KHz Delta sum %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Time9MHz, uint32
    Time32KHz, uint32
    Delta9MHz, uint32
    Delta32KHz, uint32
End

Begin Message, CP Trace CP L1d Slotted Sleep QPch Calib Rsp
    printformat , 1, 1, CP L1d Slotted Sleep QPch Calib, N=%d, <systime>  CP - L1D SPage: QPCH Sleep Calibration - Norm Resync Wake Time: 0x%08X, QPch Wake Time: 0x%08X, PE order Wake Time: 0x%08X,Target SF %d, Ref SF %d, Ref9MHz %d, Reference 32KHz %d, 9MHz Filt Dev %d, Cal Filter Scaling Factor %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NormWakeSystime, uint32
    QchWakeFrm, uint32
    PeOrderedWakeSystime, uint32
    TargetSF, uint32
    RefSF, uint32
    Ref9MHz, uint32
    Ref32KHz, uint32
    Filt9MHzDev, uint32
    CalFilterScalingFactor, uint32
End

Begin Message, CP Trace CP L1d Slotted Sleep QPch Calib2 Rsp
    printformat , 1, 1, CP L1d Slotted Sleep QPch Calib2, N=%d, <systime>  CP - L1D SPage: QPCH Sleep Calibration 2 - Wake Type %s, 9MHz SF Target %d, 9MHz dur %d, Actual Resync 9MHz %d, Formulated Resync 9MHz %d, Ref SysTime 0x%08X, PE ordered PI %d, RxAgc Start Symbol %d, Resync Start Symbol %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SlpType, uint32, base=enum:WAKETYPE
    Target9MHz, uint32
    Targ9MHzDur, uint32
    SystimeResync, uint32
    SymbResync, uint32
    RefSystime, uint32
    SymbPosOrd, uint32
    RxAgcStartSymb, uint32
    ResyncStartSymb, uint32
End

Begin Message, CP Trace CP L1d Slotted Sleep QPch Calib3 Rsp
    printformat , 1, 1, CP L1d Slotted Sleep QPch Calib3, N=%d, <systime>  CP - L1D SPage: QPCH Sleep Calibration 3 - QsRef %d, QsDelta %d, QsTime %d, QsBackoff %d, Backoff time ms %d, Computed Backoff 9MHz %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    QsearchRef, uint32
    QsearchDelta, uint32
    QseachTime, uint32
    Qsearchbackoff, uint32
    Backofftimems, uint32
    CompBackoff9mhz, uint32
End

Begin Message, CP Trace CP L1d Slotted Wake Mode Rsp
    printformat , 1, 1, CP L1d Slotted Wake Mode, N=%d, <systime>  CP - L1D SPage: Waking PE - Wake Type : %s, PI status = %s, Qpch Metric = %d, Pilot Energy = %d, Ec/Io = %d, NumPath = %d, Qpch PN = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SlpType, uint32, base=enum:WAKETYPE
    QpchInd, uint32, base=enum:QPCHINDTYPE
    Qpchmetric, uint32
    PilotEnergy, uint32
    EcIo, uint32
    NumPath, uint32
    QpchPilotPn, uint32
End

Begin Message, CP Trace CP L1d Qpch Search Expired Rsp
    printformat , 1, 1, CP L1d Qpch Search Expired, N=%d, <systime>  CP - L1D SPage: Qpch Search Expired: Indicator Frame %s, Slotted State %s, SubFrameTime %d, LO 32K counter: 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    QpchFrame, uint32, base=enum:Slotted State
    State, uint32, base=enum:Slotted State
    SubFrameTime, uint32, base=10
    LO 32K counter, uint32, base=16
End

Begin Message, CP Trace CP L1d Sleep IHO Detected Rsp
    printformat , 1, 1, CP L1d Sleep IHO Detected, N=%d, <systime>  CP - L1D SPage: Sleep Hand off Detected - PE Order wake frame : 0x%08X, SubFrameTime %d, LO 32K counter: 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NewWakeFrame, uint32
    SubFrameTime, uint32, base=10
    LO 32K counter, uint32, base=16
End

Begin Message, CP Trace CP L1d Slotted Generic 1 Rsp
    printformat , 1, 1, CP L1d Slotted Generic 1, N=%d, <systime>  CP - Slotted Gen1 - 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP L1d Slotted Generic 2 Rsp
    printformat , 1, 1, CP L1d Slotted Generic 2, N=%d, <systime>  CP - Slotted Gen2 - 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP L1d Mini-Acq Cal Adj Trace Rsp
    printformat , 1, 1, CP L1d Mini-Acq Cal Adj Trace, N=%d, <systime>  CP - L1D SPage: Mini-Acq Calibration Filter Adjustment: Prev %d, New = %d, Correction in 8th's = %d, SubFrameTime %d, LO 32K counter: 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PrevCal9MHzFilt, int32
    Cal9MHzFilt, int32
    Correction9MHz, int32
    SubFrameTime, int32
    LO 32K counter, uint32, base=16
End

Begin Message, CP Trace CP L1d Sleep Time Trap Trace Rsp
    printformat , 1, 1, CP L1d Sleep Time Trap Trace, N=%d, <systime>  CP - L1D SPage: Sleep Time Trap: System time 0x%08X, Resync Time 0x%08X, SubFrame cutoff %d Curr SubFrame %d PI position %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP L1d Slotted Error Trace Rsp
    printformat , 1, 1, CP L1d Slotted Error Trace, N=%d, <systime>  CP - SPAGE ERROR - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:L1dTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP L1d Slotted Warning Trace Rsp
    printformat , 1, 1, CP L1d Slotted Warning Trace, N=%d, <systime>  CP - SPAGE WARNING - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:L1dTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP L1d Slotted Full Trace Rsp
    printformat , 1, 1, CP L1d Slotted Full Trace, N=%d, <systime>  CP - L1D SPAGE - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:L1dTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP L1d Slotted FSM Trace Rsp
    printformat , 1, 1, CP L1d Slotted FSM Trace, N=%d, <systime>  CP - SPAGE FSM - %s %s %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:L1dTraceTrackT
    State, uint32, base=enum:Slotted State
    Event, uint32, base=enum:SPageEvent
    Args, array, type=uint32, maxsize=7, size=end
End

Begin Message, CP Trace CP L1d Cmd Mbox Rsp
    printformat , 1, 1, CP L1d Cmd Mbox, N=%d, <systime>  L1d Cmd Mbox: Msg Id - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Id, uint32, base=enum:L1dMsgId
End

Begin Message, CP Trace CP L1d State Rsp
    printformat , 1, 1, CP L1d State, N=%d, <systime>  L1d State: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:L1dStates
End

Begin Message, CP Trace CP L1d Rx Srch Rslts Rsp
    printformat , 1, 1, CP L1d Rx Srch Rslts, N=%d, <systime>  CP L1d Rx Srch Rslts - SeqNumFromSearcher %d  SeqNumStoredInL1D %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SeqNumFromSearcher, uint32
    SeqNumStoredInL1D, uint32
End

Begin Message, CP Trace CP L1d Num Act Cand Rsp
    printformat , 1, 1, CP L1d Num Act Cand, N=%d, <systime>  CP L1d Num Act Cand - Num Active %d  Num Cand %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Num Active, uint32
    Num Cand, uint32
End

Begin Message, CP Trace CP L1d Num Nghbr Rsp
    printformat , 1, 1, CP L1d Num Nghbr, N=%d, <systime>  CP L1d Num Nghbr - Num Nghbrs %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Num Nghbrs, uint32
End

Begin Message, CP Trace CP L1d Signal Rsp
    printformat , 1, 1, CP L1d Signal, N=%d, <systime>  L1d Signal: %s, Current L1d State: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Signal, uint32, base=enum:L1dSignal
    State, uint32, base=enum:L1dStates
End

Begin Message, CP Trace CP L1d Rf Tune Rsp
    printformat , 1, 1, CP L1d Rf Tune, N=%d, <systime>  L1d Rf Tune
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP L1d Timing Chg Act Time Rsp
    printformat , 1, 1, CP L1d Timing Chg Act Time, N=%d, <systime>  L1d Timing Chg Act Time - ActFrameNum %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Act Frame Num, uint32
End

Begin Message, CP Trace CP L1d Transmitter Control Rsp
    printformat , 1, 1, CP L1d Transmitter Control, N=%d, <systime>  L1d Transmitter Control - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Transmitter State, uint32, base=enum:on/off
End

Begin Message, CP Trace CP L1d PSW Status Report Rsp
    printformat , 1, 1, CP L1d PSW Status Report, N=%d, <systime>  PSWStatus: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PSW Status, uint32, base=enum:PSWStatus
End

Begin Message, CP Trace CP L1d Timer Started Rsp
    printformat , 1, 1, CP L1d Timer Started, N=%d, <systime>  L1dTimerId: %s Started. Duration %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    L1d Timer Id, uint32, base=enum:L1dTimerId
    Timer Duration, uint32
End

Begin Message, CP Trace CP L1d Timer Expired Rsp
    printformat , 1, 1, CP L1d Timer Expired, N=%d, <systime>  L1dTimerId: %s Expired
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    L1d Timer Id, uint32, base=enum:L1dTimerId
End

Begin Message, CP Trace CP L1d Timer Stopped Rsp
    printformat , 1, 1, CP L1d Timer Stopped, N=%d, <systime>  L1dTimerId: %s Stopped
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    L1d Timer Id, uint32, base=enum:L1dTimerId
End

Begin Message, CP Trace CP L1d Dsm Ack Msg Id Rsp
    printformat , 1, 1, CP L1d Dsm Ack Msg Id, N=%d, <systime>  AckId: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Ack Id, uint32, base=enum:DsmAckMsgId
End

Begin Message, CP Trace CP L1d Num Cand Freq Rsp
    printformat , 1, 1, CP L1d Num Cand Freq, N=%d, <systime>  CP L1d Num Cand Freq - Num Nghbrs %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Num Nghbrs, uint32
End

Begin Message, CP Trace CP L1d Srch Seq Mismatch Rsp
    printformat , 1, 1, CP L1d Srch Seq Mismatch, N=%d, <systime>  Search Sequence Mismatch
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP L1d GPS State Rsp
    printformat , 1, 1, CP L1d GPS State, N=%d, <systime>  L1d Gps State: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Gps State, uint32, base=enum:L1dGpsState
End

Begin Message, CP Trace CP L1d GPS MobSysTOffset Rsp
    printformat , 1, 1, CP L1d GPS MobSysTOffset, N=%d, <systime>  CP - L1D Gps MobSysTOfst: TTStrt: %d, TTEnd: %d, FgrEarly: %d, FgrEarlyOfst: %d, MOBSYSTOFST: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimeTrackStart, int32, base=10
    TimeTrackEnd, int32, base=10
    EarlyFinger, uint32, base=10
    EarlyFingerOfst, int32, base=10
    MobSysTOffset, int32, base=10
End

Begin Message, CP Trace CP L1d Rsch Traces Rsp
    printformat , 1, 1, CP L1d Rsch Traces, N=%d, <systime>  CP - L1D R %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    L1d Sch Tr Id, uint32, base=enum:L1dSchTrId
End

Begin Message, CP Trace CP L1d Fsch Traces Rsp
    printformat , 1, 1, CP L1d Fsch Traces, N=%d, <systime>  CP - L1D F %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    L1d Sch Tr Id, uint32, base=enum:L1dSchTrId
End

Begin Message, CP Trace CP L1d Action Time Debug Rsp
    printformat , 1, 1, CP L1d Action Time Debug, N=%d, <systime>  Action Time %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Time, uint32, base=enum:ActTime
End

Begin Message, CP Trace CP L1d Aflt Rsp
    printformat , 1, 1, CP L1d Aflt, N=%d, <systime>  CP - L1D Aflt: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Trace Id, uint32, base=enum:Aflt Traces Enum
    Rec, union, enum=Trace Id
End

Begin Message, CP L1d Aflt ProcessL1dAfltSearchRsltMsg() AfltSearchList Not Valid Rsp
End

Begin Message, CP L1d Aflt ProcessL1dAfltSearchRsltMsg() MsgRx Dump1 Rsp
    L1d State, uint32, base=enum:INIT/MORE_PILOTS/FINAL_RESULT
    ReferencePN, uint32, base=10
    Timing Count, uint32, base=10
    Num Pilots, uint32, base=10
End

Begin Message, CP L1d Aflt ProcessL1dAfltSearchRsltMsg() MsgRx Dump2 Rsp
    PN, uint32, base=10
    PN Phase Offset, int32
    Strength, int32, scale=Q16, scale=Q16, log10=true, logscale=10
End

Begin Message, CP L1d Aflt UpdateAfltSearchList() AfltSearchList Dump1 Rsp
    Reference PN, uint32, base=10
    Time Correct Ref, int32,  base=10
    NumPilots, uint32, base=10
End

Begin Message, CP L1d Aflt UpdateAfltSearchList() AfltSearchList Dump2 Rsp
    Pilot PN, uint32, base=10
    Time Correction, int32,  base=10
End

Begin Message, CP L1d Aflt SendDsmAfltPilotSetMsg() Rsp
End

Begin Message, CP L1d Aflt SendDsmPilotSetAbortMsg() Rsp
End

Begin Message, CP L1d Aflt InitializeAfltSearchList() Rsp
End

Begin Message, CP L1d Aflt ProcessL1dAfltDspSearchTimeoutMsg() Rsp
End

Begin Message, CP L1d Aflt ProcessL1dAfltSetsListSearchMsg() Rsp
End

Begin Message, CP L1d Aflt ProcessL1dAfltAbortSearchMsg() Rsp
End

Begin Message, CP Trace CP L1d Search Time Calc Rsp
    printformat , 1, 1, CP L1d Search Time Calc, N=%d, <systime>  CP - L1D Search Time Calc: Num Act/Cand Pilots %d, Act/Cand Window Size %d, Num Nghbr Pilots %d, Nghbr Window Size %d, Est Search Time (msec) %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NumActCandPilots, uint32, base=10
    ActCandWindowSize, uint32, base=10
    NumNghbrPilots, uint32, base=10
    NghbrWindowSize, uint32, base=10
    EstSearchTimeMsec, uint32, base=10
End

Begin Message, CP Trace CP L1d Each Timing Rsp
    printformat , 1, 1, CP L1d Each Timing, N=%d, <systime>  CP - L1D Each Timing: Type=%s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Type, uint32, base=enum:EachTimingRecords
    EachTimimgRec, union, enum=Type
End

Begin Message, CP L1d Each Timing Current Time Rsp
    Hi26Bits, uint32
    Lo16Bits, uint32
End

Begin Message, CP L1d Each Timing Slot Time Rsp
    Hi26Bits, uint32
    Lo16Bits, uint32
End

Begin Message, CP L1d Each Timing Pcg Event Register Rsp
    PcgNum, uint32
    SigId, uint32, base=enum:L1dSignal
End

Begin Message, CP L1d Each Timing Time Pcg Event Register Rsp
    Time, uint32
    PcgNum, uint32
    SigId, uint32, base=enum:L1dSignal
End

Begin Message, CP L1d Each Timing Pcg Divide Rsp
    Hi26BitsIn, uint32
    Lo16BitsIn, uint32
    Divider, uint32
    Hi26BitsOut, uint32
    Lo16BitsOut, uint32
    Remainder, uint32
End

Begin Message, CP L1d Each Timing Convert 20ms To Pcgs Rsp
    Upper6In, uint32
    Low32In, uint32
    Pcg4In, uint32
    Hi26BitsOut, uint32
    Lo16BitsOut, uint32
End

Begin Message, CP L1d Each Timing Convert Pcgs To 20ms Rsp
    Hi26BitsIn, uint32
    Lo16BitsIn, uint32
    Low32Out, uint32
    Pcg4Out, uint32
End

Begin Message, CP L1d Each Timing Configured Rsp
    PcgNum, uint32
End

Begin Message, CP L1d Each Timing Tx Signal Ctrl Rsp
    TxSignalPcgNum, uint32
End

Begin Message, CP Trace CP L1d Srch Rslts Blocked Rsp
    printformat , 1, 1, CP L1d Srch Rslts Blocked, N=%d, <systime>  CP L1d Srch Rslts Blocked - L1d State %s  Slotted State %s   NumActive %d   NumCandidate  %d  NumNeighbor   %d   Active PN0 Phase  %d    Strength   %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:L1dStates
    Slotted State, uint32, base=enum:Slotted State
    NumActive, uint32, base=10
    NumCandidate, uint32, base=10
    NumNeighbor, uint32, base=10
    PN Phase Offset, int32
    Strength, int32,  scale=Q6, format=%4.2f
End

Begin Message, CP Trace CP L1d 32kHz Osc Validation Rsp
    printformat , 1, 1, CP L1d 32kHz Osc Validation, N=%d, <systime>  CP - L1D 32k Osc Calib: Stage %s, Num Attempts %d, Expect Ticks %d, Actual Ticks %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Calib Stage, uint32, base=enum:Settling/WaitForStart/Monitor/Complete/Failed
    Num Attempts, uint32
    Expect Ticks, uint32
    Actual Ticks, uint32
End

Begin Message, CP Trace CP L1d Error Rsp
    printformat , 1, 1, CP L1d Error, N=%d, <systime>  CP - L1D Error - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:L1dTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP L1d Warning Rsp
    printformat , 1, 1, CP L1d Warning, N=%d, <systime>  CP - L1D Warning - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:L1dTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP L1d Full Rsp
    printformat , 1, 1, CP L1d Full, N=%d, <systime>  CP - L1D Full - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:L1dTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP L1d Diversity Ant Ctrl Rsp
    printformat , 1, 1, CP L1d Div Ant Ctrl, N=%d, <systime>  CP - 1x Div Ant Prams - 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP L1d Generic Dec1 Rsp
    printformat , 1, 1, CP L1d Generic Dec1, N=%d, <systime>  CP - L1D Generic Dec1: %d, %d, %d, %d, %d, %d, %d, %d, %d, %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP L1d Generic Dec2 Rsp
    printformat , 1, 1, CP L1d Generic Dec2, N=%d, <systime>  CP - L1D Generic Dec2: %d, %d, %d, %d, %d, %d, %d, %d, %d, %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP L1d Generic Hex1 Rsp
    printformat , 1, 1, CP L1d Generic Hex1, N=%d, <systime>  CP - L1D Generic Hex1: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP L1d Generic Hex2 Rsp
    printformat , 1, 1, CP L1d Generic Hex2, N=%d, <systime>  CP - L1D Generic Hex2: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP L1d Generic dB Rsp
    printformat , 1, 1, CP L1d Generic dB, N=%d, <systime>  CP - L1D Generic dB: %4.3f, %4.3f, %4.3f, %4.3f, %4.3f, %4.3f, %4.3f, %4.3f, %4.3f, %4.3f
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, log10=true, logscale=10, maxsize=10, size=end
End

Begin Message, CP Trace CP L1d Msg Trace Rsp
    printformat , 1, 1, CP L1d Msg Trace, N=%d, <systime>  CP - L1D Msg Trace: Msg ID - %d, Source Task ID - %s, Dest Task ID - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg ID, uint32
    Source Task ID, uint32, base=enum:CP Thread Ids
    Dest Task ID, uint32, base=enum:CP Thread Ids
End

Begin Message, CP Trace CP L1d Artd Metrics Rsp
    printformat , 1, 1, CP L1d Artd Metrics, N=%d, <systime>  CP - Artd Metrics - Rssi_Main: %2.4f, Rssi_Div: %2.4f, EcIo_Main: %2.4f, EcIo_Div: %2.4f, EbNt_Main: %2.4f, EbNt_Div: %2.4f, EbNt_Comb: %2.4f, TxPower: %2.4f
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Rssi_Main(dBm), int32, scale=Q6
    Rssi_Div(dBm), int32, scale=Q6
    EcIo_Main(dB), uint32, scale=Q16, log10=true, logscale=10
    EcIo_Div(dB), uint32, scale=Q16, log10=true, logscale=10
    EbNt_Main(dB), uint32, scale=Q8, log10=true, logscale=10
    EbNt_Div(dB), uint32, scale=Q8, log10=true, logscale=10
    EbNt_Comb(dB), uint32, scale=Q8, log10=true, logscale=10
    TxPower(dBm), int32, scale=Q6
End

Begin Message, CP Trace CP L1d Artd Full Rsp
    printformat , 1, 1, CP L1d Artd Full, N=%d, <systime>  CP - L1D Artf Full - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:L1dArtdTraceType
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP Cmd Mbox Rsp
    printformat , 1, 1, CP Cmd Mbox, N=%d, <systime>  Lmd Cmd Mbox: Msg Id - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Id, uint32, base=enum:LmdMsgIds
End

Begin Message, CP Trace CP Sig Mbox Rsp
    printformat , 1, 1, CP Sig Mbox, N=%d, <systime>  Lmd Sig Mbox: Msg Id - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Id, uint32
End

Begin Message, CP Trace CP Rev State Rsp
    printformat , 1, 1, CP Rev State, N=%d, <systime>  Lmd Rev State: State - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:LmdRevStates
End

Begin Message, CP Trace CP Rev Null Traffic Frame Rsp
    printformat , 1, 1, CP Rev Null Traffic Frame, N=%d, <systime>  Lmd Rev Null Traffic Frame: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Type, uint32, base=16
End

Begin Message, CP Trace CP Rev Access Sig Rcvd Rsp
    printformat , 1, 1, CP Rev Access Sig Rcvd, N=%d, <systime>  Lmd Rev Access Sig Rcvd: ChannelType - %s MsgLength - %d, NumBits - %d, FrameDuration -%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChannelType, uint32, base=enum:LmdRevChanTypes
    MsgLength, uint32, base=10
    NumBits, uint32, base=10
    FrameDuration, uint32,base=enum:AccessFrameDuration
End

Begin Message, CP Trace CP Rev Access Sig Sent Rsp
    printformat , 1, 1, CP Rev Access Sig Sent, N=%d, <systime>  Lmd Rev Access Sig Sent: ChannelType - %s MsgLength - %d, MsgData -0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChannelType, uint32, base=enum:LmdRevChanTypes
    MsgLength, uint32, base=10
    MsgData, uint32
End

Begin Message, CP Trace CP Rev Access Sig Abort Rsp
    printformat , 1, 1, CP Rev Access Sig Abort, N=%d, <systime>  Lmd Rev Access Sig Abort:	State - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:LmdRevStates
End

Begin Message, CP Trace CP Rev EACH Sig Process Rsp
    printformat , 1, 1, CP Rev EACH Sig Process, N=%d, <systime>  Lmd Rev EACH Sig Process: CarrierFrameNumBits- %d, CarrierNumFrame- %d, CarrierFrameBytes- %d, EachBitIndexInProc -%d, MaxNumFramesToDSM -%d, MaxFrameBytesToDSM -%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CarrierFrameNumBits, uint32, base=10
    CarrierNumFrame, uint32, base=10
    CarrierFrameBytes, uint32, base=10
    EachBitIndexInProc, uint32, base=10
    MaxNumFramesToDSM, uint32, base=10
    MaxFrameBytesToDSM, uint32, base=10
End

Begin Message, CP Trace CP Rev Sig Msg Rcvd Rsp
    printformat , 1, 1, CP Rev Sig Msg Rcvd, N=%d, <systime>  Lmd Rev Sig Msg Rcvd: MsgLength - 0x%x MsgData - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgLength, uint32
    MsgData, uint32
End

Begin Message, CP Trace CP Rev Sig Msg Sent Rsp
    printformat , 1, 1, CP Rev Sig Msg Sent, N=%d, <systime>  Lmd Rev Sig Msg Sent: MsgLength - 0x%x MsgData - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgLength, uint32
    MsgData, uint32
End

Begin Message, CP Trace CP Rev Transmitter Status Msg Rsp
    printformat , 1, 1, CP Rev Transmitter Status Msg, N=%d, <systime>  Lmd Rev Transmitter Staus Msg: Status - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Status, uint32, base=enum:TransmitterStatus
End

Begin Message, CP Trace CP Rev Traffic Primary Packets Rcvd Rsp
    printformat , 1, 1, CP Rev Traffic Primary Packets Rcvd, N=%d, <systime>  Lmd Rev Traffic Primary Packets Received: Count - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Packet Count, uint32
End

Begin Message, CP Trace CP Rev Sch Dtx Expired Rsp
    printformat , 1, 1, CP Rev Sch Dtx Expired, N=%d, <systime>  Lmd Rev Sch Dtx Expired: Dtx Duration - %d  Remaining Sch Duration - %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Dtx Duration, uint32, base=10
    Remaining Sch Duration, uint32, base=10
End

Begin Message, CP Trace CP Rev Sch Fill and DTX Count Rsp
    printformat , 1, 1, CP Rev Sch Fill and DTX Count, N=%d, <systime>  Lmd Rev Sch Fill and DTX Count: Remaining Fill=%d, Remaining DTX=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Remaining Fill, uint32, base=10
    Remaining DTX, uint32, base=10
End

Begin Message, CP Trace CP Fwd Traffic Frame Header Rsp
    printformat , 1, 1, CP Fwd Traffic Frame Header, N=%d, <systime>  Lmd Fwd Traffic Frame: Header - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Header, uint32
End

Begin Message, CP Trace CP Fwd Traffic Bad Frame Rsp
    printformat , 1, 1, CP Fwd Traffic Bad Frame, N=%d, <systime>  Lmd Fwd Traffic Bad Frame: PhyChnlType - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PhyChnlType, uint32
End

Begin Message, CP Trace CP Fwd Traffic Channel Type Rsp
    printformat , 1, 1, CP Fwd Traffic Channel Type, N=%d, <systime>  Lmd Fwd Traf Chan Type Msg: ChannelType - 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Chan Type, uint32
End

Begin Message, CP Trace CP Fwd Counter Suspend Status Rsp
    printformat , 1, 1, CP Fwd Counter Suspend Status, N=%d, <systime>  Lmd Fwd Counter Suspend : CounterSuspend - 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CounterSuspend, uint32
End

Begin Message, CP Trace CP Fwd Signaling Msg Rcvd Rsp
    printformat , 1, 1, CP Fwd Signaling Msg Rcvd, N=%d, <systime>  Lmd Fwd Signaling Msg Rcvd : PhyChnlType - %s  Category - 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PhyChnlType, uint32, base=enum:FwdChnl
    Category, uint32
End

Begin Message, CP Trace CP Fwd Pdch Header Info Rsp
    printformat , 1, 1, CP Fwd Pdch Header Info, N=%d, <systime>  Lmd Fwd PDCH Header Info : Sr Id - 0x%x  Pdu Len - 0x%x Ex Header - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SrId, uint32
    PduLen, uint32
    ExtHdr, uint32
End

Begin Message, CP Trace CP Fwd Pdch Signaling Info Rsp
    printformat , 1, 1, CP Fwd Pdch Signaling Info, N=%d, <systime>  Lmd Fwd PDCH Signaling Info : Pdu Len - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Len, uint32
End

Begin Message, CP Trace CP Fwd Pdch Traffic Info Rsp
    printformat , 1, 1, CP Fwd Pdch Traffic Info, N=%d, <systime>  Lmd Fwd PDCH Traffic Info : Pdu Len - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Len, uint32
End

Begin Message, CP Trace CP Svc Traffic Chan Start Msg Rsp
    printformat , 1, 1, CP Svc Traffic Chan Start Msg, N=%d, <systime>  Lmd Svc Traffic Chan Start Msg: ChInd - 0x%x ForMuxOpt - 0x%x RevMuxOpt - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChInd, uint32
    ForMuxOption, uint32
    RevMuxOption, uint32
End

Begin Message, CP Trace CP Svc Service Config Msg Rsp
    printformat , 1, 1, CP Svc Service Config Msg, N=%d, <systime>  Lmd Svc ServiceConfig Msg: FwdChnlIncl - %s  RevChnlIncl - %s RevMuxOpt - 0x%x ForMuxOpt - 0x%x  NumConRec - 0x%x  SrvcConfigNonNegInc - 0x%x FchRevRc - 0x%x FchForRc -0x%x DcchRevRc - 0x%x  DcchForRc - 0x%x ForNumBits - 0x%x RevNumBits - 0x%x  ActImmediate - 0x%x ActTime - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FwdChnlIncl, uint32, base=enum:ChannelMasks
    RevChnlIncl, uint32, base=enum:ChannelMasks
    RevMuxOpt, uint16
    ForMuxOpt, uint16
    NumConRec, uint32
    SrvcConfigNonNegInc, uint32
    FchRevRc, uint16
    FchForRc, uint16
    DcchRevRc, uint16
    DcchForRc, uint16
    RevNumBits, uint16
    ForNumBits, uint16
    ActImmediate, uint32
    ActTime, uint32
End

Begin Message, CP Trace CP Svc ServiceOpt Disc Msg Rsp
    printformat , 1, 1, CP Svc ServiceOpt Disc Msg, N=%d, <systime>  Lmd Svc ServiceOpt Disc Msg: ServiceOptInuse - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ServiceOptInuse, uint32, base=enum:LmdSvcOpts
End

Begin Message, CP Trace CP Svc LPM Config Rsp
    printformat , 1, 1, CP Svc LPM Config, N=%d, <systime>  Lmd Svc NN Msg LPM Config: ChInd - 0x%x sr_id - 0x%x PhysicalResInNNMsg - %s  LogicalResource - 0x%x  ForwardFlag - 0x%x ReverseFlag - 0x%x NumServiceInuse - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChInd, uint32
    sr_id, uint32
    PhysicalResInNNMsg, uint32, base=enum:ChannelIds
    LogicalResource, uint32
    ForwardFlag, uint32
    ReverseFlag, uint32
    NumServiceInuse, uint32
End

Begin Message, CP Trace CP Svc DTCH Mux Control and RC Rsp
    printformat , 1, 1, CP Svc DTCH Mux Control and RC, N=%d, <systime>  Lmd Svc Dtch Mux Table and RC : FwdChanMask - %s FwdDtchRC  - 0x%x RevDtchRC - 0x%x FwdDtchMuxOpt - 0x%x FwdDtchNumBits - 0x%x RevDtchMuxOpt - 0x%x RevDtchNumBits - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FwdChanMask, uint32, base=enum:ChannelMasks
    FwdDtchRC, uint32
    RevDtchRC, uint32
    FwdDtchMuxOpt, uint32
    FwdDtchNumBits, uint32
    RevDtchMuxOpt, uint32
    RevDtchNumBits, uint32
End

Begin Message, CP Trace CP Svc SrId Usage Rsp
    printformat , 1, 1, CP Svc SrId Usage, N=%d, <systime>  Lmd Svc SrId Usage: FwdFchPtSrId -0x%x FwdFchSecSrId - 0x%x FwdDcchPtSrId - 0x%x FwdDcchSecSrId - 0x%x FwdPhysicalRes - %s FwdPhysicalResOn - %s RevFchPtSrId     - 0x%x RevFchSecSrId    - 0x%x  RevDcchPtSrId    - 0x%x RevDcchSecSrId   - 0x%x RevPhysicalRes   -%s  RevPhysicalResOn -%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FwdFchPtSrId, uint16
    FwdFchSecSrId, uint16
    FwdDcchPtSrId, uint16
    FwdDcchSecSrId, uint16
    FwdPhysicalRes, uint32, base=enum:ChannelMasks
    FwdPhysicalResOn, uint32, base=enum:ChannelMasks
    RevFchPtSrId, uint16
    RevFchSecSrId, uint16
    RevDcchPtSrId, uint16
    RevDcchSecSrId, uint16
    RevPhysicalRes, uint32, base=enum:ChannelMasks
    RevPhysicalResOn, uint32, base=enum:ChannelMasks
End

Begin Message, CP Trace CP Svc Fch Service Option Rsp
    printformat , 1, 1, CP Svc Fch Service Option, N=%d, <systime>  Lmd Svc Fch Service Option:Direction - %s FFchPtSrId -0x%x FFchSecSrId -0x%x FchPtSvcOpt -%s FchPtTask -%s FchSecSvcOpt -%s FchSecTask -%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Direction, uint32, base=enum:TrafficDirection
    FFchPtSrId, uint16
    FFchSecSrId, uint16
    FchPtSvcOpt, uint32, base=enum:LmdSvcOpts
    FchPtTask, uint32, base=enum:LmdSvcTasks
    FchSecSvcOpt, uint32, base=enum:LmdSvcOpts
    FchSecTask, uint32, base=enum:LmdSvcTasks
End

Begin Message, CP Trace CP Svc Dcch service Option Rsp
    printformat , 1, 1, CP Svc Dcch service Option, N=%d, <systime>  Lmd Svc Dcch service Option: Direction - %s FDcchPtSrId -0x%x FDcchSecSrId -0x%x DcchPtSvcOpt -%s DcchPtTask -%s DcchSecSvcOpt -%s DcchSecTask -%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Direction, uint32, base=enum:TrafficDirection
    FDcchPtSrId, uint16
    FDcchSecSrId, uint16
    DcchPtSvcOpt, uint32, base=enum:LmdSvcOpts
    DcchPtTask, uint32, base=enum:LmdSvcTasks
    DcchSecSvcOpt, uint32, base=enum:LmdSvcOpts
    DcchSecTask, uint32, base=enum:LmdSvcTasks
End

Begin Message, CP Trace CP Svc Max Vocoder Rate Rsp
    printformat , 1, 1, CP Svc Max Vocoder Rate, N=%d, <systime>  Lmd Svc Max Vocoder Rate: VoiceRate - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    VoiceRate, uint32
End

Begin Message, CP Trace CP Svc Rev Dcch Config Get Rsp
    printformat , 1, 1, CP Svc Rev Dcch Config Get, N=%d, <systime>  Lmd Svc Rev Dcch Config Get: DcchInUse - 0x%x DcchMuxPdu -0x%x Header - 0x%x PtBits - 0x%x SigBits -0x%x SecBits -0x%x SigNumInsBits -0x%x NullFrame - 0x%x HeaderSize - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    DcchInuse, uint32
    MuxPdu, uint32
    Header, uint32
    PtBits, uint32
    SigBits, uint32
    SecBits, uint32
    SigInsBits, uint32
    NullFrame, uint32
    HeaderSize, uint32
End

Begin Message, CP Trace CP Svc Rev Fch Config Get Rsp
    printformat , 1, 1, CP Svc Rev Fch Config Get, N=%d, <systime>  Lmd Svc Rev Fch Config Get: PtRate - 0x%x MuxPdu -0x%x Header - 0x%x PtBits - 0x%x SigBits - 0x%x SecBits -0x%x SigNumInsBits -0x%x NullFrame - 0x%x HeaderSize - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PtRate, uint32
    MuxPdu, uint32
    Header, uint32
    PtBits, uint32
    SigBits, uint32
    SecBits, uint32
    SigInsBits, uint32
    NullFrame, uint32
    HeaderSize, uint32
End

Begin Message, CP Trace CP Svc Fwd Fch SetUp Info Rsp
    printformat , 1, 1, CP Svc Fwd Fch SetUp Info, N=%d, <systime>  Lmd Svc Fwd Fch SetUp Info: PhyChan - 0x%x MuxPdu - 0x%x FchRate - 0x%x FwdDsch -0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PhyChan, uint32
    MuxPdu, uint32
    FchRate, uint32
    FwdDsch, uint32
End

Begin Message, CP Trace CP Svc Fwd Fch Config Get Rsp
    printformat , 1, 1, CP Svc Fwd Fch Config Get, N=%d, <systime>  Lmd Svc Fwd Fch Config Get: PhysChan - %s Ptbits - 0x%x PtRoute - %s Sigbits - 0x%x SigRoute -%s SigCat - 0x%x SecBits - 0x%x HeaderSize - 0x%x NullFrame -0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PhyChan, uint32, base = enum:FwdChnl
    Ptbits, uint32
    PtRoute, uint32, base = enum:LmdSvcTasks
    Sigbits, uint32
    SigRoute, uint32, base = enum:LmdSvcTasks
    SigCat, uint32
    SecBits, uint32
    HeaderSize, uint32
    NullFrame, uint32
End

Begin Message, CP Trace CP Svc Fwd Dcch Config Get Rsp
    printformat , 1, 1, CP Svc Fwd Dcch Config Get, N=%d, <systime>  Lmd Svc Fwd Dcch Config Get: PhysChan - %s Ptbits - 0x%x PtRoute - %s Sigbits - 0x%x SigRoute -%s SigCat - 0x%x SecBits - 0x%x HeaderSize - 0x%x NullFrame -0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PhyChan, uint32, base = enum:FwdChnl
    Ptbits, uint32
    PtRoute, uint32, base = enum:LmdSvcTasks
    Sigbits, uint32
    SigRoute, uint32, base = enum:LmdSvcTasks
    SigCat, uint32
    SecBits, uint32
    HeaderSize, uint32
    NullFrame, uint32
End

Begin Message, CP Trace CP Svc Cmd Msg Rsp
    printformat , 1, 1, CP Svc Cmd Msg, N=%d, <systime>  Lmd Svc Cmd Msg: MsgId - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32, base=enum:LmdMsgIds
End

Begin Message, CP Trace CP Svc FSCH Mux Control and RC Rsp
    printformat , 1, 1, CP Svc FSCH Mux Control and RC, N=%d, <systime>  Lmd Svc FSCH Mux Table and RC: FwdSchId - 0x%x MuxOption  - 0x%x RateSet - 0x%x MaxNumPduInFrame - 0x%x PduSizeType - %s MuxPduType - 0x%x FormatDes - 0x%x NumLtu - 0x%x LtuBits - 0x%x RealNumPduInFrame - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FwdSchId, uint32
    MuxOption, uint32
    RateSet, uint32
    MaxNumPduInFrame, uint32
    PduSizeType, uint32, base = enum:SchPduSizeTypes
    MuxPduType, uint32
    FormatDes, uint32
    NumLtu, uint32
    LtuBits, uint32
    RealNumPduInFrame, uint32
End

Begin Message, CP Trace CP Svc RSCH Mux Control and RC Rsp
    printformat , 1, 1, CP Svc RSCH Mux Control and RC, N=%d, <systime>  Lmd Svc RSCH Mux Table and RC: FwdSchId - 0x%x MuxOption  - 0x%x RateSet - 0x%x MaxNumPduInFrame - 0x%x PduSizeType - %s MuxPduType - 0x%x FormatDes - 0x%x NumLtu - 0x%x LtuBits - 0x%x RealNumPduInFrame - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FwdSchId, uint32
    MuxOption, uint32
    RateSet, uint32
    MaxNumPduInFrame, uint32
    PduSizeType, uint32, base=enum:SchPduSizeTypes
    MuxPduType, uint32
    FormatDes, uint32
    NumLtu, uint32
    LtuBits, uint32
    RealNumPduInFrame, uint32
End

Begin Message, CP Trace CP Svc SrId Table Reset Rsp
    printformat , 1, 1, CP Svc SrId Table Reset, N=%d, <systime>   Lmd Svc SrId Reset Reason: Reason - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Reason, uint32, base = enum:SrIdResetReasonTypes
End

Begin Message, CP Trace CP Svc Service Option Connect Rsp
    printformat , 1, 1, CP Svc Service Option Connect, N=%d, <systime>  Lmd Svc Service Option Connect Info: sr_id -0x%x SvcTask - %s ServiceOption -%s ForTrafficType -%s RevTrafficType -%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    sr_id, uint32
    SvcTask, uint32,  base=enum:LmdSvcTasks
    ServiceOption, uint32,  base=enum:LmdSvcOpts
    ForTrafficType, uint32,  base=enum:TrafficTypes
    RevTrafficType, uint32,  base=enum:TrafficTypes
End

Begin Message, CP Trace CP Svc Rev Loopback or TDSO Frame Rsp
    printformat , 1, 1, CP Svc Rev Loopback or TDSO Frame, N=%d, <systime>  Lmd Svc Rev Loopback LMD Frame: FrameType -%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FrameType, uint32, base=enum:LmdMsgIds
End

Begin Message, CP Trace CP Svc Lmd Fsch Msg Rsp
    printformat , 1, 1, CP Svc Lmd Fsch Msg, N=%d, <systime>  Lmd Svc Fsch Msg: ForSchId -0x%x  ForSchDuration  -0x%x ForSchFerRep  -0x%x  NumOfFSch -0x%x PilotGatingUseRate - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ForSchId, uint32
    ForSchDuration, uint32
    ForSchFerRep, uint32
    NumOfFSch, uint32
    PilotGatingUseRate, uint32
End

Begin Message, CP Trace CP Svc Lmd Fsch Config Info Rsp
    printformat , 1, 1, CP Svc Lmd Fsch Config Info, N=%d, <systime>  Lmd Svc Fsch Config Info: FschId  -0x%x LtuBits  -0x%x  NumLtu  -0x%x  MuxPduType  -0x%x  NumPdu  -0x%x  PduRate -%s  PduBits -0x%x  PduHeaderBits  -0x%x PduSrId  -0x%x  RoutingTask  -%s MuxOption  -0x%x  MsgId -0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FschId, uint32
    LtuBits, uint16
    NumLtu, uint16
    MuxPduType, uint16
    NumPdu, uint16
    PduRate, uint32, base=enum:FrameRate
    PduBits, uint16
    PduHeaderBits, uint16
    PduSrId, uint32
    RoutingTask, uint32, base=enum:LmdSvcTasks
    MuxOption, uint32
    MsgId, uint32
End

Begin Message, CP Trace CP Svc Fsch Start Info Rsp
    printformat , 1, 1, CP Svc Fsch Start Info, N=%d, <systime>  Lmd Svc Fsch Start Config Info: SchId -0x%x PilotGatingRate  -0x%x ForSchFerRep  -0x%x SchRate  -0x%x ForSchDuration  -0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SchId, uint32
    PilotGatingUseRate, uint32
    ForSchFerRep, uint32
    SchRate, uint32
    ForSchDuration, uint32
End

Begin Message, CP Trace CP Svc Lmd Rsch Msg Rsp
    printformat , 1, 1, CP Svc Lmd Rsch Msg, N=%d, <systime>  Lmd Svc Rsch Msg:RevSchId  -0x%x RevSchDuration  -0x%x RevSchDtxDuration -0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RevSchId, uint32
    RevSchDuration, uint32
    RevSchDtxDuration, uint32
End

Begin Message, CP Trace CP Svc Lmd Rsch Config Info Rsp
    printformat , 1, 1, CP Svc Lmd Rsch Config Info, N=%d, <systime>  Lmd Svc Rsch Config Info:SchId - 0x%x LtuBits -0x%x NumLtu -0x%x PduHeader -0x%x NumPdu -0x%x  NumFilledPdu -0x%x MuxPduType -0x%x  PduBits -0x%x HeaderBits -0x%x MuxOption -0x%x TurboCoding -0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SchId, uint32
    LtuBits, uint16
    NumLtu, uint16
    PduHeader, uint16
    NumPdu, uint16
    NumFilledPdu, uint16
    MuxPduType, uint16
    PduBits, uint16
    HeaderBits, uint16
    MuxOption, uint32
    TurboCoding, uint32
End

Begin Message, CP Trace CP Svc Rsch Start Info Rsp
    printformat , 1, 1, CP Svc Rsch Start Info, N=%d, <systime>  Lmd Svc Rsch Start Config Info: RevSchDuration -0x%x RevSchDtxDuration -0x%x SchRate -0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RevSchDuration, uint32
    RevSchDtxDuration, uint32
    SchRate, uint32
End

Begin Message, CP Trace CP Svc Rsch Pdu Info Rsp
    printformat , 1, 1, CP Svc Rsch Pdu Info, N=%d, <systime>  Lmd Svc Rsch Pdu Config Info:PduNum -0x%x PduSrId  -0x%x RLPFrameType  -0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PduNum, uint32
    PduSrId, uint32
    RLPFrameType, uint32
End

Begin Message, CP Trace CP Svc Pt Mbox Set Info Rsp
    printformat , 1, 1, CP Svc Pt Mbox Set Info, N=%d, <systime>  Lmd Svc Pt Mbox Set Info: PtPhysChannel -%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PtPhysChannel, uint32, base=enum:RevPhysChnlType
End

Begin Message, CP Trace CP Svc Rlp Mbox Set Info Rsp
    printformat , 1, 1, CP Svc Rlp Mbox Set Info, N=%d, <systime>   Lmd Svc Rlp Mbox Set Info: ChnlType -%s PrimSrId  -0x%x PrimMaxRateInd  -0x%x SecSrId  -0x%x SecMaxRateInd  -0x%x SchId  -0x%x  PduRate  -%s  NumOfPdu  -0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChnlType, uint32, base=enum:ChannelMasks
    PrimSrId, uint32
    PrimMaxRateInd, uint32
    SecSrId, uint32
    SecMaxRateInd, uint32
    SchId, uint32
    PduRate, uint32, base=enum:FrameRate
    NumOfPdu, uint32
End

Begin Message, CP Trace CP Svc Res Update Msg Rsp
    printformat , 1, 1, CP Svc Res Update Msg, N=%d, <systime>   Lmd Svc Res Update Msg: ChnlInd - %s SvcNNMsgAssociate - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChnlInd, uint32,base = enum:ChannelMasks
    SvcNNMsgAssociate, uint32
End

Begin Message, CP Trace CP Svc Res Update Start Rsp
    printformat , 1, 1, CP Svc Res Update Start, N=%d, <systime>   Lmd Svc Res Update Start: WaitForNN -0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    WaitForNN, uint32
End

Begin Message, CP Trace CP Svc Res Update Process Rsp
    printformat , 1, 1, CP Svc Res Update Process, N=%d, <systime>   Lmd Svc Res Update Process: ChnlUp - %s ChnlDown - %s DcchInUse - 0x%x FchInUse - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChnlUp, uint32,base = enum:ChannelMasks
    ChnlDown, uint32,base = enum:ChannelMasks
    DcchInUse, uint32
    FchInUse, uint32
End

Begin Message, CP Trace CP Svc Dcch Active Status Rsp
    printformat , 1, 1, CP Svc Dcch Active Status, N=%d, <systime>   Lmd Svc Dcch Active Status: SrId -0x%x DcchOn -0x%x SvOptOnStatus -%s SvcTask -%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SrId, uint32
    DcchOn, uint32
    SvcOptOnStatus, uint32, base=enum:SvcOptionStatus
    SvcTask, uint32, base=enum:LmdSvcTasks
End

Begin Message, CP Trace CP Svc Fch  Active Status Rsp
    printformat , 1, 1, CP Svc Fch  Active Status, N=%d, <systime>   Lmd Svc Fch Active Status: SrId -0x%x FchOn -0x%x SvOptOnStatus -%s SvcTask -%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SrId, uint32
    FchOn, uint32
    SvcOptOnStatus, uint32, base=enum:SvcOptionStatus
    SvcTask, uint32, base=enum:LmdSvcTasks
End

Begin Message, CP Trace CP Svc Mux PDU SCH Config Rsp
    printformat , 1, 1, CP Svc Mux PDU SCH Config, N=%d, <systime>   Lmd Svc Mux PDU Fwd SCH Config: ControlReg -0x%x MuxOption -0x%x ServiceTask: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ControlReg, uint32
    MuxOption, uint32
    ServiceTask, uint32,base=enum:LmdSvcTasks
End

Begin Message, CP Trace CP Svc Mux PDU PDCH Config Rsp
    printformat , 1, 1, CP Svc Mux PDU PDCH Config, N=%d, <systime>   Lmd Svc Mux PDU Fwd PDCH Config: ControlReg -0x%x MuxOption -0x%x ServiceOpt: SO%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ControlReg, uint32
    MuxOption, uint32
    ServiceOpt, uint32
End

Begin Message, CP Trace CP LMD Mp Frame Trace Rsp
    printformat , 1, 1, CP LMD Mp Frame Trace, N=%d, <systime>  CP - LMD MuxPDU, Func=%s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Func, uint32, base=enum:MpFrame Functions
    Data, union,  enum=Func
End

Begin Message, CP LMD Mp Frame Trace Mp Set Config Rsp
    MuxType, uint32
    PduLength, uint32, base=10
    FrameLength, uint32, base=10
End

Begin Message, CP LMD Mp Frame Trace Mp Init Frame Queue Rsp
End

Begin Message, CP LMD Mp Frame Trace Mp Frame Get Rsp
    FramePtr, uint32
End

Begin Message, CP LMD Mp Frame Trace Mp Frame Get Remainder Rsp
    RemainingFramePtr, uint32
End

Begin Message, CP LMD Mp Frame Trace Mp Frame Free Rsp
    FramePtr, uint32
End

Begin Message, CP Trace CP LMD Mp Training State Trace Rsp
    printformat , 1, 1, CP LMD Mp Training State Trace, N=%d, <systime>  CP - LMD MuxPDU Training State, Action=%s, New State=%s, Mode=%s, Check Ltu Crc=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Action, uint32, base=enum:MpActionIdT
    New State, uint32, base=enum:MpStateT
    Mode, uint32, base=enum:Normal/ByPass
    Check Ltu Crc, uint32, base=enum:No/Yes
End

Begin Message, CP Trace CP Encode AGC Mic Audio Frame Energy Rsp
    printformat , 1, 1, CP Encode AGC Mic Audio Frame Energy, N=%d, <systime>  CP - LMD Mic Audio Frame Energy - Frm Pwr=%2.4f dB
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Frm Pwr, uint32, scale=2.0, log10=true, logscale=10
End

Begin Message, CP Trace CP LMD Markov Trace Rsp
    printformat , 1, 1, CP LMD Markov Trace, N=%d, <systime>  CP - LMD Markov Func=%s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Func, uint32, base=enum:Markov Functions
    Data, union,  enum=Func
End

Begin Message, CP LMD Markov Trace Srv Opt Start Rsp
    MultiplexOption, uint32, base=enum:Markov Mux Options
    Service Option, uint32, base=enum:LmdSvcOpts
End

Begin Message, CP LMD Markov Trace Srv Opt Control Rsp
    CtlRecType, uint32, base=enum:Mso Ctrl Rec Types
    Data, union,  enum=CtlRecType
End

Begin Message, Srv Opt Control Mso Control Directive Rsp
    Rate, uint32, base=enum:Mso SSO Rates
End

Begin Message, Srv Opt Control Mso Counter Retrieval Directive Rsp
    VectCounterId, uint32, base=enum:Mso Counter Ids
End

Begin Message, CP LMD Markov Trace Srv Opt Control Resp Rsp
    VectCounterId, uint32, base=enum:Mso Counter Ids
End

Begin Message, CP LMD Markov Trace Srv Opt Fwd Routing Rsp
    MultiplexOption, uint32, base=enum:Markov Mux Options
End

Begin Message, CP LMD Markov Trace Resync Forward Channel Rsp
    ESN, uint32, base=16
    Sync Index, uint32, base=16
End

Begin Message, CP LMD Markov Trace Resync Reverse Channel Rsp
    ESN, uint32, base=16
    Sync Index, uint32, base=16
End

Begin Message, CP LMD Markov Trace Compare Lens Differ Rsp
    Gen Bits, uint32, base=10
    Rcvd Bits, uint32, base=10
End

Begin Message, CP LMD Markov Trace Compare Leading Words Differ Rsp
    Gen Bits, uint32, base=10
    Gen Word0, uint32, base=16
    Rcvd Word0, uint32, base=16
End

Begin Message, CP LMD Markov Trace Compare Ending Bits Differ Rsp
    Num End Bits, uint32, base=10
    Mask, uint32, base=16
    Gen End Word, uint32, base=16
    Rcvd End Word, uint32, base=16
End

Begin Message, CP LMD Markov Trace Compare Identical Rsp
    Num of Bits, uint32, base=10
    Gen Word0, uint32, base=16
    Rcvd Word0, uint32, base=16
End

Begin Message, CP LMD Markov Trace Not Compared Rsp
    Rcvd Bits, uint32, base=10
    Rcvd Cat, uint32, base=10
End

Begin Message, CP LMD Markov Trace Dropping Primary Packet Rsp
End

Begin Message, CP Trace CP LMD Tdso Functional Trace Rsp
    printformat , 1, 1, CP LMD Tdso Functional Trace, N=%d, <systime>  CP - LMD Tdso Func=%s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Func, uint32, base=enum:Tdso Functions
    Data, union,  enum=Func
End

Begin Message, CP LMD Tdso Functional Trace Resync Channel Rsp
    Direction, uint16, base=enum:TdsoDirections
    FirstSync, uint16, base=enum:_____False_____/_____True_____
    LcMask, uint32
End

Begin Message, CP LMD Tdso Functional Trace Compare NumPdus Differ Rsp
    Gen NumPdus, uint16, base=10
    Rx NumPdus, uint16, base=10
End

Begin Message, CP LMD Tdso Functional Trace Compare NumBits Differ Rsp
    Gen NumBits, uint16, base=10
    Rx NumBits, uint16, base=10
End

Begin Message, CP LMD Tdso Functional Trace Compare Data Differ Rsp
    Pdu Number, uint32, base=10
    Gen Word0, uint32
    Rx Word0, uint32
End

Begin Message, CP LMD Tdso Functional Trace Compare Identical Rsp
    NumPdus, uint16, base=10
    NumBits, uint16, base=10
    Gen Word0, uint32
    Rx Word0, uint32
End

Begin Message, CP LMD Tdso Functional Trace Not Compared Rsp
    MuxCat, uint32, base=10
End

Begin Message, CP LMD Tdso Functional Trace Srv Opt Connect Rsp
    Fwd Chan Mask, uint16, base=enum:ChannelMasks
    Rev Chan Mask, uint16, base=enum:ChannelMasks
End

Begin Message, CP LMD Tdso Functional Trace Srv Opt Processing Rsp
    Dir Mask, uint32, base=enum:TdsoDirMasks
End

Begin Message, CP LMD Tdso Functional Trace Srv Opt Disconnect Rsp
    Fwd Chan Mask, uint16, base=enum:ChannelMasks
    Rev Chan Mask, uint16, base=enum:ChannelMasks
End

Begin Message, CP LMD Tdso Functional Trace Control Message Rsp
    CtlRecType, uint32, base=enum:CtlRecTypes
    CtrlCode, uint32, base=enum:CtrlCodes
    Misc, uint32
End

Begin Message, CP LMD Tdso Functional Trace Counter Retrieval Directive Rsp
    CtlRecType, uint16, base=enum:CtlRecTypes
    VectorId, uint16, base=enum:VectorIds
End

Begin Message, CP LMD Tdso Functional Trace Control Directive Rsp
    Direction, uint16, base=enum:TdsoDirections
    FrameSource, uint16, base=10
    Nx, uint16, base=10
    CounterCmd, uint16
    DataSource, uint16, base=enum:DataSources
    DataPattern, uint16
    FrameActivity, uint32, base=enum:Tdso FrameActivities
    Data, union,  enum=FrameActivity
End

Begin Message, Control Directive Deterministic Rsp
    TxOnPer, uint16, base=10
    TxOffPer, uint16, base=10
End

Begin Message, Control Directive Random Rsp
    OnToOffProb, uint16, base=10
    OffToOnProb, uint16, base=10
End

Begin Message, CP LMD Tdso Functional Trace Reset Channel Rsp
    Direction, uint32, base=enum:TdsoDirections
End

Begin Message, CP LMD Tdso Functional Trace Setup Channel Rsp
    Direction, uint32, base=enum:TdsoDirections
    RC, uint16, base=10
    Mux Opt, uint16
    Frm Index, uint16, base=enum:FrameIndexTypes
    Traf Type, uint16, base=enum:TrafficTypes
End

Begin Message, CP LMD Tdso Functional Trace Debug Rx Packet Rsp
    Direction, uint32, base=enum:TdsoDirections
    LcMask, uint16
    NumBits, uint16, base=10
    Rx Word0, uint32
    Rx Word1, uint32
End

Begin Message, CP Trace CP LMD Tdso Processing Trace Rsp
    printformat , 1, 1, CP LMD Tdso Processing Trace, N=%d, <systime>  CP - LMD Tdso Processing=%s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Process, uint32, base=enum:Tdso Processings
    Data, union,  enum=Process
End

Begin Message, CP LMD Tdso Processing Trace Build Circular Buffer Rsp
    Direction, uint16, base=enum:TdsoDirections
    CirBuf Size, uint16, base=10
    CirBuf Ptr, uint32
End

Begin Message, CP LMD Tdso Processing Trace Generate Info Bits Rsp
    Direction, uint16, base=enum:TdsoDirections
    Frm Index, uint16, base=enum:FrameIndexTypes
    DataSource, uint16, base=enum:DataSources
    DataPattern, uint16
    Gen NumPdus, uint16, base=10
    Gen NumBits, uint16, base=10
End

Begin Message, CP LMD Tdso Processing Trace Generate Blnk Bits Rsp
    Direction, uint32, base=enum:TdsoDirections
End

Begin Message, CP LMD Tdso Processing Trace Advance Offset Rsp
    Direction, uint16, base=enum:TdsoDirections
    CirBuf Size, uint16, base=10
    NumPdus, uint16, base=10
    NumBytes, uint16, base=10
    Old Offset, uint16, base=10
    New Offset, uint16, base=10
End

Begin Message, CP LMD Tdso Processing Trace Set Circular Buffer Size Rsp
    Direction, uint32, base=enum:TdsoDirections
    RC, uint16, base=10
    Mux Opt, uint16
    Nx, uint16, base=10
    CirBuf Size, uint16, base=10
End

Begin Message, CP Trace CP LMD Record Trace Rsp
    printformat , 1, 1, CP LMD Record Trace, N=%d, <systime>  CP - LMD Record Event=%s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:Record Events
    Data, union,  enum=Event
End

Begin Message, CP LMD Record Trace State Change Rsp
    New State, uint32, base=enum:Lmd Vmem States
    Old State, uint32, base=enum:Lmd Vmem States
End

Begin Message, CP LMD Record Trace Vocoder Connect Rsp
    Spch Srv Opt, uint32, base=enum:Speech Service Options
    Path, uint32, base=enum:IpcPathTypes
End

Begin Message, CP LMD Record Trace Vocoder Disconnect Rsp
End

Begin Message, CP LMD Record Trace Going On Traffic Rsp
End

Begin Message, CP LMD Record Trace Record Start Rsp
    Spch Srv Opt, uint32, base=enum:Speech Service Options
End

Begin Message, CP LMD Record Trace Record Stop Rsp
End

Begin Message, CP LMD Record Trace Conversation Record Start Rsp
End

Begin Message, CP LMD Record Trace Conversation Record Stop Rsp
End

Begin Message, CP Trace CP LMD Playback Trace Rsp
    printformat , 1, 1, CP LMD Playback Trace, N=%d, <systime>  CP - LMD Playback Event=%s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:Playback Events
    Data, union,  enum=Event
End

Begin Message, CP LMD Playback Trace State Change Rsp
    New State, uint32, base=enum:Lmd Vmem States
    Old State, uint32, base=enum:Lmd Vmem States
End

Begin Message, CP LMD Playback Trace Vocoder Connect Rsp
    Spch Srv Opt, uint32, base=enum:LmdSvcOpts
    Data Type, uint32, base=enum:IpcDataTypes
End

Begin Message, CP LMD Playback Trace Vocoder Disconnect Rsp
End

Begin Message, CP LMD Playback Trace Going On Traffic Rsp
End

Begin Message, CP LMD Playback Trace Playback Start Rsp
    Spch Srv Opt, uint32, base=enum:LmdSvcOpts
    File Size, uint32, base=10
End

Begin Message, CP LMD Playback Trace Playback Stop Rsp
End

Begin Message, CP LMD Playback Trace Ans Play Start Rsp
    Spch Srv Opt, uint32, base=enum:LmdSvcOpts
    Num Packets, uint32, base=10
End

Begin Message, CP LMD Playback Trace Ans Play Stop Rsp
End

Begin Message, CP Trace CP LMD Sec Signal Trace Rsp
    printformat , 1, 1, CP LMD Sec Signal Trace, N=%d, <systime>  Lmd Secondary Signal: 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Signal, uint32
End

Begin Message, CP Trace CP LMD Sec Message Trace Rsp
    printformat , 1, 1, CP LMD Sec Message Trace, N=%d, <systime>  Lmd Secondary Msg Id: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32, base=enum:LmdsMsgIds
End

Begin Message, CP Trace CP LMD Vstrm Mic Data Trace Rsp
    printformat , 1, 1, CP LMD Vstrm Mic Data Trace, N=%d, <systime>  VSTRM Mic Data: Pkts=%d Samples=%d Discarded=%d Missed Frames=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Packets, uint32
    Samples, uint32
    Dis Samples, uint32
    Missed Frames, uint32
End

Begin Message, CP Trace CP LMD Vstrm Spkr Data Trace Rsp
    printformat , 1, 1, CP LMD Vstrm Spkr Data Trace, N=%d, <systime>  VSTRM Spkr Data: Pkts=%d Samples=%d Discarded=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Packets, uint32
    Samples, uint32
    Dis Samples, uint32
End

Begin Message, CP Trace CP LMD IMAS Config Trace Rsp
    printformat , 1, 1, CP LMD IMAS Config Trace, N=%d, <systime>  LMD IMAS Config:  ImasEnable=%x  ImasSync=%x CbPending=%x ImasStatus=%x codec=%x maxRate=%x minRate=%x rateReduceMode=%x FrmSzTblPtr=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TracePosInd, uint32
    ImasEnable, uint32
    ImasSync, uint32
    CbPending, uint32
    ImasStatus, uint32
    codec, uint32
    maxRate, uint32
    minRate, uint32
    rateReduceMode, uint32
    FrmSzTblPtr, uint32
End

Begin Message, CP Trace CP HWD Serializer Rsp
    printformat , 3, 2, CP HWD Serializer, N=%d, <systime>  CP - HWD MM SPI %ld,  0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RF SPI Rsp
    printformat , 3, 2, CP RF SPI, N=%d, <systime>  CP - HWD RF SPI Device %ld,  0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP MXS SPI Rsp
    printformat , 3, 2, CP MXS SPI, N=%d, <systime>  CP - HWD MXS SPI %s,  0x%08X  0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Operation, uint32, base=enum:Write/Read
    Addr, uint32
    Data, uint32
End

Begin Message, CP Trace CP Freq Channel Rsp
    printformat , 3, 2, CP Freq Channel, N=%d, <systime>  CP - HWD PLL: %s,  Band: %s,  Chan: %5li,  System: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Path, uint32, base=enum:Main Rx/Diversity Rx/Main Tx
    Band, uint32, base=enum:Cdma Band
    Chan, int32
    System, uint32, base=enum:EVDO/1xRTT
End

Begin Message, CP Trace CP RF LPT Control Rsp
    printformat , 3, 2, CP RF PLL Details, N=%d, <systime>  CP - Mode %s:  0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Interface, uint32, base=enum:1xRTT/EVDO
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP HWD Task Mailbox Rsp
    printformat , 1, 1, CP HWD Task Mailbox, N=%d, <systime>  CP - CP HWD Task Mailbox Msg Id: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32, base=enum:Hwd Messages
End

Begin Message, CP Trace CP 32kHz Counter Read Rsp
    printformat , 1, 1, CP 32kHz Counter Read, N=%d, <systime>  CP - HWD 32kHz Ctr value %d, delta %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP Power Save Mode Rsp
    printformat , 1, 1, CP Power Save Mode, N=%d, <systime>  CP - Switch %s, HWD Power saving mode: %s, Interface: %s, Main Rx: %s, Div Rx: %s, Main Tx: %s, MatrixMain = 0x%04x, MatrixDiv = 0x%04x, Main Rfid=%d, Tx Rfid=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Switch Ctrl, uint32, base=enum:PowerSavings/MainRx/DivRx/MainTx/DOPreemptTimer
    Power saving mode, uint32, base=enum:Power Save Modes
    Interface, uint32, base=enum:1xRTT/EVDO
    Main Rx, uint32, base=enum:Off/On
    Div Rx, uint32, base=enum:Off/On
    Main Tx, uint32, base=enum:Off/On
    Matrix Main, uint32, base=16
    Matrix Div, uint32, base=16
    RFID Main, uint32, base=10
    RFID Tx, uint32, base=10
End

Begin Message, CP Trace CP Dspm Clock Control Rsp
    printformat , 1, 1, CP Dspm Clock Control, N=%d, <systime>  CP - HWD DspM Clock Control Bit: %s is turned %s, Result Bitmap 0x%04x, ClkCtrl2 Register 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ControlBit, uint32, base=enum:ClkCtrlBits
    Turn, uint32, base=enum:Off/On
    Result Bitmap, uint32
    ClkCtrl2 Register, uint32
End

Begin Message, CP Trace CP ESPI DEBUG Rsp
    printformat , 1, 1, CP ESPI DEBUG, N=%d, <systime>  CP - HWD CP ESPI DEBUG: %d, %d, %d, %d, %d, %d, %d, %d, %d, %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP RAC Driver Control Rsp
    printformat , 1, 1, CP RAC Driver Control, N=%d, <systime>  HWD Ctrl=%s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Ctrl, uint32, base=enum:Rac Ctrl Enum
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP Power Save Voice Mode Rsp
    printformat , 1, 1, CP Power Save Voice Mode, N=%d, <systime>  CP - HWD Power saving voice mode: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Power saving Voice mode, uint32, base=enum:Power Save Voice Mode
End

Begin Message, CP Trace CP Sleep Over Hisr Rsp
    printformat , 1, 1, CP Sleep Over Hisr, N=%d, <systime>  Hwd SlpOvr - %s, 1x SleepMode=%s DO SlpMode=%s, 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    System, uint32, base=enum:1xRTT/EVDO
    1x Slp Mode, uint32, base=enum:Wake/Sleep
    DO Slp Mode, uint32, base=enum:Wake/Sleep
    Args, array, type=uint32, maxsize=7, size=end
End

Begin Message, CP Trace CP HWD Calibration Control Rsp
    printformat , 1, 1, CP HWD Calibration Control, N=%d, <systime>  CP HWD Calibration Control: %s, 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Code, uint32, base=enum:Cal Update Code
    Parms, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP HWD TxAgc Alt Thresholds Rsp
    printformat , 1, 1, CP HWD TxAgc Alt Thresholds, N=%d, <systime>  CP HWD TxAgc Alt Thresholds: Band=%s, ChangedThres=%s, ParmThresHigh1=%4.2f, ParmThresLow1=%4.2f, ParmThresHigh2=%4.2f, ParmThresLow2=%4.2f, CalThresHigh1=%4.2f, CalThresLow1=%4.2f, CalThresHigh2=%4.2f, CalThresLow2=%4.2f,
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:Cdma Band
    ChangedThres, uint32, base=enum:False/True
    ParmThresHigh1, int32,  scale=Q6, format=%4.2f
    ParmThresLow1, int32,  scale=Q6, format=%4.2f
    ParmThresHigh2, int32,  scale=Q6, format=%4.2f
    ParmThresLow2, int32,  scale=Q6, format=%4.2f
    CalThresHigh1, int32,  scale=Q6, format=%4.2f
    CalThresLow1, int32,  scale=Q6, format=%4.2f
    CalThresHigh2, int32,  scale=Q6, format=%4.2f
    CalThresLow2, int32,  scale=Q6, format=%4.2f
End

Begin Message, CP Trace CP HWD RF FIQ Control Rsp
    printformat , 1, 1, CP HWD RF FIQ Control, N=%d, <systime>  CP HWD RF FIQ Control: 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Parms, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP HWD Mixed Signal Control Rsp
    printformat , 1, 1, CP HWD Mixed Signal Control, N=%d, <systime>  CP HWD Mixed Signal Control for %s, RfPath=%s, IcPath=%s, 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    System, uint32, base=enum:1xRTT/EVDO
    RfPath, uint32, base=enum:RxMain/RxDiv/TxMain
    IcPath, uint32, base=enum:Main/Div
    Parms, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP HWD Internal PMU Control Rsp
    printformat , 1, 1, CP HWD Internal PMU Control, N=%d, <systime>  CP HWD PMU Control, Ldo=%d, Enable=%s, Reg Addr=0x%02x, Reg Value=0x%02x, Status=0x%04x, PendingStatus=0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    LDO Num, uint32
    Enable, uint32, base=enum:No/Yes
    Reg Addr, uint32, base=16
    Reg Value, uint32, base=16
    Status, uint32, base=16
    PendingStatus, uint32, base=16
End

Begin Message, CP Trace CP HWD RF Control Rsp
    printformat , 1, 1, CP HWD RF Control, N=%d, <systime>  CP HWD RF Control, Ctrl=%s, State=%s, Device=%s, Mode=%s, Parms=%d  %d  %d  %d  %d  %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Ctrl, uint32, base=enum:RfCtrlTrace
    State, uint32, base=enum:Off/On
    Device, uint32, base=enum:TxOnRfOnType
    Mode, uint32, base=enum:1xRTT/EVDO
    Parms, array, type=uint32, maxsize=6, size=end
End

Begin Message, CP Trace CP HWD PLL Lock Detect Rsp
    printformat , 1, 1, CP HWD PLL Lock Detect, N=%d, <systime>  CP HWD PLL Lock Detect, Ctrl=%s, LockDet Enabled=%s, LockDet Mode=%s GpioReadBack=%s Parms=%d  %d  %d  %d  %d %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Ctrl, uint32, base=enum:LOCK_EN/LOCK_CHK/LOCK_LOST
    LockDet Enabled, uint32, base=enum:No/Yes
    LockDet Mode, uint32, base=enum:Disabled/Hardware/Software
    Gpio Readback, uint32, base=enum:Off/On
    Data, array, type=uint32, maxsize=6, size=end
End

Begin Message, CP Trace CP HWD RF Driver Trace Rsp
    printformat , 1, 1, 0x%08X CP HWD RF Driver Trace: %s, Data: 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    Sys Time, uint32
    Code, uint32
    Data, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP RxTx RF Alg Generic Rsp
    printformat , 1, 1, CP RxTx RF Alg Generic, N=%d, <systime>  CP RxTx RF Alg Generic: %s, Data: 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    module, uint16, base=enum:GenericEnum
    Interface, uint16, base=enum:1xRTT/EVDO
    Args, array, type=int32, maxsize=9, size=end
End

Begin Message, CP Trace CP HWD BAS Alg Rsp
    printformat , 1, 1, CP HWD BAS Alg, N=%d, <systime>  CP HWD BAS Alg: %s, Data: 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Ctrl, uint32, base=enum:BasCtrlTrace
    Args, array, type=int32, maxsize=9, size=end
End

Begin Message, CP Trace CP HWD Error Trace Rsp
    printformat , 1, 1, CP HWD Error Trace, N=%d, <systime>  CP HWD Error Trace: %s, Interface: %s, Data: 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Ctrl, uint32, base=enum:ErrorCtrl
    Interface, uint32, base=enum:1xRTT/EVDO
    Args, array,  type=uint32, maxsize=8, size=end
End

Begin Message, CP Trace CP_HWD_CLOCK_REGISTER_CLK0_TRACE_I_ID Rsp
    printformat , 1, 1, CP_HWD_CLOCK_REGISTER_CLK0_TRACE_I_ID, N=%d, <systime>  CP_HWD_CLOCK_REGISTER_CLK0_TRACE_I_ID,Interface:%s,State:%s, MXSG_RST:%x, AHB0_CLK_ENB:%x, MXS_RX0_EN:%x, MXS_RX1_EN:%x, DSPM_RST:%x, DSPM_BOOT:%x, CG_DM_DBG:%x, AHBDO_CLK_ENB:%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Interface, uint32, base=enum:1xRTT/EVDO
    State, uint32, base=enum:SleepEvent
    MXSG_RST, uint32
    AHB0_CLK_ENB, uint32
    MXS_RX0_EN, uint32
    MXS_RX1_EN, uint32
    DSPM_RST, uint32
    DSPM_BOOT, uint32
    CG_DM_DBG, uint32
    AHBDO_CLK_ENB, uint32
End

Begin Message, CP Trace CP_HWD_CLOCK_REGISTER_CLK0_TRACE_II_ID Rsp
    printformat , 1, 1, CP_HWD_CLOCK_REGISTER_CLK0_TRACE_II_ID, N=%d, <systime>  CP_HWD_CLOCK_REGISTER_CLK0_TRACE_II_ID, Interface:%s,State:%s, DO_CLK_ENB_BYP:%x, RX1X_CLK9_GATE_EN:%x, TX1X_CLK9_ENB:%x, FN1X_CLK9_ENB:%x, DMA_CLK_ENB:%x, MXS_RX0_DIV4_CLKSEL:%x, MXS_RX1_DIV4_CLKSEL:%x, IQ134M_CLK_ENB:%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Interface, uint32, base=enum:1xRTT/EVDO
    State, uint32, base=enum:SleepEvent
    DO_CLK_ENB_BYP, uint32
    RX1X_CLK9_GATE_EN, uint32
    TX1X_CLK9_ENB, uint32
    FN1X_CLK9_ENB, uint32
    DMA_CLK_ENB, uint32
    MXS_RX0_DIV4_CLKSEL, uint32
    MXS_RX1_DIV4_CLKSEL, uint32
    IQ134M_CLK_ENB, uint32
End

Begin Message, CP Trace CP_HWD_CLOCK_REGISTER_CLK0_TRACE_III_ID Rsp
    printformat , 1, 1, CP_HWD_CLOCK_REGISTER_CLK0_TRACE_III_ID, N=%d, <systime>  CP_HWD_CLOCK_REGISTER_CLK0_TRACE_III_ID,Interface:%s, State:%s,WRI_ENABLE:%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Interface, uint32, base=enum:1xRTT/EVDO
    State, uint32, base=enum:SleepEvent
    WRI_ENABLE, uint32
End

Begin Message, CP Trace CP_HWD_CLOCK_REGISTER_CLK1_TRACE_I_ID Rsp
    printformat , 1, 1, CP_HWD_CLOCK_REGISTER_CLK1_TRACE_I_ID, N=%d, <systime>  CP_HWD_CLOCK_REGISTER_CLK1_TRACE_I_ID,Interface:%s, State:%s,FNDO_CLK_ENB:%x, STDO_CLK_ENB:%x, EQ_CLK_ENB:%x, MAC_CLK_ENB:%x, DM_DIV:%x,  DM_SLP_CTL_BYP:%x, DM_CLK_ENB:%x, THA_CLK_ENB:%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Interface, uint32, base=enum:1xRTT/EVDO
    State, uint32, base=enum:SleepEvent
    FNDO_CLK_ENB, uint32
    STDO_CLK_ENB, uint32
    EQ_CLK_ENB, uint32
    MAC_CLK_ENB, uint32
    DM_DIV, uint32
    DM_SLP_CTL_BYP, uint32
    DM_CLK_ENB, uint32
    THA_CLK_ENB, uint32
End

Begin Message, CP Trace CP_HWD_CLOCK_REGISTER_CLK1_TRACE_II_ID Rsp
    printformat , 1, 1, CP_HWD_CLOCK_REGISTER_CLK1_TRACE_II_ID, N=%d, <systime>  CP_HWD_CLOCK_REGISTER_CLK1_TRACE_II_ID,Interface:%s,State:%s, RHA_CLK_ENB:%x, TXDO_CLK_ENB:%x, AHB_DIV:%x, AHBNI_CLKEN_FRC:%x, WRI_ENABLE:%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Interface, uint32, base=enum:1xRTT/EVDO
    State, uint32, base=enum:SleepEvent
    RHA_CLK_ENB, uint32
    TXDO_CLK_ENB, uint32
    AHB_DIV, uint32
    AHBNI_CLKEN_FRC, uint32
    WRI_ENABLE, uint32
End

Begin Message, CP Trace CP_HWD_CLOCK_REGISTER_CLK2_TRACE_ID Rsp
    printformat , 1, 1, CP_HWD_CLOCK_REGISTER_CLK2_TRACE_ID, N=%d, <systime>  CP_HWD_CLOCK_REGISTER_CLK2_TRACE_ID,Interface:%s,State:%s,CLK_MUX_SEL:%x, MAC_CLK_SEL:%x, WRI_ENABLE:%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Interface, uint32, base=enum:1xRTT/EVDO
    State, uint32, base=enum:SleepEvent
    CLK_MUX_SEL, uint32
    MAC_CLK_SEL, uint32
    WRI_ENABLE, uint32
End

Begin Message, CP Trace CP_HWD_CLOCK_REGISTER_PLLCTL_TRACE_ID Rsp
    printformat , 1, 1, CP_HWD_CLOCK_REGISTER_PLLCTL_TRACE_ID, N=%d, <systime> CP_HWD_CLOCK_REGISTER_PLLCTL_TRACE_ID,Interface:%s, State:%s,PLL_SD:%x, PLL_FLL_EN:%x, PLL_BYPASS:%x, PLL_REQ:%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Interface, uint32, base=enum:1xRTT/EVDO
    State, uint32, base=enum:SleepEvent
    PLL_SD, uint32
    PLL_FLL_EN, uint32
    PLL_BYPASS, uint32
    PLL_REQ, uint32
End

Begin Message, CP Trace CP_HWD_CLOCK_REGISTER_PLL_DIVZ_TRACE_ID Rsp
    printformat , 1, 1, CP_HWD_CLOCK_REGISTER_PLL_DIVZ_TRACE_ID, N=%d, <systime>  CP_HWD_CLOCK_REGISTER_PLL_DIVZ_TRACE_ID,Interface:%s, State:%s,PLL_DIVZ:%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Interface, uint32, base=enum:1xRTT/EVDO
    State, uint32, base=enum:SleepEvent
    PLL_DIVZ, uint32
End

Begin Message, CP Trace CP HWD_CLOCK_REGISTER_TRACE_ID Rsp
    printformat , 1, 1, CP HWD_CLOCK_REGISTER_TRACE_ID, N=%d, <systime>  CP HWD_CLOCK_REGISTER_TRACE_ID, Interface:%s, State:%s,HWD_CLK_CTRL0:%x, HWD_CLK_CTRL1:%x, HWD_CLK_CTRL2:%x, HWD_CDMA_PLL_CTL:%x, HWD_CDMA_PLL_DIVZ:%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Interface, uint32, base=enum:1xRTT/EVDO
    State, uint32, base=enum:SleepEvent
    HWD_CLK_CTRL0, uint32
    HWD_CLK_CTRL1, uint32
    HWD_CLK_CTRL2, uint32
    HWD_CDMA_PLL_CTL, uint32
    HWD_CDMA_PLL_DIVZ, uint32
End

Begin Message, CP Trace CP Sys SysTime Rsp
    printformat , 1, 1, CP Sys SysTime, N=%d, <systime>  CP - SysTime - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:SysTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP Sys Callback Queue Rsp
    printformat , 1, 1, CP Sys Callback Queue, N=%d, <systime>  CP - Callback Queue - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:SysTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP Sys Callback Test Rsp
    printformat , 1, 1, CP Sys Callback Test, N=%d, <systime>  CP - Callback Test - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:HwdSysTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP Sys Error Rsp
    printformat , 1, 1, CP Sys Error, N=%d, <systime>  CP - SYS ERROR - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:SysTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP Sys Warning Rsp
    printformat , 1, 1, CP Sys Warning, N=%d, <systime>  CP - SYS WARNING - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:SysTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP_SYS_CPBUF_TEST_TRACE_ID Rsp
    printformat , RMC_FMP, 3, CP_SYS_CPBUF_TEST_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_EXE_BUFFER- %s, Type:%s(%s), dataPtr:0x%08x, cpBufptr:0x%08x, i:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    GetFree, uint32, base=enum:Get/Free
    Type, uint32, base=enum:CpBufTypeT
    memType, uint32, base=enum:IRAM/SRAM
    dataptr, uint32
    cpBufptr, uint32
    tstIndex, uint32
End

Begin Message, CP Trace CP_SYS_CTS_CALLBACK_CLEAR_ID Rsp
    printformat , 1, 1, CP_SYS_CTS_CALLBACK_CLEAR_ID, N=%d, <systime>  CTS Callback Function - 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Callback, uint32
End

Begin Message, CP Trace CP_SYS_CTS_CALLBACK_REGISTER_ID Rsp
    printformat , 1, 1, CP_SYS_CTS_CALLBACK_REGISTER , N=%d, <systime>  CTS Callback Function - 0x%x	Delay 0x%x Context 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Callback, uint32
    Delay usec, uint32
    Context, uint32
End

Begin Message, CP Trace CP VAL Process General Rsp
    printformat , 1, 1, CP VAL Process General, N=%d, <systime>  CP - VAL Process: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP VAL HSPD PRI Rsp
    printformat , 1, 1, CP VAL HSPD PRI, N=%d, <systime>  CP - HSPD PRI Trace: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    HSPD PRI, uint32, base=enum:HSPD PRI Trace Type Enum
    Trace, union, enum=HSPD PRI
End

Begin Message, CP VAL HSPD PRI ValSetHlpParm() Rsp
    RegId, uint32, base=10
    ParmId, uint32, base=enum:HlpParmOperationId
    ParmOpId, uint32, base=enum:ParmOperationType
    Length, uint32, base=10
End

Begin Message, CP VAL HSPD PRI ValGetHlpParm() Rsp
    RegId, uint32, base=10
    ParmId, uint32, base=enum:HlpParmOperationId
    ParmOpId, uint32, base=enum:ParmOperationType
    Length, uint32, base=10
End

Begin Message, CP VAL HSPD PRI process_cp_set_hlp_parm_rsp() Rsp
    RegId, uint32, base=enum:ExeTaskIdT
    ParmId, uint32, base=enum:HlpParmOperationId
    ParmOpId, uint32, base=enum:HlpParmAccessResultCode
End

Begin Message, CP VAL HSPD PRI process_cp_get_hlp_parm_rsp() Rsp
    RegId, uint32, base=enum:ExeTaskIdT
    ParmId, uint32, base=enum:HlpParmOperationId
    Result, uint32, base=enum:HlpParmAccessResultCode
    Length, uint32, base=10
End

Begin Message, CP Trace CP VAL CONN GET PARM Rsp
    printformat , 1, 1, CP VAL CONN GET PARM, N=%d, <systime>  Val Connectivity - Get Parm = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ParmId, uint32, base=enum:ConnParmId Enum
End

Begin Message, CP Trace CP VAL CONN SET PARM Rsp
    printformat , 1, 1, CP VAL CONN SET PARM, N=%d, <systime>  Val Connectivity - Set Parm = %s, Value=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ParmId, uint32, base=enum:ConnParmId Enum
    Value, uint32, base=16
End

Begin Message, CP Trace CP VAL Psw Set State Rsp
    printformat , 1, 1, CP VAL Psw Set State, N=%d, <systime>  Val Psw Set State = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:ValPswState Enum
End

Begin Message, CP Trace CP VAL IRAT defualt bearer attach info Rsp
    printformat , 1, 1, CP VAL IRAT defualt bearer attach info, N=%d, <systime>  Val IRAT default bearer at PDNid=%d, PDN type=%s, Attach Type=%s, APN len=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDN id, uint32
    PDN type, uint32, base=enum:PDNType
    Attach type, uint32, base=enum:AttachType
    APN len, uint32
End

Begin Message, CP Trace CP VAL IRAT dedicated bearer attach info Rsp
    printformat , 1, 1, CP VAL IRAT dedicated bearer attach info, N=%d, <systime>  VAL IRAT dedicated bearer with PDNid=%d, AddrType=%s, APN Len=%d, Number of ProfileId=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDN id, uint32
    Addr type, uint32, base=enum:PDNType
    APN len, uint32
    Num, uint32
End

Begin Message, CP Trace CP_VAL_GPS_GENERAL_TRACE_ID Rsp
    printformat , 1, 1, CP_VAL_GPS_GENERAL_TRACE_ID, N=%d, <systime>  CP - VAL_GPS_GENERAL: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP MMC to LTE or AP Msg Id Rsp
    printformat , 1, 1, CP MMC to LTE Msg Id, N=%d, <systime> CP MMC sends %s to RAT
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RatMsg, uint32, base=enum:RatMmcApiIdT
End

Begin Message, CP Trace CP RAT to MMC Msg Id Rsp
    printformat , 1, 1, CP RAT to MMC Msg Id, N=%d, <systime> RAT sends %s to MMC %s
    N, uint32
    FullSysTime, array,  type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32, base=enum:RatToMmcMsgIdT
    MsgRec, union,  enum=MsgId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_POWERUP_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_POWERDOWN_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_CMD_REJ_IND Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_RAT_ONLY_MODE_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_RAT_3GPP_MODE_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_ACQ_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
    Result, uint32, base=enum:AcqResultT
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_MCC_SEARCH_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
    Mcc, uint32
    Mnc, uint32
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_PS_REG_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
    Result, uint32, base=enum:RegResultT
    Mcc, uint32
    Mnc, uint32
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_NO_SERVICE_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_NWT_ST_CHG_IND Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_CELL_GLOBAL_ID_REQ Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_DATACONNECTION_CMD_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
    Resp, uint32, base=enum:Modem Data State Type
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_DEFAULTBEARER_RSP Rsp
    RatId, uint32,    base=enum:GmssRatId
    PDNid, uint32
    Status, uint32,    base=enum:Bearer Status Type
    ErrCode, uint32,    base=enum:Bearer Error Code Type
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_DEDICATEDBEARER_IND Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_DEDICATEDBEARER_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_BEARER_DISCONNECT_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
    PDNid, uint32
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_BEARER_DISCONNECT_IND Rsp
    RatId, uint32, base=enum:GmssRatId
    PDNid, uint32
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_BEARER_DETACH_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_IRAT_MEAS_CMD Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_IRAT_SYSTEM_CHG_REQ Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_IRAT_SIB8_MEAS_CMD Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_RAT_MEASIND Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_RAT_RESELMEASIND Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_STOP_IRAT_MEAS_CMD Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_CELL_INFO_PS_REG_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_CDMA_TXPWR_REQ Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_RAT_HANDOVER_PS_REG_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_IRAT_HANDOVER_REQ Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_IRAT_RESELMEAS_CMD Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_SET_IDLEMODEMOBILITYINFO Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_PACKET_STATISTICS_REQ Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_PDN_TABLE_SETUP_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC_RAT_API_MODE_RSP Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP RAT to MMC Msg Id MMC unknown message ID Rsp
    RatId, uint32, base=enum:GmssRatId
    ErrMsgId, uint32,
End

Begin Message, CP Trace CP PAC RX MSG Rsp
    printformat , PSW, 1, CP_PAC RX MSG, N=%d, <systime>  PAC Cmd Mbox: Msg Id - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Id, uint32, base=enum:PACRxMsgId Enum
End

Begin Message, CP Trace CP PAC TX MSG Rsp
    printformat , PSW, 1, CP PAC TX MSG, N=%d, <systime>  PAC Send Event: TaskID_Msg Id - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Id, uint32, base=enum:PACTxMsgId Enum
End

Begin Message, CP Trace CP PAC Test01 Rsp
    printformat , 1, 1, CP PAC Test01, N=%d, <systime>  CP - PAC Test01, Tracking=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Tracking, uint32, base=10
End

Begin Message, CP Trace CP PAC Test02 Rsp
    printformat , 1, 1, CP PAC Test02, N=%d, <systime>  CP - PAC Test02, Tracking=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Tracking, uint32, base=10
End

Begin Message, CP Trace CP PAC Test03 Rsp
    printformat , 1, 1, CP PAC Test03, N=%d, <systime>  CP - PAC Test03, Tracking=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Tracking, uint32, base=10
End

Begin Message, CP Trace CP PAC Test04 Rsp
    printformat , 1, 1, CP PAC Test04, N=%d, <systime>  CP - PAC Test04, Tracking=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Tracking, uint32, base=10
End

Begin Message, CP Trace CP PAC Test05 Rsp
    printformat , 1, 1, CP PAC Test05, N=%d, <systime>  CP - PAC Test05, Tracking=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Tracking, uint32, base=10
End

Begin Message, CP Trace CP Fwd FCH non idle info Rsp
    printformat , 1, 1, CP Fwd FCH non idle info, N=%d, <systime>  CP - RLP Fwd FCH non-idle PriRate=%s, SEQ=0x%03X, Data1=0x%08X, FrmType=%s, v_n=0x%03X, v_r=0x%03X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PriRate, uint32, base=enum:RLP Frame Rate
    SEQ, uint32
    Data1, uint32
    FrmType, uint32, base=enum:RLP FCH Frame Type
    vn, uint32
    vr, uint32
End

Begin Message, CP Trace CP Fwd SCH info Rsp
    printformat , 1, 1, CP Fwd SCH info, N=%d, <systime>  CP - RLP Fwd SCH raw info PriRate=%s, SEQ=0x%08X, Data1=0x%08X, FrmType=%s, v_n=0x%03X, v_r=0x%03X, PDUnum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PriRate, uint32, base=enum:RLP Frame Rate
    SEQ, uint32
    Date1, uint32
    FrmType, uint32, base=enum:RLP Frame Type
    vn, uint32
    vr, uint32
    PDUnum, uint32
End

Begin Message, CP Trace CP Rev FCH non idle info Rsp
    printformat , 1, 1, CP Rev FCH non idle info, N=%d, <systime>  CP - RLP Rev FCH non-idle PriRate=%s, SEQ=0x%03X, Data1=0x%08X, FrmType=%s, v_n_p=0x%03X, v_s=0x%03X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PriRate, uint32, base=enum:RLP Frame Rate
    SEQ, uint32
    Data1, uint32
    FrmType, uint32, base=enum:RLP FCH Frame Type
    vn_p, uint32
    vs, uint32
End

Begin Message, CP Trace CP Rev SCH info Rsp
    printformat , 1, 1, CP Rev SCH info, N=%d, <systime>  CP - RLP Rev SCH raw info PriRate=%s, SEQ=0x%08X, Data1=0x%08X, FrmType=%s, v_n_p=0x%03X, v_s=0x%03X, PDUnum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PriRate, uint32, base=enum:RLP Frame Rate
    SEQ, uint32
    Date1, uint32
    FrmType, uint32, base=enum:RLP Frame Type
    vn_p, uint32
    vs, uint32
    PDUnum, uint32
End

Begin Message, CP Trace CP Fwd FCH raw info Rsp
    printformat , 1, 1, CP Fwd FCH raw info, N=%d, <systime>  CP - RLP Fwd FCH raw info PriRate=%s, SEQ=0x%03X, Data1=0x%02X, FrmType=%s, v_n=0x%03X, v_r=0x%03X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PriRate, uint32, base=enum:RLP Frame Rate
    SEQ, uint32
    Data1, uint32
    FrmType, uint32, base=enum:RLP FCH Frame Type
    vn, uint32
    vr, uint32
End

Begin Message, CP Trace CP Rev FCH raw info Rsp
    printformat , 1, 1, CP Rev FCH raw info, N=%d, <systime>  CP - RLP Rev FCH raw info PriRate=%s, SEQ=0x%03X, Data1=0x%08X, FrmType=%s v_n_p=0x%03X, v_s=0x%03X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PriRate, uint32, base=enum:RLP Frame Rate
    SEQ, uint32
    Data1, uint32
    FrmType, uint32, base=enum:RLP FCH Frame Type
    vn_p, uint32
    vs, uint32
End

Begin Message, CP Trace CP Rev Pri Pro Rate Rsp
    printformat , 1, 1, CP Rev Pri Pro Rate, N=%d, <systime>  CP - RLP Rev Pri Promoted Rate = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PriRate, uint32, base=enum:RLP Frame Rate
End

Begin Message, CP Trace CP Rev Sec Pro Rate Rsp
    printformat , 1, 1, CP Rev Sec Pro Rate, N=%d, <systime>  CP - RLP Rev Sec Promoted Rate = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SecRate, uint32, base=enum:RLP Frame Rate
End

Begin Message, CP Trace CP HLP Rev Data Response Rsp
    printformat , 1, 1, CP HLP Rev Data Response, N=%d, <systime>  CP - RLP Sends Tx ACK to upper layer for data sent at  %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:RLP Channel Id
End

Begin Message, CP Trace CP Open Response Rsp
    printformat , 1, 1, CP Open Response, N=%d, <systime>  CP - RLP opened at reset count %d, status = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    resetCount, uint32
    Status, uint32, base=enum:Fail/Pass
End

Begin Message, CP Trace CP Close Response Rsp
    printformat , 1, 1, CP Close Response, N=%d, <systime>  CP - RLP close at channel = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:RLP Channel Id
End

Begin Message, CP Trace CP Reset Indication Rsp
    printformat , 1, 1, CP Reset Indication, N=%d, <systime>  CP - Reset occurred count = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Count, uint32
End

Begin Message, CP Trace CP Fwd data to HLW Rsp
    printformat , 1, 1, CP Fwd data to HLW, N=%d, <systime>  CP - RLP Channel = %s, LEN = %d, LOST = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:RLP Channel Id
    Data Lenth, uint32
    Data Lost, uint32
End

Begin Message, CP Trace CP Decrypt request Rsp
    printformat , 1, 1, CP Decrypt request, N=%d, <systime>  CP - RLP Channel = %s, HOOK = %u, LEN = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:RLP Channel Id
    Hook, uint32
    Length, uint32
End

Begin Message, CP Trace CP Encrypt request Rsp
    printformat , 1, 1, CP Encrypt request, N=%d, <systime>  CP - RLP Channel = %s, HOOK = %u, LEN = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:RLP Channel Id
    Hook, uint32
    Length, uint32
End

Begin Message, CP Trace CP Rev frame req info Rsp
    printformat , 1, 1, CP Rev frame req info, N=%d, <systime>  CP - RLP rev req Pri Rate = %s, R-SCH rate = %s, %d PDUs are allowed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Pri Rate, uint32, base=enum:RLP Frame Rate
    SCH Rate, uint32, base=enum:RLP Frame Rate
    numPDU, uint32
End

Begin Message, CP Trace CP Rev Data To RLPE index Rsp
    printformat , 1, 1, CP Rev Data To RLPE index, N=%d, <systime>  CP - RLP Page Indx = %d, Byte Indx = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Page Index, uint32
    Byte Index, uint32
End

Begin Message, CP Trace CP IOP To RLPW data Len Rsp
    printformat , 1, 1, CP IOP To RLPW data Len, N=%d, <systime>  CP - RLP Data Len = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Length, uint32
End

Begin Message, CP Trace CP RLP CTL reset info Rsp
    printformat , 1, 1, CP RLP CTL reset info, N=%d, <systime>  CP - RLP CP RLP CTL reset info Reason Code = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Reason Code, uint32
End

Begin Message, CP Trace CP Ctrl flow stop IOP Rsp
    printformat , 1, 1, CP Ctrl flow stop IOP, N=%d, <systime>  CP - RLP stop IOP send at page index = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Page Ind, uint32
End

Begin Message, CP Trace CP HL opens RLP Rsp
    printformat , 1, 1, CP HL opens RLP, N=%d, <systime>  CP - RLP HL open Channel = %s, Mode = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:RLP Channel Id
    Mode, uint32, base=enum:RLP Mode Type
End

Begin Message, CP Trace CP HL close RLP Rsp
    printformat , 1, 1, CP HL close RLP, N=%d, <systime>  CP - RLP HL close Channel = %s, Flush Pending = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:RLP Channel Id
    Flush Pend, uint32, base=enum:RLP Bool Type
End

Begin Message, CP Trace CP AI opens RLP Rsp
    printformat , 1, 1, CP AI opens RLP, N=%d, <systime>  CP - RLP AI opens Channel = %s, Mode = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:RLP Channel Id
    Mode, uint32, base=enum:RLP Mode Type
End

Begin Message, CP Trace CP AI closes RLP Rsp
    printformat , 1, 1, CP AI closes RLP, N=%d, <systime>  CP - RLP AI close Channel = %s, Flush Pending = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:RLP Channel Id
    Flush Pend, uint32, base=enum:RLP Bool Type
End

Begin Message, CP Trace CP LMD opens RLP Rsp
    printformat , 1, 1, CP LMD opens RLP, N=%d, <systime>  CP - RLP open Channel = %s, Mode = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:RLP Channel Id
    Mode, uint32, base=enum:RLP Mode Type
End

Begin Message, CP Trace CP LMD closes RLP Rsp
    printformat , 1, 1, CP LMD closes RLP, N=%d, <systime>  CP - RLP close Channel = %s, Flush Pending = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:RLP Channel Id
    Flush Pend, uint32, base=enum:RLP Bool Type
End

Begin Message, CP Trace CP HL done with fwd Data Rsp
    printformat , 1, 1, CP HL done with fwd Data, N=%d, <systime>  CP - RLP rcvd Ack fwd data on %s channel
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:RLP Channel Id
End

Begin Message, CP Trace CP RLPE put Fwd Data to RLPW Rsp
    printformat , 1, 1, CP RLPE put Fwd Data to RLPW, N=%d, <systime>  CP - RLP eng put Fwd Data to RLPW at channel = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:RLP Channel Id
End

Begin Message, CP Trace CP Rev Data to RLPW Rsp
    printformat , 1, 1, CP Rev Data to RLPW, N=%d, <systime>  CP - RLP Send Rev Data at reset count %d for %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Count, uint32,
    Data Len, uint32
End

Begin Message, CP Trace CP Tx Rx Mux Option Rsp
    printformat , 1, 1, CP Tx Rx Mux Option, N=%d, <systime>  CP - RLP SCH fwd Mux opt= 0x%x, rev Mux = 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Tx Mux, uint32
    Rx Mux, uint32
End

Begin Message, CP Trace CP Rate Ctrl Param Rsp
    printformat , 1, 1, CP Rate Ctrl Param, N=%d, <systime>  CP - RLP Rate Ctrl = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RateCtrl, uint32, base=enum:RLP Rate Ctrl Type
End

Begin Message, CP Trace CP Sec Priority changes Rsp
    printformat , 1, 1, CP Sec Priority changes, N=%d, <systime>  CP - RLP Sec Chanel Ovrrd = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Override, uint32, base=enum:RLP Bool Type
End

Begin Message, CP Trace CP RLPW PA Status Rsp
    printformat , 1, 1, CP RLPW PA Status, N=%d, <systime>  CP - RLP PA WFR Rx=%s,state=%s,RspPending=%s,Busy=%s,RBuf=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    WFRx, uint32, base=enum:FALSE/TRUE
    State, uint32, base=enum:Normal/Open/Close
    RspPend, uint32, base=enum:FALSE/TRUE
    Busy, uint32, base=enum:FALSE/TRUE
    CurBufR, uint32
End

Begin Message, CP Trace CP RLP Rev Flow Ctl RLP Data Save Rsp
    printformat , 1, 1, CP RLP Rev Flow Ctl RLP Data Save, N=%d, <systime>  CP - RLP IFC Rev Data Save MuxOptn=%d,HiWm=%d,HLen=%d,TxReady=%s,NumSup=%d,ReTxLn=%d,CpBuff=0x%08X,BufLen=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MuxOptn, uint32
    HiWm, uint32
    HLen, uint32
    TxReady, uint32, base=enum:FALSE/TRUE
    NumSup, uint32
    ReTxLn, uint32
    Buffer, uint32
    BufLen, uint32
End

Begin Message, CP Trace CP RLP Rev Flow Ctl RLP Data Sent Rsp
    printformat , 1, 1, CP RLP Rev Flow Ctl RLP Data Sent, N=%d, <systime>  CP - RLP IFC Rev Data Sent MuxOptn=%d,LoWm=%d,HLen=%d,TxReady=%s,NumSup=%d,ReqLen=%d,RspLen=%d,DatCnt=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MuxOptn, uint32
    LoWm, uint32
    HLen, uint32
    TxReady, uint32, base=enum:FALSE/TRUE
    NumSup, uint32
    ReqLen, uint32
    RspLen, uint32
    DatCnt, uint32
End

Begin Message, CP Trace CP RLP Rev Flow Ctl RLP Idle Sent Rsp
    printformat , 1, 1, CP RLP Rev Flow Ctl RLP Idle Sent, N=%d, <systime>  CP - RLP IFC Rev Idle sent MuxOptn=%d,LoWm=%d,HLen=%d,TxReady=%s,NumSup=%d,ReqLen=%d,RspLen=%d,IdlCnt=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MuxOptn, uint32
    LoWm, uint32
    HLen, uint32
    TxReady, uint32, base=enum:FALSE/TRUE
    NumSup, uint32
    ReqLen, uint32
    RspLen, uint32
    IdlCnt, uint32
End

Begin Message, CP Trace CP RLP Rev Data IP-Identification Rsp
    printformat , 1, 1, CP RLP Rev Data IP-Identification, N=%d, <systime>  CP - RLP IFC Rev Data IP-Identification IpId=0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    IpId, uint32
End

Begin Message, CP Trace CP RLP Generic Dec1 Rsp
    printformat , 1, 1, CP RLP Generic Dec1, N=%d, <systime>  CP - RLP Generic Dec1: %d, %d, %d, %d, %d, %d, %d, %d, %d, %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP Generic Dec2 Rsp
    printformat , 1, 1, CP RLP Generic Dec2, N=%d, <systime>  CP - RLP Generic Dec2: %d, %d, %d, %d, %d, %d, %d, %d, %d, %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP Generic Hex1 Rsp
    printformat , 1, 1, CP RLP Generic Hex1, N=%d, <systime>  CP - RLP Generic Hex1: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP Generic Hex2 Rsp
    printformat , 1, 1, CP RLP Generic Hex2, N=%d, <systime>  CP - RLP Generic Hex2: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 86 Rsp
    printformat , ENG_NO_CATEGORY,  6, CP RLP ENG_NO_CATEGORY 2 86, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 86] RLP3 ResQNum = %03X, NakQNum&Active = %08X, ChnType&Rate = %08X, FrmType&SeqNum = %08X, SegSeqNum&Len = %08X, Vn&Vr = %08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ResQNum, uint32
    NakQNum&Active, uint32
    ChnType&Rate, uint32
    FrmType&SeqNum, uint32
    SegSeqNum&Len, uint32
    Vn&Vr, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 87 Rsp
    printformat , ENG_NO_CATEGORY,  6, CP RLP ENG_NO_CATEGORY 2 87, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 87] RLP3 Reset due to invalid Idle frame  seq = 0x%03X, old_v_r = 0x%03X, howOldVr = 0x%02X, seq_hi = 0x%01X v_n = 0x%03X, v_r = 0x%03X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SEQ, uint32
    old_v_r, uint32
    howOldVr, uint32
    SEQ_HI, uint32
    v_n, uint32
    v_r, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 88 Rsp
    printformat , ENG_NO_CATEGORY,  7, CP RLP ENG_NO_CATEGORY 2 88, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 88] RLP3 Rx Nak seq = 0x%03X, seq_hi = 0x%01X, old_v_r = 0x%03X, howOldVr = 0x%02X, l_v_peer = 0x%03X, v_s = 0x%03X, nakType = 0x%01X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SEQ, uint32
    SEQ_HI, uint32
    old_v_r, uint32
    howOldVr, uint32
    l_v_peer, uint32
    v_s, uint32
    nakType, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 89 Rsp
    printformat , ENG_NO_CATEGORY,  7, CP RLP ENG_NO_CATEGORY 2 89, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 89] RLP3 ResQNum = %03X, NakQNum&Active = %08X, ChnType&Rate = %08X, FrmType&SeqNum = %08X, SegSeqNum&Len = %08X, OldVr&HowOldVr = %08X, Vn&Vr = %08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ResQNum, uint32
    NakQNum&Active, uint32
    ChnType&Rate, uint32
    FrmType&SeqNum, uint32
    SegSeqNum&Len, uint32
    OldVr&HowOldVr, uint32
    Vn&Vr, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 90 Rsp
    printformat , ENG_NO_CATEGORY,  6, CP RLP ENG_NO_CATEGORY 2 90, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 90] RLP3 Init NAK txNum = %d, nakType = %d, recNum = %d, nakFirstSeq = 0x%3x, nakLastSeq = 0x%3x, nakSeqMap = 0x%2x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    txNum, uint32
    nakType, uint32
    recNum, uint32
    nakFirstSeq, uint32
    nakLastSeq, uint32
    nakSeqMap, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 91 Rsp
    printformat , ENG_NO_CATEGORY,  7, CP RLP ENG_NO_CATEGORY 2 91, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 91] RLP3 Init NAK txNum = %d, nakType = %d, recNum = %d, nakFrameSeq = 0x%3x, nakFirstSegSeq = 0x%3x, nakLastSegSeq = 0x%3x, nakLenSegSeq = 0x%3x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    txNum, uint32
    nakType, uint32
    recNum, uint32
    nakFrameSeq, uint32
    nakFirstSegSeq, uint32
    nakLastSegSeq, uint32
    nakLenSegSeq, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 92 Rsp
    printformat , ENG_NO_CATEGORY,  2, CP RLP ENG_NO_CATEGORY 2 92, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 92] RLP Insert Frame seq = 0x%X, len = 0x%X, cpBuff = 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SEQ, uint32
    len, uint32
    cpBuff, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 93 Rsp
    printformat , ENG_NO_CATEGORY,  3, CP RLP ENG_NO_CATEGORY 2 93, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 93] RLP received frame SEQ = 0x%3x less than v_n = 0x%3x, v_r = 0x%3x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SEQ, uint32
    v_n, uint32
    v_r, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 94 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 94, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 94] RLP RevQ Over run OverRunNum = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    OverRunNum, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 95 Rsp
    printformat , ENG_NO_CATEGORY,  7, CP RLP ENG_NO_CATEGORY 2 95, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 95] RLP NAK Info resQLen = %d, NakLenActLen = 0x%8x, NakTypeRecNum = 0x%8x, Rec1 = 0x%8x, Rec2 = 0x%8x, Rec3 = 0x%8x, Rec4 = 0x%8x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    resQLen, uint32
    NakLenActLen, uint32
    NakTypeRecNum, uint32
    Rec1, uint32
    Rec2, uint32
    Rec3, uint32
    Rec4, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 96 Rsp
    printformat , ENG_NO_CATEGORY,  6, CP RLP ENG_NO_CATEGORY 2 96, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 96] RLP Nak total tick timeout nakRemoved = %s, nakListLen = %d, seqNum = 0x%03x, totalTicks = %d, numReTx = %d, frameLen = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    nakRemoved, uint32, base=enum:FALSE/TRUE
    nakListLen, uint32
    seqNum, uint32
    totalTicks, uint32
    numReTx, uint32
    frameLen, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 97 Rsp
    printformat , ENG_NO_CATEGORY,  4, CP RLP ENG_NO_CATEGORY 2 97, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 97] RLP Nak timer ResQVn-Vr = 0x%08x, ResQLen = %d, NakListSeq = 0x%08x, NakListLen = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ResQVn-Vr, uint32
    ResQLen, uint32
    NakListSeq, uint32
    NakListLen, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 98 Rsp
    printformat , ENG_NO_CATEGORY,  4, CP RLP ENG_NO_CATEGORY 2 98, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 98] RLP Nak frame ResQVn-Vr = 0x%08x, ResQLen = %d, NakListSeq = 0x%08x, NakListLen = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ResQVn-Vr, uint32
    ResQLen, uint32
    NakListSeq, uint32
    NakListLen, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 99 Rsp
    printformat , ENG_NO_CATEGORY,  6, CP RLP ENG_NO_CATEGORY 2 99, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 99 ] RLP new data frame MuxOpt = 0x%03x, Type = %d, ResQVs = 0x%03x, Rate-AvLen = 0x%08X, DLenSLenSSeq = 0x%08X, DataChn = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MuxOpt, uint32
    Type, uint32
    ResQVs, uint32
    Rate-AvLen, uint32
    DLenSLenSSeq, uint32
    DataChn, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 100 Rsp
    printformat , ENG_NO_CATEGORY,  6, CP RLP ENG_NO_CATEGORY 2 100, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 100] RLP ret data frame MuxOpt = 0x%03x, Type = %d, RetSeq = 0x%03x, Rate-AvLen = 0x%08X, DLenSLenSSeq = 0x%08X, SegSLST = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MuxOpt, uint32
    Type, uint32
    RetSeq, uint32
    Rate-AvLen, uint32
    DLenSLenSSeq, uint32
    SegSLST, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP EHRPD RCVD FWD PPP Packet Rsp
    printformat , 1, 1, CP EHRPD RCVD FWD PPP Packet, N=%d, <systime>  CP - eHRPD received PPP packets with prot=%s %d bytes PDNid=%d AppType=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Protocol, uint32, base=enum:PPPprotocol Enum
    Num of bytes, uint32,
    PDNid, uint32,
    APP Type, uint32, base=enum:AppType Enum
End

Begin Message, CP Trace CP EHRPD FWD RAW IP Packet To IPC Msg Rsp
    printformat , 1, 1, CP EHRPD FWD RAW IP Packet To IPC Msg, N=%d, <systime>  CP - eHRPD forwarding IP packets ver %d PDNid=%d for %d bytes to IPC
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    IP Ver, uint32
    PDN id, uint32
    Num Bytes, uint32
End

Begin Message, CP Trace CP EHRPD RCVD VSNCP Msg Rsp
    printformat , 1, 1, CP EHRPD RCVD VSNCP Msg, N=%d, <systime>  CP - Received VSNCP message with header %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    VSNCP Header, uint32, base=enum:VSNCPheader Enum
End

Begin Message, CP Trace CP EHRPD RCVD VSNCP Cfg Req Msg Rsp
    printformat , 1, 1, CP EHRPD RCVD VSNCP Cfg Req Msg, N=%d, <systime>  CP - Rcvd VSNCP Config Req at state = %s PDN id = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CfgReq State, uint8, base=enum:PDN_State Enum
    PDN id, uint8
End

Begin Message, CP Trace CP EHRPD RCVD VSNCP Cfg Ack Msg Rsp
    printformat , 1, 1, CP EHRPD RCVD VSNCP Cfg Ack Msg, N=%d, <systime>  CP - Rcvd VSNCP Config Ack at state = %s PDN id = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CfgAck State, uint8, base=enum:PDN_State Enum
    PDN id, uint8
End

Begin Message, CP Trace CP EHRPD SEND VSNCP Cfg Ack Msg Rsp
    printformat , 1, 1, CP EHRPD SEND VSNCP Cfg Ack Msg, N=%d, <systime>  CP - Send VSNCP Config Ack with PDN id = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDN id, uint32
End

Begin Message, CP Trace CP EHRPD SEND VSNCP Cfg Req Msg Rsp
    printformat , 1, 1, CP EHRPD SEND VSNCP Cfg Req Msg, N=%d, <systime>  CP - Send VSNCP Config Req at state %s PDN id = %d type = %s attach type = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CfgReq State, uint8, base=enum:PDN_State Enum
    PDN id, uint8
    Type, uint8, base=enum:PDNType Enum
    Attach Type, uint8, base=enum:AttachType Enum
End

Begin Message, CP Trace CP EHRPD SEND VSNCP Term Req Msg Rsp
    printformat , 1, 1, CP EHRPD SEND VSNCP Term Req Msg, N=%d, <systime>  CP - Send VSNCP Terminate Request at state %s PDN id = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrmReq state, uint8, base=enum:PDN_State Enum
    PDN id, uint8
End

Begin Message, CP Trace CP EHRPD SEND VSNCP Term Ack Msg Rsp
    printformat , 1, 1, CP EHRPD SEND VSNCP Term Ack Msg, N=%d, <systime>  CP - Send VSNCP Terminate Ack for PDN id = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDN id, uint8
End

Begin Message, CP Trace CP EHRPD SEND NDIS Data to IOP Msg Rsp
    printformat , 1, 1, CP EHRPD SEND NDIS Data to IOP Msg, N=%d, <systime>  CP - Send NDIS data to IOP for %d bytes, path %s, RLP flow %d, PDN id = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Num Bytes, uint32
    Path, uint32, base=enum:DATA_Path Enum
    RLP Flow, uint32
    PDN id, uint32
End

Begin Message, CP Trace CP EHRPD RCVD NON NDIS Data from EMPAF Msg Rsp
    printformat , 1, 1, CP EHRPD RCVD NON NDIS Data from EMPAF Msg, N=%d, <systime>  CP - Received non NDIS data from EMPAF for %d bytes, path %s, RLP flow %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Num Bytes, uint32
    Path, uint32, base=enum:DATA_Path Enum
    RLP Flow, uint32
End

Begin Message, CP Trace CP EHRPD TFT ADDRESS MATCH Msg Rsp
    printformat , 1, 1, CP EHRPD TFT ADDRESS MATCH Msg, N=%d, <systime>  CP - TFT Address match %s PDN type %s incoming IP ver %d TFT IP type %s PDNId %d AppType %s ResvLabel %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    match, uint32, base=enum:failed/pass
    PDN type, uint32, base=enum:PDNType Enum
    Rcvd IPver, uint32
    TFT IP type, uint32, base=enum:v4/v6
    PDN id, uint32
    APP Type, uint32, base=enum:PDN_APPType Enum
    ResvLabel, uint32
End

Begin Message, CP Trace CP EHRPD SEND IP PKT to EMPAR Rsp
    printformat , 1, 1, CP EHRPD SEND IP PKT to EMPAR, N=%d, <systime>  CP - Send an IP packet to EMPAR FlowId %d, RLP Flow Num %d, data path %s for %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FlowID, uint32
    Flow Num, uint32
    Data Path, uint32, base=enum:DATA_Path Enum
    Num Bytes, uint32
End

Begin Message, CP Trace CP EHRPD DATA CONNECTION SET CMD Trace Rsp
    printformat , 1, 1, CP EHRPD DATA CONNECTION SET CMD Trace, N=%d, <systime>  CP - CSS sent data conection command %s APP_MAIN state = %s CAM state = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Command, uint32, base=enum:DATA_CONN_CMD
    APP State, uint32, base=enum:NSPE State
    CAM State, uint32, base=enum:HLP Cam State
End

Begin Message, CP Trace CP EHRPD DATA STATE IND Trace Rsp
    printformat , 1, 1, CP EHRPD DATA STATE IND Trace, N=%d, <systime>  CP - Packet Service data state indicates %s APP_MAIN state = %s CAM state = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Data state, uint32, base=enum:DATA_STATE_IND
    APP State, uint32, base=enum:NSPE State
    CAM State, uint32, base=enum:HLP Cam State
End

Begin Message, CP Trace CP EHRPD SET PPP STATUS Trace Rsp
    printformat , 1, 1, CP EHRPD SET PPP STATUS Trace, N=%d, <systime>  CP - Set PPP status at %s interface, status=%s, local addr=%d, remote addr=%d, pri DNS=%d, sec DNS=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Interface, uint32, base=enum:HLP Interface Type
    status, uint32, base=enum:HLP PPP status Type
    local addr, uint32
    remote addr, uint32
    Pri DNS, uint32
    Sec DNS, uint32
End

Begin Message, CP Trace CP HLP CAM State Transition Rsp
    printformat , 1, 1, CP HLP CAM State Transition, N=%d, <systime>  CP - HLP CAM current state %s, triggered by event %s, next state %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:HLP Cam State
    Event, uint32, base=enum:HLP Cam Event
    State2, uint32, base=enum:HLP Cam State
End

Begin Message, CP Trace CP HLP PPP Connect Req Rsp
    printformat , 1, 1, CP HLP PPP Connect Req, N=%d, <systime>  CP - HLP PPP connect request SO=%d, network pref=%s, App Type=%s, %s, 1x Inact Tmr=%d ReleaseTchFallback=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Service Opt, uint32
    Ntwk Pref, uint32, base=enum:HLP Network Pref
    App Type, uint32, base=enum:HLP App Type
    Auth Type, uint32, base=enum:IP Service Type
    Inact Tmr, uint32
    ReleaseTchWhenFallback, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP HLP Network Response Rsp
    printformat , 1, 1, CP HLP Network Response, N=%d, <systime>  CP - HLP receive network response %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:HLP Ntwk Resp Type
End

Begin Message, CP Trace CP HLP RLP Open Failed Rsp
    printformat , 1, 1, CP HLP RLP Open Failed, N=%d, <systime>  CP - HLP receive 1X RLP open failed response
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP Rev data xmitted at RLP Rsp
    printformat , 1, 1, CP Rev data xmitted at RLP, N=%d, <systime>  CP - HLP receive resp for reverse data sent by RLP %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channel, uint32, base=enum:HLP Channel Id
End

Begin Message, CP Trace CP HLP Force 1X Connection Rsp
    printformat , 1, 1, CP HLP Force 1X Connection, N=%d, <systime>  CP - HLP force 1X connection alert msg id=%d, p1=%d, p2=%d, p3=%d, p4=%d, p5=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Id, uint32
    Param1, uint32
    Param2, uint32
    Param3, uint32
    Param4, uint32
    Param5, uint32
End

Begin Message, CP Trace CP Rev data request Rsp
    printformat , 1, 1, CP Rev data request, N=%d, <systime>  CP - HLP received 0x%04X bytes at reverse link from upper layer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Data Length, uint32
End

Begin Message, CP Trace CP Lower NSPE fwd data to AI Rsp
    printformat , 1, 1, CP Lower NSPE fwd data to AI, N=%d, <systime>  CP - HLP sends forward data to AIW
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP Lower NSPE rev sent rsp Rsp
    printformat , 1, 1, CP Lower NSPE rev sent rsp, N=%d, <systime>  CP - HLP send to AIW reverse data sent rsp
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP HLP PPP HA LLD0 Complete Rsp
    printformat , 1, 1, CP HLP PPP HA LLD0 Complete, N=%d, <systime>  CP - HLP PPP HA LLD0 complete loading 0x%04X entries for 0x%04X bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    numEntry, uint32
    totalByte, uint32
End

Begin Message, CP Trace CP HLP PPP HA LLD1 Complete Rsp
    printformat , 1, 1, CP HLP PPP HA LLD1 Complete, N=%d, <systime>  CP - HLP PPP HA LLD1 complete loading 0x%04X entries for 0x%04X bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    numEntry, uint32
    totalByte, uint32
End

Begin Message, CP Trace CP PPPHA DEC0 Complete Rsp
    printformat , 1, 1, CP PPPHA DEC0 Complete, N=%d, <systime>  CP - HLP PPP HA Decoder 0 complete, first 3 result reads 0x%08X, 0x%08X and 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Result1, uint32
    Result2, uint32
    Result3, uint32
End

Begin Message, CP Trace CP PPPHA DEC1 Complete Rsp
    printformat , 1, 1, CP PPPHA DEC1 Complete, N=%d, <systime>  CP - HLP PPP HA Decoder 1 complete, first 3 result reads 0x%08X, 0x%08X and 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Result1, uint32
    Result2, uint32
    Result3, uint32
End

Begin Message, CP Trace CP PPPHA ENC0 Complete Rsp
    printformat , 1, 1, CP PPPHA ENC0 Complete, N=%d, <systime>  CP - HLP PPP HA Encoder 0 completed 0x%04X bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Data Length, uint32
End

Begin Message, CP Trace CP PPPHA ENC1 Complete Rsp
    printformat , 1, 1, CP PPPHA ENC1 Complete, N=%d, <systime>  CP - HLP PPP HA Encoder 1 completed 0x%04X bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Data Length, uint32
End

Begin Message, CP Trace CP HLP RLP Inact Timeout Rsp
    printformat , 1, 1, CP HLP RLP Inact Timeout, N=%d, <systime>  CP - HLP received 1X-RLP inactivity time out
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP HLP PPP HA DEC0 Result Rsp
    printformat , 1, 1, CP HLP PPP HA DEC0 Result, N=%d, <systime>  CP - PPP HA Decoder 0 shows result 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Reseult, uint32
End

Begin Message, CP Trace CP HLP PPP HA DEC1 Result Rsp
    printformat , 1, 1, CP HLP PPP HA DEC1 Result, N=%d, <systime>  CP - PPP HA Decoder 1 shows result 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Result, uint32
End

Begin Message, CP Trace CP HLP Service Indication Rsp
    printformat , 1, 1, CP HLP Service Indication, N=%d, <systime>  CP - HLP Rcvd Service Indication on %s with %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Result1, uint32, base=enum:HLP Network Type
    Result2, uint32, base=enum:HLP Service Status
End

Begin Message, CP Trace CP Timer start Rsp
    printformat , 1, 1, CP Timer start, N=%d, <systime>  CP - HLP started Timer Id %d for %d msec
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Timer Id, uint32
    Duration, uint32
End

Begin Message, CP Trace CP Timer expired Rsp
    printformat , 1, 1, CP Timer expired, N=%d, <systime>  CP - HLP Timer Id %d expired
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Timer Id, uint32
End

Begin Message, CP Trace CP Timer killed Rsp
    printformat , 1, 1, CP Timer killed, N=%d, <systime>  CP - HLP Timer Id %d is killed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Timer Id, uint32
End

Begin Message, CP Trace CP HLP Um Rm PPP Status Rsp
    printformat , 1, 1, CP HLP Um Rm PPP Status, N=%d, <systime>  CP - HLP receive %s PPP status %s, local IP 0x%08X, remote IP  0x%08X, Pri DNS  0x%08X, Sec DNS  0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Interface, uint32, base=enum:HLP Interface Type
    Status, uint32, base=enum:HLP PPP status Type
    local, uint32
    remote, uint32
    Pri, uint32
    Sec, uint32
End

Begin Message, CP Trace CP Send Protocol Type Rsp
    printformat , 1, 1, CP Send Protocol Type, N=%d, <systime>  CP - Nspe sent a %s packet, prot = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Protol type, uint32, base=enum:HLP Protocol Type
    Protol num, uint32
End

Begin Message, CP Trace CP PKT Open Uart Rsp
    printformat , 1, 1, CP PKT Open Uart, N=%d, <systime>  CP - Bottom of IP/CLNP/PPP to request to open UART
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PKT Close Uart Rsp
    printformat , 1, 1, CP PKT Close Uart, N=%d, <systime>  CP - Bottom of IP/CLNP/PPP to request to close UART
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP HL UM FWD HDLC Rcvd Msg Rsp
    printformat , 1, 1, CP HL UM FWD HDLC Rcvd Msg, N=%d, <systime>  CP - HLP received %d bytes fwd link HDLC data from Um
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ByteCnt, uint32
End

Begin Message, CP Trace CP HL RM REV HDLC Rcvd Msg Rsp
    printformat , 1, 1, CP HL RM REV HDLC Rcvd Msg, N=%d, <systime>  CP - HLP received %d bytes rev link HDLC data from Rm
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ByteCnt, uint32
End

Begin Message, CP Trace CP HL RM REV HDLC RCVD RSP MSG Rsp
    printformat , 1, 1, CP HL RM REV HDLC RCVD RSP MSG, N=%d, <systime>  CP - HLP sends response to rcvd rev HDLC from Rm
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP HL RM FWD MSG Rsp
    printformat , 1, 1, CP HL RM FWD MSG, N=%d, <systime>  CP - HLP sends %d bytes fwd data to Rm
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ByteCnt, uint32
End

Begin Message, CP Trace CP HL RM FWD RSP MSG Rsp
    printformat , 1, 1, CP HL RM FWD RSP MSG, N=%d, <systime>  CP - HLP rcvd response to fwd data to Rm
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP HL MIP State Rsp
    printformat , 1, 1, CP HL MIP State, N=%d, <systime>  CP - HLP MIP State: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint8, base=enum:HLP MIP State
End

Begin Message, CP Trace CP HL MIP Timer Rsp
    printformat , 1, 1, CP HL MIP Timer, N=%d, <systime>  CP - HLP MIP Timer: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint8, base=enum:HLP MIP Timer
End

Begin Message, CP Trace CP HL TCP Output Info Rsp
    printformat , 1, 1, CP HL TCP Output Info, N=%d, <systime>  CP - HLP TCP send SAP=%d, Seq=0x%08x, Ack=0x%08x, Next=0x%08x, len=0x%x bytes, ctl flag=0x%02x, dupAck=0x%2x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    sap, uint32
    seq, uint32
    ack, uint32
    nxt, uint32
    len, uint32
    ctl, uint32
    dpack, uint32
End

Begin Message, CP Trace CP HL TCP Input Info 1 Rsp
    printformat , 1, 1, CP HL TCP Input Info 1, N=%d, <systime>  CP - HLP TCP tcpctl=0x%02x, tp->t_state=%d, ip->tcp_len=0x%04x, ip->tcp_seq=0x%08x, tp->rcv_nxt=0x%08x, ip->tcp_win=0x%04x, tp->snd_wnd=0x%04x, tp->snd_cwnd=0x%04x, tp->snd_nxt=0x%08x, tp->snd_una=0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ctl, uint32
    t_state, uint32
    tcp_len, uint32
    tcp_seq, uint32
    rcv_nxt, uint32
    tcp_win, uint32
    snd_wnd, uint32
    snd_cwn, uint32
    snd_nxt, uint32
    snd_una, uint32
End

Begin Message, CP Trace CP HL TCP Input Info 2 Rsp
    printformat , 1, 1, CP HL TCP Input Info 2, N=%d, <systime>  CP - HLP TCP tp->t_timer[TCPT_REXMT]=0x%04x, tp->t_timer[TCPT_PERSIST]=0x%04x, tp->snd_max=0x%08x,tp->rcv_adv=0x%08x,tp->rcv_wnd=0x%08x,tp->rcv_nxt=0x%08x,tp->t_recvcnt=0x%08x,tp->t_rttseq=0x%08x,tp->rcv_irs=0x%08x,tp->t_recvmax=0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    t_timer1, uint32
    t_timer2, uint32
    snd_max, uint32
    rcv_adv, uint32
    rcv_wnd, uint32
    rcv_nxt, uint32
    t_recvc, uint32
    t_rttse, uint32
    rcv_irs, uint32
    t_recvm, uint32
End

Begin Message, CP Trace CP HL MIP Fallback SIP Rsp
    printformat , 1,1, CP HL MIP Fallback SIP, N=%d, <systime>  CP - HLP Mobile IP fallback to Simple IP is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    bEnable, uint32, base= enum:Disabled/Enabled
End

Begin Message, CP Trace CP HL MIP Preference Mode Rsp
    printformat , 1,1, CP HL MIP Preference Mode, N=%d, <systime>  CP - HLP IP Service Type is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    bEnable, uint32, base= enum:IP Service Type
End

Begin Message, CP Trace CP HL MIP DMU Version Rsp
    printformat , 1,1, CP HL MIP DMU Version, N=%d, <systime>  CP - HLP Mobile IP DMU Version is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    DMUVer, uint32, base= enum:DMU Version
End

Begin Message, CP Trace CP HL MIP DMU RSA Public Key Header Rsp
    printformat , 1,1, CP HL MIP DMU RSA Public Key Header, N=%d, <systime>  CP - HLP MIP DMU RSA Public Key Info: PKOID: %02X, PKOI: %02X, PK_Expansion: %02X, DMUV: %02X, ATV: %02X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PKOID, uint32
    PKOI, uint32
    PK_Expansion, uint32
    DMUV, uint32
    ATV, uint32
End

Begin Message, CP Trace CP HL MIP DMU RSA Public Key OrgId and MN Auth Rsp
    printformat , 1,1, CP HL MIP DMU RSA Public Key OrgId and MN Auth, N=%d, <systime>  CP - HLP MIP DMU RSA Public Key OrgId:  %02X, MN_Authenticator: %02X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PKOID, uint32
    MN_Authenticator, uint32
End

Begin Message, CP Trace CP HL MIP DMU MN Authenticator Save Rsp
    printformat , 1, 1, CP HL MIP DMU MN Authenticator Save, N=%d, <systime>  CP - HLP Write the MN Authenticator to DBM %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Result, uint32, base=enum:Successfully/Failure
End

Begin Message, CP Trace CP HL MIP DMU Active RSA Public Key Rsp
    printformat , 1, 1, CP HL MIP DMU Active RSA Public Key, N=%d, <systime>  CP - HLP MIP DMU RSA Public Key Current Activated is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Active RSA Public Key, uint32, base=enum:DMU RSA Public Key Select
End

Begin Message, CP Trace CP HL Set Reverse Data Path Rsp
    printformat , 1, 1, CP HL Set Reverse Data Path, N=%d, <systime>  CP - HLP set reverse data path from IOP to %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Result, uint32, base=enum:Reverse Path
End

Begin Message, CP Trace CP HL Retry Throttling Tmr Active Rsp
    printformat , 1, 1, CP HL Retry Throttling Tmr Active, N=%d, <systime>  CP - HLP Retry Throttling Timer Status = %d  Type = %s  SystemId = 0x%08X 0x%08X 0x%08X 0x%08X 0x%08X 0x%08X 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Status, uint32
    Type, uint32, base=enum:HLP Throttling Tmr Type
    SysId1, uint32
    SysId2, uint32
    SysId3, uint32
    SysId4, uint32
    SysId5, uint32
    SysId6, uint32
    SysId7, uint32
End

Begin Message, CP Trace CP HL DO Pilot Power Strength Rsp
    printformat , 1, 1, CP HL DO Pilot Power Strength, N=%d, <systime>  CP - HLP sys rsp %s DO thresh %d dB pilot strength %d, thresh value %d AppType %s eHRPD=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    System Rsp, uint32, base=enum:HLP Ntwk Resp Type
    DO Thresh, uint32
    Pilot Strength, uint32
    Threshold Value, uint32
    App Type, uint32, base=enum:HLP App Type
    eHRPD in session, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP HL Dormant Reconnect Params Rsp
    printformat , 1, 1, CP HL Dormant Reconnect Params, N=%d, <systime>  CP - HLP AppType=%s, ConnIRATCmd=%s, IMS State=%s, eHRPD=%s, CPC State=%s, PSC State=%s, DormBkoffTmr=%d, PendingDormFlag=%s, ServingNetwork=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    App Type, uint32, base=enum:HLP App Type
    Conn IRAT Cmd, uint32, base=enum:IRAT Conn Cmd
    IMS State, uint32, base=enum:IMSState Enum
    eHRPD enable, uint32, base=enum:FALSE/TRUE
    CPC State, uint32, base=enum:HLP CPC State Type
    PSC State, uint32, base=enum:HLP PSC State Type
    DormantBkOffTmr, uint32,
    PendingDormantFlag, uint32, base=enum:HLP Pending Flag Type
    Serving Network, uint32, base=enum:Network Type
End

Begin Message, CP Trace CP HL Set Handoff Flag To Rsp
    printformat , 1, 1, CP HL Set Handoff Flag To, N=%d, <systime>  CP - HLP Handoff Flag Sets To %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Handoff Flag, uint32, base=enum:HLP HO Flag Type
End

Begin Message, CP Trace CP HL Set MIP Re-Register State Rsp
    printformat , 1, 1, CP HL Set MIP Re-Register State, N=%d, <systime>  CP - HLP Set MoIP Re-Registration State to %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    state, uint32, base=enum:MIP ReRegister State
End

Begin Message, CP Trace CP HLP Data Ready To Send Status Rsp
    printformat , 1, 1, CP HLP Data Ready To Send Status, N=%d, <systime>  CP - HLP Data Ready To Send Status=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Status, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP HLP Dormant Reconn Tmr Status Rsp
    printformat , 1, 1, CP HLP Dormant Reconn Tmr Status, N=%d, <systime>  CP - HLP Dormant Reconn Tmr Status=%s, PendingStatus=s, Durance=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Status, uint32, base=enum:Dorm Reconn Tmr Status
    PendStatus, uint32, base=enum:Pending Reconn Status
    Duration, uint32
End

Begin Message, CP Trace CP HLP PKT Recvd Signal Rsp
    printformat , 1, 1, CP HL Cmd Mailbox Msg, N=%d, <systime>  CP - PKT Received Signal=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg, uint32, base=enum:PKT MsgId Enum
End

Begin Message, CP Trace CP HLP PKT State Transition Rsp
    printformat , 1, 1, CP PKT STATE TRANSITION MSG, N=%d, <systime>  CP - PKT current state %s, triggered by event %s, next state %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:Pkt State
    Event, uint32, base=enum:Pkt Event
    State2, uint32, base=enum:Pkt State
End

Begin Message, CP Trace CP HLP PKT Check Connect Status Rsp
    printformat , 1, 1, CP HLP Um Rm PPP Status, N=%d, <systime>  CP - PPP status %s, local IP 0x%08X, remote IP  0x%08X, Pri DNS  0x%08X, Sec DNS  0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Status, uint32, base=enum:HLP PPP status Type
    local, uint32
    remote, uint32
    Pri, uint32
    Sec, uint32
End

Begin Message, CP Trace CP HL Set Connection Fail Reason Rsp
    printformat , 1, 1, CP HL Set Connection Fail Reason, N=%d, <systime>  CP - HLP Set Connection Fail Reason, reason=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    reason, uint32, base=enum:Connection Failed Cause Code
End

Begin Message, CP Trace CP HL Cmd Mailbox Msg Rsp
    printformat , 1, 1, CP HL Cmd Mailbox Msg, N=%d, <systime>  CP - HLP Received Msg=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg, uint32, base=enum:HLP MsgId Enum
End

Begin Message, CP Trace CP HLP Rev To Rlp Enc Data Save Rsp
    printformat , 1, 1, CP HLP Rev To Rlp Enc Data Save, N=%d, <systime>  CP - HLP to RLP saved Conn=%s HiWm=%d TLen=%d TxReady=%s WIndex=%d EntNum=%d CpBuff=0x%08X BufLen=%d ThreadId=0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Conn, uint32, base=enum:Conn Status
    HiWm, uint32
    TLen, uint32
    TxReady, uint32, base=enum:FALSE/TRUE
    WIndex, uint32
    EntNum, uint32
    CpBuff, uint32
    BufLen, uint32
    ThreadId, uint32, base=enum:CP Thread Ids
End

Begin Message, CP Trace CP HLP Rev To Rlp Enc Data Read Rsp
    printformat , 1, 1, CP HLP Rev To Rlp Enc Data Read, N=%d, <systime>  CP - HLP to RLP Read Conn=%s LoWm=%d TLen=%d TxReady=%s RIndex=%d EntNum=%d CpBuff=0x%08X BufLen=%d ThreadId=0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Conn, uint32, base=enum:Conn Status
    LoWm, uint32
    TLen, uint32
    TxReady, uint32, base=enum:FALSE/TRUE
    RIndex, uint32
    EntNum, uint32
    CpBuff, uint32
    BufLen, uint32
    ThreadId, uint32
End

Begin Message, CP Trace CP HLP Fwd Data IP-Identification Rsp
    printformat , 1, 1, CP HLP Fwd Data IP-Identification, N=%d, <systime>  CP - HLP Fwd Data IP-Identification IpId=0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    IpId, uint32
End

Begin Message, CP Trace CP HLP Rev Data IP-Identification Rsp
    printformat , 1, 1, CP HLP Rev Data IP-Identification, N=%d, <systime>  CP - HLP Rev Data IP-Identification IpId=0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    IpId, uint32
End

Begin Message, CP Trace CP HL DBM Rsp
    printformat , 1, 1, CP HL DBM, N=%d, <systime>  CP - HLP DBM Trace: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    HLP DBM, uint32, base=enum:HLP Dbm Trace Type Enum
    Trace, union, enum=HLP DBM
End

Begin Message, CP HL DBM HlpDbmHspdSegInitReq() Rsp
    CurrentSize, uint32, base=10
End

Begin Message, CP HL DBM HlpDbmHspdSegDataReadMsg() Rsp
    FlashReadHspdSegDataIndex, uint32, base=10
    NumBytesReadFromDbm, uint32, base=10
End

Begin Message, CP HL DBM HlpReadDbmData()_More Rsp
    FlashReadHspdSegDataIndex, uint32, base=10
    CurrentMsgSize, uint32, base=10
End

Begin Message, CP HL DBM HlpReadDbmData()_Complete Rsp
    ActiveProfile, uint32, base=10
End

Begin Message, CP HL DBM HlpHspdSegDataWriteDbm()_More Rsp
    FlashWriteDataIndex_Seg, uint32, base=10
    CurrentMsgSize, uint32, base=10
End

Begin Message, CP HL DBM HlpHspdSegDataWriteDbm()_Complete Rsp
    ParmId, uint32, base=enum:HlpParmOperationId
    ResultSentTo, uint32, base=enum:ExeTaskIdT
    ResultRequestedBy, uint32, base=enum:ExeTaskIdT
End

Begin Message, CP HL DBM HlpSetHspdParmMsg() Rsp
    RspNeeded, uint32, base=enum:FALSE/TRUE
    ParmId, uint32, base=enum:HlpParmOperationId
    DestInfo, uint32, base=enum:ExeTaskIdT
End

Begin Message, CP HL DBM HlpDbmSecureDataReadMsg()_More Rsp
    FlashReadHspdSecureDataIndex, uint32, base=10
    CurrentMsgSize, uint32, base=10
End

Begin Message, CP HL DBM HlpDbmSecureDataReadMsg()_Complete Rsp
    CalculatedChecksum, uint32, base=10
    ReceivedChecksum, uint32, base=10
End

Begin Message, CP HL DBM HlpSetSecureData() Rsp
    RspNeeded, uint32, base=enum:FALSE/TRUE
    ParmId, uint32, base=enum:HlpParmOperationId
    DestInfo, uint32, base=enum:ExeTaskIdT
End

Begin Message, CP HL DBM HlpSecureDataWriteDbm()_More Rsp
    FlashWriteDataIndex_Secure, uint32, base=10
    CurrentMsgSize, uint32, base=10
End

Begin Message, CP HL DBM HlpSecureDataWriteDbm()_Complete Rsp
    RspNeeded, uint32, base=enum:FALSE/TRUE
    ParmId, uint32, base=enum:HlpParmOperationId
    DestInfo, uint32, base=enum:ExeTaskIdT
End

Begin Message, CP HL DBM HlpGetParmSize() Rsp
    ParmId, uint32, base=enum:HlpParmOperationId
    NumBytes, uint32, base=10
End

Begin Message, CP HL DBM HlpParmSetMsg() Rsp
    ParmId, uint32, base=enum:HlpParmOperationId
End

Begin Message, CP HL DBM HlpParmSetMsg()_Rsp Rsp
    Result, uint32, base=enum:HlpParmAccessResultCode
    ResultSentTo, uint32, base=enum:ExeTaskIdT
    ResultRequestedBy, uint32, base=enum:ExeTaskIdT
End

Begin Message, CP HL DBM HlpParmGetMsg() Rsp
    ParmId, uint32, base=enum:HlpParmOperationId
    RspBuffAllocated, uint32, base=enum:FALSE/TRUE
    RspDataFillLength, uint32, base=10
End

Begin Message, CP HL DBM HlpParmGetMsg()_Rsp Rsp
    Result, uint32, base=enum:HlpParmAccessResultCode
    ResultSentTo, uint32, base=enum:ExeTaskIdT
    ResultRequestedBy, uint32, base=enum:ExeTaskIdT
    MsgSize, uint32, base=10
End

Begin Message, CP HL DBM HlpParmAllDataSet() Rsp
    ActiveProfile, uint32, base=10
End

Begin Message, CP HL DBM HlpInitHspdDatabaseMsg() Rsp
    ActiveProfile, uint32, base=10
End

Begin Message, CP HL DBM HlpParmProfileInit() Rsp
    ProfileId, uint32, base=10
End

Begin Message, CP HL DBM HlpSecureProfileInit() Rsp
    ProfileId, uint32, base=10
End

Begin Message, CP HL DBM HSPD_LOCK_CODE_SET Rsp
    LockCode, uint32, base=10
End

Begin Message, CP Trace CP HLP FAST DORMENT TRACE Rsp
    printformat , 1, 1, CP HLP FAST DORMENT TRACE, N=%d, <systime>  CP - HLP Fast Dormant pageFromDorment=%d unsolicitPackets=%d unsolicitPktRevTime=%d from=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    pageFromDorment, uint32
    unsolicitPackets, uint32
    unsolicitPktRevTime, uint32
    from, uint32
End

Begin Message, CP Trace CP HLP MIP REREGISTRATION TRACE Rsp
    printformat , 1, 1, CP HLP MIP REREGISTRATION TRACE, N=%d, <systime>  CP - HLP MIP Reregistration RRA=%d RrpLifetime=%d State=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RRA, uint32
    RrpLifetime, uint32
    State, uint8, base=enum:HLP MIP State
End

Begin Message, CP Trace CP HL Uim Chap Auth Msg Rsp
    printformat , 1, 1, CP HL Uim Chap Auth Msg, N=%d, <systime>  CP - HLP Uim Chap Received Msg=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg, uint32, base=enum:HLP MsgId Enum
End

Begin Message, CP Trace CP HL EAP STATE TRACE ID Rsp
    printformat , 1, 1, CP HL EAP STATE TRACE ID, N=%d, <systime>  CP - HLP EAP Current State =%s, Next State = %s, Global = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Current State, uint32, base=enum:HLP EAP State Enum
    Next State, uint32, base=enum:HLP EAP State Enum
    Global, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP HL EAP AKA STATE TRACE ID Rsp
    printformat , 1, 1, CP HL EAP AKA STATE TRACE ID, N=%d, <systime>  CP - HLP Received Msg=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg, uint32, base=enum:HLP MsgId Enum
End

Begin Message, CP Trace CP HL SET BOOL TRACE ID Rsp
    printformat , 1, 1, CP HL SET BOOL TRACE ID, N=%d, <systime>  CP - HLP EAP SET BOOL Variable=%s to %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Bool Variable, uint32, base=enum:HLP BOOL Variable Enum
    Value, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP HL SET INT TRACE ID Rsp
    printformat , 1, 1, CP HL SET INT TRACE ID, N=%d, <systime>  CP - HLP EAP SET INT Variable=%s to %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Int Variable, uint32, base=enum:HLP INT Variable Enum
    Value, uint32
End

Begin Message, CP Trace CP HL MIP HA AUTH MODE TRACE ID Rsp
    printformat , 1,1, CP HL MIP HA AUTH MODE TRACE ID, N=%d, <systime>  CP - HLP MIP HA Auth Mode is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MN HA Mode, uint32, base= enum:RFC2002/RFC2002bis/byPassHA
End

Begin Message, CP Trace CP HLP Timer Expired Rsp
    printformat , 1,1, CP HLP Timer Expired, N=%d, <systime>  CP - HLP Timer Expired Id is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimerId, uint32, base= enum:HLP Timer Expired Id
End

Begin Message, CP Trace CP HLP PPP Inactivity Timer Rsp
    printformat , 1, 1, CP HLP PPP Inactivity Timer handler Trace, N=%d, <systime>  CP - HLP PPP Inactivity Timer Message handler: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Handler, uint32, base=enum:PppInactivityTimerHandlerId
    Rec, union, enum=Handler
End

Begin Message, CP HLP PPP Inactivity Timer PppInactivityTimerSet Rsp
    PPP Inactivity Duration(s), uint32, base=10
    ConfiguredByNetwork, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP HLP PPP Inactivity Timer PppInactivityTimerStart Rsp
    Timer ID, uint32, base=10
    PPP Inactivity Duration(ms), uint32, base=10
End

Begin Message, CP HLP PPP Inactivity Timer PppInactivityTimerStop Rsp
    Timer ID, uint32, base=10
End

Begin Message, CP HLP PPP Inactivity Timer PppInactivityTimerReset Rsp
    Timer ID, uint32, base=10
End

Begin Message, CP HLP PPP Inactivity Timer PppInactivityTimerExpired Rsp
    Timer ID, uint32, base=10
    ConfiguredByNetwork, uint32, base=enum:FALSE/TRUE
    PKT State, uint32, base=enum:Pkt State
End

Begin Message, CP Trace CP QOS Table Insert Rsp
    printformat , 1, 1, CP QOS Table Insert, N=%d, <systime>  CP - QoSTable%s Insert, cid=%d, Label=%d, NumRec=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    direction, uint32, base=enum:QOS Direction Enum
    cid, uint32
    Label, uint32
    Num, uint32
End

Begin Message, CP Trace CP QOS Table Delete Rsp
    printformat , 1, 1, CP QOS Table Delete, N=%d, <systime>  CP - QoSTable%s Delete, cid=%d, Label=%d,NumRec=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    direction, uint32, base=enum:QOS Direction Enum
    cid, uint32
    Label, uint32
    Num, uint32
End

Begin Message, CP Trace CP QOS Granted Rsp
    printformat , 1, 1, CP QOS Granted, N=%d, <systime>  CP - QoS Attribute Granted=%s,Label=%d,WaitQosNum=%d, WaitQosRelNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    direction, uint32, base=enum:QOS Direction Enum
    Label, uint32
    Num, uint32
    RelNum, uint32
End

Begin Message, CP Trace CP QOS RSVP MSG SEND Rsp
    printformat , 1, 1, CP QOS RSVP MSG SEND, N=%d, <systime>  CP - QoS send %s message QueueIndex=%d, TransId=%d,MsgLen=%d,OpCode=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgType, uint32, base=enum:RsvpMsgId Enum
    QueueIndex, uint32
    TransId, uint32
    Len, uint32
    OpCode, uint32, base=enum:RsvpOpCode Enum, exist=(MsgType!=4)
    ErrCode, uint32, base=enum:RsvpErrCode Enum, exist=(MsgType==4)
End

Begin Message, CP Trace CP QOS RSVP MSG RCV Rsp
    printformat , 1, 1, CP QOS RSVP MSG RCV, N=%d, <systime>  CP - QoS Receive Rsvp message %s,TransId=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32, base=enum:RsvpMsgId Enum
    TransId, uint32
End

Begin Message, CP Trace CP QOS RSVP ERR RCV Rsp
    printformat , 1, 1, CP QOS RSVP ERR RCV, N=%d, <systime>  CP - QoS Receive Rsvp Err message: ErrCode=%s,TftNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ErrCode, uint32, base=enum:RsvpErrCode Enum
    TftNum, uint32
End

Begin Message, CP Trace CP QOS RSVP TM Expire Rsp
    printformat , 1, 1, CP QOS RSVP TM Expire, N=%d, <systime>  CP - QoS Rsvp Timer Expired TimerId=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimerId, uint32
End

Begin Message, CP Trace CP QOS Reservation to Rlp Bind Rsp
    printformat , 1, 1, CP QOS Reservation to Rlp Bind, N=%d, <systime>  CP -  QoS Reservation2RlpNum mapping Direction=%s,ReservationLabel=%d,RlpNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    direction, uint32, base=enum:QOS Direction Enum
    Label, uint32
    RlpNum, uint32
End

Begin Message, CP Trace CP QOS RSVP OBJ RCV Rsp
    printformat , 1, 1, CP QOS RSVP OBJ RCV, N=%d, <systime>  CP - QoS Receive Rsvp Object length=%d,class=%d,ctype=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    len, uint32
    class, uint32
    ctype, uint32
End

Begin Message, CP Trace CP QOS STATE Rsp
    printformat , 1, 1, CP QOS STATE, N=%d, <systime>  CP - QoS State=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:QOS State Enum
End

Begin Message, CP Trace CP IMS MSG ID Rsp
    printformat , 1, 1, CP IMS MSG ID, N=%d, <systime>  CP - Msg Id%s , IMS State = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32, base=enum:HLP MsgId Enum
    State, uint32, base=enum:IMSState Enum
    Parm1, uint32
End

Begin Message, CP Trace CP IMS EVENT SAVE Rsp
    printformat , 1, 1, CP IMS EVENT SAVE, N=%d, <systime>  CP - Current IMS State=%s,EventNumber=%d,Added Event=%s, Added Parameter=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:IMSState Enum
    Num, uint32
    Event, uint32, base=enum:IMSEvent Enum
    Parm1, uint32
End

Begin Message, CP Trace CP IMS EVENT PROC Rsp
    printformat , 1, 1, CP IMS EVENT PROC, N=%d, <systime>  CP - Current IMS State=%s,Saved IMSState=%s,EventNumber=%d,CurrentEvent=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:IMSState Enum
    SavedState, uint32, base=enum:IMSState Enum
    Num, uint32
    Event, uint32, base=enum:IMSEvent Enum
End

Begin Message, CP Trace CP IMS PDN STATE Rsp
    printformat , 1, 1, CP IMS PDN STATE, N=%d, <systime>  CP - IMS PDN State Change:TableIndex=%d, PdnId=%d,State=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Index, uint32
    PdnId, uint32
    State, uint32, base=enum:PdnState Enum
End

Begin Message, CP Trace CP IMS SEND IP DATA Rsp
    printformat , 1, 1, CP IMS SEND IP DATA, N=%d, <systime>  CP - EHRPD Send IP Data ReservationLabel=%d,DataPath=%s,datasize=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    IPFlow, uint32
    DataPath, uint32, base=enum:RLP IP DataPath Enum
    datasize, uint32
End

Begin Message, CP Trace CP IMS PARAM INFO Rsp
    printformat , 1, 1, CP IMS PARAM INFO, N=%d, <systime>  CP - IMS Current Event Param CurState=%s,SavedState=%s,Event=%s, AppType=%s, PdnId=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurState, uint32, base=enum:IMSState Enum
    SavedState, uint32, base=enum:IMSState Enum
    event, uint32, base=enum:IMSEvent Enum
    AppType, uint32, base=enum:IMSAppType Enum
    PdnId, uint32
End

Begin Message, CP Trace CP IMS APPLICATION STATUS Rsp
    printformat , 1, 1, CP IMS APPLICATION STATUS, N=%d, <systime>  CP - AppLication=%s , OldStatus =%s, Status=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:IMSAppType Enum
    OldState, uint32, base=enum:IMSApp Status Enum
    State, uint32, base=enum:IMSApp Status Enum
End

Begin Message, CP Trace CP IMS RECEIVE IP DATA Rsp
    printformat , 1, 1, CP IMS RECEIVE IP DATA, N=%d, <systime>  CP - EHRPD Receive Packet Data RlpFlow=%d,DataPath=%s,datasize=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RlpFlow, uint32
    DataPath, uint32, base=enum:RLP IP DataPath Enum
    datasize, uint32
End

Begin Message, CP Trace CP EHRPD NETWORK EVENT Rsp
    printformat , 1, 1, CP EHRPD NETWORK EVENT, N=%d, <systime>  CP - EHRPD received event=%s,protocol=%s,PdnId=%d,datasize=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    event, uint32, base=enum:PppEventType Enum
    protocol, uint32, base=enum:PppProt Enum
    pdnid, uint32
    datasize, uint32
End

Begin Message, CP Trace CP EHRPD PDN STATUS Rsp
    printformat , 1, 1, CP EHRPD PDN STATUS, N=%d, <systime>  CP - PdnId=%d , PdnState=%s, PdnType=%s, AttachType=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PdnId, uint32, base=10
    PdnState, uint32, base=enum:EHRPD PDN Status Enum
    PdnType, uint32, base=enum:EHRPD PDNType Enum
    Attach, uint32, base=enum:EHRPD AttachType Enum
End

Begin Message, CP Trace CP IP6 UDP Test Record Msg Rsp
    printformat , 1, 1, CP IP6 UDP Test Record Msg, N=%d, <systime>  CP - UDP TotRecvBytes=%d, TotRecvPkts=%d, TotLostPkts=%d, TotSentPkts=%d, AvgRecvRate=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TotRecvBytes, uint32, indent = 2
    TotRecvPkts, uint32
    TotLostPkts, uint32
    TotSentPkts, uint32, indent = 2
    AvgRecvRate, uint32
End

Begin Message, CP Trace CP IP6 UDP Test Connection Open Msg Rsp
    printformat , 1, 1, CP IP6 UDP Test Connection Open Msg, N=%d, <systime>  CP - UDP LocalAddr: %08X:%08X:%08X:%08X:%d, PeerAddr: %08X:%08X:%08X:%08X:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    LocalAddrIP0, uint32, indent = 2
    LocalAddrIP1, uint32
    LocalAddrIP2, uint32, indent = 2
    LocalAddrIP3, uint32
    LocalAddrPort, uint32, base=10
    PeerAddrIP0, uint32, indent = 2
    PeerAddrIP1, uint32
    PeerAddrIP2, uint32, indent = 2
    PeerAddrIP3, uint32
    PeerAddrPort, uint32, base=10
End

Begin Message, CP Trace CP IP6 IP6 Input Flow Msg Rsp
    printformat , 1, 1, CP IP6 IP6 Input Flow Msg, N=%d, <systime>  CP - IP6 Input Step %d, Param 0: %d, Param 1: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Step, uint32
    Param0, uint32
    Param1, uint32
End

Begin Message, CP Trace CP IP6 IP6 Output Flow Msg Rsp
    printformat , 1, 1, CP IP6 IP6 Output Flow Msg, N=%d, <systime>  CP - IP6 Output Step %d, Param 0: %d, Param 1: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Step, uint32
    Param0, uint32
    Param1, uint32
End

Begin Message, CP Trace CP IP6 UDP Input Flow Msg Rsp
    printformat , 1, 1, CP IP6 UDP Input Flow Msg, N=%d, <systime>  CP - UDP Input Step %d, Param 0: %d, Param 1: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Step, uint32
    Param0, uint32
    Param1, uint32
End

Begin Message, CP Trace CP IP6 UDP Output Flow Msg Rsp
    printformat , 1, 1, CP IP6 UDP Output Flow Msg, N=%d, <systime>  CP - UDP Output Step %d, Param 0: %d, Param 1: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Step, uint32
    Param0, uint32
    Param1, uint32
End

Begin Message, CP Trace CP IP6 TCP Input Flow Msg Rsp
    printformat , 1, 1, CP IP6 TCP Input Flow Msg, N=%d, <systime>  CP - TCP Input Step %d, Param 0: %d, Param 1: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Step, uint32
    Param0, uint32
    Param1, uint32
End

Begin Message, CP Trace CP IP6 TCP Output Flow Msg Rsp
    printformat , 1, 1, CP IP6 TCP Output Flow Msg, N=%d, <systime>  CP - TCP Output Step %d, Param 0: %d, Param 1: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Step, uint32
    Param0, uint32
    Param1, uint32
End

Begin Message, CP Trace CP IP6 ICMP6 Input Flow Msg Rsp
    printformat , 1, 1, CP IP6 ICMP6 Input Flow Msg, N=%d, <systime>  CP - ICMP6 Input Step %d, Param 0: %d, Param 1: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Step, uint32
    Param0, uint32
    Param1, uint32
End

Begin Message, CP Trace CP IP6 ICMP6 Output Flow Msg Rsp
    printformat , 1, 1, CP IP6 ICMP6 Output Flow Msg, N=%d, <systime>  CP - ICMP6 Output Step %d, Param 0: %d, Param 1: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Step, uint32
    Param0, uint32
    Param1, uint32
End

Begin Message, CP Trace CP IP6 TCP Test Record Msg Rsp
    printformat , 1, 1, CP IP6 TCP Test Record Msg, N=%d, <systime>  CP - TCP TotRecvBytes=%d, TotRecvPkts=%d, TotLostPkts=%d, TotSentPkts=%d, AvgRecvRate=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TotRecvBytes, uint32, indent = 2
    TotRecvPkts, uint32
    TotLostPkts, uint32
    TotSentPkts, uint32, indent = 2
    AvgRecvRate, uint32
End

Begin Message, CP Trace CP IP6 TCP Test Connection Open Msg Rsp
    printformat , 1, 1, CP IP6 TCP Test Connection Open Msg, N=%d, <systime>  CP - TCP LocalAddr: %08X:%08X:%08X:%08X:%d, PeerAddr: %08X:%08X:%08X:%08X:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    LocalAddrIP0, uint32, indent = 2
    LocalAddrIP1, uint32
    LocalAddrIP2, uint32, indent = 2
    LocalAddrIP3, uint32
    LocalAddrPort, uint32, base=10
    PeerAddrIP0, uint32, indent = 2
    PeerAddrIP1, uint32
    PeerAddrIP2, uint32, indent = 2
    PeerAddrIP3, uint32
    PeerAddrPort, uint32, base=10
End

Begin Message, CP Trace CP IP6 General Flow Msg Rsp
    printformat , 1, 1, CP IP6 General Flow Msg, N=%d, <systime>  CP - IP6 General Step %d, Param 0: %d, Param 1: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Step, uint32
    Param0, uint32
    Param1, uint32
End

Begin Message, CP Trace CP ROHC Compressor General Flow Msg Rsp
    printformat , 1, 1, CP ROHC Compressor General Flow Msg, N=%d, <systime>  CP - ROHC Compressor General Step %d, Param 0: %d, Param 1: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Step, int32
    Param0, int32
    Param1, int32
End

Begin Message, CP Trace CP ROHC DeCompressor General Flow Msg Rsp
    printformat , 1, 1, CP ROHC DeCompressor General Flow Msg, N=%d, <systime>  CP - ROHC DeCompressor General Step %d, Param 0: %d, Param 1: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Step, int32
    Param0, int32
    Param1, int32
End

Begin Message, CP Trace CP ROHC DeCompressor State Change Msg Rsp
    printformat , 1, 1, CP ROHC DeCompressor State Change Msg, N=%d, <systime>  CP - ROHC DeCompressor State Change, OldState: %s, NewState: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    OldState, uint32, base=enum:DeCompressor State Msg Enum
    NewState, uint32, base=enum:DeCompressor State Msg Enum
End

Begin Message, CP Trace CP ROHC DeCompressor Status Msg Rsp
    printformat , 1, 1, CP ROHC DeCompressor Status Msg, N=%d, <systime>  CP - ROHC DeCompressor Mode: %s, State: %s, PacketType: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Mode, uint32, base=enum:ROHC Mode Msg Enum
    State, uint32, base=enum:DeCompressor State Msg Enum
    PacketType, uint32, base=enum:ROHC Packet Type Msg Enum
End

Begin Message, CP Trace CP ROHC Compressor Status Msg Rsp
    printformat , 1, 1, CP ROHC Compressor Status Msg, N=%d, <systime>  CP - ROHC Compressor Mode: %s, State: %s, Packet Type: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Mode, uint32, base=enum:ROHC Mode Msg Enum
    State, uint32, base=enum:Compressor State Msg Enum
    PacketType, uint32, base=enum:ROHC Packet Type Msg Enum
End

Begin Message, CP Trace CP ROHC Compressor Result Msg Rsp
    printformat , 1, 1, CP ROHC Compressor Result Msg, N=%d, <systime>  CP - ROHC Compressor Result, Feedback: %d, CompHeader %d, Payload: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Feedback, int32
    CompHeader, int32
    Payload, int32
End

Begin Message, CP Trace CP ROHC Compressor Proc Feedback Msg Rsp
    printformat , 1, 1, CP ROHC Compressor Proc Feedback Msg, N=%d, <systime>  CP - ROHC Compressor Proc Feedback, FeedbackType: %s, Mode: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FeedbackType, uint32, base=enum:ROHC Feedback Type Msg Enum
    Mode, uint32, base=enum:ROHC Mode Msg Enum
End

Begin Message, CP Trace CP ROHC Compressor Proc Feedback Opt Msg Rsp
    printformat , 1, 1, CP ROHC Compressor Proc Feedback Opt Msg, N=%d, <systime>  CP - ROHC Compressor Proc Feedback Opt, Sn: %u, CRC: %u, Reject: %d, Sn Not Valid: %d, Clock: %d, Max Jitter: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Sn, uint32
    CRC, uint32
    Reject, int32
    Sn Not Valid, int32
    Clock, int32
    Max Jitter, int32
End

Begin Message, CP Trace CP ROHC DeCompressor Feedback Msg Rsp
    printformat , 1, 1, CP ROHC DeCompressor Feedback Msg, N=%d, <systime>  CP - ROHC DeCompressor Feedback,  Mode: %s, State: %s, FeedbackType: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Mode, uint32, base=enum:ROHC Mode Msg Enum
    State, uint32, base=enum:Compressor State Msg Enum
    FeedbackType, uint32, base=enum:ROHC Feedback Type Msg Enum
End

Begin Message, CP Trace CP ROHC DeCompressor Feedback Opt Msg Rsp
    printformat , 1, 1, CP ROHC DeCompressor Feedback Opt Msg, N=%d, <systime>  CP - ROHC DeCompressor Feedback Opt, FeedbackOpt: %s, Value: %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FeedbackOpt, uint32, base=enum:ROHC Feedback Opt Msg Enum
    Value, uint32
End

Begin Message, CP Trace CP NST State Rsp
    printformat , 1, 1, CP NST State, N=%d, <systime>  CP - NST State=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NST State, uint32, base=enum:NST State
End

Begin Message, CP Trace CP NST General Rsp
    printformat , 1, 1, CP NST General, N=%d, <systime>  CP - NST GENERAL: %d %d %d %d %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Param1, uint32
    Param2, uint32
    Param3, uint32
    Param4, uint32
    Param5, uint32
End

Begin Message, CP Trace CP LEC GENERIC HEX Rsp
    printformat , 1, 1, CP LEC GENERIC HEX, N=%d, <systime>  CP - LEC Generic Hex1: Type=%x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Type, uint32, base=16
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP FSM RLP MGR Rsp
    printformat , 1, 1, CP FSM RLP MGR, N=%d, <systime>  CP - FSM RLP MGR current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:MGR State Type
    State2, uint32, base=enum:MGR State Type
    Event, uint32, base=enum:MGR Event Type
End

Begin Message, CP Trace CP FSM RLP CTL0 Rsp
    printformat , 1, 1, CP FSM RLP CTL0, N=%d, <systime>  CP - FSM RLP CTL0 current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:CTL State Type
    State2, uint32, base=enum:CTL State Type
    Event, uint32, base=enum:CTL Event Type
End

Begin Message, CP Trace CP FSM RLP CTL1 Rsp
    printformat , 1, 1, CP FSM RLP CTL1, N=%d, <systime>  CP - FSM RLP CTL1 current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:CTL State Type
    State2, uint32, base=enum:CTL State Type
    Event, uint32, base=enum:CTL Event Type
End

Begin Message, CP Trace CP FSM RLP IFC0 Rsp
    printformat , 1, 1, CP FSM RLP IFC0, N=%d, <systime>  CP - FSM RLP IFC0 current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:IFC State Type
    State2, uint32, base=enum:IFC State Type
    Event, uint32, base=enum:IFC Event Type
End

Begin Message, CP Trace CP FSM RLP IFC1 Rsp
    printformat , 1, 1, CP FSM RLP IFC1, N=%d, <systime>  CP - FSM RLP IFC1 current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:IFC State Type
    State2, uint32, base=enum:IFC State Type
    Event, uint32, base=enum:IFC Event Type
End

Begin Message, CP Trace CP FSM PPP MNRP Rsp
    printformat , 1, 1, CP FSM PPP MNRP, N=%d, <systime>  CP - FSM PPP mnrp current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:MNRP State Type
    State2, uint32, base=enum:MNRP State Type
    Event, uint32, base=enum:MNRP Event Type
End

Begin Message, CP Trace CP FSM SMS RL Rsp
    printformat , 1, 1, CP FSM SMS RL, N=%d, <systime>  CP - FSM SMS RL current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:RL State Type
    State2, uint32, base=enum:RL State Type
    Event, uint32, base=enum:RL Event Type
End

Begin Message, CP Trace CP FSM SMS TL Rsp
    printformat , 1, 1, CP FSM SMS TL, N=%d, <systime>  CP - FSM SMS TL current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:TL State Type
    State2, uint32, base=enum:TL State Type
    Event, uint32, base=enum:TL Event Type
End

Begin Message, CP Trace CP FSM OTA AUTH Rsp
    printformat , 1, 1, CP FSM OTA AUTH, N=%d, <systime>  CP - FSM OTA AUTH current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:AUTH State Type
    State2, uint32, base=enum:AUTH State Type
    Event, uint32, base=enum:AUTH Event Type
End

Begin Message, CP Trace CP FSM OTA PARS Rsp
    printformat , 1, 1, CP FSM OTA PARS, N=%d, <systime>  CP - FSM OTA PARS current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:PARS State Type
    State2, uint32, base=enum:PARS State Type
    Event, uint32, base=enum:PARS Event Type
End

Begin Message, CP Trace CP FSM OTA SEC Rsp
    printformat , 1, 1, CP FSM OTA SEC, N=%d, <systime>  CP - FSM OTA SEC current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:SEC State Type
    State2, uint32, base=enum:SEC State Type
    Event, uint32, base=enum:SEC Event Type
End

Begin Message, CP Trace CP FSM SCC CPC Rsp
    printformat , 1, 1, CP FSM SCC CPC, N=%d, <systime>  CP - FSM SCC CPC current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:CPC State Type
    State2, uint32, base=enum:CPC State Type
    Event, uint32, base=enum:CPC Event Type
End

Begin Message, CP Trace CP FSM SCC DBC Rsp
    printformat , 1, 1, CP FSM SCC DBC, N=%d, <systime>  CP - FSM SCC DBC current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:DBC State Type
    State2, uint32, base=enum:DBC State Type
    Event, uint32, base=enum:DBC Event Type
End

Begin Message, CP Trace CP FSM SCC VSC Rsp
    printformat , 1, 1, CP FSM SCC VSC, N=%d, <systime>  CP - FSM SCC VSC current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:VSC State Type
    State2, uint32, base=enum:VSC State Type
    Event, uint32, base=enum:VSC Event Type
End

Begin Message, CP Trace CP FSM SCC DSC Rsp
    printformat , 1, 1, CP FSM SCC DSC, N=%d, <systime>  CP - FSM SCC DSC current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:DSC State Type
    State2, uint32, base=enum:DSC State Type
    Event, uint32, base=enum:DSC Event Type
End

Begin Message, CP Trace CP FSM SCC PSC Rsp
    printformat , 1, 1, CP FSM SCC PSC, N=%d, <systime>  CP - FSM SCC PSC current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:PSC State Type
    State2, uint32, base=enum:PSC State Type
    Event, uint32, base=enum:PSC Event Type
End

Begin Message, CP Trace CP FSM SCC LSC Rsp
    printformat , 1, 1, CP FSM SCC LSC, N=%d, <systime>  CP - FSM SCC LSC current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:LSC State Type
    State2, uint32, base=enum:LSC State Type
    Event, uint32, base=enum:LSC Event Type
End

Begin Message, CP Trace CP FSM CSS 1X CPSM Rsp
    printformat , 1, 1, CP FSM CSS 1X CPSM, N=%d, <systime>  CP - FSM CSS 1X CPSM current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:1X Cpsm State Type
    State2, uint32, base=enum:1X Cpsm State Type
    Event, uint32, base=enum:1X Cpsm Event Type
End

Begin Message, CP Trace CP FSM CSS DO CPSM Rsp
    printformat , 1, 1, CP FSM CSS DO CPSM, N=%d, <systime>  CP - FSM CSS DO CPSM current state %s to %s event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:DO Cpsm State Type
    State2, uint32, base=enum:DO Cpsm State Type
    Event, uint32, base=enum:DO Cpsm Event Type
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 1 Rsp
    printformat , ENG_ACCESS_PROC_TR,  2, CP PE ENG_ACCESS_PROC_TR 1 1, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 1] WBIOS Send Fail Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 2 Rsp
    printformat , ENG_ACCESS_PROC_TR,  2, CP PE ENG_ACCESS_PROC_TR 1 2, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 2] Access ACKED
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 3 Rsp
    printformat , ENG_ACCESS_PROC_TR,  2, CP PE ENG_ACCESS_PROC_TR 1 3, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 3] TA Timeout
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 4 Rsp
    printformat , ENG_ACCESS_PROC_TR,  2, CP PE ENG_ACCESS_PROC_TR 1 4, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 4] Pilot Measurement Report received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 5 Rsp
    printformat , ENG_ACCESS_PROC_TR,  2, CP PE ENG_ACCESS_PROC_TR 1 5, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 5] Access STOP attempt indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 6 Rsp
    printformat , ENG_ACCESS_PROC_TR,  2, CP PE ENG_ACCESS_PROC_TR 1 6, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 6] Access Attempt aborted!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 7 Rsp
    printformat , ENG_ACCESS_PROC_TR,  4, CP PE ENG_ACCESS_PROC_TR 1 7, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 7] Access Parameters Configured
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 8 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 8, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 8] PAM_SZ:%d MAX_CAP_SZ:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 9 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 9, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 9] MAX_REQ_SEQ:%d MAX_RSP_SEQ:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 10 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 10, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 10] NUM_STEP:%d PWR_STP:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 11 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 11, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 11] NOM_PWR:%d INIT_PWR:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 12 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 12, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 12] NOM_PWR_EXT:%d ACC_TMO:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 13 Rsp
    printformat , ENG_ACCESS_PROC_TR,  2, CP PE ENG_ACCESS_PROC_TR 1 13, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 13] New Access Attempt
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 14 Rsp
    printformat , ENG_ACCESS_PROC_TR,  4, CP PE ENG_ACCESS_PROC_TR 1 14, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 14] Access REQUEST attempt - max Probe Seq: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 15 Rsp
    printformat , ENG_ACCESS_PROC_TR,  4, CP PE ENG_ACCESS_PROC_TR 1 15, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 15] Access RESPONSE attempt - max Probe Seq: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 1 16 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 1 16, N=%d, <systime>  CP - PE [ENG_ERROR_TR 1 16] ACCESS ATTEMPT ALREADY IN PROGRESS!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 17 Rsp
    printformat , ENG_ACCESS_PROC_TR,  2, CP PE ENG_ACCESS_PROC_TR 1 17, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 17] Access HO Request received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 18 Rsp
    printformat , ENG_ACCESS_PROC_TR,  2, CP PE ENG_ACCESS_PROC_TR 1 18, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 18] Access attempt resume after Handoff
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 19 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 19, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 19] ACCESS probe initialized - seq:1 probe:1 RN:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 20 Rsp
    printformat , ENG_ACCESS_PROC_TR,  3, CP PE ENG_ACCESS_PROC_TR 1 20, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 20] Attempting probe handoff - numHo:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 21 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 21, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 21] Access msg-> rt:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 22 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 22, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 22] ACCESS probe retransmit - seq:%d probe:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 23 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 23, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 23] ACCESS probe send time:0x%08lx power correction:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 24 Rsp
    printformat , ENG_ACCESS_PROC_TR,  3, CP PE ENG_ACCESS_PROC_TR 1 24, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 24] ACCESS fail: max probe seq!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 25 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 25, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 25] Access msg-> bkoff:%u, rs:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 26 Rsp
    printformat , ENG_ACCESS_PROC_TR,  3, CP PE ENG_ACCESS_PROC_TR 1 26, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 26] ACCESS sequence retransmit seq:%d probe:1
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 27 Rsp
    printformat , ENG_ACCESS_PROC_TR,  3, CP PE ENG_ACCESS_PROC_TR 1 27, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 27] ACCESS HO -  probe re-initialized - seq:1 probe:1 RN:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 28 Rsp
    printformat , ENG_ACCESS_PROC_TR,  3, CP PE ENG_ACCESS_PROC_TR 1 28, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 28] Initiating probe handoff - numHo:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 29 Rsp
    printformat , ENG_ACCESS_PROC_TR,  3, CP PE ENG_ACCESS_PROC_TR 1 29, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 29] Persistence Test failed - attempt aborted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 30 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 30, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 30] ACCESS probe started - await pilot report
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 31 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 31, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 31] Access msg-> pam:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 32 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 32, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 32] Access msg-> power correction:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 33 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 33, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 33] Access msg-> length:%d send time:0x%08lx
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 34 Rsp
    printformat , ENG_ACCESS_PROC_TR,  3, CP PE ENG_ACCESS_PROC_TR 1 34, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 34] Access probe aborted - too big
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 35 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 35, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 35] Hit max PSIST delay slots:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 36 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 36, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 36] Access msg-> pd:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 37 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 37, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 37] Message end index:%u remainder bits:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 38 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 38, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 38] Message to large for capsule - bits(+30):%u MAX_CAP_SZ:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 39 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 39, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 39] Final message length in bits:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 41 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 41, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 41] NUM_ADD_PILOTS:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 42 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 42, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 42] No additional pilots added to probe
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 43 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 43, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 43] Examining Access HO request status
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 44 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 44, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 44] Access HO request in progress
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 45 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 45, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 45] Access HO request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 46 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 46, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 46] Access Probe HO request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 47 Rsp
    printformat , ENG_ACCESS_PROC_TR,  2, CP PE ENG_ACCESS_PROC_TR 1 47, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 47] Access notified of pilot measurement report
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 48 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 48, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 48] PSISTs:%d FramesPerSlot:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_PROC_TR 1 49 Rsp
    printformat , ENG_ACCESS_PROC_TR,  5, CP PE ENG_ACCESS_PROC_TR 1 49, N=%d, <systime>  CP - PE [ENG_ACCESS_PROC_TR 1 49] Max Access Probe HO reached - %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 2 1 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 2 1, N=%d, <systime>  CP - PE [ENG_ERROR_TR 2 1] << Assertion Failed: ??? >>
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 2 2 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 2 2, N=%d, <systime>  CP - PE [ENG_ERROR_TR 2 2] << Assertion Failed: line %u >>
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 2 3 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 2 3, N=%d, <systime>  CP - PE [ENG_ERROR_TR 2 3] System Exit
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 1 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 1, N=%d, <systime>  CP - PE [ENG_API_TR 3 1] API>> engInitialize
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 2 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 3 2, N=%d, <systime>  CP - PE [ENG_CP_TR 3 2] Engine Intialization.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 3 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 3 3, N=%d, <systime>  CP - PE [ENG_CP_TR 3 3] PROTOCOL STANDARD: T53
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 4 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 3 4, N=%d, <systime>  CP - PE [ENG_CP_TR 3 4] PROTOCOL STANDARD: IS-95A
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 5 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 3 5, N=%d, <systime>  CP - PE [ENG_CP_TR 3 5] PROTOCOL STANDARD: IS-95B
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 6 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 6, N=%d, <systime>  CP - PE [ENG_API_TR 3 6] API<< engInitialize
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 7 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 7, N=%d, <systime>  CP - PE [ENG_API_TR 3 7] API>> engRelayCPRequest: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CP Relay Request, uint32, base=enum:CP Request Type
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 8 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 8, N=%d, <systime>  CP - PE [ENG_CP_TR 3 8] CP Enable received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 9 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 9, N=%d, <systime>  CP - PE [ENG_CP_TR 3 9] CP Disable received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 10 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 10, N=%d, <systime>  CP - PE [ENG_CP_TR 3 10] Originate: ???
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 11 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 11, N=%d, <systime>  CP - PE [ENG_CP_TR 3 11] User Answer Indication received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 12 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 12, N=%d, <systime>  CP - PE [ENG_CP_TR 3 12] Flash
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 13 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 13, N=%d, <systime>  CP - PE [ENG_CP_TR 3 13] User Terminate
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 14 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 14, N=%d, <systime>  CP - PE [ENG_CP_TR 3 14] Power-Down Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 15 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 15, N=%d, <systime>  CP - PE [ENG_CP_TR 3 15] Message Transmission Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 16 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 16, N=%d, <systime>  CP - PE [ENG_CP_TR 3 16] Burst DTMF Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 17 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 17, N=%d, <systime>  CP - PE [ENG_CP_TR 3 17] Continuous DTMF Start Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 18 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 18, N=%d, <systime>  CP - PE [ENG_CP_TR 3 18] Continuous DTMF Stop Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 19 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 19, N=%d, <systime>  CP - PE [ENG_CP_TR 3 19] Public Long Code Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 20 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 20, N=%d, <systime>  CP - PE [ENG_CP_TR 3 20] Private Long Code Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 3 21 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 3 21, N=%d, <systime>  CP - PE [ENG_ERROR_TR 3 21] Invalid CP Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 22 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 22, N=%d, <systime>  CP - PE [ENG_API_TR 3 22] API<< engRelayCPRequest
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 23 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 23, N=%d, <systime>  CP - PE [ENG_API_TR 3 23] API>> engRelaySCServiceConfigurationRequest
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 24 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 24, N=%d, <systime>  CP - PE [ENG_API_TR 3 24] API<< engRelaySCServiceConfigurationRequest
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 25 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 25, N=%d, <systime>  CP - PE [ENG_API_TR 3 25] API>> engRelaySCServiceControl
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 26 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 26, N=%d, <systime>  CP - PE [ENG_API_TR 3 26] API<< engRelaySCServiceControl
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 27 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 27, N=%d, <systime>  CP - PE [ENG_API_TR 3 27] API>> engRelaySCServiceOptionRequest
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 28 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 28, N=%d, <systime>  CP - PE [ENG_API_TR 3 28] API<< engRelaySCServiceOptionRequest
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 29 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 29, N=%d, <systime>  CP - PE [ENG_API_TR 3 29] API>> engTimerExpired: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 30 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 30, N=%d, <systime>  CP - PE [ENG_CP_TR 3 30] CP timer %s expired.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Timer Id, uint32, base=enum:PETimerId
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 31 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 31, N=%d, <systime>  CP - PE [ENG_CP_TR 3 31] Warning: Timer ID %u not active
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 32 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 32, N=%d, <systime>  CP - PE [ENG_API_TR 3 32] API<< engTimerExpired
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 33 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 33, N=%d, <systime>  CP - PE [ENG_API_TR 3 33] API>> engRelayReportStatus: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CP Status, uint32, base=enum:CP Request Type
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 34 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 34, N=%d, <systime>  CP - PE [ENG_CP_TR 3 34] TC Send Message Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 35 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 35, N=%d, <systime>  CP - PE [ENG_CP_TR 3 35] TC Send Message Failure Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 36 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 36, N=%d, <systime>  CP - PE [ENG_CP_TR 3 36] TC Service Configuration Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 37 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 37, N=%d, <systime>  CP - PE [ENG_CP_TR 3 37] TC Handoff Complete Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 38 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 38, N=%d, <systime>  CP - PE [ENG_CP_TR 3 38] TC Longcode Change Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 39 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 39, N=%d, <systime>  CP - PE [ENG_API_TR 3 39] API<< engRelayReportStatus
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 40 Rsp
    printformat , ENG_API_TR,  3, CP PE ENG_API_TR 3 40, N=%d, <systime>  CP - PE [ENG_API_TR 3 40] API>> engRelaySyncFrameIndication: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 41 Rsp
    printformat , ENG_API_TR,  3, CP PE ENG_API_TR 3 41, N=%d, <systime>  CP - PE [ENG_API_TR 3 41] API<< engRelaySyncFrameIndication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 42 Rsp
    printformat , ENG_API_TR,  5, CP PE ENG_API_TR 3 42, N=%d, <systime>  CP - PE [ENG_API_TR 3 42] API>> engRelayPageFrameIndication: 0x%08lx
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 43 Rsp
    printformat , ENG_API_TR,  5, CP PE ENG_API_TR 3 43, N=%d, <systime>  CP - PE [ENG_API_TR 3 43] API<< engRelayPageFrameIndication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 44 Rsp
    printformat , ENG_API_TR,  5, CP PE ENG_API_TR 3 44, N=%d, <systime>  CP - PE [ENG_API_TR 3 44] API>> engRelayTCFrameIndication: 0x%08lx
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 45 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 3 45, N=%d, <systime>  CP - PE [ENG_CP_TR 3 45] Invalid FTC Message type :%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 46 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 3 46, N=%d, <systime>  CP - PE [ENG_CP_TR 3 46] Invalid FTC Order type :%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 47 Rsp
    printformat , ENG_API_TR,  5, CP PE ENG_API_TR 3 47, N=%d, <systime>  CP - PE [ENG_API_TR 3 47] API<< engRelayTCFrameIndication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 48 Rsp
    printformat , ENG_API_TR,  5, CP PE ENG_API_TR 3 48, N=%d, <systime>  CP - PE [ENG_API_TR 3 48] API>> engRelayTCFramePowerIndication: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 49 Rsp
    printformat , ENG_API_TR,  5, CP PE ENG_API_TR 3 49, N=%d, <systime>  CP - PE [ENG_API_TR 3 49] API<< engRelayTCFramePowerIndication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 50 Rsp
    printformat , ENG_API_TR,  3, CP PE ENG_API_TR 3 50, N=%d, <systime>  CP - PE [ENG_API_TR 3 50] API>> engRelayPilotMeasureReport
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 51 Rsp
    printformat , ENG_API_TR,  3, CP PE ENG_API_TR 3 51, N=%d, <systime>  CP - PE [ENG_API_TR 3 51] API<< engRelayPilotMeasureReport
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 52 Rsp
    printformat , ENG_API_TR,  3, CP PE ENG_API_TR 3 52, N=%d, <systime>  CP - PE [ENG_API_TR 3 52] API>> engRelayReverseMultiplexParameters
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 53 Rsp
    printformat , ENG_API_TR,  3, CP PE ENG_API_TR 3 53, N=%d, <systime>  CP - PE [ENG_API_TR 3 53] API<< engRelayReverseMultiplexParameters
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 54 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 54, N=%d, <systime>  CP - PE [ENG_API_TR 3 54] API>> engRelayCDMACandFreqSearchTimes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 55 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 55, N=%d, <systime>  CP - PE [ENG_API_TR 3 55] API<< engRelayCDMACandFreqSearchTimes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 56 Rsp
    printformat , ENG_API_TR,  3, CP PE ENG_API_TR 3 56, N=%d, <systime>  CP - PE [ENG_API_TR 3 56] API>> engRelayCDMACandFreqSearchReport
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 57 Rsp
    printformat , ENG_API_TR,  3, CP PE ENG_API_TR 3 57, N=%d, <systime>  CP - PE [ENG_API_TR 3 57] API<< engRelayCDMACandFreqSearchReport
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 58 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 58, N=%d, <systime>  CP - PE [ENG_API_TR 3 58] API>> engRelayCandFreqStart
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 59 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 59, N=%d, <systime>  CP - PE [ENG_API_TR 3 59] API<< engRelayCandFreqStart
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 60 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 60, N=%d, <systime>  CP - PE [ENG_API_TR 3 60] API>> engRelayCandFreqStop
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 61 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 61, N=%d, <systime>  CP - PE [ENG_API_TR 3 61] API<< engRelayCandFreqStop
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 62 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 62, N=%d, <systime>  CP - PE [ENG_API_TR 3 62] API>> engRelayTMInjectMsg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 63 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 63, N=%d, <systime>  CP - PE [ENG_API_TR 3 63] API<< engRelayTMInjectMsg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 64 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 64, N=%d, <systime>  CP - PE [ENG_API_TR 3 64] API>> engRelayIdleHandoff
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 65 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 65, N=%d, <systime>  CP - PE [ENG_API_TR 3 65] API<< engRelayIdleHandoff
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 66 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 66, N=%d, <systime>  CP - PE [ENG_API_TR 3 66] API>> engRelayNghbrPilotAboveTAdd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 67 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 67, N=%d, <systime>  CP - PE [ENG_API_TR 3 67] API<< engRelayNghbrPilotAboveTAdd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 68 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 68, N=%d, <systime>  CP - PE [ENG_API_TR 3 68] API>> engRelayRemainingPilotAboveTAdd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 69 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 69, N=%d, <systime>  CP - PE [ENG_API_TR 3 69] API<< engRelayRemainingPilotAboveTAdd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 3 70 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 3 70, N=%d, <systime>  CP - PE [ENG_ERROR_TR 3 70] Invalid Audio Notification
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 3 71 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 3 71, N=%d, <systime>  CP - PE [ENG_ERROR_TR 3 71] Invalid Baseband Notification
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 3 74 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 3 74, N=%d, <systime>  CP - PE [ENG_ERROR_TR 3 74] Invalid Radio Notification
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 75 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 75, N=%d, <systime>  CP - PE [ENG_CP_TR 3 75] SSD Update Process timeout!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 3 76 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 3 76, N=%d, <systime>  CP - PE [ENG_ERROR_TR 3 76] Invalid TESTMODE Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 77 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 77, N=%d, <systime>  CP - PE [ENG_API_TR 3 77] API>> OOSA Parameter Setting
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 78 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 78, N=%d, <systime>  CP - PE [ENG_API_TR 3 78] API<< OOSA Parameter Setting
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 79 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 79, N=%d, <systime>  CP - PE [ENG_API_TR 3 79] API>> IHO Threshold Parms Setting
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 80 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 80, N=%d, <systime>  CP - PE [ENG_API_TR 3 80] API<< IHO Threshold Parms Setting
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 81 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 81, N=%d, <systime>  CP - PE [ENG_API_TR 3 81] API>> IHO Timer Parms Setting
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_API_TR 3 82 Rsp
    printformat , ENG_API_TR,  1, CP PE ENG_API_TR 3 82, N=%d, <systime>  CP - PE [ENG_API_TR 3 82] API<< IHO Timer Parms Setting
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 3 83 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 3 83, N=%d, <systime>  CP - PE [ENG_CP_TR 3 83] TC to AVC Handoff Start Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 4 1 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 4 1, N=%d, <systime>  CP - PE [ENG_ERROR_TR 4 1] Timer %u is already active!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 4 2 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 4 2, N=%d, <systime>  CP - PE [ENG_ERROR_TR 4 2] Can't start timer %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 4 3 Rsp
    printformat , ENG_CP_TR,  4, CP PE ENG_CP_TR 4 3, N=%d, <systime>  CP - PE [ENG_CP_TR 4 3] Starting %s Timer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Timer Id, uint32, base=enum:PETimerId
End

Begin Message, CP Trace CP PE ENG_CP_TR 4 4 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 4 4, N=%d, <systime>  CP - PE [ENG_CP_TR 4 4] Timer ID = %u Interval = %u (ms)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimerId, uint32, base=10
    Interval, uint32, base=10
End

Begin Message, CP Trace CP PE ENG_CP_TR 4 5 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 4 5, N=%d, <systime>  CP - PE [ENG_CP_TR 4 5] Stopping %s Timer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Timer Id, uint32, base=enum:PETimerId
End

Begin Message, CP Trace CP PE ENG_CP_TR 5 1 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 5 1, N=%d, <systime>  CP - PE [ENG_CP_TR 5 1] Enabling Call Processing
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 5 2 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 5 2, N=%d, <systime>  CP - PE [ENG_CP_TR 5 2] Enabling Call Processing failed.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 5 3 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 5 3, N=%d, <systime>  CP - PE [ENG_ERROR_TR 5 3] OP_MODE has no values set - ENG_OP_MODE and ENG_CUSTOM_OP_MODE are incompatible
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 5 9 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 5 9, N=%d, <systime>  CP - PE [ENG_CP_TR 5 9] Disabling Call Processing
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 5 10 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 5 10, N=%d, <systime>  CP - PE [ENG_ERROR_TR 5 10] Invalid CPState:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 1 Rsp
    printformat , ENG_REG_TR,  1, CP PE ENG_REG_TR 7 1, N=%d, <systime>  CP - PE [ENG_REG_TR 7 1] Registration reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 2 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 2, N=%d, <systime>  CP - PE [ENG_REG_TR 7 2] Saving distance based reg info
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 3 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 3, N=%d, <systime>  CP - PE [ENG_REG_TR 7 3] Deleting SID NID entry in memory
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 4 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 4, N=%d, <systime>  CP - PE [ENG_REG_TR 7 4] Saving SID NID list entry SID:%d NID:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 5 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 5, N=%d, <systime>  CP - PE [ENG_REG_TR 7 5] Deleting Zone entry in memory
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 6 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 6, N=%d, <systime>  CP - PE [ENG_REG_TR 7 6] Saving Zone list entry SID:%d NID:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 7 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 7, N=%d, <systime>  CP - PE [ENG_REG_TR 7 7] ZONE_LIST initialized with entry:SID: %d NID:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 8 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 8, N=%d, <systime>  CP - PE [ENG_REG_TR 7 8] ZONE_LIST initialized with entry:ZONE:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 9 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 9, N=%d, <systime>  CP - PE [ENG_REG_TR 7 9] ZONE_LIST initialized to no entries
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 10 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 10, N=%d, <systime>  CP - PE [ENG_REG_TR 7 10] SID_NID_LISTsp initialized with entry:SID: %d NID:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 11 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 11, N=%d, <systime>  CP - PE [ENG_REG_TR 7 11] SID_NID_LISTsp initialized to no entries
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 12 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 12, N=%d, <systime>  CP - PE [ENG_REG_TR 7 12] Setting REG_STATE to :%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Reg State, uint32, base=enum:Registration SubStates Enum
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 13 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 13, N=%d, <systime>  CP - PE [ENG_REG_TR 7 13] Setting SIDs:%d NIDs:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 14 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 14, N=%d, <systime>  CP - PE [ENG_REG_TR 7 14] Updating registration parameters
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 15 Rsp
    printformat , ENG_REG_TR,  5, CP PE ENG_REG_TR 7 15, N=%d, <systime>  CP - PE [ENG_REG_TR 7 15] POWER_UP_REGs: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 16 Rsp
    printformat , ENG_REG_TR,  5, CP PE ENG_REG_TR 7 16, N=%d, <systime>  CP - PE [ENG_REG_TR 7 16] POWER_DOWN_REGs: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 17 Rsp
    printformat , ENG_REG_TR,  5, CP PE ENG_REG_TR 7 17, N=%d, <systime>  CP - PE [ENG_REG_TR 7 17] SIDs %d NIDs: %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 18 Rsp
    printformat , ENG_REG_TR,  5, CP PE ENG_REG_TR 7 18, N=%d, <systime>  CP - PE [ENG_REG_TR 7 18] BASE_IDs: %d BASE_CLASSs: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 19 Rsp
    printformat , ENG_REG_TR,  5, CP PE ENG_REG_TR 7 19, N=%d, <systime>  CP - PE [ENG_REG_TR 7 19] MAX_SLOT_CYCLE_INDEXs: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 20 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 20, N=%d, <systime>  CP - PE [ENG_REG_TR 7 20] Registration received MS Registered Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 21 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 21, N=%d, <systime>  CP - PE [ENG_REG_TR 7 21] REG_PRDs:%d REG_COUNT_MAXs:%ld
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 22 Rsp
    printformat , ENG_REG_TR,  4, CP PE ENG_REG_TR 7 22, N=%d, <systime>  CP - PE [ENG_REG_TR 7 22] Timer based registration disabled
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 23 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 23, N=%d, <systime>  CP - PE [ENG_REG_TR 7 23] Performing power-up registration initialization
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 24 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 24, N=%d, <systime>  CP - PE [ENG_REG_TR 7 24] Performing general registration initialization
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 25 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 25, N=%d, <systime>  CP - PE [ENG_REG_TR 7 25] Starting Registration PowerUp/Init timer.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 26 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 26, N=%d, <systime>  CP - PE [ENG_REG_TR 7 26] REG_COUNTs %u >= REG_MAX_COUNTs :%lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 27 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 27, N=%d, <systime>  CP - PE [ENG_REG_TR 7 27] Received Successful Access Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 28 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 28, N=%d, <systime>  CP - PE [ENG_REG_TR 7 28] Received Unsuccessful Access Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 29 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 29, N=%d, <systime>  CP - PE [ENG_REG_TR 7 29] Setting COUNTER_ENABLEDs to YES
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 30 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 30, N=%d, <systime>  CP - PE [ENG_REG_TR 7 30] REG_COUNTs set to: %lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 31 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 31, N=%d, <systime>  CP - PE [ENG_REG_TR 7 31] Sending Registration Request: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Reg Type, uint32, base=enum:Registration Types Enum
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 32 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 32, N=%d, <systime>  CP - PE [ENG_REG_TR 7 32] Deleting expired ZoneList entry - SID:%u NID: %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 33 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 33, N=%d, <systime>  CP - PE [ENG_REG_TR 7 33] Deleting expired SIDNIDList entry - SID:%u NID: %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 34 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 34, N=%d, <systime>  CP - PE [ENG_REG_TR 7 34] Checking Zone List number of entries
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 35 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 35, N=%d, <systime>  CP - PE [ENG_REG_TR 7 35] Clearing all Zone List entries
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 36 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 36, N=%d, <systime>  CP - PE [ENG_REG_TR 7 36] Checking Sid Nid List number of entries
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 37 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 37, N=%d, <systime>  CP - PE [ENG_REG_TR 7 37] Deleting entry from Zone list SID: %u NID:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 7 38 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 7 38, N=%d, <systime>  CP - PE [ENG_ERROR_TR 7 38] Could not find oldest timer in Zone List - current # entries: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 39 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 39, N=%d, <systime>  CP - PE [ENG_REG_TR 7 39] Deleting entry from SidNid List - current # entries: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 7 40 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 7 40, N=%d, <systime>  CP - PE [ENG_ERROR_TR 7 40] Could not find oldest timer in SidNid List - current # entries: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 41 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 41, N=%d, <systime>  CP - PE [ENG_REG_TR 7 41] Removing multiple SIDs not matching SID:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 42 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 42, N=%d, <systime>  CP - PE [ENG_REG_TR 7 42] Removing (MULT_SIDs = 0) SID:%u NID:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 43 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 43, N=%d, <systime>  CP - PE [ENG_REG_TR 7 43] Removing multiple NIDs from SID:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 44 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 44, N=%d, <systime>  CP - PE [ENG_REG_TR 7 44] Removing (MULT_NIDs = 0) SID:%u NID:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 45 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 45, N=%d, <systime>  CP - PE [ENG_REG_TR 7 45] Deleting ZoneList entry - SID:%u NID: %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 46 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 46, N=%d, <systime>  CP - PE [ENG_REG_TR 7 46] Adding new ZoneList entry - SID:%u NID: %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 47 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 47, N=%d, <systime>  CP - PE [ENG_REG_TR 7 47] Deleting SidNidList entry - SID:%u NID: %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 48 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 48, N=%d, <systime>  CP - PE [ENG_REG_TR 7 48] Adding new SidList entry - SID:%u NID: %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 49 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 49, N=%d, <systime>  CP - PE [ENG_REG_TR 7 49] Enabled zone list timer for - SID:%u NID: %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 50 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 50, N=%d, <systime>  CP - PE [ENG_REG_TR 7 50] Enabled SidNid list timer for - SID:%u NID: %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 51 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 51, N=%d, <systime>  CP - PE [ENG_REG_TR 7 51] Remaining Zone List entries: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 52 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 52, N=%d, <systime>  CP - PE [ENG_REG_TR 7 52]                               REG_ZONE:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 53 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 53, N=%d, <systime>  CP - PE [ENG_REG_TR 7 53]                             REG_ZONE:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 55 Rsp
    printformat , ENG_REG_TR,  3, CP PE ENG_REG_TR 7 55, N=%d, <systime>  CP - PE [ENG_REG_TR 7 55]                           REG_ZONE:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 56 Rsp
    printformat , ENG_REG_TR,  2, CP PE ENG_REG_TR 7 56, N=%d, <systime>  CP - PE [ENG_REG_TR 7 56]                              REG_ZONE:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_REG_TR 7 57 Rsp
    printformat , ENG_REG_TR,  5, CP PE ENG_REG_TR 7 57, N=%d, <systime>  CP - PE [ENG_REG_TR 7 57] REG_ENABLEDs is TRUE
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 8 1 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 8 1, N=%d, <systime>  CP - PE [ENG_CP_TR 8 1] CP State = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CP State, uint32, base=enum:Ps CP State
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 1 Rsp
    printformat , ENG_INIT_TR,  3, CP PE ENG_INIT_TR 11 1, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 1] SYNC Test Mode set:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 11 2 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 11 2, N=%d, <systime>  CP - PE [ENG_ERROR_TR 11 2] Unknown system type - Reset CSS
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 4 Rsp
    printformat , ENG_INIT_TR,  3, CP PE ENG_INIT_TR 11 4, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 4] Entering System Determination with indication:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Indication, uint32, base=enum:CssIndicationId
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 5 Rsp
    printformat , ENG_INIT_TR,  1, CP PE ENG_INIT_TR 11 5, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 5] Invalid indication in cpSystemDetermination()
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 6 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 6, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 6] Pilot acquire start.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 7 Rsp
    printformat , ENG_INIT_TR,  2, CP PE ENG_INIT_TR 11 7, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 7] Shutdown received in Pilot Channel Acquisition
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 12 Rsp
    printformat , ENG_INIT_TR,  2, CP PE ENG_INIT_TR 11 12, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 12] Shutdown received in Pilot Channel Acquisition
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 13 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 13, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 13] Pilot acquired!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 14 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 14, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 14] Pilot NOT acquired! - ENG_IND_NO_PILOT
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 15 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 15, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 15] Pilot NOT acquired! - ENG_IND_TIMEOUT.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 16 Rsp
    printformat , ENG_INIT_TR,  2, CP PE ENG_INIT_TR 11 16, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 16] Unexpected timer in PILOT ACQUISITION - WAIT FOR PILOT ACQUIRE:%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 17 Rsp
    printformat , ENG_INIT_TR,  1, CP PE ENG_INIT_TR 11 17, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 17] Unexpected event in PILOT ACQUISITION - WAIT FOR PILOT ACQUIRE:%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 11 18 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 11 18, N=%d, <systime>  CP - PE [ENG_ERROR_TR 11 18] Unexpected event in cpPilotChannelAcquisition:%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 19 Rsp
    printformat , ENG_INIT_TR,  2, CP PE ENG_INIT_TR 11 19, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 19] Pending User Request in Pilot Channel Acquisition
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 20 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 20, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 20] Sync acquire started.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 21 Rsp
    printformat , ENG_INIT_TR,  2, CP PE ENG_INIT_TR 11 21, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 21] Shutdown received in Sync Channel Acquisition
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 22 Rsp
    printformat , ENG_INIT_TR,  2, CP PE ENG_INIT_TR 11 22, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 22] Pending User Request in Sync Channel Acquisition
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 23 Rsp
    printformat , ENG_INIT_TR,  3, CP PE ENG_INIT_TR 11 23, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 23] Sync message received.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 24 Rsp
    printformat , ENG_INIT_TR,  3, CP PE ENG_INIT_TR 11 24, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 24] SYNC Test Mode enabled - staying on Sync Channel.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 25 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 25, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 25] Sync not acquired - ENG_IND_TIMEOUT
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 11 26 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 11 26, N=%d, <systime>  CP - PE [ENG_ERROR_TR 11 26] Unexpected timer in PILOT ACQUISITION - WAIT FOR PILOT ACQUIRE
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 27 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 27, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 27] Sync not acquired - ENG_IND_SYNC_ACQUIRE_FAIL/PILOT_LOST.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 11 28 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 11 28, N=%d, <systime>  CP - PE [ENG_ERROR_TR 11 28] Unexpected event in cpSyncChannelAcquisition:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 29 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 29, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 29] Bad SYNC message structure.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 30 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 30, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 30] Protocol revision not supported - MOB_P_REVp:%d MIN_P_REV:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 31 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 31, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 31] PRAT not supported.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 32 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 32, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 32] Wrong System.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 33 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 33, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 33] Wrong Network.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 34 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 34, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 34] Invalid CDMA_FREQ provided.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 35 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 35, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 35] New Sync Message OK - saving SYNC info
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 36 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 36, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 36] SYNC channel system parameters
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 37 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 37, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 37] P_REVs:%d MIN_P_REVs:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 38 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 38, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 38] P_REV_IN_USEs:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 39 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 39, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 39] SIDs:%u NIDs:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 40 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 40, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 40] PILOT_PN:%d PRATs:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 41 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 41, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 41] CDMA_CHs:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 42 Rsp
    printformat , ENG_INIT_TR,  2, CP PE ENG_INIT_TR 11 42, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 42] Shutdown received in Timing Change
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 43 Rsp
    printformat , ENG_INIT_TR,  2, CP PE ENG_INIT_TR 11 43, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 43] Pending User Request in Timing Change
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 44 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 44, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 44] Timing change successful.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 45 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 45, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 45] Timing change unsuccessful.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 11 46 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 11 46, N=%d, <systime>  CP - PE [ENG_ERROR_TR 11 46] Unexpected event in cpTimingChange:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 47 Rsp
    printformat , ENG_INIT_TR,  5, CP PE ENG_INIT_TR 11 47, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 47] Selected System rejected by wbiosSystemSelection.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 48 Rsp
    printformat , ENG_INIT_TR,  2, CP PE ENG_INIT_TR 11 48, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 48] Pended Powerdown/Disable Handled in System Det - Type:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 54 Rsp
    printformat , ENG_INIT_TR,  2, CP PE ENG_INIT_TR 11 54, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 54] Shutdown received in System Det
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 11 55 Rsp
    printformat , ENG_INIT_TR,  2, CP PE ENG_INIT_TR 11 55, N=%d, <systime>  CP - PE [ENG_INIT_TR 11 55] Pending User Request in System Det
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 12 1 Rsp
    printformat , ENG_ACCESS_TR,  5, CP PE ENG_ACCESS_TR 12 1, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 12 1] Page CH Long Code Mask:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 12 2 Rsp
    printformat , ENG_ACCESS_TR,  5, CP PE ENG_ACCESS_TR 12 2, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 12 2] Access CH Long Code Mask:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 12 3 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 12 3, N=%d, <systime>  CP - PE [ENG_CP_TR 12 3] Public Traffic Channel Long Code Mask:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 12 4 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 12 4, N=%d, <systime>  CP - PE [ENG_CP_TR 12 4] Private Traffic CH Long Code Mask:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 12 5 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 12 5, N=%d, <systime>  CP - PE [ENG_CP_TR 12 5] Invalid Long Code Transition request = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 12 6 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 12 6, N=%d, <systime>  CP - PE [ENG_CP_TR 12 6] Already using Private Long Code!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 12 7 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 12 7, N=%d, <systime>  CP - PE [ENG_CP_TR 12 7] Already using Public Long Code!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 12 8 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 12 8, N=%d, <systime>  CP - PE [ENG_CP_TR 12 8] The WBIOS pends the Long Code Transistion Request msg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 12 25 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 12 25, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 12 25] LC Transition Complete Ind rcvd in invalid state!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 12 26 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 12 26, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 12 26] LC Transition Complete Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 12 51 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 12 51, N=%d, <systime>  CP - PE [ENG_CP_TR 12 51] No change in Voice Privacy, AUTHs does not allow change
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 1 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 1, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 1] L2 SYNC Activated
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 2 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 2, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 2] L2 SYNC Deactivated
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 3 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 3, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 3] L2 PAGE Activated
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 4 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 4, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 4] L2 PAGE Deactivated
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 5 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 5, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 5] Received SOM in middle of message.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 6 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 6, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 6] SYNC frame missed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 7 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 7, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 7] Received SHORT message (< 40 bits)!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 8 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 8, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 8] CRC failed on SYNC message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 9 Rsp
    printformat , ENG_LAYER2_TR,  5, CP PE ENG_LAYER2_TR 13 9, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 9] New SOM on frame:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 10 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 10, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 10] Received SCI in middle of message.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 11 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 11, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 11] Received SHORT message (< 40 bits)!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 12 Rsp
    printformat , ENG_LAYER2_TR,  5, CP PE ENG_LAYER2_TR 13 12, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 12] New SCI at system time: %lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 14 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 14, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 14] CRC failed on PAGE message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 15 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 15, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 15] New SYNC Message -
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 16 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 16, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 16] Bad sync message length
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 17 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 17, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 17] FTC Layer 2 State Machine already running, ignore Start
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 18 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 18, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 18] Start FTC Layer 2 State Machine
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 19 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 19, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 19] Wait for N5m Good FTC frames
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 20 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 20, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 20] Stop FTC Layer 2 State Machine
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 21 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 21, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 21] Received Layer 2 Frame Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 22 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 22, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 22] Received Layer 2 Frame Power Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 23 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 23, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 23] Hard Handoff operation
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 24 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 24, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 24] Candidate Frequency Search Start
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 25 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 25, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 25] Candidate Frequency Search End
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 26 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 26, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 26] Number of frames spent on the Candidate Frequency: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 27 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 27, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 27] CF frames < N2m : WBIOS will enable the transmitter
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 28 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 28, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 28] CF frames >= N2m :FTC Supervision will enable the transmitter
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 29 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 29, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 29] Layer 2 Rx Acknowledgement Procedures Reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 30 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 30, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 30] Enabling FTC Supervision
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 31 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 31, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 31] Disabling FTC Supervision
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 32 Rsp
    printformat , ENG_LAYER2_TR,  1, CP PE ENG_LAYER2_TR 13 32, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 32] FTC Fade Timer expiry
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 33 Rsp
    printformat , ENG_LAYER2_TR,  1, CP PE ENG_LAYER2_TR 13 33, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 33] FTC Fade Timer expiry: Reset Fade Timer %u ms
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 36 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 36, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 36] Set FTC Power Control Parmeters
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 37 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 37, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 37] Layer 2 FTC State Machine >>
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 38 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 38, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 38] FTCEvent : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FTCEvent, uint32, base=enum:L2 FTC Event Types
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 39 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 39, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 39] Received in FTCState : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FTCState, uint32, base=enum:L2 FTC State Types
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 40 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 40, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 40] No signalling traffic in FTC frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 41 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 41, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 41] Layer 2 FTC State Machine <<
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 42 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 42, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 42] Exit FTCState : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FTCState, uint32, base=enum:L2 FTC State Types
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 43 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 43, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 43] New FTC frame at system time: %lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 44 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 44, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 44] FTC frame type: mux %u, category %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 13 45 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 13 45, N=%d, <systime>  CP - PE [ENG_ERROR_TR 13 45] Invalid frame category: %u for MUX1
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 13 46 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 13 46, N=%d, <systime>  CP - PE [ENG_ERROR_TR 13 46] Invalid frame category: %u for MUX2
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 13 47 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 13 47, N=%d, <systime>  CP - PE [ENG_ERROR_TR 13 47] Invalid frame mux option: %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 48 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 48, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 48] Received N2m consecutive bad frames, disabling transmitter
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 49 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 49, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 49] Received N3m consecutive good frames, re-enabling transmitter
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 50 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 50, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 50] N3m Consecutive Good Frames received - frame time saved
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 51 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 51, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 51] rx SOM => New FTC signalling msg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 52 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 52, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 52] No SOM => dump FTC sig frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 53 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 53, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 53] Received SOM in middle of message.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 54 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 54, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 54] rx SOM => New FTC signalling msg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 55 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 55, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 55] No SOM => continuation sig msg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 56 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 56, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 56] Received SHORT message (< 40 bits)!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 57 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 57, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 57] New Forward Traffic Channel Message -
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 58 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 58, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 58] CRC Check Failed!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 59 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 59, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 59] Still building message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 60 Rsp
    printformat , ENG_LAYER2_TR,  4, CP PE ENG_LAYER2_TR 13 60, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 60] Zero length message!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 61 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 61, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 61] RX FTC Msg @ system time: %lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 62 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 62, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 62] msg length:%d   msg type:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 64 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 64, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 64] ACK_REQr:%d   ENCRYPTIONr:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 65 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 65, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 65] Duplicate TC Message: Acknowledged
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 66 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 66, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 66] Duplicate TC Message: Unacknowledged
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 67 Rsp
    printformat , ENG_LAYER2_TR,  2, CP PE ENG_LAYER2_TR 13 67, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 67] Unexpected L2FtcEvent = %s!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    L2FtcEvent, uint32, base=enum:L2 FTC Event Types
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 68 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 68, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 68] ACK_SEQr:%d   MSG_SEQr:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 69 Rsp
    printformat , ENG_LAYER2_TR,  1, CP PE ENG_LAYER2_TR 13 69, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 69] FTC Fade Timer expiry: Reset Fade Timer 5000 ms
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 70 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 70, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 70] Predicted fade time: 0x%08lx
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 71 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 71, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 71] Predicted fade time: 0x%08lx
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR 13 72 Rsp
    printformat , ENG_LAYER2_TR,  3, CP PE ENG_LAYER2_TR 13 72, N=%d, <systime>  CP - PE [ENG_LAYER2_TR 13 72] Predicted fade time: 0x%08lx
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 1 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 1, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 1] Received ENG_IND_PAGE_MONITOR
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 2 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 2, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 2] Initiating Origination Retransmission
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 3 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 3, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 3] Initiating Page Response Retransmission
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 4 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 4, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 4] Pending Powerdown in Idle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 5 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 5, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 5] Pending User Request in Idle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 6 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 6, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 6] FAILED f-csch MONITOR START.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 7 Rsp
    printformat , ENG_IDLE_TR,  3, CP PE ENG_IDLE_TR 14 7, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 7] IDLE HO initiated
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 8 Rsp
    printformat , ENG_IDLE_TR,  4, CP PE ENG_IDLE_TR 14 8, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 8] IDLE HO to channel:%d pch:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 9 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 9, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 9] Pilot LOST in Idle.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 10 Rsp
    printformat , ENG_IDLE_TR,  3, CP PE ENG_IDLE_TR 14 10, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 10] Idle Handoff complete.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 11 Rsp
    printformat , ENG_IDLE_TR,  3, CP PE ENG_IDLE_TR 14 11, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 11] Idle Handoff failed - channel lost
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 12 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 12, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 12] Pending User Request in Idle HO
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 13 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 13, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 13] Pending Powerdown in Idle HO
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 14 Rsp
    printformat , ENG_IDLE_TR,  3, CP PE ENG_IDLE_TR 14 14, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 14] Activating Strong Pilot Report stored in Idle.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 15 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 15, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 15] Pending User Request in Idle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 16 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 16, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 16] Pending Powerdown in Idle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 17 Rsp
    printformat , ENG_IDLE_TR,  3, CP PE ENG_IDLE_TR 14 17, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 17] Received Strong Pilot Report in Idle.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 18 Rsp
    printformat , ENG_IDLE_TR,  3, CP PE ENG_IDLE_TR 14 18, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 18] Access Entry Handoff initiated - PN:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 19 Rsp
    printformat , ENG_IDLE_TR,  3, CP PE ENG_IDLE_TR 14 19, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 19] NO Access Entry Handoff candidate.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 20 Rsp
    printformat , ENG_IDLE_TR,  3, CP PE ENG_IDLE_TR 14 20, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 20] Access Entry Handoff complete.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 21 Rsp
    printformat , ENG_IDLE_TR,  4, CP PE ENG_IDLE_TR 14 21, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 21] Access Entry Handoff selection initiated.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 22 Rsp
    printformat , ENG_IDLE_TR,  1, CP PE ENG_IDLE_TR 14 22, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 22] (Re)Starting IDLE state
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 23 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 23, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 23] Retransmission cancelled
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 24 Rsp
    printformat , ENG_IDLE_TR,  1, CP PE ENG_IDLE_TR 14 24, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 24] Rentering IDLE state with Strong Pilot
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 25 Rsp
    printformat , ENG_IDLE_TR,  1, CP PE ENG_IDLE_TR 14 25, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 25] (Re)Entering IDLE state
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 26 Rsp
    printformat , ENG_IDLE_TR,  4, CP PE ENG_IDLE_TR 14 26, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 26] Page Monitor start, rate:%d pch:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 27 Rsp
    printformat , ENG_IDLE_TR,  5, CP PE ENG_IDLE_TR 14 27, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 27] Setting PCH long code mask:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 28 Rsp
    printformat , ENG_IDLE_TR,  4, CP PE ENG_IDLE_TR 14 28, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 28] IDLE state awaiting strong pilot report
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 29 Rsp
    printformat , ENG_IDLE_TR,  4, CP PE ENG_IDLE_TR 14 29, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 29] SSD Procedure not completed!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 14 30 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 14 30, N=%d, <systime>  CP - PE [ENG_ERROR_TR 14 30] Unexpected timer expired in Page Channel Monitor
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 31 Rsp
    printformat , ENG_IDLE_TR,  5, CP PE ENG_IDLE_TR 14 31, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 31] Page Message in Idle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 32 Rsp
    printformat , ENG_IDLE_TR,  3, CP PE ENG_IDLE_TR 14 32, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 32] Registration Request in Idle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 33 Rsp
    printformat , ENG_IDLE_TR,  3, CP PE ENG_IDLE_TR 14 33, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 33] Origination Request in Idle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 34 Rsp
    printformat , ENG_IDLE_TR,  3, CP PE ENG_IDLE_TR 14 34, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 34] Powerdown in Idle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 35 Rsp
    printformat , ENG_IDLE_TR,  3, CP PE ENG_IDLE_TR 14 35, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 35] Message Transmission Request in Idle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 36 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 36, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 36] Servicing pended Origination
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 37 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 37, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 37] Servicing pended Message Transmission
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 38 Rsp
    printformat , ENG_IDLE_TR,  2, CP PE ENG_IDLE_TR 14 38, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 38] Servicing pended powerdown
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 39 Rsp
    printformat , ENG_IDLE_TR,  3, CP PE ENG_IDLE_TR 14 39, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 39] Slotted Mode enabled - PGSLOT:%d index:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 40 Rsp
    printformat , ENG_IDLE_TR,  5, CP PE ENG_IDLE_TR 14 40, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 40] wbiosSleep() FROM: %x, TO PCH Slot: %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, base=16, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 41 Rsp
    printformat , ENG_IDLE_TR,  5, CP PE ENG_IDLE_TR 14 41, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 41] Disabling Slotted Mode operation
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 42 Rsp
    printformat , ENG_IDLE_TR,  1, CP PE ENG_IDLE_TR 14 42, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 42] Sleep wakeup fail - timeout
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 14 43 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 14 43, N=%d, <systime>  CP - PE [ENG_ERROR_TR 14 43] Unexpected timer in IDLE - CP_IDLE_WAKEUP:%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 44 Rsp
    printformat , ENG_IDLE_TR,  1, CP PE ENG_IDLE_TR 14 44, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 44] Sleep wakeup fail - L1 fail
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 45 Rsp
    printformat , ENG_IDLE_TR,  4, CP PE ENG_IDLE_TR 14 45, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 45] IDLE state awaiting strong pilot report
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 46 Rsp
    printformat , ENG_IDLE_TR,  5, CP PE ENG_IDLE_TR 14 46, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 46] OTASP call mode=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 47 Rsp
    printformat , ENG_IDLE_TR,  5, CP PE ENG_IDLE_TR 14 47, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 47] Waiting for broadcast @ %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, base=16, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 14 48 Rsp
    printformat , ENG_IDLE_TR,  4, CP PE ENG_IDLE_TR 14 48, N=%d, <systime>  CP - PE [ENG_IDLE_TR 14 48] cpPendUserRequest Q full, event=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 14 99 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 14 99, N=%d, <systime>  CP - PE [ENG_ERROR_TR 14 99] Unexpected Message in Idle:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 15 1 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 15 1, N=%d, <systime>  CP - PE [ENG_CP_TR 15 1] PAG_%u:%lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 15 2 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 15 2, N=%d, <systime>  CP - PE [ENG_CP_TR 15 2] ACC_%u:%lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 15 3 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 15 3, N=%d, <systime>  CP - PE [ENG_CP_TR 15 3] MUX1_FOR_%u:%lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 15 4 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 15 4, N=%d, <systime>  CP - PE [ENG_CP_TR 15 4] MUX2_FOR_%u:%lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 15 5 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 15 5, N=%d, <systime>  CP - PE [ENG_CP_TR 15 5] L2_RTC_%u:%lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 15 6 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 15 6, N=%d, <systime>  CP - PE [ENG_CP_TR 15 6] Unformat FTC Retrieve Parameters Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 15 7 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 15 7, N=%d, <systime>  CP - PE [ENG_CP_TR 15 7] Parameters Response msg would exceed max length
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 15 8 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 15 8, N=%d, <systime>  CP - PE [ENG_CP_TR 15 8] Retrieve parameterID:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 15 9 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 15 9, N=%d, <systime>  CP - PE [ENG_CP_TR 15 9] MUX1_REV_%u:%lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 15 10 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 15 10, N=%d, <systime>  CP - PE [ENG_CP_TR 15 10] MUX2_REV_%u:%lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 15 11 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 15 11, N=%d, <systime>  CP - PE [ENG_CP_TR 15 11] Unformat FTC Set Parameters Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 15 12 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 15 12, N=%d, <systime>  CP - PE [ENG_CP_TR 15 12] Received set request for invalid parameter ID:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 15 15 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 15 15, N=%d, <systime>  CP - PE [ENG_CP_TR 15 15] Format RTC %d msg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 15 16 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 15 16, N=%d, <systime>  CP - PE [ENG_ERROR_TR 15 16] Req for MUX1_REV parm, however NULL pointer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 15 17 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 15 17, N=%d, <systime>  CP - PE [ENG_ERROR_TR 15 17] Req for MUX1_REV parm, however NULL pointer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 15 18 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 15 18, N=%d, <systime>  CP - PE [ENG_ERROR_TR 15 18] Should not overflow, already checked
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 16 1 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 16 1, N=%d, <systime>  CP - PE [ENG_ERROR_TR 16 1] Hash result out of range - range:%d result:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 16 2 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 16 2, N=%d, <systime>  CP - PE [ENG_CP_TR 16 2] Hash: range:%d application:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 16 3 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 16 3, N=%d, <systime>  CP - PE [ENG_CP_TR 16 3] Hash result:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 16 4 Rsp
    printformat , ENG_CP_TR,  4, CP PE ENG_CP_TR 16 4, N=%d, <systime>  CP - PE [ENG_CP_TR 16 4] Random Integer: %lu >> range: %lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 16 5 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 16 5, N=%d, <systime>  CP - PE [ENG_CP_TR 16 5] Persistence test fail - P=0
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 16 6 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 16 6, N=%d, <systime>  CP - PE [ENG_CP_TR 16 6] Persistence test passed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 16 7 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 16 7, N=%d, <systime>  CP - PE [ENG_CP_TR 16 7] Persistence test failed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 16 8 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 16 8, N=%d, <systime>  CP - PE [ENG_CP_TR 16 8] Initial Call History Parameter COUNTs-p: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 16 9 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 16 9, N=%d, <systime>  CP - PE [ENG_CP_TR 16 9] Increment Call History Parameter COUNTs-p: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 1 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 1, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 1] PILOT_PN mismatch: s=%d r=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 2 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 2, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 2] Sys Parameters invalid - PAGE_CHAN = 0
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 3 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 3, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 3] Sys Parameters invalid- REG_PRD:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 4 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 4, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 4] Sys Pars invalid - lat:%ld long:%ld
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 5 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 5, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 5] Sys Parameters - invalid PWR indicators
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 6 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 6, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 6] Sys Parameters - bad ext message ind.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 7 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 7, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 7] Access Pars Message - invalid field
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 8 Rsp
    printformat , ENG_PAGE_TR,  2, CP PE ENG_PAGE_TR 17 8, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 8] Neighbor List Msg contains more than CP_MAX_NEIGHBOR_SET entries
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 10 Rsp
    printformat , ENG_PAGE_TR,  2, CP PE ENG_PAGE_TR 17 10, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 10] General Neighbor List Msg contains more than CP_MAX_NEIGHBOR_SET entries
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 11 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 11, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 11] CDMA Channel[%d] = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 13 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 13, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 13] Channel Assignment Message received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 14 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 14, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 14] ASSIGN_MODE UNKNOWN: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 15 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 15, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 15] Authentication Challenge Message received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 16 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 16, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 16] SSD Update Message received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 17 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 17, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 17] Extended Channel Assignment Message received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 18 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 18, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 18] ASSIGN_MODE: UNKNOWN
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 19 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 19, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 19] ASSIGN_MODE: 000
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 20 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 20, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 20] ASSIGN_MODE: 001
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 21 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 21, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 21] ASSIGN_MODE: 010
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 22 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 22, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 22] ASSIGN_MODE: 011
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 23 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 23, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 23] ASSIGN_MODE: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 24 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 24, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 24] ASSIGN_MODE: 001
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 25 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 25, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 25] ASSIGN_MODE: 101
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 26 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 26, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 26] ASSIGN_MODE: 100
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 27 Rsp
    printformat , ENG_PAGE_TR,  2, CP PE ENG_PAGE_TR 17 27, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 27] Invalid codeChan in assignment:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 28 Rsp
    printformat , ENG_PAGE_TR,  2, CP PE ENG_PAGE_TR 17 28, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 28] Unsupported encryption mode requested:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 29 Rsp
    printformat , ENG_PAGE_TR,  2, CP PE ENG_PAGE_TR 17 29, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 29] Reserved Granted Mode requested
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 17 30 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 17 30, N=%d, <systime>  CP - PE [ENG_CP_TR 17 30] Rejecting CH assigment -  frequency/band invalid - band:%d channel:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 31 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 31, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 31] Invalid default config:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 32 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 32, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 32] Invalid default config:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 33 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 17 33, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 33] Unformat Page Channel Data Burst Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 17 34 Rsp
    printformat , ENG_PAGE_TR,  2, CP PE ENG_PAGE_TR 17 34, N=%d, <systime>  CP - PE [ENG_PAGE_TR 17 34] Invalid codeChan in assignment:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 17 36 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 17 36, N=%d, <systime>  CP - PE [ENG_CP_TR 17 36] %u nghbr pilots exceeds MAX, skip %d bits
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 18 1 Rsp
    printformat , ENG_PAGE_TR,  2, CP PE ENG_PAGE_TR 18 1, N=%d, <systime>  CP - PE [ENG_PAGE_TR 18 1] Enabling f-csch supervision.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 18 2 Rsp
    printformat , ENG_PAGE_TR,  2, CP PE ENG_PAGE_TR 18 2, N=%d, <systime>  CP - PE [ENG_PAGE_TR 18 2] Enabling ACCESS supervision.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 18 3 Rsp
    printformat , ENG_PAGE_TR,  2, CP PE ENG_PAGE_TR 18 3, N=%d, <systime>  CP - PE [ENG_PAGE_TR 18 3] Disabling f-csch supervision.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 18 4 Rsp
    printformat , ENG_PAGE_TR,  1, CP PE ENG_PAGE_TR 18 4, N=%d, <systime>  CP - PE [ENG_PAGE_TR 18 4] PCH Lost detected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 18 5 Rsp
    printformat , ENG_PAGE_TR,  5, CP PE ENG_PAGE_TR 18 5, N=%d, <systime>  CP - PE [ENG_PAGE_TR 18 5] New PCH message - frame time saved
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 18 6 Rsp
    printformat , ENG_PAGE_TR,  5, CP PE ENG_PAGE_TR 18 6, N=%d, <systime>  CP - PE [ENG_PAGE_TR 18 6] Supervision sleep indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 18 7 Rsp
    printformat , ENG_PAGE_TR,  1, CP PE ENG_PAGE_TR 18 7, N=%d, <systime>  CP - PE [ENG_PAGE_TR 18 7] PCH Lost detected - bad CRCs
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 1 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 1, N=%d, <systime>  CP - PE [ENG_CP_TR 20 1] (EXT) PCH Assignment in Idle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 2 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 2, N=%d, <systime>  CP - PE [ENG_CP_TR 20 2] Rejecting ASSIGN_MODEr:%d in Idle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 3 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 3, N=%d, <systime>  CP - PE [ENG_CP_TR 20 3] TC Assignment in Access
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 4 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 4, N=%d, <systime>  CP - PE [ENG_CP_TR 20 4] Code Chan:%d Frame offset:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 5 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 5, N=%d, <systime>  CP - PE [ENG_CP_TR 20 5] (EXT) PCH Assignment in Access
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 6 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 6, N=%d, <systime>  CP - PE [ENG_CP_TR 20 6] EXTENDED TC Assignment in Access
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 7 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 7, N=%d, <systime>  CP - PE [ENG_CP_TR 20 7] Code Chan:%d Frame offset:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 8 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 8, N=%d, <systime>  CP - PE [ENG_CP_TR 20 8] EXTENDED TC Assignment in Access - %d pilots
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 9 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 9, N=%d, <systime>  CP - PE [ENG_CP_TR 20 9] Granted Mode:%d Default Config:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 10 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 10, N=%d, <systime>  CP - PE [ENG_CP_TR 20 10] Rejecting ASSIGN_MODEr:%d in Access
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 11 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 11, N=%d, <systime>  CP - PE [ENG_CP_TR 20 11] Ignoring Channel Assignment message - not in appropriate state to handle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 12 Rsp
    printformat , ENG_CP_TR,  4, CP PE ENG_CP_TR 20 12, N=%d, <systime>  CP - PE [ENG_CP_TR 20 12] Configuring %d pilots for strongest search
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 13 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 13, N=%d, <systime>  CP - PE [ENG_CP_TR 20 13] Rejecting PCH assigment - no pilots provided
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 14 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 14, N=%d, <systime>  CP - PE [ENG_CP_TR 20 14] Rejecting PCH assigment - band not supported:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 15 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 15, N=%d, <systime>  CP - PE [ENG_CP_TR 20 15] Rejecting channel assigment - NUM_PILOTS > %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 16 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 16, N=%d, <systime>  CP - PE [ENG_CP_TR 20 16] New PCH Order Message - order:%d ordq:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 17 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 17, N=%d, <systime>  CP - PE [ENG_CP_TR 20 17] Unknown Order received:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 18 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 20 18, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 18] Data Burst Message received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 19 Rsp
    printformat , ENG_PAGE_TR,  5, CP PE ENG_PAGE_TR 20 19, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 19] Feature Notification Message received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 20 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 20 20, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 20] Feature Notification Message being processed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 21 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 21, N=%d, <systime>  CP - PE [ENG_CP_TR 20 21] Release Origination from Feature Notification
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 22 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 20 22, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 22] Service Redirection Message received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 23 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 20 23, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 23] Processing Service Redirection Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 24 Rsp
    printformat , ENG_PAGE_TR,  5, CP PE ENG_PAGE_TR 20 24, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 24] Status Request Message received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 25 Rsp
    printformat , ENG_PAGE_TR,  5, CP PE ENG_PAGE_TR 20 25, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 25] Status Request Message being processed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 26 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 20 26, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 26] TMSI Assignment Message received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 27 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 20 27, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 27] Processing TMSI Assignment Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 28 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 20 28, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 28] PACA Message received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 29 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 20 29, N=%d, <systime>  CP - PE [ENG_CP_TR 20 29] PCH Message Address match - ACK_SEQ:%d MSG_SEQ:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 30 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 20 30, N=%d, <systime>  CP - PE [ENG_CP_TR 20 30]                             ACK_REQ:%d VALID_ACK:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 31 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 20 31, N=%d, <systime>  CP - PE [ENG_CP_TR 20 31] Processing received PCH Order/Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 32 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 20 32, N=%d, <systime>  CP - PE [ENG_CP_TR 20 32] Duplicate Message detected ->MSG_SEQ:%d ACK_REQ:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 33 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 33, N=%d, <systime>  CP - PE [ENG_CP_TR 20 33] Reorder Order received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 34 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 34, N=%d, <systime>  CP - PE [ENG_CP_TR 20 34] Audit Order received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 35 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 20 35, N=%d, <systime>  CP - PE [ENG_CP_TR 20 35] LOCK Order received - ordq:%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 36 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 20 36, N=%d, <systime>  CP - PE [ENG_CP_TR 20 36] UNLOCK Order received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 37 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 20 37, N=%d, <systime>  CP - PE [ENG_CP_TR 20 37] MAINTENANCE REQUIRED Order received - ordq:%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 38 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 38, N=%d, <systime>  CP - PE [ENG_CP_TR 20 38] Unknown Maintenance ordq received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 39 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 39, N=%d, <systime>  CP - PE [ENG_CP_TR 20 39] Abbreviated Alert Order received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 40 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 20 40, N=%d, <systime>  CP - PE [ENG_CP_TR 20 40] REGISTRATION ACCEPTED received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 41 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 20 41, N=%d, <systime>  CP - PE [ENG_CP_TR 20 41] REGISTRATION REQUEST received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 42 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 20 42, N=%d, <systime>  CP - PE [ENG_CP_TR 20 42] REGISTRATION REJECTED received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 43 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 20 43, N=%d, <systime>  CP - PE [ENG_CP_TR 20 43] REGISTRATION REJECTED - delete TMSI received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 44 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 20 44, N=%d, <systime>  CP - PE [ENG_CP_TR 20 44] REGISTRATION ACCEPTED with ROAM_INDI received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 45 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 45, N=%d, <systime>  CP - PE [ENG_CP_TR 20 45] Release Order received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 46 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 46, N=%d, <systime>  CP - PE [ENG_CP_TR 20 46] Local Control Order received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 47 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 47, N=%d, <systime>  CP - PE [ENG_CP_TR 20 47] Intercept Order received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 48 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 48, N=%d, <systime>  CP - PE [ENG_CP_TR 20 48] BS Ack Order received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 49 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 20 49, N=%d, <systime>  CP - PE [ENG_CP_TR 20 49] Rejecting unknown REGISTRATION ACCEPTED ordq:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 50 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 20 50, N=%d, <systime>  CP - PE [ENG_CP_TR 20 50] PCH Message ignored
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 51 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 20 51, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 51] Reject Service Redirection Message - unsupported band:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 52 Rsp
    printformat , ENG_PAGE_TR,  4, CP PE ENG_PAGE_TR 20 52, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 52] PCH Message & Order Message -
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 53 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 20 53, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 53] NDSS is enabled
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 54 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 20 54, N=%d, <systime>  CP - PE [ENG_CP_TR 20 54] Acquire Analog System - respond:%d analog_sys:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 55 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 20 55, N=%d, <systime>  CP - PE [ENG_CP_TR 20 55]                  use_analog_sys:%d  band class:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 56 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 20 56, N=%d, <systime>  CP - PE [ENG_CP_TR 20 56] Analog VC Assignment - sid:%d vmac:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 57 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 20 57, N=%d, <systime>  CP - PE [ENG_CP_TR 20 57]                     channel:%d scc:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 58 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 20 58, N=%d, <systime>  CP - PE [ENG_CP_TR 20 58]                an_chan_type:%d band:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 59 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 59, N=%d, <systime>  CP - PE [ENG_CP_TR 20 59] Rejecting PCH assigment - analog not supported in band:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 60 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 20 60, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 60] Setting _ackOutStanding:TRUE
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 20 61 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 20 61, N=%d, <systime>  CP - PE [ENG_PAGE_TR 20 61] returnIfFail:%d redirectType:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 62 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 62, N=%d, <systime>  CP - PE [ENG_CP_TR 20 62] Code Chan:%d Frame offset:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 20 63 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 20 63, N=%d, <systime>  CP - PE [ENG_CP_TR 20 63] Granted Mode:%d Default Config:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 1 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 21 1, N=%d, <systime>  CP - PE [ENG_CP_TR 21 1] OVHD CONFIG_MSG_SEQ values are current
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 2 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 21 2, N=%d, <systime>  CP - PE [ENG_CP_TR 21 2] OVHD CONFIG_MSG_SEQ values are NOT current
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 3 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 21 3, N=%d, <systime>  CP - PE [ENG_CP_TR 21 3] ACC_MSG_SEQ  value is current
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 4 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 21 4, N=%d, <systime>  CP - PE [ENG_CP_TR 21 4] ACC_MSG_SEQ  value is NOT current
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 10 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 21 10, N=%d, <systime>  CP - PE [ENG_CP_TR 21 10] Page Channel Assignment change made
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 11 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 21 11, N=%d, <systime>  CP - PE [ENG_CP_TR 21 11] PAGE_CHANs:%d PAGECHs:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 12 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 21 12, N=%d, <systime>  CP - PE [ENG_CP_TR 21 12] Access Parameters Message received - ACC_MSG_SEQ:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 13 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 13, N=%d, <systime>  CP - PE [ENG_CP_TR 21 13] Processing Access Parameters Message seq#:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 14 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 21 14, N=%d, <systime>  CP - PE [ENG_CP_TR 21 14] Neighbor List Message received - CONFIG_MSG_SEQ:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 15 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 15, N=%d, <systime>  CP - PE [ENG_CP_TR 21 15] Processing Neighbor List Message seq#:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 16 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 21 16, N=%d, <systime>  CP - PE [ENG_CP_TR 21 16] CDMA Channel List Message received - CONFIG_MSG_SEQ:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 17 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 17, N=%d, <systime>  CP - PE [ENG_CP_TR 21 17] Processing CDMA Chan List Msg seq#:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 18 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 21 18, N=%d, <systime>  CP - PE [ENG_CP_TR 21 18] CDMA_CH change to:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 19 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 21 19, N=%d, <systime>  CP - PE [ENG_CP_TR 21 19] Extended System Parameters Message received - CONFIG_MSG_SEQ:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 20 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 20, N=%d, <systime>  CP - PE [ENG_CP_TR 21 20] Processing Ext System Pars Msg seq#:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 21 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 21 21, N=%d, <systime>  CP - PE [ENG_CP_TR 21 21] Protocol mismatch in Ext Sys Pars REVp:%d REVr:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 22 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 21 22, N=%d, <systime>  CP - PE [ENG_CP_TR 21 22] IMSI_O set to IMSI_Tp
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 23 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 21 23, N=%d, <systime>  CP - PE [ENG_CP_TR 21 23] IMSI_O set to IMSI_Mp
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 24 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 21 24, N=%d, <systime>  CP - PE [ENG_CP_TR 21 24] MCCs set from NAM:%0X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 25 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 21 25, N=%d, <systime>  CP - PE [ENG_CP_TR 21 25] IMSI_11_12s set from NAM:%0X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 26 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 21 26, N=%d, <systime>  CP - PE [ENG_CP_TR 21 26] MCCs set from msg:%0X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 27 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 21 27, N=%d, <systime>  CP - PE [ENG_CP_TR 21 27] IMSI_11_12s set from msg:%0X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 21 28 Rsp
    printformat , ENG_PAGE_TR,  5, CP PE ENG_PAGE_TR 21 28, N=%d, <systime>  CP - PE [ENG_PAGE_TR 21 28] Global Service Redirection Message received - CONFIG_MSG_SEQ:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 29 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 29, N=%d, <systime>  CP - PE [ENG_CP_TR 21 29] Processing Global Service Redirection Message - seq#:%d ACCOLC: %X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_PAGE_TR 21 30 Rsp
    printformat , ENG_PAGE_TR,  3, CP PE ENG_PAGE_TR 21 30, N=%d, <systime>  CP - PE [ENG_PAGE_TR 21 30] MS being Redirected!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 31 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 21 31, N=%d, <systime>  CP - PE [ENG_CP_TR 21 31] Extended Neighbor List Message received - CONFIG_MSG_SEQ:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 32 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 32, N=%d, <systime>  CP - PE [ENG_CP_TR 21 32] Processing Extended Neighbor List Message seq#:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 33 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 21 33, N=%d, <systime>  CP - PE [ENG_CP_TR 21 33] General Neighbor List Message received - CONFIG_MSG_SEQ:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 34 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 34, N=%d, <systime>  CP - PE [ENG_CP_TR 21 34] Processing General Neighbor List Msg seq#:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 35 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 35, N=%d, <systime>  CP - PE [ENG_CP_TR 21 35] Replaying SysParms chan=%d, pN=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 36 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 21 36, N=%d, <systime>  CP - PE [ENG_CP_TR 21 36] Replaying SysParms band=%d, seqNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 37 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 37, N=%d, <systime>  CP - PE [ENG_CP_TR 21 37] Replaying ExtSysParms chan=%d, pN=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 38 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 21 38, N=%d, <systime>  CP - PE [ENG_CP_TR 21 38] Replaying ExtSysParms band=%d, seqNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 39 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 39, N=%d, <systime>  CP - PE [ENG_CP_TR 21 39] Replaying GlobSvcRedirect chan=%d, pN=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 40 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 21 40, N=%d, <systime>  CP - PE [ENG_CP_TR 21 40] Replaying GlobSvcRedirect band=%d, seqNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 41 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 41, N=%d, <systime>  CP - PE [ENG_CP_TR 21 41] Replaying ExtNeighList chan=%d, pN=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 42 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 21 42, N=%d, <systime>  CP - PE [ENG_CP_TR 21 42] Replaying ExtNeighList band=%d, seqNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 43 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 43, N=%d, <systime>  CP - PE [ENG_CP_TR 21 43] Replaying ChanList chan=%d, pN=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 44 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 21 44, N=%d, <systime>  CP - PE [ENG_CP_TR 21 44] Replaying ChanList band=%d, seqNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 45 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 45, N=%d, <systime>  CP - PE [ENG_CP_TR 21 45] Replaying GenNeighList chan=%d, pN=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 46 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 21 46, N=%d, <systime>  CP - PE [ENG_CP_TR 21 46] Replaying GenNeighList band=%d, seqNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 47 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 47, N=%d, <systime>  CP - PE [ENG_CP_TR 21 47] Replaying NeighborList chan=%d, pN=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 48 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 21 48, N=%d, <systime>  CP - PE [ENG_CP_TR 21 48] Replaying NeighborList band=%d, seqNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 51 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 21 51, N=%d, <systime>  CP - PE [ENG_CP_TR 21 51] System Parameters Message received - CONFIG_MSG_SEQ:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 52 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 21 52, N=%d, <systime>  CP - PE [ENG_CP_TR 21 52] Processing System Parameters Message - seq#:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 21 53 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 21 53, N=%d, <systime>  CP - PE [ENG_CP_TR 21 53] Rescan indication from System Pars
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 1 Rsp
    printformat , ENG_ACCESS_TR,  1, CP PE ENG_ACCESS_TR 22 1, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 1] Entering ACCESS state
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 2 Rsp
    printformat , ENG_ACCESS_TR,  4, CP PE ENG_ACCESS_TR 22 2, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 2] Waiting for current Overhead Parameters
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 3 Rsp
    printformat , ENG_ACCESS_TR,  3, CP PE ENG_ACCESS_TR 22 3, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 3] System Access Timeout - no overhead updates
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 4 Rsp
    printformat , ENG_ACCESS_TR,  2, CP PE ENG_ACCESS_TR 22 4, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 4] Page Monitor Ind. received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 5 Rsp
    printformat , ENG_ACCESS_TR,  2, CP PE ENG_ACCESS_TR 22 5, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 5] Page Channel/Pilot Lost - return to IDLE
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 6 Rsp
    printformat , ENG_ACCESS_TR,  2, CP PE ENG_ACCESS_TR 22 6, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 6] Pending User Request in Update Overhead Info
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 7 Rsp
    printformat , ENG_ACCESS_TR,  2, CP PE ENG_ACCESS_TR 22 7, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 7] User Terminate in UPD_OVHD_INFO - call dropped
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 8 Rsp
    printformat , ENG_ACCESS_TR,  2, CP PE ENG_ACCESS_TR 22 8, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 8] Received Strong Pilot Report in Access.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 9 Rsp
    printformat , ENG_ACCESS_TR,  2, CP PE ENG_ACCESS_TR 22 9, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 9] Pending User Request in Order & Message Response
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 10 Rsp
    printformat , ENG_ACCESS_TR,  2, CP PE ENG_ACCESS_TR 22 10, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 10] Pending User Request in Registration
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 11 Rsp
    printformat , ENG_ACCESS_TR,  3, CP PE ENG_ACCESS_TR 22 11, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 11] System Access State Timeout
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 22 12 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 22 12, N=%d, <systime>  CP - PE [ENG_ERROR_TR 22 12] Unknown timer expired in Access substate
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 13 Rsp
    printformat , ENG_ACCESS_TR,  3, CP PE ENG_ACCESS_TR 22 13, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 13] Access Handoff initiated - PN:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 14 Rsp
    printformat , ENG_ACCESS_TR,  3, CP PE ENG_ACCESS_TR 22 14, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 14] Page Monitor Ind. received - Access HO complete
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 16 Rsp
    printformat , ENG_ACCESS_TR,  3, CP PE ENG_ACCESS_TR 22 16, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 16] Access HO denied - back to IDLE
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 18 Rsp
    printformat , ENG_ACCESS_TR,  3, CP PE ENG_ACCESS_TR 22 18, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 18] Access Probe attempt fail - back to IDLE
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 19 Rsp
    printformat , ENG_ACCESS_TR,  3, CP PE ENG_ACCESS_TR 22 19, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 19] Page Channel/Pilot Lost - back to IDLE
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 20 Rsp
    printformat , ENG_ACCESS_TR,  3, CP PE ENG_ACCESS_TR 22 20, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 20] ACCESS_FAILURE - back to System Determination
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 21 Rsp
    printformat , ENG_ACCESS_TR,  3, CP PE ENG_ACCESS_TR 22 21, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 21] WBIOS Access fail indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 22 Rsp
    printformat , ENG_ACCESS_TR,  3, CP PE ENG_ACCESS_TR 22 22, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 22] Received Strong Pilot Report in Access.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 23 Rsp
    printformat , ENG_ACCESS_TR,  3, CP PE ENG_ACCESS_TR 22 23, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 23] PAGED while in Registration
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 24 Rsp
    printformat , ENG_ACCESS_TR,  3, CP PE ENG_ACCESS_TR 22 24, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 24] PAGED while waiting for overhead info
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 22 25 Rsp
    printformat , ENG_ACCESS_TR,  2, CP PE ENG_ACCESS_TR 22 25, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 22 25] Pending User Request in Message Transmission
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 22 26 Rsp
    printformat , ENG_IDLE_TR,  4, CP PE ENG_IDLE_TR 22 26, N=%d, <systime>  CP - PE [ENG_IDLE_TR 22 26] BCCH SR3 not supported at this time.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_IDLE_TR 22 27 Rsp
    printformat , ENG_IDLE_TR,  4, CP PE ENG_IDLE_TR 22 27, N=%d, <systime>  CP - PE [ENG_IDLE_TR 22 27] Could not determine the fcsch to monitor.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 22 99 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 22 99, N=%d, <systime>  CP - PE [ENG_ERROR_TR 22 99] Unexpected Message in Access:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 23 1 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 23 1, N=%d, <systime>  CP - PE [ENG_CP_TR 23 1] General PAGE RECORD MATCH!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 23 2 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 23 2, N=%d, <systime>  CP - PE [ENG_CP_TR 23 2] Duplicate Page record detected: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 23 3 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 23 3, N=%d, <systime>  CP - PE [ENG_CP_TR 23 3] General Page Message -
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 23 4 Rsp
    printformat , ENG_CP_TR,  4, CP PE ENG_CP_TR 23 4, N=%d, <systime>  CP - PE [ENG_CP_TR 23 4] General Page Message Match -
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 23 5 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 23 5, N=%d, <systime>  CP - PE [ENG_CP_TR 23 5] Bad page msgType=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 23 6 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 23 6, N=%d, <systime>  CP - PE [ENG_CP_TR 23 6] Obsolete PAGE RECORD MATCH!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 23 98 Rsp
    printformat , ENG_CP_TR,  4, CP PE ENG_CP_TR 23 98, N=%d, <systime>  CP - PE [ENG_CP_TR 23 98] Obsolete Page Message Match -
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 25 1 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 25 1, N=%d, <systime>  CP - PE [ENG_ERROR_TR 25 1] *** Attempt to assemble Access message that is not saved ***
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 25 2 Rsp
    printformat , ENG_ACCESS_TR,  4, CP PE ENG_ACCESS_TR 25 2, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 25 2] Assemble General Page Response Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 25 3 Rsp
    printformat , ENG_ACCESS_TR,  4, CP PE ENG_ACCESS_TR 25 3, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 25 3] Assemble Registration Message - %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 25 4 Rsp
    printformat , ENG_ACCESS_TR,  4, CP PE ENG_ACCESS_TR 25 4, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 25 4] Assemble Origination Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 25 5 Rsp
    printformat , ENG_ACCESS_TR,  4, CP PE ENG_ACCESS_TR 25 5, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 25 5] Assemble Data Burst Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 25 6 Rsp
    printformat , ENG_ACCESS_TR,  4, CP PE ENG_ACCESS_TR 25 6, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 25 6] Assemble Order Message: order:%d ordq:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 25 7 Rsp
    printformat , ENG_ACCESS_TR,  4, CP PE ENG_ACCESS_TR 25 7, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 25 7] Assemble Mobile Station Reject Order - ordq:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 25 8 Rsp
    printformat , ENG_ACCESS_TR,  4, CP PE ENG_ACCESS_TR 25 8, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 25 8] Assemble BS Challenge Order - $%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 25 9 Rsp
    printformat , ENG_ACCESS_TR,  4, CP PE ENG_ACCESS_TR 25 9, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 25 9] Assemble Authentication Challenge Message - $%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 25 11 Rsp
    printformat , ENG_ACCESS_TR,  4, CP PE ENG_ACCESS_TR 25 11, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 25 11] Assemble Extended Status Response Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 25 12 Rsp
    printformat , ENG_ACCESS_TR,  4, CP PE ENG_ACCESS_TR 25 12, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 25 12] Assemble TMSI Assignment Complete Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 25 29 Rsp
    printformat , ENG_ACCESS_TR,  5, CP PE ENG_ACCESS_TR 25 29, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 25 29] Reject Status Response - too big
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ACCESS_TR 25 30 Rsp
    printformat , ENG_ACCESS_TR,  4, CP PE ENG_ACCESS_TR 25 30, N=%d, <systime>  CP - PE [ENG_ACCESS_TR 25 30] Assemble Status Response Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 2 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 27 2, N=%d, <systime>  CP - PE [ENG_CP_TR 27 2] Received N5m good TC frames, Wait for BS Ack Order
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 3 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 27 3, N=%d, <systime>  CP - PE [ENG_CP_TR 27 3] N5m good frames NOT received in CP_TC_INIT!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 4 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 27 4, N=%d, <systime>  CP - PE [ENG_CP_TR 27 4] BS Ack NOT received in CP_TC_INIT!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 5 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 27 5, N=%d, <systime>  CP - PE [ENG_CP_TR 27 5] Invalid TC Init State
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 6 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 27 6, N=%d, <systime>  CP - PE [ENG_CP_TR 27 6] Waiting For Order State Timeout!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 7 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 27 7, N=%d, <systime>  CP - PE [ENG_CP_TR 27 7] Auto Answer in Waiting For Answer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 8 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 27 8, N=%d, <systime>  CP - PE [ENG_CP_TR 27 8] Waiting For Answer State Timeout!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 10 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 27 10, N=%d, <systime>  CP - PE [ENG_CP_TR 27 10] Invalid Release Indication!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 11 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 27 11, N=%d, <systime>  CP - PE [ENG_CP_TR 27 11] Lost System in Release State!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 12 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 27 12, N=%d, <systime>  CP - PE [ENG_CP_TR 27 12] ASSIGN_MODE %d: Traffic Channel Assignment Band Class 0 only
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 13 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 27 13, N=%d, <systime>  CP - PE [ENG_CP_TR 27 13] ASSIGN_MODE 100: Extended Traffic Channel Assignment
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 14 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 27 14, N=%d, <systime>  CP - PE [ENG_CP_TR 27 14] EXTENDED ASSIGN_MODE 000: Traffic Channel Assignment
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 15 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 27 15, N=%d, <systime>  CP - PE [ENG_CP_TR 27 15] Invalid Channel Assignment in CDMA Traffic, mode = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 16 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 27 16, N=%d, <systime>  CP - PE [ENG_CP_TR 27 16] Invalid Ext Channel Assignment in CDMA Traffic, mode = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 17 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 27 17, N=%d, <systime>  CP - PE [ENG_CP_TR 27 17] Unknown Channel Assignment in CDMA Traffic, mode = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 18 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 27 18, N=%d, <systime>  CP - PE [ENG_CP_TR 27 18] Received FTC Msg/Order not accepted in current state
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 19 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 27 19, N=%d, <systime>  CP - PE [ENG_CP_TR 27 19] %d message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 20 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 27 20, N=%d, <systime>  CP - PE [ENG_CP_TR 27 20] %d order code
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 21 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 27 21, N=%d, <systime>  CP - PE [ENG_CP_TR 27 21] Encryption Disabled
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 22 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 27 22, N=%d, <systime>  CP - PE [ENG_CP_TR 27 22] Release State Timeout!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 23 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 27 23, N=%d, <systime>  CP - PE [ENG_CP_TR 27 23] Unexpected event = %u!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 24 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 27 24, N=%d, <systime>  CP - PE [ENG_CP_TR 27 24] Unexpected ACK Notification: msg type = %u, order = %u!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 25 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 27 25, N=%d, <systime>  CP - PE [ENG_CP_TR 27 25] Unexpected Send Notification: msg type = %u, order = %u!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 26 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 27 26, N=%d, <systime>  CP - PE [ENG_CP_TR 27 26] Encryption Enabled
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 27 34 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 27 34, N=%d, <systime>  CP - PE [ENG_CP_TR 27 34] Origination Continuation
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 1 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 1, N=%d, <systime>  CP - PE [ENG_CP_TR 28 1] Received %s msg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FTC Msg, uint32, base=enum:FOR Traffic Msg Enum
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 2 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 2, N=%d, <systime>  CP - PE [ENG_CP_TR 28 2] Received FTC %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FTC Order, uint32, base=enum:FOR Order Code Enum
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 17 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 28 17, N=%d, <systime>  CP - PE [ENG_CP_TR 28 17] The PE pends the Cand Freq Search Control msg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 19 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 28 19, N=%d, <systime>  CP - PE [ENG_CP_TR 28 19] Send Parameter Update Confirmation Order
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 23 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 28 23, N=%d, <systime>  CP - PE [ENG_CP_TR 28 23] Reject Long Code Transition, explicit action time only
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 26 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 28 26, N=%d, <systime>  CP - PE [ENG_CP_TR 28 26] Ordq = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 31 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 31, N=%d, <systime>  CP - PE [ENG_CP_TR 28 31] Cannot pend %d message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 32 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 32, N=%d, <systime>  CP - PE [ENG_CP_TR 28 32] Action Time = %u is < 80 ms from end of message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 33 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 33, N=%d, <systime>  CP - PE [ENG_CP_TR 28 33] %d order code
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 34 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 34, N=%d, <systime>  CP - PE [ENG_CP_TR 28 34] Action Time is %u frames from current frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 35 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 35, N=%d, <systime>  CP - PE [ENG_CP_TR 28 35] Cannot pend %d message, already pending
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 36 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 36, N=%d, <systime>  CP - PE [ENG_CP_TR 28 36] %d order code
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 37 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 37, N=%d, <systime>  CP - PE [ENG_CP_TR 28 37] Cannot pend %d message, already pending max number
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 38 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 38, N=%d, <systime>  CP - PE [ENG_CP_TR 28 38] %d order code
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 28 39 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 28 39, N=%d, <systime>  CP - PE [ENG_ERROR_TR 28 39] Cannot pend FTC message of type %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 28 40 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 28 40, N=%d, <systime>  CP - PE [ENG_ERROR_TR 28 40] with %d order code
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 41 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 41, N=%d, <systime>  CP - PE [ENG_CP_TR 28 41] Pending %d message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 42 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 42, N=%d, <systime>  CP - PE [ENG_CP_TR 28 42] Protocol Engine Expire Time = %X (20 ms units - System Time LSB)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 43 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 43, N=%d, <systime>  CP - PE [ENG_CP_TR 28 43] %d order code
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 44 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 28 44, N=%d, <systime>  CP - PE [ENG_CP_TR 28 44] ERROR: mrxPendMsg() called before mrxPendingMsgCheck()!!!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 45 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 45, N=%d, <systime>  CP - PE [ENG_CP_TR 28 45] Processing pending %d message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 46 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 46, N=%d, <systime>  CP - PE [ENG_CP_TR 28 46] of type %d order
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 47 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 28 47, N=%d, <systime>  CP - PE [ENG_CP_TR 28 47] ERROR: Invalid pended order!!!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 48 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 28 48, N=%d, <systime>  CP - PE [ENG_CP_TR 28 48] ERROR: Invalid pended message!!!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 49 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 28 49, N=%d, <systime>  CP - PE [ENG_CP_TR 28 49] The PE pends the Message Encryption Mode Order
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 50 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 28 50, N=%d, <systime>  CP - PE [ENG_CP_TR 28 50] Pending Message Initialization
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 52 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 28 52, N=%d, <systime>  CP - PE [ENG_CP_TR 28 52] Message ignored in TC Initialization Substate!!!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 28 53 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 28 53, N=%d, <systime>  CP - PE [ENG_CP_TR 28 53] Order ignored in TC Initialization Substate!!!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 1 Rsp
    printformat , ENG_RTC_TR,  2, CP PE ENG_RTC_TR 29 1, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 1] Initialize RTC Message Transmitter
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 2 Rsp
    printformat , ENG_RTC_TR,  2, CP PE ENG_RTC_TR 29 2, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 2] RTC Send Failure Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 3 Rsp
    printformat , ENG_RTC_TR,  2, CP PE ENG_RTC_TR 29 3, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 3] RTC Stop Attempt
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 4 Rsp
    printformat , ENG_RTC_TR,  3, CP PE ENG_RTC_TR 29 4, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 4] RTC Message Queued
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 29 5 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 29 5, N=%d, <systime>  CP - PE [ENG_ERROR_TR 29 5] MTX Queue Full
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 6 Rsp
    printformat , ENG_RTC_TR,  2, CP PE ENG_RTC_TR 29 6, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 6] Release RTC Buffer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 7 Rsp
    printformat , ENG_RTC_TR,  3, CP PE ENG_RTC_TR 29 7, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 7] Service Cfg Change: Min Signaling Bits Per Frame = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 8 Rsp
    printformat , ENG_RTC_TR,  2, CP PE ENG_RTC_TR 29 8, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 8] Layer 2 RTC Parameters Reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 9 Rsp
    printformat , ENG_RTC_TR,  2, CP PE ENG_RTC_TR 29 9, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 9] Layer 2 RTC Parameters Get
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 10 Rsp
    printformat , ENG_RTC_TR,  4, CP PE ENG_RTC_TR 29 10, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 10] TC Message Transmitter State Machine >>
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 11 Rsp
    printformat , ENG_RTC_TR,  4, CP PE ENG_RTC_TR 29 11, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 11] MtxEvent : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MtxEvent, uint32, base=enum:Mtx Event Types
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 12 Rsp
    printformat , ENG_RTC_TR,  4, CP PE ENG_RTC_TR 29 12, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 12] Received in MtxState : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MtxState, uint32, base=enum:Mtx State Types
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 13 Rsp
    printformat , ENG_RTC_TR,  4, CP PE ENG_RTC_TR 29 13, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 13] TC Message Transmitter State Machine <<
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 14 Rsp
    printformat , ENG_RTC_TR,  4, CP PE ENG_RTC_TR 29 14, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 14] Exit MtxState : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MtxState, uint32, base=enum:Mtx State Types
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 15 Rsp
    printformat , ENG_RTC_TR,  2, CP PE ENG_RTC_TR 29 15, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 15] Minimum Signaling Bits Per Frame = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 16 Rsp
    printformat , ENG_RTC_TR,  3, CP PE ENG_RTC_TR 29 16, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 16] Received Ack for Msg Seq# %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 29 17 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 29 17, N=%d, <systime>  CP - PE [ENG_ERROR_TR 29 17] ACK_WAITING[%u] but no msg queued!!!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 18 Rsp
    printformat , ENG_RTC_TR,  3, CP PE ENG_RTC_TR 29 18, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 18] Queued Ack for MSG_SEQr:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 29 19 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 29 19, N=%d, <systime>  CP - PE [ENG_ERROR_TR 29 19] Ack Q overflow!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 29 20 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 29 20, N=%d, <systime>  CP - PE [ENG_ERROR_TR 29 20] Rcvd Tx Ind for a msg but did not find!!!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 29 21 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 29 21, N=%d, <systime>  CP - PE [ENG_ERROR_TR 29 21] Rcvd Tx Ind with no transmitting flags set!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 22 Rsp
    printformat , ENG_RTC_TR,  2, CP PE ENG_RTC_TR 29 22, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 22] Exceed window size
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 23 Rsp
    printformat , ENG_RTC_TR,  3, CP PE ENG_RTC_TR 29 23, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 23] Do not exceed window size
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 29 24 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 29 24, N=%d, <systime>  CP - PE [ENG_ERROR_TR 29 24] No Ack queued at top!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 29 25 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 29 25, N=%d, <systime>  CP - PE [ENG_ERROR_TR 29 25] No Ack queued at top
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 26 Rsp
    printformat , ENG_RTC_TR,  2, CP PE ENG_RTC_TR 29 26, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 26] RTC Acknowledge Failure, stop Traffic Channel
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 27 Rsp
    printformat , ENG_RTC_TR,  3, CP PE ENG_RTC_TR 29 27, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 27] Tx RTC Message Layer 2 Fields:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 29 Rsp
    printformat , ENG_RTC_TR,  3, CP PE ENG_RTC_TR 29 29, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 29] ACK_SEQ:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 30 Rsp
    printformat , ENG_RTC_TR,  3, CP PE ENG_RTC_TR 29 30, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 30] Retransmission - MSG_SEQ_ACK:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 31 Rsp
    printformat , ENG_RTC_TR,  3, CP PE ENG_RTC_TR 29 31, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 31] MSG_SEQ_ACK:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 32 Rsp
    printformat , ENG_RTC_TR,  3, CP PE ENG_RTC_TR 29 32, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 32] MSG_SEQ_NOACK:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 33 Rsp
    printformat , ENG_RTC_TR,  3, CP PE ENG_RTC_TR 29 33, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 33] ACK_REQ:%d  ENCRYPTION:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 34 Rsp
    printformat , ENG_RTC_TR,  3, CP PE ENG_RTC_TR 29 34, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 34] RTC Tx Msg:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 35 Rsp
    printformat , ENG_RTC_TR,  3, CP PE ENG_RTC_TR 29 35, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 35] Length:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 29 36 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 29 36, N=%d, <systime>  CP - PE [ENG_ERROR_TR 29 36] Unexpected MtxEvent = %s!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MtxEvent, uint32, base=enum:Mtx Event Types
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 37 Rsp
    printformat , ENG_RTC_TR,  2, CP PE ENG_RTC_TR 29 37, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 37] Ack Procedures Reset!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_RTC_TR 29 38 Rsp
    printformat , ENG_RTC_TR,  3, CP PE ENG_RTC_TR 29 38, N=%d, <systime>  CP - PE [ENG_RTC_TR 29 38] Tx off, removed stale PSMM!!!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 29 39 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 29 39, N=%d, <systime>  CP - PE [ENG_ERROR_TR 29 39] MTX Queue Full
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 1 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 1, N=%d, <systime>  CP - PE [ENG_CP_TR 30 1] Unformat FTC Order
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 2 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 2, N=%d, <systime>  CP - PE [ENG_CP_TR 30 2] Unformat FTC Authentication Challenge Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 3 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 3, N=%d, <systime>  CP - PE [ENG_CP_TR 30 3] Unformat FTC Alert With Information Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 4 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 4, N=%d, <systime>  CP - PE [ENG_CP_TR 30 4] Unformat FTC Data Burst Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 5 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 5, N=%d, <systime>  CP - PE [ENG_CP_TR 30 5] Unformat FTC Handoff Direction Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 6 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 6, N=%d, <systime>  CP - PE [ENG_CP_TR 30 6] No change in Voice Privacy, AUTHs does not allow change
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 7 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 7, N=%d, <systime>  CP - PE [ENG_CP_TR 30 7] Number of active pilots %u exceeds MAX allowed, use MAX
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 8 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 8, N=%d, <systime>  CP - PE [ENG_CP_TR 30 8] Unformat FTC Analog Handoff Direction Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 9 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 9, N=%d, <systime>  CP - PE [ENG_CP_TR 30 9] Analog Frequency %u not supported!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 11 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 11, N=%d, <systime>  CP - PE [ENG_CP_TR 30 11] Unformat FTC In Traffic System Parameters Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 12 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 12, N=%d, <systime>  CP - PE [ENG_CP_TR 30 12] Unformat FTC Neighbour List Update Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 13 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 13, N=%d, <systime>  CP - PE [ENG_CP_TR 30 13] Number of nghbr pilots in NLUM %u exceeds N8m, using N8m
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 14 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 14, N=%d, <systime>  CP - PE [ENG_CP_TR 30 14] Unformat FTC Send Burst DTMF Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 15 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 15, N=%d, <systime>  CP - PE [ENG_CP_TR 30 15] Number of digits %u exceeds MAX allowed, use MAX
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 16 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 16, N=%d, <systime>  CP - PE [ENG_CP_TR 30 16] Unformat FTC Power Control Parameters Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 17 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 17, N=%d, <systime>  CP - PE [ENG_CP_TR 30 17] Unformat FTC SSD Update Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 18 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 18, N=%d, <systime>  CP - PE [ENG_CP_TR 30 18] Unformat FTC Flash With Information Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 19 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 19, N=%d, <systime>  CP - PE [ENG_CP_TR 30 19] Unformat FTC Mobile Station Registered Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 20 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 20, N=%d, <systime>  CP - PE [ENG_CP_TR 30 20] Unformat FTC Status Request Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 21 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 21, N=%d, <systime>  CP - PE [ENG_CP_TR 30 21] Unformat FTC Extended Handoff Direction Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 22 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 22, N=%d, <systime>  CP - PE [ENG_CP_TR 30 22] No change in Voice Privacy, AUTHs does not allow change
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 23 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 23, N=%d, <systime>  CP - PE [ENG_CP_TR 30 23] Band Class %u not supported!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 24 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 24, N=%d, <systime>  CP - PE [ENG_CP_TR 30 24] CDMA Frequency %u not supported!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 25 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 25, N=%d, <systime>  CP - PE [ENG_CP_TR 30 25] Number of active pilots %u exceeds MAX allowed, use MAX
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 26 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 26, N=%d, <systime>  CP - PE [ENG_CP_TR 30 26] Unformat FTC Service Request Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 27 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 27, N=%d, <systime>  CP - PE [ENG_CP_TR 30 27] Unformat FTC Service Response Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 28 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 28, N=%d, <systime>  CP - PE [ENG_CP_TR 30 28] Unformat FTC Service Connect Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 29 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 29, N=%d, <systime>  CP - PE [ENG_CP_TR 30 29] Unformat FTC Service Option Control Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 30 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 30, N=%d, <systime>  CP - PE [ENG_CP_TR 30 30] Control record length %u exceeds MAX allowed, use MAX
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 31 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 31, N=%d, <systime>  CP - PE [ENG_CP_TR 30 31] Unformat FTC TMSI Assignment Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 32 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 32, N=%d, <systime>  CP - PE [ENG_CP_TR 30 32] Unformat FTC Service Redirection Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 33 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 33, N=%d, <systime>  CP - PE [ENG_CP_TR 30 33] Unformat FTC Supplemental Channel Assignment Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 34 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 34, N=%d, <systime>  CP - PE [ENG_CP_TR 30 34] Unformat FTC Power Control Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 35 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 35, N=%d, <systime>  CP - PE [ENG_CP_TR 30 35] Unformat FTC Extended Neighbour List Update Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 36 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 36, N=%d, <systime>  CP - PE [ENG_CP_TR 30 36] Number of nghbr pilots in ENLUM %u exceeds N8m, using N8m
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 37 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 37, N=%d, <systime>  CP - PE [ENG_CP_TR 30 37] Unformat FTC Candidate Frequency Search Request Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 38 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 38, N=%d, <systime>  CP - PE [ENG_CP_TR 30 38] Unformat FTC Candidate Frequency Search Control Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 39 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 39, N=%d, <systime>  CP - PE [ENG_CP_TR 30 39] Unformat FTC General Handoff Direction Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 40 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 40, N=%d, <systime>  CP - PE [ENG_CP_TR 30 40] No change in Voice Privacy, AUTHs does not allow change
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 41 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 41, N=%d, <systime>  CP - PE [ENG_CP_TR 30 41] Band Class %u not supported!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 42 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 42, N=%d, <systime>  CP - PE [ENG_CP_TR 30 42] CDMA Freq %u not supported!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 43 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 43, N=%d, <systime>  CP - PE [ENG_CP_TR 30 43] Invalid numForSup: %u!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 44 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 44, N=%d, <systime>  CP - PE [ENG_CP_TR 30 44] Invalid numRevCodes: %u!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 45 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 45, N=%d, <systime>  CP - PE [ENG_CP_TR 30 45] Number of active pilots %u exceeds MAX allowed, use MAX
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 46 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 46, N=%d, <systime>  CP - PE [ENG_CP_TR 30 46] Order unformat overrun!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 30 47 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 30 47, N=%d, <systime>  CP - PE [ENG_CP_TR 30 47] Message unformat overrun!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 1 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 31 1, N=%d, <systime>  CP - PE [ENG_CP_TR 31 1] Unformat Display Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 2 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 31 2, N=%d, <systime>  CP - PE [ENG_CP_TR 31 2] Unformat Called Party Number Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 3 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 31 3, N=%d, <systime>  CP - PE [ENG_CP_TR 31 3] Unformat Calling Party Number Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 4 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 31 4, N=%d, <systime>  CP - PE [ENG_CP_TR 31 4] Unformat Signal Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 5 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 31 5, N=%d, <systime>  CP - PE [ENG_CP_TR 31 5] Unformat Message Waiting Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 6 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 31 6, N=%d, <systime>  CP - PE [ENG_CP_TR 31 6] Unformat Service Configuration Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 7 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 31 7, N=%d, <systime>  CP - PE [ENG_CP_TR 31 7] Forward Mux Option = %u, Reverse Mux Option = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 8 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 31 8, N=%d, <systime>  CP - PE [ENG_CP_TR 31 8] Forward Rates = %02X, Reverse Rates = %02X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 9 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 31 9, N=%d, <systime>  CP - PE [ENG_CP_TR 31 9] Number of connections = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 10 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 31 10, N=%d, <systime>  CP - PE [ENG_CP_TR 31 10] Connection %u:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 11 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 31 11, N=%d, <systime>  CP - PE [ENG_CP_TR 31 11] Connection Reference = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 12 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 31 12, N=%d, <systime>  CP - PE [ENG_CP_TR 31 12] Service Option = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 13 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 31 13, N=%d, <systime>  CP - PE [ENG_CP_TR 31 13] Forward Traffic Type = %u, Reverse Traffic Type = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 14 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 31 14, N=%d, <systime>  CP - PE [ENG_CP_TR 31 14] Unformat Information Record Type Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 16 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 31 16, N=%d, <systime>  CP - PE [ENG_CP_TR 31 16] Reject Service Redirection - invalid formatting
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 17 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 31 17, N=%d, <systime>  CP - PE [ENG_CP_TR 31 17] Reject Service Redirection - invalid formatting
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 31 18 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 31 18, N=%d, <systime>  CP - PE [ENG_CP_TR 31 18] Rejecting Service Redirection - invalid record type:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 32 1 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 32 1, N=%d, <systime>  CP - PE [ENG_CP_TR 32 1] Mode-specific fields not an integral number of octets
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 32 2 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 32 2, N=%d, <systime>  CP - PE [ENG_CP_TR 32 2] Layer3 message not an integral number of octets
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 32 3 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 32 3, N=%d, <systime>  CP - PE [ENG_CP_TR 32 3] Format Overflow
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 32 4 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 32 4, N=%d, <systime>  CP - PE [ENG_CP_TR 32 4] Format %s msg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RTC Msg, uint32, base=enum:Rev Traffic Msg Enum
End

Begin Message, CP Trace CP PE ENG_CP_TR 32 5 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 32 5, N=%d, <systime>  CP - PE [ENG_CP_TR 32 5] Format %s msg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RTC Msg, uint32, base=enum:Rev Traffic Msg Enum
End

Begin Message, CP Trace CP PE ENG_CP_TR 32 6 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 32 6, N=%d, <systime>  CP - PE [ENG_CP_TR 32 6] Format RTC %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RTC Order, uint32, base=enum:REV Order Code Enum
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 1 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 1, N=%d, <systime>  CP - PE [ENG_CP_TR 33 1] Format Feature Indicator Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 2 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 2, N=%d, <systime>  CP - PE [ENG_CP_TR 33 2] Format Keypad Facility Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 3 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 3, N=%d, <systime>  CP - PE [ENG_CP_TR 33 3] Format Called Party Number Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 4 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 4, N=%d, <systime>  CP - PE [ENG_CP_TR 33 4] Format Calling Party Number Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 5 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 5, N=%d, <systime>  CP - PE [ENG_CP_TR 33 5] Format Identification Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 6 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 6, N=%d, <systime>  CP - PE [ENG_CP_TR 33 6] Format Terminal Information Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 7 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 7, N=%d, <systime>  CP - PE [ENG_CP_TR 33 7] Format Roaming Information Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 8 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 8, N=%d, <systime>  CP - PE [ENG_CP_TR 33 8] Format Security Status Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 9 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 9, N=%d, <systime>  CP - PE [ENG_CP_TR 33 9] Format ESN Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 10 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 10, N=%d, <systime>  CP - PE [ENG_CP_TR 33 10] Format Band Class Information Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 11 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 11, N=%d, <systime>  CP - PE [ENG_CP_TR 33 11] Format Power Class Information Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 12 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 12, N=%d, <systime>  CP - PE [ENG_CP_TR 33 12] Format Operating Mode Information Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 13 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 13, N=%d, <systime>  CP - PE [ENG_CP_TR 33 13] Format Service Option Information Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 14 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 14, N=%d, <systime>  CP - PE [ENG_CP_TR 33 14] Format Multiplex Option Information Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 15 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 15, N=%d, <systime>  CP - PE [ENG_CP_TR 33 15] Format Service Configuration Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 16 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 16, N=%d, <systime>  CP - PE [ENG_CP_TR 33 16] Format Called Party Subaddress Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 17 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 17, N=%d, <systime>  CP - PE [ENG_CP_TR 33 17] Format Calling Party Subaddress Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 18 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 18, N=%d, <systime>  CP - PE [ENG_CP_TR 33 18] Format Connected Subaddress Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 19 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 19, N=%d, <systime>  CP - PE [ENG_CP_TR 33 19] Invalid Subaddress Record Type
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 20 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 20, N=%d, <systime>  CP - PE [ENG_CP_TR 33 20] Format Power Control Information Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 21 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 21, N=%d, <systime>  CP - PE [ENG_CP_TR 33 21] Format IMSI_O Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 22 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 22, N=%d, <systime>  CP - PE [ENG_CP_TR 33 22] Format IMSIm Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 23 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 23, N=%d, <systime>  CP - PE [ENG_CP_TR 33 23] Format IMSIt Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 33 24 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 33 24, N=%d, <systime>  CP - PE [ENG_CP_TR 33 24] Format Call Mode Record
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 1 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 1, N=%d, <systime>  CP - PE [ENG_CP_TR 34 1] Set Service Configuration
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 2 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 2, N=%d, <systime>  CP - PE [ENG_CP_TR 34 2] Set Pending Service Configuration
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 3 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 3, N=%d, <systime>  CP - PE [ENG_CP_TR 34 3] Set Service Option Requested: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 5 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 5, N=%d, <systime>  CP - PE [ENG_CP_TR 34 5] GRANTED_MODE 0: Initial Service Cfg: Mux Opt 1 Rate Set 1
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 6 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 6, N=%d, <systime>  CP - PE [ENG_CP_TR 34 6] Serv Neg to take place BEFORE BS Service Connect
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 12 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 12, N=%d, <systime>  CP - PE [ENG_CP_TR 34 12] Initial Service Configuration
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 13 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 13, N=%d, <systime>  CP - PE [ENG_CP_TR 34 13] Using Service Negotiation
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 14 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 14, N=%d, <systime>  CP - PE [ENG_CP_TR 34 14] GRANTED_MODE 0: Initial Service Cfg defined by DEFAULT_CONFIG
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 15 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 15, N=%d, <systime>  CP - PE [ENG_CP_TR 34 15] Serv Neg to take place BEFORE BS Service Connect
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 16 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 16, N=%d, <systime>  CP - PE [ENG_CP_TR 34 16] GRANTED_MODE 1: Initial Serv Cfg by Serv Opt requested in Access
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 17 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 17, N=%d, <systime>  CP - PE [ENG_CP_TR 34 17] Serv Neg to take place BEFORE BS Service Connect
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 18 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 18, N=%d, <systime>  CP - PE [ENG_CP_TR 34 18] GRANTED_MODE 2: Initial Serv Cfg by Serv Opt requested in Access
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 19 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 19, N=%d, <systime>  CP - PE [ENG_CP_TR 34 19] Serv Neg NOT to take place before BS Service Connect
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 20 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 20, N=%d, <systime>  CP - PE [ENG_CP_TR 34 20] Error : Invalid Granted Mode!!!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 21 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 21, N=%d, <systime>  CP - PE [ENG_CP_TR 34 21] Svc Option Negotiation, defaultCfg=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 22 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 22, N=%d, <systime>  CP - PE [ENG_CP_TR 34 22] Delete Non Primary Connections
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 23 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 23, N=%d, <systime>  CP - PE [ENG_CP_TR 34 23] No Connections, do nothing
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 24 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 24, N=%d, <systime>  CP - PE [ENG_CP_TR 34 24] One Primary Connection, do nothing
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 25 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 25, N=%d, <systime>  CP - PE [ENG_CP_TR 34 25] One Non-Primary Connection, remove connection
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 26 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 26, N=%d, <systime>  CP - PE [ENG_CP_TR 34 26] Found One Primary Connection, remove other connections
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 27 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 34 27, N=%d, <systime>  CP - PE [ENG_CP_TR 34 27] Only Non-Primary Connections, remove connections
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 28 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 34 28, N=%d, <systime>  CP - PE [ENG_CP_TR 34 28] Service Option validation response : %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 34 29 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 34 29, N=%d, <systime>  CP - PE [ENG_CP_TR 34 29] Service Configuration validation response : %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 1 Rsp
    printformat , ENG_HANDOFF_TR,  3, CP PE ENG_HANDOFF_TR 35 1, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 1] New search windows set:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 2 Rsp
    printformat , ENG_HANDOFF_TR,  3, CP PE ENG_HANDOFF_TR 35 2, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 2] SRCH_WIN_A: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 3 Rsp
    printformat , ENG_HANDOFF_TR,  3, CP PE ENG_HANDOFF_TR 35 3, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 3] SRCH_WIN_N: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 4 Rsp
    printformat , ENG_HANDOFF_TR,  3, CP PE ENG_HANDOFF_TR 35 4, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 4] SRCH_WIN_R: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 6 Rsp
    printformat , ENG_HANDOFF_TR,  3, CP PE ENG_HANDOFF_TR 35 6, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 6] New SRCH_WIN_A setting: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 8 Rsp
    printformat , ENG_HANDOFF_TR,  3, CP PE ENG_HANDOFF_TR 35 8, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 8] New global Neighbor Search Window size: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 10 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 10, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 10] New Neighbor Max Age: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 11 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 11, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 11] New PILOT_INC: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 12 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 12, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 12] Saving Band Channel: Band Class: %d  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 13 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 13, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 13] New Neighbor Search Mode: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 14 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 14, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 14] Reset Pilot Measurement Report flag
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 15 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 15, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 15] RESET Pilot Set
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 16 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 16, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 16] CLEAR Pilot Set
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 17 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 17, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 17] CLEAR Active Pilot Set
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 18 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 18, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 18] CLEAR Candidate Pilot Set
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 19 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 19, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 19] CLEAR Neighbor PilotSet
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 20 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 20, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 20] CLEAR Remaining Pilot Set
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 21 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 21, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 21] Adding Idle Pilot to Active Set
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 22 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 22, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 22] Inserting pilot:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 23 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 23, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 23] Unable to add idle pilot to Active Set
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 24 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 24, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 24] Pilot Measure Report Update
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 26 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 26, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 26] Updating Active Set measurements:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 27 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 27, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 27] Updating Candidate Set measurements:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 28 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 28, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 28] Updating Neighbor Set measurements:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 29 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 29, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 29] Updating Remaining Set measurements:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 30 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 30, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 30] Incorrect seq # (sent:%d got:%d), pilot set change in progress
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 31 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 31, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 31] Updating active pilot measurement:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 32 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 32, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 32] phPhase:%u strength:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 35 33 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 35 33, N=%d, <systime>  CP - PE [ENG_ERROR_TR 35 33] Attempt to update more pilots than currently in Active Set: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 34 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 34, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 34] Updating candidate pilot measurement:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 35 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 35, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 35] phPhase:%u strength:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 35 36 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 35 36, N=%d, <systime>  CP - PE [ENG_ERROR_TR 35 36] Attempt to update more pilots than currently in Candidate Set: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 37 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 37, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 37] Updating neighbor pilot measurement:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 38 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 38, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 38] phPhase:%u strength:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 35 39 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 35 39, N=%d, <systime>  CP - PE [ENG_ERROR_TR 35 39] Attempt to update more pilots than currently in Neighbor Set: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 40 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 40, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 40] Remaining pilot measurement:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 41 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 41, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 41] phPhase:%u strength:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 35 42 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 35 42, N=%d, <systime>  CP - PE [ENG_ERROR_TR 35 42] Attempt to update remaining pilots failed after %d pilots
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 43 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 43, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 43] Exceed Candidate Set Size
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 35 44 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 35 44, N=%d, <systime>  CP - PE [ENG_ERROR_TR 35 44] Candidate Set should accept new pilot
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 35 45 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 35 45, N=%d, <systime>  CP - PE [ENG_ERROR_TR 35 45] Candidate Set should accept new pilot
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 46 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 46, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 46] Exceed Neighbor Set Size
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 47 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 47, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 47] Updating neighbor pilot measurement:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 48 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 48, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 48] phPhase:%u strength:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 35 49 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 35 49, N=%d, <systime>  CP - PE [ENG_ERROR_TR 35 49] Attempt to update more pilots than currently in Neighbor Set: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 50 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 50, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 50] Updating Active Set measurements:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 51 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 51, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 51] Updating Neighbor Set measurements:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 35 52 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 35 52, N=%d, <systime>  CP - PE [ENG_ERROR_TR 35 52] Attempt to update more pilots than currently in Active Set: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 53 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 53, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 53] Updating active pilot measurement:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 54 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 54, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 54] phPhase:%u strength:%u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 55 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 55, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 55] Neighbor Set pilot with strength > T_ADD: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 56 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 56, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 56] Error!!! Pilot not in Neighbor Set: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 57 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 35 57, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 57] Remaining Set pilot with strength > T_ADD: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 35 58 Rsp
    printformat , ENG_HANDOFF_TR,  4, CP PE ENG_HANDOFF_TR 35 58, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 35 58] Reference PN change OLD: %u NEW: %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 36 1 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 36 1, N=%d, <systime>  CP - PE [ENG_ERROR_TR 36 1] Unknown address type : %d in
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 36 2 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 36 2, N=%d, <systime>  CP - PE [ENG_ERROR_TR 36 2] Unknown IMSI classtype : %d in address decomposition
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 36 3 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 36 3, N=%d, <systime>  CP - PE [ENG_ERROR_TR 36 3] Unknown IMSI classtype : %d in address decomposition
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 36 4 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 36 4, N=%d, <systime>  CP - PE [ENG_ERROR_TR 36 4] Unknown IMSI class : %d in address decomposition
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 36 5 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 36 5, N=%d, <systime>  CP - PE [ENG_CP_TR 36 5] Building IMSI address-> class:%d classType:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 36 6 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 36 6, N=%d, <systime>  CP - PE [ENG_ERROR_TR 36 6] Unknown IMSI class : %d in address composition
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 36 7 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 36 7, N=%d, <systime>  CP - PE [ENG_ERROR_TR 36 7] Unknown IMSI class type: %d in address composition
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 36 8 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 36 8, N=%d, <systime>  CP - PE [ENG_ERROR_TR 36 8] Unknown IMSI class type: %d in address composition
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 36 9 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 36 9, N=%d, <systime>  CP - PE [ENG_CP_TR 36 9] duplicate broadcast found burst type=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 36 10 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 36 10, N=%d, <systime>  CP - PE [ENG_CP_TR 36 10] missed broadcast expected @ %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 37 31 Rsp
    printformat , ENG_INIT_TR,  3, CP PE ENG_INIT_TR 37 31, N=%d, <systime>  CP - PE [ENG_INIT_TR 37 31] AMPS System A selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 37 32 Rsp
    printformat , ENG_INIT_TR,  3, CP PE ENG_INIT_TR 37 32, N=%d, <systime>  CP - PE [ENG_INIT_TR 37 32] AMPS System B selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 37 33 Rsp
    printformat , ENG_INIT_TR,  3, CP PE ENG_INIT_TR 37 33, N=%d, <systime>  CP - PE [ENG_INIT_TR 37 33] AMPS System A selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 37 34 Rsp
    printformat , ENG_INIT_TR,  3, CP PE ENG_INIT_TR 37 34, N=%d, <systime>  CP - PE [ENG_INIT_TR 37 34] AMPS System B selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 37 36 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 37 36, N=%d, <systime>  CP - PE [ENG_CP_TR 37 36] CDMA redirection - Band Class 1
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 37 37 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 37 37, N=%d, <systime>  CP - PE [ENG_CP_TR 37 37] CDMA redirection - Band Class 0
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 37 38 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 37 38, N=%d, <systime>  CP - PE [ENG_ERROR_TR 37 38] CDMA redirection - unknown Band Class
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 37 39 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 37 39, N=%d, <systime>  CP - PE [ENG_CP_TR 37 39] CDMA redirection - Band Class 3
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 37 40 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 37 40, N=%d, <systime>  CP - PE [ENG_ERROR_TR 37 40] CDMA redirection to unsupported BandClass:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 37 41 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 37 41, N=%d, <systime>  CP - PE [ENG_CP_TR 37 41] Redirection record type unsupported:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 37 42 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 37 42, N=%d, <systime>  CP - PE [ENG_CP_TR 37 42] Redirection request but REDIRECTIONs not enabled
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_INIT_TR 37 43 Rsp
    printformat , ENG_INIT_TR,  3, CP PE ENG_INIT_TR 37 43, N=%d, <systime>  CP - PE [ENG_INIT_TR 37 43] Redirection CDMA_CH selection - BAND=%d CHANNEL=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 37 55 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 37 55, N=%d, <systime>  CP - PE [ENG_CSS_TR 37 55] Custom System Selection Procedure
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 1 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 38 1, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 1] HO Request made with Neighbor pilot
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 2 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 38 2, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 2] HO Request made with Remaining pilot
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 38 3 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 38 3, N=%d, <systime>  CP - PE [ENG_ERROR_TR 38 3] WBIOS Idle HO pilot not found - %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 4 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 38 4, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 4] New IDLE Neighbor List
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 5 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 38 5, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 5] Inserting pilot:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 6 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 38 6, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 6] IDLE Neighbor List is FULL!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 7 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 38 7, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 7] Idle Neighbor Set - new size:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 8 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 38 8, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 8] Starting Handoff Delay=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 10 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 38 10, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 10] Preparing to send IdleChangePilotSet to WBIOS
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 11 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 38 11, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 11] IDLE Neighbor List is FULL!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 12 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 38 12, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 12] wbiosIdleChangePilotSet() call made
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 13 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 38 13, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 13] Preparing to send IdlePilotSet to WBIOS
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 14 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 38 14, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 14] Adding pilot:%d PN:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 15 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 38 15, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 15] wbiosIdlePilotSet() call made, seq:%d numPilots:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 16 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 38 16, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 16] Reporting pilot: %d as strongest pilot
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 38 20 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 38 20, N=%d, <systime>  CP - PE [ENG_ERROR_TR 38 20] Could not find active pilot
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 25 Rsp
    printformat , ENG_HANDOFF_TR,  1, CP PE ENG_HANDOFF_TR 38 25, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 25] Idle Handoff request to Neighbor Pilot PN: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 38 26 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 38 26, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 38 26] Neighbor set ignored - monitoring for strongest pilot
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 1 Rsp
    printformat , ENG_HANDOFF_TR,  3, CP PE ENG_HANDOFF_TR 39 1, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 1] New HANDOFF thresholds:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 2 Rsp
    printformat , ENG_HANDOFF_TR,  3, CP PE ENG_HANDOFF_TR 39 2, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 2] T_ADD: %d T_DROP: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 3 Rsp
    printformat , ENG_HANDOFF_TR,  3, CP PE ENG_HANDOFF_TR 39 3, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 3] T_COMP: %d T_TDROP: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 4 Rsp
    printformat , ENG_HANDOFF_TR,  3, CP PE ENG_HANDOFF_TR 39 4, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 4] Change Active and Candidate Drop Timers
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 5 Rsp
    printformat , ENG_HANDOFF_TR,  3, CP PE ENG_HANDOFF_TR 39 5, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 5] New INTERCEPT parameters:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 6 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 6, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 6] SOFT_SLOPE: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 7 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 7, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 7] ADD_INTERCEPT: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 8 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 8, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 8] DROP_INTERCEPT: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 13 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 13, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 13] Traffic INIT of Neighbor List - setting AGE to NGHBR_MAX_AGE
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 14 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 14, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 14] Traffic Channel Neighbor Set Update
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 15 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 15, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 15] Pilot PN: %d incremented AGE %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 16 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 16, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 16] Pilot PN: %d deleted from list due to AGE
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 17 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 17, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 17] Examining pilot:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 18 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 18, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 18] Ext Nghbr Pilot %d updated - AGE: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 19 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 19, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 19] Updated Search Priority: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 20 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 20, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 20] Updated Search Window: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 21 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 21, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 21] Pilot added to Neighbor List: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 22 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 22, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 22] TRAFFIC Neighbor List is FULL!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 23 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 23, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 23] TRAFFIC Neighbor List size: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 24 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 24, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 24] Handoff Active Set is disjoint
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 25 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 25, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 25] Supplemental Channel Parameters included
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 39 30 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 39 30, N=%d, <systime>  CP - PE [ENG_CP_TR 39 30] The WBIOS pends the General Handoff Direction msg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 31 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 31, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 31] TC Active Set Update for Handoff Direction Msg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 32 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 32, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 32] Error: Attempt to switch to Serv Opt Neg in Band Class 1
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 36 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 36, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 36] PILOT SET CHANGE!!!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 37 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 37, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 37] Active Set contains %d pilots:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 38 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 38, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 38] %d Active Set pilot PN : %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 39 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 39, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 39] Candidate Set contains %d pilots:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 40 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 40, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 40] %d Candidate Set pilot PN : %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 41 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 41, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 41] Neighbor Set contains %d pilots:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 42 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 42, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 42] %d Neighbor Set pilot PN : %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 55 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 55, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 55] Active Set pilot %d with strength >= T_DROP, disable Drop Timer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 56 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 56, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 56] Active Set pilot %d with strength < T_DROP, enable Drop Timer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 57 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 57, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 57] Active Set pilot %d no longer satisfies inequality, disable Drop Timer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 58 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 58, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 58] Active Set pilot %d satisfies inequality, enable Drop Timer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 59 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 59, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 59] Candidate Set pilot %d with strength > T_DROP, disable T_DROP timer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 60 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 60, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 60] Candidate Set pilot %d with strength < T_DROP, enable T_DROP timer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 61 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 61, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 61] Candidate Set pilot %d with strength > dynamicTAdd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 62 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 62, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 62] Candidate Set pilot %d > Active Set pilot %d by T_COMP/2
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 63 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 63, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 63] Neighbor Set pilot with strength > T_ADD: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 64 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 64, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 64] Remaining Set pilot with strength > T_ADD: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 65 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 65, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 65] Active Set pilot %d drop timer %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 66 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 66, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 66] Active Set pilot %d with expired handoff drop timer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 67 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 67, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 67] Candidate Set pilot %d drop timer %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 68 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 68, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 68] Candidate Set pilot %d with expired handoff drop timer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 69 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 69, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 69] Active Set pilot %d drop timer %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 70 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 70, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 70] Active Set pilot %d with expired handoff drop timer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 71 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 71, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 71] Active Set pilot %d drop timer %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 72 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 72, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 72] Candidate Set pilot %d drop timer %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 73 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 73, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 73] Candidate Set pilot %d with expired handoff drop timer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 74 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 74, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 74] Candidate Set pilot %d drop timer %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 75 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 75, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 75] Remove Candidate Set pilot (present in ExtHoDirMsg): %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 76 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 76, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 76] Remove Neighbor Set pilot (present in ExtHoDirMsg): %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 77 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 77, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 77] Forward Supplemental Channel Parameters included
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 78 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 78, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 78] Reverse Supplemental Channel Parameters included
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 79 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 79, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 79] Extra Parameters included
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 80 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 80, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 80] New Band Class = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 81 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 81, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 81] New CDMA Frequency = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 82 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 82, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 82] Long Code change = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 83 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 83, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 83] New Frame Offset = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 84 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 84, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 84] Reverse Supplemental Channel Parameters included
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 39 85 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 39 85, N=%d, <systime>  CP - PE [ENG_CP_TR 39 85] Power Control Step %u  not supported
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 86 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 86, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 86] Forward Supplemental Channel Parameters included
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 87 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 39 87, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 87] Handoff Complete Ind rcvd in invalid state!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 88 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 39 88, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 88] Handoff Complete Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 89 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 39 89, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 89] TC to AVC Handoff Start Ind rcvd in invalid state!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 90 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 39 90, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 90] TC to AVC Handoff Start Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 39 91 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 39 91, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 39 91] Pwr Comb Ind: %u Walsh Code: %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 1 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 1, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 1] Candidate Frequency State Machine already running, ignore Start
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 2 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 2, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 2] Start Candidate Frequency State Machine
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 3 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 3, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 3] Stop Candidate Frequency State Machine
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 4 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 4, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 4] Candidate Frequency Search Request Event
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 5 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 5, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 5] Candidate Frequency Search Control Event
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 6 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 6, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 6] Candidate Frequency Search Times Event
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 7 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 7, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 7] Candidate Frequency Action Timeout Event
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 8 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 8, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 8] Candidate Frequency Start Measure Event
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 9 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 9, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 9] Candidate Frequency End Measure Event
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 10 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 10, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 10] Candidate Frequency End Measure Event
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 11 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 11, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 11] Candidate Frequency Periodic Search Timeout Event
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 12 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 12, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 12] Candidate Frequency Search Abort Visit Event
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 13 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 13, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 13] Candidate Frequency Periodic Search Enable Event
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 14 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 14, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 14] Candidate Frequency Freshness Timeout Event
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 40 16 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 40 16, N=%d, <systime>  CP - PE [ENG_CP_TR 40 16] Candidate Frequency State Machine >>
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 40 17 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 40 17, N=%d, <systime>  CP - PE [ENG_CP_TR 40 17] CF Event : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CF Event, uint32, base=enum:Cand Freq Event Types
End

Begin Message, CP Trace CP PE ENG_CP_TR 40 18 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 40 18, N=%d, <systime>  CP - PE [ENG_CP_TR 40 18] Received in State : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CF Event, uint32, base=enum:Cand Freq State Types
End

Begin Message, CP Trace CP PE ENG_CP_TR 40 19 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 40 19, N=%d, <systime>  CP - PE [ENG_CP_TR 40 19] The PE pends the Cand Freq Search Request msg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 40 20 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 40 20, N=%d, <systime>  CP - PE [ENG_CP_TR 40 20] Candidate Frequency State Machine <<
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 40 21 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 40 21, N=%d, <systime>  CP - PE [ENG_CP_TR 40 21] Exit State : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CF State, uint32, base=enum:Cand Freq State Types
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 40 22 Rsp
    printformat , ENG_HANDOFF_TR,  2, CP PE ENG_HANDOFF_TR 40 22, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 40 22] Unexpected event = %u!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 1 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 1, N=%d, <systime>  CP - PE [ENG_CP_TR 41 1] Initial Service Negotiation mode : %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 2 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 2, N=%d, <systime>  CP - PE [ENG_CP_TR 41 2] Request to switch Service Negotiation mode : %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 3 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 3, N=%d, <systime>  CP - PE [ENG_CP_TR 41 3] Switch from Service Option Negotiation to Service Negotiation
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 4 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 4, N=%d, <systime>  CP - PE [ENG_CP_TR 41 4] Switch from Service Negotiation to Service Option Negotiation
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 5 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 5, N=%d, <systime>  CP - PE [ENG_CP_TR 41 5] Already in requested Service Negotiation mode
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 6 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 6, N=%d, <systime>  CP - PE [ENG_CP_TR 41 6] Mobile Requested Service Option : %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 7 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 7, N=%d, <systime>  CP - PE [ENG_CP_TR 41 7] Start Service Negotiation in state : %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 8 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 8, N=%d, <systime>  CP - PE [ENG_CP_TR 41 8] Stop Service Negotiation State Machine, state : %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 9 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 9, N=%d, <systime>  CP - PE [ENG_CP_TR 41 9] Process Service Connect message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 10 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 10, N=%d, <systime>  CP - PE [ENG_CP_TR 41 10] ERROR : Invalid State, message ignored
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 11 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 11, N=%d, <systime>  CP - PE [ENG_CP_TR 41 11] Service Configuration ACCEPTED
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 12 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 41 12, N=%d, <systime>  CP - PE [ENG_CP_TR 41 12] The PE pends the Service Connect msg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 13 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 13, N=%d, <systime>  CP - PE [ENG_CP_TR 41 13] Service Connect with USE_TIME = 0
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 14 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 14, N=%d, <systime>  CP - PE [ENG_CP_TR 41 14] Service Configuration REJECTED
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 15 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 15, N=%d, <systime>  CP - PE [ENG_CP_TR 41 15] Process Service Option Control message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 16 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 16, N=%d, <systime>  CP - PE [ENG_CP_TR 41 16] Process Service Request message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 17 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 17, N=%d, <systime>  CP - PE [ENG_CP_TR 41 17] Process Service Response message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 18 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 18, N=%d, <systime>  CP - PE [ENG_CP_TR 41 18] Service Response message with bad sequence number
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 19 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 19, N=%d, <systime>  CP - PE [ENG_CP_TR 41 19] Service Negotiation Action Timeout
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 20 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 20, N=%d, <systime>  CP - PE [ENG_CP_TR 41 20] Service Option Request order Timeout
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 21 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 21, N=%d, <systime>  CP - PE [ENG_CP_TR 41 21] Service Negotiation Subfunction Timeout
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 22 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 22, N=%d, <systime>  CP - PE [ENG_CP_TR 41 22] Process Service Option Request order
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 23 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 23, N=%d, <systime>  CP - PE [ENG_CP_TR 41 23] Process Service Option Response order
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 24 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 24, N=%d, <systime>  CP - PE [ENG_CP_TR 41 24] Process Service Option Control order
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 25 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 25, N=%d, <systime>  CP - PE [ENG_CP_TR 41 25] Serv Cfg Complete Ind rcvd in invalid state!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 26 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 26, N=%d, <systime>  CP - PE [ENG_CP_TR 41 26] Service Negotiation State Machine >>
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 27 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 27, N=%d, <systime>  CP - PE [ENG_CP_TR 41 27] SerNegEvent : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ServNegEvent, uint32, base=enum:Service Neg Event Types
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 28 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 28, N=%d, <systime>  CP - PE [ENG_CP_TR 41 28] Received in ServNegState : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ServNegState, uint32, base=enum:Service Neg State Types
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 29 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 29, N=%d, <systime>  CP - PE [ENG_CP_TR 41 29] ERROR : Invalid State
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 30 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 30, N=%d, <systime>  CP - PE [ENG_CP_TR 41 30] Service Negotiation State Machine <<
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 31 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 31, N=%d, <systime>  CP - PE [ENG_CP_TR 41 31] Exit ServNegState : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ServNegState, uint32, base=enum:Service Neg State Types
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 32 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 41 32, N=%d, <systime>  CP - PE [ENG_CP_TR 41 32] The PE pends the Service Option Request order
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 33 Rsp
    printformat , ENG_CP_TR,  3, CP PE ENG_CP_TR 41 33, N=%d, <systime>  CP - PE [ENG_CP_TR 41 33] The PE pends the Service Option Response order
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 35 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 35, N=%d, <systime>  CP - PE [ENG_CP_TR 41 35] Unexpected event = %u!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 36 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 36, N=%d, <systime>  CP - PE [ENG_CP_TR 41 36] ERROR: Serv Neg State Machine stopped, ignore request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 41 37 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 41 37, N=%d, <systime>  CP - PE [ENG_CP_TR 41 37] Service Configuration Complete Indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 42 1 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 42 1, N=%d, <systime>  CP - PE [ENG_CP_TR 42 1] USE_TMSIs set to: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 42 2 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 42 2, N=%d, <systime>  CP - PE [ENG_CP_TR 42 2] Saving TMSI_ZONEs assignment
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 42 3 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 42 3, N=%d, <systime>  CP - PE [ENG_CP_TR 42 3] TMSI_ZONE_LENs:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 42 4 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 42 4, N=%d, <systime>  CP - PE [ENG_CP_TR 42 4] TMSI_ZONEs -
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 42 5 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 42 5, N=%d, <systime>  CP - PE [ENG_CP_TR 42 5] Saving TMSI assignment - code:%lu expTime:%lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 42 6 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 42 6, N=%d, <systime>  CP - PE [ENG_CP_TR 42 6] TMSI Zone Length:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 42 7 Rsp
    printformat , ENG_CP_TR,  5, CP PE ENG_CP_TR 42 7, N=%d, <systime>  CP - PE [ENG_CP_TR 42 7] TMSI Zone -
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 47 8 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 47 8, N=%d, <systime>  CP - PE [ENG_ERROR_TR 47 8] Bad NAWC in SysPar 1
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 47 11 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 47 11, N=%d, <systime>  CP - PE [ENG_ERROR_TR 47 11] Bad END field (0)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 47 12 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 47 12, N=%d, <systime>  CP - PE [ENG_ERROR_TR 47 12] Bad END field (1) -- discarding OMT
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 48 5 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 48 5, N=%d, <systime>  CP - PE [ENG_ERROR_TR 48 5] FVC word type %u discarded
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 48 6 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 48 6, N=%d, <systime>  CP - PE [ENG_ERROR_TR 48 6] FVC message too long
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 48 7 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 48 7, N=%d, <systime>  CP - PE [ENG_ERROR_TR 48 7] Wrong FVC word type [%u]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 48 8 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 48 8, N=%d, <systime>  CP - PE [ENG_ERROR_TR 48 8] Decrypting
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 49 10 Rsp
    printformat , ENG_ERROR_TR,  2, CP PE ENG_ERROR_TR 49 10, N=%d, <systime>  CP - PE [ENG_ERROR_TR 49 10] Invalid CPState:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 49 11 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 49 11, N=%d, <systime>  CP - PE [ENG_ERROR_TR 49 11] AMPS Unknown Timer expired
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 49 16 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 49 16, N=%d, <systime>  CP - PE [ENG_ERROR_TR 49 16] AMPS Unknown Timer expired
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 49 31 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 49 31, N=%d, <systime>  CP - PE [ENG_ERROR_TR 49 31] Bad Access Type
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 49 51 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 49 51, N=%d, <systime>  CP - PE [ENG_ERROR_TR 49 51]  AMPS Unexpected Timer expired:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 49 57 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 49 57, N=%d, <systime>  CP - PE [ENG_ERROR_TR 49 57] Unexpected Timer expired
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 49 96 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 49 96, N=%d, <systime>  CP - PE [ENG_ERROR_TR 49 96] SCC field = %u!!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 49 113 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 49 113, N=%d, <systime>  CP - PE [ENG_ERROR_TR 49 113] SCC field = %u!!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 49 126 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 49 126, N=%d, <systime>  CP - PE [ENG_ERROR_TR 49 126] PU/SNR -- illegal ORDQ [%u]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 49 137 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 49 137, N=%d, <systime>  CP - PE [ENG_ERROR_TR 49 137] PU/SNR -- illegal ORDQ [%u]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 49 151 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 49 151, N=%d, <systime>  CP - PE [ENG_ERROR_TR 49 151] PU/SNR -- illegal ORDQ [%u],,,
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 49 189 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 49 189, N=%d, <systime>  CP - PE [ENG_ERROR_TR 49 189]  AMPS Unexpected Event:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 52 7 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 52 7, N=%d, <systime>  CP - PE [ENG_ERROR_TR 52 7] Invalid VCState -- correcting!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 53 7 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 53 7, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 53 7] IDLE_HANDOFF_REC update - access Info
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 53 8 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 53 8, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 53 8] IDLE_HANDOFF_REC update - access Info
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_HANDOFF_TR 53 9 Rsp
    printformat , ENG_HANDOFF_TR,  5, CP PE ENG_HANDOFF_TR 53 9, N=%d, <systime>  CP - PE [ENG_HANDOFF_TR 53 9] Updating ACCESS_HO_LIST measurements
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 1 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 1, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 1] Using last channel info: band:%d channel:%d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 2 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 2, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 2] sspr size=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 57 3 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 57 3, N=%d, <systime>  CP - PE [ENG_ERROR_TR 57 3] bad acq rec=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 57 4 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 57 4, N=%d, <systime>  CP - PE [ENG_ERROR_TR 57 4] bad sys rec=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 5 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 5, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 5] got sspr nAcqs=%d, nSys=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 6 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 6, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 6] Found system Record:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 7 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 7, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 7] Best system in area:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 8 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 8, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 8] sys rec#=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 9 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 9, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 9] sid=%x, nid=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 10 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 10, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 10] Selected CDMABAND=%d CDMACH=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 12 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 12, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 12] Default System Selection set to ANALOG system.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 13 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 13, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 13] Default System Selection set to ANALOG system.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 14 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 14, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 14] Default System Selection set to Analog system.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 57 15 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 57 15, N=%d, <systime>  CP - PE [ENG_ERROR_TR 57 15] Inconsistent settings for OP_MODEs and NAM preferences - Setting to PCS
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 16 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 16, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 16] Default System Selection set to CELLULAR system.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 17 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 17, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 17] Default System Selection set to PCS system.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 18 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 18, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 18] Default System Selection set to PCS system.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 19 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 19, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 19] Default System Selection set to CELLULAR system.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 20 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 20, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 20] System Selection requested for CELLULAR CDMA system.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 21 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 21, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 21] System Selection requested for CELLULAR CDMA system.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 22 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 22, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 22] System Selection requested for Analog system.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 57 23 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 57 23, N=%d, <systime>  CP - PE [ENG_CP_TR 57 23] CELLULAR system now selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 57 24 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 57 24, N=%d, <systime>  CP - PE [ENG_CP_TR 57 24] ANALOG system now selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 57 25 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 57 25, N=%d, <systime>  CP - PE [ENG_CP_TR 57 25] ANALOG system now selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 57 26 Rsp
    printformat , ENG_CP_TR,  2, CP PE ENG_CP_TR 57 26, N=%d, <systime>  CP - PE [ENG_CP_TR 57 26] PCS system now selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 57 27 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 57 27, N=%d, <systime>  CP - PE [ENG_CP_TR 57 27] PCS system now selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CP_TR 57 28 Rsp
    printformat , ENG_CP_TR,  1, CP PE ENG_CP_TR 57 28, N=%d, <systime>  CP - PE [ENG_CP_TR 57 28] CELLULAR system now selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 57 29 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 57 29, N=%d, <systime>  CP - PE [ENG_ERROR_TR 57 29] Selection from unknown system! PCS system now selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 57 30 Rsp
    printformat , ENG_ERROR_TR,  1, CP PE ENG_ERROR_TR 57 30, N=%d, <systime>  CP - PE [ENG_ERROR_TR 57 30] Bad System Type value: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 31 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 31, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 31] AMPS System A selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 32 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 32, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 32] AMPS System B selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 33 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 33, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 33] AMPS System A selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 34 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 34, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 34] AMPS System B selected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 35 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 35, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 35] Reset OOSA to Phase 1
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 57 36 Rsp
    printformat , ENG_ERROR_TR,  5, CP PE ENG_ERROR_TR 57 36, N=%d, <systime>  CP - PE [ENG_ERROR_TR 57 36] Unknown NAM system pref - set to PCS system.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 37 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 37, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 37] AR_CDMA_PREFERRED a_b=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 38 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 38, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 38] AR_PCS_CDMA_BLOCKS numBlocks=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 39 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 39, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 39] AR_PCS_CDMA_CHANNELS numChans=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 40 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 40, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 40] pref/neg=%d, geo=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 41 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 41, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 41] Last channel Count =%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 42 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 42, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 42] aqrIndex=%d, roamInd=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 57 43 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 57 43, N=%d, <systime>  CP - PE [ENG_ERROR_TR 57 43] Bad AQR Type=%d\n
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 44 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 44, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 44] aqrIndex=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 45 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 45, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 45] chIndex=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 46 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 46, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 46] Acq Rec Num=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 47 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 47, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 47] AR_ANALOG a_b=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 48 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 48, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 48] AR_CDMA_STANDARD a_b=%d pri_sec=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 49 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 49, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 49] AR_CDMA_CUSTOM numChans=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 50 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 50, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 50] OOSA Entering Phase sleep cycle:%d - delay=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 51 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 51, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 51] OOSA Cycle %d out of %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 57 52 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 57 52, N=%d, <systime>  CP - PE [ENG_ERROR_TR 57 52] BAD ACQ Rec type=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 53 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 53, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 53] OOSA Phase %d - attempt=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 57 54 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 57 54, N=%d, <systime>  CP - PE [ENG_ERROR_TR 57 54] ACQ Rec#=%d, NOT found!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 56 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 56, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 56] noSspr:Selection - INIT
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 57 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 57, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 57] OOSA Entering Phase %d - delay=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 58 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 58, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 58] noSspr:Selection - POWERUP
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 59 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 59, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 59] noSspr:Selection - RETURN
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 60 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 60, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 60] Selected CDMABAND=%d CDMACH=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 61 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 61, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 61] noSspr:Selection - NEXT
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 62 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 62, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 62] Using last channel info: band:%d channel:%d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 63 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 63, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 63] Using last channel info: band:%d channel:%d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 64 Rsp
    printformat , ENG_CSS_TR,  3, CP PE ENG_CSS_TR 57 64, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 64] Selected CDMABAND=%d CDMACH=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 66 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 66, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 66] pri=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 67 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 67, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 67] sid=0x%x, nid=0x%x, not found in system table
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 57 68 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 57 68, N=%d, <systime>  CP - PE [ENG_ERROR_TR 57 68] too many (=%d) chans on list
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_ERROR_TR 57 69 Rsp
    printformat , ENG_ERROR_TR,  3, CP PE ENG_ERROR_TR 57 69, N=%d, <systime>  CP - PE [ENG_ERROR_TR 57 69] too many (=%d) acqs on list
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 70 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 70, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 70] sspr:Selection - INIT
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 71 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 71, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 71] sspr:Selection - POWERUP
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 72 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 72, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 72] sspr:Selection - RETURN
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_CSS_TR 57 73 Rsp
    printformat , ENG_CSS_TR,  5, CP PE ENG_CSS_TR 57 73, N=%d, <systime>  CP - PE [ENG_CSS_TR 57 73] sspr:Selection - NEXT
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 1 Rsp
    printformat ,  CAT_API,  2, CP RLP CAT_API 1 1, N=%d, <systime>  CP - RLP [CAT_API 1 1] Receiving rlpCpInitializeReq, txRateSet = %d, rxRateSet = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 2 Rsp
    printformat ,  CAT_API,  2, CP RLP CAT_API 1 2, N=%d, <systime>  CP - RLP [CAT_API 1 2] Receiving rlpCpRateInd, rateControl = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 3 Rsp
    printformat ,  CAT_API,  2, CP RLP CAT_API 1 3, N=%d, <systime>  CP - RLP [CAT_API 1 3] Receiving rlpHlCloseReq, channel = %d, flushPending = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 4 Rsp
    printformat ,  CAT_API,  2, CP RLP CAT_API 1 4, N=%d, <systime>  CP - RLP [CAT_API 1 4] Receiving rlpHlOpenReq, channel = %d, mode = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 5 Rsp
    printformat ,  CAT_API,  3, CP RLP CAT_API 1 5, N=%d, <systime>  CP - RLP [CAT_API 1 5] Receiving rlpHlRxRsp, channel = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 6 Rsp
    printformat ,  CAT_API,  3, CP RLP CAT_API 1 6, N=%d, <systime>  CP - RLP [CAT_API 1 6] Receiving rlpHlTxReq, channel = %d, len = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 7 Rsp
    printformat ,  CAT_API,  4, CP RLP CAT_API 1 7, N=%d, <systime>  CP - RLP [CAT_API 1 7] Receiving rlpMuxFrameInd: primaryRate = %d, secondaryRate =  %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 8 Rsp
    printformat ,  CAT_API,  4, CP RLP CAT_API 1 8, N=%d, <systime>  CP - RLP [CAT_API 1 8] Receiving rlpMuxFrameReq, primaryRate = %d, secondaryRate = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 9 Rsp
    printformat ,  CAT_API,  4, CP RLP CAT_API 1 9, N=%d, <systime>  CP - RLP [CAT_API 1 9] Receiving rlpMuxPromoteFrameReq, channel = %d, new rate = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 10 Rsp
    printformat ,  CAT_API,  2, CP RLP CAT_API 1 10, N=%d, <systime>  CP - RLP [CAT_API 1 10] rlpSysInitializeReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 11 Rsp
    printformat ,  CAT_API,  4, CP RLP CAT_API 1 11, N=%d, <systime>  CP - RLP [CAT_API 1 11] rlpMuxFrameReq: numSup = %d, secondary override = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 12 Rsp
    printformat ,  CAT_API,  2, CP RLP CAT_API 1 12, N=%d, <systime>  CP - RLP [CAT_API 1 12] Receiving rlpCfgGetStats, channel = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 13 Rsp
    printformat ,  CAT_API,  2, CP RLP CAT_API 1 13, N=%d, <systime>  CP - RLP [CAT_API 1 13] Receiving rlpCfgResetStats, channel = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 14 Rsp
    printformat ,  CAT_API,  2, CP RLP CAT_API 1 14, N=%d, <systime>  CP - RLP [CAT_API 1 14] Receiving rlpHlInactivityMonitorReq, channel = %d, inactivity_tmo = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP CAT_API 1 15 Rsp
    printformat ,  CAT_API,  4, CP RLP CAT_API 1 15, N=%d, <systime>  CP - RLP [CAT_API 1 15] Receiving rlpMuxSupplementalFrameInd: secondary=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 1 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 1, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 1] Setting V(R) = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 2 Rsp
    printformat , ENG_NO_CATEGORY,  3, CP RLP ENG_NO_CATEGORY 2 2, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 2] Processing re-assembled data frame, len = %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 3 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 3, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 3] Failing segment re-assembly: received a data frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 4 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 4, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 4] Failing segment re-assembly: received an Idle frame when using MuxOpt 2
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 5 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 5, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 5] Aborting segment re-assembly: received another FIRST segment frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 6 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 6, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 6] Failing segment re-assembly: received a segment frame with a non-matching seqNum
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 7 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 7, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 7] Failing segment re-assembly: reason = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 8 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 8, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 8] Failing segment re-assembly: re-assembled segment length invalid
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 9 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 9, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 9] Invalid segment type received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 10 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 10, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 10] Non-transparent mode established, RLP_DELAY = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 11 Rsp
    printformat , ENG_NO_CATEGORY,  3, CP RLP ENG_NO_CATEGORY 2 11, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 11] Passing frame data from rx resQ to IFC, seqNum =0x%04X, len = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 12 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 12, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 12] Ignoring segment frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 13 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 13, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 13] Invalid control frame received, CTL = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 14 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 14, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 14] Received non-NAK control frame during segment reassembly
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 15 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 15, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 15] Invalid NAK frame: a frame between first and last was >= V(S): 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 16 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 16, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 16] RET queue full
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 17 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 17, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 17] Received NAK frame, first = 0x%04Xd, last = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 18 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 18, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 18] Ignoring received data frame 0x%04X with seqNum < V(N): 0x%04X, and < V(R)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 19 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 19, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 19] Received another first segment frame with matching seqNum
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 20 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 20, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 20] Receiving out-of-sequence Idle or NAK frame, seq = 0x%04X, V(R) = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 21 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 2 21, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 21] Queueing frame 0x%04X for retransmission
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 22 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 22, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 22] process_internal_reset() called, Reset Reason = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Reset Reason, uint32, base=enum:RLP Reset Reason
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 23 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 23, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 23] Servicing NAK timers
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 24 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 24, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 24] Passing zero/partial-length frame SEQ = 0x%03X to IFC with count|len|timer|total Params = 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SEQ, uint32
    Params, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 25 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 25, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 25] Ignoring NAK frame, last: 0x%04X < first: 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 26 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 2 26, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 26] Comparing frame 0x%04X to V(S): 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 27 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 27, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 27] Enqueing NAK, numTransmissions = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 28 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 28, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 28] first = 0x%04X, last = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 31 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 31, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 31] Setting V(N) [L_V(N)] = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 32 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 32, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 32] Resetting RLP due to received data frame 0x%04X > V(R) and < V(N): 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 33 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 33, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 33] NAK queue full
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 34 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 34, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 34] Resetting RLP due to V(R): 0x%04X  < V(N): 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 35 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 35, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 35] Negotiated Encryption Mode = 0x%02X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 36 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 36, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 36] Ignoring non-data supplemental frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 37 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 37, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 37] Delayed frame: Treating received new data frame with seqNum: 0x%04X < L_V(R): 0x%04X as a retransmitted frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 38 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 38, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 38] Ignoring received retrans data frame 0x%04X with seqNum < L_V(N): 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 39 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 39, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 39] Ignoring received retrans data frame 0x%04X with seqNum >= L_V(R): 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 40 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 40, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 40] Setting L_V(R) =0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 41 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 41, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 41] Receiving out-of-sequence Idle or NAK frame, seq =0x%04X, L_V(R) =0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 42 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 42, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 42] Ignoring NAK frame, last: 0x%04X < first:0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 43 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 2 43, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 43] Comparing frame 0x%04X to V(S):0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 44 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 44, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 44] Invalid NAK frame: a frame between first and last was >= L_V(S): 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 45 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 2 45, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 45] Queueing frame 0x%04X for retransmission
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 46 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 46, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 46] RET queue full
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 47 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 47, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 47] Invalid NAK frame: a frame in nakRecord was seq:0x%04X >= L_V(S):0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 48 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 2 48, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 48] Queueing frame %d for retransmission
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 49 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 49, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 49] RET queue full
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 50 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 50, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 50] Invalid NAK frame: a frame in nakRecord was seq: 0x%04X >= L_V(S): 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 51 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 2 51, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 51] Queueing frame 0x%04X for retransmission
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 52 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 52, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 52] RET queue full
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 53 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 53, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 53] Data frame 0x%X found in NAK list is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    seq, uint32,
    found, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 54 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 54, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 54] Ignoring duplicate received data frame with seqNum:0x%04X, V(R):0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 55 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 55, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 55] Treating received new data frame %d as a retransmitted frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 56 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 56, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 56] Resetting RLP due to L_V(R): 0x%04X  < L_V(N): 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 57 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 57, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 57] Inserting received retrans data frame with L_V(N)=0x%04X, L_V(R)=0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    v_n, uint32
    v_r, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 58 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 58, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 58] Reset RLP due to received Fill frame with l_v_peer = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 59 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 59, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 59] reset RLP due to received invalid NAK frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 60 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 60, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 60] reset RLP due to received invalid Idle frame segNum = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 61 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 61, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 61] Reset RLP due to L_V(R): 0x%04X  < L_V(N): 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 62 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 62, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 62] Received all segmented frames SEQ = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 63 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 63, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 63] Received Nak00 frames
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 64 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 64, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 64] Ignoring NAK frame due to last:0x%04X < first: 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 65 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 2 65, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 65] Comparing frame %d to V(S): %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 66 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 66, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 66] Reset RLP due to received invalid NAK frame: a frame between first and last was >= L_V(S): %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 67 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 2 67, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 67] Queueing frame %d for retransmission
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 68 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 68, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 68] RET queue full
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 69 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 69, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 69] Received Nak01 frames at SEQ=0x%x map=0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    seq, uint32
    map, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 70 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 70, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 70] Reset RLP due to received invalid NAK frame: a frame in nakRecord was seq: %d >= L_V(S): %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 71 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 2 71, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 71] Queueing frame %d for retransmission
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 72 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 72, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 72] RET queue full
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 73 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 73, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 73] Reset RLP due to received invalid NAK frame: a frame in nakRecord was seq: %d >= L_V(S): %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 74 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 2 74, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 74] Queueing frame %d for retransmission
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 75 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 75, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 75] RET queue full
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 76 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 76, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 76] Received Nak10 frames at SEQ=0x%x SegStart=0x%8x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 77 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 77, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 77] Reset RLP due to received invalid NAK frame: a frame in nakRecord was seq: %d >= L_V(S): %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 78 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 2 78, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 78] Queueing frame %d for retransmission
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 79 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 79, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 79] RET queue full
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 80 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 80, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 80] Received Nak11 frames
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 81 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 81, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 81] Reset RLP due to received invalid NAK frame: a frame between first and last was >= L_V(S): %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 82 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 2 82, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 82] Queueing frame %d for retransmission, first seq and len = 0x%8x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 83 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 2 83, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 83] RET queue full
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 84 Rsp
    printformat , ENG_NO_CATEGORY,  6, CP RLP ENG_NO_CATEGORY 2 84, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 84] RLP3 NAK txNum = %d, nakType = %d, recNum = %d, nakFirstSeq = 0x%3x, nakLastSeq = 0x%3x, nakSeqMap = 0x%2x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    txNum, uint32
    nakType, uint32
    recNum, uint32
    nakFirstSeq, uint32
    nakLastSeq, uint32
    nakSeqMap, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 2 85 Rsp
    printformat , ENG_NO_CATEGORY,  7, CP RLP ENG_NO_CATEGORY 2 85, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 2 85] RLP3 NAK txNum = %d, nakType = %d, recNum = %d, nakFrameSeq = 0x%3x, nakFirstSegSeq = 0x%3x, nakLastSegSeq = 0x%3x, nakLenSegSeq = 0x%3x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    txNum, uint32
    nakType, uint32
    recNum, uint32
    nakFrameSeq, uint32
    nakFirstSegSeq, uint32
    nakLastSegSeq, uint32
    nakLenSegSeq, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 1 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 1, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 1] Decoding full rate format B data frame, seqNum = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 2 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 2, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 2] Decoding invalid full-primary-1 frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 3 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 3, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 3] Decoding full rate format B data frame, seqNum = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 4 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 4, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 4] Decoding invalid full-primary-2 frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 5 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 3 5, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 5] Decoding Rate 1/8 Idle frame, seqNum = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 6 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 3 6, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 6] Decoding 20-bit Idle frame, seqNum = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 7 Rsp
    printformat , ENG_NO_CATEGORY,  4, CP RLP ENG_NO_CATEGORY 3 7, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 7] Decoding 20-bit ISF frame, seqNum = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 8 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 8, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 8] Invalidating 20-bit frame due to bad ISF = 0x%X, seqNum = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 9 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 9, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 9] Decoding control frame, CTL = 0x%02.2X SEQ = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 10 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 10, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 10] Decoding segment frame, CTL = 0x%X, SEQ = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 11 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 11, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 11] Decoding data frame, seqNum = %d, data len = %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 12 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 12, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 12] Received an Encrypted Mode NAK frame - invalid
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 13 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 13, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 13] Decode RLP3 segment frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 14 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 14, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 14] Invalidating Primary Rate 1/8 Idle frame: seqNum in-range, not identical to preceeding frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 15 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 15, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 15] Invalidating Primary Rate 1/8 Idle frame: seqNum out of range
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 16 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 16, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 16] Resetting RLP: received 3 consecutive out-of-range Rate 1/8 Idle frames with seqNum < V(R)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 17 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 17, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 17] Invalidating Primary Rate 1/8 frame: seqNum out-of-range, not identical to preceeding frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 18 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 18, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 18] NAK control frame: first = %d, last = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 19 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 19, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 19] Invalidating Segment frame due to invalid LEN = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 20 Rsp
    printformat , ENG_NO_CATEGORY,  4, CP RLP ENG_NO_CATEGORY 3 20, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 20] Segment frame: data bytes = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 21 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 21, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 21] Declaring erasure due to bad FCS in Rate 1/8 Idle frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 22 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 3 22, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 22] Decoding a blank frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 23 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 23, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 23] Declaring erasure due to bad FCS in a 20-bit frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 24 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 24, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 24] Declaring erasure due to bad FCS in controlframe
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 25 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 25, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 25] Receiving bad frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 26 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 26, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 26] Decoding full rate format B RLP2 primary data frame, seqNum = %d, REXMIT = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 27 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 27, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 27] Decoding invalid RLP2 primary full rate frame, Rate Set 1
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 28 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 28, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 28] Decoding full rate format B RLP2 primary data frame, seqNum = %d, REXMIT = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 29 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 29, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 29] Decoding invalid RLP2 primary full rate frame, Rate Set 2
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 30 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 30, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 30] Decoding full rate format B RLP2 secondary data frame, seqNum = %d, REXMIT = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 31 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 31, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 31] Decoding invalid RLP2 secondary full rate frame, Rate Set 1
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 32 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 32, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 32] Decoding full rate format B RLP2 secondary data frame, seqNum = %d, REXMIT = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 33 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 33, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 33] Decoding invalid RLP2 secondary full rate frame, Rate Set 2
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 34 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 34, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 34] Decoding control frame, CTL = 0x%02.2X SEQ = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 35 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 35, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 35] RLP2 NAK control frame: first = %d, last = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 36 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 36, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 36] Declaring erasure due to bad FCS in controlframe
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 37 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 37, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 37] Declaring erasure due to bad FCS in controlframe
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 38 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 38, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 38] Invalid NAK control frame: type = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 39 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 39, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 39] RLP2 NAK01 control frame: L_SEQ_HI = %d, numNakRecords = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 40 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 40, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 40] Received an non RLP2 CTL frame - invalid
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 41 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 41, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 41] Declaring erasure due to bad FCS in controlframe
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 42 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 42, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 42] Decoding RLP2 data frame, seqNum = %d, data len = %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 43 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 43, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 43] RLP2 NAK01 nakRecord: NAK_Map_Seq = %d, NAK_Map = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 44 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 44, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 44] Declaring erasure due to bad FCS in controlframe
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 45 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 45, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 45] Decode RLP3 NAK00, fisrtSeqNum = 0x%04X, lastSeqNum = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    data1, uint32
    data2, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 3 46 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 3 46, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 3 46] Decode RLP3 NAK01, fisrtSeqNum = 0x%04X, nakMap = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    data1, uint32
    data2, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 1 Rsp
    printformat , ENG_NO_CATEGORY,  4, CP RLP ENG_NO_CATEGORY 4 1, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 1] Encoding Blank frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 2 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 2, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 2] Encoding control frame, CTL = 0x%2.2X, SEQ = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 3 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 3, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 3] Encoding data frame, seqNum = %d, data len = %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 4 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 4 4, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 4] Encoding Idle frame, seqNum = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 5 Rsp
    printformat , ENG_NO_CATEGORY,  4, CP RLP ENG_NO_CATEGORY 4 5, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 5] Encoding segment frame, CTL = 0x%02.2X, SEQ = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 6 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 6, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 6] NAK control frame: first = %d, last = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 7 Rsp
    printformat , ENG_NO_CATEGORY,  4, CP RLP ENG_NO_CATEGORY 4 7, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 7] Segment frame: %d data bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 8 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 4 8, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 8] rlpEncodeFrame called with type = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 9 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 9, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 9] Encoding control frame, CTL = 0x%2.2X, SEQ = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 10 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 10, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 10] RLP3 NAK10 record: First_S_Seq = %d, Last_S_Seq = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 11 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 11, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 11] RLP3 NAK10 record: Seq = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 12 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 12, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 12] RLP2 NAK01 nakRecord: NAK_Map_Seq = %d, NAK_Map = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 13 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 13, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 13] Encoding RLP2 data frame, seqNum = %d, data len = %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 14 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 14, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 14] Encoding control frame, CTL = 0x%2.2X, SEQ = 0x%02X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 15 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 15, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 15] RLP3 NAK frame record count = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 16 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 16, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 16] RLP3 NAK00 record: First = 0x%04X, Last = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    First, uint32
    Last, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 17 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 17, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 17] RLP3 NAK01 record: Seq =0x%04X, Map = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Seq, uint32
    Map, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 18 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 18, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 18] RLP3 NAK10 record: Seq = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Seq, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 19 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 19, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 19] RLP3 NAK10 record: First_S_Seq = 0x%04X, Last_S_Seq = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    First_S_Seq, uint32
    Last_S_Seq, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 20 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 20, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 20] RLP3 NAK11 record: Seq = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Seq, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 21 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 21, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 21] RLP3 NAK11 record: First_S_Seq = 0x%04X, Len_S_Seq = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    First_S_Seq, uint32
    Len_S_Seq, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 22 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 4 22, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 22] Encoding RLP3 Idle frame, seqNum = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    seqNum, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 23 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 4 23, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 23] Encoding RLP3 fill frame, seqNum = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    seqNum, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 24 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 4 24, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 24] Encoding RLP3 segment frame, seqNum = 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    seqNum, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 25 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 4 25, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 25] Encoding RLP3 data frame, seqNum = 0x%04X, data len = %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    seqNum, uint32
    data len, uint32
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 26 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 4 26, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 26] Encoding RLP3 format C frame, seqNum = 0x%04
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 27 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 4 27, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 27] Encoding RLP3 format D frame, seqNum = 0x%04
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 28 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 4 28, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 28] Encoding RLP3 nakType = %x, seqNum = 0x%04
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 29 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 4 29, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 29] Encoding RLP3 NAK 10  first seg = %x, last seg = %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 4 30 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 4 30, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 4 30] Encoding RLP3 NAK 11  first seg = %x, last seg = %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 5 1 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 5 1, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 5 1] Computed FCS16 = 0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 5 2 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 5 2, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 5 2] Checked FCS16 = 0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 5 3 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 5 3, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 5 3] Computed FCS8 = 0x%02x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 6 1 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 6 1, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 6 1] Receiving %d-byte frame indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 6 2 Rsp
    printformat , ENG_NO_CATEGORY,  2, CP RLP ENG_NO_CATEGORY 6 2, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 6 2] Setting rx-data pending due to HL not ready (rxHold exactly full)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 6 3 Rsp
    printformat , ENG_NO_CATEGORY,  2, CP RLP ENG_NO_CATEGORY 6 3, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 6 3] Setting rx-data pending due to HL not ready (rxHold overflow)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 6 4 Rsp
    printformat , ENG_NO_CATEGORY,  2, CP RLP ENG_NO_CATEGORY 6 4, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 6 4] Setting rx-data pending due to HL not ready (tmo)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 6 5 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 6 5, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 6 5] transmit_frame: Emptying txHoldQ, 0X%x bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 6 6 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 6 6, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 6 6] transmit_frame: Pass SEQ=0X%x, mpBuf 0X%8x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 6 7 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 6 7, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 6 7] transmit_frame: txLen is zero
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 6 8 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 6 8, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 6 8] transmit_frame: Emptying txReq, 0X%x bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 6 9 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 6 9, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 6 9] No of pending %d, To send data %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 6 10 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 6 10, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 6 10] transmit_frame: txReq cannot be transferred to txHoldQ
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 6 11 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 6 11, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 6 11] transmit_frame: transferring txReq to txHoldQ
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 6 12 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 6 12, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 6 12] Transferring rlpHlTxReq to txHoldQ
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 6 13 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 6 13, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 6 13] Setting HL txReady FALSE
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 7 1 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 7 1, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 7 1] Non-transparent RLP assigned to internal CTL channel %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 7 2 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 7 2, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 7 2] Transparent RLP assigned to internal CTL channel %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 7 3 Rsp
    printformat , ENG_NO_CATEGORY,  1, CP RLP ENG_NO_CATEGORY 7 3, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 7 3] Processing external reset for channel %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 9 1 Rsp
    printformat , ENG_NO_CATEGORY,  5, CP RLP ENG_NO_CATEGORY 9 1, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 9 1] Retransmitting frame %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 9 2 Rsp
    printformat , ENG_NO_CATEGORY,  0, CP RLP ENG_NO_CATEGORY 9 2, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 9 2] Cannot retransmit FIRST segment of frame %d due to insufficientavailable rate
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 9 3 Rsp
    printformat , ENG_NO_CATEGORY,  0, CP RLP ENG_NO_CATEGORY 9 3, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 9 3] Retransmitting FIRST segment of frame %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 9 4 Rsp
    printformat , ENG_NO_CATEGORY,  0, CP RLP ENG_NO_CATEGORY 9 4, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 9 4] Retransmitting SECOND segment of frame %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 9 5 Rsp
    printformat , ENG_NO_CATEGORY,  0, CP RLP ENG_NO_CATEGORY 9 5, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 9 5] Retransmitting LAST segment of frame %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 10 1 Rsp
    printformat , ENG_NO_CATEGORY,  0, CP RLP ENG_NO_CATEGORY 10 1, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 10 1] Abort timer expired, data lost
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 11 1 Rsp
    printformat , ENG_NO_CATEGORY,  0, CP RLP ENG_NO_CATEGORY 11 1, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 11 1] RLP channel gets reset.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 11 2 Rsp
    printformat , ENG_NO_CATEGORY,  0, CP RLP ENG_NO_CATEGORY 11 2, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 11 2] Retransmitting Tx %d bytes of frame for %d times
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 11 3 Rsp
    printformat , ENG_NO_CATEGORY,  0, CP RLP ENG_NO_CATEGORY 11 3, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 11 3] Receiving %d bytes of frame for %d times
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 11 4 Rsp
    printformat , ENG_NO_CATEGORY,  0, CP RLP ENG_NO_CATEGORY 11 4, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 11 4] Retransmitting Tx frame for %d times
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 11 5 Rsp
    printformat , ENG_NO_CATEGORY,  0, CP RLP ENG_NO_CATEGORY 11 5, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 11 5] Sending NAK frame for %d times to ask for retransmission
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP RLP ENG_NO_CATEGORY 11 6 Rsp
    printformat , ENG_NO_CATEGORY,  0, CP RLP ENG_NO_CATEGORY 11 6, N=%d, <systime>  CP - RLP [ENG_NO_CATEGORY 11 6] %d RLP Rx frames are lost
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 1 Rsp
    printformat , CAT_PACKET,  2, CP PPP CAT_PACKET 2 1, N=%d, <systime>  CP - PPP [CAT_PACKET 2 1] Packet length exceeds peer's MRU
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 2 Rsp
    printformat , CAT_PACKET,  2, CP PPP CAT_PACKET 2 2, N=%d, <systime>  CP - PPP [CAT_PACKET 2 2] Sending PPP(LCP) Packet %d bytes, port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ByteCnt, uint32
    Port, uint32
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 3 Rsp
    printformat , CAT_PACKET,  5, CP PPP CAT_PACKET 2 3, N=%d, <systime>  CP - PPP [CAT_PACKET 2 3]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 4 Rsp
    printformat , CAT_PACKET,  2, CP PPP CAT_PACKET 2 4, N=%d, <systime>  CP - PPP [CAT_PACKET 2 4] Packet length exceeds peer's MRU
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 5 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 2 5, N=%d, <systime>  CP - PPP [CAT_PACKET 2 5] Getting PPP Packet from PBIOS
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 2 6 Rsp
    printformat , CAT_PHASE,  2, CP PPP CAT_PHASE 2 6, N=%d, <systime>  CP - PPP [CAT_PHASE 2 6] LQR not negotiated
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 7 Rsp
    printformat , CAT_PACKET,  2, CP PPP CAT_PACKET 2 7, N=%d, <systime>  CP - PPP [CAT_PACKET 2 7] VJ Decompression failed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 8 Rsp
    printformat , CAT_PACKET,  2, CP PPP CAT_PACKET 2 8, N=%d, <systime>  CP - PPP [CAT_PACKET 2 8] VJ not negotiated
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 9 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 2 9, N=%d, <systime>  CP - PPP [CAT_PACKET 2 9] No usable data in packet!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 10 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 2 10, N=%d, <systime>  CP - PPP [CAT_PACKET 2 10] Using Protocol Compression
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 11 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 2 11, N=%d, <systime>  CP - PPP [CAT_PACKET 2 11] Using Address/Control Compression
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 12 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 2 12, N=%d, <systime>  CP - PPP [CAT_PACKET 2 12] Address/Control Fields are compressed out
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 13 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 2 13, N=%d, <systime>  CP - PPP [CAT_PACKET 2 13] Decompressing Protocol Field
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 2 14 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 2 14, N=%d, <systime>  CP - PPP [CAT_ERROR 2 14] HDLC Packet not properly framed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 15 Rsp
    printformat , CAT_PACKET,  2, CP PPP CAT_PACKET 2 15, N=%d, <systime>  CP - PPP [CAT_PACKET 2 15] Sending PPP Packet %d bytes, port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ByteCnt, uint32
    Port, uint32
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 16 Rsp
    printformat , CAT_PACKET,  5, CP PPP CAT_PACKET 2 16, N=%d, <systime>  CP - PPP [CAT_PACKET 2 16]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 17 Rsp
    printformat , CAT_PACKET,  2, CP PPP CAT_PACKET 2 17, N=%d, <systime>  CP - PPP [CAT_PACKET 2 17] Packet length exceeds peer's MRU
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 2 18 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 2 18, N=%d, <systime>  CP - PPP [CAT_PACKET 2 18] Received NON-PPP frame
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_GENERAL 2 100 Rsp
    printformat , CAT_GENERAL,  5, CP PPP CAT_GENERAL 2 100, N=%d, <systime>  CP - PPP [CAT_GENERAL 2 100] value of acomp 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_GENERAL 2 101 Rsp
    printformat , CAT_GENERAL,  5, CP PPP CAT_GENERAL 2 101, N=%d, <systime>  CP - PPP [CAT_GENERAL 2 101] value of pcomp 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 3 1 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 3 1, N=%d, <systime>  CP - PPP [CAT_ERROR 3 1] Invalid Link Phase
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 2 Rsp
    printformat , CAT_PHASE,  3, CP PPP CAT_PHASE 3 2, N=%d, <systime>  CP - PPP [CAT_PHASE 3 2] Link Dead -- Flushing Rx Packet
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 3 Rsp
    printformat , CAT_PHASE,  2, CP PPP CAT_PHASE 3 3, N=%d, <systime>  CP - PPP [CAT_PHASE 3 3] Link Dead -- Event %u not processed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 4 Rsp
    printformat , CAT_PHASE,  4, CP PPP CAT_PHASE 3 4, N=%d, <systime>  CP - PPP [CAT_PHASE 3 4] No Link Quality or Authentication negotiated
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 5 Rsp
    printformat , CAT_PHASE,  4, CP PPP CAT_PHASE 3 5, N=%d, <systime>  CP - PPP [CAT_PHASE 3 5] No LQR implemented
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 6 Rsp
    printformat , CAT_PHASE,  4, CP PPP CAT_PHASE 3 6, N=%d, <systime>  CP - PPP [CAT_PHASE 3 6] Starting NCP machine
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 7 Rsp
    printformat , CAT_PHASE,  3, CP PPP CAT_PHASE 3 7, N=%d, <systime>  CP - PPP [CAT_PHASE 3 7] LQR packet received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 3 8 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 3 8, N=%d, <systime>  CP - PPP [CAT_PACKET 3 8] Port %d received %s type packet
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Port, uint32
    Prot, uint32, base=enum:PPP Prot Type
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 9 Rsp
    printformat , CAT_PHASE,  3, CP PPP CAT_PHASE 3 9, N=%d, <systime>  CP - PPP [CAT_PHASE 3 9] LCP Event %u not processed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 10 Rsp
    printformat , CAT_PHASE,  3, CP PPP CAT_PHASE 3 10, N=%d, <systime>  CP - PPP [CAT_PHASE 3 10] LCP: Got LCP Packet at port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    portNumber, uint32
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 11 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 3 11, N=%d, <systime>  CP - PPP [CAT_PHASE 3 11]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 12 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 12, N=%d, <systime>  CP - PPP [CAT_EVENT 3 12] Configure-Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 13 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 13, N=%d, <systime>  CP - PPP [CAT_EVENT 3 13] Configure-Ack
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 14 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 14, N=%d, <systime>  CP - PPP [CAT_EVENT 3 14] Config NAK/REJ (3/4) - %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 15 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 15, N=%d, <systime>  CP - PPP [CAT_EVENT 3 15] Terminate-Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 16 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 16, N=%d, <systime>  CP - PPP [CAT_EVENT 3 16] Terminate-Ack
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 17 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 17, N=%d, <systime>  CP - PPP [CAT_EVENT 3 17] Code/Prot REJ (7/8) -%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 18 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 18, N=%d, <systime>  CP - PPP [CAT_EVENT 3 18] Echo-Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 19 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 19, N=%d, <systime>  CP - PPP [CAT_EVENT 3 19] Echo-Reply
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 20 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 20, N=%d, <systime>  CP - PPP [CAT_EVENT 3 20] Discard-Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 21 Rsp
    printformat , CAT_PHASE,  3, CP PPP CAT_PHASE 3 21, N=%d, <systime>  CP - PPP [CAT_PHASE 3 21] NCP -- Event %u not processed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 22 Rsp
    printformat , CAT_PHASE,  2, CP PPP CAT_PHASE 3 22, N=%d, <systime>  CP - PPP [CAT_PHASE 3 22] NCP: Got IPCP Packet
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 23 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 3 23, N=%d, <systime>  CP - PPP [CAT_PHASE 3 23]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 24 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 24, N=%d, <systime>  CP - PPP [CAT_EVENT 3 24] Configure-Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 25 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 25, N=%d, <systime>  CP - PPP [CAT_EVENT 3 25] Configure-Ack
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 26 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 26, N=%d, <systime>  CP - PPP [CAT_EVENT 3 26] Config NAK/REJ (3/4) - %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 27 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 27, N=%d, <systime>  CP - PPP [CAT_EVENT 3 27] Terminate-Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 28 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 28, N=%d, <systime>  CP - PPP [CAT_EVENT 3 28] Terminate-Ack
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 3 29 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 3 29, N=%d, <systime>  CP - PPP [CAT_EVENT 3 29] Code Reject
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 30 Rsp
    printformat , CAT_PHASE,  4, CP PPP CAT_PHASE 3 30, N=%d, <systime>  CP - PPP [CAT_PHASE 3 30] Send Data Request -- Protocol = 0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 31 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 3 31, N=%d, <systime>  CP - PPP [CAT_PHASE 3 31]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 3 32 Rsp
    printformat , CAT_PHASE,  1, CP PPP CAT_PHASE 3 32, N=%d, <systime>  CP - PPP [CAT_PHASE 3 32] PPP Port -> %d, Phase -> %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Port, uint32
    Phase, uint32, base=enum:PPP Phase Type
End

Begin Message, CP Trace CP PPP CAT_PACKET 3 33 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 3 33, N=%d, <systime>  CP - PPP [CAT_PACKET 3 33] DoAuthPhase: Packet received, prot %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 3 34 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 3 34, N=%d, <systime>  CP - PPP [CAT_PACKET 3 34] DoMnrpPhase: Packet received, prot %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 1 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 4 1, N=%d, <systime>  CP - PPP [CAT_PACKET 4 1] Building LCP Config-Rqst
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 2 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 4 2, N=%d, <systime>  CP - PPP [CAT_PACKET 4 2] Options Bitmap => 0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 3 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 4 3, N=%d, <systime>  CP - PPP [CAT_PACKET 4 3] Building NCP Config-Rqst
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 4 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 4 4, N=%d, <systime>  CP - PPP [CAT_PACKET 4 4] Options Bitmap => 0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 5 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 4 5, N=%d, <systime>  CP - PPP [CAT_PACKET 4 5] Building Config-Ack
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 6 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 4 6, N=%d, <systime>  CP - PPP [CAT_PACKET 4 6] Building Terminate-Request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 7 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 4 7, N=%d, <systime>  CP - PPP [CAT_PACKET 4 7] Building Terminate-Ack
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 8 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 4 8, N=%d, <systime>  CP - PPP [CAT_PACKET 4 8] Building Code-Reject
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 9 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 4 9, N=%d, <systime>  CP - PPP [CAT_PACKET 4 9] Building Echo-Reply
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 4 10 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 4 10, N=%d, <systime>  CP - PPP [CAT_ERROR 4 10] Unsupported Option 0x%04X!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 4 11 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 4 11, N=%d, <systime>  CP - PPP [CAT_ERROR 4 11] Unsupported Option
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 12 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 4 12, N=%d, <systime>  CP - PPP [CAT_PACKET 4 12] Unsupported Option (0x%04X)!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 13 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 4 13, N=%d, <systime>  CP - PPP [CAT_PACKET 4 13] Ack Options Bitmap => 0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 14 Rsp
    printformat , CAT_PACKET,  2, CP PPP CAT_PACKET 4 14, N=%d, <systime>  CP - PPP [CAT_PACKET 4 14] Options don't match our Request!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 15 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 4 15, N=%d, <systime>  CP - PPP [CAT_PACKET 4 15] Unsupported Option (%u)!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 16 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 4 16, N=%d, <systime>  CP - PPP [CAT_PACKET 4 16] Ack Options Bitmap => 0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 17 Rsp
    printformat , CAT_PACKET,  2, CP PPP CAT_PACKET 4 17, N=%d, <systime>  CP - PPP [CAT_PACKET 4 17] Options don't match our Request!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 18 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 4 18, N=%d, <systime>  CP - PPP [CAT_PACKET 4 18] Unsupported option (NAK)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 19 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 4 19, N=%d, <systime>  CP - PPP [CAT_PACKET 4 19] Unsupported option (REJ)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 20 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 4 20, N=%d, <systime>  CP - PPP [CAT_PACKET 4 20] Unsupported option (NAK)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 21 Rsp
    printformat , CAT_PACKET,  3, CP PPP CAT_PACKET 4 21, N=%d, <systime>  CP - PPP [CAT_PACKET 4 21] Unsupported option (REJ)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 22 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 4 22, N=%d, <systime>  CP - PPP [CAT_PACKET 4 22] Checking Terminate-Ack
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 23 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 4 23, N=%d, <systime>  CP - PPP [CAT_PACKET 4 23] Checking Code-Reject
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 24 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 4 24, N=%d, <systime>  CP - PPP [CAT_PACKET 4 24] Checking Protocol-Reject
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 25 Rsp
    printformat , CAT_PACKET,  2, CP PPP CAT_PACKET 4 25, N=%d, <systime>  CP - PPP [CAT_PACKET 4 25] Making LQR Rx packet
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 26 Rsp
    printformat , CAT_PACKET,  2, CP PPP CAT_PACKET 4 26, N=%d, <systime>  CP - PPP [CAT_PACKET 4 26] Packet has our Magic-Number!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 27 Rsp
    printformat , CAT_PACKET,  1, CP PPP CAT_PACKET 4 27, N=%d, <systime>  CP - PPP [CAT_PACKET 4 27] type = 0x%02X , Length= 0x%02X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 28 Rsp
    printformat , CAT_PACKET,  1, CP PPP CAT_PACKET 4 28, N=%d, <systime>  CP - PPP [CAT_PACKET 4 28] Protol option0 =  0x%02X, Protocol option1= 0x%02X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 29 Rsp
    printformat , CAT_PACKET,  1, CP PPP CAT_PACKET 4 29, N=%d, <systime>  CP - PPP [CAT_PACKET 4 29] LCP Auth NAKed, closing
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 30 Rsp
    printformat , CAT_PACKET,  1, CP PPP CAT_PACKET 4 30, N=%d, <systime>  CP - PPP [CAT_PACKET 4 30] LCP Auth rejected, closing
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 4 31 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 4 31, N=%d, <systime>  CP - PPP [CAT_PACKET 4 31] Building Protocol-Reject
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_GENERAL 5 1 Rsp
    printformat , CAT_GENERAL,  2, CP PPP CAT_GENERAL 5 1, N=%d, <systime>  CP - PPP [CAT_GENERAL 5 1] I/O Port Open Fail
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 5 2 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 5 2, N=%d, <systime>  CP - PPP [CAT_ERROR 5 2] Bad Rx buffer size (%u)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_GENERAL 5 3 Rsp
    printformat , CAT_GENERAL,  2, CP PPP CAT_GENERAL 5 3, N=%d, <systime>  CP - PPP [CAT_GENERAL 5 3] No Ports Available
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_GENERAL 5 4 Rsp
    printformat , CAT_GENERAL,  2, CP PPP CAT_GENERAL 5 4, N=%d, <systime>  CP - PPP [CAT_GENERAL 5 4] Send already in progress
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_FSM 5 5 Rsp
    printformat ,  CAT_FSM,  2, CP PPP CAT_FSM 5 5, N=%d, <systime>  CP - PPP [CAT_FSM 5 5] PPP LCP state -> %s, port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    state, uint32, base=enum:PPP State Type
    port, uint32, base=enum:Application Type and Port mapping
End

Begin Message, CP Trace CP PPP CAT_FSM 5 6 Rsp
    printformat ,  CAT_FSM,  2, CP PPP CAT_FSM 5 6, N=%d, <systime>  CP - PPP [CAT_FSM 5 6] PPP NCP state -> %s, port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    state, uint32, base=enum:PPP State Type
    port, uint32, base=enum:Application Type and Port mapping
End

Begin Message, CP Trace CP PPP CAT_GENERAL 5 7 Rsp
    printformat , CAT_GENERAL,  5, CP PPP CAT_GENERAL 5 7, N=%d, <systime>  CP - PPP [CAT_GENERAL 5 7] IP Header compression -> 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_GENERAL 5 8 Rsp
    printformat , CAT_GENERAL,  2, CP PPP CAT_GENERAL 5 8, N=%d, <systime>  CP - PPP [CAT_GENERAL 5 8] Discarding ValidateUserRsp: No auth protocol active
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 6 1 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 6 1, N=%d, <systime>  CP - PPP [CAT_ERROR 6 1] Rx Packet Overrun
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 6 2 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 6 2, N=%d, <systime>  CP - PPP [CAT_ERROR 6 2] Bad Restart Counter option
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 6 3 Rsp
    printformat , CAT_EVENT,  4, CP PPP CAT_EVENT 6 3, N=%d, <systime>  CP - PPP [CAT_EVENT 6 3] Setting Restart Counter to %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 6 4 Rsp
    printformat , CAT_EVENT,  5, CP PPP CAT_EVENT 6 4, N=%d, <systime>  CP - PPP [CAT_EVENT 6 4] Zeroing Restart Counter
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 6 5 Rsp
    printformat , CAT_EVENT,  3, CP PPP CAT_EVENT 6 5, N=%d, <systime>  CP - PPP [CAT_EVENT 6 5] Sending Config NAK/REJ (3/4) - %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 6 6 Rsp
    printformat , CAT_EVENT,  5, CP PPP CAT_EVENT 6 6, N=%d, <systime>  CP - PPP [CAT_EVENT 6 6] Resetting LQR Statistics
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 6 7 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 6 7, N=%d, <systime>  CP - PPP [CAT_EVENT 6 7] Silent Discard, %s is WRONG  in port 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Reason, uint32,base=enum:Silent Discard Reason Type
    Port, uint32
End

Begin Message, CP Trace CP PPP CAT_EVENT 6 8 Rsp
    printformat , CAT_EVENT,  5, CP PPP CAT_EVENT 6 8, N=%d, <systime>  CP - PPP [CAT_EVENT 6 8] Send Data discarded
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 7 1 Rsp
    printformat ,  CAT_API,  3, CP PPP CAT_API 7 1, N=%d, <systime>  CP - PPP [CAT_API 7 1] Timeout event %u on Port %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 7 2 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 7 2, N=%d, <systime>  CP - PPP [CAT_ERROR 7 2] Can't find Port for Timer %u!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 7 3 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 7 3, N=%d, <systime>  CP - PPP [CAT_ERROR 7 3] PPP_PostEvent() to Invalid Port 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 7 4 Rsp
    printformat ,  CAT_API,  4, CP PPP CAT_API 7 4, N=%d, <systime>  CP - PPP [CAT_API 7 4] Opening Port
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 7 5 Rsp
    printformat ,  CAT_API,  4, CP PPP CAT_API 7 5, N=%d, <systime>  CP - PPP [CAT_API 7 5] Getting Configuration Data at port 0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 7 6 Rsp
    printformat ,  CAT_API,  2, CP PPP CAT_API 7 6, N=%d, <systime>  CP - PPP [CAT_API 7 6] port = 0x%04X, the 3rd byte is 0x%02X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 7 7 Rsp
    printformat ,  CAT_API,  2, CP PPP CAT_API 7 7, N=%d, <systime>  CP - PPP [CAT_API 7 7] Connecting Port 0%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 7 8 Rsp
    printformat ,  CAT_API,  2, CP PPP CAT_API 7 8, N=%d, <systime>  CP - PPP [CAT_API 7 8] Disconnecting Port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 7 9 Rsp
    printformat ,  CAT_API,  2, CP PPP CAT_API 7 9, N=%d, <systime>  CP - PPP [CAT_API 7 9] Closing Port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 7 10 Rsp
    printformat ,  CAT_API,  3, CP PPP CAT_API 7 10, N=%d, <systime>  CP - PPP [CAT_API 7 10] Getting Status for Port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 7 11 Rsp
    printformat ,  CAT_API,  4, CP PPP CAT_API 7 11, N=%d, <systime>  CP - PPP [CAT_API 7 11] PPP port %d sends %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 7 12 Rsp
    printformat ,  CAT_API,  4, CP PPP CAT_API 7 12, N=%d, <systime>  CP - PPP [CAT_API 7 12] PPP port %d receives %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 7 13 Rsp
    printformat ,  CAT_API,  4, CP PPP CAT_API 7 13, N=%d, <systime>  CP - PPP [CAT_API 7 13] Getting ValidateUserRsp
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 1 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 1, N=%d, <systime>  CP - PPP [CAT_EVENT 8 1] Up for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 2 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 2, N=%d, <systime>  CP - PPP [CAT_EVENT 8 2] Down for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 3 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 3, N=%d, <systime>  CP - PPP [CAT_EVENT 8 3] Open for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 4 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 4, N=%d, <systime>  CP - PPP [CAT_EVENT 8 4] Close for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 5 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 5, N=%d, <systime>  CP - PPP [CAT_EVENT 8 5] Timeout for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 6 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 6, N=%d, <systime>  CP - PPP [CAT_EVENT 8 6] RCR+ for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 7 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 7, N=%d, <systime>  CP - PPP [CAT_EVENT 8 7] RCR- for port %d at state %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 8 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 8, N=%d, <systime>  CP - PPP [CAT_EVENT 8 8] RCA for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 9 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 9, N=%d, <systime>  CP - PPP [CAT_EVENT 8 9] RCN for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 10 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 10, N=%d, <systime>  CP - PPP [CAT_EVENT 8 10] RTR for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 11 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 11, N=%d, <systime>  CP - PPP [CAT_EVENT 8 11] RTA for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 12 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 12, N=%d, <systime>  CP - PPP [CAT_EVENT 8 12] RUC for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 13 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 13, N=%d, <systime>  CP - PPP [CAT_EVENT 8 13] RXJ+ for port %d at state %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 14 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 14, N=%d, <systime>  CP - PPP [CAT_EVENT 8 14] RXJ for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 15 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 15, N=%d, <systime>  CP - PPP [CAT_EVENT 8 15] RXR Echo Request for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 16 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 16, N=%d, <systime>  CP - PPP [CAT_EVENT 8 16] RXR Echo Reply for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 17 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 17, N=%d, <systime>  CP - PPP [CAT_EVENT 8 17] RXR Discard Request for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 18 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 18, N=%d, <systime>  CP - PPP [CAT_EVENT 8 18] Tx done for port %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_EVENT 8 19 Rsp
    printformat , CAT_EVENT,  2, CP PPP CAT_EVENT 8 19, N=%d, <systime>  CP - PPP [CAT_EVENT 8 19] RUP for port %d protocol=0x%04X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 9 1 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 9 1, N=%d, <systime>  CP - PPP [CAT_ERROR 9 1] Invalid Tx Protocol!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 9 2 Rsp
    printformat , CAT_PACKET,  4, CP PPP CAT_PACKET 9 2, N=%d, <systime>  CP - PPP [CAT_PACKET 9 2] Decompressing Rx packet
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 9 3 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 9 3, N=%d, <systime>  CP - PPP [CAT_ERROR 9 3] Bad Rx Protocol
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_GENERAL 10 1 Rsp
    printformat , CAT_GENERAL,  5, CP PPP CAT_GENERAL 10 1, N=%d, <systime>  CP - PPP [CAT_GENERAL 10 1] Queueing Event type %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    EvType, uint32, base=enum:PPP Event Type
End

Begin Message, CP Trace CP PPP CAT_ERROR 10 2 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 10 2, N=%d, <systime>  CP - PPP [CAT_ERROR 10 2] Event Q full, event %s lost!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    EvType, uint32, base=enum:PPP Event Type
End

Begin Message, CP Trace CP PPP CAT_GENERAL 10 3 Rsp
    printformat , CAT_GENERAL,  5, CP PPP CAT_GENERAL 10 3, N=%d, <systime>  CP - PPP [CAT_GENERAL 10 3] Dequeued Event type %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    EvType, uint32, base=enum:PPP Event Type
End

Begin Message, CP Trace CP PPP CAT_PACKET 11 1 Rsp
    printformat , CAT_PACKET,  5, CP PPP CAT_PACKET 11 1, N=%d, <systime>  CP - PPP [CAT_PACKET 11 1] Packet not compressible
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 11 2 Rsp
    printformat , CAT_PACKET,  5, CP PPP CAT_PACKET 11 2, N=%d, <systime>  CP - PPP [CAT_PACKET 11 2] Sending compressed packet
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 11 3 Rsp
    printformat , CAT_PACKET,  5, CP PPP CAT_PACKET 11 3, N=%d, <systime>  CP - PPP [CAT_PACKET 11 3] Sending uncompressed packet
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 11 4 Rsp
    printformat , CAT_PACKET,  5, CP PPP CAT_PACKET 11 4, N=%d, <systime>  CP - PPP [CAT_PACKET 11 4] Rx packet not compressed TCP
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 11 5 Rsp
    printformat , CAT_PACKET,  5, CP PPP CAT_PACKET 11 5, N=%d, <systime>  CP - PPP [CAT_PACKET 11 5] Uncompressed TCP packet received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 11 6 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 11 6, N=%d, <systime>  CP - PPP [CAT_ERROR 11 6] Invalid state rxd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 11 7 Rsp
    printformat , CAT_PACKET,  5, CP PPP CAT_PACKET 11 7, N=%d, <systime>  CP - PPP [CAT_PACKET 11 7] Compressed TCP packet received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 11 8 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 11 8, N=%d, <systime>  CP - PPP [CAT_ERROR 11 8] Invalid or bad packet received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 11 9 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 11 9, N=%d, <systime>  CP - PPP [CAT_ERROR 11 9] Bad state index
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_ERROR 11 10 Rsp
    printformat , CAT_ERROR,  5, CP PPP CAT_ERROR 11 10, N=%d, <systime>  CP - PPP [CAT_ERROR 11 10] Packet data length < 0
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 12 1 Rsp
    printformat , CAT_PHASE,  3, CP PPP CAT_PHASE 12 1, N=%d, <systime>  CP - PPP [CAT_PHASE 12 1] Auth: Got PAP Packet
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 12 2 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 12 2, N=%d, <systime>  CP - PPP [CAT_PHASE 12 2]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 12 3 Rsp
    printformat , CAT_PHASE,  3, CP PPP CAT_PHASE 12 3, N=%d, <systime>  CP - PPP [CAT_PHASE 12 3] Auth: Got CHAP auth code = %d, state = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 12 4 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 12 4, N=%d, <systime>  CP - PPP [CAT_PHASE 12 4]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 12 5 Rsp
    printformat , CAT_PACKET,  1, CP PPP CAT_PACKET 12 5, N=%d, <systime>  CP - PPP [CAT_PACKET 12 5] Building CHAP response, password len=%d, total size=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 12 6 Rsp
    printformat , CAT_PACKET,  1, CP PPP CAT_PACKET 12 6, N=%d, <systime>  CP - PPP [CAT_PACKET 12 6] Building PAP Auth-Rqst
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 12 7 Rsp
    printformat , CAT_PACKET,  1, CP PPP CAT_PACKET 12 7, N=%d, <systime>  CP - PPP [CAT_PACKET 12 7] Sending PAP Auth-Ack/Nak
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 12 8 Rsp
    printformat , CAT_PACKET,  5, CP PPP CAT_PACKET 12 8, N=%d, <systime>  CP - PPP [CAT_PACKET 12 8]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 12 9 Rsp
    printformat , CAT_PACKET,  1, CP PPP CAT_PACKET 12 9, N=%d, <systime>  CP - PPP [CAT_PACKET 12 9] Sending CHAP success/failure
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PACKET 12 10 Rsp
    printformat , CAT_PACKET,  5, CP PPP CAT_PACKET 12 10, N=%d, <systime>  CP - PPP [CAT_PACKET 12 10]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 13 1 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 13 1, N=%d, <systime>  CP - PPP [CAT_PHASE 13 1] DeRegST0
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 13 2 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 13 2, N=%d, <systime>  CP - PPP [CAT_PHASE 13 2] DeRegST2
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 13 3 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 13 3, N=%d, <systime>  CP - PPP [CAT_PHASE 13 3] DeRegST3
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 13 4 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 13 4, N=%d, <systime>  CP - PPP [CAT_PHASE 13 4] ConnectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 13 5 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 13 5, N=%d, <systime>  CP - PPP [CAT_PHASE 13 5] DisconnectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 13 6 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 13 6, N=%d, <systime>  CP - PPP [CAT_PHASE 13 6] TimerST2
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 13 7 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 13 7, N=%d, <systime>  CP - PPP [CAT_PHASE 13 7] TimerST3
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 13 8 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 13 8, N=%d, <systime>  CP - PPP [CAT_PHASE 13 8] ChkTableSignal
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 13 9 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 13 9, N=%d, <systime>  CP - PPP [CAT_PHASE 13 9] Registered
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 13 10 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 13 10, N=%d, <systime>  CP - PPP [CAT_PHASE 13 10] CheckTable
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 13 11 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 13 11, N=%d, <systime>  CP - PPP [CAT_PHASE 13 11] Isc
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 13 12 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 13 12, N=%d, <systime>  CP - PPP [CAT_PHASE 13 12] Esq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 13 13 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 13 13, N=%d, <systime>  CP - PPP [CAT_PHASE 13 13] DeRegAll
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_PHASE 13 14 Rsp
    printformat , CAT_PHASE,  5, CP PPP CAT_PHASE 13 14, N=%d, <systime>  CP - PPP [CAT_PHASE 13 14] Error
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 13 15 Rsp
    printformat ,  CAT_API,  3, CP PPP CAT_API 13 15, N=%d, <systime>  CP - PPP [CAT_API 13 15] mnrpInitialize
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 13 16 Rsp
    printformat ,  CAT_API,  3, CP PPP CAT_API 13 16, N=%d, <systime>  CP - PPP [CAT_API 13 16] mnrpUiDeRegisterAllReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 13 17 Rsp
    printformat ,  CAT_API,  3, CP PPP CAT_API 13 17, N=%d, <systime>  CP - PPP [CAT_API 13 17] mnrpUiDeRegisterNEIReq id = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 13 18 Rsp
    printformat ,  CAT_API,  3, CP PPP CAT_API 13 18, N=%d, <systime>  CP - PPP [CAT_API 13 18] mnrpUiDeRegisterNEIReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 13 19 Rsp
    printformat ,  CAT_API,  3, CP PPP CAT_API 13 19, N=%d, <systime>  CP - PPP [CAT_API 13 19] nei.addr = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 13 20 Rsp
    printformat ,  CAT_API,  3, CP PPP CAT_API 13 20, N=%d, <systime>  CP - PPP [CAT_API 13 20] nei.asn = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 13 21 Rsp
    printformat ,  CAT_API,  3, CP PPP CAT_API 13 21, N=%d, <systime>  CP - PPP [CAT_API 13 21] nei.arn
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 13 22 Rsp
    printformat ,  CAT_API,  3, CP PPP CAT_API 13 22, N=%d, <systime>  CP - PPP [CAT_API 13 22] mnrpSNUnitDataInd length = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 13 23 Rsp
    printformat ,  CAT_API,  3, CP PPP CAT_API 13 23, N=%d, <systime>  CP - PPP [CAT_API 13 23] data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 13 24 Rsp
    printformat ,  CAT_API,  3, CP PPP CAT_API 13 24, N=%d, <systime>  CP - PPP [CAT_API 13 24] mnrpSNConnectInd init = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 13 25 Rsp
    printformat ,  CAT_API,  3, CP PPP CAT_API 13 25, N=%d, <systime>  CP - PPP [CAT_API 13 25] mnrpSNDisconnectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PPP CAT_API 13 26 Rsp
    printformat ,  CAT_API,  3, CP PPP CAT_API 13 26, N=%d, <systime>  CP - PPP [CAT_API 13 26] mnrpSysTimerExpiredInd timer = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP TCPIP CAT_IP 1 1 Rsp
    printformat ,   CAT_IP,  3, CP TCPIP CAT_IP 1 1, N=%d, <systime>  CP - TCPIP [CAT_IP 1 1] Sending %d byte IP datagram
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP TCPIP CAT_IP 1 2 Rsp
    printformat ,   CAT_IP,  5, CP TCPIP CAT_IP 1 2, N=%d, <systime>  CP - TCPIP [CAT_IP 1 2]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP TCPIP CAT_IP 1 3 Rsp
    printformat ,   CAT_IP,  3, CP TCPIP CAT_IP 1 3, N=%d, <systime>  CP - TCPIP [CAT_IP 1 3] Received %d byte IP datagram
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP TCPIP CAT_IP 1 4 Rsp
    printformat ,   CAT_IP,  3, CP TCPIP CAT_IP 1 4, N=%d, <systime>  CP - TCPIP [CAT_IP 1 4] Actual  IP checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP TCPIP CAT_IP 1 5 Rsp
    printformat ,   CAT_IP,  2, CP TCPIP CAT_IP 1 5, N=%d, <systime>  CP - TCPIP [CAT_IP 1 5] Fragmented IP datagram
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP TCPIP CAT_IP 1 6 Rsp
    printformat ,   CAT_IP,  3, CP TCPIP CAT_IP 1 6, N=%d, <systime>  CP - TCPIP [CAT_IP 1 6] IP dgm for prot %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP TCPIP CAT_TCP 11 1 Rsp
    printformat ,  CAT_TCP,  3, CP TCPIP CAT_TCP 11 1, N=%d, <systime>  CP - TCPIP [CAT_TCP 11 1] Actual  TCP checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP TCPIP CAT_TCP 11 2 Rsp
    printformat ,  CAT_TCP,  3, CP TCPIP CAT_TCP 11 2, N=%d, <systime>  CP - TCPIP [CAT_TCP 11 2] Rx TCP flags: 0x%lx, Window=0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    flas, uint32
    win, uint32
End

Begin Message, CP Trace CP TCPIP CAT_TCP 11 3 Rsp
    printformat ,  CAT_TCP,  3, CP TCPIP CAT_TCP 11 3, N=%d, <systime>  CP - TCPIP [CAT_TCP 11 3] SEQ: 0x%08lx, ACK:0x%08lx
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP TCPIP CAT_TCP 12 1 Rsp
    printformat ,  CAT_TCP,  3, CP TCPIP CAT_TCP 12 1, N=%d, <systime>  CP - TCPIP [CAT_TCP 12 1] TCP Buffered %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Size, uint32
End

Begin Message, CP Trace CP TCPIP CAT_TCP 12 2 Rsp
    printformat ,  CAT_TCP,  3, CP TCPIP CAT_TCP 12 2, N=%d, <systime>  CP - TCPIP [CAT_TCP 12 2] Intransit %d, Win %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Intransit, uint32
    Win, uint32
End

Begin Message, CP Trace CP TCPIP CAT_TCP 12 3 Rsp
    printformat ,  CAT_TCP,  3, CP TCPIP CAT_TCP 12 3, N=%d, <systime>  CP - TCPIP [CAT_TCP 12 3] Tx %d byte seg, flags 0x%02x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP TCPIP CAT_TCP 14 1 Rsp
    printformat ,  CAT_TCP,  3, CP TCPIP CAT_TCP 14 1, N=%d, <systime>  CP - TCPIP [CAT_TCP 14 1] TCP State -> %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP TCPIP CAT_UDP 15 1 Rsp
    printformat ,  CAT_UDP,  3, CP TCPIP CAT_UDP 15 1, N=%d, <systime>  CP - TCPIP [CAT_UDP 15 1] %d byte UDP datagram received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 1 1 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 1 1, N=%d, <systime>  CP - NSPE [CAT_API 1 1] is7074AppIntBeginTCPConnection
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 1 2 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 1 2, N=%d, <systime>  CP - NSPE [CAT_API 1 2] is7074AppIntEndConnection
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 1 3 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 1 3, N=%d, <systime>  CP - NSPE [CAT_API 1 3] is7074AppIntDisconnectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 1 4 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 1 4, N=%d, <systime>  CP - NSPE [CAT_API 1 4] is7074AppIntTxReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 1 5 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 1 5, N=%d, <systime>  CP - NSPE [CAT_API 1 5] is7074AppIntRxRsp
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 1 6 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 1 6, N=%d, <systime>  CP - NSPE [CAT_API 1 6] HLW receive RLP connect status %s, reset is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Status, uint32, base=enum:Failed/Passed
    Indication, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP NSPE CAT_API 1 7 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 1 7, N=%d, <systime>  CP - NSPE [CAT_API 1 7] is7074RlpConnectionClosed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 1 8 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 1 8, N=%d, <systime>  CP - NSPE [CAT_API 1 8] is7074RlpTxComplete
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 1 9 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 1 9, N=%d, <systime>  CP - NSPE [CAT_API 1 9] is7074RlpHDLCPacketRxd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 1 10 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 1 10, N=%d, <systime>  CP - NSPE [CAT_API 1 10] NSPE Timer = %d Expired = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 1 11 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 1 11, N=%d, <systime>  CP - NSPE [CAT_API 1 11] NSPE receive RLP reset status = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    status, uint32, base=enum:Status Type
End

Begin Message, CP Trace CP NSPE CAT_API 1 12 Rsp
    printformat ,  CAT_API,  3, CP NSPE CAT_API 1 12, N=%d, <systime>  CP - NSPE [CAT_API 1 12] is7074AppIntTxReq postponed due to tcpFlowOff
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 1 13 Rsp
    printformat ,  CAT_API,  3, CP NSPE CAT_API 1 13, N=%d, <systime>  CP - NSPE [CAT_API 1 13] is7074AppIntTxReq postponed due to TCP_Send_Rqstreturn code = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 1 14 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 1 14, N=%d, <systime>  CP - NSPE [CAT_API 1 14] is7074AppIntSendDataRsp
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 2 1 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 2 1, N=%d, <systime>  CP - NSPE [CAT_API 2 1] is7074BrowserBeginConnection, mode = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 2 2 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 2 2, N=%d, <systime>  CP - NSPE [CAT_API 2 2] is7074BrowserEndConnection
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 2 3 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 2 3, N=%d, <systime>  CP - NSPE [CAT_API 2 3] is7074SendDatagram, size = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 2 4 Rsp
    printformat ,  CAT_API,  5, CP NSPE CAT_API 2 4, N=%d, <systime>  CP - NSPE [CAT_API 2 4]                     toAddr = %#lx, toPort = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 2 5 Rsp
    printformat ,  CAT_API,  5, CP NSPE CAT_API 2 5, N=%d, <systime>  CP - NSPE [CAT_API 2 5]                     fromPort = %u, flags = %#x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 2 6 Rsp
    printformat ,  CAT_API,  5, CP NSPE CAT_API 2 6, N=%d, <systime>  CP - NSPE [CAT_API 2 6]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 2 7 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 2 7, N=%d, <systime>  CP - NSPE [CAT_API 2 7] is7074BrowserDormantReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 2 8 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 2 8, N=%d, <systime>  CP - NSPE [CAT_API 2 8] is7074BrowserRxRsp
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 2 9 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 2 9, N=%d, <systime>  CP - NSPE [CAT_API 2 9] is7074AppIntInactivityTmoReq, channel = %hu, tmo = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 2 10 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 2 10, N=%d, <systime>  CP - NSPE [CAT_API 2 10] is7074RlpInactivityInd, channel = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 2 11 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 2 11, N=%d, <systime>  CP - NSPE [CAT_API 2 11] is7074AppIntConnectStatus, status = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 2 12 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 2 12, N=%d, <systime>  CP - NSPE [CAT_API 2 12] is7074AppIntHDLCPacketRxd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 2 13 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 2 13, N=%d, <systime>  CP - NSPE [CAT_API 2 13] is7074AppIntTxComplete
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 1 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 1, N=%d, <systime>  CP - NSPE [CAT_API 3 1] is7074UmConnectLcp, channel = %hu, tmo = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 2 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 2, N=%d, <systime>  CP - NSPE [CAT_API 3 2] is7074UmConnectIpcp, localIpAddr = %#lx
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 3 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 3, N=%d, <systime>  CP - NSPE [CAT_API 3 3] is7074UmDisconnectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 4 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 4, N=%d, <systime>  CP - NSPE [CAT_API 3 4] is7074UmConnectLcp, use_rlp = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 5 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 5, N=%d, <systime>  CP - NSPE [CAT_API 3 5] is7074CfgSetAuth, authType = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 6 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 6, N=%d, <systime>  CP - NSPE [CAT_API 3 6] Invalid authentication type
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 7 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 7, N=%d, <systime>  CP - NSPE [CAT_API 3 7] is7074UartPortOpenStatus
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 8 Rsp
    printformat ,  CAT_API,  5, CP NSPE CAT_API 3 8, N=%d, <systime>  CP - NSPE [CAT_API 3 8] is7074RmPppConnect, local_ip = %lx, remote_ip = %lx
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 9 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 9, N=%d, <systime>  CP - NSPE [CAT_API 3 9] is7074UartPortClosed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 10 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 10, N=%d, <systime>  CP - NSPE [CAT_API 3 10] is7074UartHDLCPacketRxd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 11 Rsp
    printformat ,  CAT_API,  5, CP NSPE CAT_API 3 11, N=%d, <systime>  CP - NSPE [CAT_API 3 11]
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 12 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 12, N=%d, <systime>  CP - NSPE [CAT_API 3 12] is7074UartTxComplete
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 13 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 13, N=%d, <systime>  CP - NSPE [CAT_API 3 13] is7074RmDisconnectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 14 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 14, N=%d, <systime>  CP - NSPE [CAT_API 3 14] is7074UmPppConnectReq, useMnrp = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 15 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 15, N=%d, <systime>  CP - NSPE [CAT_API 3 15] is7074UmPppConnectReq, use_rlp = %hu, rlpChannel = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 16 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 16, N=%d, <systime>  CP - NSPE [CAT_API 3 16] is7074UmPppConnectReq, inactivityTmo = %hu, localIpAddr = %#lx
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 17 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 17, N=%d, <systime>  CP - NSPE [CAT_API 3 17] useMnrp=TRUE is supported now
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 18 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 18, N=%d, <systime>  CP - NSPE [CAT_API 3 18] IS707_APP_PACKET_UART is in none-idle State
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 19 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 19, N=%d, <systime>  CP - NSPE [CAT_API 3 19] IS707_APP_PACKET_UART is in wrong State
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 20 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 20, N=%d, <systime>  CP - NSPE [CAT_API 3 20] is7074RmConnectStatus, status = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 3 21 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 3 21, N=%d, <systime>  CP - NSPE [CAT_API 3 21] is7074UmConnectStatus, status = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_FSM 4 1 Rsp
    printformat ,  CAT_FSM,  3, CP NSPE CAT_FSM 4 1, N=%d, <systime>  CP - NSPE [CAT_FSM 4 1] NSPE app-> %s, State -> %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    app, uint32, base=enum:NSPE App Type
    state, uint32, base=enum:NSPE State
End

Begin Message, CP Trace CP NSPE CAT_API 4 2 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 4 2, N=%d, <systime>  CP - NSPE [CAT_API 4 2] nspeTxReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_API 4 3 Rsp
    printformat ,  CAT_API,  1, CP NSPE CAT_API 4 3, N=%d, <systime>  CP - NSPE [CAT_API 4 3] udpTxReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_BIOS 5 1 Rsp
    printformat , CAT_BIOS,  3, CP NSPE CAT_BIOS 5 1, N=%d, <systime>  CP - NSPE [CAT_BIOS 5 1] Received %d byte IP datagram, ready to pass it to NAT
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_BIOS 5 2 Rsp
    printformat , CAT_BIOS,  3, CP NSPE CAT_BIOS 5 2, N=%d, <systime>  CP - NSPE [CAT_BIOS 5 2] Actual  IP checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_BIOS 5 4 Rsp
    printformat , CAT_BIOS,  1, CP NSPE CAT_BIOS 5 4, N=%d, <systime>  CP - NSPE [CAT_BIOS 5 4] TCP Flow Control = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_ERROR 6 1 Rsp
    printformat , CAT_ERROR,  5, CP NSPE CAT_ERROR 6 1, N=%d, <systime>  CP - NSPE [CAT_ERROR 6 1] State Machine unknown
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_BIOS 6 2 Rsp
    printformat , CAT_BIOS,  3, CP NSPE CAT_BIOS 6 2, N=%d, <systime>  CP - NSPE [CAT_BIOS 6 2] Actual PPP fcs1: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_BIOS 6 3 Rsp
    printformat , CAT_BIOS,  3, CP NSPE CAT_BIOS 6 3, N=%d, <systime>  CP - NSPE [CAT_BIOS 6 3] Actual PPP fcs2: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_BIOS 7 4 Rsp
    printformat , CAT_BIOS,  1, CP NSPE CAT_BIOS 7 4, N=%d, <systime>  CP - NSPE [CAT_BIOS 7 4] TCP Rx bytes = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 1 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 1, N=%d, <systime>  CP - NSPE [CAT_NAT 9 1] outbound UDP/TCP checksum after trans: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 2 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 2, N=%d, <systime>  CP - NSPE [CAT_NAT 9 2] outbound IP checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 3 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 3, N=%d, <systime>  CP - NSPE [CAT_NAT 9 3] outbound Actual  IP checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 4 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 4, N=%d, <systime>  CP - NSPE [CAT_NAT 9 4] outbound ICMP query checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 5 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 5, N=%d, <systime>  CP - NSPE [CAT_NAT 9 5] outbound contained ICMP checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 6 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 6, N=%d, <systime>  CP - NSPE [CAT_NAT 9 6] outbound contained UDP/TCP checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 7 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 7, N=%d, <systime>  CP - NSPE [CAT_NAT 9 7] outbound contained IP checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 8 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 8, N=%d, <systime>  CP - NSPE [CAT_NAT 9 8] outbound ICMP error checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 9 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 9, N=%d, <systime>  CP - NSPE [CAT_NAT 9 9] inbound UDP/TCP checksum after trans: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 10 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 10, N=%d, <systime>  CP - NSPE [CAT_NAT 9 10] inbound IP checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 11 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 11, N=%d, <systime>  CP - NSPE [CAT_NAT 9 11] inbound ICMP query checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 12 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 12, N=%d, <systime>  CP - NSPE [CAT_NAT 9 12] inbound contained ICMP checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 13 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 13, N=%d, <systime>  CP - NSPE [CAT_NAT 9 13] inbound UDP/TCP checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 14 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 14, N=%d, <systime>  CP - NSPE [CAT_NAT 9 14] inbound contained IP checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 15 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 15, N=%d, <systime>  CP - NSPE [CAT_NAT 9 15] inbound ICMP error checksum: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 16 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 16, N=%d, <systime>  CP - NSPE [CAT_NAT 9 16] outbound UDP/TCP checksum before trans: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 17 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 17, N=%d, <systime>  CP - NSPE [CAT_NAT 9 17] outbound ICMP checksum before trans: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 18 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 18, N=%d, <systime>  CP - NSPE [CAT_NAT 9 18] inbound UDP/TCP checksum before trans: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 19 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 19, N=%d, <systime>  CP - NSPE [CAT_NAT 9 19] inbound ICMP checksum before trans: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 20 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 20, N=%d, <systime>  CP - NSPE [CAT_NAT 9 20] IP checksum before (de)trans: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP NSPE CAT_NAT 9 21 Rsp
    printformat ,  CAT_NAT,  3, CP NSPE CAT_NAT 9 21, N=%d, <systime>  CP - NSPE [CAT_NAT 9 21] Forward IP packet to ???
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 1 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 1 1, N=%d, <systime>  CP - SCC [CAT_SCC 1 1] cpcReset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 2 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 1 2, N=%d, <systime>  CP - SCC [CAT_SCC 1 2] cpcNegConnectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 3 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 1 3, N=%d, <systime>  CP - SCC [CAT_SCC 1 3] ForMuxOpt = %hu, RevMuxOpt = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 4 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 1 4, N=%d, <systime>  CP - SCC [CAT_SCC 1 4] ForRates = %hu, RevRates = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 5 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 1 5, N=%d, <systime>  CP - SCC [CAT_SCC 1 5] svcOpt = %u, numConRec = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 6 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 1 6, N=%d, <systime>  CP - SCC [CAT_SCC 1 6] cpcNegRejectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 7 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 1 7, N=%d, <systime>  CP - SCC [CAT_SCC 1 7] cpcNegPageInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 8 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 1 8, N=%d, <systime>  CP - SCC [CAT_SCC 1 8] Service Option = %u, rsp = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 9 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 1 9, N=%d, <systime>  CP - SCC [CAT_SCC 1 9] cpcXscAnswerInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 10 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 1 10, N=%d, <systime>  CP - SCC [CAT_SCC 1 10] Service Type = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 11 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 1 11, N=%d, <systime>  CP - SCC [CAT_SCC 1 11] cpcXscOrigReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 12 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 1 12, N=%d, <systime>  CP - SCC [CAT_SCC 1 12] ServiceType = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 13 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 1 13, N=%d, <systime>  CP - SCC [CAT_SCC 1 13] numdigits = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 14 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 1 14, N=%d, <systime>  CP - SCC [CAT_SCC 1 14] cpcXscReleaseReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 15 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 1 15, N=%d, <systime>  CP - SCC [CAT_SCC 1 15] Service Type = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 16 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 1 16, N=%d, <systime>  CP - SCC [CAT_SCC 1 16] cpcXscset_soc_response resp = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 1 17 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 1 17, N=%d, <systime>  CP - SCC [CAT_SCC 1 17] cpcVscSwitchReq, svcType = %hu, svcOpt = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 1 18 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 1 18, N=%d, <systime>  CP - SCC [CAT_API 1 18] sccCpAlertInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 1 19 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 1 19, N=%d, <systime>  CP - SCC [CAT_API 1 19] Calling Party Number: ???
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 1 20 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 1 20, N=%d, <systime>  CP - SCC [CAT_API 1 20] sccCpConnectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 1 21 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 1 21, N=%d, <systime>  CP - SCC [CAT_API 1 21] sccCpConnectAnalogInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 1 22 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 1 22, N=%d, <systime>  CP - SCC [CAT_API 1 22] sccCpDisconnectInd next state = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 1 23 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 1 23, N=%d, <systime>  CP - SCC [CAT_API 1 23] sccCpOrigFailInd reason = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    reason, uint32, base=enum:Ps CP Event
End

Begin Message, CP Trace CP SCC CAT_API 1 24 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 1 24, N=%d, <systime>  CP - SCC [CAT_API 1 24] sccCpOriginationSentInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 1 25 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 1 25, N=%d, <systime>  CP - SCC [CAT_API 1 25] sccCpReleaseInd reason = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    reason, uint32, base=enum:Ps CP Event
End

Begin Message, CP Trace CP SCC CAT_API 1 26 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 1 26, N=%d, <systime>  CP - SCC [CAT_API 1 26] sccCpServiceOptionControlMessageInd conRef = %hu, svcOpt = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 1 27 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 1 27, N=%d, <systime>  CP - SCC [CAT_API 1 27] sccCpServiceOptionControlMessageInd length = %hu, time = %lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 1 28 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 1 28, N=%d, <systime>  CP - SCC [CAT_API 1 28] data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 1 29 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 1 29, N=%d, <systime>  CP - SCC [CAT_API 1 29] sccCpServiceOptionControlOrderInd ordq = %hu, time = %lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 1 30 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 1 30, N=%d, <systime>  CP - SCC [CAT_API 1 30] sccVsDataPrearrangementReq mode = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 2 1 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 2 1, N=%d, <systime>  CP - SCC [CAT_SCC 2 1] negInit
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 2 2 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 2 2, N=%d, <systime>  CP - SCC [CAT_SCC 2 2] negGetCurCfg
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 3 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 3, N=%d, <systime>  CP - SCC [CAT_API 2 3] GetCurCfg No Valid Services
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 2 4 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 2 4, N=%d, <systime>  CP - SCC [CAT_SCC 2 4] negCpcAddReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 2 5 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 2 5, N=%d, <systime>  CP - SCC [CAT_SCC 2 5] negCpcRemoveReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 2 6 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 2 6, N=%d, <systime>  CP - SCC [CAT_SCC 2 6] negCpcSwitchReq, svcType = %hu, svcOpt = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 2 7 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 2 7, N=%d, <systime>  CP - SCC [CAT_SCC 2 7] negCpcSetCurType type = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 8 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 8, N=%d, <systime>  CP - SCC [CAT_API 2 8] sccCpGetMultiplexOptionInfo
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 9 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 9, N=%d, <systime>  CP - SCC [CAT_API 2 9] sccCpGetServCfgNoConnections so = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 10 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 10, N=%d, <systime>  CP - SCC [CAT_API 2 10] sccCpGetServCfgNoConnections No Valid Services
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 11 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 11, N=%d, <systime>  CP - SCC [CAT_API 2 11] sccCpGetServiceOptionInfo
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 12 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 12, N=%d, <systime>  CP - SCC [CAT_API 2 12] sccCpServiceConfigurationInitiation
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 13 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 13, N=%d, <systime>  CP - SCC [CAT_API 2 13] sccCpServiceConfigurationInitiation No Valid Services
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 14 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 14, N=%d, <systime>  CP - SCC [CAT_API 2 14] sccCpServiceConfigurationRsp resp = %d -- req = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 15 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 15, N=%d, <systime>  CP - SCC [CAT_API 2 15] sccCpServiceConfigurationValidation valOnly = %d -- numConRec = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 16 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 16, N=%d, <systime>  CP - SCC [CAT_API 2 16] sccCpServiceConfigurationValidation -- No Connection Records
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 17 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 17, N=%d, <systime>  CP - SCC [CAT_API 2 17] sccCpServiceConfigurationValidation SO = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 18 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 18, N=%d, <systime>  CP - SCC [CAT_API 2 18] sccCpServiceNegotiationModeInd Mode = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 19 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 19, N=%d, <systime>  CP - SCC [CAT_API 2 19] sccCpServiceOptionValidation SO = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 20 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 20, N=%d, <systime>  CP - SCC [CAT_API 2 20] sccCpPageInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 2 21 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 2 21, N=%d, <systime>  CP - SCC [CAT_API 2 21] sccCpPageAnalogInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 3 1 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 1, N=%d, <systime>  CP - SCC [CAT_SCC 3 1] dbcCpcAccessInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 3 2 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 2, N=%d, <systime>  CP - SCC [CAT_SCC 3 2] dbcCpcAlertInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 3 3 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 3, N=%d, <systime>  CP - SCC [CAT_SCC 3 3] dbcCpcConnectFailInd reason = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    reason, uint32, base=enum:Ps CP Event
End

Begin Message, CP Trace CP SCC CAT_SCC 3 4 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 4, N=%d, <systime>  CP - SCC [CAT_SCC 3 4] dbcCpcConnectInd, numConRec = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 3 5 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 5, N=%d, <systime>  CP - SCC [CAT_SCC 3 5] forMuxOpt = %hu, revMuxOpt = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 3 6 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 6, N=%d, <systime>  CP - SCC [CAT_SCC 3 6] dbcCpcConnectInd, SO = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 3 7 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 7, N=%d, <systime>  CP - SCC [CAT_SCC 3 7] dbcCpcDisconnectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 3 8 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 8, N=%d, <systime>  CP - SCC [CAT_SCC 3 8] dbcCpcIdle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 3 9 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 9, N=%d, <systime>  CP - SCC [CAT_SCC 3 9] dbcCpcPageInd, SO = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 3 10 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 10, N=%d, <systime>  CP - SCC [CAT_SCC 3 10] dbcXscSendMsgReq, type = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 3 11 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 11, N=%d, <systime>  CP - SCC [CAT_SCC 3 11] dbcXscSendMsgReq confirm = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 3 12 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 12, N=%d, <systime>  CP - SCC [CAT_SCC 3 12] dbcXscSendMsgReq tcOnly = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 3 13 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 13, N=%d, <systime>  CP - SCC [CAT_SCC 3 13] dbcXscReleaseReq, ServiceType = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ServiceType, uint32, base=enum:SCC Service Type
End

Begin Message, CP Trace CP SCC CAT_SCC 3 14 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 14, N=%d, <systime>  CP - SCC [CAT_SCC 3 14] Unknown Action Called in DBC
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 3 15 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 3 15, N=%d, <systime>  CP - SCC [CAT_SCC 3 15] DBC State = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 3 16 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 3 16, N=%d, <systime>  CP - SCC [CAT_API 3 16] sccCpDataBurstRsp success = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 3 17 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 3 17, N=%d, <systime>  CP - SCC [CAT_API 3 17] sccCpAccessMaxCapsuleSizeInd size = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 3 18 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 3 18, N=%d, <systime>  CP - SCC [CAT_API 3 18] sccCpDataBurstInd, msgNumber = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 3 19 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 3 19, N=%d, <systime>  CP - SCC [CAT_API 3 19] sccCpDataBurstInd, burstType = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 3 20 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 3 20, N=%d, <systime>  CP - SCC [CAT_API 3 20] sccCpDataBurstInd, numMsgs = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 3 21 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 3 21, N=%d, <systime>  CP - SCC [CAT_API 3 21] sccCpDataBurstInd, numFields = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 3 22 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 3 22, N=%d, <systime>  CP - SCC [CAT_API 3 22] DataBurstMessage
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 3 23 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 3 23, N=%d, <systime>  CP - SCC [CAT_API 3 23] sccCpBroadcastDataBurstInd, msgNumber = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 3 24 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 3 24, N=%d, <systime>  CP - SCC [CAT_API 3 24] burstType = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 3 25 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 3 25, N=%d, <systime>  CP - SCC [CAT_API 3 25] numMsgs = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 3 26 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 3 26, N=%d, <systime>  CP - SCC [CAT_API 3 26] numFields = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 3 27 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 3 27, N=%d, <systime>  CP - SCC [CAT_API 3 27] data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 4 1 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 4 1, N=%d, <systime>  CP - SCC [CAT_SCC 4 1] oscInit
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 4 2 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 4 2, N=%d, <systime>  CP - SCC [CAT_API 4 2] oscDbcConnectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 4 3 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 4 3, N=%d, <systime>  CP - SCC [CAT_API 4 3] oscDbcDisconnectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 4 4 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 4 4, N=%d, <systime>  CP - SCC [CAT_API 4 4] oscDbcDataBurstInd length = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 4 5 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 4 5, N=%d, <systime>  CP - SCC [CAT_API 4 5] data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 4 6 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 4 6, N=%d, <systime>  CP - SCC [CAT_SCC 4 6] oscDbcTxRsp success = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 4 7 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 4 7, N=%d, <systime>  CP - SCC [CAT_SCC 4 7] oscCpcOrigInd numDigits = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 4 8 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 4 8, N=%d, <systime>  CP - SCC [CAT_API 4 8] sccOsAcceptMsg success = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 4 9 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 4 9, N=%d, <systime>  CP - SCC [CAT_API 4 9] sccOsPrefInd so = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 4 10 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 4 10, N=%d, <systime>  CP - SCC [CAT_API 4 10] sccOsReleaseReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 4 11 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 4 11, N=%d, <systime>  CP - SCC [CAT_API 4 11] sccOsPrefInd length = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 4 12 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 4 12, N=%d, <systime>  CP - SCC [CAT_API 4 12] sccOsTxReq data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 4 13 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 4 13, N=%d, <systime>  CP - SCC [CAT_SCC 4 13] oscNegGetServCfgNoConnections so = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 4 14 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 4 14, N=%d, <systime>  CP - SCC [CAT_SCC 4 14] Invalid Service Option Preference
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 4 15 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 4 15, N=%d, <systime>  CP - SCC [CAT_SCC 4 15] oscNegServiceConfigurationInitiation
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 4 16 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 4 16, N=%d, <systime>  CP - SCC [CAT_SCC 4 16] Invalid Service Option Preference
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 4 17 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 4 17, N=%d, <systime>  CP - SCC [CAT_SCC 4 17] oscNegServiceConfigurationValidation cfgOnly = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 4 18 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 4 18, N=%d, <systime>  CP - SCC [CAT_SCC 4 18] oscNegServiceConfigurationInd ForMux = %d -- RevMux = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 4 19 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 4 19, N=%d, <systime>  CP - SCC [CAT_SCC 4 19] oscNegServiceOptionValidation SO = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 5 1 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 5 1, N=%d, <systime>  CP - SCC [CAT_SCC 5 1] mscInit
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 5 2 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 5 2, N=%d, <systime>  CP - SCC [CAT_SCC 5 2] mscIsBroadcastExpected, addrLen = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 5 3 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 5 3, N=%d, <systime>  CP - SCC [CAT_SCC 5 3] addr Data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 5 4 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 5 4, N=%d, <systime>  CP - SCC [CAT_SCC 5 4] Broadcast Address Length Invalid
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 5 5 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 5 5, N=%d, <systime>  CP - SCC [CAT_SCC 5 5] mscDbcDataBurstInd length = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 5 6 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 5 6, N=%d, <systime>  CP - SCC [CAT_SCC 5 6] mscDbcDeliverBCastMsg, length = %hu, addrLen = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 5 7 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 5 7, N=%d, <systime>  CP - SCC [CAT_SCC 5 7] mscDbcTxRsp success = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 5 8 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 5 8, N=%d, <systime>  CP - SCC [CAT_API 5 8] sccSmsPrefInd soPref = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 5 9 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 5 9, N=%d, <systime>  CP - SCC [CAT_API 5 9] sccSmsReleaseReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 5 10 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 5 10, N=%d, <systime>  CP - SCC [CAT_API 5 10] sccSmsSetBroadcastParms priority = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 5 11 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 5 11, N=%d, <systime>  CP - SCC [CAT_API 5 11] lang mask = %lu, service mask = %lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 5 12 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 5 12, N=%d, <systime>  CP - SCC [CAT_API 5 12] sccSmsTxReq, len = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 5 13 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 5 13, N=%d, <systime>  CP - SCC [CAT_API 5 13] confirm = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 5 14 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 5 14, N=%d, <systime>  CP - SCC [CAT_API 5 14] data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 6 1 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 6 1, N=%d, <systime>  CP - SCC [CAT_SCC 6 1] vscReset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 6 2 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 6 2, N=%d, <systime>  CP - SCC [CAT_SCC 6 2] vscCpcAlertInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 6 3 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 6 3, N=%d, <systime>  CP - SCC [CAT_SCC 6 3] vscCpcConnectFailInd, reason = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    reason, uint32, base=enum:Ps CP Event
End

Begin Message, CP Trace CP SCC CAT_SCC 6 4 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 6 4, N=%d, <systime>  CP - SCC [CAT_SCC 6 4] vscCpcConnectInd, svcOpt = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 6 6 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 6 6, N=%d, <systime>  CP - SCC [CAT_SCC 6 6] vscCpcDisconnectInd, fade = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 6 7 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 6 7, N=%d, <systime>  CP - SCC [CAT_SCC 6 7] vscCpcPageInd, so = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 6 10 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 6 10, N=%d, <systime>  CP - SCC [CAT_SCC 6 10] vscCpNetworkPRev, pRev = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 6 11 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 6 11, N=%d, <systime>  CP - SCC [CAT_SCC 6 11] vscCpNoSvcInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 6 12 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 6 12, N=%d, <systime>  CP - SCC [CAT_API 6 12] sccVsConnectReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 6 13 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 6 13, N=%d, <systime>  CP - SCC [CAT_API 6 13] sccVsOrigReq encoded = %hu, digitMode = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 6 14 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 6 14, N=%d, <systime>  CP - SCC [CAT_API 6 14] sccVsOrigReq numberType = %hu, numberPlan = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 6 15 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 6 15, N=%d, <systime>  CP - SCC [CAT_API 6 15] sccVsOrigReq digits:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 6 16 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 6 16, N=%d, <systime>  CP - SCC [CAT_API 6 16] sccVsPrefInd, svcPref = %hu, muxPref = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 6 18 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 6 18, N=%d, <systime>  CP - SCC [CAT_API 6 18] sccVsReleaseReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 6 19 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 6 19, N=%d, <systime>  CP - SCC [CAT_API 6 19] sccVsSwitchServiceReq, service = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 7 1 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 7 1, N=%d, <systime>  CP - SCC [CAT_SCC 7 1] dscReset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 7 2 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 7 2, N=%d, <systime>  CP - SCC [CAT_SCC 7 2] dscCpcAlertInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 7 3 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 7 3, N=%d, <systime>  CP - SCC [CAT_SCC 7 3] dscCpcConnectFailInd, reason = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 7 4 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 7 4, N=%d, <systime>  CP - SCC [CAT_SCC 7 4] dscCpcConnectInd, rlpCtl = %hu, origDir = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 7 5 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 7 5, N=%d, <systime>  CP - SCC [CAT_SCC 7 5] dscCpcConnectInd numConRec = %hu, cn = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 7 7 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 7 7, N=%d, <systime>  CP - SCC [CAT_SCC 7 7] dscCpcDisconnectInd, fade = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 7 8 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 7 8, N=%d, <systime>  CP - SCC [CAT_SCC 7 8] dscCpcPageInd, so = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 7 10 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 7 10, N=%d, <systime>  CP - SCC [CAT_SCC 7 10] dscCpHandoffInd, type = %hu, cfgChanged = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 7 11 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 7 11, N=%d, <systime>  CP - SCC [CAT_SCC 7 11] dscCpHandoffInd, setChanged = %hu, freqChanged = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 7 12 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 7 12, N=%d, <systime>  CP - SCC [CAT_SCC 7 12] dscCpNetworkPRev, pRev = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 7 13 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 7 13, N=%d, <systime>  CP - SCC [CAT_SCC 7 13] dscCpNoSvcInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 7 14 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 7 14, N=%d, <systime>  CP - SCC [CAT_SCC 7 14] dscCpRandInd, rand = %lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 7 15 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 7 15, N=%d, <systime>  CP - SCC [CAT_SCC 7 15] dscCpSsdbInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 7 16 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 7 16, N=%d, <systime>  CP - SCC [CAT_SCC 7 16] dscCpSsdbInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 7 17 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 7 17, N=%d, <systime>  CP - SCC [CAT_API 7 17] sccDsConnectReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 7 18 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 7 18, N=%d, <systime>  CP - SCC [CAT_API 7 18] sccDsEnableReq, map = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 7 19 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 7 19, N=%d, <systime>  CP - SCC [CAT_API 7 19] sccDsOrigReq type = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 7 20 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 7 20, N=%d, <systime>  CP - SCC [CAT_API 7 20] sccDsOrigReq, digits = ???
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 7 21 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 7 21, N=%d, <systime>  CP - SCC [CAT_API 7 21] sccDsPrefInd, PAM = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 7 22 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 7 22, N=%d, <systime>  CP - SCC [CAT_API 7 22] sccDsPrefInd, asyncSoPref = %u, faxSoPref = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 7 23 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 7 23, N=%d, <systime>  CP - SCC [CAT_API 7 23] sccDsReleaseReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 1 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 1, N=%d, <systime>  CP - SCC [CAT_SCC 8 1] pscReset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 2 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 2, N=%d, <systime>  CP - SCC [CAT_SCC 8 2] pscCpIdle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 3 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 3, N=%d, <systime>  CP - SCC [CAT_SCC 8 3] pscCpTcAssigned
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 4 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 4, N=%d, <systime>  CP - SCC [CAT_SCC 8 4] pscCpRandInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 5 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 5, N=%d, <systime>  CP - SCC [CAT_SCC 8 5] pscCpSsdbInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 6 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 6, N=%d, <systime>  CP - SCC [CAT_SCC 8 6] pscCpZone
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 7 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 7, N=%d, <systime>  CP - SCC [CAT_SCC 8 7] pscCpcConnectFailInd reason = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 8 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 8, N=%d, <systime>  CP - SCC [CAT_SCC 8 8] pscCpcConnectInd cn = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 9 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 9, N=%d, <systime>  CP - SCC [CAT_SCC 8 9] pscCpcConnectInd rlpCtl = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 10 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 10, N=%d, <systime>  CP - SCC [CAT_SCC 8 10] pscCpcDisconnectInd reason = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 11 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 11, N=%d, <systime>  CP - SCC [CAT_SCC 8 11] pscCpcReleaseInd, reason = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 12 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 12, N=%d, <systime>  CP - SCC [CAT_SCC 8 12] pscCpcAlertInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 13 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 13, N=%d, <systime>  CP - SCC [CAT_SCC 8 13] pscCpcPageInd so = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 14 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 14, N=%d, <systime>  CP - SCC [CAT_SCC 8 14] pscCpReadyInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 15 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 15, N=%d, <systime>  CP - SCC [CAT_SCC 8 15] pscCpcNoSvcInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 16 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 16, N=%d, <systime>  CP - SCC [CAT_SCC 8 16] pscCpcOrigSentInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 17 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 17, N=%d, <systime>  CP - SCC [CAT_SCC 8 17] pscCpcSocmInd, svcOpt = %u, actionTime = %lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 18 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 8 18, N=%d, <systime>  CP - SCC [CAT_SCC 8 18] ctlRec:
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 19 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 19, N=%d, <systime>  CP - SCC [CAT_SCC 8 19] pscCpcSocoInd, ordq = %hu, actionTime = %lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 20 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 20, N=%d, <systime>  CP - SCC [CAT_SCC 8 20] pscCpHandoffInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 21 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 21, N=%d, <systime>  CP - SCC [CAT_SCC 8 21] pscCpSidNidChange
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 22 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 22, N=%d, <systime>  CP - SCC [CAT_SCC 8 22] pscCpNetworkPRev
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 8 23 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 8 23, N=%d, <systime>  CP - SCC [CAT_API 8 23] sccPsConnectReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 8 24 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 8 24, N=%d, <systime>  CP - SCC [CAT_API 8 24] sccPsDormantReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 8 25 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 8 25, N=%d, <systime>  CP - SCC [CAT_API 8 25] sccPsOrigReq, type = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 8 26 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 8 26, N=%d, <systime>  CP - SCC [CAT_API 8 26] digits = ???
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 8 27 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 8 27, N=%d, <systime>  CP - SCC [CAT_API 8 27] sccPsPrefInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 8 28 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 8 28, N=%d, <systime>  CP - SCC [CAT_API 8 28] internalDmc = %d, msdType = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 8 29 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 8 29, N=%d, <systime>  CP - SCC [CAT_API 8 29] lsdSoPref = %d, msdSoPref = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 8 30 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 8 30, N=%d, <systime>  CP - SCC [CAT_API 8 30] sccPsReleaseReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 8 31 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 8 31, N=%d, <systime>  CP - SCC [CAT_API 8 31] sccCpPacketZoneId, zone = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 8 32 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 8 32, N=%d, <systime>  CP - SCC [CAT_API 8 32] sccCpZoneRegistrationEnabled
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 33 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 33, N=%d, <systime>  CP - SCC [CAT_SCC 8 33] pscTcTimerExpiredInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 34 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 34, N=%d, <systime>  CP - SCC [CAT_SCC 8 34] pscNegGetServCfgNoConnections
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 35 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 35, N=%d, <systime>  CP - SCC [CAT_SCC 8 35] pscNegServiceConfigurationInitiation
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 36 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 36, N=%d, <systime>  CP - SCC [CAT_SCC 8 36] pscNegServiceConfigurationValidation
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 8 37 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 8 37, N=%d, <systime>  CP - SCC [CAT_SCC 8 37] pscNegServiceOptionValidation
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 9 1 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 9 1, N=%d, <systime>  CP - SCC [CAT_SCC 9 1] lscReset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 9 2 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 9 2, N=%d, <systime>  CP - SCC [CAT_SCC 9 2] lscCpcAlertInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 9 3 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 9 3, N=%d, <systime>  CP - SCC [CAT_SCC 9 3] lscCpcConnectFailInd reason = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 9 4 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 9 4, N=%d, <systime>  CP - SCC [CAT_SCC 9 4] lscCpcConnectInd numConRec = %d - cn = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 9 5 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 9 5, N=%d, <systime>  CP - SCC [CAT_SCC 9 5] lscCpcConnectInd so = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 9 6 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 9 6, N=%d, <systime>  CP - SCC [CAT_SCC 9 6] lscCpcDisconnectInd reason = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 9 7 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 9 7, N=%d, <systime>  CP - SCC [CAT_SCC 9 7] lscCpcPageInd so = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 9 8 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 9 8, N=%d, <systime>  CP - SCC [CAT_SCC 9 8] lscCpNetworkPRev pRev = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 9 9 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 9 9, N=%d, <systime>  CP - SCC [CAT_SCC 9 9] lscCpNoSvcInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 9 10 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 9 10, N=%d, <systime>  CP - SCC [CAT_API 9 10] sccLsOrigReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 9 11 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 9 11, N=%d, <systime>  CP - SCC [CAT_API 9 11] sccLsOrigReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 9 12 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 9 12, N=%d, <systime>  CP - SCC [CAT_API 9 12] sccLsPrefInd pam = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 9 13 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 9 13, N=%d, <systime>  CP - SCC [CAT_API 9 13] IS126SoPref = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 9 14 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 9 14, N=%d, <systime>  CP - SCC [CAT_API 9 14] MarkovSoPref = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 9 15 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 9 15, N=%d, <systime>  CP - SCC [CAT_API 9 15] SuppChanSoPref = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 9 16 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 9 16, N=%d, <systime>  CP - SCC [CAT_API 9 16] sccLsReleaseReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 9 17 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 9 17, N=%d, <systime>  CP - SCC [CAT_API 9 17] sccLsSOCMsgReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 9 18 Rsp
    printformat ,  CAT_SCC,  1, CP SCC CAT_SCC 9 18, N=%d, <systime>  CP - SCC [CAT_SCC 9 18] Error! Unexpected Event
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 1 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 1, N=%d, <systime>  CP - SCC [CAT_API 11 1] sccCpAccess
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 2 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 2, N=%d, <systime>  CP - SCC [CAT_API 11 2] sccCpHandoffInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 3 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 11 3, N=%d, <systime>  CP - SCC [CAT_API 11 3] type = %hu, cfgChanged = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 4 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 11 4, N=%d, <systime>  CP - SCC [CAT_API 11 4] setChanged = %hu, freqChanged = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 5 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 5, N=%d, <systime>  CP - SCC [CAT_API 11 5] sccCpIdle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 6 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 6, N=%d, <systime>  CP - SCC [CAT_API 11 6] sccCpNetworkPRev
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 7 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 11 7, N=%d, <systime>  CP - SCC [CAT_API 11 7] PRev = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 8 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 8, N=%d, <systime>  CP - SCC [CAT_API 11 8] sccCpNoSvcInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 9 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 9, N=%d, <systime>  CP - SCC [CAT_API 11 9] sccCpRandInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 10 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 11 10, N=%d, <systime>  CP - SCC [CAT_API 11 10] rand = %lu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 11 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 11, N=%d, <systime>  CP - SCC [CAT_API 11 11] sccCpReadyInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 12 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 11 12, N=%d, <systime>  CP - SCC [CAT_API 11 12] state = %s, prevState = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    state, uint32, base=enum:Ps CP State
    prevState, uint32, base=enum:Ps CP State
End

Begin Message, CP Trace CP SCC CAT_API 11 13 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 11 13, N=%d, <systime>  CP - SCC [CAT_API 11 13] roam = %hu, band = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 14 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 11 14, N=%d, <systime>  CP - SCC [CAT_API 11 14] channel = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    channel, uint32
End

Begin Message, CP Trace CP SCC CAT_API 11 15 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 11 15, N=%d, <systime>  CP - SCC [CAT_API 11 15] block = %hu, servingSystem = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 16 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 11 16, N=%d, <systime>  CP - SCC [CAT_API 11 16] sid = %u, nid = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 17 Rsp
    printformat ,  CAT_API,  5, CP SCC CAT_API 11 17, N=%d, <systime>  CP - SCC [CAT_API 11 17] pRev = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 18 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 18, N=%d, <systime>  CP - SCC [CAT_API 11 18] sccCpSidNidChange
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 19 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 19, N=%d, <systime>  CP - SCC [CAT_API 11 19] sid = %u, nid = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 20 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 20, N=%d, <systime>  CP - SCC [CAT_API 11 20] sccCpSsdbInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 21 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 21, N=%d, <systime>  CP - SCC [CAT_API 11 21] data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 22 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 22, N=%d, <systime>  CP - SCC [CAT_API 11 22] sccCpTcAssigned
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 23 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 23, N=%d, <systime>  CP - SCC [CAT_API 11 23] sccCpZone
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 24 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 24, N=%d, <systime>  CP - SCC [CAT_API 11 24] sccSysEnableReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 25 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 25, N=%d, <systime>  CP - SCC [CAT_API 11 25] enable = %hu
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 26 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 26, N=%d, <systime>  CP - SCC [CAT_API 11 26] sccSysInitReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 27 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 27, N=%d, <systime>  CP - SCC [CAT_API 11 27] sccSysReleaseReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 28 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 28, N=%d, <systime>  CP - SCC [CAT_API 11 28] sccSysTimerExpiredInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_API 11 29 Rsp
    printformat ,  CAT_API,  3, CP SCC CAT_API 11 29, N=%d, <systime>  CP - SCC [CAT_API 11 29] Id = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 12 1 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 12 1, N=%d, <systime>  CP - SCC [CAT_SCC 12 1] Timer expiry indication received. intTimerId = %hd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC ENG_ERROR_TR 12 2 Rsp
    printformat , ENG_ERROR_TR,  1, CP SCC ENG_ERROR_TR 12 2, N=%d, <systime>  CP - SCC [ENG_ERROR_TR 12 2] Non-SCC or dead timer expiry indication received. sysTimerId = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 12 3 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 12 3, N=%d, <systime>  CP - SCC [CAT_SCC 12 3] Restarting timer. intTimerId = %hd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 12 4 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 12 4, N=%d, <systime>  CP - SCC [CAT_SCC 12 4] Starting timer. intTimerId = %hd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 12 5 Rsp
    printformat ,  CAT_SCC,  5, CP SCC CAT_SCC 12 5, N=%d, <systime>  CP - SCC [CAT_SCC 12 5] Received stop request for intTimerId = %hd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SCC CAT_SCC 12 6 Rsp
    printformat ,  CAT_SCC,  3, CP SCC CAT_SCC 12 6, N=%d, <systime>  CP - SCC [CAT_SCC 12 6] Received stop request for a dead timer. intTimerId = %hd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_API 1 1 Rsp
    printformat ,  CAT_API,  5, CP OTA CAT_API 1 1, N=%d, <systime>  CP - OTA [CAT_API 1 1] otaConnectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_API 1 2 Rsp
    printformat ,  CAT_API,  5, CP OTA CAT_API 1 2, N=%d, <systime>  CP - OTA [CAT_API 1 2] otaInitialize
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_API 1 3 Rsp
    printformat ,  CAT_API,  5, CP OTA CAT_API 1 3, N=%d, <systime>  CP - OTA [CAT_API 1 3] otaOriginate numDigits: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_API 1 4 Rsp
    printformat ,  CAT_API,  5, CP OTA CAT_API 1 4, N=%d, <systime>  CP - OTA [CAT_API 1 4] otaOriginate
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_API 1 5 Rsp
    printformat ,  CAT_API,  5, CP OTA CAT_API 1 5, N=%d, <systime>  CP - OTA [CAT_API 1 5] otaOTASPMsgConfirm success: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_API 1 6 Rsp
    printformat ,  CAT_API,  5, CP OTA CAT_API 1 6, N=%d, <systime>  CP - OTA [CAT_API 1 6] otaOTASPRcvMsgIndication: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_API 1 7 Rsp
    printformat ,  CAT_API,  5, CP OTA CAT_API 1 7, N=%d, <systime>  CP - OTA [CAT_API 1 7] otaOTASPRcvMsgIndication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_API 1 8 Rsp
    printformat ,  CAT_API,  5, CP OTA CAT_API 1 8, N=%d, <systime>  CP - OTA [CAT_API 1 8] otaReleaseReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_API 1 9 Rsp
    printformat ,  CAT_API,  5, CP OTA CAT_API 1 9, N=%d, <systime>  CP - OTA [CAT_API 1 9] otaDisconnectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_API 1 10 Rsp
    printformat ,  CAT_API,  5, CP OTA CAT_API 1 10, N=%d, <systime>  CP - OTA [CAT_API 1 10] otaMS_RESULT %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_API 1 11 Rsp
    printformat ,  CAT_API,  5, CP OTA CAT_API 1 11, N=%d, <systime>  CP - OTA [CAT_API 1 11] otaMS_RESULT
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_API 1 12 Rsp
    printformat ,  CAT_API,  5, CP OTA CAT_API 1 12, N=%d, <systime>  CP - OTA [CAT_API 1 12] otaK
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_API 1 13 Rsp
    printformat ,  CAT_API,  5, CP OTA CAT_API 1 13, N=%d, <systime>  CP - OTA [CAT_API 1 13] otaK
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 1 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 1, N=%d, <systime>  CP - OTA [CAT_OTA 2 1] otaAuthenticationInitialize
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 2 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 2, N=%d, <systime>  CP - OTA [CAT_OTA 2 2] otaAuthenticationSetDigits dm: %d len: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 3 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 3, N=%d, <systime>  CP - OTA [CAT_OTA 2 3] otaAuthenticationSetDigits
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 4 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 4, N=%d, <systime>  CP - OTA [CAT_OTA 2 4] otaAuthenticationRestart
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 5 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 5, N=%d, <systime>  CP - OTA [CAT_OTA 2 5] authParsKeyReq PREV: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 6 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 6, N=%d, <systime>  CP - OTA [CAT_OTA 2 6] authParsKeyReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 7 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 7, N=%d, <systime>  CP - OTA [CAT_OTA 2 7] authParsKeyReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 8 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 8, N=%d, <systime>  CP - OTA [CAT_OTA 2 8] otaAuthenticationKeyGenReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 9 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 9, N=%d, <systime>  CP - OTA [CAT_OTA 2 9] otaAuthenticationKeyGenReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 10 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 10, N=%d, <systime>  CP - OTA [CAT_OTA 2 10] otaAuthenticationMS_RESULTInd: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 11 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 11, N=%d, <systime>  CP - OTA [CAT_OTA 2 11] otaAuthenticationMS_RESULTInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 12 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 12, N=%d, <systime>  CP - OTA [CAT_OTA 2 12] otaAuthenticationK
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 13 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 13, N=%d, <systime>  CP - OTA [CAT_OTA 2 13] otaAuthenticationK
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 14 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 14, N=%d, <systime>  CP - OTA [CAT_OTA 2 14] otaAuthenticationReAuth RAND: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 15 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 15, N=%d, <systime>  CP - OTA [CAT_OTA 2 15] otaWbiosMS_RESULTInd: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 16 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 16, N=%d, <systime>  CP - OTA [CAT_OTA 2 16] otaWbiosMS_RESULTInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 17 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 17, N=%d, <systime>  CP - OTA [CAT_OTA 2 17] otaWbiosKInd: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 18 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 18, N=%d, <systime>  CP - OTA [CAT_OTA 2 18] otaWbiosKInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 2 19 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 2 19, N=%d, <systime>  CP - OTA [CAT_OTA 2 19] Error in FSM Lookup
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 4 1 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 4 1, N=%d, <systime>  CP - OTA [CAT_OTA 4 1] parsApiInitialize
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 4 2 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 4 2, N=%d, <systime>  CP - OTA [CAT_OTA 4 2] Lock Out Event
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 4 3 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 4 3, N=%d, <systime>  CP - OTA [CAT_OTA 4 3] parsAuthKeyRsp
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 4 4 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 4 4, N=%d, <systime>  CP - OTA [CAT_OTA 4 4] parsAuthKeyGenRsp
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 4 5 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 4 5, N=%d, <systime>  CP - OTA [CAT_OTA 4 5] parsAuthReAuthRsp
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 4 6 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 4 6, N=%d, <systime>  CP - OTA [CAT_OTA 4 6] parsSecOTAPARsp
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 4 7 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 4 7, N=%d, <systime>  CP - OTA [CAT_OTA 4 7] parsSecValRsp
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 4 8 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 4 8, N=%d, <systime>  CP - OTA [CAT_OTA 4 8] parsApiRcvMsgInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 4 9 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 4 9, N=%d, <systime>  CP - OTA [CAT_OTA 4 9] parsApiReleaseReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 4 10 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 4 10, N=%d, <systime>  CP - OTA [CAT_OTA 4 10] parsApiInSvcInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 4 11 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 4 11, N=%d, <systime>  CP - OTA [CAT_OTA 4 11] parsApiMsgConfirm
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 4 12 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 4 12, N=%d, <systime>  CP - OTA [CAT_OTA 4 12] Error in FSM Lookup
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 1 Rsp
    printformat ,  CAT_OTA,  4, CP OTA CAT_OTA 5 1, N=%d, <systime>  CP - OTA [CAT_OTA 5 1] Spasm Authentication FAILURE
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 2 Rsp
    printformat ,  CAT_OTA,  4, CP OTA CAT_OTA 5 2, N=%d, <systime>  CP - OTA [CAT_OTA 5 2] SPC Authentication FAILURE
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 3 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 3, N=%d, <systime>  CP - OTA [CAT_OTA 5 3] secApiConnectInd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 4 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 4, N=%d, <systime>  CP - OTA [CAT_OTA 5 4] secApiInitialize
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 5 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 5, N=%d, <systime>  CP - OTA [CAT_OTA 5 5] secApiOrigReq # digits = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 6 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 6, N=%d, <systime>  CP - OTA [CAT_OTA 5 6] secApiOTAPAEnable = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 7 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 7, N=%d, <systime>  CP - OTA [CAT_OTA 5 7] secApiSPCChangeEnable = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 8 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 8, N=%d, <systime>  CP - OTA [CAT_OTA 5 8] secApiReleaseReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 9 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 9, N=%d, <systime>  CP - OTA [CAT_OTA 5 9] secParsOTAPAReq start_stop = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 10 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 10, N=%d, <systime>  CP - OTA [CAT_OTA 5 10] secParsValReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 11 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 11, N=%d, <systime>  CP - OTA [CAT_OTA 5 11] dataParsConfigReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 12 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 12, N=%d, <systime>  CP - OTA [CAT_OTA 5 12] Mobile station locked
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 13 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 13, N=%d, <systime>  CP - OTA [CAT_OTA 5 13] Mobile station unlocked
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 14 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 14, N=%d, <systime>  CP - OTA [CAT_OTA 5 14] dataParsProtCap
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 15 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 15, N=%d, <systime>  CP - OTA [CAT_OTA 5 15] dataParsDownloadReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 16 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 16, N=%d, <systime>  CP - OTA [CAT_OTA 5 16] dataParsCommitReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 17 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 17, N=%d, <systime>  CP - OTA [CAT_OTA 5 17] dataParsSSPRConfigReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 18 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 18, N=%d, <systime>  CP - OTA [CAT_OTA 5 18] dataParsSSPRDownloadReq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 19 Rsp
    printformat ,  CAT_OTA,  4, CP OTA CAT_OTA 5 19, N=%d, <systime>  CP - OTA [CAT_OTA 5 19] Invalid Block Size = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 20 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 20, N=%d, <systime>  CP - OTA [CAT_OTA 5 20] dataAuthGetPermParms
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 21 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 21, N=%d, <systime>  CP - OTA [CAT_OTA 5 21] dataAuthGetNAMParms
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 23 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 23, N=%d, <systime>  CP - OTA [CAT_OTA 5 23] Origination Action
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 24 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 24, N=%d, <systime>  CP - OTA [CAT_OTA 5 24] Connect Action
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 25 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 25, N=%d, <systime>  CP - OTA [CAT_OTA 5 25] Release Action
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 26 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 26, N=%d, <systime>  CP - OTA [CAT_OTA 5 26] OTAPAReq Action
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 27 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 27, N=%d, <systime>  CP - OTA [CAT_OTA 5 27] Reject Action
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP OTA CAT_OTA 5 28 Rsp
    printformat ,  CAT_OTA,  5, CP OTA CAT_OTA 5 28, N=%d, <systime>  CP - OTA [CAT_OTA 5 28] Error in FSM Lookup
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 1 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 1, N=%d, <systime>  CP - SMS [CAT_API 1 1] Initializing SMS Engine
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 2 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 2, N=%d, <systime>  CP - SMS [CAT_API 1 2] teleserviceId %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 3 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 3, N=%d, <systime>  CP - SMS [CAT_API 1 3] Cancelling Message %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 4 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 4, N=%d, <systime>  CP - SMS [CAT_API 1 4] addr digitMode %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 5 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 5, N=%d, <systime>  CP - SMS [CAT_API 1 5] addr numberMode %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 6 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 6, N=%d, <systime>  CP - SMS [CAT_API 1 6] addr numberType %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 7 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 7, N=%d, <systime>  CP - SMS [CAT_API 1 7] addr numberPlan %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 8 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 8, N=%d, <systime>  CP - SMS [CAT_API 1 8] addr numFields %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 9 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 9, N=%d, <systime>  CP - SMS [CAT_API 1 9] chari
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 10 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 10, N=%d, <systime>  CP - SMS [CAT_API 1 10] subaddr type %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 11 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 11, N=%d, <systime>  CP - SMS [CAT_API 1 11] subaddr odd %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 12 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 12, N=%d, <systime>  CP - SMS [CAT_API 1 12] subaddr numFields %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 13 Rsp
    printformat ,  CAT_API,  1, CP SMS CAT_API 1 13, N=%d, <systime>  CP - SMS [CAT_API 1 13] SMS Engine not Initialized
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 14 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 14, N=%d, <systime>  CP - SMS [CAT_API 1 14] smsUiBCastConnect
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 15 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 15, N=%d, <systime>  CP - SMS [CAT_API 1 15] Service Cat Mask %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 16 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 16, N=%d, <systime>  CP - SMS [CAT_API 1 16] Language Mask %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 17 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 17, N=%d, <systime>  CP - SMS [CAT_API 1 17] Min Priority %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 18 Rsp
    printformat ,  CAT_API,  1, CP SMS CAT_API 1 18, N=%d, <systime>  CP - SMS [CAT_API 1 18] SMS Engine not Initialized
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 19 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 19, N=%d, <systime>  CP - SMS [CAT_API 1 19] smsUiBCastDisconnect
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 20 Rsp
    printformat ,  CAT_API,  1, CP SMS CAT_API 1 20, N=%d, <systime>  CP - SMS [CAT_API 1 20] SMS Engine not Initialized
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 21 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 21, N=%d, <systime>  CP - SMS [CAT_API 1 21] smsUiConnect
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 22 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 22, N=%d, <systime>  CP - SMS [CAT_API 1 22] teleserviceId %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 23 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 23, N=%d, <systime>  CP - SMS [CAT_API 1 23] addr digitMode %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 24 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 24, N=%d, <systime>  CP - SMS [CAT_API 1 24] addr numberMode %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 25 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 25, N=%d, <systime>  CP - SMS [CAT_API 1 25] addr numberType %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 26 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 26, N=%d, <systime>  CP - SMS [CAT_API 1 26] addr numberPlan %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 27 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 27, N=%d, <systime>  CP - SMS [CAT_API 1 27] addr numFields %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 28 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 28, N=%d, <systime>  CP - SMS [CAT_API 1 28] chari
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 29 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 29, N=%d, <systime>  CP - SMS [CAT_API 1 29] subaddr type %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 30 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 30, N=%d, <systime>  CP - SMS [CAT_API 1 30] subaddr numFields %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 31 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 31, N=%d, <systime>  CP - SMS [CAT_API 1 31] subaddr chari
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 32 Rsp
    printformat ,  CAT_API,  1, CP SMS CAT_API 1 32, N=%d, <systime>  CP - SMS [CAT_API 1 32] SMS Engine not Initialized
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 33 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 33, N=%d, <systime>  CP - SMS [CAT_API 1 33] smsUiDisconnect teleservice %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 34 Rsp
    printformat ,  CAT_API,  1, CP SMS CAT_API 1 34, N=%d, <systime>  CP - SMS [CAT_API 1 34] SMS Engine not Initialized
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 35 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 35, N=%d, <systime>  CP - SMS [CAT_API 1 35] smsUiSubmit teleservice %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 36 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 36, N=%d, <systime>  CP - SMS [CAT_API 1 36] service cat %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 37 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 37, N=%d, <systime>  CP - SMS [CAT_API 1 37] number of messages %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 38 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 38, N=%d, <systime>  CP - SMS [CAT_API 1 38] msg %d length = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 39 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 39, N=%d, <systime>  CP - SMS [CAT_API 1 39] data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 40 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 40, N=%d, <systime>  CP - SMS [CAT_API 1 40] vpa -- year %d month %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 41 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 41, N=%d, <systime>  CP - SMS [CAT_API 1 41] day %d hours %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 42 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 42, N=%d, <systime>  CP - SMS [CAT_API 1 42] minutes %d seconds %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 43 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 43, N=%d, <systime>  CP - SMS [CAT_API 1 43] vpr = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 44 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 44, N=%d, <systime>  CP - SMS [CAT_API 1 44] ddta -- year %d month %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 45 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 45, N=%d, <systime>  CP - SMS [CAT_API 1 45] day %d hours %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 46 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 46, N=%d, <systime>  CP - SMS [CAT_API 1 46] minutes %d seconds %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 47 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 47, N=%d, <systime>  CP - SMS [CAT_API 1 47] ddtr = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 48 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 48, N=%d, <systime>  CP - SMS [CAT_API 1 48] priority = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 49 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 49, N=%d, <systime>  CP - SMS [CAT_API 1 49] privacy = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 50 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 50, N=%d, <systime>  CP - SMS [CAT_API 1 50] user ack = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 51 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 51, N=%d, <systime>  CP - SMS [CAT_API 1 51] deliver ack = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 52 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 52, N=%d, <systime>  CP - SMS [CAT_API 1 52] alert = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 53 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 53, N=%d, <systime>  CP - SMS [CAT_API 1 53] language = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 54 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 54, N=%d, <systime>  CP - SMS [CAT_API 1 54] addr digitMode %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 55 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 55, N=%d, <systime>  CP - SMS [CAT_API 1 55] addr numberMode %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 56 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 56, N=%d, <systime>  CP - SMS [CAT_API 1 56] addr numberType %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 57 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 57, N=%d, <systime>  CP - SMS [CAT_API 1 57] addr numberPlan %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 58 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 58, N=%d, <systime>  CP - SMS [CAT_API 1 58] addr numFields %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 59 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 59, N=%d, <systime>  CP - SMS [CAT_API 1 59] chari
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 60 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 60, N=%d, <systime>  CP - SMS [CAT_API 1 60] addr digitMode %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 61 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 61, N=%d, <systime>  CP - SMS [CAT_API 1 61] addr numberMode %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 62 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 62, N=%d, <systime>  CP - SMS [CAT_API 1 62] addr numberType %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 63 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 63, N=%d, <systime>  CP - SMS [CAT_API 1 63] addr numberPlan %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 64 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 64, N=%d, <systime>  CP - SMS [CAT_API 1 64] addr numFields %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 65 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 65, N=%d, <systime>  CP - SMS [CAT_API 1 65] chari
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 66 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 66, N=%d, <systime>  CP - SMS [CAT_API 1 66] subaddr type %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 67 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 67, N=%d, <systime>  CP - SMS [CAT_API 1 67] subaddr odd %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 68 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 68, N=%d, <systime>  CP - SMS [CAT_API 1 68] subaddr numFields %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 69 Rsp
    printformat ,  CAT_API,  1, CP SMS CAT_API 1 69, N=%d, <systime>  CP - SMS [CAT_API 1 69] SMS Engine not Initialized
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 70 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 70, N=%d, <systime>  CP - SMS [CAT_API 1 70] smsUiUserAck teleservice %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 71 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 71, N=%d, <systime>  CP - SMS [CAT_API 1 71] addr digitMode %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 72 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 72, N=%d, <systime>  CP - SMS [CAT_API 1 72] addr numberMode %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 73 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 73, N=%d, <systime>  CP - SMS [CAT_API 1 73] addr numberType %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 74 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 74, N=%d, <systime>  CP - SMS [CAT_API 1 74] addr numberPlan %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 75 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 75, N=%d, <systime>  CP - SMS [CAT_API 1 75] addr numFields %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 76 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 76, N=%d, <systime>  CP - SMS [CAT_API 1 76] chari
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 77 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 77, N=%d, <systime>  CP - SMS [CAT_API 1 77] message ID %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 78 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 78, N=%d, <systime>  CP - SMS [CAT_API 1 78] subaddr type %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 79 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 79, N=%d, <systime>  CP - SMS [CAT_API 1 79] subaddr odd %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 80 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 80, N=%d, <systime>  CP - SMS [CAT_API 1 80] subaddr numFields %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 81 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 81, N=%d, <systime>  CP - SMS [CAT_API 1 81] number of messages %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 82 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 82, N=%d, <systime>  CP - SMS [CAT_API 1 82] msg %d length = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 83 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 83, N=%d, <systime>  CP - SMS [CAT_API 1 83] data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 84 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 84, N=%d, <systime>  CP - SMS [CAT_API 1 84] respCode = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 85 Rsp
    printformat ,  CAT_API,  1, CP SMS CAT_API 1 85, N=%d, <systime>  CP - SMS [CAT_API 1 85] SMS Engine not Initialized
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 86 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 86, N=%d, <systime>  CP - SMS [CAT_API 1 86] smsL2AlertInfoSmsMsgInd length %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 87 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 87, N=%d, <systime>  CP - SMS [CAT_API 1 87] data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 88 Rsp
    printformat ,  CAT_API,  1, CP SMS CAT_API 1 88, N=%d, <systime>  CP - SMS [CAT_API 1 88] SMS Engine not Initialized
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 89 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 89, N=%d, <systime>  CP - SMS [CAT_API 1 89] smsL2ExtProtoSmsMsgInd length %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 90 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 90, N=%d, <systime>  CP - SMS [CAT_API 1 90] mst = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 91 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 91, N=%d, <systime>  CP - SMS [CAT_API 1 91] data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 92 Rsp
    printformat ,  CAT_API,  1, CP SMS CAT_API 1 92, N=%d, <systime>  CP - SMS [CAT_API 1 92] SMS Engine not Initialized
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 93 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 93, N=%d, <systime>  CP - SMS [CAT_API 1 93] smsL2MsgConfirm success %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 94 Rsp
    printformat ,  CAT_API,  1, CP SMS CAT_API 1 94, N=%d, <systime>  CP - SMS [CAT_API 1 94] SMS Engine not Initialized
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 95 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 95, N=%d, <systime>  CP - SMS [CAT_API 1 95] smsL2RcvMsgInd length %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 96 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 96, N=%d, <systime>  CP - SMS [CAT_API 1 96] data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 97 Rsp
    printformat ,  CAT_API,  1, CP SMS CAT_API 1 97, N=%d, <systime>  CP - SMS [CAT_API 1 97] SMS Engine not Initialized
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 98 Rsp
    printformat ,  CAT_API,  3, CP SMS CAT_API 1 98, N=%d, <systime>  CP - SMS [CAT_API 1 98] smsSysTimerExpired timer ID %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_API 1 99 Rsp
    printformat ,  CAT_API,  1, CP SMS CAT_API 1 99, N=%d, <systime>  CP - SMS [CAT_API 1 99] SMS Engine not Initialized
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 3 1 Rsp
    printformat ,  CAT_SMS,  4, CP SMS CAT_SMS 3 1, N=%d, <systime>  CP - SMS [CAT_SMS 3 1] rlL2MsgConfirm success = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 3 2 Rsp
    printformat ,  CAT_SMS,  4, CP SMS CAT_SMS 3 2, N=%d, <systime>  CP - SMS [CAT_SMS 3 2] rlL2RcvMsgInd length = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 3 3 Rsp
    printformat ,  CAT_SMS,  4, CP SMS CAT_SMS 3 3, N=%d, <systime>  CP - SMS [CAT_SMS 3 3] data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 3 4 Rsp
    printformat ,  CAT_SMS,  4, CP SMS CAT_SMS 3 4, N=%d, <systime>  CP - SMS [CAT_SMS 3 4] rlTlControlRelease
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 3 5 Rsp
    printformat ,  CAT_SMS,  4, CP SMS CAT_SMS 3 5, N=%d, <systime>  CP - SMS [CAT_SMS 3 5] rlTlSendMsgReq length = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 3 6 Rsp
    printformat ,  CAT_SMS,  4, CP SMS CAT_SMS 3 6, N=%d, <systime>  CP - SMS [CAT_SMS 3 6] data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 3 7 Rsp
    printformat ,  CAT_SMS,  5, CP SMS CAT_SMS 3 7, N=%d, <systime>  CP - SMS [CAT_SMS 3 7] Send Idle Action
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 3 8 Rsp
    printformat ,  CAT_SMS,  5, CP SMS CAT_SMS 3 8, N=%d, <systime>  CP - SMS [CAT_SMS 3 8] Control Release Idle
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 3 9 Rsp
    printformat ,  CAT_SMS,  5, CP SMS CAT_SMS 3 9, N=%d, <systime>  CP - SMS [CAT_SMS 3 9] Send in Msg Outst
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 3 10 Rsp
    printformat ,  CAT_SMS,  5, CP SMS CAT_SMS 3 10, N=%d, <systime>  CP - SMS [CAT_SMS 3 10] Control Release Outst
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 3 11 Rsp
    printformat ,  CAT_SMS,  5, CP SMS CAT_SMS 3 11, N=%d, <systime>  CP - SMS [CAT_SMS 3 11] MsgConfirmOutst
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 1 Rsp
    printformat ,  CAT_SMS,  3, CP SMS CAT_SMS 4 1, N=%d, <systime>  CP - SMS [CAT_SMS 4 1] No address in TL Ack Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 2 Rsp
    printformat ,  CAT_SMS,  3, CP SMS CAT_SMS 4 2, N=%d, <systime>  CP - SMS [CAT_SMS 4 2] No Teleservice Id in TL Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 3 Rsp
    printformat ,  CAT_SMS,  3, CP SMS CAT_SMS 4 3, N=%d, <systime>  CP - SMS [CAT_SMS 4 3] No Destination Address in TL Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 4 Rsp
    printformat ,  CAT_SMS,  3, CP SMS CAT_SMS 4 4, N=%d, <systime>  CP - SMS [CAT_SMS 4 4] Invalid Field in TL Message
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 5 Rsp
    printformat ,  CAT_SMS,  5, CP SMS CAT_SMS 4 5, N=%d, <systime>  CP - SMS [CAT_SMS 4 5] SMS TL Invalid Digit
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 6 Rsp
    printformat ,  CAT_SMS,  4, CP SMS CAT_SMS 4 6, N=%d, <systime>  CP - SMS [CAT_SMS 4 6] tlAseSendMsgReq id = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 7 Rsp
    printformat ,  CAT_SMS,  4, CP SMS CAT_SMS 4 7, N=%d, <systime>  CP - SMS [CAT_SMS 4 7] tlRlRcvMsgInd length = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 8 Rsp
    printformat ,  CAT_SMS,  4, CP SMS CAT_SMS 4 8, N=%d, <systime>  CP - SMS [CAT_SMS 4 8] data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 9 Rsp
    printformat ,  CAT_SMS,  4, CP SMS CAT_SMS 4 9, N=%d, <systime>  CP - SMS [CAT_SMS 4 9] tlRlErrorInd id = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 10 Rsp
    printformat ,  CAT_SMS,  4, CP SMS CAT_SMS 4 10, N=%d, <systime>  CP - SMS [CAT_SMS 4 10] tlSysTimerExpired id = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 11 Rsp
    printformat ,  CAT_SMS,  5, CP SMS CAT_SMS 4 11, N=%d, <systime>  CP - SMS [CAT_SMS 4 11] SMS TL Send Action
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 12 Rsp
    printformat ,  CAT_SMS,  5, CP SMS CAT_SMS 4 12, N=%d, <systime>  CP - SMS [CAT_SMS 4 12] SMS TL Rcv Msg Action
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 13 Rsp
    printformat ,  CAT_SMS,  5, CP SMS CAT_SMS 4 13, N=%d, <systime>  CP - SMS [CAT_SMS 4 13] SMS TL Error Action
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 14 Rsp
    printformat ,  CAT_SMS,  5, CP SMS CAT_SMS 4 14, N=%d, <systime>  CP - SMS [CAT_SMS 4 14] No Such Transaction exists for id %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 15 Rsp
    printformat ,  CAT_SMS,  5, CP SMS CAT_SMS 4 15, N=%d, <systime>  CP - SMS [CAT_SMS 4 15] SMS TL Timer Expired Action
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 4 16 Rsp
    printformat ,  CAT_SMS,  5, CP SMS CAT_SMS 4 16, N=%d, <systime>  CP - SMS [CAT_SMS 4 16] Invalid Timer Id
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 5 1 Rsp
    printformat ,  CAT_SMS,  3, CP SMS CAT_SMS 5 1, N=%d, <systime>  CP - SMS [CAT_SMS 5 1] Bad Message Parameter Id in Teleservice Message id = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 5 2 Rsp
    printformat ,  CAT_SMS,  3, CP SMS CAT_SMS 5 2, N=%d, <systime>  CP - SMS [CAT_SMS 5 2] Invalid SAP for Cancel
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 5 3 Rsp
    printformat ,  CAT_SMS,  3, CP SMS CAT_SMS 5 3, N=%d, <systime>  CP - SMS [CAT_SMS 5 3] Invalid SAP for Submit
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 5 4 Rsp
    printformat ,  CAT_SMS,  3, CP SMS CAT_SMS 5 4, N=%d, <systime>  CP - SMS [CAT_SMS 5 4] Invalid SAP for User Ack
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 5 5 Rsp
    printformat ,  CAT_SMS,  5, CP SMS CAT_SMS 5 5, N=%d, <systime>  CP - SMS [CAT_SMS 5 5] ASE %d received message from TL
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SMS CAT_SMS 5 6 Rsp
    printformat ,  CAT_SMS,  5, CP SMS CAT_SMS 5 6, N=%d, <systime>  CP - SMS [CAT_SMS 5 6] ASE %d received Error causeCode = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP Wrapper Call Rsp
    printformat , 1, 1, CP Wrapper Call, N=%d, <systime>  CP - PSW Wrapper Call: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FuncCall, uint32, base=enum:Psw Func call
End

Begin Message, CP Trace CP Access Probe Timing Rsp
    printformat , 1, 1, CP Access Probe Timing, N=%d, <systime>  CP - PSW System Time = %u, Send Time = %u
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP Srv Config Rsp
    printformat , 1, 1, CP Srv Config, N=%d, <systime>  CP - PSW Srv Config - FrwMuxOpt=%d, RevMuxOpt=%d, FwdRates=%d, RevRates=%x, NumConn=%d, ActTime=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FrwMuxOpt, uint32
    RevMuxOpt, uint32
    FrwRates, uint32
    RevRates, uint32
    NumConn, uint32
    ActTime, uint32
End

Begin Message, CP Trace CP Srv Opt Rsp
    printformat , 1, 1, CP Srv Opt, N=%d, <systime>  CP - PSW Srv Opt - ConRef=%d, SrvOpt=%d, FwdTrafficType=%s, RevTrafficType=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ConRef, uint32
    SrvOpt, uint32
    FwdTrafficT, uint32, base=enum:Traffic Type
    RevTrafficT, uint32, base=enum:Traffic Type
End

Begin Message, CP Trace CP Eng Request Rsp
    printformat , 1, 1, CP Eng Request, N=%d, <systime>  CP - PSW engRelayCPRequest(), Type = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Type, uint32, base=enum:Ps Eng Type
End

Begin Message, CP Trace CP CDMA System Status Rsp
    printformat , PSW, 1, CP CDMA System Status, N=%d, <systime>  CP - PSW CDMA System Status, State=%s, PrevState=%s, %s, Band=%s, Channel=%d, Pilot PN=%d, Sid=%d, Nid=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CL3 State, uint32, base=enum:Ps CP State
    CL3 PrevState, uint32, base=enum:Ps CP State
    roam, uint32, base=enum:RoamInd
    band, uint32, base=enum:Band Class Type Enum
    channel, uint32, base=10
    PilotPN, uint32, base=10
    sid, uint32, base=10
    nid, uint32, base=10
End

Begin Message, CP Trace CP Report Event Rsp
    printformat , 1, 1, CP Report Event, N=%d, <systime>  CP - PSW Ps Report Event = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:Call Processing Event
End

Begin Message, CP Trace CP Report Status Rsp
    printformat , 1, 1, CP Report Status, N=%d, <systime>  CP - PSW Report Status = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Status, uint32, base=enum:Report Status
End

Begin Message, CP Trace CP DBM Ack Rsp
    printformat , 1, 1, CP DBM Ack, N=%d, <systime>  CP - PSW DBM Ack = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Status, uint32, base=enum:Psw DBM Ack
End

Begin Message, CP Trace CP Srv Config validate Rsp
    printformat , 1, 1, CP Srv Config validate, N=%d, <systime>  CP - PSW Service Cfg Validate is %s, %d service option is connected, which is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Validate, uint32, base=enum:False/True
    NumConn, uint32,
    SrvOpt, uint32, base=enum:Service Option Table
End

Begin Message, CP Trace CP Pwr Meas Params Request Rsp
    printformat , 1, 1, CP Pwr Meas Params Request, N=%d, <systime>  CP - PSW PWR MEAS Reoprt Request indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP NN Srv Cfg Event Rsp
    printformat , 1, 1, CP NN Srv Cfg Event, N=%d, <systime>  CP - PSW Non Neg Srv Cfg Received indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP NN Srv Cfg Null Ptr Event Rsp
    printformat , 1, 1, CP NN Srv Cfg Null Ptr Event, N=%d, <systime>  CP - PSW Non Neg Null Srv Cfg Received, and FpcIncl value is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FpcIncl, uint32, base=enum:False/True
End

Begin Message, CP Trace CP NN Srv Cfg Number Of LPM Entries Exceeded Event Rsp
    printformat , 1, 1, CP NN Srv Cfg Number Of LPM Entries Exceeded Event, N=%d, <systime>  CP - PSW Non Neg Srv Cfg No. Of LPM Entries is %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NumLpmEntries, uint32
End

Begin Message, CP Trace CP PSW Srv Opt Cont Rsp
    printformat , 1, 1, CP PSW Srv Opt Cont, N=%d, <systime>  CP - PSW Srv Opt Cont.: Con.Ref=%d, SO=%d, Data Length = %d, Data[0]=0X%x, Data[1]=0X%x, Data[2]=0X%x, Data[3]=0X%x, Data[4]=0X%x, Data[5]=0X%x, Data[6]=0X%x.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Con.Ref, uint32
    SO, uint32
    Data Length, uint32
    Data[0], uint32
    Data[1], uint32
    Data[2], uint32
    Data[3], uint32
    Data[4], uint32
    Data[5], uint32
    Data[6], uint32
End

Begin Message, CP Trace CP PSW L1D_FSCH_MSG_TRACE_ID Rsp
    printformat , PSW,  1, CP PSW L1D_FSCH_MSG_TRACE_ID, N=%d, <systime>  CP - CP PSW L1D_FSCH_MSG_TRACE_ID PilotGatingUseRate = %d, NumForSch = %d, SchId = %d, ForSchRate = %d, ForSchDuration = %d, ForSchActionTime.Time = 0x%X, NumSupSho = %d, PilotPn = %d, ForSchCcIndex = %d, QofMaskIdSch = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotGatingUseRate, uint32
    NumForSch, uint32
    SchId, uint32
    ForSchRate, uint32
    ForSchDuration, uint32
    ForSchActionTime.Time, uint32
    NumSupSho, uint32
    PilotPn, uint32
    ForSchCcIndex, uint32
    QofMaskIdSch, uint32
End

Begin Message, CP Trace CP PSW L1D_PSW_RSR_DEALLOC_TRACE_ID Rsp
    printformat , PSW,  1, CP PSW L1D_PSW_RSR_DEALLOC_TRACE_ID, N=%d, <systime>  CP - CP PSW L1D_PSW_RSR_DEALLOC_TRACE_ID ActTime.Immediate = %d, Channels = %d, PilotGatingRate = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PSW L1D_PSW_RSR_ALLOC_TRACE_ID Rsp
    printformat , PSW,  1, CP PSW L1D_PSW_RSR_ALLOC_TRACE_ID, N=%d, <systime>  CP - CP PSW L1D_PSW_RSR_ALLOC_TRACE_ID ActTime.Time = 0x%X, ActTime.Immediate = %d, Channels = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PSW L1D SERVICE_CONFIG_MSG_TRACE_ID Rsp
    printformat , PSW,  1, CP PSW L1D SERVICE_CONFIG_MSG_TRACE_ID, N=%d, <systime>  CP - CP PE L1D SERVICE_CONFIG_MSG_TRACE_ID ForFchRc = %d, RevFchRc = %d, ForDcchRc = %d, RevDcchRc = %d, NumForSch = %d, ForSchConfig[ 0 ].SchRc = %d, ForSchConfig[ 0 ].Coding = %d, NumRevSch = %d, RevSchConfig[ 0 ].SchRc = %d, SrvcConfig.RevSchConfig[ 0 ].Coding = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ForFchRc, int32
    RevFchRc, int32
    ForDcchRc, int32
    RevDcchRc, int32
    NumForSch, int32
    ForSchRc, int32
    ForSchCoding, int32
    NumRevSch, int32
    RevSchRc, int32
    RevSchCoding, int32
End

Begin Message, CP Trace CP PSW LMD_SERVICE_CONFIG_MSG_TRACE_ID Rsp
    printformat , PSW,  1, CP PSW LMD_SERVICE_CONFIG_MSG_TRACE_ID, N=%d, <systime>  CP - CP PE LMD_SERVICE_CONFIG_MSG_TRACE_ID ForMuxOption = %d, RevMuxOption = %d, ForNumBits = %d, RevNumBits = %d, NumForSch = %d, ForSchConfig[ 0 ].SchMux = 0x%X, ForSchConfig[ 0 ].Coding = %d, NumRevSch = %d, RevSchConfig[ 0 ].SchMux = 0x%X, SrvcConfig.RevSchConfig[ 0 ].Coding = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PSW L1D_RSCH_MSG_TRACE_ID Rsp
    printformat , PSW,  1, CP PSW L1D_RSCH_MSG_TRACE_ID, N=%d, <systime>  CP - CP PSW L1D_RSCH_MSG_TRACE_ID NumRevSch = %d, RevSchId = %d, RevSchRate = %d, RevSchDuration = %d, RevWalshId = %d, PilotReferenceLevel = %d, RschPower = %d, RevSchActionTime.Immediate = %d, RevSchActionTime.Time = 0x%X.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NumRevSch, uint32
    RevSchId, uint32
    RevSchRate, uint32
    RevSchDuration, uint32
    RevWalshId, uint32
    PilotReferenceLevel, uint32
    RschPower, uint32
    RevSchActionTime.Immediate, uint32
    RevSchActionTime.Time, uint32
End

Begin Message, CP Trace CP PSW LMD_RESOURCE_UPDATE_TRACE_ID Rsp
    printformat , PSW,  1, CP PSW LMD_RESOURCE_UPDATE_TRACE_ID, N=%d, <systime>  CP - CP PSW LMD_RESOURCE_UPDATE_TRACE_ID ActionTime = 0x%x, ChnlInd - %s, SrvConfigNonNegInc - %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ActionTime, uint32
    ChnlInd, uint32,base = enum:ChannelId
    SrvConfigNonNegInc, uint32
End

Begin Message, CP Trace CP SCC REQ CP Rsp
    printformat , 1, 1, CP SCC REQ CP, N=%d, <systime>  CP - PSW SCC CP request = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RQType, uint32, base=enum:CP Request Type
End

Begin Message, CP Trace CP SCC OTASP CHK DIGIT Rsp
    printformat , 1, 1, CP SCC OTASP CHK DIGIT, N=%d, <systime>  CP - PSW SCC check OTASP digit mode=%s, OTASP=%s, block ID=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Digit Mode, uint32, base=enum:TBCD/ASCII
    Otasp call, uint32, base=enum:False/True
    Block number, uint32, base=10
End

Begin Message, CP Trace CP SCC SVC CFG REQ Rsp
    printformat , 1, 1, CP SCC SVC CFG REQ, N=%d, <systime>  CP - PSW SCC Mux opt fwd=%d,rev=%d,rate fwd=%d,rev=%d,%d SO's connected,ref=%d,SO=%d,%s at fwd,%s at rev
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FWD Mux Opt, uint32
    REV Mux Opt, uint32
    FWD Rate, uint32
    REV Rate, uint32
    Num SO Conn, uint32
    Conn Ref, uint32
    Service Opt, uint32
    FWD Traffic, uint32, base=enum:CP Traffic Type
    REV Traffic, uint32, base=enum:CP Traffic Type
End

Begin Message, CP Trace CP SCC SVC CTRL REQ Rsp
    printformat , 1, 1, CP SCC SVC CTRL REQ, N=%d, <systime>  CP - PSW SCC conn ref=%d,service opt=%d,%d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Conn Ref, uint32
    Service Opt, uint32
    Length, uint32
End

Begin Message, CP Trace CP SCC SO REQ Rsp
    printformat , 1, 1, CP SCC SO REQ, N=%d, <systime>  CP - PSW SCC request for SO=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Service Opt, uint32
End

Begin Message, CP Trace CP SCC RATE CTRL Rsp
    printformat , 1, 1, CP SCC RATE CTRL, N=%d, <systime>  CP - PSW SCC rate reduction factor=%s, act time=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Rate Reduct, uint32, base=enum:Rate Reduction Type
    Action time, uint32
End

Begin Message, CP Trace CP SCC VOCODER CTRL Rsp
    printformat , 1, 1, CP SCC VOCODER CTRL, N=%d, <systime>  CP - PSW SCC init codec=%s,disable audio=%s,blank ifq=%s at act time=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Init codec, uint32, base=enum:False/True
    Disable audio, uint32, base=enum:False/True
    Blank ifq, uint32, base=enum:False/True
    Action time, uint32,
End

Begin Message, CP Trace CP SCC LPBK CONN IND Rsp
    printformat , 1, 1, CP SCC LPBK CONN IND, N=%d, <systime>  CP - PSW SCC Loop Back connected indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC LPBK NOSVC IND Rsp
    printformat , 1, 1, CP SCC LPBK NOSVC IND, N=%d, <systime>  CP - PSW SCC no service indication.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC LPBK ORIG FAIL Rsp
    printformat , 1, 1, CP SCC LPBK ORIG FAIL, N=%d, <systime>  CP - PSW SCC Loop Back orig fail reason = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Fail Reason, uint32, base=enum:Orig Fail Reason Type
End

Begin Message, CP Trace CP SCC LPBK READY IND Rsp
    printformat , 1, 1, CP SCC LPBK READY IND, N=%d, <systime>  CP - PSW SCC Loop Back Ready band class=%s%s,sid=%d,nid=%d,protRev=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band Class, uint32, base=enum:Band Class Type Enum
    Band Block, uint32, base=enum:Block Type
    Sid, uint32
    Nid, uint32
    Prot Rev, uint32
End

Begin Message, CP Trace CP SCC LPBK RELEASE IND Rsp
    printformat , 1, 1, CP SCC LPBK RELEASE IND, N=%d, <systime>  CP - PSW SCC Loop Back release reason= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Release Reason, uint32, base=enum:Release Reason Type
End

Begin Message, CP Trace CP SCC LPBK RELEASE REQ Rsp
    printformat , 1, 1, CP SCC LPBK RELEASE REQ, N=%d, <systime>  CP - PSW SCC Loop Back release request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC KILL TMR Rsp
    printformat , 1, 1, CP SCC KILL TMR, N=%d, <systime>  CP - PSW SCC kill timer ID=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Timer ID, uint32
End

Begin Message, CP Trace CP SCC SET TMR Rsp
    printformat , 1, 1, CP SCC SET TMR, N=%d, <systime>  CP - PSW SCC set timer=%dmsec, ID=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Duration, uint32
    Timer ID, uint32
End

Begin Message, CP Trace CP SCC VS ALART Rsp
    printformat , 1, 1, CP SCC VS ALART, N=%d, <systime>  CP - PSW SCC voice call alert
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC VS TCH CONN Rsp
    printformat , 1, 1, CP SCC VS TCH CONN, N=%d, <systime>  CP - PSW SCC VS channel connect at %s type
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Voice Type, uint32, base=enum:Vocoder Sub Type
End

Begin Message, CP Trace CP SCC VS NOSVC IND Rsp
    printformat , 1, 1, CP SCC VS NOSVC IND, N=%d, <systime>  CP - PSW SCC oosa in voice call
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC VS ORIG FAIL Rsp
    printformat , 1, 1, CP SCC VS ORIG FAIL, N=%d, <systime>  CP - PSW SCC voice orig fail reason=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Fail Reason, uint32, base=enum:Orig Fail Reason Type
End

Begin Message, CP Trace CP SCC VS PAGE IND Rsp
    printformat , 1, 1, CP SCC VS PAGE IND, N=%d, <systime>  CP - PSW SCC voice call page received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC VS READY IND Rsp
    printformat , 1, 1, CP SCC VS READY IND, N=%d, <systime>  CP - PSW SCC voice ready band class=%s%s,sid=%d,nid=%d,protRev=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band Class, uint32, base=enum:Band Class Type Enum
    Band Block, uint32, base=enum:Block Type
    Sid, uint32
    Nid, uint32
    Prot Rev, uint32
End

Begin Message, CP Trace CP SCC VS REL IND Rsp
    printformat , 1, 1, CP SCC VS REL IND, N=%d, <systime>  CP - PSW SCC voice release due to %s reason
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Release Reason, uint32, base=enum:Non-Fade/Fade
End

Begin Message, CP Trace CP SCC VS PREF Rsp
    printformat , 1, 1, CP SCC VS PREF, N=%d, <systime>  CP - PSW SCC vocoder pref=%s, prefer Mux%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Vocoder pref, uint32, base=enum:Vocoder Pref
    Pref Mux2, uint32
End

Begin Message, CP Trace CP SCC VS SW FAIL IND Rsp
    printformat , 1, 1, CP SCC VS SW FAIL IND, N=%d, <systime>  CP - PSW SCC Voice switch fail at %s reason
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Fail Reason, uint32, base=enum:Orig Fail Reason Type
End

Begin Message, CP Trace CP SCC SMS TX RSP Rsp
    printformat , 1, 1, CP SCC SMS TX RSP, N=%d, <systime>  CP - PSW SCC Tx successful is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Success, uint32, base=enum:False/True
End

Begin Message, CP Trace CP SCC SMS RX IND Rsp
    printformat , 1, 1, CP SCC SMS RX IND, N=%d, <systime>  CP - PSW SCC SMS rcvd %d bytes of data
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Length, uint32
End

Begin Message, CP Trace CP SCC SMS PREF Rsp
    printformat , 1, 1, CP SCC SMS PREF, N=%d, <systime>  CP - PSW SCC SMS mux opt = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Mux option, uint32
End

Begin Message, CP Trace CP SCC SMS REL Rsp
    printformat , 1, 1, CP SCC SMS REL, N=%d, <systime>  CP - PSW SCC SMS release indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC CLIR CAUSE Rsp
    printformat , 1, 1, CP SCC CLIR CAUSE, N=%d, <systime>  CP - PSW SCC clir cause is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CLIR cause, uint32, base=enum:False/True
End

Begin Message, CP Trace CP SCC AUDIO CTRL Rsp
    printformat , 1, 1, CP SCC AUDIO CTRL, N=%d, <systime>  CP - PSW SCC audio control uplink=%d,downlink=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Uplink, uint32
    Downlink, uint32
End

Begin Message, CP Trace CP SCC RLP INIT Rsp
    printformat , 1, 1, CP SCC RLP INIT, N=%d, <systime>  CP - PSW SCC RLP init mux opt REV=0x%03X,FWD=0x%03X,prot ver=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Tx Mux option, uint32
    Rx Mux option, uint32
    Protocol Ver, uint32, base=enum:RLP Protocol Ver Type
End

Begin Message, CP Trace CP SCC RLP OPEN Rsp
    printformat , 1, 1, CP SCC RLP OPEN, N=%d, <systime>  CP - PSW SCC RLP open request.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC RLP RESET Rsp
    printformat , 1, 1, CP SCC RLP RESET, N=%d, <systime>  CP - PSW SCC RLP reset mux opt REV=0x%03X,FWD=0x%03X,prot ver=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Tx Mux option, uint32
    Rx Mux option, uint32
    Protocol Ver, uint32, base=enum:RLP Protocol Ver Type
End

Begin Message, CP Trace CP SCC DS CONN Rsp
    printformat , 1, 1, CP SCC DS CONN, N=%d, <systime>  CP - PSW SCC Async Data SO=%d, secondary traffic=%s, mobile terminated=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Service option, uint32, base=enum:Service Option Table
    Secondary traffic, uint32, base=enum:False/True
    Mobile Terminate, uint32, base=enum:False/True
End

Begin Message, CP Trace CP SCC DS RLS Rsp
    printformat , 1, 1, CP SCC DS RLS, N=%d, <systime>  CP - PSW SCC Async Data release = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Release Reason, uint32, base=enum:Release Reason Type
End

Begin Message, CP Trace CP SCC DS NOSVC IND Rsp
    printformat , 1, 1, CP SCC DS NOSVC IND, N=%d, <systime>  CP - PSW SCC Async Data oosa
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC DS ORIG FAIL Rsp
    printformat , 1, 1, CP SCC DS ORIG FAIL, N=%d, <systime>  CP - PSW SCC Async Data orig fail reason=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Fail Reason, uint32, base=enum:Orig Fail Reason Type
End

Begin Message, CP Trace CP SCC DS PAGE IND Rsp
    printformat , 1, 1, CP SCC DS PAGE IND, N=%d, <systime>  CP - PSW SCC Async Data page ind for SO= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Service type, uint32, base=enum:Service Option Table
End

Begin Message, CP Trace CP SCC DS ALERT IND Rsp
    printformat , 1, 1, CP SCC DS ALERT IND, N=%d, <systime>  CP - PSW SCC Async Data alert with SO = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Service option, uint32, base=enum:Service Option Table
End

Begin Message, CP Trace CP SCC DS ENABLE REQ Rsp
    printformat , 1, 1, CP SCC DS ENABLE REQ, N=%d, <systime>  CP - PSW SCC Async Data enable bits = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Enable Bits, uint32
End

Begin Message, CP Trace CP SCC DS ANSWER REQ Rsp
    printformat , 1, 1, CP SCC DS ANSWER REQ, N=%d, <systime>  CP - PSW SCC Async Data answer request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC DS RELEASE REQ Rsp
    printformat , 1, 1, CP SCC DS RELEASE REQ, N=%d, <systime>  CP - PSW SCC Async Data release request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC DS READY IND Rsp
    printformat , 1, 1, CP SCC DS READY IND, N=%d, <systime>  CP - PSW SCC Async Data ready band class=%s%s,sid=%d,nid=%d,protRev=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band Class, uint32, base=enum:Band Class Type Enum
    Band Block, uint32, base=enum:Block Type
    Sid, uint32
    Nid, uint32
    Prot Rev, uint32
End

Begin Message, CP Trace CP SCC PS CONN Rsp
    printformat , 1, 1, CP SCC PS CONN, N=%d, <systime>  CP - PSW SCC Packet Data conn to SO=%s,secondary channel is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Service option, uint32, base=enum:Service Option Table
    Secondary chanel, uint32, base=enum:False/True
End

Begin Message, CP Trace CP SCC PS DORMN IND Rsp
    printformat , 1, 1, CP SCC PS DORMN IND, N=%d, <systime>  CP - PSW SCC Packet Data entering dormant mode
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC PS DORMN CTRL IND Rsp
    printformat , 1, 1, CP SCC PS DORMN CTRL IND, N=%d, <systime>  CP - PSW SCC Packet Data dormn ctrl by BS is %s, time=%d msec
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Dormn Ctrl, uint32, base=enum:Enable/Disable
    Time Const, uint32
End

Begin Message, CP Trace CP SCC PS NOSVC IND Rsp
    printformat , 1, 1, CP SCC PS NOSVC IND, N=%d, <systime>  CP - PSW SCC Packet Data oosa
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC PS ORIG FAIL Rsp
    printformat , 1, 1, CP SCC PS ORIG FAIL, N=%d, <systime>  CP - PSW SCC Packet Data orig fail at %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Fail Reason, uint32, base=enum:Orig Fail Reason Type
End

Begin Message, CP Trace CP SCC PS EVENT Rsp
    printformat , 1, 1, CP SCC PS EVENT, N=%d, <systime>  CP - PSW SCC Packet Data event = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Fail Reason, uint32, base=enum:Packet Event Type
End

Begin Message, CP Trace CP SCC PS STATE Rsp
    printformat , 1, 1, CP SCC PS STATE, N=%d, <systime>  CP - PSW SCC Packet Data state = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Fail Reason, uint32, base=enum:Packet State Type
End

Begin Message, CP Trace CP SCC PS READY IND Rsp
    printformat , 1, 1, CP SCC PS READY IND, N=%d, <systime>  CP - PSW SCC Packet Data ready band class=%s%s,sid=%d,nid=%d,protRev=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band Class, uint32, base=enum:Band Class Type Enum
    Band Block, uint32, base=enum:Block Type
    Sid, uint32
    Nid, uint32
    Prot Rev, uint32
End

Begin Message, CP Trace CP SCC PS RLS Rsp
    printformat , 1, 1, CP SCC PS RLS, N=%d, <systime>  CP - PSW SCC Packet Data release reason = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Release Reason, uint32, base=enum:Release Reason Type
End

Begin Message, CP Trace CP SCC PS PAGE IND RSP
    printformat , 1, 1, CP SCC PS PAGE IND RSP, N=%d, <systime>  CP - PSW SCC Packet Data has a page at SO=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Service Option, uint32, base=enum:Service Option Table
End

Begin Message, CP Trace CP SCC PS ALERT IND Rsp
    printformat , 1, 1, CP SCC PS ALERT IND, N=%d, <systime>  CP - PSW SCC Packet Data has an alert at SO=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Service Option, uint32, base=enum:Service Option Table
End

Begin Message, CP Trace CP SCC PS Zone Changed IND Rsp
    printformat , 1, 1, CP SCC PS Zone Changed IND, N=%d, <systime>  CP - PSW SCC Packet Data zone changed indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC OTASP CONN IND Rsp
    printformat , 1, 1, CP SCC OTASP CONN IND, N=%d, <systime>  CP - PSW SCC OTASP is connected
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC OTASP RLS IND Rsp
    printformat , 1, 1, CP SCC OTASP RLS IND, N=%d, <systime>  CP - PSW SCC OTASP is released, reason=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Realease Reason, uint32, base=enum:Release Reason Type
End

Begin Message, CP Trace CP SCC OTASP RX IND Rsp
    printformat , 1, 1, CP SCC OTASP RX IND, N=%d, <systime>  CP - PSW SCC OTASP receive %d of bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Byte Length, uint32
End

Begin Message, CP Trace CP SCC OTASP TX RSP Rsp
    printformat , 1, 1, CP SCC OTASP TX RSP, N=%d, <systime>  CP - PSW SCC OTASP Tx status %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Success, uint32, base=enum:Failed/Successful
End

Begin Message, CP Trace CP SCC PS ANS REQ Rsp
    printformat , 1, 1, CP SCC PS ANS REQ, N=%d, <systime>  CP - PSW SCC Packet Data answer request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC PS RLS REQ Rsp
    printformat , 1, 1, CP SCC PS RLS REQ, N=%d, <systime>  CP - PSW SCC Packet Data release request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC PS DORMN REQ Rsp
    printformat , 1, 1, CP SCC PS DORMN REQ, N=%d, <systime>  CP - PSW SCC Packet Data req dormant to cpe
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC DATA PREF Rsp
    printformat , 1, 1, CP SCC DATA PREF, N=%d, <systime>  CP - PSW SCC data services %s, data pref SO=%d, fax pref SO=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Accept Map, uint32, base=enum:Page Accept Map Type
    Data SO Pref, uint32
    Fax SO Pref, uint32
End

Begin Message, CP Trace CP SCC PACKET PREF Rsp
    printformat , 1, 1, CP SCC PACKET PREF, N=%d, <systime>  CP - PSW SCC Packet Data dormant by SCC=%s,LDR SO=%d,MDR SO=%d,Pkt prefer %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Dormant by SCC, uint32, base=enum:False/True
    LDR SO prefer, uint32
    MDR SO prefer, uint32
    Pkt prefer, uint32, base=enum:Pkt prefer on MDR Type
End

Begin Message, CP Trace CP SCC OTASP RCVD Rsp
    printformat , 1, 1, CP SCC OTASP RCVD, N=%d, <systime>  CP - PSW SCC OTASP receive valid message is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Success, uint32, base=enum:False/True
End

Begin Message, CP Trace CP SCC OTASP REL REQ Rsp
    printformat , 1, 1, CP SCC OTASP REL REQ, N=%d, <systime>  CP - PSW SCC OTASP request to release
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC OTASP TX REQ LEN Rsp
    printformat , 1, 1, CP SCC OTASP TX REQ LEN, N=%d, <systime>  CP - PSW SCC OTASP request to send %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Length, uint32
End

Begin Message, CP Trace CP SCC OTASP SO PREF Rsp
    printformat , 1, 1, CP SCC OTASP SO PREF, N=%d, <systime>  CP - PSW SCC OTASP preferred SO = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SoPrefer, uint32
End

Begin Message, CP Trace CP SCC AMPS VCH REQ Rsp
    printformat , 1, 1, CP SCC AMPS VCH REQ, N=%d, <systime>  CP - PSW SCC Req to switch to AMPS voice channel
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SCC VS SWITCH SO Rsp
    printformat , 1, 1, CP SCC VS SWITCH SO, N=%d, <systime>  CP - PSW SCC To switch to %s Service Type
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    New Service, uint32, base=enum:Service Option Table
End

Begin Message, CP Trace CP SCC LS Service Option Control Rsp
    printformat , 1, 1, CP SCC LS Service Option Control, N=%d, <systime>  CP - PSW SCC Recvd LS SOC words for %d bytes action time=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Length, uint32
    Act Time, uint32
End

Begin Message, CP Trace CP CDMA Idle SubState Event Rsp
    printformat , PSW, 1, CP CDMA Idle SubState Event, N=%d, <systime>  CP - CDMA CP_IDLE, subState=%s, Event=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Idle subState, uint32, base=enum:PS Idle Substate
    Event, uint32, base=enum:CP Request Type
End

Begin Message, CP Trace CP CDMA Slotted Wake Mode Ind Rsp
    printformat , PSW, 1, CP CDMA Slotted Wake Mode Ind, N=%d, <systime>  CP - Slotted Wake Mode : %s, QpchInd : %s, EcIo = %d, PilotEnergy = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Wake Mode, uint32, base=enum:Slotted Wake Mode
    QpchInd, uint32, base=enum:Qpch Indication Enum
    IcIo, uint32,
    Pilot Energy, uint32
End

Begin Message, CP Trace CP PSW Cmd Mailbox Msg Trace Rsp
    printformat , PSW, 1, CP PSW Cmd Mailbox Msg Trace, N=%d, <systime>  PSW Cmd Mbox: Msg Id - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Id, uint32, base=enum:PswMsgId Enum
End

Begin Message, CP Trace CP SCC PS Packet Zone Hysteresis Enabled Rsp
    printformat , 1, 1, CP SCC PS Packet Zone Hysteresis Enabled, N=%d, <systime>  CP - CP Packet Zone Hysteresis is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Success, uint32, base=enum:Disabled/Enabled
End

Begin Message, CP Trace CP SCC PS Packet Zone Hysteresis Active Ind Rsp
    printformat , 1, 1, CP SCC PS Packet Zone Hysteresis Active Ind, N=%d, <systime>  CP - CP Packet Zone Hysteresis Activation Indicator is set to %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Success, uint32, base=enum:0/1
End

Begin Message, CP Trace CP SCC PS Packet Zone Hysteresis Running Rsp
    printformat , 1, 1, CP SCC PS Packet Zone Hysteresis Running, N=%d, <systime>  CP - CP Packet Zone Hysteresis is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Success, uint32, base=enum:not running/running
End

Begin Message, CP Trace CP PSW UTK API General Rsp
    printformat , 1, 1, CP VAL UTK API General, N=%d, <systime>  CP - PSW UTK API General: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE_ENGTC_EVENT_TRACE_ID Rsp
    printformat , 1, 1, CP PE_ENGTC_EVENT_TRACE_ID, N=%d, <systime>  CP - PE TC Conv State Enter NextCDMAState=%s, Event=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NextCDMAState, uint32, base=enum:Ps CP State
    Event, uint32, base=enum:CP Request Type
End

Begin Message, CP Trace CP PE STORING OMT Rsp
    printformat , ENG_CP_TR,  5, CP PE STORING OMT, N=%d, <systime>  CP - PE Storing Ovhd Msg: somTime 0x%08X, sysTime 0x%08X, type = %d, length = %d, SDU offset = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE REPLAYING PCH EGSRM Rsp
    printformat , ENG_CP_TR,  5, CP PE REPLAYING PCH EGSRM, N=%d, <systime>  CP - Replaying PCH EGSRM chan. ID = %d, Pilot PN = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE REPLAYING PCH ECCLM Rsp
    printformat , ENG_CP_TR,  5, CP PE REPLAYING PCH ECCLM, N=%d, <systime>  CP - Replaying PCH ECCLM chan. ID = %d, Pilot PN = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE RESET OVHD SEQ NUM Rsp
    printformat , ENG_CP_TR, 5, CP PE RESET OVHD SEQ NUM, N=%d, <systime>  CP - Reset Overhead Sequence Numbers.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE EGSRM RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE EGSRM RECEIVED, N=%d, <systime>  CP - length = %d, SDU Offset = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE VALID EGSRM RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE VALID EGSRM RECEIVED, N=%d, <systime>  CP - Seq.#=%d, Redirect ACCOLC=%d, ReturnIfFail=%d, Del.TMSI=%d,RedirectPRevIncl=%d,ExclPRevInd=%d,RedirectPMin=%d, RedirectPMax=%d,RecordType=%d,RecordLength=%d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE EAPM RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE EAPM RECEIVED, N=%d, <systime>  CP - length = %d, SDU Offset = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE VALID EAPM RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE VALID EAPM RECEIVED, N=%d, <systime>  CP - Seq.#=%d, PSIST Incl=%d, PSIST Len=%d, PSIST 0-9=%d, PSIST 10=%d, PSIST 11=%d, PSIST 12=%d, PSIST 13=%d, PSIST 14=%d, PSIST 15=%d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE CHANGING PCH Rsp
    printformat , ENG_CP_TR, 5, CP PE CHANGING PCH, N=%d, <systime>  CP - Channel Number = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE A41SPM RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE A41SPM RECEIVED, N=%d, <systime>  CP - length = %d, SDU Offset = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE VALID A41SPM RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE VALID A41SPM RECEIVED, N=%d, <systime>  CP - Seq.#=%d, SID=%d, NID=%d,PacketZoneID=%d, Reg.Zone=%d, Reg.Prd=%d, BaseID=%d, MCC=%d, IMSI_11_12=%d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE MCRRPM RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE MCRRPM RECEIVED, N=%d, <systime>  CP - length = %d, SDU Offset = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE VALID MCRRPM RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE VALID MCRRPM RECEIVED, N=%d, <systime>  CP - Seq.#=%d, PRev.=%d,Min.PRev.=%d, MaxSlotCycleIndex=%d,Num FCCCH=%d,FCCCH Rate=%d,FCCCH CodeChan(1)=%d,FCCCH CodeChan(2)=%d,FCCCH CodeChan(3)=%d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE VALID A41RANDM RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE VALID A41RANDM RECEIVED, N=%d, <systime>  CP - length = %d, SDU Offset = %d RAND = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ECCLM RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE ECCLM RECEIVED, N=%d, <systime>  CP - length = %d, SDU Offset = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE VALID ECCLM RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE VALID ECCLM RECEIVED, N=%d, <systime>  CP - Seq.#=%d, NumFreq=%d,CDMA Freq(1)=%d, CDMA Freq(2)=%d,CDMA Freq(3)=%d,RC QpchHashInd(1)=%d,RC QpchHashInd(2)=%d,TD HashInd(1)=%d,TD HashInd(2)=%d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNLM RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE UNLM RECEIVED, N=%d, <systime>  CP - length = %d, SDU Offset = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE VALID UNLM RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE VALID UNLM RECEIVED, N=%d, <systime>  CP - Seq.#=%d, Num.RadioInterface=$d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE BCAST CHAN TYPE Rsp
    printformat , ENG_PAGE_TR, 5, CP PE BCAST CHAN TYPE, N=%d, <systime>  CP - Current Broadcast Channel Type = %d (PCH=1, BCCH=2,3,4).
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE START FCCCH MONITORING Rsp
    printformat , ENG_PAGE_TR, 5, CP PE START FCCCH MONITORING, N=%d, <systime>  CP - Pilot PN=%d, FCCCH=%d, Code Rate=%d, Data Rate=%d, Long Code(0)=%d, Long Code(1)=%d, Long Code(2)=%d, Long Code(3)=%d, Long Code(4)=%d, Long Code(5)=%d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG IND BCCH MONITORING Rsp
    printformat , ENG_PAGE_TR, 5, CP PE ENG IND BCCH MONITORING, N=%d, <systime>  CP - PE ENG_IND_BCCH_MONITORING Received.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG IND FCCCH MONITORING Rsp
    printformat , ENG_PAGE_TR, 5, CP PE ENG IND FCCCH MONITORING, N=%d, <systime>  CP - PE ENG_IND_FCCCH_MONITORING Received.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE START BCCH NON TD MONITORING Rsp
    printformat , ENG_CPAGE_TR, 5, CP PE START BCCH NON TD MONITORING, N=%d, <systime>  CP - Pilot PN=%d, BCCH=%d, BRAT=%d, CRAT=%d, Long Code(0)=%d, Long Code(1)=%d, Long Code(2)=%d, Long Code(3)=%d, Long Code(4)=%d, Long Code(5)=%d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE START BCCH TD MONITORING Rsp
    printformat , ENG_PAGE_TR, 5, CP PE START BCCH TD MONITORING, N=%d, <systime>  CP - BCCH=%d, BRAT=%d, TD Mode=%d, CRAT=%d,Long Code(0)=%d, Long Code(1)=%d, Long Code(2)=%d, Long Code(3)=%d, Long Code(4)=%d, Long Code(5)=%d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE START BCCH MSG RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE START BCCH MSG RECEIVED, N=%d, <systime>  CP - Message Type=%d, Ack. Received = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE START FCCCH MSG RECEIVED Rsp
    printformat , ENG_CP_TR, 5, CP PE START FCCCH MSG RECEIVED, N=%d, <systime>  CP - Message Type=%d, Ack. Received = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE INIT MS CAP DB Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - SR1=%d, OTD=%d,RC1=%d,RC2=%d,RC3=%d,Encrypt=%d,Qpch=%d,Enh.RC=%d,ForRcPref=%d,Rev.RcPref=%d.
    Args, array, type=int32, maxsize=11, size=end
End

Begin Message, CP Trace CP PE EAPM ERROR 1 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - EAPM numModeSelectionEntries (%d) exceeds maximum.
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE EAPM ERROR 2 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - EAPM numModeParmRec (%d) exceeds maximum.
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE EAPM ERROR 3 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - EAPM numCach(%d) exceeds maximum.
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE EAPM ERROR 4 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - EAPM numCach(%d) exceeds maximum.
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE EAPM ERROR 5 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - EAPM Field validity checks failed (probePnRan=%d, maxReqSeq=%d, maxRspSeq=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE EAPM ERROR 6 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - EAPM Pilot PN does not match current pilot PN (Current PN=%d, EAPM PN=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE EGSRM ERROR 1 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - EGSRM Pilot PN does not match current pilot PN (Current PN=%d, EGSRM PN=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE EGSRM ERROR 2 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - EGSRM Record length error ( type=%d, length=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE EGSRM ERROR 3 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - EGSRM Record type not supported (type = %d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ECCLM ERROR 1 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - ECCLM Pilot PN does not match current pilot PN (Current PN=%d, EGSRM PN=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ECCLM ERROR 2 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - ECCLM number of frequencies exceeds maximum (numFreq = %d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE A41RANDM ERROR 1 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - A41RANDM Pilot PN does not match current pilot PN (Current PN=%d, EGSRM PN=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE MCRRPM ERROR 1 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - MCRRPM Pilot PN does not match current pilot PN (Current PN=%d, EGSRM PN=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE MCRRPM ERROR 2 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - MCRRPM number of FCCCH exceed maximum (numFccch = %d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE MCRRPM ERROR 3 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - MCRRPM number of BCCH exceed maximum (numBcchBcast = %d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE MCRRPM ERROR 4 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - MCRRPM number of QPCH exceed maximum (numQpch = %d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE A41SPM ERROR 1 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - A41SPM Pilot PN does not match current pilot PN (Current PN=%d, A41SPM PN=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE A41SPM ERROR 2 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - A41SPM TMSI zone length exceeds the maximum (length = %d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE SPM Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - SPM current index=%d, msg length=%d, priNghbrList=%d, userZoneId=%d, extGlobalRedirect=%d, extChanList=%d.
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE APM Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - APM current index = %d, msg length = %d, psistEmgIncl = %d, psistEmg = %d.
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE NLM ERROR 1 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - NLM Pilot increament out of range (pilotInc = %d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNLM ERROR 1 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - UNLM Pilot PN does not match current pilot PN (Current PN=%d, A41SPM PN=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNLM ERROR 2 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - UNLM number of radio interfaces exceeds maximum (numRadioInterface=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNLM ERROR 3 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - UNLM number of analog neighbors exceeds maximum (numAnalogNghbr=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNLM ERROR 4 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - UNLM number of analog neighbors exceeds maximum (msgNdx=%d,startOfRi=%d,radioInterfaceLen=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNLM ERROR 5 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - UNLM radio interface type not supported (radioInterfaceType=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE GNLM 1 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - GNLM (P_Rev_7+) index = %d, starting offset = %d, length = %d, neighbor set size = %d.
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ESPM 1 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - ESPM (P_Rev_7+) Qpch Sup.=%d, Num.Qpch=%d, QpchRate=%d, QpchPowLevPage=%d, QpchCCI Sup.=%d, QpchPowLevConfig=%d, SDB=%d, RL Gain Traffic Pilot=%d, revPwrCntlDelayIncl=%d, revPwrCntlDelay=%d.
    Args, array, type=int32, maxsize=11, size=end
End

Begin Message, CP Trace CP PE ECAM 1 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - ECAM (P_Rev_7+) index = %d, starting offset = %d, record length = %d.
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ECAM 2 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - ECAM (P_Rev_7+) index = %d, record length = %d.
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ECAM ERROR 1 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - ECAM number of pilots exceeds maximum (extMode100.numPilots = %d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ECAM ERROR 2 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - ECAM channel indication not supported (extMode100.chInd = %d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ECAM ERROR 3 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - ECAM (P_Rev_7+) index = %d, starting offset = %d, record length = %d.
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNLM 1 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - cpUNLMRadioInterfaceMCSystem() index = %d, starting offset = %d, record length = %d.
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNLM ERROR 6 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - cpUNLMRadioInterfaceMCSystem() Pilot increment out of range (pilotInc = %d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNLM ERROR 7 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - cpUNLMRadioInterfaceMCSystem() number of neighbors exceed maximum (numNghbr = %d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNLM ERROR 8 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - cpUNLMRadioInterfaceMCSystem() exceeded record length (index = %d, starting offset = %d, record length = %d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE A41SPM ERROR 3 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - A41SPM invalid registration period (regPrd=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE MCRRPM ERROR 5 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - MCRRPM invalid pwrThreshEnable and pwrRepThresh combination (pwrThreshEnable=%d, pwrRepThresh=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ENG_LAYER2_TR LAC 1 Rsp
    printformat , ENG_LAYER2_TR, 5, 0x%08X pageMsg->ackReceived = %d, pageMsg->length = %d, pageMsg->type = %d, pageMsg->sduOffset = %d.
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ORIG_MSG 1 Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - Received Origination Message (P_REV_IN_USEs=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE Access Attempt Rsp
    printformat , 1,  1, CP PE Access Attempt, N=%d, <systime>  CP - PE Access Attempt: Channel Type=%d, size=%d, msgType=%d, request=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChanType, uint32,
    size, uint32,
    msgType, uint32,
    request, uint32,
End

Begin Message, CP Trace CP PE Access Attempt LAC Fail Rsp
    printformat , 1,  1, CP PE Access Attempt LAC Fail, N=%d, <systime>  CP - PE Access Attempt LAC Fail
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE TA Timeout Rsp
    printformat , 1,  1, CP PE TA Timeout, N=%d, <systime>  CP - PE Access TA Timeout
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE TA Timeout LAC Fail Rsp
    printformat , 1,  1, CP PE TA Timeout LAC Fail, N=%d, <systime>  CP - PE Access TA Timeout LAC Fail
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE Ec Io Timeout Rsp
    printformat , 1,  1, CP PE Ec Io Timeout, N=%d, <systime>  CP - PE Access Ec/Io Timeout
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE Ec Io Timeout LAC Fail Rsp
    printformat , 1,  1, CP PE Ec Io Timeout LAC Fail, N=%d, <systime>  CP - PE Access Ec/Io Timeout LAC Fail
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE Access suspend Rsp
    printformat , 1,  1, CP PE Access suspend, N=%d, <systime>  CP - PE Access suspend
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE Access suspend LAC Fail Rsp
    printformat , 1,  1, CP PE Access suspend LAC Fail, N=%d, <systime>  CP - PE Access supsend LAC Fail
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE SRBP Max Probe Size Rsp
    printformat , 1,  1, CP PE SRBP Max Probe Size, N=%d, <systime>  CP - PE SRBP Max Probe Size bits=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NumBits, uint32
End

Begin Message, CP Trace CP PE SRBP SM Event Rsp
    printformat , 1,  1, CP PE SRBP SM Event, N=%d, <systime>  CP - PE SRBP State Machine State=%s, Event=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:SRBP State
    Event, uint32, base=enum:SRBP Event
End

Begin Message, CP Trace CP PE SRBP start ta timer Rsp
    printformat , 1,  1, CP PE SRBP start ta timer, N=%d, <systime>  CP - PE SRBP start ta timer :: timeout=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    bkoff, uint32
End

Begin Message, CP Trace CP PE SRBP stop ta timer Rsp
    printformat , 1,  1, CP PE SRBP stop ta timer, N=%d, <systime>  CP - PE SRBP stop ta timer :: reason=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    reason, uint32, base=enum:SRBP TA Stop
End

Begin Message, CP Trace CP PE SRBP stop attempt Rsp
    printformat , 1,  1, CP PE SRBP stop attempt, N=%d, <systime>  CP - PE SRBP stop attempt rcvd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE SRBP HO request rcvd Rsp
    printformat , 1,  1, CP PE SRBP HO request rcvd, N=%d, <systime>  CP - PE SRBP HO request rcvd
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE SRBP Resume from HO Rsp
    printformat , 1,  1, CP PE SRBP Resume from HO, N=%d, <systime>  CP - PE SRBP Resume from HO
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE SRBP Send Fail Ind Rsp
    printformat , 1,  1, CP PE SRBP Send Fail Ind, N=%d, <systime>  CP - PE SRBP Send Fail Ind
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE SRBP ACKed Rsp
    printformat , 1,  1, CP PE SRBP ACKed, N=%d, <systime>  CP - PE SRBP ACKed
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE SRBP attempt aborted Rsp
    printformat , 1,  1, CP PE SRBP attempt aborted, N=%d, <systime>  CP - PE SRBP attempt aborted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE SRBP ACH Parms (part A) Rsp
    printformat , 1,  1, CP PE SRBP ACH Parms (part A), N=%d, <systime>  CP - PE SRBP ACH Parms (part A):: maxReqSeq=%d, maxRspSeq=%d, msgPsist=%d, regPsist=%d, accTmo=%d, probePnRan=%d, auth=%d, maxCapSz=%d, pamSz=%d, numStep=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    parm1, uint32
    parm2, uint32
    parm3, uint32
    parm4, uint32
    parm5, uint32
    parm6, uint32
    parm7, uint32
    parm8, uint32
    parm9, uint32
    parm10, uint32
End

Begin Message, CP Trace CP PE SRBP ACH Parms (part B) Rsp
    printformat , 1,  1, CP PE SRBP ACH Parms (part B), N=%d, <systime>  CP - PE SRBP ACH Parms (part B):: pwrStep=%d, nomPwr=%d, initPwr=%d, nomPwrExt=%d, accChan=%d, probeBkoff=%d, bkoff=%d, accessMessageBitSize=%d, PSISTs=%d, framesPerSlot=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    parm1, uint32
    parm2, uint32
    parm3, uint32
    parm4, uint32
    parm5, uint32
    parm6, uint32
    parm7, uint32
    parm8, uint32
    parm9, uint32
    parm10, uint32
End

Begin Message, CP Trace CP PE SRBP new access attempt Rsp
    printformat , 1,  1, CP PE SRBP new access attempt, N=%d, <systime>  CP - PE new access attempt
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE SRBP access request Rsp
    printformat , 1,  1, CP PE SRBP access request, N=%d, <systime>  CP - PE access request :: max Probe Seq=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Parm1, uint32
End

Begin Message, CP Trace CP PE SRBP access response Rsp
    printformat , 1,  1, CP PE SRBP access response, N=%d, <systime>  CP - PE access response :: max Probe Seq=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Parm1, uint32
End

Begin Message, CP Trace CP PE SRBP attempt probe HO Rsp
    printformat , 1,  1, CP PE SRBP attempt probe HO, N=%d, <systime>  CP - PE SRBP attempt probe HO :: numHo=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Parm1, uint32
End

Begin Message, CP Trace CP PE SRBP ACH pwr correct Rsp
    printformat , 1,  1, CP PE SRBP ACH pwr correct, N=%d, <systime>  CP - PE SRBP ACH pwr correct :: powerCorrection=%d, useCurrMip=%d, rt=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Parm1, uint32
    Parm2, uint32
    Parm3, uint32
End

Begin Message, CP Trace CP PE SRBP EACH pwr correct Rsp
    printformat , 1,  1, CP PE SRBP EACH pwr correct, N=%d, <systime>  CP - PE SRBP ACH EACH pwr correct :: useCurrMip=%d, rt=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Parm1, uint32
    Parm2, uint32
End

Begin Message, CP Trace CP PE SRBP probe retransmit Rsp
    printformat , 1,  1, CP PE SRBP probe retransmit, N=%d, <systime>  CP - PE SRBP probe retransmit :: seq=%d, probe=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Parm1, uint32
    Parm2, uint32
End

Begin Message, CP Trace CP PE SRBP max probe seq Rsp
    printformat , 1,  1, CP PE SRBP max probe seq, N=%d, <systime>  CP - PE SRBP max probe seq
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE SRBP seq retransmit Rsp
    printformat , 1,  1, CP PE SRBP seq retransmit, N=%d, <systime>  CP - PE SRBP seq retransmit :: seq=%d, bkoff=%d, rs=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Parm1, uint32
    Parm2, uint32
    Parm3, uint32
End

Begin Message, CP Trace CP PE SRBP init probe HO Rsp
    printformat , 1,  1, CP PE SRBP init probe HO, N=%d, <systime>  CP - PE SRBP init probe HO :: _numHo=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Parm1, uint32
End

Begin Message, CP Trace CP PE SRBP perst tst fail Rsp
    printformat , 1,  1, CP PE SRBP perst tst fail, N=%d, <systime>  CP - PE SRBP perst tst fail
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE SRBP attempt HO Rsp
    printformat , 1,  1, CP PE SRBP attempt HO, N=%d, <systime>  CP - PE SRBP attempt HO :: _numHo=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Parm1, uint32
End

Begin Message, CP Trace CP PE SRBP init ACH Rsp
    printformat , 1,  1, CP PE SRBP init ACH, N=%d, <systime>  CP - PE SRBP init ACH :: RN=%d, sendTime=0x%x, powerCorrection=%d, pamSize=%d, ra=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Parm1, uint32
    Parm2, uint32
    Parm3, uint32
    Parm4, uint32
    Parm5, uint32
End

Begin Message, CP Trace CP PE SRBP ACH probe sent Rsp
    printformat , 1,  1, CP PE SRBP ACH probe sent, N=%d, <systime>  CP - PE SRBP ACH probe sent :: dataLen=%d, sendTime=0x%x, powerCorrection=%d, useCurrMip=%d, pamSize=%d, RN=%d rt=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Parm1, uint32
    Parm2, uint32
    Parm3, uint32
    Parm4, uint32
    Parm5, uint32
    Parm6, uint32
    Parm7, uint32
    Parm8, uint32
    Parm9, uint32
End

Begin Message, CP Trace CP PE SRBP hit max PSIST Rsp
    printformat , 1,  1, CP PE SRBP hit max PSIST, N=%d, <systime>  CP - PE SRBP hit max PSIST delay slots :: delaySlots=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Parm1, uint32
End

Begin Message, CP Trace CP PE SRBP PSIST delay Rsp
    printformat , 1,  1, CP PE SRBP PSIST delay, N=%d, <systime>  CP - PE SRBP persistance delay :: delaySlots=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Parm1, uint32
End

Begin Message, CP Trace CP PE SRBP examine HO request Rsp
    printformat , 1,  1, CP PE SRBP examine HO request, N=%d, <systime>  CP - PE SRBP examine HO request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE SRBP ta timeout Rsp
    printformat , 1,  1, CP PE SRBP ta timeout, N=%d, <systime>  CP - PE SRBP ta timeout request
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE SRBP ACH long code Rsp
    printformat , 1,  1, CP PE SRBP ACH long code, N=%d, <systime>  CP - PE SRBP ACH long code:: [0]=%x, [1]=%x, [2]=%x, [3]=%x, [4]=%x, [5]=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    parm1, uint32
    parm2, uint32
    parm3, uint32
    parm4, uint32
    parm5, uint32
    parm6, uint32
End

Begin Message, CP Trace CP PE SRBP ACH init pwr Rsp
    printformat , 1,  1, CP PE SRBP ACH init pwr, N=%d, <systime>  CP - PE SRBP ACH init pwr:: calculated init pwr=%d, prev_pwr=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    parm1, uint32
    parm2, uint32
End

Begin Message, CP Trace CP PE SRBP mod pwr Rsp
    printformat , 1,  1, CP PE SRBP mod pwr, N=%d, <systime>  CP - PE SRBP mod pwr:: current pwr=%d, previous pwr=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    parm1, uint32
    parm2, uint32
End

Begin Message, CP Trace CP PE LAC_ACCESS_ASM_ATTEMPT Rsp
    printformat , 1,  1, CP PE LAC_ACCESS_ASM_ATTEMPT, N=%d, <systime>  CP - LAC ACCESSS ASM SM ACCESS ATTEMPT P_REV_IN_USEs = %d, maxProbeSize = %d, sizeInBits = %d, validAck = %d msgType = %d, channelType = %d, request = %d, lacLength = %d, retValue = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    P_REV_IN_USEs, uint32
    maxProbeSize, uint32
    sizeInBits, uint32
    validAck, uint32
    msgType, uint32
    channelType, uint32
    request, uint32
    lacLength, uint32
    retValue, uint32
End

Begin Message, CP Trace CP PE LAC_ACCESS_ASM_RESUME Rsp
    printformat , 1,  1, CP PE LAC_ACCESS_ASM_RESUME, N=%d, <systime>  CP - LAC ACCESSS ASM SM ACCESS RESUME P_REV_IN_USEs = %d,    maxProbeSize = %d, sizeInBits = %d, validAck = %d msgType = %d, channelType = %d,   request = %d, retValue = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    P_REV_IN_USEs, uint32
    maxProbeSize, uint32
    sizeInBits, uint32
    validAck, uint32
    msgType, uint32
    channelType, uint32
    request, uint32
    retValue, uint32
End

Begin Message, CP Trace CP PE LAC_ACCESS_ASM_TA_TIMEOUT Rsp
    printformat , 1,  1, CP PE LAC_ACCESS_ASM_TA_TIMEOUT, N=%d, <systime>  CP - LAC ACCESSS ASM SM TA TIMEOUT P_REV_IN_USEs = %d,   maxProbeSize = %d, sizeInBits = %d, validAck = %d msgType = %d, channelType = %d,   request = %d, retValue = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    P_REV_IN_USEs, uint32
    maxProbeSize, uint32
    sizeInBits, uint32
    validAck, uint32
    msgType, uint32
    channelType, uint32
    request, uint32
    retValue, uint32
End

Begin Message, CP Trace CP PE LAC_ACCESS_ASM_EO_IO_TIMEOUT Rsp
    printformat , 1,  1, CP PE LAC_ACCESS_ASM_EO_IO_TIMEOUT, N=%d, <systime>  CP - LAC ACCESSS ASM SM EI IO TIMEOUT P_REV_IN_USEs = %d,    maxProbeSize = %d, sizeInBits = %d, validAck = %d msgType = %d, channelType = %d,   request = %d, retValue = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    P_REV_IN_USEs, uint32
    maxProbeSize, uint32
    sizeInBits, uint32
    validAck, uint32
    msgType, uint32
    channelType, uint32
    request, uint32
    retValue, uint32
End

Begin Message, CP Trace CP PE LAC_ACCESS_ASM_FAILURE Rsp
    printformat , 1,  1, CP PE LAC_ACCESS_ASM_FAILURE, N=%d, <systime>  CP - LAC ACCESSS ASM SM EI IO TIMEOUT P_REV_IN_USEs = %d,    maxProbeSize = %d, sizeInBits = %d, validAck = %d msgType = %d, channelType = %d,   request = %d, retValue = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    P_REV_IN_USEs, uint32
    maxProbeSize, uint32
    sizeInBits, uint32
    validAck, uint32
    msgType, uint32
    channelType, uint32
    request, uint32
    retValue, uint32
End

Begin Message, CP Trace CP PE LAC ACCESS_MSG_LEN Rsp
    printformat , 1,  1, CP PE LAC ACCESS_MSG_LEN, N=%d, <systime>  CP - LAC ACCESSS MSG LEN  index= %d, _acccessMsgLength = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    index, uint32
    _acccessMsgLength, uint32
End

Begin Message, CP Trace CP PE LAC ACCESS_MSG_EXT_LEN Rsp
    printformat , 1,  1, CP PE LAC ACCESS_MSG_EXT_LEN, N=%d, <systime>  CP - LAC ACCESSS EXT MSG LEN  index= %d, _acccessMsgLength = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    index, uint32
    _acccessMsgLength, uint32
End

Begin Message, CP Trace CP PE LAC ACCESS_MSG_TO_LARGE Rsp
    printformat , 1,  1, CP PE LAC ACCESS_MSG_TO_LARGE, N=%d, <systime>  CP - LAC ACCESSS ASM SM ACCESS MSG TO LARGE  _accessMsgLength+CP_CRC_30_WIDTH = %d, > maxCapsuleSize = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    finalMsgLength, uint32
    maxCapsuleSize, uint32
End

Begin Message, CP Trace CP PE LAC ACCESS_MSG_FINAL_LENGTH Rsp
    printformat , 1,  1, CP PE LAC ACCESS_MSG_FINAL_LENGTH, N=%d, <systime>  CP - LAC ACCESSS ASM SM ACCESS MSG FINAL LENGTH  _accessMsgLength+CP_CRC_30_WIDTH = %d, =< maxCapsuleSize = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    finalMsgLength, uint32
    maxCapsuleSize, uint32
End

Begin Message, CP Trace CP PE LAC ACCESS_MSG_ACTIVE_PILOTS Rsp
    printformat , 1,  1, CP PE LAC ACCESS_MSG_ACTIVE_PILOTS, N=%d, <systime>  CP - LAC ACCESSS ASM SM ACTIVE PILOT _pilotReport = %d, activeStrength = %d, firstIsActive = %d, firstIsPTA =%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    _pilotReport, uint32
    activeStrength, uint32
    firstIsActive, uint32
    firstIsPTA, uint32
End

Begin Message, CP Trace CP PE LAC ACCESS_MSG_EXTRA_PILOTS Rsp
    printformat , 1,  1, CP PE LAC ACCESS_MSG_EXTRA_PILOTS, N=%d, <systime>  CP - LAC ACCESSS ASM SM EXTRA PILOTS  extraPilots = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    extraPilots, uint32
End

Begin Message, CP Trace CP PE LAC ACCESS_NO_EXTRA_PILOTS Rsp
    printformat , 1,  1, CP PE LAC ACCESS_NO_EXTRA_PILOTS, N=%d, <systime>  CP - LAC ACCESSS ASM SM NO EXTRA PILOTS
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE LAC ACCESS_PILOT_REPORT Rsp
    printformat , 1,  1, CP PE LAC ACCESS_PILOT_REPORT, N=%d, <systime>  CP - LAC ACCESSS PILOT REPORT _pilotReport =%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    _pilotReport, uint32
End

Begin Message, CP Trace CP PE LAC SET_PILOT_REPORT Rsp
    printformat , 1,  1, CP PE LAC SET_PILOT_REPORT, N=%d, <systime>  CP - LAC SET PILOT REPORT _pilotReport =%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    _pilotReport, uint32
End

Begin Message, CP Trace CP PE LAC PILOT_MSMT_REPORT_REC Rsp
    printformat , 1,  1, CP PE LAC PILOT_MSMT_REPORT_REC, N=%d, <systime>  CP - LAC PILOT MSMT REPORT REC _pilotReport =%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    _pilotReport, uint32
End

Begin Message, CP Trace CP PE LAC_DB_PAY_LOAD Rsp
    printformat , 1,  1, CP PE LAC_DB_PAY_LOAD, N=%d, <systime>  CP - LAC DATA BURST PAY LOAD maxCapSizeInBytes =%d, lacFieldWidthInBytes = %d, dbPayLoadInBytes =%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    maxCapSizeInBytes, uint32
    lacFieldWidthInBytes, uint32
    dbPayLoadInBytes, uint32
End

Begin Message, CP Trace CP PE Pwr Meas Params Req Arrived Rsp
    printformat , 1,  1, CP PE Pwr Meas Params Req Arrived, N=%d, <systime>  CP - Traffic PWR Meas Params Requested
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE Pwr Meas Report Message Sent Out Rsp
    printformat , 1,  1, CP PE Pwr Meas Report Message Sent Out, N=%d, <systime>  CP - Traffic PWR Meas Report Sent Out
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE ECAM Assign Mode_100 Received Rsp
    printformat , 1,  1, CP PE ECAM Assign Mode_100 Received, N=%d, <systime>  CP - Traffic ECAM With Assign_Mode_100 Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE ECAM Assign Mode_100 CH_IND_1 Received Rsp
    printformat , 1,  1, CP PE ECAM Assign Mode_100 CH_IND_1 Received, N=%d, <systime>  CP - Traffic ECAM Assign_Mode_100 And CH_IND_1 Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE ECAM Assign Mode_100 CH_IND_2 Received Rsp
    printformat , 1,  1, CP PE ECAM Assign Mode_100 CH_IND_2 Received, N=%d, <systime>  CP - Traffic ECAM Assign_Mode_100 And CH_IND_2 Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE ECAM Assign Mode_100 CH_IND_3 Received Rsp
    printformat , 1,  1, CP PE ECAM Assign Mode_100 CH_IND_3 Received, N=%d, <systime>  CP - Traffic ECAM Assign_Mode_100 And CH_IND_3 Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE NN Serv Cfg Unpacked Rsp
    printformat , 1,  1, CP PE NN Serv Cfg Unpacked, N=%d, <systime>  CP - Traffic NN Serv Cfg Unpacked
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE NN Serv Cfg LPMIND_0 PREV_GT_6 Received Rsp
    printformat , 1,  1, CP PE NN Serv Cfg LPMIND_0 PREV_GT_6 Received, N=%d, <systime>  CP - Traffic NN Serv Cfg LPMIND_0 PREV_GT_6 Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE NN Serv Cfg LPMIND_0 CH_IND_1 Received Rsp
    printformat , 1,  1, CP PE NN Serv Cfg LPMIND_0 CH_IND_1 Received, N=%d, <systime>  CP - Traffic NN ServCfg LPMIND_0 CH_IND_1 Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE NN Serv Cfg LPMIND_0 CH_IND_2 Received Rsp
    printformat , 1,  1, CP PE NN Serv Cfg LPMIND_0 CH_IND_2 Received, N=%d, <systime>  CP - Traffic NN ServCfg LPMIND_0 CH_IND_2 Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE NN Serv Cfg LPMIND_0 CH_IND_3 Received Rsp
    printformat , 1,  1, CP PE NN Serv Cfg LPMIND_0 CH_IND_3 Received, N=%d, <systime>  CP - Traffic NN ServCfg LPMIND_0 CH_IND_3 Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE NN Serv Cfg LPMIND_0 PREV_LE_6 Received Rsp
    printformat , 1,  1, CP PE NN Serv Cfg LPMIND_0 PREV_LE_6 Received, N=%d, <systime>  CP - Traffic NN ServCfg LPMIND_0 PREV_LE_6 Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE NN Serv Cfg LPMIND_1 Received Rsp
    printformat , 1,  1, CP PE NN Serv Cfg LPMIND_1 Received, N=%d, <systime>  CP - Traffic NN ServCfg LPMIND_1 Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE NN Serv Cfg LPMIND_2 Received Rsp
    printformat , 1,  1, CP PE NN Serv Cfg LPMIND_2 Received, N=%d, <systime>  CP - Traffic NN ServCfg LPMIND_2 Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE NN Serv Cfg Stored Rsp
    printformat , 1,  1, CP PE NN Serv Cfg Stored, N=%d, <systime>  CP - Traffic NN ServCfg Stored
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE NN Serv Cfg Pended Rsp
    printformat , 1,  1, CP PE NN Serv Cfg Pended, N=%d, <systime>  CP - Traffic NN ServCfg Pended
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE Pended NN Serv Cfg Retrieved Rsp
    printformat , 1,  1, CP PE Pended NN Serv Cfg Retrieved, N=%d, <systime>  CP - Traffic NN ServCfg Retrieved
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE NN Serv Cfg From SCM Received Rsp
    printformat , 1,  1, CP PE NN Serv Cfg From SCM Received, N=%d, <systime>  CP - Traffic NN ServCfg SCM Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE NN Serv Cfg Action Timeout Rsp
    printformat , 1,  1, CP PE NN Serv Cfg Action Timeout, N=%d, <systime>  CP - Traffic NN ServCfg Action Timeout
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE Physical Layer NN Serv Cfg Indication Rsp
    printformat , 1,  1, CP PE Physical Layer NN Serv Cfg Indication, N=%d, <systime>  CP - Traffic Physical Indication For NN ServCfg Arrived
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE NN Serv Cfg With The UseTime Received Rsp
    printformat , 1,  1, CP PE NN Serv Cfg With The UseTime Received, N=%d, <systime>  CP - Traffic NN ServCfg With UseTime Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE NN Serv Cfg Without The UseTime Received Rsp
    printformat , 1,  1, CP PE NN Serv Cfg Without The UseTime Received, N=%d, <systime>  CP - Traffic NN ServCfg Without UseTime Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE Physical Layer Neg Serv Cfg Indication Rsp
    printformat , 1,  1, CP PE Physical Layer Neg Serv Cfg Indication, N=%d, <systime>  CP - Traffic Physical Layer Indication For Neg ServCfg Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE Negotiated Serv Cfg Indication Rsp
    printformat , 1,  1, CP PE Negotiated Serv Cfg Indication, N=%d, <systime>  CP - Traffic ServCfg Negotiated
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE HO MIN P TRACE ID Rsp
    printformat , 1,  1, CP PE HO MIN P TRACE ID, N=%d, <systime>  CP - CP PE HO MIN P TRACE ID minP = %d, aP = %d, _noiseFloor = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    minP, uint32
    aP, uint32
    _noiseFloor, uint32
End

Begin Message, CP Trace CP PE HO NGHBR STRENGTH TRACE ID Rsp
    printformat , 1,  1, CP PE HO NGHBR STRENGTH TRACE ID, N=%d, <systime>  CP - CP PE HO NGHBR STRENGTH TRACE ID strength = %d, nP = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    strength, uint32
    nP, uint32
End

Begin Message, CP Trace CP PE HO REMAINING STRENGTH TRACE ID Rsp
    printformat , 1,  1, CP PE HO REMAINING STRENGTH TRACE ID, N=%d, <systime>  CP - CP PE HO REMAINING STRENGTH TRACE ID strength = %d, rP = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    strength, uint32
    rP, uint32
End

Begin Message, CP Trace CP PE HO CHECK IMMED TRACE ID Rsp
    printformat , 1,  1, CP PE HO CHECK IMMED TRACE ID, N=%d, <systime>  CP - CP PE HO CHECK IMMED TRACE ID aP = %d, nP = %d, thresh = %d, PN = %d, delayCount = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    aP, uint32
    nP, uint32
    thresh, uint32
    PN, uint32
    delayCount, uint32
End

Begin Message, CP Trace CP PE HO CHECK DELAYED TRACE ID Rsp
    printformat , 1,  1, CP PE HO CHECK DELAYED TRACE ID, N=%d, <systime>  CP - CP Trace CP PE HO CHECK DELAYED TRACE ID aP = %d, nP = %d, thresh = %d, PN = %d, delayCount = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    aP, uint32
    nP, uint32
    thresh, uint32
    PN, uint32
    delayCount, uint32
End

Begin Message, CP Trace CP PE SEND_ERRM_FAILED_TRACE_ID Rsp
    printformat , 1,  1, CP PE SEND_ERRM_FAILED_TRACE_ID, N=%d, <systime>  CP - CP PE SEND ERRM FAILED TRACE ID
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE UNPACK_ESCAM_FAILED_1_TRACE_ID Rsp
    printformat , 1,  1, CP PE UNPACK_ESCAM_FAILED_1_TRACE_ID, N=%d, <systime>  CP - CP PE UNPACK ESCAM FAILED 1 TRACE ID: numRevCfgRecs = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNPACK_ESCAM_FAILED_2_TRACE_ID Rsp
    printformat , 1,  1, CP PE UNPACK_ESCAM_FAILED_2_TRACE_ID, N=%d, <systime>  CP - CP PE UNPACK ESCAM FAILED 2 TRACE ID Number of SCH = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Number of SCH, uint32
End

Begin Message, CP Trace CP PE UNPACK_ESCAM_FAILED_3_TRACE_ID Rsp
    printformat , 1,  1, CP PE UNPACK_ESCAM_FAILED_3_TRACE_ID, N=%d, <systime>  CP - CP PE UNPACK ESCAM FAILED 3 TRACE ID activePilotRecType = %d, recordLen = %d, pMsgBuf = %d, index = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    activePilotRecType, uint32
    recordLen, uint32
    pMsgBuf, uint32
    index, uint32
End

Begin Message, CP Trace CP PE UNPACK_ESCAM_FAILED_4_TRACE_ID Rsp
    printformat , 1,  1, CP PE UNPACK_ESCAM_FAILED_4_TRACE_ID, N=%d, <systime>  CP - CP PE UNPACK ESCAM FAILED 4 TRACE ID numSup = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    numSup, uint32
End

Begin Message, CP Trace CP PE UNPACK_ESCAM_FAILED_5_TRACE_ID Rsp
    printformat , 1,  1, CP PE UNPACK_ESCAM_FAILED_5_TRACE_ID, N=%d, <systime>  CP - CP PE UNPACK ESCAM FAILED 5 TRACE ID rpcNumSup = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    rpcNumSup, uint32
End

Begin Message, CP Trace CP PE DS_SIGNALING_RESET_TRACE_ID Rsp
    printformat , 1,  1, CP PE DS_SIGNALING_RESET_TRACE_ID, N=%d, <systime>  CP - CP PE DS SIGNALING RESET TRACE ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE DS_SIGNALING_RSR_REQ_TRACE_ID Rsp
    printformat , 1,  1, CP PE DS_SIGNALING_RSR_REQ_TRACE_ID, N=%d, <systime>  CP - CP PE DS SIGNALING RSR REQ TRACE ID Chan Type = %d, Duration Unit = %d, Num Req. = %d, pSchReqRecs = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Chan Type, uint32
    Duration Unit, uint32
    Num Req, uint32
    pSchReqRecs, uint32
End

Begin Message, CP Trace CP PE SCRM_SEND_ERROR_TRACE_ID Rsp
    printformat , 1,  1, CP PE SCRM_SEND_ERROR_TRACE_ID, N=%d, <systime>  CP - CP PE SCRM SEND ERROR TRACE ID ON(1)/OFF(0) = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ON(1)/OFF(0), uint32
End

Begin Message, CP Trace CP PE DS_SIGNALING_RSR_REL_TRACE_ID Rsp
    printformat , 1,  1, CP PE DS_SIGNALING_RSR_REL_TRACE_ID, N=%d, <systime>  CP - CP PE DS SIGNALING RSR REL TRACE ID Chan Type = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Chan Type, uint32
End

Begin Message, CP Trace CP PE RRRM_SEND_ERROR_TRACE_ID Rsp
    printformat , 1,  1, CP PE RRRM_SEND_ERROR_TRACE_ID, N=%d, <systime>  CP - CP PE RRRM SEND ERROR TRACE ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE DS_SIGNALING_ERM_TRACE_ID Rsp
    printformat , 1,  1, CP PE DS_SIGNALING_ERM_TRACE_ID, N=%d, <systime>  CP - CP PE DS SIGNALING ERM TRACE ID Use Time = %d, Action Time = %d, Chan. Ind = %d, Gating Rate Incl = %d, Pilot Gating Rate = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Use Time, uint32
    Action Time, uint32
    Chan. Ind, uint32
    Gating Rate Incl, uint32
    Pilot Gating Rate, uint32
End

Begin Message, CP Trace CP PE DS_SIGNALING_RAM_TRACE_ID Rsp
    printformat , 1,  1, CP PE DS_SIGNALING_RAM_TRACE_ID, N=%d, <systime>  CP - CP PE DS SIGNALING RAM TRACE ID Use Time = %d, Action Time = %d, FPC Pri.Chan = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Use Time, uint32
    Action Time, uint32
    FPC Pri.Chan, uint32
End

Begin Message, CP Trace CP PE DS_SIGNALING_ESCAM_TRACE_ID Rsp
    printformat , 1,  1, CP PE DS_SIGNALING_ESCAM_TRACE_ID, N=%d, <systime>  CP - CP PE DS SIGNALING ESCAM TRACE ID Start Time Unit = %d, FPC Pri.Chan = %d, Num.Rev.Cfg Recs = %d, Num.Rev.SCH = %d, For.SCH FER Rep = %d, Num.For.SCH = %d, FPC Mode SCH = %d, Num. Sup. = %d, FPC Setpt Thresh SCH = %d, RPC Num. Sup. = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Start Time Unit, uint32
    FPC Pri.Chan, uint32
    Num.Rev.Cfg Recs, uint32
    Num.Rev.SCH, uint32
    For.SCH FER Rep, uint32
    Num.For.SCH, uint32
    FPC Mode SCH, uint32
    Num. Sup., uint32
    FPC Setpt Thresh SCH, uint32
    RPC Num. Sup., uint32
End

Begin Message, CP Trace CP PE DS_SIGNALING_INIT_TRACE_ID Rsp
    printformat , 1,  1, CP PE DS_SIGNALING_INIT_TRACE_ID, N=%d, <systime>  CP - CP PE DS SIGNALING INIT TRACE ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE RRM_SEND_ERROR_TRACE_ID Rsp
    printformat , 1,  1, CP PE RRM_SEND_ERROR_TRACE_ID, N=%d, <systime>  CP - CP PE RRM SEND ERROR TRACE ID
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE ESCAM_RECIEVED_TRACE_ID Rsp
    printformat , 1,  1, CP PE ESCAM_RECIEVED_TRACE_ID, N=%d, <systime>  CP - CP PE ESCAM_RECIEVED_TRACE_ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ESCAM_REJECTED_1_TRACE_ID Rsp
    printformat , 1,  1, CP PE ESCAM_REJECTED_1_TRACE_ID, N=%d, <systime>  CP - CP PE ESCAM_REJECTED_1_TRACE_ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ESCAM_REJECTED_2_TRACE_ID Rsp
    printformat , 1,  1, CP PE ESCAM_REJECTED_2_TRACE_ID, N=%d, <systime>  CP - CP PE ESCAM_REJECTED_2_TRACE_ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ESCAM_REJECTED_3_TRACE_ID Rsp
    printformat , 1,  1, CP PE ESCAM_REJECTED_3_TRACE_ID, N=%d, <systime>  CP - CP PE ESCAM_REJECTED_3_TRACE_ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE RAM_RECIEVED_TRACE_ID Rsp
    printformat , 1,  1, CP PE RAM_RECIEVED_TRACE_ID, N=%d, <systime>  CP - CP PE RAM_RECIEVED_TRACE_ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE RAM_REJECTED_TRACE_ID Rsp
    printformat , 1,  1, CP PE RAM_REJECTED_TRACE_ID, N=%d, <systime>  CP - CP PE RAM_REJECTED_TRACE_ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ERM_RECIEVED_TRACE_ID Rsp
    printformat , 1,  1, CP PE ERM_RECIEVED_TRACE_ID, N=%d, <systime>  CP - CP PE ERM_RECIEVED_TRACE_ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE ERM_REJECTED_TRACE_ID Rsp
    printformat , 1,  1, CP PE ERM_REJECTED_TRACE_ID, N=%d, <systime>  CP - CP PE ERM_REJECTED_TRACE_ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNPACK_ESCAM_TRACE_ID Rsp
    printformat , 1,  1, CP PE UNPACK_ESCAM_TRACE_ID, N=%d, <systime>  CP - CP PE UNPACK_ESCAM_TRACE_ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNPACK_RAM_TRACE_ID Rsp
    printformat , 1,  1, CP PE UNPACK_RAM_TRACE_ID, N=%d, <systime>  CP - CP PE UNPACK_RAM_TRACE_ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNPACK_RAM_REJECTED_TRACE_ID Rsp
    printformat , 1,  1, CP PE UNPACK_RAM_REJECTED_TRACE_ID, N=%d, <systime>  CP - CP PE UNPACK_RAM_REJECTED_TRACE_ID rejectReason = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNPACK_ERM_TRACE_ID Rsp
    printformat , 1,  1, CP PE UNPACK_ERM_TRACE_ID, N=%d, <systime>  CP - CP PE UNPACK_ERM_TRACE_ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE UNPACK_ERM_REJECTED_TRACE_ID Rsp
    printformat , 1,  1, CP PE UNPACK_ERM_REJECTED_TRACE_ID, N=%d, <systime>  CP - CP PE UNPACK_ERM_REJECTED_TRACE_ID rejectReason = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE RETRY_ORDER_RECIEVED_TRACE_ID Rsp
    printformat , 1,  1, CP PE RETRY_ORDER_RECIEVED_TRACE_ID, N=%d, <systime>  CP - CP PE RETRY_ORDER_RECIEVED_TRACE_ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE RETRY_ORDER_REJECTED_TRACE_ID Rsp
    printformat , 1,  1, CP PE RETRY_ORDER_REJECTED_TRACE_ID, N=%d, <systime>  CP - CP PE RETRY_ORDER_REJECTED_TRACE_ID.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE RETRY_ORDER_PROCESS_TRACE_ID Rsp
    printformat , 1,  1, CP PE RETRY_ORDER_PROCESS_TRACE_ID, N=%d, <systime>  CP - CP PE RETRY_ORDER_PROCESS_TRACE_ID ordq = %d, retryType = %d, retryDelay = %d, RetryDelays[ CP_RETRY_ORDER_ORIGINATION ] = %d, RetryDelays[ CP_RETRY_ORDER_RESOURCE_RQST ] = %d, RetryDelays[ CP_RETRY_ORDER_SUP_CHAN_RQST ] = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP_PE_STAT_GET_PARM_LMD_REQ_ST_GROUP_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_STAT_GET_PARM_LMD_REQ_ST_GROUP_TRACE_ID, N=%d, <systime>  CP - CP PE Stat grp req: statistics counter group req = %d, number of groups = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Req, uint32
    Groups, uint32
End

Begin Message, CP Trace CP_PE_STAT_GET_PARM_RETRIEVED_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_STAT_GET_PARM_RETRIEVED_TRACE_ID, N=%d, <systime>  CP - CP PE Parm Retrieved: remaining groups to retrieve = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    retrieve, uint32
End

Begin Message, CP Trace CP_PE_STAT_GET_PARM_ERROR_STATE_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_STAT_GET_PARM_ERROR_STATE_TRACE_ID, N=%d, <systime>  CP - CP PE Stat grp req: retrieve parm error index = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    index, uint32
End

Begin Message, CP Trace CP_PE_STAT_SET_PARM_WRITE_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_STAT_SET_PARM_WRITE_TRACE_ID, N=%d, <systime>  CP - CP PE write Set Parm: parameter ID = %d, parameter Len = %d, parameter value = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ID, uint32
    Len, uint32
    value, uint32
End

Begin Message, CP Trace CP_PE_STAT_SET_PARM_LIST_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_STAT_SET_PARM_LIST_TRACE_ID, N=%d, <systime>  CP - CP PE list Parm ID to be Set: parameter ID = %d, parameter Len = %d, parameter value = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ID, uint32
    Len, uint32
    value, uint32
End

Begin Message, CP Trace CP_PE_STAT_SET_PARM_REQUEST_ID Rsp
    printformat , 1,  1, CP_PE_STAT_SET_PARM_REQUEST_ID, N=%d, <systime>  CP - CP PE Parm to be set: number of ID's to be set = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    set, uint32
End

Begin Message, CP Trace CP_PE_STAT_SET_PARM_SET_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_STAT_SET_PARM_SET_TRACE_ID, N=%d, <systime>  CP - CP PE prepare Parm to be set: stat counter = %d, offset = %d, value = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    counter, uint32
    offset, uint32
    value, uint32
End

Begin Message, CP Trace CP_PE_STAT_SET_PARM_REQ_LMD_SET_GROUP_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_STAT_SET_PARM_REQ_LMD_SET_GROUP_TRACE_ID, N=%d, <systime>  CP - CP PE Stat Parm group to be set: Stat group = %d, number of parameter = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Stat group, uint32
    number of parameter, uint32
End

Begin Message, CP Trace CP_PE_STAT_SET_PARM_CHECK_LIST_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_STAT_SET_PARM_CHECK_LIST_TRACE_ID, N=%d, <systime>  CP - CP PE Stat set parm scan list: parameter id = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    parameter id, uint32
End

Begin Message, CP Trace CP_PE_STAT_SET_PARM_ERROR_STATE_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_STAT_SET_PARM_ERROR_STATE_TRACE_ID, N=%d, <systime>  CP - CP PE Stat grp req: set parm error index = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    index, uint32
End

Begin Message, CP Trace CP_PE_RC_ERROR_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_ERROR_TRACE_ID, N=%d, <systime>  CP - CP PE RC ERROR, event=%s, state=%s, subState=%s, debug msg=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    event, uint32, base=enum:RC Event Type
    state, uint32, base=enum:RC State Type
    subState, uint32, base=enum:RC SubState Type
    debug msg, uint32, base=enum:RC Debug Type
End

Begin Message, CP Trace CP_PE_RC_EVENT_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_EVENT_TRACE_ID, N=%d, <systime>  CP - CP PE RC, event=%s, state=%s, subState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    event, uint32, base=enum:RC Event Type
    state, uint32, base=enum:RC State Type
    subState, uint32, base=enum:RC SubState Type
End

Begin Message, CP Trace CP_PE_RC_THRESHOLD_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_THRESHOLD_TRACE_ID, N=%d, <systime>  CP PE RC SCH, threshold=%d, revSchSize=%d, retVal=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    threshold, uint32
    revSchSize, uint32
    retVal, uint32
End

Begin Message, CP Trace CP_PE_RC_SIG_REQ_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_SIG_REQ_TRACE_ID, N=%d, <systime>  CP - CP PE RC SIG REQ, channel=%d, numRevSch=%d, revSchId=%d, durationUnits=%d, preferredRate=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    channel, uint32
    numRevSch, uint32
    revSchId, uint32
    durationUnits, uint32
    preferredRate, uint32
End

Begin Message, CP Trace CP_PE_RC_SIG_REL_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_SIG_REL_TRACE_ID, N=%d, <systime>  CP - CP PE RC SIG REL, remaining duration=%d, action time=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    remaining duration, uint32
    action time, uint32
End

Begin Message, CP Trace CP_PE_RC_ALLOC_UPD_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_ALLOC_UPD_TRACE_ID, N=%d, <systime>  CP - CP PE RC ALLOC UPD, revSchUpdType=%d,  channel=%d, numRevSch=%d, revSchId=%d, durationUnits=%d, rate=%d, actionTime=%x, retryDelayOrder=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    revSchUpdType, uint32
    channel, uint32
    numRevSch, uint32
    revSchId, uint32
    durationUnits, uint32
    rate, uint32
    actionTime, uint32
    retryDelayOrder, uint32
End

Begin Message, CP Trace CP_PE_RC_RATE_DURATION_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_RATE_DURATION_TRACE_ID, N=%d, <systime>  CP - CP PE RC RATE DURATION UPD, preferredRate=%d,  durationUnits=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    preferredRate, uint32
    durationUnits, uint32
End

Begin Message, CP Trace CP_PE_RC_REMAIN_RESOURCES_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_REMAIN_RESOURCES_TRACE_ID, N=%d, <systime>  CP - CP PE RC REMAIN RESOURCES, number of assignments=%d, total duration=%d, remain duration=%x, remain bandwidth=%d, is time to SCRM=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    number of assignments, uint32
    total duration, uint32
    remain duration, uint32
    remain bandwidth, uint32
    is time to SCRM, uint32
End

Begin Message, CP Trace CP_PE_RC_WAIT_ESCAM_TMR_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_WAIT_ESCAM_TMR_TRACE_ID, N=%d, <systime>  CP - CP PE RC wait for 1 sec ESCAM timer, event=%s, state=%s, subState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    event, uint32, base=enum:RC Event Type
    state, uint32, base=enum:RC State Type
    subState, uint32, base=enum:RC SubState Type
End

Begin Message, CP Trace CP_PE_RC_ESCAM_TMR_TIMEOUT_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_ESCAM_TMR_TIMEOUT_TRACE_ID, N=%d, <systime>  CP - CP PE RC 1 sec ESCAM timeout, event=%s, state=%s, subState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    event, uint32, base=enum:RC Event Type
    state, uint32, base=enum:RC State Type
    subState, uint32, base=enum:RC SubState Type
End

Begin Message, CP Trace CP_PE_RC_RETRY_DELAY_TIMER_ACTIVE_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_RETRY_DELAY_TIMER_ACTIVE_TRACE_ID, N=%d, <systime>  CP - CP PE RC retry delay timer active
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PE_RC_THRESHOLD_DEBUG_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_THRESHOLD_DEBUG_TRACE_ID, N=%d, <systime>  CP - CP PE RC THRESHOLD DEBUG MSG, revMuxOption=%d, numRevBits=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    revMuxOption, uint32
    numRevBits, uint32
End

Begin Message, CP Trace CP_PE_RC_THRESHOLD_ERR_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_THRESHOLD_ERR_TRACE_ID, N=%d, <systime>  CP - CP PE RC THRESHOLD ERROR, revMuxOption=%d, numRevBits=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    revMuxOption, uint32
    numRevBits, uint32
End

Begin Message, CP Trace CP_PE_RC_CONFIG_DEBUG_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_CONFIG_DEBUG_TRACE_ID, N=%d, <systime>  CP - CP PE RC CONFIG DB DEBUG MSG, rc db entry=%s, debug msg=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    rc db entry, uint32, base=enum:RC Config Db Entry
    debug msg, uint32, base=enum:RC Config Db Debug Type
End

Begin Message, CP Trace CP_PE_RC_CONFIG_ERROR_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_CONFIG_ERROR_TRACE_ID, N=%d, <systime>  CP - CP PE RC CONFIG DB ERROR, rc db entry=%s, error msg=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    rc db entry, uint32, base=enum:RC Config Db Entry
    error msg, uint32, base=enum:RC Config Db Debug Type
End

Begin Message, CP Trace CP_PE_RC_CONFIG_ENTRY_ADDED_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_CONFIG_ENTRY_ADDED_TRACE_ID, N=%d, <systime>  CP - CP PE RC CONFIG ENTRY ADDED MSG, rc db entry=%s, channel=%x, numRevSch=%x, revSchId=%d, rate=%x, durationUnits=%d, actionTime
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    rc db entry, uint32, base=enum:RC Config Db Entry
    channel, uint32
    numRevSch, uint32
    revSchId, uint32
    rate, uint32
    durationUnits, uint32
    actionTime, uint32
End

Begin Message, CP Trace CP_PE_RC_CONFIG_DB_CHECK_ENTRY_TRACE_ID Rsp
    printformat , 1,  1, CP_PE_RC_CONFIG_DB_CHECK_ENTRY_TRACE_ID, N=%d, <systime>  CP - CP PE RC CONFIG DB ERROR, rc db entry=%s, current time=%x, action time=%x, duration units=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    rc db entry, uint32, base=enum:RC Config Db Entry
    current time, uint32
    action time, uint32
    duration uints, uint32
End

Begin Message, CP Trace CP HO_NUM_ACT_PILOTS Rsp
    printformat , 1, 1, CP HO_NUM_ACT_PILOTS, N=%d, <systime>  CP - HO:Number of active pilots = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NumPilots, uint32
End

Begin Message, CP Trace CP HO_ACT_PILOT_A Rsp
    printformat , 1, 1, CP HO_ACT_PILOT_A, N=%d, <systime>  CP - HO:active pilot pilotPN=%d, pwrCombInd=%d, codeChan=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    pilotPN, uint32
    pwrCombInd, uint32
    codeChan, uint32
End

Begin Message, CP Trace CP HO_ACT_PILOT_B Rsp
    printformat , 1, 1, CP HO_ACT_PILOT_B, N=%d, <systime>  CP - HO:active pilot codeChanDcch=%d, qofMaskIdFch=%d, srchOffset=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    codeChanDcch, uint32
    qofMaskIdFch, uint32
    srchOffset, uint32
End

Begin Message, CP Trace CP HO_ACTION_TIME Rsp
    printformat , 1, 1, CP HO_ACTION_TIME, N=%d, <systime>  CP - HO:Action Time UseActTime=%d, rcvdActTime=0x%08x, 32actionTime=0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    UseActTime, uint32
    rcvdActTime, uint32
    32actionTime, uint32
End

Begin Message, CP Trace CP HO_SUP_CODE_CH Rsp
    printformat , 1, 1, CP HO_SUP_CODE_CH, N=%d, <systime>  CP - HO:Sup Code Ch forIncluded=%d, revIncluded=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    forIncluded, uint32
    revIncluded, uint32
End

Begin Message, CP Trace CP HO_SUP_CH Rsp
    printformat , 1, 1, CP HO_SUP_CH, N=%d, <systime>  CP - HO:Sup Ch schIncl=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    schIncl, uint32
End

Begin Message, CP Trace CP HO_FLAGS Rsp
    printformat , 1, 1, CP HO_FLAGS, N=%d, <systime>  CP - HO:Sup longCodeCh=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    schIncl, uint32
End

Begin Message, CP Trace CP HO_CHAN_CHANGE Rsp
    printformat , 1, 1, CP HO_CHAN_CHANGE, N=%d, <systime>  CP - HO:SF Band=%d, TF Band=%d, SF Chan=%d, TF Chan=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SF Band, uint32
    TF Band, uint32
    SF Chan, uint32
    TF Chan, uint32
End

Begin Message, CP Trace CP HO_FRAME_OFFSET Rsp
    printformat , 1, 1, CP HO_FRAME_OFFSET, N=%d, <systime>  CP - HO:SF frame offset=%d, TF frame offset=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SF Band, uint32
    TF Band, uint32
    SF Chan, uint32
    TF Chan, uint32
End

Begin Message, CP Trace CP HO_SRCH_WIN Rsp
    printformat , 1, 1, CP HO_SRCH_WIN, N=%d, <systime>  CP - HO:Incl=%d, srchWinA=%d, srchWinN=%d, srchWinR=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Incl, uint32
    srchWinA, uint32
    srchWinN, uint32
    srchWinR, uint32
End

Begin Message, CP Trace CP HO_PRIVATE_LCM Rsp
    printformat , 1, 1, CP HO_PRIVATE_LCM, N=%d, <systime>  CP - HO:Private Long Code Mask=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Incl, uint32
End

Begin Message, CP Trace CP HO_PWR_CNTL_STEP Rsp
    printformat , 1, 1, CP HO_PWR_CNTL_STEP, N=%d, <systime>  CP - HO:Power Control Step Use=%d, Value=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Use, uint32
    value, uint32
End

Begin Message, CP Trace CP HO_NUM_PREAMBLE Rsp
    printformat , 1, 1, CP HO_NUM_PREAMBLE, N=%d, <systime>  CP - HO:Number of Preamble Frames=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Frames, uint32
End

Begin Message, CP Trace CP HO_CH_IND Rsp
    printformat , 1, 1, CP HO_CH_IND, N=%d, <systime>  CP - HO:Channel Indicator=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Indicator, uint32
End

Begin Message, CP Trace CP HO_FPC_SUBCHAN_GAIN Rsp
    printformat , 1, 1, CP HO_FPC_SUBCHAN_GAIN, N=%d, <systime>  CP - HO:Forward Power Control Subchannel Gain=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Gain, uint32
End

Begin Message, CP Trace CP HO_REV_FCH_GATING_MODE Rsp
    printformat , 1, 1, CP HO_REV_FCH_GATING_MODE, N=%d, <systime>  CP - HO:FCh gating mode=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    mode, uint32
End

Begin Message, CP Trace CP HO_REV_PWR_CNTL_DELAY Rsp
    printformat , 1, 1, CP HO_REV_PWR_CNTL_DELAY, N=%d, <systime>  CP - HO:Reverse Power Control Delay=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Delay, uint32
End

Begin Message, CP Trace CP HO_SRV_CONFIG Rsp
    printformat , 1, 1, CP HO_SRV_CONFIG, N=%d, <systime>  CP - HO:serviceIncluded=%d, nnServiceIncluded=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    serviceIncluded, uint32
    nnServiceIncluded, uint32
End

Begin Message, CP Trace CP HO_HANDOFF_FAIL Rsp
    printformat , 1, 1, CP HO_HANDOFF_FAIL, N=%d, <systime>  CP - HO:Handoff Fail Ind
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP HO_HANDOFF_COMPLETE_RCVD Rsp
    printformat , 1, 1, CP HO_HANDOFF_COMPLETE_RCVD, N=%d, <systime>  CP - HO:Handoff Complete Received
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP HO_RETURN_ON_FAIL Rsp
    printformat , 1, 1, CP HO_RETURN_ON_FAIL, N=%d, <systime>  CP - HO:Return on Fail = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Return, uint32
End

Begin Message, CP Trace CP HO_RESET_L2 Rsp
    printformat , 1, 1, CP HO_RESET_L2, N=%d, <systime>  CP - HO:Reset L2 = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Reset, uint32
End

Begin Message, CP Trace CP HO_RESET_FPC Rsp
    printformat , 1, 1, CP HO_RESET_FPC, N=%d, <systime>  CP - HO:Reset fpc = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Reset, uint32
End

Begin Message, CP Trace CP HO_HDM_SEQ Rsp
    printformat , 1, 1, CP HO_HDM_SEQ, N=%d, <systime>  CP - HO:Handoff Directiom Message sequence number = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Num, uint32
End

Begin Message, CP Trace CP HO_CFG_THRESH Rsp
    printformat , 1, 1, CP HO_CFG_THRESH, N=%d, <systime>  CP - HO:Thresholds tAdd=%d, tDrop=%d, tComp=%d, tTdrop=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    tAdd, uint32
    tDrop, uint32
    tComp, uint32
    tTdrop, uint32
End

Begin Message, CP Trace CP HO_CFG_INTERCEPT Rsp
    printformat , 1, 1, CP HO_CFG_INTERCEPT, N=%d, <systime>  CP - HO:Intercept softslope=%d, addIntercept=%d, dropIntercept=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    softslope, uint32
    addIntercept, uint32
    dropIntercept, uint32
End

Begin Message, CP Trace CP HO_PREV Rsp
    printformat , 1, 1, CP HO_PREV, N=%d, <systime>  CP - HO:P_REVs=%d, P_REV_IN_USEs=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    P_REVs, uint32
    P_REV_IN_USEs, uint32
End

Begin Message, CP Trace CP HO_PACKET_ZONE_ID Rsp
    printformat , 1, 1, CP HO_PACKET_ZONE_ID, N=%d, <systime>  CP - HO:Packet Zone Id=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    id, uint32
End

Begin Message, CP Trace CP HO_SEARCH Rsp
    printformat , 1, 1, CP HO_SEARCH, N=%d, <systime>  CP - HO:complete search=%d, periodic search=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    complete, uint32
    periodic, uint32
End

Begin Message, CP Trace CP HO_PWR_PARMS Rsp
    printformat , 1, 1, CP HO_PWR_PARMS, N=%d, <systime>  CP - HO:Power Parms  nomPwrExt=%d, nomPwr=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    nomPwrExt, uint32
    nomPwr, uint32
End

Begin Message, CP Trace CP HO_RLGAIN_TRAFFIC_PILOT Rsp
    printformat , 1, 1, CP HO_RLGAIN_TRAFFIC_PILOT, N=%d, <systime>  CP - HO:RLGAIN Traffic Pilot=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Pilot, uint32
End

Begin Message, CP Trace CP HO_CONT_REV_PILOT Rsp
    printformat , 1, 1, CP HO_CONT_REV_PILOT, N=%d, <systime>  CP - HO:Continues Reverse Pilot=%d, Rate=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Continues, uint32
    Rate, uint32
End

Begin Message, CP Trace CP HO_TIMER_TRACE_ID Rsp
    printformat , 1, 1, CP HO_TIMER_TRACE_ID, N=%d, <systime>  CP - HO:Hard Handoff Timer Started duration=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimerVal, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_P_REV_6_VALIDATE_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_P_REV_6_VALIDATE_TRACE_ID, N=%d, <systime>  CP - Action Type = %d, Num.Of Connection = %d, Service Option = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Action Type, uint32
    Num.Of Connection, uint32
    Service Option, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_ENCRYPT_MODE_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_ENCRYPT_MODE_TRACE_ID, N=%d, <systime>  CP - Connection Index = %d, Encryption Mode = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Connection Index, uint32
    Encryption Mode, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_RLP_BLOB_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_RLP_BLOB_TRACE_ID, N=%d, <systime>  CP - Connection Index = %d, NAK Forward = %d, NAK Reverse = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Connection Index, uint32
    NAK Forward, uint32
    NAK Reverse, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_FCH_FS_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_FCH_FS_TRACE_ID, N=%d, <systime>  CP - SC FCH FS = %d, MS CAP FCH FS = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SC FCH FS, uint32
    MS CAP FCH FS, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_FCH_FOR_RC_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_FCH_FOR_RC_TRACE_ID, N=%d, <systime>  CP - FCH FORWARD RC: SC FCH RC = %x, MS CAP FCH RC Map = %x.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SC FCH RC, uint32
    MS CAP FCH RC Map, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_FCH_REV_RC_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_FCH_REV_RC_TRACE_ID, N=%d, <systime>  CP - FCH REVERSE RC: SC FCH RC = %x, MS CAP FCH RC Map = %x.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SC FCH RC, uint32
    MS CAP FCH RC Map, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_DCCH_FS_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_DCCH_FS_TRACE_ID, N=%d, <systime>  CP - SC DCCH FS = %d, MS CAP DCCH FS = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SC DCCH FS, uint32
    MS CAP DCCH FS, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_DCCH_FOR_RC_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_DCCH_FOR_RC_TRACE_ID, N=%d, <systime>  CP - DCCH FORWARD RC: SC DCCH RC = %x, MS CAP DCCH RC Map = %x.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SC FCH RC, uint32
    MS CAP FCH RC Map, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_DCCH_REV_RC_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_DCCH_REV_RC_TRACE_ID, N=%d, <systime>  CP - DCCH REVERSE RC: SC DCCH RC = %x, MS CAP DCCH RC Map = %x.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SC DCCH RC, uint32
    MS CAP DCCH RC Map, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_NUM_FOR_SCH_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_NUM_FOR_SCH_TRACE_ID, N=%d, <systime>  CP - Num. FSCH: SC Num. FSCH = %d, MS CAP Num. FSCH = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SC Num. FSCH, uint32
    MS CAP Num. FSCH, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_FOR_SCH_RC_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_FOR_SCH_RC_TRACE_ID, N=%d, <systime>  CP - SCH FORWARD RC: SC SCH RC = %x, MS CAP SCH RC Map = %x, SCH ID = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SC SCH RC, uint32
    MS CAP SCH RC Map, uint32
    SCH ID, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_FOR_SCH_MUX_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_FOR_SCH_MUX_TRACE_ID, N=%d, <systime>  CP - SCH FORWARD MUX: SCH MUX Supported = %d, SC SCH MUX Option = %d, MS CAP SCH MUX Option RS1 = %d, MS CAP SCH MUX Option RS2 = %d, SCH ID = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SCH MUX Supported, uint32
    SC SCH MUX Option, uint32
    MS CAP SCH MUX Option RS1, uint32
    MS CAP SCH MUX Option RS2, uint32
    SCH ID, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_FOR_SCH_CODING_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_FOR_SCH_CODING_TRACE_ID, N=%d, <systime>  CP - SCH FORWARD CODING: SC SCH Coding = %d, MS CAP SCH Coding = %d, SCH ID = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SC SCH Coding, uint32
    MS CAP SCH Coding, uint32
    SCH ID, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_NUM_REV_SCH_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_NUM_REV_SCH_TRACE_ID, N=%d, <systime>  CP - Num. RSCH: SC Num. RSCH = %d, MS CAP Num. RSCH = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SC Num. FSCH, uint32
    MS CAP Num. FSCH, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_REV_SCH_RC_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_REV_SCH_RC_TRACE_ID, N=%d, <systime>  CP - SCH REVERSE RC: SC SCH RC = %x, MS CAP SCH RC Map = %x, SCH ID = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SC SCH RC, uint32
    MS CAP SCH RC Map, uint32
    SCH ID, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_REV_SCH_MUX_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_REV_SCH_MUX_TRACE_ID, N=%d, <systime>  CP - SCH REVERSE MUX: SCH MUX Supported = %d, SC SCH MUX Option = %d, MS CAP SCH MUX Option RS1 = %d, MS CAP SCH MUX Option RS2 = %d, SCH ID = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SCH MUX Supported, uint32
    SC SCH MUX Option, uint32
    MS CAP SCH MUX Option RS1, uint32
    MS CAP SCH MUX Option RS2, uint32
    SCH ID, uint32
End

Begin Message, CP Trace CP_SCC_SERV_CONFIG_INVALID_REV_SCH_CODING_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_SERV_CONFIG_INVALID_REV_SCH_CODING_TRACE_ID, N=%d, <systime>  CP - SCH REVERSE CODING: SC SCH Coding = %d, MS CAP SCH Coding = %d, SCH ID = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SC SCH Coding, uint32
    MS CAP SCH Coding, uint32
    SCH ID, uint32
End

Begin Message, CP Trace CP_SCC_PSC_SC_VALIDATE_TRACE_ID Rsp
    printformat , 1, 1, CP_SCC_PSC_SC_VALIDATE_TRACE_ID, N=%d, <systime>  CP - SCC PSC SC VALIDATE: Rtn Status = %d, P_REV_IN_USE = %d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Rtn Status, uint32
    P_REV_IN_USE, uint32
End

Begin Message, CP Trace CP_PE_ATIM_ERROR_1_TRACE_ID Rsp
    printformat , ENG_CP_TR, 5, 0x%08X CP - ATIM Pilot PN does not match current pilot PN (Current PN=%d, EAPM PN=%d).
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PS Generic DEC1 Rsp
    printformat , 1, 1, CP PS Generic DEC1, N=%d, <systime>  CP - PS Generic Dec1: %d, %d, %d, %d, %d, %d, %d, %d, %d, %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PS Generic DEC2 Rsp
    printformat , 1, 1, CP PS Generic DEC2, N=%d, <systime>  CP - PS Generic Dec2: %d, %d, %d, %d, %d, %d, %d, %d, %d, %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PS Generic HEX1 Rsp
    printformat , 1, 1, CP PS Generic HEX1, N=%d, <systime>  CP - PS Generic Hex1: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PS Generic HEX2 Rsp
    printformat , 1, 1, CP PS Generic HEX2, N=%d, <systime>  CP - PS Generic Hex2: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP PS LOCSERV Rsp
    printformat , 1, 1, CP PS LOCSERV, N=%d, <systime>  CP - LocSrv: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Trace Index, uint32, base=enum:LocSrv Trace Index
    Rec, union, enum=Trace Index
End

Begin Message, CP PS LOCSERV Outstanding Requests Received Rsp
    SessId, uint32
End

Begin Message, CP PS LOCSERV BS Capabilities Rsp
    Session ID, uint32
    Revision, uint32
    GPS Cap, uint32, base=enum:FALSE/TRUE
    AFLT Cap, uint32, base=enum:FALSE/TRUE
    APDC ID, uint32
End

Begin Message, CP PS LOCSERV BS Reject Response Received Rsp
    SessId, uint32
    RejElem, uint32, base=enum:MS Request Element enum
    RejReason, uint32, base=enum:CAP not Supported/CAP Temp Not Supported
End

Begin Message, CP PS LOCSERV BS Response Not Supported Rsp
    Element, uint32, base=enum:Loc BS Response Element enum
End

Begin Message, CP PS LOCSERV Invalid PPM Session ID Rsp
    PPMId, uint32
End

Begin Message, CP PS LOCSERV Invalid LocServ Session ID Rsp
    SessId, uint32
End

Begin Message, CP PS LOCSERV Outgoing Msg Buffer Get Failed Rsp
End

Begin Message, CP PS LOCSERV Session Tag Mismatch Rsp
End

Begin Message, CP PS LOCSERV BS Location Response Rcvd Rsp
    CDMA Time Ref, uint32
    Lat, uint32
    Long, uint32
    Height, uint32
    Heading, uint32
    Horizontal Velo, uint32
    Vertical Velo, uint32
End

Begin Message, CP PS LOCSERV BS Response Element Rcvd Rsp
    Response element, uint32, base=enum:Loc BS Response Element enum
End

Begin Message, CP PS LOCSERV BS Request Element Rcvd Rsp
    Request element, uint32, base=enum:Loc BS Request Element enum
End

Begin Message, CP PS LOCSERV Mobile Orig Location Session Rsp
End

Begin Message, CP PS LOCSERV Loc Session PS Struct Header Rsp
    Sess Start, uint32, base=enum:FALSE/TRUE
    Sess End, uint32, base=enum:FALSE/TRUE
    Sess Source, uint32, base=enum:BS Init/MS Orig
    Sess Tag, uint32
    Sess Id, uint32
End

Begin Message, CP PS LOCSERV Loc Session PS Struct Requests Rsp
    Num Req Out, uint32
    Out Req Map, uint32
    Num Req, uint32
    Req Len, uint32
End

Begin Message, CP PS LOCSERV Loc Session PS Struct Responses Rsp
    Num Rsp, uint32
    Rsp Len, uint32
End

Begin Message, CP PS LOCSERV Loc Session PS Struct AFLT Rsp
    PPM Id, uint32
    AFLT State, uint32, base=enum:AFLT States enum
    Num Fixes, uint32
    Num Pilots, uint32
End

Begin Message, CP PS LOCSERV Loc Session PS Struct AGPS Rsp
    AGPS State, uint32, base=enum:AGPS States enum
    Num Fixes, uint32
    AcqAsst Len, uint32
End

Begin Message, CP PS LOCSERV Invalid AFLT State Rsp
    AFLT State, uint32
End

Begin Message, CP PS LOCSERV Invalid AGPS State Rsp
    AGPS State, uint32
End

Begin Message, CP PS LOCSERV Unexpected AFLT Event Rsp
End

Begin Message, CP PS LOCSERV Unexpected AGPS Event Rsp
End

Begin Message, CP PS LOCSERV MS Request to BS Rsp
    MS Req, uint32, base=enum:MS Request Element enum
End

Begin Message, CP PS LOCSERV MS Response to BS Rsp
    MS Rsp, uint32, base=enum:MS Response Element enum
End

Begin Message, CP PS LOCSERV Collision Rsp
End

Begin Message, CP PS LOCSERV PDDM Received Rsp
End

Begin Message, CP PS LOCSERV PDDM Sent Rsp
End

Begin Message, CP PS LOCSERV RMS Error Phase Response Dump Rsp
    Index, uint32
    PolyX, double
    RmsErr, double
    ParmX, uint32
    ParmY, uint32
    RmsErrPhase, uint32
End

Begin Message, CP Trace CP_LOC_STATUS_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_STATUS_TRACE_ID, N=%d, <systime>  CP - InstanceId: %d, Sess_Id: %d, Loc FixMode: %s, oldState:%s, State:%s, event:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    InstanceId, uint32
    Sess_Id, uint32
    FixMode, uint32, base=enum:Loc FixMode enum
    OldSate, uint32,exist=(FixMode==0)
    State, uint32,exist=(FixMode==0)
    MSA_oldState, uint32,base=enum:Msa Loc State enum,exist=(FixMode==1)
    MSA_State, uint32,base=enum:Msa Loc State enum,exist=(FixMode==1)
    MSB_oldState, uint32,base=enum:Msb Loc State enum,exist=(FixMode==2)
    MSB_State, uint32,base=enum:Msb Loc State enum,exist=(FixMode==2)
    MSS_oldState, uint32,base=enum:Mss Loc State enum,exist=(FixMode==3)
    MSS_State, uint32,base=enum:Mss Loc State enum,exist=(FixMode==3)
    CP_oldState, uint32,base=enum:ControlPlane Loc State enum,exist=(FixMode==4)
    CP_State, uint32,base=enum:ControlPlane Loc State enum,exist=(FixMode==4)
    event, uint32, base=enum:Loc Event enum
End

Begin Message, CP Trace CP_LOC_MODE_FLOW_GET_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_MODE_FLOW_GET_TRACE_ID, N=%d, <systime>  CP - InstanceId: %d, Sess_Id: %d, Loc FixMode: %s, NumFixes:%d,Sub Flow:%s, Performance:%d, Accuracy:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    InstanceId, uint32
    Sess_Id, uint32
    FixMode, uint32, base=enum:Loc FixMode enum
    NumFixes, uint32
    MSA_State, uint32,base=enum:MSA_FLOW enum,exist=(FixMode==1)
    MSB_State, uint32,base=enum:MSB_FLOW enum,exist=(FixMode==2)
    MSS_State, uint32,exist=(FixMode==3)
    CP_State, uint32,exist=(FixMode==4)
    Performance, uint32
    Accuracy, uint32
End

Begin Message, CP Trace CP_LOC_ALM_EPH_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_ALM_EPH_TRACE_ID, N=%d, <systime>  CP - Sess_Id: %d, GPS Almanac: %d, GPS Ephemeris: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Sess_Id, uint32
    Almanac, uint32
    Ephemeris, uint32
End

Begin Message, CP Trace CP_LOC_OUTPUT_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_OUTPUT_TRACE_ID, N=%d, <systime>  CP - InstanceId: %d, Sess_Id: %d, OutstandingREQ=%d, OutStandingRsp=%d, NumReqOutstanding=%d, NumRspOutstanding=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    InstanceId, uint32
    Sess_Id, uint32
    OutstandingREQ, uint32
    OutStandingRsp, uint32
    NumReqOutstanding, uint32
    NumRspOutstanding, uint32
End

Begin Message, CP Trace CP_LOC_REV_TCBP_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_REV_TCBP_TRACE_ID, N=%d, <systime>  CP - TCPsendOK: %d, TcpSendPktSessionId: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TCPsendOK, uint32
    TcpSendPktSessionId, uint32
End

Begin Message, CP Trace CP_LOC_REV_SMS_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_REV_SMS_TRACE_ID, N=%d, <systime>  CP - SMSsendOK: %d, SmsSendPktSessionId: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SMSsendOK, uint32
    SmsSendPktSessionId, uint32
End

Begin Message, CP Trace CP_LOC_OUTPUT_INFO_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_OUTPUT_INFO_TRACE_ID, N=%d, <systime>  CP - InstanceId: %d, Sess_Id: %d, FixMode: %d, LocSMSsendOK: %d, LocTCPsendOK: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    InstanceId, uint32
    Sess_Id, uint32
    FixMode, uint32
    LocSMSsendOK, uint32
    LocTCPsendOK, uint32
End

Begin Message, CP Trace CP_LOC_SESS_INFO_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_SESS_INFO_TRACE_ID, N=%d, <systime>  CP - InstanceId: %d, Sess_Id: %d,FixMode: %s, NumFixes: %d, TimeBFixes:%d, Accuracy:%d, Performance:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    InstanceId, uint32
    Sess_Id, uint32
    FixMode, uint32, base=enum:Loc FixMode enum
    NumFixes, uint32
    TimeBFixes, uint32
    Accuracy, uint32
    Performance, uint32
End

Begin Message, CP Trace CP_LOC_RCV_RSP_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_RCV_RSP_MSG_TRACE_ID, N=%d, <systime>  CP - InstanceId: %d, Sess_Id=%d, RspType: %s, OutstandingREQ: %d, NumReqOutstanding: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    InstanceId, uint32
    Sess_Id, uint32
    RspType, uint32, base=enum:Loc BS Response Element enum
    OutstandingREQ, uint32
    NumReqOutstanding, uint32
End

Begin Message, CP Trace CP_LOC_TIMER_START_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_TIMER_START_TRACE_ID, N=%d, <systime>  CP - %s, Id:%s, Interval:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Timer, uint32, base=enum:Loc Timer enum
    Loc TimerId, uint32,base=enum:Loc TimerID enum,exist=(Timer==0)
    PrefRespQualTimerId, uint32,base=enum:PrefRespQualTimerID enum,exist=(Timer==1)
    interval, uint32
End

Begin Message, CP Trace CP_LOC_TIMER_STOP_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_TIMER_STOP_TRACE_ID, N=%d, <systime>  CP - %s, Id:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Timer, uint32, base=enum:Loc Timer enum
    Loc TimerId, uint32,base=enum:Loc TimerID enum,exist=(Timer==0)
    PrefRespQualTimerId, uint32,base=enum:PrefRespQualTimerID enum,exist=(Timer==1)
End

Begin Message, CP Trace CP_LOC_TIMER_EXP_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_TIMER_EXP_TRACE_ID, N=%d, <systime>  CP - Callback:%s, Id:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Timer, uint32, base=enum:ExpireTimerCallback enum
    Id, uint32
End

Begin Message, CP Trace CP_LOC_ALM_EPH_CHECK_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_ALM_EPH_CHECK_TRACE_ID, N=%d, <systime>  CP - AlmSysTime:0x%08X, ephSysTime:0x%08X, currentTime:0x%08X, expired:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AlmSysTime, uint32
    ephSysTime, uint32
    currentTime, uint32
    expired, uint32
End

Begin Message, CP Trace CP_LOC_CLR_PPM_STATUS_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_CLR_PPM_STATUS_TRACE_ID, N=%d, <systime>  CP - PPMId:%d, L1dSendOK:%d, SessID0:%d, SessID1:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PPMId, uint32
    L1dSendOK, uint32
    SessID0, uint32
    SessID1, uint32
End

Begin Message, CP Trace CP_LOC_PRM_MSM_REQ_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_PRM_MSM_REQ_TRACE_ID, N=%d, <systime>  CP - LECSendOK:%d, LecReadyInd:%d, L1dSendOK:%d, SessID0:%d, SessID1:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    LECSendOK, uint32
    LecReadyInd, uint32
    LocL1dSendOK, uint32
    SessID0, uint32
    SessID1, uint32
End

Begin Message, CP Trace CP_LOC_PPM_MSM_REQ_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_PPM_MSM_REQ_TRACE_ID, N=%d, <systime>  CP - LECSendOK:%d, LecReadyInd:%d, PPMId:%d, SessID0:%d, SessID1:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    LECSendOK, uint32
    LecReadyInd, uint32
    PPMId, uint32
    SessID0, uint32
    SessID1, uint32
End

Begin Message, CP Trace CP_LOC_RCV_REQ_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_RCV_REQ_MSG_TRACE_ID, N=%d, <systime>  CP - InstanceId: %d, Sess_Id=%d, ReqType: %s, OutstandingREQ: %d, NumReqOutstanding: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    InstanceId, uint32
    Sess_Id, uint32
    ReqType, uint32, base=enum:Loc BS Request Element enum
    OutstandingREQ, uint32
    NumReqOutstanding, uint32
End

Begin Message, CP Trace CP_LOC_CONN_IND_ID Rsp
    printformat , 1, 1, CP_LOC_CONN_IND_ID, N=%d, <systime>  CP - %s, Status: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SmsTcp, uint32, base=enum:SmsTcp enum
    ConnStatus, uint32, base=enum:Conn Status enum
End

Begin Message, CP Trace CP_LOC_ALM_EPH_RESTORE_ID Rsp
    printformat , 1, 1, CP_LOC_ALM_EPH_RESTORE_ID, N=%d, <systime>  CP - ephSysTime:0x%08X, almSysTime:0x%08X, ephTimeInterval:%d,almTimeInterval:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ephSysTime, uint32
    almSysTime, uint32
    ephTimeInterval, uint32
    almTimeInterval, uint32
End

Begin Message, CP Trace CP_LOC_GPS_READY_ID Rsp
    printformat , 1, 1, CP_LOC_GPS_READY_ID, N=%d, <systime>  CP - LECSendOK:%d, LecReadyInd:%d, L1dSendOK:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    LECSendOK, uint32
    LecReadyInd, uint32
    L1dSendOK, uint32
End

Begin Message, CP Trace CP_LOC_CLR_PRM_STATUS_TRACE_ID Rsp
    printformat , 1, 1, CP_LOC_CLR_PRM_STATUS_TRACE_ID, N=%d, <systime>  CP - PRMstate:%d, Flag:%d, LECSendOK:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PRMstate, uint32
    Flag, uint32
    LECSendOK, uint32
End

Begin Message, CP Trace CP UIM_PSW_STATUS_TRACE_ID Rsp
    printformat , 1, 1, CP UIM_PSW_STATUS_TRACE_ID, N=%d, <systime>  CP - UIM Status: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Uim Trace, uint32, base=enum:Uim Trace Type Enum
    Trace, union, enum=Uim Trace
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID PswUimStatusNotifyMsg() Rsp
    Rcvd Uim Card Status, uint32, base=enum:Psw Uim Card Status Enum
    Current Psw Uim Card Status, uint32, base=enum:Psw Uim Card Status Enum
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID PswUimETSWhatChanged() Rsp
    Changed, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID PswUimNoUIMCardInit() Rsp
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID PswUimIllegalUpdate() Rsp
    Illegal Update, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID PswUpdateUim() Rsp
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID UimResponse() Rsp
    MsgId, uint32, base=enum:Uim MsgId Type
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID UimGetPrl() Rsp
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID UimPrlResponse() Rsp
    MsgId, uint32, base=enum:Uim MsgId Type
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID UimStoreEsnAck() Rsp
    Sw, uint32, base=16
    Len, uint32, base=10
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID PswDbmInit() Rsp
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID UimGetNamDataRead() Rsp
    UimId, uint32, base=16
    Use SF_EUIMID, uint32, base=enum:FALSE/TRUE
    Use RUIMID, uint32, base=enum:FALSE/TRUE
    CST[2], uint32, base=16
    CST[1], uint32, base=16
    SF_EUIMID lower 32bits, uint32, base=16
    SF_EUIMID upper 32bits, uint32, base=16
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID PswNamChangedByEtsMsg() Rsp
    NvmChangedByEts, uint32, base=enum:CP DB Segments
    _EtsChangedNam, uint32
    Current Active Nam, uint32
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID PswNamDataRead() Rsp
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID NamDataWrite() Rsp
    CurrentActiveNAM, uint32, base=10
    MsidType, uint32, base=enum:MsidType Enum
    UimId, uint32, base=16
    EsnInUse, uint32, base=16
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID DbmDataNamRequest() Rsp
    CurrentActiveNAM, uint32, base=10
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID UimDataRequest() Rsp
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID _UimStatusNotifyMsg() Rsp
    Rcvd Uim Card Status, uint32, base=enum:Psw Uim Card Status Enum
    Current Psw Uim Card Status, uint32, base=enum:Psw Uim Card Status Enum
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID cssDbmInit() Rsp
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID _UimNamDataRead() Rsp
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID UimEsnStore() Rsp
    UsageInd, uint32, base=enum:FALSE/TRUE
    msidType, uint32, base=enum:MsidType Enum
    msid lower 32bits, uint32, base=16
    msid upper 32bits, uint32, base=16
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID secApiResponse() Rsp
    MsgType, uint32, base=enum:OTA Req Msg Type
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID ReleaseUim() Rsp
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID InSvcUim() Rsp
    InSvc, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID InSvcWaitUim() Rsp
    InSvc, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID ConfirmUim() Rsp
    Success, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID RcvOutstUim() Rsp
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID handleSyncRequestUim() Rsp
    MsgType, uint32, base=enum:OTA Req Msg Type
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID handleAsyncRequestUim() Rsp
    MsgType, uint32, base=enum:OTA Req Msg Type
End

Begin Message, CP UIM_PSW_STATUS_TRACE_ID ResponseUim() Rsp
    MsgType, uint32, base=enum:OTA Rsp Msg Type
End

Begin Message, CP Trace CP PSW_DBM_TRACE_ID Rsp
    printformat , 1, 1, CP PSW_DBM_TRACE_ID, N=%d, <systime>  CP - DBM Status: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Dbm Trace, uint32, base=enum:PswDbmTraces Enum
    Trace, union, enum=Dbm Trace
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_MS_CAP_WRITE Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_NAM_LOCK_WRITE Rsp
    lockState, uint32, base=enum:Not Locked/Locked
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_NAM_DATA_WRITE Rsp
    currentNAM, uint32, base=enum:Invalid/NAM1/NAM2
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_MRU_WRITE Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_CLEAR_MRU Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_SAVE_LAST_SYS_MRU Rsp
    band, uint32, base=10
    channel, uint32, base=10
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_NAM_PROCESS_DATA Rsp
    etsChangedNam, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_MRU_PROCESS_DATA Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_INIT_DBM Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_NAM_DATA_READ_REQUEST Rsp
    CurrentActiveNAM, uint32, base=enum:Invalid/NAM1/NAM2
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_MRU_READ_REQUEST Rsp
    CurrentActiveNAM, uint32, base=enum:Invalid/NAM1/NAM2
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_MSCAP_READ_REQUEST Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_PRL_READ_REQUEST Rsp
    CurrentActiveNAM, uint32, base=enum:Invalid/NAM1/NAM2
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_NVM_CHANGED_BY_ETS Rsp
    ChangeNAM, uint32, base=enum:CP DB Segments
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_MISC_DATA_READ_REQUEST Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_MISC_PROCESS_DATA Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_ERI_READ_REQUEST Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_ERI_PROCESS_DATA Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_MSID_WRITE Rsp
    MsId Type, uint32, base=enum:MsidType Enum
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_SECURE_DATA_READ_REQUEST Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_SECURE_DATA_PROCESS Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_SECURE_DATA_WRITE Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_SECURE_DATA_WRITE_ACK Rsp
    Update For, uint32, base=enum:Secure Data Update Type Enum
    Response Needed, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_MISC_DATA_WRITE Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_MISC_DATA_WRITE_ACK Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_MISC_DATA_WRITE_NACK Rsp
End

Begin Message, CP PSW_DBM_TRACE_ID PSW_DBM_SET_MSID_IN_USE Rsp
    MsId Type, uint32, base=enum:MsidType Enum
    ESN In Use, uint32, base=16
    MEID In Use lower32 bits, uint32, base=16
    MEID In Use upper32 bits, uint32, base=16
End

Begin Message, CP Trace CP PE_MULTI_BAND_TRACE_ID Rsp
    printformat , 1, 1, CP PE_MULTI_BAND_TRACE_ID, N=%d, <systime>  CP - Multi Band: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MB Trace, uint32, base=enum:PswMultiBandTraces Enum
    Trace, union, enum=MB Trace
End

Begin Message, CP PE_MULTI_BAND_TRACE_ID BAND_CHANNEL_INVALID Rsp
    Band, uint32, base=enum:Band Class Type Enum
    Channel, uint32, base=10
End

Begin Message, CP PE_MULTI_BAND_TRACE_ID CHANNEL_TO_BLOCK Rsp
    Band, uint32, base=enum:Band Class Type Enum
    Channel, uint32, base=10
    Block, uint32, base=enum:Block Type
End

Begin Message, CP Trace CP SR ENABLED Rsp
    printformat , 1, 1, CP SR ENABLED, N=%d, <systime>  CP - SR ENABLED
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SR DISABLED Rsp
    printformat , 1, 1, CP SR DISABLED, N=%d, <systime>  CP - SR DISABLED
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SR FAIL NO RETRY Rsp
    printformat , 1, 1, CP SR FAIL NO RETRY, N=%d, <systime>  CP - SR FAIL NO RETRY
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SR RETRY WO REACQ Rsp
    printformat , 1, 1, CP SR RETRY WO REACQ, N=%d, <systime>  CP - SR RETRY WO REACQ
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SR RETRY W REACQ SAME SYS Rsp
    printformat , 1, 1, CP SR RETRY W REACQ SAME SYS, N=%d, <systime>  CP - SR RETRY W REACQ SAME SYS
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SR RETRY W REACQ NEXT SYS Rsp
    printformat , 1, 1, CP SR RETRY W REACQ NEXT SYS, N=%d, <systime>  CP - SR RETRY W REACQ NEXT SYS
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SR RESET Rsp
    printformat , 1, 1, CP SR RESET, N=%d, <systime>  CP - SR RESET
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SR TIMEOUT Rsp
    printformat , 1, 1, CP SR TIMEOUT, N=%d, <systime>  CP - SR TIMEOUT
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SR START TIMER Rsp
    printformat , 1, 1, CP SR START TIMER, N=%d, <systime>  CP - SR START TIMER
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SR INC COUNTER Rsp
    printformat , 1, 1, CP SR INC COUNTER, N=%d, <systime>  CP - SR INC COUNTER. Silent Retry Attempt:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Attempt, uint8
End

Begin Message, CP Trace CP SR EVENT SENT TO MMI Rsp
    printformat , 1, 1, CP SR EVENT SENT TO MMI, N=%d, <systime>  CP - SR EVENT SENT TO MMI
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SR STATUS SENT TO MMI Rsp
    printformat , 1, 1, CP SR STATUS SENT TO MMI, N=%d, <systime>  CP - SR STATUS SENT TO MMI
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SR RESET REORIG Rsp
    printformat , 1, 1, CP SR RESET REORIG, N=%d, <systime>  CP - SR RESET REORIG
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SR STOP REORIG TIMER Rsp
    printformat , 1, 1, CP SR STOP REORIG TIMER, N=%d, <systime>  CP - SR STOP REORIG TIMER
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SR START REORIG TIMER Rsp
    printformat , 1, 1, CP SR START REORIG TIMER, N=%d, <systime>  CP - SR START REORIG TIMER
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SR REOIRIG CALL Rsp
    printformat , 1, 1, CP SR REOIRIG CALL, N=%d, <systime>  CP - SR REOIRIG CALL
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP CONN IND Rsp
    printformat , 1, 1, CP OTASP CONN IND, N=%d, <systime>  CP - Wbios OTASP CONN IND
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP DISCONN IND Rsp
    printformat , 1, 1, CP OTASP DISCONN IND, N=%d, <systime>  CP - Wbios OTASP DISCONN IND
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP PREMATURE TERM IND Rsp
    printformat , 1, 1, CP OTASP PREMATURE TERM IND, N=%d, <systime>  CP - Wbios OTASP PREMATURE TERM IND
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP START IND Rsp
    printformat , 1, 1, CP OTASP START IND, N=%d, <systime>  CP - Wbios OTASP START IND
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP STOP IND Rsp
    printformat , 1, 1, CP OTASP STOP IND, N=%d, <systime>  CP - Wbios OTASP STOP IND
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP SYSTEM ERROR IND Rsp
    printformat , 1, 1, CP OTASP SYSTEM ERROR IND, N=%d, <systime>  CP - Wbios OTASP SYSTEM ERROR IND
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP RELEASE REQ Rsp
    printformat , 1, 1, CP OTASP RELEASE REQ, N=%d, <systime>  CP - Wbios OTASP RELEASE REQ
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP SEND MSG REQ Rsp
    printformat , 1, 1, CP OTASP SEND MSG REQ, N=%d, <systime>  CP - Wbios OTASP SEND MSG REQ
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP ACCEPT MSG ID Rsp
    printformat , 1, 1, CP OTASP ACCEPT MSG ID, N=%d, <systime>  CP - Wbios OTASP ACCEPT MSG ID
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP UPDATE DATA Rsp
    printformat , 1, 1, CP OTASP UPDATE DATA, N=%d, <systime>  CP - Wbios OTASP UPDATE DATA
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP UPDATE AKEY Rsp
    printformat , 1, 1, CP OTASP UPDATE AKEY, N=%d, <systime>  CP - Wbios OTASP UPDATE AKEY
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP GENERATE RAND32 Rsp
    printformat , 1, 1, CP OTASP GENERATE RAND32, N=%d, <systime>  CP - Wbios OTASP GENERATE RAND32
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP GENERATE RAND160 Rsp
    printformat , 1, 1, CP OTASP GENERATE RAND160, N=%d, <systime>  CP - Wbios OTASP GENERATE RAND160
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP GENERATE MSSRESULT REQ Rsp
    printformat , 1, 1, CP OTASP GENERATE MSSRESULT REQ, N=%d, <systime>  CP - Wbios OTASP GENERATE MSSRESULT REQ
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP OTASP GENERATE KREQ Rsp
    printformat , 1, 1, CP OTASP GENERATE KREQ, N=%d, <systime>  CP - Wbios OTASP GENERATE KREQ
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP SMS Deliver Ind Rsp
    printformat , 1, 1, CP SMS Deliver Ind, N=%d, <systime>  CP - SMS Delever Ind TeleSrvId=%d, SeqNum=%d, MsgId=%d, NumUserDataMsgs=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TeleSrvId, uint32
    SeqNum, uint32
    MsgId, uint32
    NumUserDataMsgs, uint32
End

Begin Message, CP Trace CP SMS Error Rsp
    printformat , 1, 1, CP SMS Error, N=%d, <systime>  CP - SMS Error TeleSrvId=%d, MsgId=%d, Error Class=%d, Cause Code=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TeleSrvId, uint32
    MsgId, uint32
    Error Class, uint32
    Cause Code, uint32
End

Begin Message, CP Trace CP SMS L2 Ack Received from SMS Ack Rsp
    printformat , 1, 1, CP SMS L2 Ack Received from SMS Ack, N=%d, <systime>  CP - seqNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    seqNum, uint32
End

Begin Message, CP Trace CP SMS TlAck Received For SMS Ack Rsp
    printformat , 1, 1, CP SMS TlAck Received For SMS Ack, N=%d, <systime>  CP - errorClass=%d, causeCode=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    errorClass, uint32
    causeCode, uint32
End

Begin Message, CP Trace CP SMS Successful BS SMS Ack Rsp
    printformat , 1, 1, CP SMS Successful BS SMS Ack, N=%d, <systime>  CP - seqNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    seqNum, uint32
End

Begin Message, CP Trace CP PE_AHO_FIND_CANDIDATES_TRACE_ID Rsp
    printformat , 1,  1, CP PE_AHO_FIND_CANDIDATES_TRACE_ID, N=%d, <systime>  CP - PE_AHO_FIND_CANDIDATES_TRACE_ID Pilot Index = %d, Num. Pilots = %d, PN Phase = %d, Strength = %d, Min.Threshold = %d, Current Strongest = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Pilot Index, uint32
    Num. Pilots, uint32
    PN Phase, uint32
    Strength, uint32
    Min.Threshold, uint32
    Current Strongest, uint32
End

Begin Message, CP Trace CP PE_AHO_CHECK_TRACE_ID Rsp
    printformat , 1,  1, CP PE_AHO_CHECK_TRACE_ID, N=%d, <systime>  CP - PE_AHO_CHECK_TRACE_ID ThrMinDelayed = %d, MinActDelayed = %d, ThrSlopeDelayed = %d,  Neighbor Strength = %d,  Active Strength = %d, offset = %d, (Neighbor Strength + _ThrMinDelayed + offset) = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ThrMinDelayed, uint32
    MinActDelayed, uint32
    ThrSlopeDelayed, uint32
    Neighbor Strength, uint32
    Active Strength, uint32
    Offset, uint32
    (Neighbor Strength + ThrMinDelayed + offset), uint32
End

Begin Message, CP Trace CP PE_AHO_MONITOR_TRACE_ID Rsp
    printformat , 1,  1, CP PE_AHO_MONITOR_TRACE_ID, N=%d, <systime>  CP - PE_AHO_MONITOR_TRACE_ID activeStrength(Q16) = %d, activeStrength(Db) = %d, Min.Threshold = %d,  Neighbor Strength = %d,  Neighbor Found = %d, Neighbor PN = %d, reserved_1 = %d, reserved_3 = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    activeStrength(Q16), uint32
    activeStrength(dB), uint32
    Min.Threshold, uint32
    Neighbor Strength, uint32
    Neighbor Found, uint32
    Neighbor PN, uint32
    reserved_1, uint32
    reserved_2, uint32
End

Begin Message, CP Trace CP PE_AHO_SORT_NEIGHBOR_TRACE_ID Rsp
    printformat , 1,  1, CP PE_AHO_SORT_NEIGHBOR_TRACE_ID, N=%d, <systime>  CP - PE_AHO_SORT_NEIGHBOR_TRACE_ID pnPhase = %d, strength = %d, tAdd = %d,  accessHoAllowed = %d,  index = %d, count = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    pnPhase, uint32
    strength, uint32
    tAdd, uint32
    accessHoAllowed, uint32
    index, uint32
    count, uint32
End

Begin Message, CP Trace CP PE_PEND_EVENT_IN_IDLE Rsp
    printformat , 1, 1, CP PE_PEND_EVENT_IN_IDLE, N=%d, <systime>  CP - PE Callback Event Pended from state=%s, IdleState=%s, event=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    state, uint16, base=enum:Ps CP State
    IdleState, uint16, base=enum:PS Idle Substate
    event, uint32, base=enum:CP Request Type
End

Begin Message, CP Trace CP PE_MESSAGE_WAITING_TRACE_ID Rsp
    printformat , 1, 1, CP PE_MESSAGE_WAITING_TRACE_ID, N=%d, <systime>  CP - PE Message Waiting Record Received MsgCount=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgCount, uint32
End

Begin Message, CP Trace CP PE_SIGNAL_INFO_RECORD_TRACE_ID Rsp
    printformat , 1, 1, CP PE_SIGNAL_INFO_RECORD_TRACE_ID, N=%d, <systime>  CP - PE Signal Record Received SignalType=%d, AlertPitch=%d, Signal=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SignalType, uint32
    AlertPitch, uint32
    Signal, uint32
End

Begin Message, CP Trace CP PE_SET_CURRENT_BAND_TRACE_ID Rsp
    printformat , 1, 1, CP PE_SET_CURRENT_BAND_TRACE_ID Rsp , N=%d, <systime>  CP - PE Set Band Class BandClass =%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    BandClass, uint32
End

Begin Message, CP Trace CP PE_ACCESS_STATE_ENTRY_TRACE_ID Rsp
    printformat , 1, 1, CP PE_ACCESS_STATE_ENTRY_TRACE_ID, N=%d, <systime>  CP - PE Access State Entry CurrentState=%s, Event=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurrentState, uint32, base=enum:Ps CP State
    Event, uint32, base=enum:CP Request Type
End

Begin Message, CP Trace CP PE_ACCESS_STATE_EXIT_TRACE_ID Rsp
    printformat , 1, 1, CP PE_ACCESS_STATE_EXIT_TRACE_ID, N=%d, <systime>  CP - PE Access State Exit NextState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NextState, uint32, base=enum:Ps CP State
End

Begin Message, CP Trace CP PE_IDLE_STATE_ENTRY_TRACE_ID Rsp
    printformat , 1, 1, CP PE_IDLE_STATE_ENTRY_TRACE_ID, N=%d, <systime>  CP - PE Idle State Entry CurrentCDMAState=%s, CurrentIdleState=%s, L1Asleep=%s, Event=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurrentCDMAState, uint32, base=enum:Ps CP State
    CurrentIdleState, uint16, base=enum:PS Idle Substate
    L1Asleep, uint16, base=enum:No/Yes
    Event, uint32, base=enum:CP Request Type
End

Begin Message, CP Trace CP PE_IDLE_STATE_EXIT_TRACE_ID Rsp
    printformat , 1, 1, CP PE_IDLE_STATE_EXIT_TRACE_ID, N=%d, <systime>  CP - PE Idle State Exit NextCDMAState=%s, NextIdleState=%s, L1Asleep=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NextCDMAState, uint32, base=enum:Ps CP State
    NextIdleState, uint16, base=enum:PS Idle Substate
    L1Asleep, uint16, base=enum:No/Yes
End

Begin Message, CP Trace CP PE_IDLE_SR_IN_WAKEUP_TRACE_ID Rsp
    printformat , 1, 1, CP PE_IDLE_SR_IN_WAKEUP_TRACE_ID Rsp , N=%d, <systime>  CP - Silent Retry upon wake indicate in idle state
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP PE_LAYER2_GPM_WITH_CRCFAIL_TRACE_ID Rsp
    printformat , 1,  1, CP PE_LAYER2_GPM_WITH_CRCFAIL_TRACE_ID, N=%d, <systime>  CP - PE Layer2 GPM with page match processed even though 30bit check CRC failed, so=%d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    so, uint32
End

Begin Message, CP Trace CP PE_LAYER2_GPM_WITH_SCIFAIL_TRACE_ID Rsp
    printformat , 1,  1, CP PE_LAYER2_GPM_WITH_SCIFAIL_TRACE_ID, N=%d, <systime>  CP - PE Layer2 GPM with page match processed even though SCI detected in middle of Msg, so=%d.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    so, uint32
End

Begin Message, CP Trace CP Idle Ordered Wake Time Rsp
    printformat , PSW, 1, CP Idle Ordered Wake Time, N=%d, <systime>  CP - wbiosSleep() FROM: %x, TO: %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Current Time, uint32, base=16
    Wake Time, uint32, base=16
End

Begin Message, CP Trace CP PE TxM Timer Expired Rsp
    printformat , 1, 1, CP PE TxM Timer Expired, N=%d, <systime>  CP - T%dm timer expired, duration=%d (ms)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TxM, uint32, base=10
    Duration, uint32, base=10
End

Begin Message, CP Trace CP PSW Set Orig Fail Reason Rsp
    printformat , 1, 1, CP PSW Set Orig Fail Reason, N=%d, <systime>  CP - Set Orig Failed Reason = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Reason, uint32, base=enum:Call Processing Event
End

Begin Message, CP Trace CP PE Registration Throttling Rsp
    printformat , 1, 1, CP PE Registration Throttling, N=%d, <systime>  CP - PE Registration Throttling, Event=%s, Phase=%d, Attempts=%d, Time since 1st failure=%d (frames), Phase Max Attempts=%d, Phase Delay=%d (ms), Num Phases=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:INIT/REG_FAIL/TIMEOUT
    Phase, uint32, base=10
    Failed Attempts, uint32, base=10
    Time since 1st failure, uint32, base=10
    Phase Max Attempts, uint32, base=10
    Phase Delay, uint32, base=10
    Num Phases, uint32, base=10
End

Begin Message, CP Trace CP PE Slotted Veto Rsp
    printformat , 1, 1, CP PE Slotted Veto, N=%d, <systime>  CP - PE Slotted Veto, flag=%s, veto=%s, VetoBitMask=0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    flag, uint32, base=enum:PSW Slotted Veto Flag
    veto, uint32, base=enum:False/True
    VetoBitMask, uint32
End

Begin Message, CP Trace CP PS CSFB Trace Rsp
    printformat , 1, 1, CP PS CSFB Trace, N=%d, <systime>  CP - CSFB Trace: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CSFB Trace, uint32, base=enum:CSFB Trace Type Enum
    Trace, union,  enum=CSFB Trace
End

Begin Message, CP PS CSFB Trace CSFB_EVENT_RECEIVED_TRACE Rsp
    Current State, uint32, base=enum:CSFB State Enum
    Event, uint32, base=enum:CSFB Event Enum
End

Begin Message, CP PS CSFB Trace CSFB_UNEXPECTED_EVENT_TRACE Rsp
    Current State, uint32, base=enum:CSFB State Enum
    Event, uint32, base=enum:CSFB Event Enum
End

Begin Message, CP PS CSFB Trace CSFB_ENG_QUEUE_EXCEEDED_TRACE Rsp
    Index, uint32, base=10
End

Begin Message, CP PS CSFB Trace CSFB_SET_STATE_TRACE Rsp
    Previous State, uint32, base=enum:CSFB State Enum
    New State, uint32, base=enum:CSFB State Enum
End

Begin Message, CP PS CSFB Trace CSFB_MSG_NOT_SUPPORTED_TRACE Rsp
    MsgId, uint32, base=10
End

Begin Message, CP PS CSFB Trace CSFB_MSG_RVCD_IN_WRONG_STATE_TRACE Rsp
    CSFB State, uint32, base=enum:CSFB State Enum
    PE State, uint32, base=enum:CPStateType
End

Begin Message, CP PS CSFB Trace CSFB_GCSNA_DL_ERROR_TRACE Rsp
    CSFB State, uint32, base=enum:CSFB State Enum
End

Begin Message, CP Trace CP PS GCSNA Trace Rsp
    printformat , 1, 1, CP PS GCSNA Trace, N=%d, <systime>  CP - GCSNA Trace: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    GCSNA Trace, uint32, base=enum:GCSNA Trace Type Enum
    Trace, union,  enum=GCSNA Trace
End

Begin Message, CP PS GCSNA Trace GCSNA_DL_MSG_TOO_BIG_TRACE Rsp
    Length, uint32, base=10
End

Begin Message, CP PS GCSNA Trace GCSNA_INVALID_SERVICE_REJ_TYPE_TRACE Rsp
    RejectReason, uint32, base=enum:GCSNA Reject Reason Enum
End

Begin Message, CP PS GCSNA Trace GCSNA_UNEXPECTED_L2ACK_TRACE Rsp
    AckSeq, uint32, base=10
End

Begin Message, CP PS GCSNA Trace GCSNA_DL_SERVICE_REJECT_TRACE Rsp
    Result, uint32, base=enum:GCSNA Reject Reason Enum
End

Begin Message, CP PS GCSNA Trace GCSNA_PARSE_SIZE_MISMATCH_TRACE Rsp
    Index, uint32, base=10
    Length, uint32, base=10
End

Begin Message, CP PS GCSNA Trace GCSNA_C2KP_SIZE_MISMATCH_TRACE Rsp
    C2KP Index, uint32, base=10
    Index, uint32, base=10
    Length, uint32, base=10
End

Begin Message, CP PS GCSNA Trace GCSNA_UL_SEND_FAIL_TRACE Rsp
    MsgType, uint32, base=10
End

Begin Message, CP PS GCSNA Trace GCSNA_CS_INSTANCE_ERROR_TRACE Rsp
    Index, uint32, base=10
End

Begin Message, CP PS GCSNA Trace GCSNA_DL_MSG_RESULT_TRACE Rsp
    Result, uint32, base=enum:GCSNA Reject Reason Enum
End

Begin Message, CP Trace CP PE_NULLGPM_TRACE_ID Rsp
    printformat , 1, 1, CP - NullGpm Trace, N=%d, <systime>  typeString= %s, value1=%x, value2=%x, value3=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    typeStr, uint32, base=enum:NullGPMTraceStrings
    value1, uint32
    value2, uint32
    value3, uint32
End

Begin Message, CP Trace CP PE_PCHSTAT_TRACE_ID Rsp
    printformat , 1, 1, CP - PchStat Trace, N=%d, <systime>  typeString= %s, value1=%x, vlaue2=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    typeStr, uint32, base=enum:PchStatTraceStrings
    value1, uint32
    value2, uint32
End

Begin Message, CP Trace CP PE_TOTAL_PCHSTAT_NULLGPM_TRACE_ID Rsp
    printformat , 1, 1, CP - PchStat Trace, N=%d, <systime>  TotalWakeNum= %d, MissPchNum=%d, ngH1Dsp=%d, ngH1Cp=%d, ngH2Dsp=%d, ngH2Cp=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    totalWake, uint32, base=10
    missGpm, uint32, base=10
    nG-h1-dsp, uint32, base=10
    nG-h1-cp, uint32, base=10
    nG-h2-dsp, uint32, base=10
    nG-h2-cp, uint32, base=10
End

Begin Message, CP Trace CP VDC PSW Call Status Transition Rsp
    printformat , 1, 1, CP VDC PSW Call Status Transition, N=%d, <systime>  CP - PSW Report current status %s, next status %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Rpt Status1, uint32, base=enum:PswReportStatus
    Rpt Status2, uint32, base=enum:PswReportStatus
End

Begin Message, CP Trace CP VDC PSW Call Mpty Status Transition Rsp
    printformat , 1, 1, CP VDC PSW Call Mpty Status Transition, N=%d, <systime>  CP - PSW Mparty current status %s, next status %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Mtpy Status1, uint32, base=enum:PswMptyStatus
    Mtpy Status2, uint32, base=enum:PswMptyStatus
End

Begin Message, CP Trace CP VDC PSW Call Setup Req Rsp
    printformat , 1, 1, CP VDC PSW Call Setup Req, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, active type=%s, active index=%d, prev active type=%s, prev index=%d, mo call num=%d, mt call num=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
    Prev Active Type, uint32, base=enum:PswCallType
    Prev Active Index, uint32
    MO Call Num, uint32
    MT Call Num, uint32
End

Begin Message, CP Trace CP VDC PSW Call Setup Cnf Rsp
    printformat , 1, 1, CP VDC PSW Call Setup Cnf, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, mo call num=%d, error cause=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    MO Call Num, uint32
    Error Cause, uint32, base=enum:PswCallCsErrorCause
End

Begin Message, CP Trace CP VDC PSW Call Dialing Ind Rsp
    printformat , 1, 1, CP VDC PSW Call Dialing Ind, N=%d, <systime>  CP - call type=%s, call id=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Call Id, uint32
End

Begin Message, CP Trace CP VDC PSW Call Alerting Ind Rsp
    printformat , 1, 1, CP VDC PSW Call Alerting Ind, N=%d, <systime>  CP - call type=%s, call id=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Call Id, uint32
End

Begin Message, CP Trace CP VDC PSW Call Connected Ind Rsp
    printformat , 1, 1, CP VDC PSW Call Connected Ind, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, establish cause=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Establish Cause, uint32
End

Begin Message, CP Trace CP VDC PSW Call Service Ind Rsp
    printformat , 1, 1, CP VDC PSW Call Service Ind, N=%d, <systime>  CP - call type=%s, mt call num=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    MT Call Num, uint32
End

Begin Message, CP Trace CP VDC PSW Call Service Rsp Rsp
    printformat , 1, 1, CP VDC PSW Call Service Rsp, N=%d, <systime>  CP - call type=%s, mt call num=%d, call id=%d, response=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    MT Call Num, uint32
    Call Id, uint32
    Response, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP VDC PSW Call Incoming Ind Rsp
    printformat , 1, 1, CP VDC PSW Call Incoming Ind, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, active type=%s, active index=%d, prev active type=%s, prev index=%d, mo call num=%d, mt call num=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
    Prev Active Type, uint32, base=enum:PswCallType
    Prev Active Index, uint32
    MO Call Num, uint32
    MT Call Num, uint32
End

Begin Message, CP Trace CP VDC PSW Call Accept Req Rsp
    printformat , 1, 1, CP VDC PSW Call Accept Req, N=%d, <systime>  CP - call type=%s, mo call num=%d, call id=%d, response=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Accept, uint32, base=enum:FALSE/TRUE
    Error Cause, uint32, base=enum:PswCallCsErrorCause
End

Begin Message, CP Trace CP VDC PSW Call Accept Cnf Rsp
    printformat , 1, 1, CP VDC PSW Call Accept Cnf, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, mt call num=%d, error cause=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    MT Call Num, uint32
    Error Cause, uint32, base=enum:PswCallCsErrorCause
End

Begin Message, CP Trace CP VDC PSW Call Status Ind Rsp
    printformat , 1, 1, CP VDC PSW Call Status Ind, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, call cs status=%s, error cause=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Call CS Status, uint32, base=enum:PswCallCsStatus
    Error Cause, uint32, base=enum:PswCallCsErrorCause
End

Begin Message, CP Trace CP VDC PSW Call Progress Ind Rsp
    printformat , 1, 1, CP VDC PSW Call Progress Ind, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, progress Info=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Progress Info, uint32, base=enum:PswCallCsProgressInfo
End

Begin Message, CP Trace CP VDC PSW Call Release Req Rsp
    printformat , 1, 1, CP VDC PSW Call Release Req, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, rel group=%s, active type=%s, active index=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Rel Group, uint32, base=enum:PswCallRelGroup
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
End

Begin Message, CP Trace CP VDC PSW Call Release Cnf Rsp
    printformat , 1, 1, CP VDC PSW Call Release Cnf, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, rel group=%s, error cause=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Rel Group, uint32, base=enum:PswCallRelGroup
    Error Cause, uint32, base=enum:PswCallCsErrorCause
End

Begin Message, CP Trace CP VDC PSW Call Disconnecting Ind Rsp
    printformat , 1, 1, CP VDC PSW Call Disconnecting Ind, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, error cause=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Error Cause, uint32, base=enum:PswCallCsErrorCause
End

Begin Message, CP Trace CP VDC PSW Call Disconnected Ind Rsp
    printformat , 1, 1, CP VDC PSW Call Disconnected Ind, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, active type=%s, active index=%d, prev active type=%s, prev index=%d, mo call num=%d, mt call num=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
    Prev Active Type, uint32, base=enum:PswCallType
    Prev Active Index, uint32
    MO Call Num, uint32
    MT Call Num, uint32
End

Begin Message, CP Trace CP VDC PSW Call Hold Req Rsp
    printformat , 1, 1, CP VDC PSW Call Hold Req, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, call status=%s,  active type=%s, active index=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Call Status, uint32, base=enum:PswCallStatus
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
End

Begin Message, CP Trace CP VDC PSW Call Hold Cnf Rsp
    printformat , 1, 1, CP VDC PSW Call Hold Cnf, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, call status=%s,  active type=%s, active index=%d, error cause=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Call Status, uint32, base=enum:PswCallStatus
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
    Error Cause, uint32, base=enum:PswCallCsErrorCause
End

Begin Message, CP Trace CP VDC PSW Call Retrieve Req Rsp
    printformat , 1, 1, CP VDC PSW Call Retrieve Req, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, call status=%s,  active type=%s, active index=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Call Status, uint32, base=enum:PswCallStatus
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
End

Begin Message, CP Trace CP VDC PSW Call Retrieve Cnf Rsp
    printformat , 1, 1, CP VDC PSW Call Retrieve Cnf, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, call status=%s,  active type=%s, active index=%d, error cause=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Call Status, uint32, base=enum:PswCallStatus
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
    Error Cause, uint32, base=enum:PswCallCsErrorCause
End

Begin Message, CP Trace CP VDC PSW Call Swap Req Rsp
    printformat , 1, 1, CP VDC PSW Call Swap Req, N=%d, <systime>  CP - active call type=%s, active index=%d, active call id=%d, active call status=%s, inactive call type=%s, inactive index=%d, inactive call id=%d, inactive call status=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
    Active Call Id, uint32
    Active Call Status, uint32, base=enum:PswCallStatus
    Inactive Type, uint32, base=enum:PswCallType
    Inactive Index, uint32
    Inactive Call Id, uint32
    Inactive Call Status, uint32, base=enum:PswCallStatus
End

Begin Message, CP Trace CP VDC PSW Call Swap Cnf Rsp
    printformat , 1, 1, CP VDC PSW Call Swap Cnf, N=%d, <systime>  CP - active call type=%s, active index=%d, active call id=%d, active call status=%s, inactive call type=%s, inactive index=%d, inactive call id=%d, inactive call status=%s, error cause=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
    Active Call Id, uint32
    Active Call Status, uint32, base=enum:PswCallStatus
    Inactive Type, uint32, base=enum:PswCallType
    Inactive Index, uint32
    Inactive Call Id, uint32
    Inactive Call Status, uint32, base=enum:PswCallStatus
    Error Cause, uint32, base=enum:PswCallCsErrorCause
End

Begin Message, CP Trace CP VDC PSW Call Join Req Rsp
    printformat , 1, 1, CP VDC PSW Call Join Req, N=%d, <systime>  CP - active call type=%s, active index=%d, active call id=%d, active call status=%s, inactive call type=%s, inactive index=%d, inactive call id=%d, inactive call status=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
    Active Call Id, uint32
    Active Call Status, uint32, base=enum:PswCallStatus
    Inactive Type, uint32, base=enum:PswCallType
    Inactive Index, uint32
    Inactive Call Id, uint32
    Inactive Call Status, uint32, base=enum:PswCallStatus
End

Begin Message, CP Trace CP VDC PSW Call Join Cnf Rsp
    printformat , 1, 1, CP VDC PSW Call Join Cnf, N=%d, <systime>  CP - active call type=%s, active index=%d, active call id=%d, active call status=%s, inactive call type=%s, inactive index=%d, inactive call id=%d, inactive call status=%s, error cause=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
    Active Call Id, uint32
    Active Call Status, uint32, base=enum:PswCallStatus
    Inactive Type, uint32, base=enum:PswCallType
    Inactive Index, uint32
    Inactive Call Id, uint32
    Inactive Call Status, uint32, base=enum:PswCallStatus
    Error Cause, uint32, base=enum:PswCallCsErrorCause
End

Begin Message, CP Trace CP VDC PSW Call Start DTMF Req Rsp
    printformat , 1, 1, CP VDC PSW Call Start DTMF Req, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, call status=%s,  active type=%s, active index=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Call Status, uint32, base=enum:PswCallStatus
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
End

Begin Message, CP Trace CP VDC PSW Call Start DTMF Cnf Rsp
    printformat , 1, 1, CP VDC PSW Call Start DTMF Cnf, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, call status=%s,  active type=%s, active index=%d, error cause=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Call Status, uint32, base=enum:PswCallStatus
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
    Error Cause, uint32, base=enum:PswCallCsErrorCause
End

Begin Message, CP Trace CP VDC PSW Call Stop DTMF Req Rsp
    printformat , 1, 1, CP VDC PSW Call Stop DTMF Req, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, call status=%s,  active type=%s, active index=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Call Status, uint32, base=enum:PswCallStatus
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
End

Begin Message, CP Trace CP VDC PSW Call Stop DTMF Cnf Rsp
    printformat , 1, 1, CP VDC PSW Call Stop DTMF Cnf, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, call status=%s,  active type=%s, active index=%d, error cause=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Call Status, uint32, base=enum:PswCallStatus
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
    Error Cause, uint32, base=enum:PswCallCsErrorCause
End

Begin Message, CP Trace CP VDC PSW Call Burst DTMF Req Rsp
    printformat , 1, 1, CP VDC PSW Call Burst DTMF Req, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, call status=%s,  active type=%s, active index=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Call Status, uint32, base=enum:PswCallStatus
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
End

Begin Message, CP Trace CP VDC PSW Call Burst DTMF Cnf Rsp
    printformat , 1, 1, CP VDC PSW Call Burst DTMF Cnf, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, call status=%s,  active type=%s, active index=%d, error cause=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Call Status, uint32, base=enum:PswCallStatus
    Active Type, uint32, base=enum:PswCallType
    Active Index, uint32
    Error Cause, uint32, base=enum:PswCallCsErrorCause
End

Begin Message, CP Trace CP VDC PSW Call Notification Ind Rsp
    printformat , 1, 1, CP VDC PSW Call Notification Ind, N=%d, <systime>  CP - call type=%s, index=%d, call id=%d, Notification Type=%s, Record Bit Mask=%d, Display Size=%d, Call Waiting Ind=%s, Message Count=%d, Clir Cause=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Index, uint32
    Call Id, uint32
    Notification Type, uint32, base=enum:PswCallNotificationType
    Record Bit Mask, uint32
    Display Size, uint32
    Call Waiting Ind, uint32, base=enum:FALSE/TRUE
    Message Count, uint32
    Clir Cause, uint32
End

Begin Message, CP Trace CP VDC PSW Call Setup Req Param Rsp
    printformat , 1, 1, CP VDC PSW Call Setup Req Param, N=%d, <systime>  CP - call id=%d, causeTypePlanDigNum1=%d, num2-5=%d, num6-9=%d, num10-13=%d, num14-17=%d, subNum1-4=%d, subNum5-8=%d, redialLineEccCatCtm=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Id, uint32
    CauseTypePlanDigNum1, uint32
    Num2-5, uint32
    Num6-9, uint32
    Num10-13, uint32
    Num14-17, uint32
    SubNum1-4, uint32
    SubNum5-8, uint32
    RedialLineEccCatCtm, uint32
End

Begin Message, CP Trace CP VDC PSW Call Setup Req Error Rsp
    printformat , 1, 1, CP VDC PSW Call Setup Req Error, N=%d, <systime>  CP - call type=%s, error cause=%s, call id=%d, active call id=%d, active type=%s, report status=%s, active call status=%s, mo call num=%d, mt call num=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Call Type, uint32, base=enum:PswCallType
    Error Cause, uint32, base=enum:PswCallCsErrorCause
    Call Id, uint32
    Active Call Id, uint32
    Active Type, uint32, base=enum:PswCallType
    Report Status, uint32, base=enum:PswReportStatus
    Active Call Status, uint32, base=enum:PswCallStatus
    MO Call Num, uint32
    MT Call Num, uint32
End

Begin Message, CP Trace CP PE_FCCCH_FRAME_TRACE_ID Rsp
    printformat , 1, 1, CP PE_FCCCH_FRAME_TRACE_ID, N=%d, <systime>  CP - L2 FCCCH Frame:size=%d, firstByte=%x, secondByte=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    size, uint32
    firstByte, uint8
    secondByte, uint8
End

Begin Message, CP Trace CP PE_FCCCH_SM_TRACE_ID Rsp
    printformat , 1, 1, CP PE_FCCCH_SM_TRACE_ID, N=%d, <systime>  CP - L2 FCCCH State machine: State=%s,UnsyncCapsul=%d, fragmentInProc=%d,UnsyncStartBit=%d,MsgCopiedBits=%d,MsgLen=%d,FragSkip=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:L2 Proc State
    UnsyncCapsul, uint32
    fragmentInProc, uint32
    UnsyncStartBit, uint32
    MsgCopiedBits, uint32
    MsgLen, uint32
    FragSkip, uint32
End

Begin Message, CP Trace CP PE_FCCCH_PROC_TRACE_ID Rsp
    printformat , 1, 1, CP PE_FCCCH_PROC_TRACE_ID, N=%d, <systime>  CP - L2 FCCCH Processing: CurrentUnsyncStatus=%d, SI=%x, MsgLen=%d,MsgCopiedBits=%d,UnsyncStartBit=%d,ExtMsgLenBits=%d,ProcStartingBit=%d,NextUnsyncStatus=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurrentUnsyncStatus, uint32
    SI, uint32
    MsgLen, uint32
    MsgCopiedBits, uint32
    UnsyncStartBit, uint32
    ExtMsgLenBits, uint32
    ProcStartingBit, uint32
    NextUnsyncStatus, uint32
End

Begin Message, CP Trace CP PE_ENG_LAYER2_FCCCH_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP PE_ENG_LAYER2_FCCCH_MSG_TRACE_ID, N=%d, <systime>   CP - L2 Complete FCCCH Message: ackReceived=%d, length=%d, Msgtype=%d, sduOffset=%d, PD_value=%d,ChanType=%d,P_REV_IN_USEs=%d,MsgBitindex=%d,repeat=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ackReceived, uint32
    length, uint32
    Msgtype, uint32
    sduOffset, uint32
    PD_value, uint32
    ChanType, uint32
    P_REV_IN_USEs, uint32
    MsgBitindex, uint32
    repeat, uint32
End

Begin Message, CP Trace CP PE_BCCH_FRAME_TRACE_ID Rsp
    printformat , 1, 1, CP PE_BCCH_FRAME_TRACE_ID, N=%d, <systime>  CP - L2 BCCH Frame:size=%d,1stByte=%x, 2ndByte=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    size, uint32
    1stByte, uint8
    2ndByte, uint8
End

Begin Message, CP Trace CP PE_BCCH_SM_TRACE_ID Rsp
    printformat , 1, 1, CP PE_BCCH_SM_TRACE_ID, N=%d, <systime>  CP - L2 BCCH State machine: State=%s,UnsyncCapsul=%d, fragmentInProc=%d,UnsyncStartBit=%d,MsgCopiedBits=%d,MsgLen=%d,FragSkip=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:L2 Proc State
    UnsyncCapsul, uint32
    fragmentInProc, uint32
    UnsyncStartBit, uint32
    MsgCopiedBits, uint32
    MsgLen, uint32
    FragSkip, uint32
End

Begin Message, CP Trace CP PE_BCCH_PROC_TRACE_ID Rsp
    printformat , 1, 1, CP PE_BCCH_PROC_TRACE_ID, N=%d, <systime>  CP - L2 BCCH Processing: CurrentUnsyncStatus=%d, SI=%x, MsgLen=%d,MsgCopiedBits=%d,UnsyncStartBit=%d,ExtMsgLenBits=%d,ProcStartingBit=%d,NextUnsyncStatus=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurrentUnsyncStatus, uint32
    SI, uint32
    MsgLen, uint32
    MsgCopiedBits, uint32
    UnsyncStartBit, uint32
    ExtMsgLenBits, uint32
    ProcStartingBit, uint32
    NextUnsyncStatus, uint32
End

Begin Message, CP Trace CP PE_ENG_LAYER2_BCCH_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP PE_ENG_LAYER2_BCCH_MSG_TRACE_ID, N=%d, <systime>   CP - L2 Complete BCCH Message: ackReceived=%d, length=%d, Msgtype=%d, sduOffset=%d, PD_value=%d,ChanType=%d,P_REV_IN_USEs=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ackReceived, uint32
    length, uint32
    Msgtype, uint32
    sduOffset, uint32
    PD_value, uint32
    ChanType, uint32
    P_REV_IN_USEs, uint32
End

Begin Message, CP Trace CP_PSW_RADIO_CONFIG_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP_PSW_RADIO_CONFIG_MSG_TRACE_ID, N=%d, <systime>  RadioCfg_Msg: AcsInc=%x, revAckchGainAdjAcs1=%d, revAckchGainAdjAcs2plus=%d, Rc8RAckchPwrAcs1=%d, Rc8RAckchPwrAcs2plus=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AcsInc, uint32
    revAckchGainAdjAcs1, int32
    revAckchGainAdjAcs2plus, int32
    Rc8RAckchPwrAcs1, int32
    Rc8RAckchPwrAcs2plus, int32
End

Begin Message, CP Trace CP_PS_PDCH_LEVEL_1_TRACES________________ Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_LEVEL_1_TRACES________________, N=%d, <systime>  PS-PDCH: PS-PDCH-Level 1 Traces
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_ECAM_ADD_PILOTREC_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_ECAM_ADD_PILOTREC_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-ECAM: Error, Unsupported AddPilotRecType = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotRecType, uint32
End

Begin Message, CP Trace CP_PS_PDCH_ECAM_ENC_MSGINT_PLCM_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_ECAM_ENC_MSGINT_PLCM_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-ECAM: Error, EncMode=%d, MsgIntInc=%d, PlcmInc=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    EncryptMode, uint32
    MsgIntInfoIncl, uint32
    PlcmTypeIncl, uint32
End

Begin Message, CP Trace CP_PS_PDCH_ECAM_BANDCLASS_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_ECAM_BANDCLASS_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-ECAM: Error, Unsupported BandClass=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    BandClass, uint32
End

Begin Message, CP Trace CP_PS_PDCH_ECAM_GRANTMODE_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_ECAM_GRANTMODE_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-ECAM: Error, GrantMode=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    GrantMode, uint32
End

Begin Message, CP Trace CP_PS_PDCH_ECAM_MSPDCHSUPP_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_ECAM_MSPDCHSUPP_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-ECAM: Error, Attempting PDCH but MS_FPDCH_Support=%d!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsPDCHSupport, uint32
End

Begin Message, CP Trace CP_PS_PDCH_ECAM_PDCHRC_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_ECAM_PDCHRC_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-ECAM: Error, Invalid PDCH_RC=%d!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FPdchRc, uint32
End

Begin Message, CP Trace CP_PS_PDCH_ECAM_EXTCHIND_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_ECAM_EXTCHIND_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-ECAM: Error, Unsupported ExtChInd=%d! ChConfigSupMap=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ExtChInd, uint32
    PdchChConfigSuppMap, uint32
End

Begin Message, CP Trace CP_PS_PDCH_ECAM_FCH_DCCH_RC_SUPP_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_ECAM_FCH_DCCH_RC_SUPP_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-ECAM: Error, Unsupported FCH/DCCH RC or Cap! ForRC=%d, RevRC=%d, FCHsup=%d, DCCHsup=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FchDcchForRc, uint32
    FchDcchRevRc, uint32
    FchSupport, uint32
    DcchSupport, uint32
End

Begin Message, CP Trace CP_PS_PDCH_ECAM_BADSTATE_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_ECAM_BADSTATE_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-ECAM: Error, Invalid State to handle ECAM! State=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CPState, uint32, base=enum:CPStateType
End

Begin Message, CP Trace CP_PE_PDCH_N5M_GOOD_FRAMES_TIMEOUT_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PE_PDCH_N5M_GOOD_FRAMES_TIMEOUT_TRACE_ID, N=%d, <systime>  PS-PDCH-Timeout: N5m Good Frames not received in CP_TC_INIT!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PE_PDCH_IS2K_BSACK_TIMEOUT_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PE_PDCH_IS2K_BSACK_TIMEOUT_TRACE_ID, N=%d, <systime>  PS-PDCH-Timeout: IS2K BSAck not received in CP_TC_INIT!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_PEND_MSG_CHK_FAIL_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_PEND_MSG_CHK_FAIL_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error! Pending Msg Check Failed!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_LCM_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_LCM_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error in LCM !
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_ENCMODE_CHK_FAIL_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_ENCMODE_CHK_FAIL_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error in EncryptMode Chk!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_BANDCLASS_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_BANDCLASS_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error! Unsupported BandClass!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_FREQ_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_FREQ_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error! Unsupported Freq!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_SERVCFG_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_SERVCFG_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error in ServCfgRec!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_SERVCFG_NN_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_SERVCFG_NN_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error in ServCfgRec!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_PWRCTLSTEP_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_PWRCTLSTEP_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error in PwrCtlStep!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_CHIND_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_CHIND_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error! Unsupported ChInd!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_NUMPILOTS_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_NUMPILOTS_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error! NumPilots=%d exceeded!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NumPilots, uint32
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_ADDPILOTRECTYPE_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_ADDPILOTRECTYPE_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error! Unsupported AddPilotRecType=%d!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotRecType, uint32
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_3XINFO_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_3XINFO_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error! Unsupported Cap 3X Info!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_CCSHINFO_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_CCSHINFO_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error! Unsupported Cap CCSH Info!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_SYNCID_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_SYNCID_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error! Unsupported Cap SrId Info!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_CCINFO_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_CCINFO_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error! Unsupported Cap CC Info!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_ESNPLCM_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_ESNPLCM_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error! Unsupported Cap ESN based PLCM!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_UHDM_TTDROPRANGE_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_UHDM_TTDROPRANGE_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-UHDM: Error! Unsupported Cap TTDropRange!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_RATCHGM_PEND_MSG_CHK_FAIL_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_RATCHGM_PEND_MSG_CHK_FAIL_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-RATCHGM: Error! Pending Msg Chk Failed!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_RATCHGM_EOM_FAIL_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_RATCHGM_EOM_FAIL_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-RATCHGM: Error! EOM Chk Failed!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_ERM_PEND_MSG_CHK_FAIL_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_ERM_PEND_MSG_CHK_FAIL_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-ERM: Error! Pending Msg Chk Failed!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_ERM_CHM_UNSUPPORTED_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_ERM_CHM_UNSUPPORTED_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-ERM: Error! CHM unsupported!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_SCC_PDCHSUPP_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_SCC_PDCHSUPP_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-ERM: Error! F-PDCH not supported at MSCap!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_SCC_PDCHMUX_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_SCC_PDCHMUX_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-ERM: Error! F-PDCH Mux=%d not supported!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDCHMux, uint32
End

Begin Message, CP Trace CP_PS_PDCH_SCC_PDCHRC_ERR_TRACE_ID Rsp
    printformat , PS_PDCH, 1, CP_PS_PDCH_SCC_PDCHRC_ERR_TRACE_ID, N=%d, <systime>  PS-PDCH-ERM: Error! F-PDCH RC=%d not supported!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDCHRC, uint32
End

Begin Message, CP Trace CP_PS_PDCH_LEVEL_2_TRACES________________ Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_LEVEL_2_TRACES________________, N=%d, <systime>  PS-PDCH: PS-PDCH-Level 2 Traces
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_IS2K_ESPM_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_IS2K_ESPM_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: MS<-BS IS2K_ESPM_MSG (FPdchSupp=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ForPdchSupp, uint32
End

Begin Message, CP Trace CP_PS_PDCH_IS2K_MCRRPM_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_IS2K_MCRRPM_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: MS<-BS IS2K_MCRRPM_MSG (FPdchSupp=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ForPdchSupp, uint32
End

Begin Message, CP Trace CP_PS_PDCH_IS2K_ORIG_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_IS2K_ORIG_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: MS<-BS IS2K_ORIG_MSG (ExtChInd=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ExtChInd, uint32
End

Begin Message, CP Trace CP_PS_PDCH_IS2K_PAGERSP_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_IS2K_PAGERSP_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: MS<-BS IS2K_PAGERSP_MSG (ExtChInd=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ExtChInd, uint32
End

Begin Message, CP Trace CP_PS_PDCH_IS2K_ECAM_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_IS2K_ECAM_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: MS<-BS IS2K_ECAM_MSG (ExtChInd=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ExtChInd, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_PDCH_PARAMS_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_L1D_PDCH_PARAMS_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS->L1D L1D_PDCH_PARAMS_MSG (ChInd=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ExtChInd, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_TRAFFIC_CHAN_START_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_L1D_TRAFFIC_CHAN_START_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS->L1D L1D_TRAFFIC_CHAN_START_MSG (ChInd=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChInd, uint32
End

Begin Message, CP Trace CP_PS_PDCH_LMD_TRAFFIC_CHAN_START_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_LMD_TRAFFIC_CHAN_START_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS->LMD LMD_TRAFFIC_CHAN_START_MSG (ChInd=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChInd, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_REVERSE_POWER_SET_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_L1D_REVERSE_POWER_SET_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS->L1D L1D_REVERSE_POWER_SET_MSG
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_IS2K_N5M_GOOD_FRAMES_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_IS2K_N5M_GOOD_FRAMES_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: MS<-BS IS2K_N5M_GOOD_FRAMES
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_L1D_RESOURCE_REQ_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_L1D_RESOURCE_REQ_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS->L1D L1D_RESOURCE_REQ_MSG (Cont=%d, GateRate=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ContinuousPilot, uint32
    PilotGatingRate, uint32
End

Begin Message, CP Trace CP_PS_PDCH_IS2K_BSACK_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_IS2K_BSACK_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: MS<-BS IS2K_BSACK (%s)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CPState, uint32, base=enum:CPStateType
End

Begin Message, CP Trace CP_PS_PDCH_IS2K_MSACK_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_IS2K_MSACK_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: MS->BS IS2K_MSACK
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_IS2K_SERVICE_CONNECT_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_IS2K_SERVICE_CONNECT_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: MS<-BS IS2K_SERVICE_CONNECT (%s)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CPState, uint32, base=enum:CPStateType
End

Begin Message, CP Trace CP_PS_PDCH_L1D_SERVICE_CONFIG_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_L1D_SERVICE_CONFIG_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS->L1D L1D_SERVICE_CONFIG_MSG
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_LMD_SERVICE_CONFIG_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_LMD_SERVICE_CONFIG_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS->LMD LMD_SERVICE_CONFIG_MSG
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_L1D_SERVICE_CONFIG_NN_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_L1D_SERVICE_CONFIG_NN_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS->L1D L1D_SERVICE_CONFIG_NN_MSG
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_LMD_SERVICE_CONFIG_NN_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_LMD_SERVICE_CONFIG_NN_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS->LMD LMD_SERVICE_CONFIG_NN_MSG (NumLpm=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NumLpmEntries, uint32
End

Begin Message, CP Trace CP_PS_PDCH_PSW_TC_CONFIG_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_PSW_TC_CONFIG_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS<-LMD PSW_TC_CONFIG_MSG
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_IS2K_SERVCONNCPLT_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_IS2K_SERVCONNCPLT_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: MS->BS IS2K_SERVCONNECT_COMPLETE
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_IS2K_UHDM_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_IS2K_UHDM_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: MS<-BS IS2K_UHDM (chInd=%d, extChInd=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChInd, uint32
    ExtChInd, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_SOFT_HANDOFF_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_L1D_SOFT_HANDOFF_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS->L1D L1D_SOFT_HANDOFF_MSG (chInd=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChInd, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_HARD_HANDOFF_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_L1D_HARD_HANDOFF_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS->L1D L1D_HARD_HANDOFF_MSG (chInd=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChInd, uint32
End

Begin Message, CP Trace CP_PS_PDCH_LMD_RESOURCE_UPDATE_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_LMD_RESOURCE_UPDATE_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS->LMD LMD_RESOURCE_UPDATE_MSG (chInd=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChInd, uint32
End

Begin Message, CP Trace CP_PS_PDCH_PSW_HO_COMPLETE_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_PSW_HO_COMPLETE_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS<-L1D PSW_HO_COMPLETE_MSG
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_IS2K_HOCOMPLETE_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_IS2K_HOCOMPLETE_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: MS->BS IS2K_HOCOMPLETE_MSG
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_IS2K_RATCHGM_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_IS2K_RATCHGM_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: MS->BS IS2K_RATCHGM_MSG
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_L1D_ACKCQICH_RATE_CHANGE_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_L1D_ACKCQICH_RATE_CHANGE_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS->L1D L1D_ACKCQICH_RATE_CHANGE_MSG
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_L1D_RSR_DEALLOC_MSG_FLOW_TRACE_ID Rsp
    printformat , PS_PDCH, 2, CP_PS_PDCH_L1D_RSR_DEALLOC_MSG_FLOW_TRACE_ID, N=%d, <systime>  PS-PDCH: PS->L1D L1D_RSR_DEALLOC_MSG (chans=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channels, uint32
End

Begin Message, CP Trace CP_PS_PDCH_LEVEL_3_TRACES________________ Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_LEVEL_3_TRACES________________, N=%d, <systime>  PS-PDCH: PS-PDCH-Level 3 Traces
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_PDCH_L1D_PDCH_PARAMS_A_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_PDCH_PARAMS_A_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_PDCH_Msg: HO=%d, AckDly=%d, NArq=%d, ChInd=%d, FullCI=%d, Cqioff=%d, CqiR=%d, AckR=%d, GpInc=%d, NumS=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    HandoffType, uint32
    AckDelay, uint32
    NumArqChan, uint32
    ChInd, uint32
    FullCIFeedbackInd, uint32
    RevCqichFrameOffset, uint32
    RevCqichReps, uint32
    RevAckchReps, uint32
    PdchGroupIndIncl, uint32
    NumPdchSet, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_PDCH_PARAMS_B_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_PDCH_PARAMS_B_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_PDCH_Msg: SfF=%d, SfrF=%d, SfFCh=%d, SfrFCh=%d, SfS=%d, SfrS=%d, SfSCh=%d, SfrSCh=%d, SfDly=%d, SfrDly=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NumSoftSwitchingFrames, uint32
    NumSofterSwitchingFrames, uint32
    NumSoftSwitchingFramesChm, uint32
    NumSofterSwitchingFramesChm, uint32
    NumSoftSwitchingSlots, uint32
    NumSofterSwitchingSlots, uint32
    NumSoftSwitchingSlotsChm, uint32
    NumSofterSwitchingSlotsChm, uint32
    PdchSoftSwitchingDelay, uint32
    PdchSofterSwitchingDelay, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_PDCH_PARAMS_C_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_PDCH_PARAMS_C_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_PDCH_Msg: PN=%d, Wsh=%d, PdW0=%d, PdW1=%d, Mac=%d, CqiCvr=%d, CpcchW=%d, Cpcsch=%d, PGpInd=%d, PwrInd=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotPn, uint32
    WalshTableId, uint32
    ForPdcchWalsh0, uint32
    ForPdcchWalsh1, uint32
    MacId, uint32
    RevCqichCover, uint32
    ForCpcchWalsh, uint32
    ForCpcsch, uint32
    PdchGroupInd, uint32
    PwrCombInd, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_TRAFFIC_CHAN_START_A_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_TRAFFIC_CHAN_START_A_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_TrfChanStart_Msg: ChInd=%d, NAct=%d, BandC=%d, Freq=%d, FrOff=%d, fRC=%d, rRC=%d, PwrStep=%d, FpcM=%d, RGateM=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChInd, uint32
    NumActSets, uint32
    BandClass, uint32
    CdmaFreq, uint32
    FrameOffset, uint32
    ForRc, uint32
    RevRc, uint32
    PwrCntlStep, uint32
    FpcMode, uint32
    RevFchGatingMode, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_TRAFFIC_CHAN_START_B_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_TRAFFIC_CHAN_START_B_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_TrfChanStart_Msg: PN=%d, FchC=%d, FchQ=%d, DcchC=%d, DcchQ=%d, SrOff=%d, PwrCInd=%d, AddPilInc=%d, PilRecT=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotPn, uint32
    CodeChanFch, uint32
    QofMaskIdFch, uint32
    CodeChanDcch, uint32
    QofMaskIdDcch, uint32
    SrchOffset, uint32
    PowerCombInd, uint32
    AddPilotRecIncl, uint32
    PilotRecType, uint32
End

Begin Message, CP Trace CP_PS_PDCH_LMD_TRAFFIC_CHAN_START_A_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_LMD_TRAFFIC_CHAN_START_A_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-LMD_TrfChanStart_Msg: ChInd=%d, FMux=%d, RMux=%d, NLpm=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChInd, uint32
    ForMuxOption, uint32
    RevMuxOption, uint32
    NumLpmEntries, uint32
End

Begin Message, CP Trace CP_PS_PDCH_LMD_TRAFFIC_CHAN_START_B_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_LMD_TRAFFIC_CHAN_START_B_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-LMD_TrfChanStart_Msg: SrId=%d, LogR=%d, PhyR=%d, F=%d, R=%d, Prior=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SrId, uint32
    LogicalResource, uint32
    PhysicalResource, uint32
    ForwardFlag, uint32
    ReverseFlag, uint32
    Priority, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_REVERSE_POWER_SET_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_REVERSE_POWER_SET_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_RevPwrSet_Msg: AckP=%d, AckPil=%d, CqiHP=%d, CqiHPil=%d, CqiLP=%d, CqiLPil=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RAckchPwr, uint32
    RAckchPilotRefLevel, uint32
    RCqichHighPwr, uint32
    RCqichHighPilotRefLevel, uint32
    RCqichLowPwr, uint32
    RCqichLowPilotRefLevel, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_SERVICE_CONFIG_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_SERVICE_CONFIG_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_ServCfg_Msg: FPdchInc=%d, FPdchRc=%d, FFchRc=%d, RFchRc=%d, FchFrSz=%d, FDcchRc=%d, RDcchRc=%d, DcchFrSz=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ForPdchCcIncl, uint32
    ForPdchRc, uint32
    ForFchRc, uint32
    RevFchRc, uint32
    FchFrameSize, uint32
    ForDcchRc, uint32
    RevDcchRc, uint32
    DcchFrameSize, uint32
End

Begin Message, CP Trace CP_PS_PDCH_LMD_SERVICE_CONFIG_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_LMD_SERVICE_CONFIG_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-LMD_ServCfg_Msg: FPdchInc=%d, FPdchMux=%d, FPdchRc=%d, FMux=%d, RMux=%d, FBits=%d, RBits=%d, NConRec=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ForPdchCcIncl, uint32
    ForPdchMuxOption, uint32
    ForPdchRc, uint32
    ForMuxOption, uint32
    RevMuxOption, uint32
    ForNumBits, uint32
    RevNumBits, uint32
    NumConRec, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_SERVICE_CONFIG_NN_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_SERVICE_CONFIG_NN_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_ServCfg_NN_Msg: SwitchInc=%d, SfSwFrCh=%d, SfrSwFrCh=%d, GateInc=%d, GateRate=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SwitchingParamsIncl, uint32
    NumSoftSwitchingFramesChm, uint32
    NumSofterSwitchingFramesChm, uint32
    GatingRateIncl, uint32
    PilotGatingRate, uint32
End

Begin Message, CP Trace CP_PS_PDCH_LMD_SERVICE_CONFIG_NN_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_LMD_SERVICE_CONFIG_NN_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-LMD_ServCfg_NN_Msg: SrId=%d, LogR=%d, PhyR=%d, F=%d, R=%d, Prior=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SrId, uint32
    LogicalResource, uint32
    PhysicalResource, uint32
    ForwardFlag, uint32
    ReverseFlag, uint32
    Priority, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_SOFT_HANDOFF_A_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_SOFT_HANDOFF_A_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_SoftHandoff_Msg: ChInd=%d, NAct=%d, NFSup=%d, SrchInc=%d, SrcWA=%d, SrcWN=%d, SrcWR=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    chInd, uint32
    NumActSets, uint32
    NumForSup, uint32
    srchWinIncl, uint32
    srchWinA, uint32
    srchWinN, uint32
    srchWinR, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_SOFT_HANDOFF_B_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_SOFT_HANDOFF_B_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_SoftHandoff_Msg: PN=%d, AddPInc=%d, AddPRecT=%d, PwrCInd=%d, FchWC=%d, FchQ=%d, DcchWC=%d, DcchQ=%d, SrcOff=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotPn, uint32
    AddPilotRecIncl, uint32
    PilotRecType, uint32
    PowerCombInd, uint32
    CodeChanFch, uint32
    QofMaskIdFch, uint32
    CodeChanDcch, uint32
    QofMaskIdDcch, uint32
    SrchOffset, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_HARD_HANDOFF_A_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_HARD_HANDOFF_A_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_HardHandoff_Msg: ChInd=%d, NAct=%d, FreqInc=%d, BC=%d, Freq=%d, FrOffInc=%d, FrOff=%d, LCInc=%d, NumPream=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChInd, uint32
    NumActSets, uint32
    FreqIncl, uint32
    BandClass, uint32
    CdmaFreq, uint32
    FrameOffsetIncl, uint32
    FrameOffset, uint32
    LcMaskIncl, uint32
    NumPreambleFrames, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_HARD_HANDOFF_B_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_HARD_HANDOFF_B_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_HardHandoff_Msg: PN=%d, AddPInc=%d, AddPRecT=%d, PwrCInd=%d, FchWC=%d, FchQ=%d, DcchWC=%d, DcchQ=%d, SrcOff=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotPn, uint32
    AddPilotRecIncl, uint32
    PilotRecType, uint32
    PowerCombInd, uint32
    CodeChanFch, uint32
    QofMaskIdFch, uint32
    CodeChanDcch, uint32
    QofMaskIdDcch, uint32
    SrchOffset, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_ACKCQICH_RATE_CHANGE_A_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_ACKCQICH_RATE_CHANGE_A_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_RateChg_Msg: CqiInc=%d, FullCI=%d, CqiRep=%d, SwInc=%d, SfFr=%d, SfrFr=%d, SfFrCh=%d, SfrFrCh=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RCqichRateChangeIncl, uint32
    FullCIFeedbackInd, uint32
    RevCqichReps, uint32
    SwitchingParamsIncl, uint32
    NumSoftSwitchingFrames, uint32
    NumSofterSwitchingFrames, uint32
    NumSoftSwitchingFramesChm, uint32
    NumSofterSwitchingFramesChm, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_ACKCQICH_RATE_CHANGE_B_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_ACKCQICH_RATE_CHANGE_B_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_RateChg_Msg: CqiPwrInc=%d, CqiH=%d, CqiHP=%d, CqiL=%d, CqiLP=%d, AckChInc=%d, AckRep=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RCqichPwrIncl, uint32
    RCqichHighPwr, uint32
    RCqichHighPilotRefLevel, uint32
    RCqichLowPwr, uint32
    RCqichLowPilotRefLevel, uint32
    RAckchRateChangeIncl, uint32
    RevAckchReps, uint32
End

Begin Message, CP Trace CP_PS_PDCH_L1D_RSR_DEALLOC_MSG_TRACE_ID Rsp
    printformat , PS_PDCH, 3, CP_PS_PDCH_L1D_RSR_DEALLOC_MSG_TRACE_ID, N=%d, <systime>  PS-PDCH-L1D_RsrDealloc_Msg: Ch=%d, PilT=%d, GateR=%d, SwInc=%d, SfFrCh=%d, SfrFrCh=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Channels, uint32
    Pilot_Type, uint32
    PilotGatingRate, uint32
    SwitchingParamsIncl, uint32
    NumSoftSwitchingFramesChm, uint32
    NumSofterSwitchingFramesChm, uint32
End

Begin Message, CP Trace CP_PS_RELA_B_C_LEVEL_1_TRACES________________ Rsp
    printformat , PS_REL_A_B_C, 1, CP_PS_RELA_B_C_LEVEL_1_TRACES________________, N=%d, <systime>  PS-RELA_B_C: Level 1 Traces
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_RELA_B_C_ECAM_GRANTM_ENCM_ERR_TRACE_ID Rsp
    printformat , PS_REL_A_B_C, 1, CP_PS_RELA_B_C_ECAM_GRANTM_ENCM_ERR_TRACE_ID, N=%d, <systime>  PS-RELA_B_C-ECAM: Error, GrantM=%d, EncryptMode=%d!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    GrantMode, uint32
    EncMode, uint32
End

Begin Message, CP Trace CP_PS_RELA_B_C_ECAM_3X_ERR_TRACE_ID Rsp
    printformat , PS_REL_A_B_C, 1, CP_PS_RELA_B_C_ECAM_3X_ERR_TRACE_ID, N=%d, <systime>  PS-RELA_B_C-ECAM: Error, 3X not supported!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_RELA_B_C_ECAM_BANDCLASS_ERR_TRACE_ID Rsp
    printformat , PS_REL_A_B_C, 1, CP_PS_RELA_B_C_ECAM_BANDCLASS_ERR_TRACE_ID, N=%d, <systime>  PS-RELA_B_C-ECAM: Error, BandClass=%d not supported!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    BandClass, uint32
End

Begin Message, CP Trace CP_PS_RELA_B_C_ECAM_DEF_CFG_ERR_TRACE_ID Rsp
    printformat , PS_REL_A_B_C, 1, CP_PS_RELA_B_C_ECAM_DEF_CFG_ERR_TRACE_ID, N=%d, <systime>  PS-RELA_B_C-ECAM: Error, Default Cfg=%d not supported!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    DefaultCfg, uint32
End

Begin Message, CP Trace CP_PS_RELA_B_C_ECAM_RC_ERR_TRACE_ID Rsp
    printformat , PS_REL_A_B_C, 1, CP_PS_RELA_B_C_ECAM_RC_ERR_TRACE_ID, N=%d, <systime>  PS-RELA_B_C-ECAM: Error, RC not supported! (fRC=%d, rRC=%d)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ForwRC, uint32
    RevRC, uint32
End

Begin Message, CP Trace CP_PS_RELA_B_C_ECAM_FCH_DCCH_CAP_ERR_TRACE_ID Rsp
    printformat , PS_REL_A_B_C, 1, CP_PS_RELA_B_C_ECAM_FCH_DCCH_CAP_ERR_TRACE_ID, N=%d, <systime>  PS-RELA_B_C-ECAM: Error, FCH/DCCH cap not supported!
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_PS_RELA_B_C_SCC_FCHDCCHMUX_ERR_TRACE_ID Rsp
    printformat , PS_REL_A_B_C, 1, CP_PS_RELA_B_C_SCC_FCHDCCHMUX_ERR_TRACE_ID, N=%d, <systime>  PS-RELA_B_C-SCC: FchDcchMuxInd=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FchDcchMuxInd, uint32
End

Begin Message, CP Trace CP PE SRBP EACH rate duration Rsp
    printformat , 1,  1, CP PE SRBP EACH rate duration, N=%d, <systime>  CP - CP PE SRBP EACH rate=%d, duration=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    parm1, uint32, base=10
    parm2, uint32, base=10
End

Begin Message, CP Trace CP PE SRBP EACH duration parms Rsp
    printformat , 1,  1, CP PE SRBP EACH duration parms, N=%d, <systime>  CP - CP PE SRBP EACH rate=%d, duration=%d, min=%d, max=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=10, size=end
End

Begin Message, CP Trace CP PE SRBP ACC Correction Rsp
    printformat , 1,  1, CP PE SRBP ACC Correction, N=%d, <systime>  CP - CP PE SRBP ACC Correction=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    parm1, uint32
End

Begin Message, CP Trace CP PE SRBP Set ACC Correction Rsp
    printformat , 1,  1, CP PE SRBP Set ACC Correction, N=%d, <systime>  CP - CP PE SRBP Set ACC Correction nomPwr=%d, nomPwrExt=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    parm1, uint32
    parm2, uint32
End

Begin Message, CP Trace CP PE SRBP RC Inter Correction Rsp
    printformat , 1,  1, CP PE SRBP RC Inter Correction, N=%d, <systime>  CP - CP PE SRBP RC interfence correction=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    parm1, uint32, base=10
End

Begin Message, CP Trace CP PE SRBP State Change Rsp
    printformat , 1,  1, CP PE SRBP State Change, N=%d, <systime>  CP - CP PE SRBP State Change Current State=%s, Next State=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Current State, uint32, base=enum:SRBP State
    Next State, uint32, base=enum:SRBP State
End

Begin Message, CP Trace CP UIM_READ_ERROR_TRACE_ID Rsp
    printformat , 1, 1, CP UIM_READ_ERROR_TRACE_ID, N=%d, <systime>  CP - UIM Task Read Error: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Error, uint32, base=enum:Uim Task Read Error Type Enum
End

Begin Message, CP Trace CP UIM_SELECT_TRACE_ID Rsp
    printformat , 1, 1, CP UIM_SELECT_TRACE_ID, N=%d, <systime>  CP - UIM Select() id 0x%x, rc 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    id, uint32
    rc, uint32
End

Begin Message, CP Trace CP UIM Cmd Mailbox Msg Trace Rsp
    printformat , UIM, 1, CP UIM Cmd Mailbox Msg Trace, N=%d, <systime>  UIM Cmd Mbox: Msg Id - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Id, uint32, base=enum:UIMMsgId Enum
End

Begin Message, CP Trace CP CSS 1X Css Api Rsp
    printformat , 1, 1, CP CSS 1X Css Api, N=%d, <systime>  CSS 1X Api: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Id, uint32, base=enum:CssApiTraceId
End

Begin Message, CP Trace CP CSS 1X System Selected Rsp
    printformat , 1, 1, CP CSS 1X System Selected, N=%d, <systime>  CSS 1X nextSystem: %s  Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Next System, uint32, base=enum:SystemTypeId
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X State Indication Rsp
    printformat , 1, 1, CP CSS 1X State Indication, N=%d, <systime>  CSS 1X State: %s  Event: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:CssStateId
    Event, uint32, base=enum:CssIndicationId
End

Begin Message, CP Trace CP CSS 1X Scan List Data Rsp
    printformat , 1, 1, CP CSS 1X Scan List Data, N=%d, <systime>  CSS 1X List: %s  Band: %s  Channel: %d  AcqIndex: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    List, uint32, base=enum:CssLists
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
    AcqIndex, uint32
End

Begin Message, CP Trace CP CSS 1X CRSL populated Rsp
    printformat , 1, 1, CP CSS 1X CRSL populated, N=%d, <systime>  CSS 1X CRSL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS 1X CRSL exhausted Rsp
    printformat , 1, 1, CP CSS 1X CRSL exhausted, N=%d, <systime>  CSS 1X CRSL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X CRSL channel Rsp
    printformat , 1, 1, CP CSS 1X CRSL channel, N=%d, <systime>  CSS 1X CRSL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X CRSL reset Rsp
    printformat , 1, 1, CP CSS 1X CRSL reset, N=%d, <systime>  CSS 1X CRSL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X MPL populated Rsp
    printformat , 1, 1, CP CSS 1X MPL populated, N=%d, <systime>  CSS 1X MPL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS 1X MPL exhausted Rsp
    printformat , 1, 1, CP CSS 1X MPL exhausted, N=%d, <systime>  CSS 1X MPL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X MPL channel Rsp
    printformat , 1, 1, CP CSS 1X MPL channel, N=%d, <systime>  CSS 1X MPL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X MPL reset Rsp
    printformat , 1, 1, CP CSS 1X MPL reset, N=%d, <systime>  CSS 1X MPL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X ISL populated Rsp
    printformat , 1, 1, CP CSS 1X ISL populated, N=%d, <systime>  CSS 1X ISL populated
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X ISL exhausted Rsp
    printformat , 1, 1, CP CSS 1X ISL exhausted, N=%d, <systime>  CSS 1X ISL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X ISL channel Rsp
    printformat , 1, 1, CP CSS 1X ISL channel, N=%d, <systime>  CSS 1X ISL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X ISL reset Rsp
    printformat , 1, 1, CP CSS 1X ISL reset, N=%d, <systime>  CSS 1X ISL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X OSL populated Rsp
    printformat , 1, 1, CP CSS 1X OSL populated, N=%d, <systime>  CSS 1X OSL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS 1X OSL exhausted Rsp
    printformat , 1, 1, CP CSS 1X OSL exhausted, N=%d, <systime>  CSS 1X OSL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X OSL channel Rsp
    printformat , 1, 1, CP CSS 1X OSL channel, N=%d, <systime>  CSS 1X OSL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X OSL reset Rsp
    printformat , 1, 1, CP CSS 1X OSL reset, N=%d, <systime>  CSS 1X OSL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X RSL populated Rsp
    printformat , 1, 1, CP CSS 1X RSL populated, N=%d, <systime>  CSS 1X RSL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS 1X RSL exhausted Rsp
    printformat , 1, 1, CP CSS 1X RSL exhausted, N=%d, <systime>  CSS 1X RSL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X RSL channel Rsp
    printformat , 1, 1, CP CSS 1X RSL channel, N=%d, <systime>  CSS 1X RSL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X RSL reset Rsp
    printformat , 1, 1, CP CSS 1X RSL reset, N=%d, <systime>  CSS 1X RSL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X MRU populated Rsp
    printformat , 1, 1, CP CSS 1X MRU populated, N=%d, <systime>  CSS 1X MRU populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS 1X MRU exhausted Rsp
    printformat , 1, 1, CP CSS 1X MRU exhausted, N=%d, <systime>  CSS 1X MRU exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X MRU channel Rsp
    printformat , 1, 1, CP CSS 1X MRU channel, N=%d, <systime>  CSS 1X MRU channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X MRU reset Rsp
    printformat , 1, 1, CP CSS 1X MRU reset, N=%d, <systime>  CSS 1X MRU reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X PRL populated Rsp
    printformat , 1, 1, CP CSS 1X PRL populated, N=%d, <systime>  CSS 1X PRL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS 1X PRL exhausted Rsp
    printformat , 1, 1, CP CSS 1X PRL exhausted, N=%d, <systime>  CSS 1X PRL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X PRL channel Rsp
    printformat , 1, 1, CP CSS 1X PRL channel, N=%d, <systime>  CSS 1X PRL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X PRL reset Rsp
    printformat , 1, 1, CP CSS 1X PRL reset, N=%d, <systime>  CSS 1X PRL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X DPCL populated Rsp
    printformat , 1, 1, CP CSS 1X DPCL populated, N=%d, <systime>  CSS 1X DPCL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS 1X DPCL exhausted Rsp
    printformat , 1, 1, CP CSS 1X DPCL exhausted, N=%d, <systime>  CSS 1X DPCL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X DPCL channel Rsp
    printformat , 1, 1, CP CSS 1X DPCL channel, N=%d, <systime>  CSS 1X DPCL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X DPCL reset Rsp
    printformat , 1, 1, CP CSS 1X DPCL reset, N=%d, <systime>  CSS 1X DPCL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X GSL populated Rsp
    printformat , 1, 1, CP CSS 1X GSL populated, N=%d, <systime>  CSS 1X GSL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS 1X GSL exhausted Rsp
    printformat , 1, 1, CP CSS 1X GSL exhausted, N=%d, <systime>  CSS 1X GSL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X GSL channel Rsp
    printformat , 1, 1, CP CSS 1X GSL channel, N=%d, <systime>  CSS 1X GSL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X GSL reset Rsp
    printformat , 1, 1, CP CSS 1X GSL reset, N=%d, <systime>  CSS 1X GSL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X SRSL populated Rsp
    printformat , 1, 1, CP CSS 1X SRSL populated, N=%d, <systime>  CSS 1X SRSL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS 1X SRSL exhausted Rsp
    printformat , 1, 1, CP CSS 1X SRSL exhausted, N=%d, <systime>  CSS 1X SRSL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X SRSL channel Rsp
    printformat , 1, 1, CP CSS 1X SRSL channel, N=%d, <systime>  CSS 1X SRSL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X SRSL reset Rsp
    printformat , 1, 1, CP CSS 1X SRSL reset, N=%d, <systime>  CSS 1X SRSL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X Last Registered channel Rsp
    printformat , 1, 1, CP CSS 1X Last Registered channel, N=%d, <systime>  CSS 1X Last Registered channel Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X Last Saved channel Rsp
    printformat , 1, 1, CP CSS 1X Last Saved channel, N=%d, <systime>  CSS 1X Last Saved channel Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X System Lost channel Rsp
    printformat , 1, 1, CP CSS 1X System Lost channel, N=%d, <systime>  CSS 1X System Lost channel Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X System Redirected channel Rsp
    printformat , 1, 1, CP CSS 1X System Redirected channel, N=%d, <systime>  CSS 1X System Redirected channel Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X Save Last System Rsp
    printformat , 1, 1, CP CSS 1X Save Last System, N=%d, <systime>  CSS 1X Save Last System Band: %s  Channel: %d Sid: %d Nid: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
    Sid, uint32, base=10
    Nid, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X Save System Lost Rsp
    printformat , 1, 1, CP CSS 1X Save System Lost, N=%d, <systime>  CSS 1X Save System Lost Band: %s  Channel: %d Sid: %d Nid: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
    Sid, uint32, base=10
    Nid, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X Save System Redirected Rsp
    printformat , 1, 1, CP CSS 1X Save System Redirected, N=%d, <systime>  CSS 1X Save System Redirected Band: %s  Channel: %d Sid: %d Nid: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
    Sid, uint32, base=10
    Nid, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X Save System Rejected Rsp
    printformat , 1, 1, CP CSS 1X Save System Rejected, N=%d, <systime>  CSS 1X Save System Rejected Band: %s  Channel: %d Sid: %d Nid: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
    Sid, uint32, base=10
    Nid, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X Num of Duplicate Sids Rsp
    printformat , 1, 1, CP CSS 1X Num of Duplicate Sids, N=%d, <systime>  CSS 1X Num of Duplicate Sids: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Sids, uint32
End

Begin Message, CP Trace CP CSS 1X Dup Sids Index and Geo Rsp
    printformat , 1, 1, CP CSS 1X Dup Sids Index and Geo, N=%d, <systime>  CSS 1X Dup Sids Index: %d  Geo: %d  Asso_Tag: %d  Pri: %d  MatchStatus: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Index, uint32
    Geo, uint32
    Association Tag, uint32
    Pri, uint32
    MatchStatus, uint32,base=enum:SidNidMatch
End

Begin Message, CP Trace CP CSS 1X Num of Last Saved Duplicate Sids Rsp
    printformat , 1, 1, CP CSS 1X Num of Last Saved Duplicate Sids, N=%d, <systime>  CSS 1X Num of Last Saved Dup Sids: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Sids, uint32
End

Begin Message, CP Trace CP CSS 1X Last Saved Dup Sids Index and Geo Rsp
    printformat , 1, 1, CP CSS 1X Last Saved Dup Sids Index and Geo, N=%d, <systime>  CSS 1X Last Saved Dup Sids Index: %d  Geo: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Index, uint32
    Geo, uint32
End

Begin Message, CP Trace CP CSS 1X Build List Rsp
    printformat , 1, 1, CP CSS 1X Build List, N=%d, <systime>  CSS 1X build list : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    List, uint32, base=enum:CssLists
End

Begin Message, CP Trace CP CSS 1X System Preference Rsp
    printformat , 1, 1, CP CSS 1X System Preference, N=%d, <systime>  CSS 1X system acquired is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SysPref, uint32, base=enum:SystemPreference
End

Begin Message, CP Trace CP CSS 1X Call Pending Rsp
    printformat , 1, 1, CP CSS 1X Call Pending, N=%d, <systime>  CSS 1X Call Pending %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CallPending, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS 1X Pend Call Rsp
    printformat , 1, 1, CP CSS 1X Pend Call, N=%d, <systime>  CSS 1X pend call
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X Reset Pend Call Rsp
    printformat , 1, 1, CP CSS 1X Reset Pend Call, N=%d, <systime>  CSS 1X reset pend call
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X Validation State Rsp
    printformat , 1, 1, CP CSS 1X Validation State, N=%d, <systime>  CSS 1X Validation State: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:CssStateId
End

Begin Message, CP Trace CP CSS 1X CDMA Service Rsp
    printformat , 1, 1, CP CSS 1X CDMA Service, N=%d, <systime>  1X CDMA Service
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X AMPS Service Rsp
    printformat , 1, 1, CP CSS 1X AMPS Service, N=%d, <systime>  1X AMPS Service
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X No Service Rsp
    printformat , 1, 1, CP CSS 1X No Service, N=%d, <systime>  1X No Service
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X SVSM SM Rsp
    printformat , 1, 1, CP CSS 1X SVSM SM, N=%d, <systime>  1X Svsm state change to %s from %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurState, uint32, base=enum:Svsm1xStates
    PrevState, uint32, base=enum:Svsm1xStates
End

Begin Message, CP Trace CP CSS 1X System Select Request Rsp
    printformat , 1, 1, CP CSS 1X System Select Request, N=%d, <systime>  1X Select Request, Indication: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    indication, uint32, base=enum:CssIndicationId
End

Begin Message, CP Trace CP CSS 1X System Select Response Rsp
    printformat , 1, 1, CP CSS 1X System Select Response, N=%d, <systime>  1X Select System: Band=%s, Channel=%d, Acq Index=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    band, uint32, base=enum:CssBand
    channel, uint32, base=10
    Acq Index, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X Validate Response Rsp
    printformat , 1, 1, CP CSS 1X Validate Response, N=%d, <systime>  1X Validate Result: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Result, uint32, base=enum:Css1xValidateRslt
End

Begin Message, CP Trace CP CSS 1X Channel Scanned Rsp
    printformat , 1, 1, CP CSS 1X Channel Scanned, N=%d, <systime>  1X Channel Already Scanned In Current Cycle - Skipped
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X Validate Status Rsp
    printformat , 1, 1, CP CSS 1X Validate Status, N=%d, <systime>  1X Select Validation Status: Status=%s, SystemPref=%s, Result=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Status, uint32, base=enum:1X Select Status
    SystemPref, uint32, base=enum:SystemPreference
    Result, uint32, base=enum:CssValidateStatusRslt
End

Begin Message, CP Trace CP CSS 1X SVSM Select Request Info Rsp
    printformat , 1, 1, CP CSS 1X SVSM Select Request Info, N=%d, <systime>  1X Select Request Info: SVSM State=%s, LostPingCount=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SVSM State, uint32, base=enum:Svsm1xStates
    LostPingCount, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X SRLTE populated Rsp
    printformat , 1, 1, CP CSS 1X SRLTE populated, N=%d, <systime>  CSS 1X SRLTE populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS 1X SRLTE exhausted Rsp
    printformat , 1, 1, CP CSS 1X SRLTE exhausted, N=%d, <systime>  CSS 1X SRLTE exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X SRLTE channel Rsp
    printformat , 1, 1, CP CSS 1X SRLTE channel, N=%d, <systime>  CSS 1X SRLTE channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS 1X SRLTE reset Rsp
    printformat , 1, 1, CP CSS 1X SRLTE reset, N=%d, <systime>  CSS 1X SRLTE reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS 1X service state Rsp
    printformat , 1,  1, CP CSS 1X service state Rsp , N=%d, <systime>  CP CSS 1X service state old1XSvc=%s new1XSvc=%s DOSvc=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    old1XSvc, uint32, base=enum:CssSvcPhase
    new1XSvc, uint32, base=enum:CssSvcPhase
    DOSvc, uint32, base=enum:CssSvcPhase
End

Begin Message, CP Trace CP CSS 1X APACS validation Rsp
    printformat , 1,  1, CP CSS 1X APACS validation Rsp , N=%d, <systime>  CP CSS 1X APACS validation sid: %d  nid: %d  band: %d  chan: %d  SIDfoundinPRL: %d  retval: %d prefNeg: %d  prefOnly: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    sid, uint32, base=10
    nid, uint32, base=10
    band, uint32, base=10
    chan, uint32, base=10
    SIDfoundinPRL, uint32, base=enum:FALSE/TRUE
    retval, uint32, base=enum:FALSE/TRUE
    prefNeg, uint32, base=enum:FALSE/TRUE
    prefOnly, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP CSS 1X Camped System Info Rsp
    printformat , 1,  1, CP CSS 1X Camped System Info Rsp , N=%d, <systime>  CP CSS 1X Camped System Info Band:%s Channel:%d SID:%s NID:%d Acq Index:%d System Index:%d Acquired System is:%s Found in PRL:%d NegSys in PRL:%d Validation Result: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
    SID, uint32, base=10
    NID, uint32, base=10
    Acq Index, uint32, base=10
    System Index, uint32, base=10
    SystemPref, uint32, base=enum:SystemPreference
    Found in PRL, uint32, base=enum:FALSE/TRUE
    NegSys in PRL, uint32, base=enum:FALSE/TRUE
    Validation Result, uint32, base=enum:CssValidateStatusRslt
End

Begin Message, CP Trace CP CSS Roam Indicator Rsp
    printformat , 1, 1, CP CSS Roam Indicator, N=%d, <systime>  %s Roam Indicator: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Sys, uint32, base=enum:CssRoamSys
    RoamInd, uint32, base=enum:CssRoamInd
End

Begin Message, CP Trace CP CSS Start Timer Rsp
    printformat , 1, 1, CP CSS Start Timer, N=%d, <systime>  CSS Start Timer: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:CssTimerId
End

Begin Message, CP Trace CP CSS Stop Timer Rsp
    printformat , 1, 1, CP CSS Stop Timer, N=%d, <systime>  CSS Stop Timer: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:CssTimerId
End

Begin Message, CP Trace CP CSS Timer Started Rsp
    printformat , 1, 1, CP CSS Timer Started, N=%d, <systime>  CSS Timer %s Started, Duration: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimerId, uint32, base=enum:CssTimerId
    Duration, uint32
End

Begin Message, CP Trace CP CSS Timer Stopped Rsp
    printformat , 1, 1, CP CSS Timer Stopped, N=%d, <systime>  CSS Timer %s Stopped
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimerId, uint32, base=enum:CssTimerId
End

Begin Message, CP Trace CP CSS Timer Expired Rsp
    printformat , 1, 1, CP CSS Timer Expired, N=%d, <systime>  CSS Timer %s Expired
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimerId, uint32, base=enum:CssTimerId
End

Begin Message, CP Trace CP CSS EPRL Enter Paging Rsp
    printformat , 1, 1, CP CSS EPRL Enter Paging, N=%d, <systime>  CSS EPRL Enter Paging : %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    EPRLEntries, uint32, base=10
End

Begin Message, CP Trace CP CSS Lost System Ping Frequency Rsp
    printformat , 1, 1, CP CSS Lost System Ping Frequency Rsp , N=%d, <systime>  CSS Geo Scan Ping Frequency: %d, CSS Non Geo Scan Ping Frequency: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Geo Scan Ping Frequency, uint32, base=10
    Non Geo Scan Ping Frequency, uint32, base=10
End

Begin Message, CP Trace CP CSS Check Prl Format Rsp
    printformat , 1,  1, CP CSS Check Prl Format, N=%d, <systime>  CP CSS Check Prl Format, valid=%d, PRL_Length=%d, prl_type=%d, IS683A_Length=%d, IS683C_Length=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    valid, uint32
    PRL_Length, uint32
    prl_type, uint32
    IS683A_Length, uint32
    IS683C_Length, uint32
End

Begin Message, CP Trace CP CSS UIM CPrl Rsp
    printformat , 1,  1, CP CSS UIM CPrl Rsp , N=%d, <systime>  CP CSS UIM CPrl, prl1read=%d, prl1size=%d, prl2read=%d, prl2size=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    prl1read, uint32
    prl1size, uint32
    prl2read, uint32
    prl2size, uint32
End

Begin Message, CP Trace CP CSS PRL Enter Hash Table Full Rsp
    printformat , 1,  1, CP CSS PRL Enter Hash Table Full Rsp , N=%d, <systime>  CP CSS PRL Enter Hash Table Full: ind=%d, subInd=%d, sid=%d, nid=%d, sysInd=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ind, uint32
    subInd, uint32
    sid, uint32
    nid, uint32
    sysInd, uint32
End

Begin Message, CP Trace CP CSS PRL Enter Hash Sys Record Rsp
    printformat , 1,  1, CP CSS PRL Enter Hash Sys Record Rsp , N=%d, <systime>  CP CSS PRL Enter Hash Sys Rec: ind=%d, subInd=%d, sid=%d, nid=%d, sysInd=%d, geoVal =%d, priVal=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ind, uint32
    subInd, uint32
    sid, uint32
    nid, uint32
    sysInd, uint32
    geoVal, uint32
    priVal, uint32
End

Begin Message, CP Trace CP CSS PRL Search Hash By Sid Rsp
    printformat , 1,  1, CP CSS PRL Search Hash By Sid Rsp , N=%d, <systime>  CP CSS PRL Search Hash By Sid: ind=%d, subInd=%d, numSid=%d, sid=%d, nid=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ind, uint32
    subInd, uint32
    numSid, uint32
    sid, uint32
    nid, uint32
End

Begin Message, CP Trace CP CSS PRL Search Found Sys Rec Rsp
    printformat , 1,  1, CP CSS PRL Search Found Sys Rec Rsp , N=%d, <systime>  CP CSS PRL Search Found Sys Rec: sid=%d, nid=%d, pri=%s, acqInd=%d, roamInd=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    sid, uint32
    nid, uint32
    pri, uint32, base=enum:False/True
    acqInd, uint32
    roamInd, uint32
End

Begin Message, CP Trace CP CSS PRL Match Sid Wildcard Nid Rsp
    printformat , 1,  1, CP CSS PRL Match Sid Wildcard Nid Rsp , N=%d, <systime>  CP CSS PRL Match Sid Wildcard Nid: sysInd=%d, prlSid=%d, prlNid=%d, geoV=%d, priV=%d, acqInd=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    sysInd, uint32
    prlSid, uint32
    prlNid, uint32
    geoV, uint32
    priV, uint32
    acqInd, uint32
End

Begin Message, CP Trace CP CSS PRL Match Sid Preferred Rsp
    printformat , 1,  1, CP CSS PRL Match Sid Preferred Rsp , N=%d, <systime>  CP CSS PRL Match Sid Pref: (prlSid=%d & pref=%s & curAcq=%s) | prlSid=%d | pref=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    prlSid1, uint32
    pref1, uint32, base=enum:False/True
    curAcq, uint32, base=enum:False/True
    prlSid2, uint32
    pref2, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS PRL Match Sid VZW Band Rsp
    printformat , 1,  1, CP CSS PRL Match Sid VZW Band Rsp , N=%d, <systime>  CP CSS PRL Match Sid VZW Band: acqIndex=%d, acqRecBand=%s, curBand=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    acqIndex, uint32
    acqRecBand, uint32, base=enum:BandClass
    curBand, uint32, base=enum:BandClass
End

Begin Message, CP Trace CP CSS PRL Match Sid Exact Nid Rsp
    printformat , 1,  1, CP CSS PRL Match Sid Exact Nid Rsp , N=%d, <systime>  CP CSS PRL Match Sid Exact Nid: prlNid=%d, lastNid=%d, nid=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    prlNid, uint32
    lastNid, uint32
    nid, uint32
End

Begin Message, CP Trace CP CSS CMD Mailbox Msg Rsp
    printformat , 1,  1, CP CSS CMD Mailbox Msg Rsp , N=%d, <systime>  CP CSS CMD Mailbox Msg MsgId =%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32, base=enum:CssMsgId
End

Begin Message, CP Trace CP CSS Rpt 1X Event Rsp
    printformat , 1,  1, CP CSS Rpt 1X Event Rsp , N=%d, <systime>  CP CSS Report 1X Event =%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:Css1xEventType
End

Begin Message, CP Trace CP CSS OOSA Event Rsp
    printformat , 1, 1, CP CSS OOSA Event, N=%d, <systime> : %s Stage: %s Phase: %d Value: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:CssOOSAEvent
    Stage, uint32, base=enum:CssScanningStage
    Phase, uint32, base=10
    Value, uint32, base=10
End

Begin Message, CP Trace CP CSS Common Debug Rsp
    printformat , 1, 1, CP CSS Common Debug, N=%d, <systime>  CP - CSS Common Debug: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP CSS PRL Header Info Rsp
    printformat , 1,  1, CP CSS PRL Header Info Rsp , N=%d, <systime>  CP CSS PRL Header Info PRL_ID:%d  Default Roam Ind:%d  Pref Only:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PRL_ID, uint32, base=10
    Default Roam Ind, uint32, base=10
    Pref Only, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP CSS DO Css Api Rsp
    printformat , 1, 1, CP CSS DO Css Api, N=%d, <systime>  CSS DO Api: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Id, uint32, base=enum:CssApiTraceId
End

Begin Message, CP Trace CP CSS DO System Selected Rsp
    printformat , 1, 1, CP CSS DO System Selected, N=%d, <systime>  CSS DO nextSystem: %s  Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Next System, uint32, base=enum:SystemTypeId
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO State Indication Rsp
    printformat , 1, 1, CP CSS DO State Indication, N=%d, <systime>  CSS DO State: %s  Event: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:CssStateId
    Event, uint32, base=enum:CssIndicationId
End

Begin Message, CP Trace CP CSS DO Scan List Data Rsp
    printformat , 1, 1, CP CSS DO Scan List Data, N=%d, <systime>  CSS DO List: %s  Band: %s  Channel: %d  AcqIndex: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    List, uint32, base=enum:CssLists
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
    AcqIndex, uint32, base=10
End

Begin Message, CP Trace CP CSS DO MPSL populated Rsp
    printformat , 1, 1, CP CSS DO MPSL populated, N=%d, <systime>  CSS DO MPSL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO MPSL exhausted Rsp
    printformat , 1, 1, CP CSS DO MPSL exhausted, N=%d, <systime>  CSS DO MPSL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO MPSL channel Rsp
    printformat , 1, 1, CP CSS DO MPSL channel, N=%d, <systime>  CSS DO MPSL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO MPSL reset Rsp
    printformat , 1, 1, CP CSS DO MPSL reset, N=%d, <systime>  CSS DO MPSL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO MPL populated Rsp
    printformat , 1, 1, CP CSS DO MPL populated, N=%d, <systime>  CSS DO MPL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO MPL exhausted Rsp
    printformat , 1, 1, CP CSS DO MPL exhausted, N=%d, <systime>  CSS DO MPL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO MPL channel Rsp
    printformat , 1, 1, CP CSS DO MPL channel, N=%d, <systime>  CSS DO MPL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO MPL reset Rsp
    printformat , 1, 1, CP CSS DO MPL reset, N=%d, <systime>  CSS DO MPL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO ISL populated Rsp
    printformat , 1, 1, CP CSS DO ISL populated, N=%d, <systime>  CSS DO ISL populated
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO ISL exhausted Rsp
    printformat , 1, 1, CP CSS DO ISL exhausted, N=%d, <systime>  CSS DO ISL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO ISL channel Rsp
    printformat , 1, 1, CP CSS DO ISL channel, N=%d, <systime>  CSS DO ISL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO ISL reset Rsp
    printformat , 1, 1, CP CSS DO ISL reset, N=%d, <systime>  CSS DO ISL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO OSL populated Rsp
    printformat , 1, 1, CP CSS DO OSL populated, N=%d, <systime>  CSS DO OSL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO OSL exhausted Rsp
    printformat , 1, 1, CP CSS DO OSL exhausted, N=%d, <systime>  CSS DO OSL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO OSL channel Rsp
    printformat , 1, 1, CP CSS DO OSL channel, N=%d, <systime>  CSS DO OSL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO OSL reset Rsp
    printformat , 1, 1, CP CSS DO OSL reset, N=%d, <systime>  CSS DO OSL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO RSL populated Rsp
    printformat , 1, 1, CP CSS DO RSL populated, N=%d, <systime>  CSS DO RSL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO RSL exhausted Rsp
    printformat , 1, 1, CP CSS DO RSL exhausted, N=%d, <systime>  CSS DO RSL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO RSL channel Rsp
    printformat , 1, 1, CP CSS DO RSL channel, N=%d, <systime>  CSS DO RSL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO RSL reset Rsp
    printformat , 1, 1, CP CSS DO RSL reset, N=%d, <systime>  CSS DO RSL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO MRU populated Rsp
    printformat , 1, 1, CP CSS DO MRU populated, N=%d, <systime>  CSS DO MRU populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO MRU exhausted Rsp
    printformat , 1, 1, CP CSS DO MRU exhausted, N=%d, <systime>  CSS DO MRU exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO MRU channel Rsp
    printformat , 1, 1, CP CSS DO MRU channel, N=%d, <systime>  CSS DO MRU channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO MRU reset Rsp
    printformat , 1, 1, CP CSS DO MRU reset, N=%d, <systime>  CSS DO MRU reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO PRL populated Rsp
    printformat , 1, 1, CP CSS DO PRL populated, N=%d, <systime>  CSS DO PRL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO PRL exhausted Rsp
    printformat , 1, 1, CP CSS DO PRL exhausted, N=%d, <systime>  CSS DO PRL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO PRL channel Rsp
    printformat , 1, 1, CP CSS DO PRL channel, N=%d, <systime>  CSS DO PRL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO PRL reset Rsp
    printformat , 1, 1, CP CSS DO PRL reset, N=%d, <systime>  CSS DO PRL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO DPCL populated Rsp
    printformat , 1, 1, CP CSS DO DPCL populated, N=%d, <systime>  CSS DO DPCL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO DPCL exhausted Rsp
    printformat , 1, 1, CP CSS DO DPCL exhausted, N=%d, <systime>  CSS DO DPCL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO DPCL channel Rsp
    printformat , 1, 1, CP CSS DO DPCL channel, N=%d, <systime>  CSS DO DPCL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO DPCL reset Rsp
    printformat , 1, 1, CP CSS DO DPCL reset, N=%d, <systime>  CSS DO DPCL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO GSL populated Rsp
    printformat , 1, 1, CP CSS DO GSL populated, N=%d, <systime>  CSS DO GSL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO GSL exhausted Rsp
    printformat , 1, 1, CP CSS DO GSL exhausted, N=%d, <systime>  CSS DO GSL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO GSL channel Rsp
    printformat , 1, 1, CP CSS DO GSL channel, N=%d, <systime>  CSS DO GSL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO GSL reset Rsp
    printformat , 1, 1, CP CSS DO GSL reset, N=%d, <systime>  CSS DO GSL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO ADOSL populated Rsp
    printformat , 1, 1, CP CSS DO ADOSL populated, N=%d, <systime>  CSS DO ADOSL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO ADOSL exhausted Rsp
    printformat , 1, 1, CP CSS DO ADOSL exhausted, N=%d, <systime>  CSS DO ADOSL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO ADOSL channel Rsp
    printformat , 1, 1, CP CSS DO ADOSL channel, N=%d, <systime>  CSS DO ADOSL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO ADOSL reset Rsp
    printformat , 1, 1, CP CSS DO ADOSL reset, N=%d, <systime>  CSS DO ADOSL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO SRSL populated Rsp
    printformat , 1, 1, CP CSS DO SRSL populated, N=%d, <systime>  CSS DO SRSL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO SRSL exhausted Rsp
    printformat , 1, 1, CP CSS DO SRSL exhausted, N=%d, <systime>  CSS DO SRSL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO SRSL channel Rsp
    printformat , 1, 1, CP CSS DO SRSL channel, N=%d, <systime>  CSS DO SRSL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO SRSL reset Rsp
    printformat , 1, 1, CP CSS DO SRSL reset, N=%d, <systime>  CSS DO SRSL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO ASMPL populated Rsp
    printformat , 1, 1, CP CSS DO ASMPL populated, N=%d, <systime>  CSS DO ASMPL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO ASMPL exhausted Rsp
    printformat , 1, 1, CP CSS DO ASMPL exhausted, N=%d, <systime>  CSS DO ASMPL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO ASMPL channel Rsp
    printformat , 1, 1, CP CSS DO ASMPL channel, N=%d, <systime>  CSS DO ASMPL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO ASMPL reset Rsp
    printformat , 1, 1, CP CSS DO ASMPL reset, N=%d, <systime>  CSS DO ASMPL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO ADOLOSL populated Rsp
    printformat , 1, 1, CP CSS DO ADOLOSL populated, N=%d, <systime>  CSS DO ADOLOSL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO ADOLOSL exhausted Rsp
    printformat , 1, 1, CP CSS DO ADOLOSL exhausted, N=%d, <systime>  CSS DO ADOLOSL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO ADOLOSL channel Rsp
    printformat , 1, 1, CP CSS DO ADOLOSL channel, N=%d, <systime>  CSS DO ADOLOSL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO ADOLOSL reset Rsp
    printformat , 1, 1, CP CSS DO ADOLOSL reset, N=%d, <systime>  CSS DO ADOLOSL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO PRLOSL populated Rsp
    printformat , 1, 1, CP CSS DO PRLOSL populated, N=%d, <systime>  CSS DO PRLOSL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO PRLOSL exhausted Rsp
    printformat , 1, 1, CP CSS DO PRLOSL exhausted, N=%d, <systime>  CSS DO PRLOSL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO PRLOSL channel Rsp
    printformat , 1, 1, CP CSS DO PRLOSL channel, N=%d, <systime>  CSS DO PRLOSL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO PRLOSL reset Rsp
    printformat , 1, 1, CP CSS DO PRLOSL reset, N=%d, <systime>  CSS DO PRLOSL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO GLOSL populated Rsp
    printformat , 1, 1, CP CSS DO GLOSL populated, N=%d, <systime>  CSS DO GLOSL populated %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TrueFalse, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO GLOSL exhausted Rsp
    printformat , 1, 1, CP CSS DO GLOSL exhausted, N=%d, <systime>  CSS DO GLOSL exhausted
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO GLOSL channel Rsp
    printformat , 1, 1, CP CSS DO GLOSL channel, N=%d, <systime>  CSS DO GLOSL channel populated, Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO GLOSL reset Rsp
    printformat , 1, 1, CP CSS DO GLOSL reset, N=%d, <systime>  CSS DO GLOSL reset
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO Last Registered channel Rsp
    printformat , 1, 1, CP CSS DO Last Registered channel, N=%d, <systime>  CSS DO Last Registered channel Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO Last Saved channel Rsp
    printformat , 1, 1, CP CSS DO Last Saved channel, N=%d, <systime>  CSS DO Last Saved channel Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO System Lost channel Rsp
    printformat , 1, 1, CP CSS DO System Lost channel, N=%d, <systime>  CSS DO System Lost channel Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO System Redirected channel Rsp
    printformat , 1, 1, CP CSS DO System Redirected channel, N=%d, <systime>  CSS DO System Redirected channel Band: %s  Channel: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO Save Last System Rsp
    printformat , 1, 1, CP CSS DO Save Last System, N=%d, <systime>  CSS DO Save Last System Band: %s  Channel: %d Sid: %d Nid: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
    Sid, uint32, base=10
    Nid, uint32, base=10
End

Begin Message, CP Trace CP CSS DO Save System Lost Rsp
    printformat , 1, 1, CP CSS DO Save System Lost, N=%d, <systime>  CSS DO Save System Lost Band: %s  Channel: %d Sid: %d Nid: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
    Sid, uint32, base=10
    Nid, uint32, base=10
End

Begin Message, CP Trace CP CSS DO Save System Redirected Rsp
    printformat , 1, 1, CP CSS DO Save System Redirected, N=%d, <systime>  CSS DO Save System Redirected Band: %s  Channel: %d Sid: %d Nid: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
    Sid, uint32, base=10
    Nid, uint32, base=10
End

Begin Message, CP Trace CP CSS DO Save System Rejected Rsp
    printformat , 1, 1, CP CSS DO Save System Rejected, N=%d, <systime>  CSS DO Save System Rejected Band: %s  Channel: %d Sid: %d Nid: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32, base=enum:CssBand
    Channel, uint32, base=10
    Sid, uint32, base=10
    Nid, uint32, base=10
End

Begin Message, CP Trace CP CSS DO Num of Duplicate Subnets Rsp
    printformat , 1, 1, CP CSS DO Num of Duplicate Subnets, N=%d, <systime>  CSS DO Num of Duplicate Subnets: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Sids, uint32
End

Begin Message, CP Trace CP CSS DO Dup Subnets Index and Geo Rsp
    printformat , 1, 1, CP CSS DO Dup Subnets Index and Geo, N=%d, <systime>  CSS DO Dup Subnets Index: %d  Geo: %d  Asso_Tag: %d  Pri: %d  MatchStatus: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Index, uint32
    Geo, uint32
    Association Tag, uint32
    Pri, uint32
    MatchStatus, uint32,base=enum:SubnetMatch
End

Begin Message, CP Trace CP CSS DO Num of Last Saved Duplicate Sids Rsp
    printformat , 1, 1, CP CSS DO Num of Last Saved Duplicate Sids, N=%d, <systime>  CSS DO Num of Last Saved Dup Subnets: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Sids, uint32
End

Begin Message, CP Trace CP CSS DO Last Saved Dup Subnets Index and Geo Rsp
    printformat , 1, 1, CP CSS DO Last Saved Dup Subnets Index and Geo, N=%d, <systime>  CSS DO Last Saved Dup Subnets Index: %d  Geo: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Index, uint32
    Geo, uint32
End

Begin Message, CP Trace CP CSS DO Build List Rsp
    printformat , 1, 1, CP CSS DO Build List, N=%d, <systime>  CSS DO build list : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    List, uint32, base=enum:CssLists
End

Begin Message, CP Trace CP CSS DO System Acquired Rsp
    printformat , 1, 1, CP CSS DO System Acquired, N=%d, <systime>  CSS DO system acquired is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SysPref, uint32, base=enum:SystemPreference
End

Begin Message, CP Trace CP CSS DO Call Pending Rsp
    printformat , 1, 1, CP CSS DO Call Pending, N=%d, <systime>  CSS DO Call Pending %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CallPending, uint32, base=enum:False/True
End

Begin Message, CP Trace CP CSS DO Pend Call Rsp
    printformat , 1, 1, CP CSS DO Pend Call, N=%d, <systime>  CSS DO pend call
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO Reset Pend Call Rsp
    printformat , 1, 1, CP CSS DO Reset Pend Call, N=%d, <systime>  CSS DO reset pend call
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO Validation State Rsp
    printformat , 1, 1, CP CSS DO Validation Avoidance Type, N=%d, <systime>  CSS DO Validation Avoidance Type: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Type, uint32, base=enum:CssDoAvoidanceType
End

Begin Message, CP Trace CP CSS DO CDMA Service Rsp
    printformat , 1, 1, CP CSS DO CDMA Service, N=%d, <systime>  DO CDMA Service
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO No Service Rsp
    printformat , 1, 1, CP CSS DO No Service, N=%d, <systime>  DO No Service
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO SVSM SM Rsp
    printformat , 1, 1, CP CSS DO SVSM SM, N=%d, <systime>  Do Svsm state change to %s from %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurState, uint32, base=enum:SvsmDoStates
    PrevState, uint32, base=enum:SvsmDoStates
End

Begin Message, CP Trace CP CSS DO System Select Request Rsp
    printformat , 1, 1, CP CSS DO System Select Request, N=%d, <systime>  DO Select Request, Indication: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    indication, uint32, base=enum:CssIndicationId
End

Begin Message, CP Trace CP CSS DO System Select Response Rsp
    printformat , 1, 1, CP CSS DO System Select Response, N=%d, <systime>  DO Select System: Band=%s, Channel=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    band, uint32, base=enum:CssBand
    channel, uint32, base=10
End

Begin Message, CP Trace CP CSS DO Validate Response Rsp
    printformat , 1, 1, CP CSS DO Validate Response, N=%d, <systime>  DO Validate Result: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Result, uint32, base=enum:CssValidateRslt
End

Begin Message, CP Trace CP CSS DO Channel Scanned Rsp
    printformat , 1, 1, CP CSS DO Channel Scanned, N=%d, <systime>  DO Channel Already Scanned In Current Cycle - Skipped
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP CSS DO Session Status Rsp
    printformat , 1, 1, CP CSS DO Session Status, N=%d, <systime>  DO Session Status: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SessState, uint32, base=enum:CssDoSessionStatus
End

Begin Message, CP Trace CP CSS Service Rsp Pended Status Rsp
    printformat , 1, 1, CP CSS Service Rsp Pended Status, N=%d, <systime>  CSS Service Rsp Pended Status: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Action, uint32, base=enum:CssAction
    RspPendedStatus, uint32, base=enum:CssQueryRspPendedStatus
End

Begin Message, CP Trace CP CSS DO OOSA Scanning Status Rsp
    printformat , 1, 1, CP CSS DO OOSA Scanning Status, N=%d, <systime>  CSS OOSA DO Scanning Status: stage=%s, sleepDuration=%d, phase=%d, cycle=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    stage, uint32, base=enum:CssScanningStage
    sleepDuration, uint32
    phase, uint32
    cycle, uint32
End

Begin Message, CP Trace CP CSS State In HLP Service Query Rsp
    printformat , 1, 1, CP CSS State In HLP Service Query, N=%d, <systime>  CSS State While received HLP SVC Query: 1XCPSM=%s, DOCPSM=%d, DOSession=%d, DOSVSM=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    1XCPSM, uint32, base=enum:1X Cpsm State Type
    DOCPSM, uint32, base=enum:DO Cpsm State Type
    DOSession, uint32, base=enum:CssDoSessionStatus
    DOSVSM, uint32, base=enum:SvsmDoStates
End

Begin Message, CP Trace CP CSS DO Scan Slot Number Indication Rsp
    printformat , 1, 1, CP CSS DO Scan Slot Number Indication, N=%d, <systime>  Slot Num while doing DO scanning: SlotNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SlotNum, uint32
End

Begin Message, CP Trace CP CSS DO service state Rsp
    printformat , 1,  1, CP CSS DO service state Rsp , N=%d, <systime>  CP CSS DO service state oldDOSvc=%s newDOSvc=%s 1XSvc=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    oldDOSvc, uint32, base=enum:CssSvcPhase
    newDOSvc, uint32, base=enum:CssSvcPhase
    1XSvc, uint32, base=enum:CssSvcPhase
End

Begin Message, CP Trace CP CSS DBM Generic Rsp
    printformat , 1, 1, CP CSS DBM Generic, N=%d, <systime>  CP - CSS DBM Generic - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Trace, uint32, base=enum:CssDbmTraceT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP CSS SEND OUT MSG Rsp
    printformat , 1, 1, CP CSS SEND OUT MSG, N=%d, <systime>  CP - CP CSS SEND OUT MSG - MsgId=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32, base=enum:CssMsgT
End

Begin Message, CP Trace CP CSSIRAT FUNCTION Rsp
    printformat , 1, 1, CP CSSIRAT FUNCTION TRACE, N=%d, <systime>  CP - CP CSSIRAT FUNCTION TRACE -  %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Function, uint32, base=enum:CssIratFunctionId,
    Rec, union, enum=Function
End

Begin Message, CP CSSIRAT FUNCTION IRATProcessMmgSearchReq() Rsp
    RatList_0, uint32, base=enum:CssRatIDT
    RatList_1, uint32, base=enum:CssRatIDT
    scanType, uint32, base=enum:CssPSSITypeT
    MCC, uint32
End

Begin Message, CP CSSIRAT FUNCTION IRATProcessMmgDeregReq() Rsp
    CSDetach, uint32, base=enum:FALSE/TRUE
    PSDetach, uint32, base=enum:FALSE/TRUE
    cause, uint32, base=enum:MMGDeregCauseT
End

Begin Message, CP CSSIRAT FUNCTION IRATProcessMmgRegReq() Rsp
    RatList_0, uint32, base=enum:CssRatIDT
    RatList_1, uint32, base=enum:CssRatIDT
    priority, uint32, base=enum:IratPri
    reqType, uint32, base=enum:CssRequestTypeT
End

Begin Message, CP CSSIRAT FUNCTION IRATProcessMmgFmdReq() Rsp
End

Begin Message, CP CSSIRAT FUNCTION IRATCheck1XSelection() Rsp
    scanType, uint32, base=enum:CssPSSITypeT
End

Begin Message, CP CSSIRAT FUNCTION IRATCheckDOSelection() Rsp
    scanType, uint32, base=enum:CssPSSITypeT
End

Begin Message, CP CSSIRAT FUNCTION IRAT1XCpStateInd() Rsp
    ind, uint32, base=enum:IratST
    cur1XState, uint32, base=enum:IratST
End

Begin Message, CP CSSIRAT FUNCTION IRATDOCpStateInd() Rsp
    ind, uint32, base=enum:IratST
    curDOState, uint32, base=enum:IratST
End

Begin Message, CP CSSIRAT FUNCTION IRATDoLocalInactReq() Rsp
    InactDomain, uint32, base=enum:DomainTypeT
End

Begin Message, CP CSSIRAT FUNCTION IRATDeregRsp() Rsp
    DeregCause, uint32, base=enum:MMGDeregCauseT
    CSDetach, uint32, base=enum:FALSE/TRUE
    CSDetachFinished, uint32, base=enum:FALSE/TRUE
    PSDetach, uint32, base=enum:FALSE/TRUE
    PSDetachFinished, uint32, base=enum:FALSE/TRUE
    1XCPSM, uint32, base=enum:1X Cpsm State Type
    DOCPSM, uint32, base=enum:DO Cpsm State Type
End

Begin Message, CP CSSIRAT FUNCTION IRATProcessCdmaInactiveInd() Rsp
    InactInd, uint32, base=enum:DomainTypeT
    1XAction, uint8, base=enum:Irat1XAction
    DOAction, uint8, base=enum:IratDOAction
    scanType, uint32, base=enum:CssPSSITypeT
End

Begin Message, CP CSSIRAT FUNCTION IRAT_1XInit() Rsp
    Type, uint32, base=enum:InitTypeT
End

Begin Message, CP CSSIRAT FUNCTION IRAT_DOInit() Rsp
    Type, uint32, base=enum:InitTypeT
End

Begin Message, CP CSSIRAT FUNCTION IRATProcessMmgApacsReq() Rsp
    isPrlValid, uint32, base=enum:FALSE/TRUE
    cur1XState, uint32, base=enum:IratST
    curDOState, uint32, base=enum:IratST
End

Begin Message, CP CSSIRAT FUNCTION IRATProcessSavedRawApacsData() Rsp
    rawApacs1Xcount, uint32
    rawApacsDOcount, uint32
End

Begin Message, CP Trace CP CSSPWR Power Up State Rsp
    printformat , 1,  1, CP CSSPWR Power Up State Rsp , N=%d, <systime>  CP CSSPWR Power Up State newPowerUpState=%s oldPowerUpState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    newPowerUpState, uint32, base=enum:PowerUpState
    oldPowerUpState, uint32, base=enum:PowerUpState
End

Begin Message, CP Trace CP CSSPWR Uicc Read State Rsp
    printformat , 1,  1, CP CSSPWR Uicc Read State Rsp , N=%d, <systime>  CP CSSPWR Uicc Read State newUiccReadState=%s oldUiccReadState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    newUiccReadState, uint32, base=enum:UiccReadState
    oldUiccReadState, uint32, base=enum:UiccReadState
End

Begin Message, CP Trace CP CSSPWR Process State Rsp
    printformat , 1,  1, CP CSSPWR Process State Rsp , N=%d, <systime>  CP CSSPWR Process State Function=%s PowerUpState=%s UiccReadState=%s %d %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Function, uint32, base=enum:PowerUpProcess
    PowerUpState, uint32, base=enum:PowerUpState
    UiccReadState, uint32, base=enum:UiccReadState
    Value1, uint32, base=10
    Value2, uint32, base=10
End

Begin Message, CP Trace CP CSS DO APACS validation Rsp
    printformat , 1,  1, CP CSS DO APACS validation Rsp , N=%d, <systime>  CP CSS DO APACS validation band: %d  chan: %d  SectorfoundinPRL: %d  prefNeg: %d  prefOnly: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    band, uint32, base=10
    chan, uint32, base=10
    SectorfoundinPRL, uint32, base=enum:FALSE/TRUE
    prefNeg, uint32, base=enum:FALSE/TRUE
    prefOnly, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP IRAT Message Rsp
    printformat , 1,  1, CP IRAT Message Rsp , N=%d, <systime>  CP IRAT Message IO=%s MsgId=%s Result=%x 1XSt=%s DOSt=%s 1XAction=%s DOAction=%s 1XSvcSt=%s DOSvcSt=%s CdmaOnlyMode=%s CssMode=%s 1XRegStatus=%s DORegStatus=%s 1XRegEnabled=%s DORegEnabled=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    IO, uint32, base=enum:CssIOMsg
    MsgId, uint32, base=enum:CssMsgId
    Result, uint32
    1XSt, uint8, base=enum:IratST
    DOSt, uint8, base=enum:IratST
    1XAction, uint8, base=enum:Irat1XAction
    DOAction, uint8, base=enum:IratDOAction
    1XSvcSt, uint8, base=enum:CssSvcPhase
    DOSvcSt, uint8, base=enum:CssSvcPhase
    CdmaOnlyMode, uint8,
    CssMode, uint8, base=enum:Hybrid/1X Only/DO Only
    1XRegStatus, uint8, base=enum:FALSE/TRUE
    DORegStatus, uint8, base=enum:FALSE/TRUE
    1XRegEnabled, uint8, base=enum:FALSE/TRUE
    DORegEnabled, uint8, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP IRAT 1XState Rsp
    printformat , 1,  1, CP IRAT 1XState Rsp , N=%d, <systime>  CP IRAT 1XState Old1XSt=%s New1XSt=%s DOSt=%s 1XAction=%s DOAction=%s IRATMode=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Old1XSt, uint32, base=enum:IratST
    New1XSt, uint32, base=enum:IratST
    DOSt, uint32, base=enum:IratST
    1XAction, uint32, base=enum:Irat1XAction
    DOAction, uint32, base=enum:IratDOAction
    IRATMode, uint32, base=enum:IratMODE
End

Begin Message, CP Trace CP IRAT DOState Rsp
    printformat , 1,  1, CP IRAT DOState Rsp , N=%d, <systime>  CP IRAT DOState OldDOSt=%s NewDOSt=%s 1XSt=%s 1XAction=%s DOAction=%s IRATMode=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    OldDOSt, uint32, base=enum:IratST
    NewDOSt, uint32, base=enum:IratST
    1XSt, uint32, base=enum:IratST
    1XAction, uint32, base=enum:Irat1XAction
    DOAction, uint32, base=enum:IratDOAction
    IRATMode, uint32, base=enum:IratMODE
End

Begin Message, CP Trace CP IRAT 1XAction Rsp
    printformat , 1,  1, CP IRAT 1XAction Rsp , N=%d, <systime>  CP IRAT 1XAction 1XPreAct=%s 1XNewAct=%s DOAct=%s 1XSt=%s DOSt=%s IRATMode=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    1XPreAct, uint32, base=enum:Irat1XAction
    1XNewAct, uint32, base=enum:Irat1XAction
    DOAct, uint32, base=enum:IratDOAction
    1XSt, uint32, base=enum:IratST
    DOSt, uint32, base=enum:IratST
    IRATMode, uint32, base=enum:IratMODE
End

Begin Message, CP Trace CP IRAT DOAction Rsp
    printformat , 1,  1, CP IRAT DOAction Rsp , N=%d, <systime>  CP IRAT DOAction DOPreAct=%s DONewAct=%s 1XAct=%s 1XSt=%s DOSt=%s IRATMode=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    DOPreAct, uint32, base=enum:IratDOAction
    DONewAct, uint32, base=enum:IratDOAction
    1XAct, uint32, base=enum:Irat1XAction
    1XSt, uint32, base=enum:IratST
    DOSt, uint32, base=enum:IratST
    IRATMode, uint32, base=enum:IratMODE
End

Begin Message, CP Trace CP IRAT Command Pend Rsp
    printformat , 1,  1, CP IRAT Command Pend Rsp , N=%d, <systime>  CP IRAT Command Pend action=%s msg=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    action, uint32, base=enum:Pend/Handle/Reset
    msg, uint32, base=enum:CssMsgId
End

Begin Message, CP Trace CP IRAT DO Session Event Rsp
    printformat , 1,  1, CP IRAT DO Session Event Rsp , N=%d, <systime>  CP IRAT DO Session Event Session=%s 1XSt=%s DOSt=%s 1XAction=%s DOAction=%s IRATMode=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Session, uint32, base=enum:Open/Close/fail
    1XSt, uint32, base=enum:IratST
    DOSt, uint32, base=enum:IratST
    1XAction, uint32, base=enum:Irat1XAction
    DOAction, uint32, base=enum:IratDOAction
    IRATMode, uint32, base=enum:IratMODE
End

Begin Message, CP Trace CP IRAT Global Para Rsp
    printformat , 1,  1, CP IRAT Global Para Rsp , N=%d, <systime>  CP IRAT Global Para 1XAction=%s DOAction=%s IRATMode=%s 1XSt=%s DOSt=%s RegEnable=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    1XAction, uint32, base=enum:Irat1XAction
    DOAction, uint32, base=enum:IratDOAction
    IRATMode, uint32, base=enum:IratMODE
    1XSt, uint32, base=enum:IratST
    DOSt, uint32, base=enum:IratST
    RegEnable, uint32
End

Begin Message, CP Trace CP IRAT MCC Rsp
    printformat , 1,  1, CP IRAT MCC Rsp , N=%d, <systime>  CP IRAT MCC current=%s expect=%s IRATMode=%s 1XSt=%s DOSt=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    currentMCC, uint32,
    expectMCC, uint32,
    IRATMode, uint32, base=enum:IratMODE
    1XSt, uint32, base=enum:IratST
    DOSt, uint32, base=enum:IratST
End

Begin Message, CP Trace CP IRAT 1X Srlte Scanning Type Rsp
    printformat , 1,  1, CP IRAT 1X Srlte Scanning Type Rsp , N=%d, <systime>  CP IRAT 1X Srlte Scanning Type Old1XScanType=%s new1XScanType=%s DOScanType=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Old1XScanType, uint32, base=enum:CssPSSITypeT
    new1XScanType, uint32, base=enum:CssPSSITypeT
    DOScanType, uint32, base=enum:CssPSSITypeT
End

Begin Message, CP Trace CP IRAT DO Srlte Scanning Type Rsp
    printformat , 1,  1, CP IRAT DO Srlte Scanning Type Rsp , N=%d, <systime>  CP IRAT DO Srlte Scanning Type OldDOScanType=%s newDOScanType=%s 1XScanType=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    OldDOScanType, uint32, base=enum:CssPSSITypeT
    newDOScanType, uint32, base=enum:CssPSSITypeT
    1XScanType, uint32, base=enum:CssPSSITypeT
End

Begin Message, CP Trace CP MMC CMD MBOX MSG Trace Rsp
    printformat , 1, 1, CP MMC CMD MBOX MSG, N=%d, <systime>  CP - MMC Message %s received at mailbox for %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg ID, uint32, base=enum:MMC MBox Msg
    Msg Size, uint32, base=16
End

Begin Message, CP Trace CP MMC ENGINE MESSAGE ID Rsp
    printformat , 1, 1, CP MMC ENGINE, N=%d, <systime>  CP - MMC Message %s received for engine core
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg ID, uint32, base=enum:MMC MBox Msg
End

Begin Message, CP Trace CP MMC MBIM MSG ID TRACE Rsp
    printformat , 1, 1, CP MMC MBIM Message, N=%d, <systime>  CP - MMC MBIM Message %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg ID, uint32, base=enum:MMC MBIM Msg
End

Begin Message, CP Trace CP MMC TIMER START Trace Rsp
    printformat , 1, 1, CP MMC TIMER START, N=%d, <systime> CP - MMC Timer %s start for %d msec, it was %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Timer Source, uint32, base=enum:MMC Timer Src Type
    Duration(ms), uint32, base=10
    Active Status, uint32, base=enum:MMC Timer State Type
End

Begin Message, CP Trace CP MMC TIMER STOP Trace Rsp
    printformat , 1, 1, CP MMC TIMER STOP, N=%d, <systime>  CP - MMC Timer %s stops it was %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Timer Source, uint32, base=enum:MMC Timer Src Type
    Active Status, uint32, base=enum:MMC Timer State Type
End

Begin Message, CP Trace CP MMC TIMER EXPIRED Trace Rsp
    printformat , 1, 1, CP MMC TIMER EXPIRED, N=%d, <systime>  CP - MMC Timer %s stops
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Timer Source, uint32, base=enum:MMC Timer Src Type
End

Begin Message, CP Trace CP MMC PKT MESSAGE ID Rsp
    printformat , 1, 1, CP MMC PKT MESSAGE ID, N=%d, <systime>  CP - MMC PKT received message %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PKT msg, uint32, base=enum:MMC PKT Msg Id
End

Begin Message, CP Trace CP MMC PKT STATE TRANSITION MSG Trace Rsp
    printformat , 1, 1, CP MMC PKT STATE TRANSITION MSG, N=%d, <systime>  CP - MMC current state %s, triggered by event %s, next state %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State1, uint32, base=enum:MMC Pkt State
    Event, uint32, base=enum:MMC Pkt Event
    State2, uint32, base=enum:MMC Pkt State
End

Begin Message, CP Trace CP MMC PKT PS STATE IND Trace Rsp
    printformat , 1, 1, CP MMC PKT PS STATE IND, N=%d, <systime>  CP - PKT rcved State Indication from %s action of %s to %s srv ntwrk %s trgt ntwrk %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Module, uint32,    base=enum:Module Name Id
    State, uint32,    base=enum:HO State Ind Type
    ho to, uint32,    base=enum:PS Type
    serving, uint32,    base=enum:PS Type
    target, uint32,	base=enum:PS Type
End

Begin Message, CP Trace CP MMC PKT PS STATUS IND Trace Rsp
    printformat , 1, 1, CP MMC PKT PS STATUS IND, N=%d, <systime>  CP - MMC rcved status change indication of %s from network %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Cause, uint32,      base=enum:Status Cause
    Svc Type, uint32,      base=enum:PS Type
End

Begin Message, CP Trace CP MMC PKT PS REQ Trace Rsp
    printformat , 1, 1, CP MMC PKT PS REQ, N=%d, <systime>  CP - MMC %s module send PS REQ to network %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Module, uint32,  base=enum:Module Name Id
    PS type, uint32,  base=enum:PS Type
End

Begin Message, CP Trace CP MMC PKT AP CALL SETUP Trace Rsp
    printformat , 1, 1, CP MMC PKT AP CALL SETUP, N=%d, <systime>  CP - AP Set up a data call at %s %s with PDNid %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PS type, uint32,  base=enum:PS Type
    Prefer mode, uint32,  base=enum:ONLY/PREFERRED
    PDN id, uint32,  base=10
End

Begin Message, CP Trace CP MMC PKT AP DEDICATED BEARER SETUP Trace Rsp
    printformat , 1, 1, CP MMC PKT AP DEDICATED BEARER SETUP, N=%d, <systime>  CP - AP set up dedicated bearer PDN id %d, Bearer Id %d, %d of them is valid serving PS
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDNid, uint32
    Bearerid, uint32
    ValidNum, uint32
    PS type, uint32,  base=enum:PS Type
End

Begin Message, CP Trace CP MMC PKT DATA CMD RSP Trace Rsp
    printformat , 1, 1, CP MMC PKT DATA CMD RSP, N=%d, <systime>  CP - MMC received from %s a response of %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    modem, uint32,    base=enum:Modem Name Id
    resp, uint32,    base=enum:Modem Data State Type
End

Begin Message, CP Trace CP MMC PKT DEFAULT BEARER RSP Trace Rsp
    printformat , 1, 1, CP MMC PKT DEFAULT BEARER RSP, N=%d, <systime>  CP - MMC received defult bearer rsp from %s PDNid=%d status=%s Error=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    modem, uint32,  	base=enum:Modem Name Id
    Pdn, uint32,    base=10
    Status, uint32,    base=enum:Bearer Status Type
    ErrCode, uint32,    base=enum:Bearer Error Code Type
End

Begin Message, CP Trace CP MMC PKT DEDICATED BEARER IND Trace Rsp
    printformat , 1, 1, CP MMC PKT DEDICATED BEARER IND, N=%d, <systime>  CP - Dedicated bearer indicated by %s PDN id %d, Bearer Id %d, %d of them is valid
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    modem, uint32,  	base=enum:Modem Name Id
    PDNid, uint32
    Bearerid, uint32
    ValidNum, uint32
End

Begin Message, CP Trace CP MMC PKT DEDICATED BEARER RSP Trace Rsp
    printformat , 1, 1, CP MMC PKT DEDICATED BEARER RSP, N=%d, <systime>  CP - Dediecated bearer setup response from %s PDNid %d BearerId %d Status %s Error Code %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    modem, uint32,  	base=enum:Modem Name Id
    PDNid, uint32
    Bearerid, uint32
    Status, uint32,    base=enum:Bearer Status Type
    ErrCode, uint32,    base=enum:Bearer Error Code Type
End

Begin Message, CP Trace CP MMC PKT BEARER DISCONNECT RSP Trace Rsp
    printformat , 1, 1, CP MMC PKT BEARER DISCONNECT RSP, N=%d, <systime>  CP - PDN Disconnect response from %s PDNid %d BearerId %d Status %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    modem, uint32,  	base=enum:Modem Name Id
    PDNid, uint32
    Bearerid, uint32
    Status, uint32,    base=enum:success/no prior connection
End

Begin Message, CP Trace CP MMC PKT BEARER DISCONNECT IND Trace Rsp
    printformat , 1, 1, CP MMC PKT BEARER DISCONNECT IND, N=%d, <systime>  CP - PDN disconnected by network from %s PDNid %d BearerID %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    modem, uint32,  	base=enum:Modem Name Id
    PDNid, uint32
    Bearerid, uint32
End

Begin Message, CP Trace CP MMC PKT BEARER DETACH RSP Trace Rsp
    printformat , 1, 1, CP MMC PKT BEARER DETACH RSP, N=%d, <systime>  CP - HLP received 1X-RLP inactivity time out
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    modem, uint32,  	base=enum:Modem Name Id
    Status, uint32,    base=enum:success/no prior connection
End

Begin Message, CP Trace CP MMC PKT HRPD1X CONNECT RSP Trace Rsp
    printformat , 1, 1, CP MMC PKT HRPD1X CONNECT RSP, N=%d, <systime>  CP - %s connected %s local IP 0x%08X, remote IP 0x%08X, MTU size %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    network, uint32,  base=enum:PS Type
    Reseult, uint32,  base=enum:HRPD1X Connect Status Type
    Local Addr, uint32
    Remoet Addr, uint32
    MTU size, uint32
End

Begin Message, CP Trace CP MMC PKT DUPLICATED PDN ATTACH Trace Rsp
    printformat , 1, 1, CP MMC PKT DUPLICATED PDN ATTACH, N=%d, <systime>  CP - Received duplicated attach for PDNid %d, its current status %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDNid, uint32
    status, uint32,    base=enum:PDN Status Trace Type
End

Begin Message, CP Trace CP MMC PKT BUFFERED PS CONN Trace Rsp
    printformat , 1, 1, CP MMC PKT BUFFERED PS CONN, N=%d, <systime>  CP - MMC received HRPD1X connect req at %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32,   base=enum:HRPD1X State
End

Begin Message, CP Trace CP MMC PKT SET PDN STATUS Trace Rsp
    printformat , 1, 1, CP MMC PKT SET PDN STATUS, N=%d, <systime>  CP - MMC Set PDN status at table index %d, PDN id %d with status %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    index, uint32
    PDNid, uint32
    status, uint32,    base=enum:PDN Status Trace Type
End

Begin Message, CP Trace CP MMC PKT DETACH REQ Trace Rsp
    printformat , 1, 1, CP MMC PKT DETACH REQ, N=%d, <systime>  CP - AP request detaching, State Ind HO is from %s, PS REQ is from %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    StateInd, uint32, base=enum:Module Name Id
    PsReq, uint32, base=enum:Module Name Id
End

Begin Message, CP Trace CP MMC PKT SET SERVING NETWORK TRACE Rsp
    printformat , 1, 1, CP MMC PKT SET SERVING NETWORK TRACE, N=%d, <systime>  CP - MMC Set Service Type to %s from %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurrentSvc, uint32,      base=enum:PS Type
    PriorSvc, uint32,      base=enum:PS Type
End

Begin Message, CP Trace CP MMC LTE PKT DATA CMD Trace Rsp
    printformat , 1, 1, CP MMC LTE PKT DATA CMD, N=%d, <systime>  CP - MMC PKT send %s command to LTE
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Data Cmd, uint32, base=enum:Data Cmd Type
End

Begin Message, CP Trace CP MMC CDMA PKT DATA CMD Trace Rsp
    printformat , 1, 1, CP MMC CDMA PKT DATA CMD, N=%d, <systime>  CP - MMC PKT send %s command to CDMA
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Data Cmd, uint32, base=enum:Data Cmd Type
End

Begin Message, CP Trace CP MMC PKT HO CNF Trace Rsp
    printformat , 1, 1, CP MMC PKT HO CNF, N=%d, <systime>  CP - MMC PKT sends HO CNF with argument of %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    cause, uint32, base=enum:Ho Cnf Type
    moduleN, uint32, base=enum:Module Name Id
End

Begin Message, CP Trace CP MMC RPC LTE PKT DATACMD REQ Trace Rsp
    printformat , 1, 1, CP MMC RPC LTE PKT DATACMD REQ, N=%d, <systime>  CP - MMC PKT sends data command %s to LTE into RPC
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Data Cmd, uint32, base=enum:Data Cmd Type
End

Begin Message, CP Trace CP MMC RPC LTE PKT DEFAULT BEARER REQ Rsp
    printformat , 1, 1, CP MMC RPC LTE PKT DEFAULT BEARER REQ, N=%d, <systime>  CP - MMC PKT sends LTE attach request for PDNid #d, %s with APN len=%d to RPC
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDN Id, uint32
    Attach, uint32, base=enum:Attach Type
End

Begin Message, CP Trace CP MMC RPC LTE PKT DEDICATED BEARER REQ Rsp
    printformat , 1, 1, CP MMC RPC LTE PKT DEDICATED BEARER REQ, N=%d, <systime>  CP - MMC PKT sends LTE dedicated bearer request for PDNid %d, Bearer Id %d, %d of valid profiles, 1st profile ID %d to RPC
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDN Id, uint32
    Bearer Id, uint32
    Num Profile, uint32
    First Id, uint32
End

Begin Message, CP Trace CP MMC RPC LTE PKT BEARER DISCONNECT REQ Rsp
    printformat , 1, 1, CP MMC RPC LTE PKT BEARER DISCONNECT REQ, N=%d, <systime>  CP - MMC PKT requests LTE to disconnect bearer for PDNid %d, Bearer Id %d, default bearer=%s to RPC
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDN Id, uint32
    Bearer Id, uint32
    Default Bearer, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP MMC RPC LTE PKT BEARER DETACH REQ Rsp
    printformat , 1, 1, CP MMC RPC LTE PKT BEARER DETACH REQ, N=%d, <systime>  CP - MMC PKT requests LTE to detach all bearers to RPC
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP MMC RPC PKT LTE DATACMD RSP Rsp
    printformat , 1, 1, CP MMC RPC PKT LTE DATACMD RSP, N=%d, <systime>  CP - MMC PKT recived LTE data command response %s from RPC
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    resp, uint32,    base=enum:Modem Data State Type
End

Begin Message, CP Trace CP MMC RPC PKT LTE DEFAULT BEARER RSP Rsp
    printformat , 1, 1, CP MMC RPC PKT LTE DEFAULT BEARER RSP, N=%d, <systime>  CP - MMC PKT recived LTE default bearer attach response of PDNid %d, ErrCode %s, status %s from RPC
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDN id, uint32
    Error Code, uint32,  base=enum:PDNErrCode Type
    Status, uint32,  base=enum:APStatus Type
End

Begin Message, CP Trace CP MMC RPC PKT LTE DEDICATED BEARER RSP Rsp
    printformat , 1, 1, CP MMC RPC PKT LTE DEDICATED BEARER RSP, N=%d, <systime>  CP - MMC PKT recived LTE dedicated bearer setup response of PDNid %d, BearerId %d, ErrCode %s, status %s from RPC
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDN id, uint32
    Bearer Id, uint32
    Error Code, uint32,  base=enum:PDN ErrCode Type
    Status, uint32,  base=enum:AP Status Type
End

Begin Message, CP Trace CP MMC RPC PKT LTE DEDICATED BEARER IND Rsp
    printformat , 1, 1, CP MMC RPC PKT LTE DEDICATED BEARER IND, N=%d, <systime>  CP - MMC PKT recived LTE dedicated bearer setup response of PDNid %d, BearerId %d from RPC
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDN id, uint32
    Bearer Id, uint32
End

Begin Message, CP Trace CP MMC RPC PKT LTE BEARER_DISCON RSP Rsp
    printformat , 1, 1, CP MMC RPC PKT LTE BEARER_DISCON RSP, N=%d, <systime>  CP - MMC PKT recived LTE bearer disconnect response of PDNid %d, status %s from RPC
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDN id, uint32
    Status, uint32, base=enum:No existing connection/successful
End

Begin Message, CP Trace CP MMC RPC PKT LTE BEARER_DISCON IND Rsp
    printformat , 1, 1, CP MMC RPC PKT LTE BEARER_DISCON IND, N=%d, <systime>  CP - MMC PKT recived LTE bearer disconnect indication of PDNid %d from RPC
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDN id, uint32
End

Begin Message, CP Trace CP MMC RPC PKT LTE BEARER DETACH RSP Rsp
    printformat , 1, 1, CP MMC RPC PKT LTE BEARER DETACH RSP, N=%d, <systime>  CP - MMC PKT recived LTE bearer detach response of PDNid %d and status %s from RPC
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDN id, uint32
    Status, uint32, base=enum:No existing connection/successful
End

Begin Message, CP Trace CP MMC RPC PKT LTE SET PDN TABLE REQ Rsp
    printformat , 1, 1, CP MMC RPC PKT LTE SET PDN TABLE REQ, N=%d, <systime>  CP - MMC PKT set PDN Table to other RAT.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP MMC PKT SET UPCOMING ATTACH TYPE Rsp
    printformat , 1, 1, CP MMC PKT SET UPCOMING ATTACH TYPE, N=%d, <systime>  CP - MMC PKT set upcoming attach type to be %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Attach, uint32, base=enum:Attach Type
End

Begin Message, CP Trace CP MMC PKT GET UPCOMING ATTACH TYPE Rsp
    printformat , 1, 1, CP MMC PKT SET UPCOMING ATTACH TYPE, N=%d, <systime>  CP - MMC PKT upcoming attach type is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Attach, uint32, base=enum:Attach Type
End

Begin Message, CP Trace CP MMC MMC_MEAS_MGR_TRACE Rsp
    printformat , 1, 1, CP MMC MMC_MEAS_MGR, N=%d, <systime>  CP - - Event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:MmcMsgIDT
End

Begin Message, CP Trace CP MMC MMC_MEAS_MGR_CMD_RCD_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MGR_CMD_RCD, N=%d, <systime>  CP - - Event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:MmcMsgIDT
End

Begin Message, CP Trace CP MMC MMC_MEAS_MGR_CMD_TXD_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MGR_CMD_TXD, N=%d, <systime>  CP - MMC msg type %s, Tx dir %s, Msg Length %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgType, uint32, base=enum:MmcMsgEtsT
    TxDirection, uint32, base=enum:TxDirectionT
    MsgLength, uint32, base=10
End

Begin Message, CP Trace CP MMC MMC_MEAS_MGR_INVALID_SYSTEM_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MGR_INVALID_SYSTEM, N=%d, <systime>  CP - MMC msg type %s, System type %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgType, uint32, base=enum:MmcMsgIDT
    SystemType, uint32,  base=enum:MmcSystemTypeT
End

Begin Message, CP Trace CP MMC MMC_MEAS_MGR_EVENT_POSTING_FAILED_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MGR_EVENT_POSTING_FAILED, N=%d, <systime>  CP - MMC msg type %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgType, uint32, base=enum:MmcMsgIDT
End

Begin Message, CP Trace CP MMC MMC_MEAS_MGR_MAX_NUM_EXCEEDED_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MGR_MAX_NUM_EXCEEDED, N=%d, <systime>  CP - index %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Index, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_MGR_EVENT_HANDLING_FAILED_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MGR_EVENT_HANDLING_FAILED, N=%d, <systime>  CP - Event %d SytemType %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint16
    SystemType, uint8
End

Begin Message, CP Trace CP MMC MMC_MEAS_INVALID_TIMER_EXP_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_INVALID_TIMER_EXP, N=%d, <systime>  CP - Timer %s, Timer State = %s, Timer Start Value = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimerId, uint32, base=enum:MMC Timer Src Type
    TimerState, uint32, base=enum:MMC Timer State Type
    TimerStartValue, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_CDMA_IRAT_MEAS_RESULT_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_CDMA_IRAT_MEAS_RESULT, N=%d, <systime>  CP - Result index %d, Results from %s, CDMA result status %s, CDMA sys type %s, Cgi Available %d, Cgi %d, Band %d, Channel %d, Total Num of PN %d, Strength of first PN %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ResultNum, uint32
    SystemType, uint32,  base=enum:MmcSystemTypeT
    Result, uint32,  base=enum:MmcCdmaMeasResultT
    CdmaSystemType, uint32, base=enum:MmcCdmaTypeT
    CgiAvail, uint32
    Cgi, uint32
    Band, uint32
    Channel, uint32
    NumPn, uint32
    FirstPnStrength, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_SYS_CHANGE_RSP_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_SYS_CHANGE_RSP, N=%d, <systime>  CP - Sys Change Response Result %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Result, uint32, base=enum:MmcIratStatusT
End

Begin Message, CP Trace CP MMC MMC_MEAS_CDMA_SIB8_MEAS_RESULT_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_CDMA_SIB8_MEAS_RESULT, N=%d, <systime>  CP - SIB8 Meas Result Status %s, CDMA sys type %s, Total num of Cells in list %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ResultStatus, uint32, base=enum:MmcCdmaMeasResultT
    CdmaSystemType, uint32, base=enum:MmcCdmaTypeT
    ListSize, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_CDMA_SIB8_MEAS_RESULT_CELL_LIST_TRACE Rsp
    printformat , 1, 1, MMC_MEAS_CDMA_SIB8_MEAS_RESULT_CELL_LIST, N=%d, <systime>  CP - Result index %d, Cgi available %d, Cgi %d, Band %d, Channel %d, Total Num of PN %d, first PN %d, Phase of first PN %d, Strength of first PN %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ResultNum, uint32
    CgiAvail, uint32
    Cgi, uint32
    Band, uint32
    Channel, uint32
    NumPn, uint32
    FirstPn, uint32
    FirstPnPhase, uint32
    FirstPnStrength, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_LTE_PS_REG_REQ_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_LTE_PS_REG_REQ, N=%d, <systime>  CP - Earfcn %d, PLMN Id %d, Cell Id %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Earfcn, uint32
    PlmnId, uint32
    CellId, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_LTE_MEAS_REQ_FROM_CDMA_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_LTE_MEAS_REQ_FROM_CDMA, N=%d, <systime>  CP - Result index %d, Earfcn to be measured %d, RxLevMinEutra %d, RxLevMinEutraOffset %d, PeMax %d, MeasBandWidth %d, Total Num of PLMN %d, First PLMN Id %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ResultNum, uint32
    Earfcn, uint32
    RxLevMinEutra, uint32
    RxLevMinEutraOffset, uint32
    PeMax, uint32
    MeasBandWidth, uint32
    NumPlmn, uint32
    FirstPlmnId, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_LTE_RESEL_MEAS_REQ_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_LTE_RESEL_MEAS_REQ, N=%d, <systime>  CP - Earfcn %d, PLMN Id %d, Cell Id %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Earfcn, uint32
    PlmnId, uint32
    CellId, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_CDMA_BAND_INFO_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_CDMA_BAND_INFO, N=%d, <systime>  CP - CDMA System type %s, Cell to report CGI %d, Band to be measured %d, Channel %d, SearchWinSize %d, NumPn %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CdmaSystemType, uint32, base=enum:MmcCdmaTypeT
    Band, uint32
    Channel, uint32
    SearchWinSize, uint32
    NumPn, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_CDMA_PN_ID_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_CDMA_PN_ID, N=%d, <systime>  CP - PN index is %d, CDMA PN identity is %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PnIdx, uint32
    PnIdentity, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_CDMA_MEAS_SIB8_REQ_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_CDMA_MEAS_SIB8_REQ, N=%d, <systime>  CP - CDMA System type %s, SearchWinSize %d, Num of cells %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CdmaSystemType, uint32, base=enum:MmcCdmaTypeT
    SearchWinSize, uint32
    NumOfCells, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_CDMA_MEAS_SIB8_REQ_CELL_LIST_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_CDMA_MEAS_SIB8_REQ_CELL_LIST, N=%d, <systime>  CP - Cell req index %d, Band %d, Channel %d, Cell Resel Prio %d, Total Num of PN %d, first PN Id %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CellNum, uint32
    Band, uint32
    Channel, uint32
    CellReselPrio, uint32
    NumPn, uint32
    FirstPn, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_CDMA_TRIGGER_PS_REG_FREQ_REQ_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_CDMA_TRIGGER_PS_REG_FREQ_REQ, N=%d, <systime>  CP - Band %d, Channel %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Band, uint32
    Channel, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_MLC_CMD_RCD_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MLC_CMD_RCD, N=%d, <systime>  CP - Event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:MmcMeasMlcIncomingEventsT
    MlcState, uint8,  base=enum:MmcMeasMlcStatesT
End

Begin Message, CP Trace CP MMC MMC_MEAS_MLC_INVALID_EVENT_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MLC_INVALID_EVENT, N=%d, <systime>  CP - Invalid Event Type %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CmdType, uint32, base=enum:MmcMeasMlcIncomingEventsT
End

Begin Message, CP Trace CP MMC MMC_MEAS_MLC_EVENT_HANDLING_FAILED_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MLC_EVENT_HANDLING_FAILED, N=%d, <systime>  CP - param1= %d, param2= %d, param3= %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    param1, uint32
    param2, uint32
    param3, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_MLC_EVENT_PARAMS_NULL_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MLC_EVENT_PARAMS_NULL, N=%d, <systime>  CP - Null params received in function %s, param1 pointer= %d, param2 pointer= %d, param3 pointer= %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FuncName, uint32, base=enum:MmcMeasMlcFuncT
    param1, uint32
    param2, uint32
    param3, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_MLC_RESEL_CRITERIA_NOT_MET_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MLC_RESEL_CRITERIA_NOT_MET, N=%d, <systime>  CP - param1 = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    param1, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_MLC_BSR_SCAN_ON_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MLC_BSR_SCAN_ON, N=%d, <systime>  CP - MLC state is %s, LTE meas pointer = %d, Num of LTE cells to be measured = %d, SystemType= %d, MeasAct = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MlcState, uint32, base=enum:MmcMeasMlcStatesT
    LteMeasPtr, uint32
    NumLteCellTobeMeas, uint32
    SystemType, uint32
    MeasAct, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_MCC_CMD_RCD_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MCC_CMD_RCD, N=%d, <systime>  CP -- Event %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CmdType, uint32, base=enum:MmcMeasMccIncomingEventsT
    MccState, uint8,  base=enum:MmcMeasMccStatesT
End

Begin Message, CP Trace CP MMC MMC_MEAS_MCC_INVALID_EVENT_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MCC_INVALID_EVENT, N=%d, <systime>  CP - Invalid Event Type %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CmdType, uint32, base=enum:MmcMeasMccIncomingEventsT
End

Begin Message, CP Trace CP MMC MMC_MEAS_MCC_INVALID_CMD_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MCC_INVALID_CMD, N=%d, <systime>  CP - Invalid Command Type %s, param1= %d, MCC state %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CmdType, uint32, base=enum:MmcMeasMccIncomingEventsT
    param1, uint32
    MccState, uint32, base=enum:MmcMeasMccStatesT
End

Begin Message, CP Trace CP MMC MMC_MEAS_MCC_EVENT_PARAMS_NULL_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MCC_EVENT_PARAMS_NULL, N=%d, <systime>  CP - Null params received in function %s, param1 pointer= %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FuncName, uint32, base=enum:MmcMeasMccFuncT
    param1, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_MCC_EVENT_PARAMS_INVALID_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MCC_EVENT_PARAMS_INVALID, N=%d, <systime>  CP - Null params received in function %s, param1= %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CmdType, uint32, base=enum:MmcMeasMccIncomingEventsT
    param1, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_MCC_MAX_NUM_EXCEEDED_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MCC_MAX_NUM_EXCEEDED, N=%d, <systime>  CP - Max num exceeded in %s, param1= %d, MCC state %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CmdType, uint32, base=enum:MmcMeasMccIncomingEventsT
    param1, uint32
    MccState, uint32, base=enum:MmcMeasMccStatesT
End

Begin Message, CP Trace CP MMC MMC_MEAS_MCC_BSR_SCAN_ON_TRACE Rsp
    printformat , 1, 1, CP MMC_MEAS_MCC_BSR_SCAN_ON, N=%d, <systime>  CP - MCC state is %s, param1= %d, param2= %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MccState, uint32, base=enum:MmcMeasMccStatesT
    param1, uint32
    param2, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_CMD_RECEIVE_TRACE Rsp
    printformat , 1, 1,CP MMC_MEAS_CMD_RECEIVE_TRACE, N=%d, <systime>  CP - event %s, state is %s, Target is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Target, uint32, base=enum:MmcSystemTypeT
    Event, uint32, base=enum:MmcMeasGbIncomingEventsT
    State, uint32, base=enum:MmcMeasRatStateT
End

Begin Message, CP Trace CP MMC MMC_MEAS_EVENT_PARAM_NULL_TRACE Rsp
    printformat , 1, 1,CP MMC_MEAS_EVENT_PARAM_NULL_TRACE, N=%d, <systime>  CP - event %s, Target is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:MmcMeasGbIncomingEventsT
    Target, uint32, base=enum:MmcSystemTypeT
End

Begin Message, CP Trace CP MMC MMC_MEAS_MAX_NUM_EXCEED_TRACE Rsp
    printformat , 1, 1,CP MMC_MEAS_MAX_NUM_EXCEED_TRACE, N=%d, <systime>  CP - event %s,parm=%d,state=%s, Target is %s,SourceRat is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:MmcMeasGbIncomingEventsT
    param, uint32
    State, uint32, base=enum:MmcMeasRatStateT
    Target, uint32, base=enum:MmcSystemTypeT
    Source, uint32, base=enum:GmssRatId
End

Begin Message, CP Trace CP MMC MMC_MEAS_IVALID_EVENT_TRACE Rsp
    printformat , 1, 1,CP MMC_MEAS_IVALID_EVENT_TRACE, N=%d, <systime>  CP - event %s, Target is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:MmcMeasGbIncomingEventsT
    Target, uint32, base=enum:MmcSystemTypeT
End

Begin Message, CP Trace CP MMC MMC_MEAS_EVENT_PARAMS_INVALID_TRACE Rsp
    printformat , 1, 1,CP MMC_MEAS_EVENT_PARAMS_INVALID_TRACE, N=%d, <systime>  CP - event %s,parm=%d,Target is %s,SourceRat is %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Event, uint32, base=enum:MmcMeasGbIncomingEventsT
    param, uint32
    Target, uint32, base=enum:MmcSystemTypeT
    Source, uint32, base=enum:GmssRatId
End

Begin Message, CP Trace CP MMC MMC_MEAS_MEAS_INFO_TRACE Rsp
    printformat , 1, 1,CP MMC_MEAS_MEAS_INFO_TRACE, N=%d, <systime>  CP - SourceRat is %s,Target is %s,period=%d, objNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Target, uint32, base=enum:MmcSystemTypeT
    Source, uint32, base=enum:GmssRatId
    period, uint32
    num, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_RESEL_MEAS_INFO_TRACE Rsp
    printformat , 1, 1,CP MMC_MEAS_RESEL_MEAS_INFO_TRACE, N=%d, <systime>  CP - index=%d,SourceRat is %s,Target is %s,period=%d, objNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    index, uint32
    Target, uint32, base=enum:MmcSystemTypeT
    Source, uint32, base=enum:GmssRatId
    period, uint32
    num, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_SYSTEM_CHANGE_TRACE Rsp
    printformat , 1, 1,CP MMC_MEAS_SYSTEM_CHANGE_TRACE, N=%d, <systime>  CP - ServingRat is %s,Target is %s,cause=%s, param1=%d,param2=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ServingRat, uint32, base=enum:MmcSystemTypeT
    Source, uint32, base=enum:GmssRatId
    Cause, uint32, base=enum:MmcSystemChangeCauseT
    param1, uint32
    param2, uint32
End

Begin Message, CP Trace CP MMC MMC_MEAS_HANDOVER_REQ_TRACE Rsp
    printformat , 1, 1,CP MMC_MEAS_HANDOVER_REQ_TRACE, N=%d, <systime>  CP - ServingRat is %s,Target is %s,cause=%s, param1=%d,param2=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ServingRat, uint32, base=enum:MmcSystemTypeT
    Source, uint32, base=enum:GmssRatId
    Cause, uint32, base=enum:MmcSystemChangeCauseT
    param1, uint32
    param2, uint32
End

Begin Message, CP Trace CP MMC GMSS MSG HANDLER Rsp
    printformat , 1, 1, CP MMC GMSS MSG HANDLER, N=%d, <systime>  CP - MMC GMSS MSG HANDLER msgId=%s GmssState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    msgId, uint32, base=enum:MMC MBox Msg
    GmssState, uint32, base=enum:GmssSt
End

Begin Message, CP Trace CP MMC GMSS ST CHG Rsp
    printformat , 1, 1, CP MMC GMSS ST CHG, N=%d, <systime>  CP - MMC GMSS ST CHG NewState=%s GmssState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NewState, uint32, base=enum:GmssSt
    GmssState, uint32, base=enum:GmssSt
End

Begin Message, CP Trace CP MMC GMSS UICC STATUS Rsp
    printformat , 1, 1, CP MMC GMSS UICC STATUS, N=%d, <systime>  CP - MMC GMSS UICC STATUS uiccState=%s PowerSt=%s PendedApReq=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    uiccState, uint32, base=enum:Psw Uim Card Status Enum
    PowerSt, uint32, base=enum:GmssPowerStatus
    PendedApReq, uint32, base=enum:MMC MBox Msg
End

Begin Message, CP Trace CP MMC GMSS PKT Rsp
    printformat , 1, 1, CP MMC GMSS PKT, N=%d, <systime>  CP - MMC GMSS PKT %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Handler, uint32, base=enum:GmssPktApiId,
    Rec, union, enum=Handler
End

Begin Message, CP MMC GMSS PKT HandlePktPsStatusCnfInitSt() Rsp
    Result, uint32, base=enum:MmcStatus
    HoPsType, uint32, base=enum:GmssPsType
    GmssAction, uint32, base=enum:GmssAct
    ModeSwitch, uint32, base=enum:GmssModeSwitch
End

Begin Message, CP MMC GMSS PKT HandlePktPsStatusCnfPSRegingSt() Rsp
    Result, uint32, base=enum:MmcStatus
    HoPsType, uint32, base=enum:GmssPsType
    GmssAction, uint32, base=enum:GmssAct
    TargetPsRat, uint32, base=enum:GmssRatId
    PktSendNoSvcMask, uint32, base=16
End

Begin Message, CP MMC GMSS PKT HandlePktPsRspInitSt() Rsp
    Result, uint32, base=enum:MmcStatus
    TargetPs, uint32, base=enum:GmssPsType
    GmssAction, uint32, base=enum:GmssAct
End

Begin Message, CP MMC GMSS PKT HandlePktPsRspPSRegingSt() Rsp
    Result, uint32, base=enum:MmcStatus
    TargetPs, uint32, base=enum:GmssPsType
    GmssAction, uint32, base=enum:GmssAct
End

Begin Message, CP MMC GMSS PKT HandlePktConnStatusInd() Rsp
    Status, uint32, base=enum:ConnFail/Reserved
End

Begin Message, CP MMC GMSS PKT mmcGmssSendPktPsStatusInd() Rsp
    TargetPsType, uint32, base=enum:GmssPsType
    HO Status, uint32, base=enum:HO State Ind Type
End

Begin Message, CP MMC GMSS PKT mmcGmssSendPktPsReq() Rsp
    TargetPsType, uint32, base=enum:GmssPsType
End

Begin Message, CP MMC GMSS PKT HandlePktCdmaDataStateInd() Rsp
    CDMADataState, uint8, base=enum:Modem Data State Type
    CDMADataActive, uint8
    GmssActionPended, uint32, base=enum:GmssAct
End

Begin Message, CP MMC GMSS PKT HandlePktRatDisablingPsRegingSt() Rsp
    Rat, uint32, base=enum:GmssRatId
    PktNoSvcMask, uint32, base=16
End

Begin Message, CP MMC GMSS PKT HandlePktRatDisablingMeasSt() Rsp
    Rat, uint32, base=enum:GmssRatId
    PktNoSvcMask, uint32, base=16
End

Begin Message, CP Trace CP MMC GMSS MEAS Rsp
    printformat , 1, 1, CP MMC GMSS MEAS, N=%d, <systime>  CP - MMC GMSS MEAS %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Handler, uint32, base=enum:GmssMeasApiId,
    Rec, union, enum=Handler
End

Begin Message, CP MMC GMSS MEAS HandleMeasStartInd() Rsp
    Cause, uint8, base=enum:MeasStartCause
End

Begin Message, CP MMC GMSS MEAS HandleMeasEndInd() Rsp
    Result, uint32, base=enum:MeasStatusResult
    RatType, uint32, base=enum:GmssRatId
    PsType, uint32, base=enum:GmssPsType
    PriClass, uint32, base=enum:Gmsspri
End

Begin Message, CP MMC GMSS MEAS HandleMeasBsrStartCnf() Rsp
    CnfResult, uint8, base=enum:MeasCnfResult
End

Begin Message, CP MMC GMSS MEAS HandleMeasBsrEndCnf() Rsp
End

Begin Message, CP MMC GMSS MEAS HandleMeasServingPsWeakInd() Rsp
    GmssState, uint32, base=enum:GmssSt
    GmssAction, uint32, base=enum:GmssAct
    CurPsType, uint32, base=enum:GmssPsType
End

Begin Message, CP MMC GMSS MEAS SendMeasStartCnf() Rsp
    Result, uint32, base=enum:MeasCnfResult
End

Begin Message, CP MMC GMSS MEAS SendMeasEndCnf() Rsp
End

Begin Message, CP MMC GMSS MEAS SendMeasBsrStartInd() Rsp
End

Begin Message, CP MMC GMSS MEAS SendMeasBsrEndInd() Rsp
    Result, uint32, base=enum:MeasStatusResult
    TargetPsType, uint32, base=enum:GmssPsType
End

Begin Message, CP MMC GMSS MEAS SendMeasSerPsWeakCnf() Rsp
    Result, uint32, base=enum:MeasStatusResult
    TargetPsType, uint32, base=enum:GmssPsType
End

Begin Message, CP MMC GMSS MEAS SendMeasPsStatusInd() Rsp
    TargetPsType, uint32, base=enum:GmssPsType
End

Begin Message, CP MMC GMSS MEAS SendMeasAbortReq() Rsp
End

Begin Message, CP Trace CP MMC GMSS DBM Rsp
    printformat , 1, 1, CP MMC GMSS DBM, N=%d, <systime>  CP - MMC GMSS DBM: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Id, uint32, base=enum:GmssDbmTraceId
    Rec, union, enum=Id
End

Begin Message, CP MMC GMSS DBM GMSS_DBM_MLPL_INFO Rsp
    index, uint32, base=10
    i, uint32, base=10
    LocParmType, uint32, base=16
    mcc, uint32, base=10
    MsplIndex, uint32, base=10
End

Begin Message, CP MMC GMSS DBM GMSS_DBM_STORED_INDEX Rsp
    StoredMsplIndex, uint32, base=10
    StoredBestMatch, uint32, base=10
End

Begin Message, CP MMC GMSS DBM GMSS_DBM_MSPL_INFO Rsp
    i, uint32, base=10
    NumMsplRecs, uint32, base=10
    MsplId, uint32, base=10
End

Begin Message, CP MMC GMSS DBM GMSS_DBM_MSPL_SCAN_LIST Rsp
    j, uint32, base=10
    RatId, uint32, base=enum:GmssRatId
    PriClass, uint32, base=enum:Gmsspri
End

Begin Message, CP MMC GMSS DBM GMSS_DBM_BSR_INFO Rsp
    CurrentRat, uint32, base=enum:GmssRatId
    CurrentPriClass, uint32, base=enum:Gmsspri
    MsplIndex, uint32, base=10
    i, uint32, base=10
    numMorePref, uint32, base=10
End

Begin Message, CP MMC GMSS DBM GMSS_DBM_BSR_LIST Rsp
    j, uint32, base=10
    RatId, uint32, base=enum:GmssRatId
    PriClass, uint32, base=enum:Gmsspri
    numEntries, uint32, base=10
    numMorePref, uint32, base=10
End

Begin Message, CP MMC GMSS DBM GMSS_DBM_ALTTECH_LIST Rsp
    i, uint32, base=10
    RatId, uint32, base=enum:GmssRatId
    PriClass, uint32, base=enum:Gmsspri
    numEntries, uint32, base=10
End

Begin Message, CP MMC GMSS DBM GMSS_DBM_MRU_LIST Rsp
    i, uint32, base=10
    RatId, uint32, base=enum:GmssRatId
    PriClass, uint32, base=enum:Gmsspri
    numEntries, uint32, base=10
End

Begin Message, CP MMC GMSS DBM GMSS_DBM_PS_MPREF Rsp
    List, uint32, base=enum:GmssScanListType
    newRat, uint32, base=enum:GmssRatId
    curPsRat, uint32, base=enum:GmssRatId
    newPri, uint32, base=enum:Gmsspri
    morePref, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP MMC GMSS DBM GMSS_DBM_PS_MPREF0 Rsp
    msplRat, uint32, base=enum:GmssRatId
    msplPri, uint32, base=enum:Gmsspri
    sysPri, uint32, base=10
    currSysPri, uint32, base=10
    newSysPri, uint32, base=10
    mostPrefAvail, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP MMC GMSS DBM GMSS_DBM_PS_MPREF_TARGET Rsp
    msplRat, uint32, base=enum:GmssRatId
    msplPri, uint32, base=enum:Gmsspri
    targetSysPri, uint32, base=10
    newSysPri, uint32, base=10
    morePref, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP MMC GMSS DBM GMSS_DBM_CS_MPREF Rsp
    List, uint32, base=enum:GmssScanListType
    newRat, uint32, base=enum:GmssRatId
    curCsRat, uint32, base=enum:GmssRatId
    newPri, uint32, base=enum:Gmsspri
    morePref, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP MMC GMSS DBM GMSS_DBM_CS_MPREF0 Rsp
    List, uint32, base=enum:GmssScanListType
    newRat, uint32, base=enum:GmssRatId
    curCsRat, uint32, base=enum:GmssRatId
    newPri, uint32, base=enum:Gmsspri
    morePref, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP MMC GMSS FUNCTION Rsp
    printformat , 1, 1, CP MMC GMSS FUNCTION, N=%d, <systime>  CP - MMC GMSS FUNCTION %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Handler, uint32, base=enum:GmssFunctionId,
    Rec, union, enum=Handler
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssValidatePsRat() Rsp
    newRat, uint32, base=enum:GmssRatId
    newPriClass, uint32, base=enum:Gmsspri
    Mcc, uint32, base=10
    InitScanAlgo, uint32, base=enum:GmssPrefScanModeType
    Result, uint32, base=enum:GmssValidationResult
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssValidateCsRat() Rsp
    ratAcqed, uint32, base=enum:GmssRatId
    priClass, uint32, base=enum:Gmsspri
    Mcc, uint32, base=10
    Result, uint32, base=enum:GmssValidationResult
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssActionSet() Rsp
    newAction, uint32, base=enum:GmssAct
    prevAction, uint32, base=enum:GmssAct
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssSaveApReq() Rsp
    MsgId, uint32, base=enum:MMC MBox Msg
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssStartScanRatList() Rsp
    listType, uint32, base=enum:GmssScanListType
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssControlGBsrScan() Rsp
    action, uint32, base=enum:GmssAct
    PsBsrTimerStatus, uint32, base=10
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssStartOpModeSwitch() Rsp
    newOpMode, uint32, base=enum:GmssopMode
    currentOpMode, uint32, base=enum:GmssopMode
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssStartCsService() Rsp
    MmcGmssCurCsRat, uint32, base=enum:GmssRatId
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssScanRatList() Rsp
    ListType, uint32, base=enum:GmssScanListType
    RatToScan, uint32, base=enum:GmssRatId
    index, uint32, base=10
    stopScan, uint32, base=enum:FALSE/TRUE
    NumStarted, uint32, base=10
    numInProgress, uint32, base=10
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssStartGBsrScan() Rsp
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssStartGmssScan() Rsp
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssRatLostScan() Rsp
    ratId, uint32, base=enum:GmssRatId
    numScan, uint32, base=10
    nextState, uint32, base=enum:GmssSt
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssStartRatFailureScan() Rsp
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssStartInitialOpMode() Rsp
    OpMode, uint32, base=enum:GmssopMode
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssStartPsSwitch() Rsp
    Act, uint32, base=enum:GmssAct
    psType, uint32, base=enum:GmssPsType
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssCompletePsSwitch() Rsp
    psType, uint32, base=enum:GmssPsType
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssStopRatOperation() Rsp
    actType, uint32, base=enum:GmssAct
    RatType, uint32, base=enum:GmssRatId
    CurPsRat, uint32, base=enum:GmssRatId
    TarPsRat, uint32, base=enum:GmssRatId
    CurCsRat, uint32, base=enum:GmssRatId
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssDeterminePsScanAction() Rsp
    Rat, uint32, base=enum:GmssRatId
    Result, uint32, base=enum:GmssValidationResult
    CurrentGmssSt, uint32, base=enum:GmssSt
    NextGmssSt, uint32, base=enum:GmssSt
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssConvGenRat() Rsp
    ReceivedRat, uint32, base=enum:GmssRatId
    ConvertedRat, uint32, base=enum:GmssRatId
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssSetActionPended() Rsp
    Prev Action, uint32, base=enum:GmssAct
    New Action, uint32, base=enum:GmssAct
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssCheckPendedAction() Rsp
    Pended Action, uint32, base=enum:GmssAct
End

Begin Message, CP MMC GMSS FUNCTION mmcGmssHandleRatNoServiceRsp() Rsp
    CurrentGmssSt, uint32, base=enum:GmssSt
    PktSendNoSvcMask, uint32, base=16
    Action, uint32, base=enum:GmssAct
End

Begin Message, CP MMC GMSS FUNCTION HandleRatNoServiceRspRegingSt() Rsp
    PktSendNoSvcMask, uint32, base=16
    PsRegStatus, uint32, base=enum:MmcStatus
    Action, uint32, base=enum:GmssAct
End

Begin Message, CP MMC GMSS FUNCTION HandleRatNoServiceRspMeasSt() Rsp
    PktSendNoSvcMask, uint32, base=16
    MeasStatus, uint32, base=enum:MeasStatusResult
    Action, uint32, base=enum:GmssAct
End

Begin Message, CP Trace CP MMC GMSS RAT API Rsp
    printformat , 1, 1, CP MMC GMSS RAT API, N=%d, <systime>  CP - MMC GMSS RAT API %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Handler, uint32, base=enum:GmssRatApiId
    Rec, union, enum=Handler
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiSendRatPowerUpReq() Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiSendRatPowerDownReq() Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiSendRatOnlyModeReq() Rsp
    RatId, uint32, base=enum:GmssRatId
    opMode, uint32, base=enum:GmssopMode
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiSendRatNoServiceReq() Rsp
    RatId, uint32, base=enum:GmssRatId
    Reason, uint32, base=enum:GmssNoSvcReason
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiSendEvdoDisableReq() Rsp
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiSendRatAcqReq() Rsp
    RatId, uint32, base=enum:GmssRatId
    Reason, uint32, base=enum:GmssAcqReason
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiSendRatPsRegReq() Rsp
    RatId, uint32, base=enum:GmssRatId
    PriClass, uint32, base=enum:Gmsspri
    AttachType, uint32, base=enum:Attach Type
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiSendRatMccSrchReq() Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiSendRatCsRegReq() Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiSendRatCellGlobalIdRsp() Rsp
    Requester, uint32, base=enum:GmssRatId
    TargetRat, uint32, base=enum:GmssRatId
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiRecvRatPowerStatusRsp() Rsp
    RatId, uint32, base=enum:GmssRatId
    Status, uint32, base=enum:PowerDown/PowerUp
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiRecvRatOnlyModeRsp() Rsp
    RatId, uint32, base=enum:GmssRatId
    priClass, uint32, base=enum:Gmsspri
    psType, uint32, base=enum:GmssPsType
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiRecvRatNoServiceRsp() Rsp
    RatId, uint32, base=enum:GmssRatId
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiRecvRatAcqRsp() Rsp
    RatId, uint32, base=enum:GmssRatId
    Result, uint32, base=enum:Acquired/Acq Failed/Rejected
    priClass, uint32, base=enum:Gmsspri
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiRecvRatPsRegRsp() Rsp
    RatId, uint32, base=enum:GmssRatId
    Result, uint32, base=enum:Registered/Acquired/Acq Failed/Rejected/AttachFailed
    PsType, uint32, base=enum:GmssPsType
    SysPri, uint32, base=enum:Gmsspri
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiRecvRatMccSrchRsp() Rsp
    RatId, uint32, base=enum:GmssRatId
    Mcc, uint32, base=10
    Mnc, uint32, base=10
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiRecvRatNwkStatusInd() Rsp
    RatId, uint32, base=enum:GmssRatId
    Status, uint32, base=enum:GmssRatCpSt
    Cause, uint32, base=enum:GmssNwkEvt,
    PriClass, uint32, base=enum:Gmsspri
    TargetPsType, uint32, base=enum:GmssPsType
    Mcc, uint32, base=10
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiRecvRatCellGlobalIdReq() Rsp
    Requester, uint32, base=enum:GmssRatId
    TargetRat, uint32, base=enum:GmssRatId
End

Begin Message, CP MMC GMSS RAT API mmcGmssApiRecvRatModeRsp() Rsp
    Requester, uint32, base=enum:GmssRatId
    Result, uint32, base=10
End

Begin Message, CP Trace CP MMC GMSS SEND AP API Rsp
    printformat , 1, 1, CP MMC GMSS SEND MSG, N=%d, <systime>  CP - MMC GMSS SEND AP API: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Function, uint32, base=enum:GmssApApiId
    Rec, union, enum=Function
End

Begin Message, CP MMC GMSS SEND AP API mmcGmssApiSendApModeSelectRsp() Rsp
    Result, uint32, base=enum:Success/Fail
End

Begin Message, CP MMC GMSS SEND AP API mmcGmssApiSendApModeQueryRsp() Rsp
    OpMode, uint32, base=enum:GmssopMode
End

Begin Message, CP MMC GMSS SEND AP API mmcGmssApiSendApPowerUpRsp() Rsp
End

Begin Message, CP MMC GMSS SEND AP API mmcGmssApiSendApPowerDownRsp() Rsp
End

Begin Message, CP MMC GMSS SEND AP API mmcGmssApiSendApServiceStatusInd() Rsp
    CSSystem, uint32, base=enum:ApRatId
    CSStatus, uint32, base=enum:ApRegStatus
    PSSystem, uint32, base=enum:ApRatId
    PSStatus, uint32, base=enum:ApRegStatus
End

Begin Message, CP MMC GMSS SEND AP API mmcGmssApiSendApServiceStatusRsp() Rsp
    CSSystem, uint32, base=enum:ApRatId
    CSStatus, uint32, base=enum:ApRegStatus
    PSSystem, uint32, base=enum:ApRatId
    PSStatus, uint32, base=enum:ApRegStatus
End

Begin Message, CP MMC GMSS SEND AP API mmcGmssApiRecvApPowerUpReq() Rsp
    GmssState, uint32, base=enum:GmssSt
    PowerSt, uint32, base=enum:GmssPowerStatus
End

Begin Message, CP MMC GMSS SEND AP API mmcGmssApiRecvApPowerDownReq() Rsp
    GmssState, uint32, base=enum:GmssSt
    PowerSt, uint32, base=enum:GmssPowerStatus
End

Begin Message, CP Trace CP MMC TEST TRACE Rsp
    printformat , 1, 1, CP MMC TEST TRACE, N=%d, <systime>  CP - MMC TEST TRACE: testID=%x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP SEC MSGID TRACE Rsp
    printformat ,      1,1,CP SEC MSGID TRACE, N=%d, <systime>  SEC Received Message= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgName, uint16, base=enum:SEC Message Name
End

Begin Message, CP Trace CP HSC MsgId Rsp
    printformat ,  1, 1, CP HSC MsgId, N=%d, <systime>  HSC MsgId - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgName, uint32, base=enum:HscMsgIdT
End

Begin Message, CP Trace CP HSC Error Rsp
    printformat , 1, 1, CP HSC Error, N=%d, <systime>  HSC ERROR - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:HscTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP HSC Warning Rsp
    printformat , 1, 1, CP HSC Warning, N=%d, <systime>  HSC WARNING - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:HscTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP HSC Generic Rsp
    printformat , 1, 1, CP HSC Generic, N=%d, <systime>  HSC Generic - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:HscTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP HSC DO Mini-Acq Rsp
    printformat , 1, 1, CP HSC DO Mini-Acq, N=%d, <systime>  HSC DO Mini-Acq - Actual TC/2 = %d, EcIo= %4.3f dB, PN = %d, TCelsius = %d, SmbNum = 0x%04x, CalValue = 0x%04x, Quotient = 0x%04x, Remainder = 0x%04x, RxTxOft TC/2 = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MiniAcqErrTc2, int32
    Ec_Io, uint32, scale=Q16, log10=true, logscale=10
    PN, int32
    TCelsius, int32
    SmbNum, int32
    CalValue, int32
    Quotient, int32
    Remainder, int32
    RxTxOft, int32
End

Begin Message, CP Trace CP HSC Resync Rsp
    printformat , 1, 1, CP HSC Resync, N=%d, <systime>  HSC Resync - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:HscTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP HSC SPage Rsp
    printformat , 1, 1, CP HSC SPage, N=%d, <systime>  HSC SPage - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:HscTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP HSC Mpa Rsp
    printformat , 1, 1, CP HSC Mpa, N=%d, <systime>  HSC Mpa - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:HscTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP HSC Stop DoTx Rsp
    printformat , 1, 1, CP HSC Stop DoTx, N=%d, <systime>  HSC Stop DoTx - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:HscTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP HSC Clk Cal Rsp
    printformat , 1, 1, CP HSC Clk Cal, N=%d, <systime>  HSC Clk - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:HscTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP HSC Oosa Rsp
    printformat , 1, 1, CP HSC Oosa, N=%d, <systime>  HSC Oosa - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:HscTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP HSC Shdr Svdo Rsp
    printformat , 1, 1, CP HSC Shdr Svdo, N=%d, <systime>  HSC Shdr Svdo - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:HscTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP HSC Rm Rsp
    printformat , 1, 1, CP HSC Rm, N=%d, <systime>  HSC Rm - %s 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Track, uint32, base=enum:HscTraceTrackT
    Args, array, type=uint32, maxsize=9, size=end
End

Begin Message, CP Trace CP SLC MSGID TRACE Rsp
    printformat ,      1,1,CP SLC MSGID TRACE, N=%d, <systime>  CP - SLC MSGID TRACE - %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgName, uint32, base=enum:SLC Message Name
End

Begin Message, CP Trace CP GCP TIMER STATUS Rsp
    printformat ,      1,1,CP GCP TIMER STATUS, N=%d, <systime>  CP - GCP TIMER %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    status, uint32, base=enum:START/STOP/EXPIRE
End

Begin Message, CP Trace CP GCP TX FAIL STATUS Rsp
    printformat ,      1,1,CP GCP TX FAIL STATUS, N=%d, <systime>  CP - GCP TX FAIL STATUS - transID=%d, protocol=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    transID, uint32
    protocol, uint32, base=enum:DScp Protocol Enum
End

Begin Message, CP Trace CP GCP TRANSACTION REC Rsp
    printformat ,      1,1,CP GCP TRANSACTION REC, N=%d, <systime>  CP - GCP TRANSACTION REC - reqSeq=%d, transId=%d, prot =%s, inConfig=%s, txDone=%s, reTransCount=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    reqSeq, uint32
    transId, uint32
    prot, uint32, base=enum:DScp Protocol Enum
    inConfig, uint32, base=enum:InUse/InConfig
    txDone, uint32, base=enum:No/Yes
    reTransCount, uint32
End

Begin Message, CP Trace CP GCP SEND OTA MSG TRACE Rsp
    printformat ,      1,1,CP GCP SEND OTA MSG TRACE, N=%d, <systime>  CP - GCP SEND OTA MSG TRACE - msgId=%s, transId=%d, prot = %s, size=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    msgId, uint32, base=enum:DScp OTA message Enum
    transId, uint32
    prot, uint32, base=enum:DScp Protocol Enum
    size, uint32
End

Begin Message, CP Trace CP DSCP GAUP TIMER STATUS Rsp
    printformat ,      1,1,CP DSCP GAUP TIMER STATUS, N=%d, <systime>  CP - DSCP GAUP TIMER %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    status, uint32, base=enum:START/STOP/EXPIRE
End

Begin Message, CP Trace CP DSCP GAUP TX FAIL Rsp
    printformat ,      1,1,CP DSCP GAUP TX FAIL, N=%d, <systime>  CP - DSCP GAUP TX FAIL - transID=%d, protocol=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    transID, uint32
    protocol, uint32, base=enum:DScp Protocol Enum
End

Begin Message, CP Trace CP DSCP INVALID GAUP REQ MSG Rsp
    printformat ,      1,1,CP DSCP INVALID GAUP REQ MSG, N=%d, <systime>  CP - DSCP INVALID GAUP REQ MSG - attrId=%d, length=%s, ConfigLock=%d, SupportGAUPSCToken=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    attrId, uint32
    length, uint32
    configLock, uint32, base=enum:Unlock/Lock
    SupportGAUPSCToken, uint32, base=enum:Not Support/Support
End

Begin Message, CP Trace CP DSCP INVALID CONFIGURABLE ATTR ID Rsp
    printformat ,      1,1,CP DSCP INVALID CONFIGURABLE ATTR ID, N=%d, <systime>  CP - DSCP INVALID CONFIGURABLE ATTR ID - attrId=%d, reqSeq=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    attrId, uint32
    reqSeq, uint32
End

Begin Message, CP Trace CP DSCP INVALID COMPLEX ATTR VALUE ID Rsp
    printformat ,      1,1,CP DSCP INVALID COMPLEX ATTR VALUE ID, N=%d, <systime>  CP - DSCP INVALID COMPLEX ATTR VALUE ID - attrId=%d, reqSeq=%d, valueId=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    attrId, uint32
    reqSeq, uint32
    valueId, uint32
End

Begin Message, CP Trace CP DSCP STATE CHANGE Rsp
    printformat ,      1,1,CP DSCP STATE CHANGE, N=%d, <systime>  CP - DSCP STATE CHANGE - curState=%s, newState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    curState, uint32, base=enum:DScp SM State Enum
    newState, uint32, base=enum:DScp SM State Enum
End

Begin Message, CP Trace CP DSCP RCV OTA MSG TRACE Rsp
    printformat ,      1,1,CP DSCP RCV OTA MSG TRACE, N=%d, <systime>  CP - DSCP RCV OTA MSG TRACE - msgId=%s, transId=%d, protocol=%s, InConfig=%s, DScpState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    msgId, uint32, base=enum:DScp OTA message Enum
    transId, uint32
    protocol, uint32, base=enum:DScp Protocol Enum
    InCOnfig, uint32, base=enum:InUse/InConfig
    DScpState, uint32, base=enum:DScp SM State Enum
End

Begin Message, CP Trace CP DSCP SEND OTA MSG TRACE Rsp
    printformat ,      1,1,CP DSCP SEND OTA MSG TRACE, N=%d, <systime>  CP - DSCP SEND OTA MSG TRACE - msgId=%s, transId=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    msgId, uint32, base=enum:DScp OTA message Enum
    transId, uint32
End

Begin Message, CP Trace CP DSCP IGNORED MSG Rsp
    printformat ,      1,1,CP DSCP IGNORED MSG, N=%d, <systime>  CP - DSCP IGNORED MSG - msgId=%s, DScpState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    msgId, uint32, base=enum:SLC Message Name
    DScpState, uint32, base=enum:DScp SM State Enum
End

Begin Message, CP Trace CP DSCP INACTIVE ST HANDLE Rsp
    printformat ,      1,1,CP DSCP INACTIVE ST HANDLE, N=%d, <systime>  CP - DSCP INACTIVE ST HANDLE - msgId=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    msgId, uint32, base=enum:SLC Message Name
End

Begin Message, CP Trace CP DSCP OPEN ST HANDLE Rsp
    printformat ,      1,1,CP DSCP OPEN ST HANDLE, N=%d, <systime>  CP - DSCP OPEN ST HANDLE - msgId=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    msgId, uint32, base=enum:SLC Message Name
End

Begin Message, CP Trace CP DSCP AT-INIT ST HANDLE Rsp
    printformat ,      1,1,CP DSCP AT-INIT ST HANDLE, N=%d, <systime>  CP - DSCP AT-INIT ST HANDLE - msgId=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    msgId, uint32, base=enum:SLC Message Name
End

Begin Message, CP Trace CP DSCP AN-INIT ST HANDLE Rsp
    printformat ,      1,1,CP DSCP AN-INIT ST HANDLE, N=%d, <systime>  CP - DSCP AN-INIT ST HANDLE - msgId=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    msgId, uint32, base=enum:SLC Message Name
End

Begin Message, CP Trace CP DSCP PROTOCOL CONFIG FAIL Rsp
    printformat ,      1,1,CP DSCP PROTOCOL CONFIG FAIL, N=%d, <systime>  CP - DSCP PROTOCOL CONFIG FAIL - protocol=%s, subType=%d, DScpState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    protocol, uint32, base=enum:DScp Protocol Enum
    subType, uint32
    DScpState, uint32, base=enum:DScp SM State Enum
End

Begin Message, CP Trace CP DSCP CONNECTION STATUS Rsp
    printformat ,      1,1,CP DSCP CONNECTION STATUS, N=%d, <systime>  CP - DSCP CONNECTION STATUS - msgId=%s, DScpState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    msgId, uint32, base=enum:SLC Message Name
    DScpState, uint32, base=enum:DScp SM State Enum
End

Begin Message, CP Trace CP DSCP PROTOCOL RECONFIGURED IND Rsp
    printformat ,      1,1,CP DSCP PROTOCOL RECONFIGURED IND, N=%d, <systime>  CP - DSCP PROTOCOL RECONFIGURED IND - protocol=%s, subType=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    protocol, uint32, base=enum:DScp Protocol Enum
    subType, uint32
End

Begin Message, CP Trace CP DSCP ASSEMBLE CONFIG REQ Rsp
    printformat ,      1,1,CP DSCP ASSEMBLE CONFIG REQ, N=%d, <systime>  CP - DSCP ASSEMBLE CONFIG REQ - reqTransId=%d, reqSeq=%d, InConfig=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    reqTransId, uint32
    reqSeq, uint32
    InCOnfig, uint32, base=enum:InUse/InConfig
End

Begin Message, CP Trace CP DSCP RESTORE SESSION FAIL TRACE Rsp
    printformat ,      1,1,CP DSCP RESTORE SESSION FAIL TRACE, N=%d, <systime>  CP - DSCP RESTORE SESSION FAIL TRACE - sessionID=%x, personalityId=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    sessionId, uint32
    personalityId, uint32
End

Begin Message, CP Trace CP DSCP RESTORE INSTANCE FROM PERSONALITY Rsp
    printformat ,      1,1,CP DSCP RESTORE INSTANCE FROM PERSONALITY, N=%d, <systime>  CP - DSCP RESTORE INSTANCE FROM PERSONALITY - sessionID=%x, personalityId=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    sessionId, uint32
    personalityId, uint32
End

Begin Message, CP Trace CP DSCP CONFIG FAILED Rsp
    printformat ,      1,1,CP DSCP CONFIG FAILED, N=%d, <systime>  CP - DSCP CONFIG FAILED - DScpState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    DScpState, uint32, base=enum:DScp SM State Enum
End

Begin Message, CP Trace CP DSCP RESTORE INSTANCE SUCCESS Rsp
    printformat ,      1,1,CP DSCP RESTORE INSTANCE SUCCESS, N=%d, <systime>  CP - DSCP RESTORE INSTANCE SUCCESS - sessionID=%x, personalityId=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    sessionId, uint32
    personalityId, uint32
End

Begin Message, CP Trace CP DSCP COMMITTING Rsp
    printformat ,       1,1,CP DSCP COMMITTING, N=%d, <systime>  CP - DSCP COMMITTING - action=%s, Data1=%x, Data2=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    action, uint32, base=enum:CheckingReconfigCnf/ProtocolCommitting/SendingCommittedInd
    reconfigCnfRcvd, uint32,exist=action == 0
    reconfigIndSent, uint32,exist=action == 0
    Protocol, uint32,base=enum:DScp Protocol Enum,exist=action != 0
    Subtype, uint32,exist=action != 0
End

Begin Message, CP Trace CP DSCP COMMIT DONE Rsp
    printformat ,       1,1,CP DSCP COMMIT DONE, N=%d, <systime>  CP - DSCP COMMIT DONE - reconfigCnfRcv=%x, protRequestConfig=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    reconfigCnfRcv, uint32
    protRequestConfig, uint32
End

Begin Message, CP Trace CP DSCP UPDATE STR APP Rsp
    printformat ,      1,1,CP DSCP UPDATE STR APP, N=%d, <systime>  CP - DSCP UPDATE STR APP - numApp=%d, DScpState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    numApp, uint32
    DScpState, uint32, base=enum:DScp SM State Enum
End

Begin Message, CP Trace CP DSCP KEP STATUS Rsp
    printformat ,      1,1,CP DSCP KEP STATUS, N=%d, <systime>  CP - DSCP KEP STATUS - KEY Exchange status=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    status, uint32, base=enum:Start/Stop
End

Begin Message, CP Trace CP DSCP PROTOCOL REQUESTED CONFIG START Rsp
    printformat ,      1,1,CP DSCP PROTOCOL REQUESTED CONFIG START, N=%d, <systime>  CP - DSCP PROTOCOL REQUESTED CONFIG START - protocol=%s, subType=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    protocol, uint32, base=enum:DScp Protocol Enum
    subType, uint32
End

Begin Message, CP Trace CP DSCP PROTOCOL REQUEST CONFIG Rsp
    printformat ,      1,1,CP DSCP PROTOCOL REQUEST CONFIG, N=%d, <systime>  CP - DSCP CP DSCP PROTOCOL REQUEST CONFIG - protocol=%s, protRequestConfig=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    protocol, uint32, base=enum:DScp Protocol Enum
    protRequestConfig, uint32
End

Begin Message, CP Trace CP DSCP AN CONFIG REQ Rsp
    printformat ,      1,1,CP DSCP AN CONFIG REQ, N=%d, <systime>  CP - DSCP AN-CONFIG REQ - protocol=%s, InConfig=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    protocol, uint32, base=enum:DScp Protocol Enum
    InCOnfig, uint32, base=enum:InUse/InConfig
End

Begin Message, CP Trace CP DSCP AN CONFIG RSP Rsp
    printformat ,      1,1,CP DSCP AN CONFIG RSP, N=%d, <systime>  CP - DSCP AN-CONFIG RSP - protocol=%s, InConfig=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    protocol, uint32, base=enum:DScp Protocol Enum
    InCOnfig, uint32, base=enum:InUse/InConfig
End

Begin Message, CP Trace CP DSCP SOFT CONFIG COMPLETE Rsp
    printformat ,      1,1,CP DSCP SOFT CONFIG COMPLETE, N=%d, <systime>  CP - DSCP SOFT CONFIG COMPLETE - Continue=%d, Commit=%d, SCToken=%x, PersonalityIndexStore=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    continue, uint32
    commit, uint32
    SCToken, uint32
    personalityIndex, uint32
End

Begin Message, CP Trace CP DSCP CONFIG COMPLETE Rsp
    printformat ,      1,1,CP DSCP CONFIG COMPLETE, N=%d, <systime>  CP - DSCP CONFIG COMPLETE - SCToken=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SCToken, uint32
End

Begin Message, CP Trace CP DSCP DELETE PERSONALITY Rsp
    printformat ,      1,1,CP DSCP DELETE PERSONALITY, N=%d, <systime>  CP - DSCP DELETE PERSONALITY - numPersonality=%d, firstDelete=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    numPersonality, uint32
    firstDelete, uint32
End

Begin Message, CP Trace CP DSCP RECONFIG CNF WAIT TIMER STATUS Rsp
    printformat ,      1,1,CP DSCP RECONFIG CNF WAIT TIMER STATUS, N=%d, <systime>  CP - DSCP RECONFIG CNF WAIT TIMER %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    status, uint32, base=enum:START/STOP/EXPIRE
End

Begin Message, CP Trace CP DSCP AN INIT ST WAIT REQ TIMER STATUS Rsp
    printformat ,      1,1,CP DSCP AN INIT ST WAIT REQ TIMER STATUS, N=%d, <systime>  CP - DSCP AN INIT ST WAIT REQ TIMER %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    status, uint32, base=enum:START/STOP/EXPIRE
End

Begin Message, CP Trace CP DSCP START RESTORE PRIOR SESSION Rsp
    printformat ,      1,1,CP DSCP START RESTORE PRIOR SESSION, N=%d, <systime>  CP - DSCP START RESTORE PRIOR SESSION - DScpState=%s, sessionID=%x, personalityId=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    DScpState, uint32, base=enum:DScp SM State Enum
    sessionId, uint32
    personalityId, uint32
End

Begin Message, CP Trace CP DSCP START CONFIG ALL PROTOCOLS Rsp
    printformat ,      1,1,CP DSCP START CONFIG ALL PROTOCOLS, N=%d, <systime>  CP - DSCP START CONFIG ALL PROTOCOLS - DScpState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    DScpState, uint32, base=enum:DScp SM State Enum
End

Begin Message, CP Trace CP DSCP CONNECTION CONTROL Rsp
    printformat ,      1,1,CP DSCP CONNECTION CONTROL, N=%d, <systime>  CP - DSCP %s CONNECTION CONTROL
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    DScpState, uint32, base=enum:Open/Close/Release
End

Begin Message, CP Trace CP DSCP HANDLE CONFIG RSP Rsp
    printformat ,      1,1,CP DSCP HANDLE CONFIG RSP, N=%d, <systime>  CP - DSCP HANDLE CONFIG RSP - rspAttrDataLen=%d, reqSeq=%d, InConfig=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    rspAttrDataLen, uint32
    reqSeq, uint32
    InConfig, uint32, base=enum:InUse/InConfig
End

Begin Message, CP Trace CP DSCP HANDLE CONFIG REQ Rsp
    printformat ,      1,1,CP DSCP HANDLE CONFIG REQ, N=%d, <systime>  CP - DSCP HANDLE CONFIG REQ - reqAttrDataLen=%d, InConfig=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    reqAttrDataLen, uint32
    InConfig, uint32, base=enum:InUse/InConfig
End

Begin Message, CP Trace CP DSCP SAVE INUSE PERSONALITY Rsp
    printformat ,      1,1,CP DSCP SAVE INUSE PERSONALITY, N=%d, <systime>  CP - DSCP SAVE INUSE PERSONALITY - sessionID=%x, personalityId=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    sessionId, uint32
    personalityId, uint32
End

Begin Message, CP Trace CP DSCP STORE PERSONALITY Rsp
    printformat ,      1,1,CP DSCP STORE PERSONALITY, N=%d, <systime>  CP - DSCP STORE PERSONALITY - sessionID=%x, personalityId=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    sessionId, uint32
    personalityId, uint32
End

Begin Message, CP Trace CP DSCP UPDATE PROTOCOL PERSONALITY Rsp
    printformat ,      1,1,CP DSCP UPDATE PROTOCOL PERSONALITY, N=%d, <systime>  CP - DSCP UPDATE PROTOCOL PERSONALITY - sessionID=%x, personalityId=%x, protocol=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    sessionId, uint32
    personalityId, uint32
    protocol, uint32, base=enum:DScp Protocol Enum
End

Begin Message, CP Trace CP DSCP CONFIG HARDLINK PROTOCOL Rsp
    printformat ,      1,1,CP DSCP CONFIG HARDLINK PROTOCOL, N=%d, <systime>  CP - DSCP CONFIG HARDLINK PROTOCOL
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP DSCP AN INIT ST HANDLE RECONFIG CNF Rsp
    printformat ,      1,1,CP DSCP AN INIT ST HANDLE RECONFIG CNF, N=%d, <systime>  CP - DSCP AN INIT ST HANDLE RECONFIG CNF - protocol=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    protocol, uint32, base=enum:DScp Protocol Enum
End

Begin Message, CP Trace CP AMP STATE TRACE Rsp
    printformat , 1, 1, CP AMP STATE TRACE, N=%d, <systime>  AMPSt=%s, MsgId: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AMPSt, uint32, base=enum:Amp State
    MsgId, uint32, base=enum:SLC Message Name
End

Begin Message, CP Trace CP AMP UATI ASSIGN MSG VALID SEQ TRACE Rsp
    printformat , 1, 1, CP AMP UATI ASSIGN MSG VALID SEQ TRACE, N=%d, <systime>  AMP UATI Assign Msg old seq: %d, new seq: %d, result: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Old Seq, uint32
    new seq, uint32,
    result, uint32, base=enum:FAILED/PASSED
End

Begin Message, CP Trace CP AMP UATI ASSIGN MSG TIMEOUT TRACE Rsp
    printformat , 1, 1, CP AMP UATI ASSIGN MSG TIMEOUT TRACE, N=%d, <systime>  AMP WAIT FOR UATI ASSIGN TIME OUT
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP AMP UATI ADDR TIMEOUT TRACE Rsp
    printformat , 1, 1, CP AMP UATI ADDR TIMEOUT TRACE, N=%d, <systime>  AMP ADDRESS TIME OUT
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP AMP UATI ASSIGN MSG INIT SEQ TRACE Rsp
    printformat , 1, 1, CP AMP UATI ASSIGN MSG INIT SEQ TRACE, N=%d, <systime>  AMP INIT ASSIGN MSG SEQ to ZERO
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP AMP SESSIONSEED TRACE Rsp
    printformat , 1, 1, CP AMP SESSIONSEED TRACE, N=%d, <systime>  Op=%s,priorSesNego=%s,priorSeed=%x,curSeed=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Op, uint32, base=enum:Save/Restore/Reset
    priorSesNego, uint32, base=enum:False/True
    priorSeed, uint32
    curSeed, uint32
End

Begin Message, CP Trace CP SMP STATE TRACE Rsp
    printformat , 1, 1, CP SMP STATE TRACE, N=%d, <systime>  SMP State=%s, Received Msg ID: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:Smp State
    MessageId, uint32, base=enum:SLC Message Name
End

Begin Message, CP Trace CP SMP CHECK KEEPALIVE TRACE Rsp
    printformat , 1, 1, CP SMP CHECK KEEPALIVE TRACE, N=%d, <systime>  TSmpClose=0x%08X, TSysTime=0x%08x, NRemainKeepAliveTimes=%d, Result=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TSmpClose, uint32
    TSysTime, uint32
    NRemainKeepAliveTimes, uint32
    result, uint32, base=enum:Expire/InUse
End

Begin Message, CP Trace CP SMP READ SESSIONFILE TRACE Rsp
    printformat , 1, 1, CP SMP READ SESSIONFILE TRACE, N=%d, <systime>  SMP Read Session File State = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:Smp FSM Error
End

Begin Message, CP Trace CP SEC DH KEY STATE TRACE Rsp
    printformat , 1, 1, CP SEC DH KEY STATE TRACE, N=%d, <systime>  DH Key Exchange form Old State = %s to new State = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    OldState, uint32, base=enum:DHKey SM State Enum
    NewState, uint32, base=enum:DHKey SM State Enum
End

Begin Message, CP Trace CP SEC DH KEY RCVMSG TRACE Rsp
    printformat , 1, 1, CP SEC DH KEY RCVMSG TRACE, N=%d, <systime>  DH Key RcvMsg in State = %s, IsKeyRev= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:DHKey SM State Enum
    IsKeyRev, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP SEC DH KEY TIMEOUT TRACE Rsp
    printformat , 1, 1, CP SEC DH KEY TIMEOUT TRACE, N=%d, <systime>  DH Key Timeout in State = %s, TimerId= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:DHKey SM State Enum
    TimerId, uint32, base=enum:DHKEP_KEYCAL_TIMER_ID/DHKEP_KEYCOMP_SIG_TIMER_ID
End

Begin Message, CP Trace CP SEC DH KEY DSA FWD MSG TRACE Rsp
    printformat , 1, 1, CP SEC DH KEY DSA FWD MSG TRACE, N=%d, <systime>  DH Key DSA Fwd Msg in State = %s, MsgType= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:DHKey SM State Enum
    MsgType, uint32, base=enum:DHKey DSA SubType Enum
End

Begin Message, CP Trace CP SEC DH KEY SCP RECFG TRACE Rsp
    printformat , 1, 1, CP SEC DH KEY SCP RECFG TRACE, N=%d, <systime>  DH Key Scp Reconfig in State = %s, IsKeyRev= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:DHKey SM State Enum
    IsKeyRev, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP CLC MSGID TRACE Rsp
    printformat ,      1,1,CP CLC MSGID TRACE, N=%d, <systime>  CLC Received Message= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgName, uint16, base=enum:CLC Message Name
End

Begin Message, CP Trace CP OMP STATE TRACE Rsp
    printformat ,      1,1,CP OMP STATE TRACE, N=%d, <systime>  OMP current state = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    OMPState, uint32, base=enum:OMP State
End

Begin Message, CP Trace CP OMP ACTIVE TRACE Rsp
    printformat ,      1,1,CP OMP ACTIVE TRACE, N=%d, <systime>  OMP Activated in state = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    OMPState, uint32, base=enum:OMP State
End

Begin Message, CP Trace CP OMP DEACTIVE TRACE Rsp
    printformat ,      1,1,CP OMP DEACTIVE TRACE, N=%d, <systime>  OMP Deactivated in state = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    OMPState, uint32, base=enum:OMP State
End

Begin Message, CP Trace CP OMP IDLEHO TRACE Rsp
    printformat ,      1,1,CP OMP IDLEHO TRACE, N=%d, <systime>  OMP Idle Handoff to PilotPN=%d, in state = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotPN, uint32, base=10
    OMPState, uint32, base=enum:OMP State
End

Begin Message, CP Trace CP OMP CONNCLOSED TRACE Rsp
    printformat ,      1,1,CP OMP CONNCLOSED TRACE, N=%d, <systime>  OMP Connection Closed indication received in state = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    OMPState, uint32, base=enum:OMP State
End

Begin Message, CP Trace CP OMP OTA MESSAGE TRACE Rsp
    printformat ,      1,1,CP OMP OTA MESSAGE TRACE, N=%d, <systime>  OMP Received Message, State= %s, Message= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    StateName, uint32, base=enum:OMP State Name
    MsgType, uint32, base=enum:OMP Message Name
End

Begin Message, CP Trace CP OMP QUICK CONFIG MESSAGE TRACE Rsp
    printformat ,      1,1,CP OMP QUICK CONFIG MESSAGE TRACE, N=%d, <systime>  OMP Quick Config Message, CC= %d, SecID= %x, SecSig= %d, AccSig= %d, Redirect=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ColorCode, uint32, base=16
    SectorID, uint32, base=16
    SectorSig, uint32, base=10
    AccessSig, uint32, base=10
    Redirect, uint32,  base=10
End

Begin Message, CP Trace CP OMP SEC PARA MESSAGE TRACE Rsp
    printformat ,      1,1,CP OMP SEC PARA MESSAGE TRACE, N=%d, <systime>  OMP Sector Parameter, CountryCode = %d, SectorId24 = %x, SectorSignature= %d, SubnetMask= %x, ChanCount= %d, Ch1= %d, Ch2= %d, Ch3= %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CountryCode, uint32, base=10
    SectorId24, uint32, base=16
    SectorSignature, uint32 , base=10
    SubnetMask, uint32, base=10
    ChanCount, uint32,  base=10
    Chan_1, uint32, base=10
    Chan_2, uint32, base=10
    Chan_3, uint32, base=10
End

Begin Message, CP Trace CP OMP SUPV TIMER TRACE Rsp
    printformat ,      1,1,CP OMP SUPV TIMER TRACE, N=%d, <systime>  OMP current state = %s, expired timer = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    OMPState, uint32, base=enum:OMP State
    OMP Timer, uint32, base=enum:OMP Timer
End

Begin Message, CP Trace CP OMP OVH PARMS UP TO DATE FLAG TRACE Rsp
    printformat ,      1,1,CP OMP OVH PARMS UP TO DATE FLAG TRACE, N=%d, <systime>  OMP Overhead Parameter Up to Date is = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    OMPParmsUpToDate, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP OMP CACHE INFO TRACE Rsp
    printformat ,      1,1,CP OMP CACHE INFO TRACE, N=%d, <systime>  OMP Cached record =%s, Cache record state =%s, Time= 0x%08X, Band Class= %d, Channel Number = %d, PilotPN = %d, SectorID24= 0x%08X, SectorSignature=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Action, uint32, base=enum:OMP CacheRecord Action
    CacheRec State, uint32, base=enum:OMP Cache State
    Time, uint32,
    BandClass, uint32
    ChannelNumber, uint32, base=10
    PilotPN, uint32, base=10
    SectorId24, uint32,
    SectorSignature, uint32, base=10
End

Begin Message, CP Trace CP IDP STATE TRACE Rsp
    printformat ,      1,1,CP IDP STATE TRACE, N=%d, <systime>  IDP current state = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    IDPState, uint32, base=enum:IDP State
End

Begin Message, CP Trace CP IDP HASH RESULT TRACE Rsp
    printformat ,      1,1,CP IDP HASH RESULT TRACE, N=%d, <systime>  IDP Channel Hash Result, Total %s number = %d, Hashed index = %d, Key = %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Hash Application, uint32, base=enum:IDP Hash Name
    Number, uint32, base=10
    Hashed Index, uint32, base=10
    Key, uint32, base=16
End

Begin Message, CP Trace CP IDP SLEEP INFO TRACE Rsp
    printformat ,      1,1,CP IDP SLEEP INFO TRACE, N=%d, <systime>  IDP Sleep info, current slot = %x, T12 = %x, T23 = %x, Period = %x, wakeup slot = %x, R = %d, which calculated with =%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    current slot, uint32, base=16
    T12, uint32, base=16
    T23, uint32, base=16
    Period, uint32, base=16
    wakeup slot, uint32, base=16
    R, uint32, base=10
    which calculated by, uint32, base=enum:SessionSeed/PrefCCC
End

Begin Message, CP Trace CP IDP ACM TX INFO TRACE Rsp
    printformat ,      1,1,CP IDP ACM TX INFO TRACE, N=%d, <systime>  IDP ACM Tx Count = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ACM Tx Count, uint32, base=10
End

Begin Message, CP Trace CP IDP SLEEP TRACE Rsp
    printformat ,      1,1,CP IDP SLEEP TRACE, N=%d, <systime>  CLC Sleep Info SleeepDoneRcvd=%s, SectorUpdated=%s,TxCount=%s,PeriodInActive=%s,SlottedMode=%s,SessionActive=%s,InProgress=%s,SessionCloseInProgress=%s,DsarAccessInProgress=%s, GCPCommitted=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SleeepDoneRcvd, uint32, base=enum:FALSE/TRUE
    SectorUpdated, uint32, base=enum:FALSE/TRUE
    TxCount, uint32, base=enum:FALSE/TRUE
    PeriodInActive, uint32, base=enum:FALSE/TRUE
    SlottedMode, uint32, base=enum:FALSE/TRUE
    SessionActive, uint32, base=enum:FALSE/TRUE
    InProgress, uint32, base=enum:FALSE/TRUE
    SessionCloseInProgress, uint32, base=enum:FALSE/TRUE
    DsarAccessInProgress, uint32, base=enum:FALSE/TRUE
    GCPCommitted, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP IDP PERIODS INFO TRACE Rsp
    printformat ,      1,1,CP IDP PERIODS INFO TRACE, N=%d, <systime>  IDP Periods value info, Period1 = %x, Period2 = %x, Period3 = %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Period1, uint32, base=16
    Period2, uint32, base=16
    Period3, uint32, base=16
End

Begin Message, CP Trace CP IDP T12T23 INFO TRACE Rsp
    printformat ,      1,1,CP IDP T12T23 INFO TRACE, N=%d, <systime>  IDP T12 and T23 info, Tc = %x, T12 = %x, T23 = %x, R = %d, WakeCount1= %d, WakeCount2 = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Tc, uint32, base=16
    T12, uint32, base=16
    T23, uint32, base=16
    R, uint32, base=10
    WakeCount1, uint32, base=10
    WakeCount2, uint32, base=10
End

Begin Message, CP Trace CP INSP PILOT ACQ RSP TRACE Rsp
    printformat ,      1,1,CP INSP PILOT ACQ RSP TRACE, N=%d, <systime>  INSP Pilot Acq Response: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotFound, uint32,base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP INSP FREQ RSP TRACE Rsp
    printformat ,      1,1,CP INSP FREQ RSP TRACE, N=%d, <systime>  INSP Frequency Response: AssociationTag = %s QuickScan = %d, CollocatedTag = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AssociationTag, uint32,base=enum:RMC Association Tag Name
    QuickScan, uint32
    CollocatedTag, uint32
End

Begin Message, CP Trace CP RMC ASSIST PILOT ACQ REQ TRACE Rsp
    printformat ,      1,1,CP RMC ASSIST PILOT ACQ REQ TRACE, N=%d, <systime>  RMC Assist Pilot Acq Request: QuickScan = %d, CollocatedTag = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    QuickScan, uint32
    CollocatedTag, uint32
End

Begin Message, CP Trace CP IDP SET HO EHRPD ENABLE Rsp
    printformat ,      1,1,CP IDP SET HO EHRPD ENABLE, N=%d, <systime>  bEnable=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    bEnable, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP ALMP IRAT MEAS REQ TRACE Rsp
    printformat ,      1,1,CP ALMP IRAT MEAS REQ TRACE, N=%d, <systime>  IRAT Meas Req:Index=%d,  MeasObjId=%d,  Earfcn=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Index, uint32
    MeasObjId, uint32
    Freq, uint32, base=10
End

Begin Message, CP Trace CP ALMP IRAT MEAS RSP TRACE Rsp
    printformat ,      1,1,CP ALMP IRAT MEAS RSP TRACE, N=%d, <systime>  IRAT Meas Rsp:Index= %d,MeasObjId= %d,  Earfcn=%d, Rsrp=%d, Rsrq=%d, CellId=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Index, uint32
    MeasObjId, uint32
    Freq, uint32, base=10
    Rsrp, uint32
    Rsrq, uint32
    PhysCellId, uint32, base=10
End

Begin Message, CP Trace CP ALMP IRAT MEAS REPORT TRACE Rsp
    printformat ,      1,1CP ALMP IRAT MEAS REPORT TRACE, N=%d, <systime> IRAT Meas Resport: Index=%d,Earfcn=%d,CellId=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Index, uint32
    Freq, uint32, base=10
    PhysCellId, uint32, base=10
End

Begin Message, CP Trace CP CLC TIMER START TRACE Rsp
    printformat ,      1,1,CP CLC TIMER START TRACE, N=%d, <systime>  CLC Timer %s started, duration %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimerName, uint32, base=enum:CLC Timer Name
    Duration, uint32
End

Begin Message, CP Trace CP CLC TIMER STOP TRACE Rsp
    printformat ,      1,1,CP CLC TIMER STOP TRACE, N=%d, <systime>  CLC Timer %s stopped.
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimerName, uint32, base=enum:CLC Timer Name
End

Begin Message, CP Trace CP CLC TIMER EXPIRED TRACE Rsp
    printformat ,      1,1,CP CLC TIMER EXPIRED TRACE, N=%d, <systime>  CLC Timer %s expired
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimerName, uint32, base=enum:CLC Timer Name
End

Begin Message, CP Trace CP IDP ACM TX FAIL TRACE Rsp
    printformat ,      1,1,CP IDP ACM TX FAIL TRACE, N=%d, <systime>  AccessFailCount = %d, ForceSelectedChanNum = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AccessFailCount, uint32, base=10
    ForceSelectedChanNum, uint32, base=10
End

Begin Message, CP Trace CP_RMC_SCH_STATUS_TRACE_ID Rsp
    printformat , RMC_SCH, 1, CP_RMC_SCH_STATUS_TRACE_ID, N=%d, <systime>  RMC - SCH Status: Slot:0x%02x, Symb:0x%02x, SchMode:%s, Antenna:%s, INMAG_INST:%d, INMAG_IIR:%d, BUFCAPTMHS%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Slot, bit,   offset=5,   count = 6,  bytes=4, pos=first, base=16,
    Symb, bit,   offset=11,   count = 5,  bytes=4, pos=last, base=16
    SchMode, uint32, base=enum:SchModeT
    Antenna, bit,   offset=7,   count = 1, bytes=4, pos=first, base=enum:Main/Div
    Busy, bit,  offset=8,   count = 1,  bytes=4, pos=middle
    INMAG_INST, bit,   offset=9,   count = 8,  bytes=4, pos=middle, base=10
    INMAG_IIR, bit,   offset=17,   count = 8,  bytes=4, pos=middle, base=10
    BUFCAPTMHS, bit,   offset=25,   count = 7,  bytes=4, pos=last,   base=10
End

Begin Message, CP Trace CP_RMC_SCH_OUTPUT_DBG_TRACE_ID Rsp
    printformat , RMC_SCH, 1, CP_RMC_SCH_OUTPUT_DBG_TRACE_ID, N=%d, <systime>  RMC - SCH output: PATHINFO:0x%04x, PATHBUF:0x%04x, i:0x%04x, j:0x%4x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PATHINFO, uint32
    PATHBUF, uint32
    i, uint32
    j, uint32
End

Begin Message, CP Trace CP_RMC_SCH_1XASSIST_TRACE_ID Rsp
    printformat , RMC_SCH, 2, CP_RMC_SCH_1XASSIST_TRACE_ID, N=%d, <systime>  CP_RMC_SCH_1XASSIST- NumPilot:%d, PilotPN0:%d, WinSizePN0:%d, WinOffsetPN0:%d, RmcRfPath:%s, CdmaBand:%d, FreqChan:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NumPilot, uint32
    PilotPN0, uint32
    WinSizePN0, uint32
    WinOffsetPN0, uint32
    RmcRfPath, uint32, base=enum:RmcRfPathT
    CdmaBand, uint32
    FreqChan, uint32
End

Begin Message, CP Trace CP_RMC_SCH_INITACQ_SRCH_TIME_SLOTS_TRACE_ID Rsp
    printformat , RMC_SCH, 2, CP_RMC_SCH_INITACQ_SRCH_TIME_SLOTS_TRACE_ID, N=%d, <systime>  CP_RMC_SCH_INITACQ_SRCH_TIME_SLOTS- VerifStartW3:%d, VerifStartW2:%d, VerifStartW1:%d, VerifStartW0:%d, InitStartW3:%d, InitStartW2%d, InitStartW1:%d, InitStartW0:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    VerifStartW3, uint32
    VerifStartW2, uint32
    VerifStartW1, uint32
    VerifStartW0, uint32
    InitStartW3, uint32
    InitStartW2, uint32
    InitStartW1, uint32
    InitStartW0, uint32
End

Begin Message, CP Trace CP_RMC_SCH_SEC_PCG_ID_TRACE_ID Rsp
    printformat , RMC_SCH, 2, CP_RMC_SCH_SEC_PCG_ID_TRACE_ID, N=%d, <systime>  CP_RMC_SCH_SEC_PCG_ID- NumSec:%d, Sec0PcgId:%d, Sec1PcgId:%d, Sec2PcgId:%d, Sec3PcgId:%d, Sec4PcgId:%d, Sec5PcgId:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NumSec, uint32
    Sec0PcgId, int32
    Sec1PcgId, int32
    Sec2PcgId, int32
    Sec3PcgId, int32
    Sec4PcgId, int32
    Sec5PcgId, int32
End

Begin Message, CP Trace CP_RMC_SCH_PILOT_UPDATE_TRACE_ID Rsp
    printformat , RMC_SCH, 2, CP_RMC_SCH_PILOT_UPDATE_TRACE_ID, N=%d, <systime>  CP_RMC_SCH_PILOT_UPDATE- PilotSeq:%d, ConnSetUpFlag:%d, TcaFlag:%d, NumAct:%d, NumCand:%d, NumNeigh:%d, NumRem:%d, SchHwStatus:%s, SchMode:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotSeq, int32
    ConnSetUpFlag, uint32
    TcaFlag, uint32
    NumAct, uint32
    NumCand, uint32
    NumNeigh, uint32
    NumRem, uint32
    SchHwStatus, uint32, base=enum:NOT_BUSY/BUSY
    SchMode, uint32, base=enum:RST/PAUSE/INIT/INITON/INITVER/MINI/FAST/ONLINE/OFFADJ/FASTFULL/OFFLINE_S/OFFLINE_L/DFS
End

Begin Message, CP Trace CP_RMC_SCH_IRAT_DO_MEAS_SRCHCFG_TRACE_ID Rsp
    printformat , RMC_SCH, 2, CP_RMC_SCH_IRAT_DO_MEAS_SRCHCFG_TRACE_ID, N=%d, <systime>  CP_RMC_SCH_IRAT_DO_MEAS_SRCHCFG - Chip:%d, CurrSlot:%d, NumOfPN:%d, PilotPN:%d, SrhWinSize:%d, SrhWinOffset:%d, RmcRFPath:%d, CdmaBand:%d, FreqChan:%d, RmcModemState:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChipTime, uint32
    CurrSlot, uint32
    NumOfPN, uint32
    PilotPN, uint32
    SrhWinSize, uint32
    SrhWinOffset, uint32
    RmcRFPath, uint32
    CdmaBand, uint32
    FreqChan, uint32
    RmcModemState, uint32, base=enum:RmcModemStateT
End

Begin Message, CP Trace CP_RMC_SCH_IRAT_DO_MEAS_LTE_RF_TRACE_ID Rsp
    printformat , RMC_SCH, 2, CP_RMC_SCH_IRAT_DO_MEAS_LTE_RF_TRACE_ID, N=%d, <systime>  CP_RMC_SCH_IRAT_DO_MEAS_LTE_RF -  Chip:%d, CurrSlot:%d, RfStatus:%s, ChFreq:%d, RmcModemState:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChipTime, uint32
    CurrSlot, uint32
    RfStatus, uint32, base=enum:DoMeasRfCtrlT
    ChFreq, uint32
    RmcModemState, uint32, base=enum:RmcModemStateT
End

Begin Message, CP Trace CP_RMC_SCH_IRAT_DO_MEAS_SEND_RESULTS_TRACE_ID Rsp
    printformat , RMC_SCH, 2, CP_RMC_SCH_IRAT_DO_MEAS_SEND_RESULTS_TRACE_ID, N=%d, <systime>  CP_RMC_SCH_IRAT_DO_MEAS_SEND_RESULTS -  Chip:%d, CurrSlot:%d, Band:%d, Channel:%d, NumPn:%d,  Pn:%d,  Phase:%d,  Strength:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChipTime, uint32
    CurrSlot, uint32
    Band, uint32
    Channel, uint32
    NumPn, uint32
    Pn, uint32
    Phase, int32
    Strength, int32
End

Begin Message, CP Trace CP_RMC_SCH_IRAT_DO_MEAS_CHK_TIMER_TRACE_ID Rsp
    printformat , RMC_SCH, 2, CP_RMC_SCH_IRAT_DO_MEAS_CHK_TIMER_TRACE_ID, N=%d, <systime>  CP_RMC_SCH_IRAT_DO_MEAS_35MS_TIMER -  Chip:%d, CurrSlot:%d, Expired:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChipTime, uint32
    CurrSlot, uint32
    Expired, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP_RMC_SCH_ARTD_METRICS_TRACE_ID Rsp
    printformat , RMC_SCH, 2, CP_RMC_SCH_ARTD_METRICS_TRACE_ID, N=%d, <systime>  CP_RMC_SCH_ARTD_METRICS - Rssi_Main: %2.4f, Rssi_Div: %2.4f, EcIo_Main: %2.4f, EcIo_Div: %2.4f, Snr_Comb: %2.4f
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Rssi_Main(dBm), int32, scale=Q6
    Rssi_Div(dBm), int32, scale=Q6
    EcIo_Main(dB), uint32, scale=Q16, log10=true, logscale=10
    EcIo_Div(dB), uint32, scale=Q16, log10=true, logscale=10
    Snr_Comb(dB), uint32, scale=Q9, log10=true, logscale=10
End

Begin Message, CP Trace CP RMC RUP OTAMSG TRACE Rsp
    printformat ,      1,1,CP RMC RUP OTAMSG TRACE Rsp, N=%d, <systime>  RUP Received Message:MsgId= %s, MsgSeq=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MessageId, uint32,base=enum:Rup OTA MessageId
    MessageSequence, uint32
End

Begin Message, CP Trace CP RMC RUP ACTIVATE TRACE Rsp
    printformat ,      1,1,CP RMC RUP ACTIVATE TRACE Rsp, N=%d, <systime>  RUP State= %s, SysType=%d, BandClass=%d, Channel=%d, PilotPN=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:Rup State Enum
    SysType, uint32
    BandClass, uint32
    Channel, uint32
    PilotPN, uint32
End

Begin Message, CP Trace CP RMC RUP IDLE HANDOFF TRACE Rsp
    printformat ,      1,1,CP RMC RUP IDLE HANDOFF TRACE Rsp, N=%d, <systime>  RUP Idle HO Reason=%s, Freq=%d,PilotPN= %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Reason, uint32, base=enum:IdleHO Reason
    Freq, uint32
    PilotPN, uint32
End

Begin Message, CP Trace CP RMC RUP WFT SLEEPDONE STATE TRACE Rsp
    printformat ,      1,1,CP RMC RUP WFT SLEEPDONE STATE TRACE Rsp, N=%d, <systime>  RUP State= %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:Rup State Enum
End

Begin Message, CP Trace CP RMC MSGID TRACE Rsp
    printformat ,      1,1,CP RMC MSGID TRACE, N=%d, <systime>  RMC Received Message= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgName, uint32, base=enum:Rmc Message Name
End

Begin Message, CP Trace CP RMC SnRUP MSG TRACE Rsp
    printformat ,      1,1,CP RMC SnRUP MSG TRACE Rsp, N=%d, <systime>  RUP Msg Send  PilotPN=%d, Strength=-%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotPN, uint32
    Strength, uint32
End

Begin Message, CP Trace CP RMC TIMER EXPIRED Rsp
    printformat , 1, 1, CP RMC TIMER EXPIRED, N=%d, <systime>  RmcTimerId: %s Expired
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Rmc Timer Id, uint32, base=enum:RmcTimerId
End

Begin Message, CP Trace CP RMC RUP TRAFFIC HANDOFF TRACE Rsp
    printformat ,      1,1,CP RMC RUP TRAFFIC HANDOFF TRACE Rsp, N=%d, <systime>  RUP Traffic HO Reason=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Reason, uint32, base=enum:IdleHO Reason
End

Begin Message, CP Trace CP RMC DO 1X COMPARE Rsp
    printformat , RMC_RXP, 2, CP RMC DO 1X COMPARE, N=%d, <systime>  CP DO 1X Sig Compare 1XSigQ:%d, HO1XThresh:%d, DRCMetric:%s, Metric:%d, NullCnt:%d, NonNullCnt:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RttSigQual, int32
    HO1XThresh, int32
    DRCMetric, uint32, base=enum:FALSE/TRUE
    Metric, uint32
    NullCnt, uint32
    NonNullCnt, uint32
End

Begin Message, CP Trace CP RMC RUP DFS TRACE Rsp
    printformat ,      1,1,CP RMC RUP DFS TRACE, N=%d, <systime>  DFS Status: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    DFS Trace, uint32, base=enum:DFS Trace Type Enum
    Trace, union, enum=DFS Trace
End

Begin Message, CP RMC RUP DFS TRACE DFS_SET_STATE Rsp
    Current State, uint32, base=enum:DFS State Enum
    New State, uint32, base=enum:DFS State Enum
End

Begin Message, CP RMC RUP DFS TRACE DFS_IDP_START Rsp
    Current State, uint32, base=enum:DFS State Enum
    Cause, uint32, base=enum:DFS Start Code Enum
    NumChan, uint32, base=10
End

Begin Message, CP RMC RUP DFS TRACE DFS_IDP_ABORT Rsp
    Current State, uint32, base=enum:DFS State Enum
End

Begin Message, CP RMC RUP DFS TRACE DFS_CLC_SETTINGS Rsp
    Idle Interval (sec), uint32, base=10
    Conn Interval (sec), uint32, base=10
    Idle NumChan, uint32, base=10
    Conn NumChan, uint32, base=10
    Idle Thresh (-dB), uint32, base=10
    Conn Thresh (-dB), uint32, base=10
End

Begin Message, CP RMC RUP DFS TRACE DFS_INIT Rsp
    Current State, uint32, base=enum:DFS State Enum
End

Begin Message, CP RMC RUP DFS TRACE DFS_CRITERIA_MET Rsp
    Active Str (-dB), uint32, base=10
    Current State, uint32, base=enum:DFS State Enum
End

Begin Message, CP RMC RUP DFS TRACE DFS_CRITERIA_NOTMET Rsp
    Active Str (-dB), uint32, base=10
    Current State, uint32, base=enum:DFS State Enum
End

Begin Message, CP RMC RUP DFS TRACE DFS_RMC_RXDEACT Rsp
    Cause, uint32, base=enum:RxDeactivate Cause Enum
End

Begin Message, CP RMC RUP DFS TRACE DFS_RESTORE_SERVING Rsp
    RUP State, uint32, base=enum:Rup State Enum
    DFS State, uint32, base=enum:DFS State Enum
    IdleCause, uint32, base=enum:DFS Start Code Enum
End

Begin Message, CP RMC RUP DFS TRACE RX_DEACTIVATE_IND Rsp
    bChanChanged, uint32, base=enum:FALSE/TRUE
    RUP State, uint32, base=enum:Rup State Enum
    DFS State, uint32, base=enum:DFS State Enum
    IdleCause, uint32, base=enum:DFS Start Code Enum
End

Begin Message, CP RMC RUP DFS TRACE DFS_TIMER_START Rsp
    DFS State, uint32, base=enum:DFS State Enum
    Interval (sec), uint32, base=10
End

Begin Message, CP RMC RUP DFS TRACE DFS_TIMER_STOP Rsp
    RUP State, uint32, base=enum:Rup State Enum
    DFS State, uint32, base=enum:DFS State Enum
End

Begin Message, CP RMC RUP DFS TRACE DFS_TIMER_EXPIRE Rsp
    DFS State, uint32, base=enum:DFS State Enum
    RemSrching, uint32, base=enum:FALSE/TRUE
    RemFinish, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP RMC RUP DFS TRACE DFS_SCH_PILOT_UPDATE Rsp
    DFSInfo ChanIndex, uint32, base=10
    DFSInfo Count, uint32, base=10
    DFS BandClass, uint32, base=10
    DFS Channel, uint32, base=10
    Num DFS Pilots, uint32, base=10
End

Begin Message, CP RMC RUP DFS TRACE DFS_IDLE_SRCH_RSLT Rsp
    DFS NeighborPN, uint32, base=10
    BandClass, uint32, base=10
    Channel, uint32, base=10
    index, uint32, base=10
    Phase, uint32, base=10
    Strength, uint32, base=10
End

Begin Message, CP RMC RUP DFS TRACE DFS_CONN_SRCH_RSLT Rsp
    BandClass, uint32, base=10
    Channel, uint32, base=10
    NumCandidates, uint32, base=10
    NumNeighbors, uint32, base=10
End

Begin Message, CP RMC RUP DFS TRACE DFS_SEND_IDP_DFS_END Rsp
End

Begin Message, CP RMC RUP DFS TRACE DFS_ADD_CHAN_TO_LIST Rsp
    NumChan, uint32, base=10
    Band, uint32, base=10
    Channel, uint32, base=10
End

Begin Message, CP Trace CP RMC CSM PROCESSOR TRACE Rsp
    printformat , 1, 2, CP RMC CSM PROCESSOR TRACE, N=%d, <systime>  CP RMC CSM PROCESSOR TRACE - Cmd=%s,CsmSMState=%s,CsmSwitchStage=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Cmd, uint32, base=enum:CsmProcessorCmdT
    CsmSMState, uint32, base=enum:CSM_VARIABLE_RATE_ST/CSM_FIXED_RATE_ST/CSM_DO_PREEMPT_ST/CSM_IDLE_ST
    CsmSwitchStage, uint32, base=enum:CsmSwitchStageT
End

Begin Message, CP Trace CP RMC CSM CELLSW ISR TRACE Rsp
    printformat , 1, 2, CP RMC CSM CELLSW ISR TRACE, N=%d, <systime>  CP RMC CSM CELLSW ISR TRACE - Time={%x, %x, %x},Result=%s,NullNum=%d,CsStartSlot=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimeFrames, uint32
    TimeSlots, bit, count=6, offset=5, bytes=4, pos=first
    Time64Chips, bit, count=5, offset=11, bytes=4, pos=last
    Result, uint32, base=enum:success/fail
    NullNum, uint32, base=10
    CsStartSlot, uint32, base=10, scale = Q14, format=%2.0f
End

Begin Message, CP Trace CP RMC CSM SERVING IS STRONGEST TRACE Rsp
    printformat , 1, 2, CP RMC CSM SERVING IS STRONGEST TRACE, N=%d, <systime>  CP RMC CSM SERVING IS STRONGEST TRACE - Status=%s,ServingPN=%d,Serving=%d,C2IServing=%5.2f,StrongestPN=%d,Strongest=%d,C2IStrongest=%5.2f
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Status, uint32, base=enum:CsmSwitchDecisionStatusT
    ServingPN, uint32, base=10
    Serving, uint32, base=10
    C2IServing, int32, base=10, scale = Q7, format=%6.2f
    StrongestPN, uint32,base=10,exist=Status == 0
    Strongest, uint32,base=10,exist=Status == 0
    C2IStrongest, int32,base=10,scale=Q7,format=%6.2f,exist=Status == 0
End

Begin Message, CP Trace CP RMC CSM INSTANT TEST TRACE Rsp
    printformat , 1, 2, CP RMC CSM INSTANT TEST TRACE, N=%d, <systime>  CP RMC CSM INSTANT TEST TRACE - TestResult=%s,InstantThreshold=%6.2f,ServingPN=%d,C2IServing=%6.2f,StrongestAvlPN=%d,C2IStrongestAvl=%6.2f,StrongestPN=%d,C2IStrongest=%6.2f
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TestResult, uint32, base=enum:TargetFound/DoPst0/DoPst1/DoPst2
    InstantThreshold, int32, base=10, scale = Q7, format=%6.2f
    ServingPN, uint32, base=10
    C2IServing, int32, base=10, scale = Q7, format=%6.2f
    StrongestAvlPN, uint32, base=10
    C2IStrongestAvl, int32, base=10, scale = Q7, format=%6.2f
    StrongestPN, uint32, base=10
    C2IStrongest, int32, base=10, scale = Q7, format=%6.2f
End

Begin Message, CP Trace CP RMC CSM PST TEST TRACE Rsp
    printformat , 1, 2, CP RMC CSM PST TEST TRACE, N=%d, <systime>  CP RMC CSM PST TEST TRACE - TestResult=%s,TestAction=%s,PersistThreshold=%6.2f,%x,%x,%x,%x,%x,%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TestResult, uint32, base=enum:Fail/Pass
    TestAction, uint32, base=enum:FindTarget/CheckAvl/CheckAll/UpdatePstTimer
    PersistThreshold, int32, base=10, scale = Q7, format=%6.2f
    Sector0PN, bit,count=16,offset=0,bytes=4,pos=first,base=10,exist=TestResult == 0
    Sector0PstCnt, bit,count=16,offset=16,bytes=4,pos=last,base=10,exist=TestResult == 0
    Sector1PN, bit,count=16,offset=0,bytes=4,pos=first,base=10,exist=TestResult == 0
    Sector1PstCnt, bit,count=16,offset=16,bytes=4,pos=last,base=10,exist=TestResult == 0
    Sector2PN, bit,count=16,offset=0,bytes=4,pos=first,base=10,exist=TestResult == 0
    Sector2PstCnt, bit,count=16,offset=16,bytes=4,pos=last,base=10,exist=TestResult == 0
    Sector3PN, bit,count=16,offset=0,bytes=4,pos=first,base=10,exist=TestResult == 0
    Sector3PstCnt, bit,count=16,offset=16,bytes=4,pos=last,base=10,exist=TestResult == 0
    Sector4PN, bit,count=16,offset=0,bytes=4,pos=first,base=10,exist=TestResult == 0
    Sector4PstCnt, bit,count=16,offset=16,bytes=4,pos=last,base=10,exist=TestResult == 0
    Sector5PN, bit,count=16,offset=0,bytes=4,pos=first,base=10,exist=TestResult == 0
    Sector5PstCnt, bit,count=16,offset=16,bytes=4,pos=last,base=10,exist=TestResult == 0
    TargetPN, int32,base=10,exist=TestResult == 1
End

Begin Message, CP Trace CP RMC CSM DECISION MADE TRACE Rsp
    printformat , 1, 2, CP RMC CSM DECISION MADE TRACE, N=%d, <systime>  CP RMC CSM DECISION MADE TRACE - Target=%d,TargetPN=%d,TargetDRCCover=%x,TargetDSC=%x,SoftHOType=%s,CsmFTMSubtype=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Target, uint32, base=10
    TargetPN, uint32, base=10
    TargetDRC, uint32, base=10
    TargetDSC, uint32, base=10
    SoftHOType, uint32, base=enum:IntraCell/InterCell
    CsmFTMSubtype, uint32, base=enum:Default/Enhance
End

Begin Message, CP Trace CP RMC CSM SCHEDULE COVER PROGRAM TRACE Rsp
    printformat , 1, 2, CP RMC CSM SCHEDULE COVER PROGRAM TRACE, N=%d, <systime>  CP RMC CSM SCHEDULE COVER PROGRAM TRACE - Time={%x, %x},DscProgramTime=%x,DrcProgramTime=%x,DRCLength=%d,frameOffset=%d,DSCLength=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimeFrames, uint32
    TimeSlots, uint32
    DscProgramTime, uint32
    DrcProgramTime, uint32
    DRCLength, uint32, base=10
    frameOffset, uint32, base=10
    DSCLength, uint32, base=10
End

Begin Message, CP Trace CP RMC CSM DRC PROGRAMMED TRACE Rsp
    printformat , 1, 2, CP RMC CSM DRC PROGRAMMED TRACE, N=%d, <systime>  CP RMC CSM DRC PROGRAMMED TRACE - Time={%x, %x, %x},TargetPN=%d,TargetDRC=%x,CellMode=%s,CellStatus=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimeFrames, uint32
    TimeSlots, bit, count=6, offset=5, bytes=4, pos=first
    Time64Chips, bit, count=5, offset=11, bytes=4, pos=last
    TargetPN, int32, base=10
    TargetDRC, uint32, base=10
    CellMode, bit, count=2, offset=6,  bytes=4, pos=first,base=enum:CS/Fixed/Test
    CellStatus, bit, count=3, offset=12, bytes=4, pos=last, base=enum:AllModeOff/TestModeOn/FixedModeOn/011/RealModeOn/101/110/111
End

Begin Message, CP Trace CP RMC CSM DSC PROGRAMMED TRACE Rsp
    printformat , 1, 2, CP RMC CSM DSC PROGRAMMED TRACE, N=%d, <systime>  CP RMC CSM DSC PROGRAMMED TRACE - Time={%x, %x, %x},TargetPN=%d,TargetDSC=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimeFrames, uint32
    TimeSlots, bit, count=6, offset=5, bytes=4, pos=first
    Time64Chips, bit, count=5, offset=11, bytes=4, pos=last
    TargetPN, uint32, base=10
    TargetDSC, uint32
End

Begin Message, CP Trace CP RMC CSM SCHEDULE TRAFFIC STOP TRACE Rsp
    printformat , 1, 2, CP RMC CSM SCHEDULE TRAFFIC STOP TRACE, N=%d, <systime>  CP RMC CSM SCHEDULE TRAFFIC STOP TRACE - Time={%x,%x},CurrTimeSlot=%x,ResyncBctCnt=%x,DoFreezeSlot=%x,HybridSlot=%x,DRCLength=%d,FrameOffset=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimeFrames, uint32
    TimeSlots, uint32, scale=Q5, format=%2.0f
    CurrTimeSlot, uint32
    ResyncBctCnt, uint32
    DoFreezeSlot, uint32
    HybridSlot, uint32
    DRCLength, uint32, base=10
    FrameOffset, uint32, base=10
End

Begin Message, CP Trace CP RMC CSM SCHEDULE TRAFFIC RESUME TRACE Rsp
    printformat , 1, 2, CP RMC CSM SCHEDULE TRAFFIC RESUME TRACE, N=%d, <systime>  CP RMC CSM SCHEDULE TRAFFIC RESUME TRACE - Time={%x, %x},UnFreezeTime=%x,DRCLength=%d,FrameOffset=%d,OverlapEvent=%s,reRegDRCProg=%d,doUnfreeze=%d,reStartAbortedOp=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimeFrames, uint32
    TimeSlots, uint32, base=10
    UnFreezeTime, uint32
    DRCLength, uint32, base=10
    FrameOffset, uint32, base=10
    OverlapEvent, uint32, base=enum:NoOverlap/CSAborted/FREnterAborted/FRExitAborted/FREnterAbortCS
    reRegDRCProg, uint32, base=10
    doUnfreeze, uint32, base=10
    reStartAbortedOp, uint32, base=10
End

Begin Message, CP Trace CP RMC CSM HYBRID NULL COVER PROGRAM TRACE Rsp
    printformat , 1, 2, CP RMC CSM HYBRID NULL COVER PROGRAM TRACE, N=%d, <systime>  CP RMC CSM HYBRID NULL COVER PROGRAM TRACE - Time={%x, %x, %x},CsmSMState=%s,CsmSwitchStage=%s,AbortOp=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimeFrames, uint32
    TimeSlots, bit, count=6, offset=5, bytes=4, pos=first
    Time64Chips, bit, count=5, offset=11, bytes=4, pos=last
    CsmSMState, uint32, base=enum:CSM_VARIABLE_RATE_ST/CSM_FIXED_RATE_ST/CSM_DO_PREEMPT_ST/CSM_IDLE_ST
    CsmSwitchStage, uint32, base=enum:CsmSwitchStageT
    AbortOp, uint32, base=enum:False/True
End

Begin Message, CP Trace CP RMC CSM HYBRID FREEZE DO TRACE Rsp
    printformat , 1, 2, CP RMC CSM HYBRID FREEZE DO TRACE, N=%d, <systime>  CP RMC CSM HYBRID FREEZE DO TRACE - Time={%x, %x, %x},ServingPN=%d,ServingDRCCover=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimeFrames, uint32
    TimeSlots, bit, count=6, offset=5, bytes=4, pos=first
    Time64Chips, bit, count=5, offset=11, bytes=4, pos=last
    ServingPN, uint32, base=10
    ServingDRC, uint32, base=10
End

Begin Message, CP Trace CP RMC CSM HYBRID UNFREEZE DO TRACE Rsp
    printformat , 1, 2, CP RMC CSM HYBRID UNFREEZE DO TRACE, N=%d, <systime>  CP RMC CSM HYBRID UNFREEZE DO TRACE - Time={%x, %x, %x},DRCCoverRegister=%x,ServingDRCCover=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimeFrames, uint32
    TimeSlots, bit, count=6, offset=5, bytes=4, pos=first
    Time64Chips, bit, count=5, offset=11, bytes=4, pos=last
    DRCCoverHW, uint32, base=10
    ServingDRC, uint32, base=10
End

Begin Message, CP Trace CP RMC CSM SERVING PN CHANGED TRACE Rsp
    printformat , 1, 2, CP RMC CSM SERVING PN CHANGED TRACE, N=%d, <systime>  CP RMC CSM SERVING PN CHANGED TRACE - NewServingPN=%d,OldServingPN=%d,CsmFTMSubtype=%s,OldServingDRC=%d,OldServingDSC=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NewServingPN, uint32, base=10
    OldServingPN, uint32, base=10
    CsmFTMSubtype, uint32, base=enum:Default/Enhance
    OldServingDRC, uint32,
    OldServingDSC, uint32,
End

Begin Message, CP Trace CP RMC CSM TARGET PN CHANGED TRACE Rsp
    printformat , 1, 2, CP RMC CSM TARGET PN CHANGED TRACE, N=%d, <systime>  CP RMC CSM TARGET PN CHANGED TRACE - OldTargetPN=%d, NewTargetPN=%d, TargetIndex=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    OldTargetPN, uint32, base=10
    NewTargetPN, uint32, base=10
    TargetIndex, uint32, base=10
End

Begin Message, CP Trace CP RMC CSM C2I THRESHOLDS TRACE Rsp
    printformat , 1, 2, CP RMC CSM C2I THRESHOLDS TRACE, N=%d, <systime>  CP RMC CSM C2I THRESHOLDS TRACE - FtmSubtype=%d,RtmSubtype=%d,C2ISampleCntThreshold=%d,C2IHwCntThreshold=%d,ServingDropThreshold=%6.2f,SoftHOTimerThreshold=%d,FastSwitchC2IThreshold=%6.2f,RXWarmUpTime=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FtmSubtype, uint32, base=10
    RtmSubtype, uint32, base=10
    C2ISampleCntThreshold, uint32, base=10
    C2IHwCntThreshold, uint32, base=10
    ServingDropThreshold, int32, base=10, scale = Q7, format=%6.1f
    SoftHOTimerThreshold, uint32, base=10
    FastSwitchC2IThreshold, int32, base=10, scale = Q7, format=%6.1f
    RXWarmUpTime, uint32
End

Begin Message, CP Trace CP RMC CSM FAKE ACKING TRACE Rsp
    printformat , 1, 2, CP RMC CSM FAKE ACKING TRACE, N=%d, <systime>  CP RMC CSM FAKE ACKING TRACE - Time={%x, %x, %x},CurAckMode=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimeFrames, uint32
    TimeSlots, bit, count=6, offset=5, bytes=4, pos=first
    Time64Chips, bit, count=5, offset=11, bytes=4, pos=last
    CurAckMode, uint32
End

Begin Message, CP Trace CP RMC CSM FIXED RATE TRACE Rsp
    printformat , 1, 2, CP RMC CSM FIXED RATE TRACE, N=%d, <systime>  CP RMC CSM FIXED RATE TRACE - Time={%x, %x, %x},SwitchStatus=%s,ServingPN=%d,SwitchDoneTime=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimeFrames, uint32
    TimeSlots, bit, count=6, offset=5, bytes=4, pos=first
    Time64Chips, bit, count=5, offset=11, bytes=4, pos=last
    SwitchStatus, uint32, base=enum:start/done/drop/exit
    ServingPN, int32, base=10
    SwitchDoneTime, uint32
End

Begin Message, CP Trace CP RMC CSM EVENT OVERLAP TRACE Rsp
    printformat , 1, 2, CP RMC CSM EVENT OVERLAP TRACE, N=%d, <systime>  CP RMC CSM EVENT OVERLAP TRACE - Time={%x, %x, %x},Event=%s,CSMState=%s,SwitchStage=%s,DRCLatched=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimeFrames, uint32
    TimeSlots, bit, count=6, offset=5, bytes=4, pos=first
    Time64Chips, bit, count=5, offset=11, bytes=4, pos=last
    Event, uint32, base=enum:NoOverlap/CSAborted/FREnterAborted/FRExitAborted/FREnterAbortCS
    CsmSMState, uint32, base=enum:CSM_VARIABLE_RATE_ST/CSM_FIXED_RATE_ST/CSM_DO_PREEMPT_ST/CSM_IDLE_ST
    CsmSwitchStage, uint32, base=enum:CsmSwitchStageT
    DRCLatched, uint32
End

Begin Message, CP Trace CP RMC CSM TEST CELLSW TRACE Rsp
    printformat , 1, 2, CP RMC CSM TEST CELLSW TRACE, N=%d, <systime>  CP RMC CSM TEST CELLSW TRACE - CmdId=%s, TargetPilotPN=%d, TargetDRC=%x, TargetDSC=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Cmd, uint32, base=enum:Cell Switch/Variable Rate To Fixed Rate/Fixed Rate To Variable Rate
    TargetIndex, uint32, base=10
    TargetDRC, uint32, base=10
    TargetDSC, uint32, base=10
End

Begin Message, CP Trace CP_RMC_MBP_SECTOR_REC_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_MBP_SECTOR_REC_TRACE_ID, N=%d, <systime>  CP_RMC_MBP_SECTOR_REC- FmpSecNumSec:%d, MbpSecNumSec:%d, Sec0PN:%d, Sec1PN:%d, Sec2PN:%d, Sec3PN:%d, Sec4PN:%d, Sec5PN:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FmpSecNumSec, uint32
    MbpSecNumSec, uint32
    Sec0PN, int32
    Sec1PN, int32
    Sec2PN, int32
    Sec3PN, int32
    Sec4PN, int32
    Sec5PN, int32
End

Begin Message, CP Trace CP_RMC_MBP_PCG_RENUM_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_MBP_PCG_RENUM_TRACE_ID, N=%d, <systime>  CP_RMC_MBP_PCG_RENUM- NumPcg:%d, PcgId0:%d, PcgId1:%d, PcgId2:%d, PcgId3:%d, PcgId4:%d, PcgId5:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NumPcg, uint32
    PcgId0, uint32
    PcgId1, uint32
    PcgId2, uint32
    PcgId3, uint32
    PcgId4, uint32
    PcgId5, uint32
End

Begin Message, CP Trace CP_RMC_FMP_SLOTFOUND_ERROR_1_TRACE_ID Rsp
    printformat , RMC_FMP, 1, CP_RMC_FMP_SLOTFOUND_ERROR_1_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_INSPSYNC_ERROR_1- HalfSlotCorr(): Not in INITACQ! FmpMode:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FmpMode, uint32, base=enum:INIT/TRAFFIC/none/IDLE
End

Begin Message, CP Trace CP_RMC_FMP_INSPSYNC_ERROR_1_TRACE_ID Rsp
    printformat , RMC_FMP, 1, CP_RMC_FMP_INSPSYNC_ERROR_1_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_INSPSYNC_ERROR_1- FmpProcessInspSyncMsg(): Not in INITACQ! FmpMode:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FmpMode, uint32, base=enum:INIT/TRAFFIC/none/IDLE
End

Begin Message, CP Trace CP_RMC_FMP_INSPSYNC_ERROR_2_TRACE_ID Rsp
    printformat , RMC_FMP, 1, CP_RMC_FMP_INSPSYNC_ERROR_2_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_INSPSYNC_ERROR_2- FmpSetCpSyncTime(): Not in INITACQ! FmpMode:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FmpMode, uint32, base=enum:INIT/TRAFFIC/none/IDLE
End

Begin Message, CP Trace CP_RMC_FMP_TMR_START_ERROR_TRACE_ID Rsp
    printformat , RMC_FMP, 1, CP_RMC_FMP_TMR_START_ERROR_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_TMR_START_ERROR- Tmr already started! Tmr:%s, Fng:%d, TmrStatus:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TmrId, uint32, base=enum:DROPTmr/GRACETmr
    FngIndex, uint32
    TmrStatus, uint32, base=enum:NA/Active/Expired
End

Begin Message, CP Trace CP_RMC_FMP_TMR_STOP_ERROR_TRACE_ID Rsp
    printformat , RMC_FMP, 1, CP_RMC_FMP_TMR_STOP_ERROR_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_TMR_STOP_ERROR- Tmr not active! Tmr:%s, Fng:%d, TmrStatus:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TmrId, uint32, base=enum:DROPTmr/GRACETmr
    FngIndex, uint32
    TmrStatus, uint32, base=enum:NA/Active/Expired
End

Begin Message, CP Trace CP_RMC_FMP_SYS_TIME_TRK_ERROR_TRACE_ID Rsp
    printformat , RMC_FMP, 1, CP_RMC_FMP_SYS_TIME_TRK_ERROR_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_SYS_TIME_TRK_ERROR- Earliest Fng not assigned! fng:%d, assigned:%d, allocStatus:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    EarliestFngIndex, uint32
    assigned, uint32
    allocStatus, uint32,  base=enum:Finger Alloc Status
End

Begin Message, CP Trace CP_RMC_FMP_DLL_BUFFER_ERROR_TRACE_ID Rsp
    printformat , RMC_FMP, 1, CP_RMC_FMP_DLL_BUFFER_ERROR_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_DLL_BUFFER_ERROR- out of Dll Buffers! fng:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    fngIndex, uint32
End

Begin Message, CP Trace CP_RMC_FMP_FNGALGO_EMPTY_TRACE_ID Rsp
    printformat , RMC_FMP, 1, CP_RMC_FMP_FNGALGO_EMPTY_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FNGALGO_EMPTY- SCH & Finger List empty, exit FngAlgo! FmpTrigger:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FmpTrigger, uint32, base=enum:SCH/CELLSW
End

Begin Message, CP Trace CP_RMC_FMP_SCHRESULTS_ERROR_1_TRACE_ID Rsp
    printformat , RMC_FMP, 1, CP_RMC_FMP_SCHRESULTS_ERROR_1_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_SCHRESULTS_ERROR_1- SCH results exceed maxSz! usablePaths:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    usablePaths, uint32
End

Begin Message, CP Trace CP_RMC_FMP_SCHRESULTS_ERROR_2_TRACE_ID Rsp
    printformat , RMC_FMP, 1, CP_RMC_FMP_SCHRESULTS_ERROR_2_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_SCHRESULTS_ERROR_2- SCHAllocList not empty, dealloc all recs..! ant:%s, count:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ant, uint32, base=enum:MAIN/DIV
    count, uint32
End

Begin Message, CP Trace CP_RMC_FMP_SCHRESULTS_ERROR_3_TRACE_ID Rsp
    printformat , RMC_FMP, 1, CP_RMC_FMP_SCHRESULTS_ERROR_3_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_SCHRESULTS_ERROR_3- Out of FmpAllocT Buffers! schResults(i):%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    i, uint32
End

Begin Message, CP Trace CP_RMC_FMP_SCHRESULTS_ERROR_4_TRACE_ID Rsp
    printformat , RMC_FMP, 1, CP_RMC_FMP_SCHRESULTS_ERROR_4_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_SCHRESULTS_ERROR_4- No SCH usable paths! numUsablePaths:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    usablePaths, uint32
End

Begin Message, CP Trace CP_RMC_FMP_BUILDFNGLIST_ERROR_TRACE_ID Rsp
    printformat , RMC_FMP, 1, CP_RMC_FMP_BUILDFNGLIST_ERROR_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_BUILDFNGLIST_ERROR- Out of FmpAllocT Buffers! Fng(i):%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    i, uint32
End

Begin Message, CP Trace CP_RMC_FMP_FNGCFG_REG_ERROR_TRACE_ID Rsp
    printformat , RMC_FMP, 1, CP_RMC_FMP_FNGCFG_REG_ERROR_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FNGCFG_REG_ERROR- Prev FngCfg Callbk not served! CurrSlot:%d, ActionSlot:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurrSlot, uint32
    ActionSlot, uint32
End

Begin Message, CP Trace CP_RMC_FMP_FNG_TIME_TRK_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_FNG_TIME_TRK_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FNG_TIME_TRK- Chip:%d, CurrSlot:%d, stAdjTc16:%d, FingerNum:%d, FingerPos:0x%08x, OffsetTc16:0x%08x, prevFngPos:0x%08x, prevOffsTc16:0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Chip, uint32
    currSlot, uint32
    stAdjTc16, uint32
    FingerNum, uint32
    FingerPos, uint32
    OffsetTc16, uint32
    prevFngPos, uint32, default=0
    prevOffsTc16, uint32, default=0
End

Begin Message, CP Trace CP_RMC_FMP_SYS_TIME_TRK_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_SYS_TIME_TRK_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_SYS_TIME_TRK- AdvRet:%s, diffQ4:%d, earliestOff:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AdvRet, uint32, base=enum:none/adv/ret
    diffQ3, uint32
    earliestOff, uint32
End

Begin Message, CP Trace CP_RMC_FMP_FNGASSIGN_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_FNGASSIGN_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FNGASSIGN- Chip:%d, CurrSlot:%d, newF0:%d, newF1:%d, newF2:%d, newF3:%d, newF4:%d, newF5:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChipTime, uint32
    SlotTime, uint32
    newF0, uint32
    newF1, uint32
    newF2, uint32
    newF3, uint32
    newF4, uint32
    newF5, uint32
End

Begin Message, CP Trace CP_RMC_FMP_FASTTTREGISTER_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_FASTTTREGISTER_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FASTTTREGISTER- Chip:%d, CurrSlot:%d, FastTTround:%d, ActionSlot:%d, fngCfgTime:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChipTime, uint32
    SlotTime, uint32
    FastTTround, uint32
    FastTTRegistered, uint32
    FnMode, uint32
End

Begin Message, CP Trace CP_RMC_FMP_FASTTTRK_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_FASTTTRK_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FASTTTRK- Chip:%d, CurrSlot:%d, FastTTround:%d, FastTTreg:%d, DllMode:0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    chipTime, uint32
    currSlot, uint32
    FastTTround, uint32
    FastTTreg, uint32
    DllMode, uint32
End

Begin Message, CP Trace CP_RMC_FMP_FNGCFG_REGISTER_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_FNGCFG_REGISTER_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FNGCFG_REGISTER- CurrSlot:0x%08x, CurrChip:%d, ActionSlot:%d, callbkTimeUs:%d, fnEnCap(chips):%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurrSlot, uint32
    CurrChip, uint32
    ActionSlot, uint32
    callBkTimeUs, uint32
    fnEnCap, uint32
End

Begin Message, CP Trace CP_RMC_FMP_FASTTTCANCEL_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_FASTTTCANCEL_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FASTTTCANCEL- FastTTround:%d, FastTTActionSlot:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FastTTround, uint32
    FastTTActionSlot, uint32
End

Begin Message, CP Trace CP_RMC_FMP_SLOTFOUND_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_SLOTFOUND_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_SLOTFOUND- Chip:%d, CurrSlot:0x%08x, fnOff:%d, RxSOff(Tc/16):0x%08x, RxSlotOffHw:0x%04x, FmpMode:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Chip, uint32
    currSlot, uint32
    fnOffset, uint32
    RxSlotOffset, uint32
    RxSlotOffHw, uint32
    FmpMode, uint32, base=enum:INIT/TRAFFIC/none/IDLE
End

Begin Message, CP Trace CP_RMC_FMP_INSPSYNC_STHW_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_INSPSYNC_STHW_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_INSPSYNC_STHW- Chip:%d, currSlot:0x%08x, currCpSysTimeInSlotUpper:0x%08x, currCpSysTimeInSlot32bit:0x%08x, StHwSyncTimeTC8:0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Chip, uint32
    CurrSlot, uint32
    currCpSysTimeInSlotUpper, uint32
    currCpSysTimeInSlot32bit, uint32
    StHwSyncTimeTC8, uint32
End

Begin Message, CP Trace CP_RMC_FMP_INITACQ_OFFSET_ADJ_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_INITACQ_OFFSET_ADJ_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_INITACQ_OFFSET_ADJ_TRACE_ID- Chip:%d, currSlot:0x%08x, StHwSyncTimeTC8:0x%08x, OffsetQ3:0x%08x, SlotCount:0x%08x, ActionSlot:0x%08x, actionFrame:0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Chip, uint32
    CurrSlot, uint32
    StHwSyncTimeTC8, uint32
    OffsetQ3, uint32
    SlotCount, uint32
    ActionSlot, uint32
    actionFrame, uint32
End

Begin Message, CP Trace CP_RMC_FMP_INSPSYNC_STSET_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_INSPSYNC_STSET_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_INSPSYNC_STSET- Chip:%d, currSlot:0x%08x, currCpSysTimeFrame:0x%08x, currCpSysTimeSlot:0x%08x, FmpMode:%s, SchMode:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Chip, uint32
    CurrSlot, uint32
    currCpSysTimeFrame, uint32
    currCpSysTimeSlot, uint32
    FmpMode, uint32, base=enum:INIT/TRAFFIC/none/IDLE
    SchMode, uint32, base=enum:SchModeT
End

Begin Message, CP Trace CP_RMC_FMP_PROC_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_PROC_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_PROC- Chip:%d, CurrSlot:%d, Trigger:%s, ServPN:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    chipTime, uint32
    currSlot, uint32
    FmpTrigger, uint32, base=enum:SCH/CELLSW
    ServingPN, uint32
End

Begin Message, CP Trace CP_RMC_FMP_INITACQ_FNGASSIGN_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_INITACQ_FNGASSIGN_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_INITACQ_FNGASSIGN- Chip:%d, CurrSlot:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    chipTime, uint32
    currSlot, uint32
End

Begin Message, CP Trace CP_RMC_FMP_CONNSETUP_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_CONNSETUP_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_CONNSETUP- Chip:%d, CurrSlot:%d, FmpMode:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    chipTime, uint32
    currSlot, uint32
    FmpMode, uint32, base=enum:INIT/TRAFFIC/none/IDLE
End

Begin Message, CP Trace CP_RMC_FMP_NETWK_RESET_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_NETWK_RESET_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_NETWK_RESET- Chip:%d, CurrSlot:%d, FmpMode:%s=>%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    chipTime, uint32
    currSlot, uint32
    FmpMode, uint32, base=enum:INIT/TRAFFIC/none/IDLE
    FmpModeNew, uint32, base=enum:INIT/TRAFFIC/none/IDLE
End

Begin Message, CP Trace CP_RMC_FMP_CONNCLOSE_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_CONNCLOSE_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_CONNCLOSE- Chip:%d, CurrSlot:%d, FmpMode:%s=>%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    chipTime, uint32
    currSlot, uint32
    FmpMode, uint32, base=enum:INIT/TRAFFIC/none/IDLE
    FmpModeNew, uint32, base=enum:INIT/TRAFFIC/none/IDLE
End

Begin Message, CP Trace CP_RMC_FMP_CCSHORTPKT_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_CCSHORTPKT_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_CONNCLOSE- Chip:%d, CurrSlot:%d, FmpMode:%s, CcShortPktInd:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    chipTime, uint32
    currSlot, uint32
    FmpMode, uint32, base=enum:INIT/TRAFFIC/none/IDLE
    CcShortPktInd, uint32
End

Begin Message, CP Trace CP_RMC_FMP_TMR_START_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_TMR_START_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_TMR_START- Chip:%d, CurrSlot:%d, Tmr:%s, Fng:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    chipTime, uint32
    currSlot, uint32
    TmrId, uint32, base=enum:DROPTmr/GRACETmr
    FngIndex, uint32
End

Begin Message, CP Trace CP_RMC_FMP_TMR_STOP_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_TMR_STOP_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_TMR_STOP- Chip:%d, CurrSlot:%d, Tmr:%s, Fng:%d, TmrStatus:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    chipTime, uint32
    currSlot, uint32
    TmrId, uint32, base=enum:DROPTmr/GRACETmr
    FngIndex, uint32
    TmrStatus, uint32, base=enum:NA/Active/Expired
End

Begin Message, CP Trace CP_RMC_FMP_COMBINING_STATUS_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_COMBINING_STATUS_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_COMBINING_STATUS- FingerNum:%d, MainSNR:%4.3f dB, DivSNR:%4.3f dB, CombStatus:%s, FngStatus:%s, divDrop:%s, divAssign:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FingerNum, uint32
    MainSNRdB, uint32, scale=Q9, log10=true, logscale=10
    DivSNRdB, uint32, scale=Q9, log10=true, logscale=10
    CombStatus, uint32, base=enum:NONE/MAIN/DIV/MAIN_DIV
    FngStatus, uint32, base=enum:NORMAL/MAIN_ONLY/DIV_ONLY
    divDrop, uint32, base=enum:NONE/MAIN/DIV
    divAssign, uint32, base=enum:NONE/MAIN/DIV
End

Begin Message, CP Trace CP_RMC_FMP_SECTOR_REC_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_SECTOR_REC_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_SECTOR_REC- NumSec:%d, Sec0PN:%d, Sec1PN:%d, Sec2PN:%d, Sec3PN:%d, Sec4PN:%d, Sec5PN:%d, servPN:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NumSec, uint32
    Sec0PN, uint32
    Sec1PN, uint32
    Sec2PN, uint32
    Sec3PN, uint32
    Sec4PN, uint32
    Sec5PN, uint32
    servPN, uint32
End

Begin Message, CP Trace CP_RMC_FMP_FNG_ALLOC_BUILD_LIST_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_FNG_ALLOC_BUILD_LIST_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FNG_ALLOC_BUILD_LIST- FngNum:%d, MainPwrOT:%d, DivPwrOT:%d, FngOT:%d, FngOffsetTc16:%d, FngPwrdB:%4.3f dB, AllocCnt:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FngNum, uint32
    MainPwrOT, uint32
    DivPwrOT, uint32
    FngOT, uint32
    FngOffsetTc16, uint32
    FngPwrdB, uint32, scale=Q16, log10=true, logscale=10
    AllocCnt, uint32
End

Begin Message, CP Trace CP_RMC_FMP_EQTMR_START_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_EQTMR_START_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_EQTMR_START_TRACE_ID - chipTime:%d, currSlot:%d, TmrId:%s, FngIndex:%d, TmrStatus:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    chipTime, uint32
    currSlot, uint32
    TmrId, uint32, base=enum:DROPTmr/GRACETmr
    FngIndex, uint32
    TmrStatus, uint32, base=enum:NOT_STARTED/Active/Expired/Stopped
End

Begin Message, CP Trace CP_RMC_FMP_EQTMR_STOP_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_EQTMR_STOP_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_EQTMR_STOP_TRACE_ID-  chipTime:%d, currSlot:%d, TmrId:%s, FngIndex:%d, TmrStatus:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    chipTime, uint32
    currSlot, uint32
    TmrId, uint32, base=enum:DROPTmr/GRACETmr
    FngIndex, uint32
    TmrStatus, uint32, base=enum:NOT_STARTED/Active/Expired/Stopped
End

Begin Message, CP Trace CP_RMC_FMP_EQ_COMB_MODE_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_EQ_COMB_MODE_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_EQ_COMB_MODE- EqCombMode:%s, DeltaComb:0x%08x, FiltEqFnSnr:%3.2f dB, C2ILong:%3.2f dB, FN_SNR:%3.2f dB, EQFN_SNR:%3.2f dB
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    EqCombMode, uint32, base=enum:NotChg/RakOnly/EqOnly/SelMax/CombSum/DataSum/AutoComb/MaxAll
    DeltaComb, uint32
    FiltEqFnSnr, uint32, scale=Q9, log10=true, logscale=10
    C2ILong, uint32, scale=Q9, log10=true, logscale=10
    FN_SNR, uint32, scale=Q9, log10=true, logscale=10
    EQFN_SNR, uint32, scale=Q9, log10=true, logscale=10
End

Begin Message, CP Trace CP_RMC_FMP_EQ_SNR_AUTO_DROP_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_EQ_SNR_AUTO_DROP_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_EQ_SNR_ATUO_DROP - RakeFngIirSnr:%3.2f dB, EqFngIirSnr:%3.2f dB, EqDropDueToLowC2iLong:%s, EqDropDueToEqRakeSnrImBalance:%s, EqStatus:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RakeFngIirSnr, uint32, scale=Q9, log10=true, logscale=10
    EqFngIirSnr, uint32, scale=Q9, log10=true, logscale=10
    EqDropDueToLowC2iLong, uint32, base=enum:FALSE/TRUE
    EqDropDueToEqRakeSnrImBalance, uint32, base=enum:FALSE/TRUE
    EqDropTimer, uint32, base=enum:TimerNotRunning/TimerStarted/TimerExpired/TimerStoped
End

Begin Message, CP Trace CP_RMC_FMP_TEST_FMPSCHPROC0_TRACE_ID Rsp
    printformat , RMC_FMP, 3, CP_RMC_FMP_TEST_FMPSCHPROC0_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_TEST_FMPSCHPROC0- CurrSlot:%d, NextSlot:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurrSlot, uint32
    NextSlot, uint32
End

Begin Message, CP Trace CP_RMC_FMP_INSPSYNC_1STCC_TRACE_ID Rsp
    printformat , RMC_FMP, 3, CP_RMC_FMP_INSPSYNC_1STCC_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_INSPSYNC_1STCC- Chip:%d, CurrSlot:0x%08x, FirstCcTimeStamp:0x%08x, SyncMessageTimeInSlotUpper:0x%08x, SyncMessageTimeInSlotLower32:0x%08x, SyncMsgPN:%d, M:%d, StHwSyncTimeTC8:0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    chipTime, uint32
    currSlot, uint32
    FirstCcTimeStamp, uint32
    SyncMessageTimeInSlotUpper, uint32
    SyncMessageTimeInSlotLower32, uint32
    SyncMsgPN, uint32
    M, uint32
    StHwSyncTimeTC8, uint32
End

Begin Message, CP Trace CP_RMC_FMP_INSPSYNC_K1_L_K2_TRACE_ID Rsp
    printformat , RMC_FMP, 3, CP_RMC_FMP_INSPSYNC_K1_L_K2_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_INSPSYNC_K1- CurSysTimeInSlotLower32:0x%08x, K1:%d, L:%d, K2:%d,syncTimeHwUpdateTimeLower32:0x%08x,CpSyncSysTimeLower32:0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurSysTimeInSlotLower32, uint32
    K1, uint32
    L, uint32
    K2, uint32
    syncTimeHwUpdateTimeLower32, uint32
    CpSyncSysTimeLower32, uint32
End

Begin Message, CP Trace CP_RMC_FMP_FNG_NO_TIME_TRK_TRACE_ID Rsp
    printformat , RMC_FMP, 3, CP_RMC_FMP_FNG_NO_TIME_TRK_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FNG_NO_TIME_TRK- myFng:%d, mynewPos:0x%08x, fng1:%d, fngPos1:0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    myFngIndex, uint32
    myNewFngPos, uint32
    fngIndex1, uint32
    fingerPos1, uint32
End

Begin Message, CP Trace CP_RMC_FMP_FNG_TIME_TRK_ALGO_TRACE_ID Rsp
    printformat , RMC_FMP, 3, CP_RMC_FMP_FNG_TIME_TRK_ALGO_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FNG_TIME_TRK_ALGO- myFng:%d, PO:%d, PE:%d, PL:%d, pEL:%d, pOT_R1:%d, fngPos:0x%08x,  newPos:0x%08x, advRet:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    myFngIndex, uint32
    pwrOnTime, uint32
    pwrEarly, uint32
    pwrLate, uint32
    pwrEL, uint32
    pwrOT_R1, uint32
    fngPos, uint32
    newFngPos, uint32
    advRet, uint32, base=enum:ret/adv/none
End

Begin Message, CP Trace CP_RMC_FMP_FNGALGO_SCH_PRUNE_TRACE_ID Rsp
    printformat , RMC_FMP, 3, CP_RMC_FMP_FNGALGO_SCH_PRUNE_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FNGALGO_PRUNE- Func:%s, Reason:%s, Prune:%d, i:%d, j:%d, off1:0x%04x, pwr1:%d, off2:0x%04x, pwr2:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    func, uint32, base=enum:SCHSame/SCHDiff/SCHAny/SCHInt/FngInt/WeakFng/INSTDROP
    reason, uint32, base=enum:MinPath/FatFng/SideLobes/WeakFng/INSTDROP1/INSTDROP2
    prune, uint32
    i, uint32
    j, uint32
    off1, uint32
    pwr1, uint32
    off2, uint32
    pwr2, uint32
End

Begin Message, CP Trace CP_RMC_FMP_FNGALGO_FNG_PRUNE_TRACE_ID Rsp
    printformat , RMC_FMP, 3, CP_RMC_FMP_FNGALGO_FNG_PRUNE_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FNGALGO_PRUNE- Func:%s, Reason:%s, Prune:%d, i:%d, j:%d, off1:0x%04x, pwr1:%d, off2:0x%04x, pwr2:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    func, uint32, base=enum:SCHSame/SCHDiff/SCHAny/SCHInt/FngInt/WeakFng/INSTDROP
    reason, uint32, base=enum:MinPath/FatFng/SideLobes/WeakFng/INSTDROP1/INSTDROP2
    prune, uint32
    i, uint32
    j, uint32
    off1, uint32
    pwr1, uint32
    off2, uint32
    pwr2, uint32
End

Begin Message, CP Trace CP_RMC_FMP_FNGALGO_ASSIGN_TRACE_ID Rsp
    printformat , RMC_FMP, 3, CP_RMC_FMP_FNGALGO_ASSIGN_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FNGALGO_ASSIGN- Reason:%s, i:%d, fngNum:%d, pn:%d, off:0x%04x, macId:%d, pwr:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    reason, uint32, base=enum:AntPair/1Pair/Leftover/LeftOverMac
    i, uint32
    fngNum, uint32
    pn, uint32
    off, uint32
    macId, uint32
    pwr, uint32
End

Begin Message, CP Trace CP_RMC_FMP_FNGALGO_EARLYSTRONG_TRACE_ID Rsp
    printformat , RMC_FMP, 3, CP_RMC_FMP_FNGALGO_EARLYSTRONG_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_FNGALGO_EARLYSTRONG- Earliest:%d, off:0x%04x, Strongest:%d, pwr:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    earliest, uint32
    off, uint32
    strongest, uint32
    pwr, uint32
End

Begin Message, CP Trace CP_RMC_FMP_SCHRESULTS_INVALID_TRACE_ID Rsp
    printformat , RMC_FMP, 3, CP_RMC_FMP_SCHRESULTS_INVALID_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_SCHRESULTS_INVALID- usablePaths:%d, i:%d, assocAnt:%s, pn:%d, off:%d, macId:%d, pwr:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    UsablePaths, uint32
    i, uint32
    ant, uint32, base=enum:MAIN/DIV
    pilotPN, uint32
    offsetTc16, uint32
    macId, uint32
    pwrEstQ16, uint32
End

Begin Message, CP Trace CP_RMC_FMP_SCHRESULTS_STORED_TRACE_ID Rsp
    printformat , RMC_FMP, 3, CP_RMC_FMP_SCHRESULTS_STORED_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_SCHRESULTS_STORED- usablePaths:%d, i:%d, assocAnt:%s, pn:%d, off:%d, macId:%d, pwr:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    UsablePaths, uint32
    i, uint32
    ant, uint32, base=enum:MAIN/DIV
    pilotPN, uint32
    offsetTc16, uint32
    macId, uint32
    pwrEstQ16, uint32
End

Begin Message, CP Trace CP_RMC_FMP_EXE_BUFFER_TRACE_ID Rsp
    printformat , RMC_FMP, 3, CP_RMC_FMP_EXE_BUFFER_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_EXE_BUFFER- %s, Type:%s, buffptr:0x%08x, i:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    GetSet, uint32, base=enum:Get/Free
    Type, uint32, base=enum:AllocSCH/AllocFng/AllocDll
    bufferptr, uint32
    index, uint32
End

Begin Message, CP Trace CP_RMC_FMP_EQ_TIME_TRK_ALGO_TRACE_ID Rsp
    printformat , RMC_FMP, 3, CP_RMC_FMP_EQ_TIME_TRK_ALGO_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_EQ_TIME_TRK_ALGO- EqNum:0x%04x, EqCurPos:0x%04x, FnCenterPosM:0x%04x, FnRefPosM:0x%04x, errTrkTc16:0x%04x, dirTrk:0x%04x, errPosTc16:0x%04x,  dirCenter:0x%04x, EqFgrNewPos:0x%04x, EqNewPos:0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    EqNum, bit, count=16, offset=0,  bytes=4, pos=first, base=16
    EqCurPos, bit, count=16, offset=16, bytes=4, pos=last,  base=16
    FnCenterPosM, bit, count=16, offset=0,  bytes=4, pos=first, base=16
    FnRefPosM, bit, count=16, offset=16, bytes=4, pos=last,  base=16
    errTrkTc16, bit, count=16, offset=0,  bytes=4, pos=first, base=16
    dirTrk, bit, count=16, offset=16, bytes=4, pos=last,  base=16
    errPosTc16, bit, count=16, offset=0,  bytes=4, pos=first, base=16
    dirCenter, bit, count=16, offset=16, bytes=4, pos=last,  base=16
    EqFgrNewPos, bit, count=16, offset=0,  bytes=4, pos=first, base=16
    EqNewPos, bit, count=16, offset=16, bytes=4, pos=last,  base=16
End

Begin Message, CP Trace CP_RMC_FMP_C2I_TRACE_ID Rsp
    printformat , RMC_FMP, 2, CP_RMC_FMP_C2I_TRACE_ID, N=%d, <systime>  CP_RMC_FMP_C2I- Id:0x%08x, FingerPairCnt:0x%08x, FnEnBit:0x%08x, SchEcIodB:%4.3f dB, C2IdB:%4.3f dB, FngEcIodB:%4.3f dB
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Id, uint32
    FingerPairCnt, uint32
    FnEnBit, uint32
    SchEcIodB, uint32, scale=Q16, format=%2.3f, log10=true, logscale=10
    C2IdB, uint32, scale=Q9, format=%2.3f, log10=true, logscale=10
    FngEcIodB, uint32, scale=Q16, format=%2.3f, log10=true, logscale=10
End

Begin Message, CP Trace CP_RMC_FMP_MMSE_MRC_TRACE_ID Rsp
    printformat , RMC_FMP, 4, CP_RMC_FMP_MMSE_MRC_TRACE_ID, N=%d, <systime>  RMC - Running in:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RMC FMP Running in, uint8,  base=enum:RmcFmpMrcMmseCombModeT
End

Begin Message, CP Trace CP_RMC_RXP_TRACE_ID Rsp
    printformat , RMC_RXP, 2, CP_RMC_RXP_TRACE_ID, N=%d, <systime>  CP_RMC_RXP- Cmd:%s, Chip:%d, CurrSlot:%d, RxCMode:%d, FnMode:%d, RMC:%s, SCH:%s, Trf:%s, Preempt:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    cmd, uint32, base=enum:Rmc Command Type
    chipTime, uint32
    currSlot, uint32
    RxCMode, uint32
    FnMode, uint32
    RmcModemState, uint32, base=enum:INACT/INITP/INIT/MINI/SYNC/ONLINE/PAUSE/LTE_CONN/LTE_IDLE/RMC_LTE_CONNECTED_DO_INIT_ACQ/RMC_LTE_IDLE_DO_INIT_ACQ
    SchMode, uint32, base=enum:RST/PAUSE/INIT/INITON/INITVER/MINI/FAST/ONLINE/OFFADJ/FASTFULL/OFFLINE_S/OFFLINE_L/INIT_ACQ_OFFLINE_SHORT/INIT_ACQ_OFFLINE_LONG/DFS
    TrafficMode, uint32, base=enum:NO/YES
    RFPreamptMode, uint32, base=enum:NONE/INITACQ/MINI/ONLINE_IDLE/ONLINE_TRAFFIC/wNTWK_RST
End

Begin Message, CP Trace CP_RMC_MPA_TRACE_ID Rsp
    printformat , RMC_MPA, 1, CP_RMC_MPA_TRACE_ID, N=%d, <systime>  CP_RMC_MPA- Action:%s Arg:%s, Result :%s, ReqPending:%s, Trf:%s, RMC:%s, SCH:%s, DivEnable:%s, HasDivPath:%s, MainDivCombEn:%s, RfPathMain:0x%x, RfPathDiv:0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Action, bit, offset=4, count=4, bytes=1, pos=first,  base=enum:Rmv/Add/Req/HwOn/HwOff/Denied/Update
    Arg, bit, offset=0, count=4, bytes=1, pos=last,   base=enum:Rmc Mpa Mdm Antenna Type
    Result, bit, offset=5, count=3, bytes=1, pos=first,  base=enum:Rmc Mpa Mdm Antenna Type
    ReqPending, bit, offset=2, count=3, bytes=1, pos=middle, base=enum:Rmc Mpa Mdm Antenna Type
    TrafficMode, bit, offset=0, count=2, bytes=1, pos=last,   base=enum:NO/YES
    RmcModemState, bit, offset=4, count=4, bytes=1, pos=first,  base=enum:INACT/INITP/INIT/MINI/SYNC/ONLINE/PAUSE/LTE_CONN/LTE_IDLE/RMC_LTE_CONNECTED_DO_INIT_ACQ/RMC_LTE_IDLE_DO_INIT_ACQ
    SchMode, bit, offset=0, count=4, bytes=1, pos=last,   base=enum:RST/PAUSE/INIT/INITON/INITVER/MINI/FAST/ONLINE/OFFADJ/FASTFULL/OFFLINE_S/OFFLINE_L/INIT_ACQ_OFFLINE_SHORT/INIT_ACQ_OFFLINE_LONG/DFS
    DivEnable, bit, offset=7, count=1, bytes=1, pos=first,  base=enum:NO/YES
    HasDivPath, bit, offset=6, count=1, bytes=1, pos=middle, base=enum:NO/YES
    MainDivCombEn, bit, offset=5, count=1, bytes=1, pos=middle, base=enum:NO/YES
    RfPathMain, bit, offset=0, count=5, bytes=1, pos=last,   base=16
    RfPathDiv, uint8,                                       base=16
End

Begin Message, CP Trace CP_RMC_DFS_TRACE_ID Rsp
    printformat , RMC_DFS, 1, CP_RMC_DFS_TRACE_ID, N=%d, <systime>  CP_RMC_DFS- %d %d %d %d %d %d %d %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int32, maxsize=8, size=end
End

Begin Message, CP Trace CP_RMC_TST_TRACE_ID Rsp
    printformat , 1, 1, CP_RMC_TST_TRACE_ID, N=%d, <systime>  CP - RMC_TST: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP_RMC_LEC_MOB_SYSOFFSET_TRACE_ID Rsp
    printformat , RMC_LEC_MOB_SYSOFFS, 1, CP_RMC_LEC_MOB_SYSOFFSET_TRACE_ID, N=%d, <systime>  CP_RMC_LEC_MOB_SYSOFFS- QueryCmdType: %s, SysTimeOffsetQ4(Tc16): %d, EarliestFngIndex: %d, EarliestFngPos: %d, EarliestFngOffsetTc16: %d, EarliestFngPilotPN: %d, EarliestFngPwrEstQ16: %.2f, StrongestFngIndex: %d, StrongestFngPos: %d, StrongestFngOffsetTc16: %d, StrongestFngPilotPN: %d, StrongestFngPwrEstQ16: %.2f, Trf:%s, Preempt:%s, RspPending:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    QueryCmdType, int16, base=enum:START/END
    SysTimeOffsetQ4, int16, base=10
    EarliestFngIndex, int16, base=10
    EarliestFngPos, int16, base=10
    EarliestFngOffsetTc16, int16, base=10
    EarliestFngPilotPN, int16, base=10
    EarliestFngPwrEstQ16, int16, base=10, scale=Q16
    StrongestFngIndex, int16, base=10
    StrongestFngPos, int16, base=10
    StrongestFngOffsetTc16, int16, base=10
    StrongestFngPilotPN, int16, base=10
    StrongestFngPwrEstQ16, int16, base=10, scale=Q16
    TrafficMode, uint8, base=enum:NO/YES
    RFPreamptMode, uint8, base=enum:NONE/INITACQ/MINI/ONLINE_IDLE/ONLINE_TRAFFIC/wNTWK_RST
    RspPending, uint16, base=enum:NO/PendingStart/PendingEnd
End

Begin Message, CP Trace CP_RMC_RX_RSSI_AVG_TRACE_ID Rsp
    printformat , RMC_RX_RSSI_AVG, 1, CP_RMC_RX_RSSI_AVG_TRACE_ID, N=%d, <systime>  CP_RMC_RX_RSSI_AVG- Rx %s, FrmBuffFull %s, AvgRssi %.2f dBm, FrmPerAvg %s, FrmIdx %x, SlotIdx %x, SlotBuffFull %s, data(dBm) %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f, %.2f
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Rx, uint8, base=enum:Main/Div
    FrmBuffFull, uint8, base=enum:FALSE/TRUE
    AvgRssi, int16, base=10, scale=Q7
    FrmPerAvg, uint8, base=enum:single/multi
    FrmIdx, uint8
    SlotIdx, uint8
    SlotBuffFull, uint8, base=enum:FALSE/TRUE
    data, array, type=int16, base=10, scale=Q7, maxsize=8, size=end
End

Begin Message, CP Trace CP_RMC_RX_AGC_AFC_GENERIC_TRACE_ID Rsp
    printformat , RMC_RX_AGC_AFC_GENERIC, 1, CP_RMC_RX_AGC_AFC_GENERIC_TRACE_ID N=%d, <systime>  CP_RMC_RX_AGC_AFC_GENERIC: %s, %s, %d, %d, %d, %d, %d, %d, %d, %d
    N, uint32
    FullSysTime, array,  type=uint64, base=date, maxsize=4, size=N
    module, int32,  base=enum:AGC/AFC
    RxAgcState, uint32, base=enum:RxAgcState, exist=(module==0)
    AfcState, uint32, base=enum:AfcState,   exist=(module==1)
    RxPath, uint32, base=enum:Main/Div,   exist=(module==0)
    Args, array,  type=uint32, maxsize=8, size=end
End

Begin Message, CP Trace CP_RMC_ATD_ACM_RTM_PORT_TRACE_ID Rsp
    printformat , RMC, 2, CP_RMC_ATD_ACM_RTM_PORT_TRACE_ID, N=%d, <systime>  CP_RMC_ATD_ACM_RTM_PORT - PortSwitch: %d, Mode: %d, ForcedPort: %d, CurrPort: %d, HystFrmCntrMax: %d, HystFrmCntr: %d, RscpCurr: %2.4f, Rssi0: %2.4f, Rssi1: %2.4f, EcIo0: %2.4f, EcIo1: %2.4f, RscpInst: %2.4f, thold_RSSI: %2.4f, thold_RSCP: %2.4f
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PortSwitch, uint8, base=enum:FALSE/TRUE
    Mode, uint8, base=enum:Access/Traffic
    ForcedPort, uint8
    CurrPort, uint8
    HystFrmCntrMax, uint16
    HystFrmCntr, uint16
    RscpCurr(dB), int32, scale=Q16
    Rssi0(dB), int32, scale=Q16
    Rssi1(dB), int32, scale=Q16
    EcIo0(dB), int32, scale=Q16
    EcIo1(dB), int32, scale=Q16
    RscpInst(dB), int32, scale=Q16
    thold_RSSI(dB), int32, scale=Q16
    thold_RSCP(dB), int32, scale=Q16
End

Begin Message, CP Trace CP_L1CD_ENGINE_MESSAGE_ID Rsp
    printformat , 1, 1, CP_L1CD_ENGINE_MESSAGE_ID, N=%d, <systime>  CP - RMC L1CD Message %s received for engine core
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg ID, uint32, base=enum:Rmc Message Name
End

Begin Message, CP Trace CP_L1CD_NONE_MODE_ST_CHG_TRACE_ID Rsp
    printformat ,      1,1,CP_L1CD_NONE_MODE_ST_CHG_TRACE_ID, N=%d, <systime>  CP - RMC L1CD None Mode State transition to current state: %s from previous state: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurState, uint32, base=enum:L1CD None State
    PrevState, uint32, base=enum:L1CD None State
End

Begin Message, CP Trace CP_L1CD_SLAVE_MODE_ST_CHG_TRACE_ID Rsp
    printformat ,      1,1,CP_L1CD_SLAVE_MODE_ST_CHG_TRACE_ID, N=%d, <systime>  CP - RMC L1CD Slave Mode State transition to current state: %s from previous state: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurState, uint32, base=enum:L1CD Slave State
    PrevState, uint32, base=enum:L1CD Slave State
End

Begin Message, CP Trace CP_L1CD_MASTER_MODE_ST_CHG_TRACE_ID Rsp
    printformat ,      1,1,CP_L1CD_MASTER_MODE_ST_CHG_TRACE_ID, N=%d, <systime>  CP - RMC L1CD Master Mode State transition to current state: %s from previous state: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurState, uint32, base=enum:L1CD Master State
    PrevState, uint32, base=enum:L1CD Master State
End

Begin Message, CP Trace CP_L1CD_MODE_CHG_TRACE_ID Rsp
    printformat ,      1,1,CP_L1CD_MODE_CHG_TRACE_ID, N=%d, <systime>  CP - RMC L1CD Mode transition to current mode: %s from previous mode: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurMode, uint32, base=enum:L1CD Mode
    PrevMode, uint32, base=enum:L1CD Mode
End

Begin Message, CP Trace CP_L1CD_ACTION_SET_TRACE_ID Rsp
    printformat ,      1,1,CP_L1CD_ACTION_SET_TRACE_ID, N=%d, <systime>  CP - RMC L1CD Action Set to new action: %s , previous action is: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurAction, uint32, base=enum:L1CD Action
    PrevAction, uint32, base=enum:L1CD Action
End

Begin Message, CP Trace CP_L1CD_PENDED_ACTION_SET_TRACE_ID Rsp
    printformat ,      1,1,CP_L1CD_PENDED_ACTION_SET_TRACE_ID, N=%d, <systime>  CP - RMC L1CD Pended Action Set to new action: %s , previous action is: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurAction, uint32, base=enum:L1CD Action
    PrevAction, uint32, base=enum:L1CD Action
End

Begin Message, CP Trace CP_L1CD_MASTER_RAT_SET_TRACE_ID Rsp
    printformat ,      1,1,CP_L1CD_MASTER_RAT_SET_TRACE_ID, N=%d, <systime>  CP - RMC L1CD Master RAT Set to new RAT Type: %s , previous RAT Type is: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurMasterRat, uint32, base=enum:L1CDRATIdT
    PrevMasterRat, uint32, base=enum:L1CDRATIdT
End

Begin Message, CP Trace CP_L1CD_SERVICE_REQ_RAT_SET_TRACE_ID Rsp
    printformat ,      1,1,CP_L1CD_SERVICE_REQ_RAT_SET_TRACE_ID, N=%d, <systime>  CP - RMC L1CD Service Req RAT Set to new RAT Type: %s , previous RAT Type is: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurServiceReqRat, uint32, base=enum:L1CDRATIdT
    PrevServiceReqRat, uint32, base=enum:L1CDRATIdT
End

Begin Message, CP Trace CP_L1CD_FUNCTION_TRACE_ID Rsp
    printformat , 1, 1, CP RMC L1CD Function Trace, N=%d, <systime>  CP - RMC CP L1CD Function: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Function, uint32, base=enum:L1CDFunctionId
    Rec, union, enum=Function
End

Begin Message, CP_L1CD_FUNCTION_TRACE_ID L1cdSlaveHandlerIratRmcRfReleaseInd() Rsp
End

Begin Message, CP Trace CP_L1CD_RECV_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP RMC L1CD Message handler Trace, N=%d, <systime>  CP - RMC CP L1CD Message handler: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Handler, uint32, base=enum:L1CDMsgHandlerId
    Rec, union, enum=Handler
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1ECDIratServiceCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1ECDMasterRatCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1ECDIratCellListCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1ECDIratMeasCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1ECDIratMeasReportInd() Rsp
    Earfcn, uint32, base=10
    Nof, uint32, base=10
    IsLastReport, uint32, base=enum:FALSE/TRUE
    MeasResult_Rsrp, uint32, base = 10
    MeasResult_Rsrq, uint32, base = 10
    MeasResult_CellId, uint32, base = 10
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1ECDEutranGapInd() Rsp
    gapStart, uint32, base=16
    gapDuration, uint32, base=10
    newTMeas, uint32, base=enum:FALSE/TRUE
    gapPurpose, uint32, base=enum:L1CDGapPurposeT
    gapId, uint32, base=enum:L1CDGapId
    drxPeriod, uint32, base=10
    delayStopGapInd, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1ECDCdmaGapAbortCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1ECDIratStopAllCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDEIratServiceReq() Rsp
    IratServiceRequest, uint32, base=enum:L1CDEIratServiceReqModeT
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDEMasterRatReq() Rsp
    RatId, uint32, base=enum:L1CDRATIdT
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDECdmaIratCellListReq() Rsp
    ListSize, uint32, base=10
    Band, uint32, base=10
    Channel, uint32, base=10
    CellReselPri, uint32, base=10
    SearchWinSize, uint32, base=10,
    NumPn, uint32, base=10,
    MeasMode, uint32, base=enum:L1CDEutranMeasModeT,
    MeasPerCycleMask, uint32, base=16
    MeasEveryCycleMask, uint32, base=16
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDECdmaIratMeasReq() Rsp
    MeasMode, uint32, base=enum:L1CDEutranMeasModeT,
    MeasPerCycleMask, uint32, base=16
    MeasEveryCycleMask, uint32, base=16
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDEStopGapIndCmd() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDEEutranGapAbortReq() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDEIratStopAllReq() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDEIraMeasModeChangeCmd() Rsp
    MeasMode, uint32, base=enum:L1CDEutranMeasModeT,
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDEGapOffsetChangeInd() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1UCDIratServiceCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1UCDMasterRatCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1UCDUtranGapInd() Rsp
    gapStart, uint32, base=16
    gapDuration, uint32, base=10
    newTMeas, uint32, base=enum:FALSE/TRUE
    gapPurpose, uint32, base=enum:L1CDGapPurposeT
    gapRatModeBefore, uint32, base=enum:L1CDIratGapRatModeT
    gapRatModeAfter, uint32, base=enum:L1CDIratGapRatModeT
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1UCDCdmaGapAbortCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDUIratServiceReq() Rsp
    IratServiceRequest, uint32, base=enum:L1CDUIratServiceReqModeT
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDUMasterRatReq() Rsp
    RatId, uint32, base=enum:L1CDRATIdT
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDUtranGapAbortReq() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1GCDIratServiceCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1GCDMasterRatCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1GCDGeranGapInd() Rsp
    gapStart, uint32, base=16
    gapDuration, uint32, base=10
    newTMeas, uint32, base=enum:FALSE/TRUE
    gapPurpose, uint32, base=enum:L1CDGapPurposeT
    gapRatModeBefore, uint32, base=enum:L1CDIratGapRatModeT
    gapRatModeAfter, uint32, base=enum:L1CDIratGapRatModeT
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1GCDCdmaGapAbortCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDGIratServiceReq() Rsp
    IratServiceRequest, uint32, base=enum:L1CDGIratServiceReqModeT
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDGMasterRatReq() Rsp
    RatId, uint32, base=enum:L1CDRATIdT
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDGGeranGapAbortReq() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1TDCDIratServiceCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1TDCDMasterRatCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1TDCDUtranGapInd() Rsp
    gapStart, uint32, base=16
    gapDuration, uint32, base=10
    newTMeas, uint32, base=enum:FALSE/TRUE
    gapPurpose, uint32, base=enum:L1CDGapPurposeT
    gapRatModeBefore, uint32, base=enum:L1CDIratGapRatModeT
    gapRatModeAfter, uint32, base=enum:L1CDIratGapRatModeT
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1TDCDCdmaGapAbortCnf() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDTDIratServiceReq() Rsp
    IratServiceRequest, uint32, base=enum:L1CDTDIratServiceReqModeT
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDTDMasterRatReq() Rsp
    RatId, uint32, base=enum:L1CDRATIdT
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDTDTdranGapAbortReq() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDPlmnSearchReq() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDStopPlmnSearchReq() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDIratMeasCfgReq() Rsp
    ListSize, uint32, base=10
    Earfcn, uint32, base=10
    EarfcnPri, uint32, base=10
    ThreshX, uint32, base=10
    RxLevMinEutra, uint32, base=10
    RxLevMinEutraOffset, uint32, base=10
    PeMax, uint32, base=10
    MeasBandWidth, uint32, base=10
    NumPlmn, uint32, base=10
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDIratMeasReq() Rsp
    MeasMode, uint32, base=enum:L1CDCdmaMeasModeT
    NumFreq, uint32, base=10
    Earfcn, uint32, base=10
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDIratReselReq() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDIratReselResultInd() Rsp
    ReselType, uint32, base=enum:IRAT_RESEL_L2C/IRAT_RESEL_C2L
    ReselResult, uint32, base=enum:FAIL/SUCCESS
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDActivateReq() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDDeactivateReq() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcL1CDDOStateInd() Rsp
    CurDOState, uint32, base=enum:L1CDDOStateT
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcIratRmcMeasReportMsg() Rsp
    Band, uint32, base=10
    Channel, uint32, base=10
    NumPn, uint32, base=10
    Pn, uint32, base=10
    Phase, uint32, base=10
    Strength, uint32, base=10
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcessIratRmcRfAssignInd() Rsp
    Status, uint32, base=enum:Fail/Success
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcIratRmcRfReleaseInd() Rsp
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcCldIratIdpSleepInd() Rsp
    NextWakeupTimeUpper6, uint32, base=16
    NextWakeupTimeLower32, uint32, base=16
End

Begin Message, CP_L1CD_RECV_MSG_TRACE_ID L1cdProcClcIratWakeupInd() Rsp
End

Begin Message, CP Trace CP_L1CD_SEND_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP RMC L1CD Send API Trace, N=%d, <systime>  CP - RMC CP L1CD Send API: %s %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Handler, uint32, base=enum:L1CDSendApiId
    Rec, union, enum=Handler
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDPlmnSearchCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDStopPlmnSearchCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDIratReselCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDActivateCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDDeactivateCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDIratMeasCfgCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDIratMeasCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDIratMeasReportInd() Rsp
    NumList, uint32, base=10
    MeasBandWidth, uint32, base=10
    Earfcn, uint32, base=10
    bIsValid, uint32, base=enum:FALSE/TRUE
    NumCell, uint32, base=10
    RSRP, uint32, base=10
    RSRQ, uint32, base=10
    CellId, uint32, base=10
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1ECDIratServiceReq() Rsp
    IratServiceRequest, uint32, base=enum:L1ECDIratServiceReqT
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1ECDStopGapIndCmd() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1ECDIratCellListReq() Rsp
    ListSize, uint32, base=10
    Earfcn, uint32, base=10
    EarfcnPri, uint32, base=10
    MeasBandWidth, uint32, base=10
    MeasMode, uint32, base=enum:L1ECDIratMeasModeT
    MeasPerCycleMask, uint32, base=16
    MeasEveryCycleMask, uint32, base=16
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1ECDIratMeasReq() Rsp
    MeasMode, uint32, base=enum:L1ECDIratMeasModeT
    MeasPerCycleMask, uint32, base=16
    MeasEveryCycleMask, uint32, base=16
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1ECDCdmaGapAbortReq() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1ECDMasterRatReq() Rsp
    RatId, uint32, base=enum:L1CDRATIdT
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDEEutranGapAbortCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDEIratStopAllCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDECdmaIratMeasReportInd() Rsp
    Band, uint32, base=10
    Channel, uint32, base=10
    NumPn, uint32, base=10
    bLastReport, uint32, base=enum:FALSE/TRUE
    Pn, uint32, base=10
    Phase, uint32, base=10
    Strength, uint32, base=10
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDECdmaIratCellListCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDECdmaGapInd() Rsp
    gapStart, uint32, base=16
    gapDuration, uint32, base=10
    newTMeas, uint32, base=enum:FALSE/TRUE
    delayStopGapInd, uint32, base=enum:FALSE/TRUE
    gapPurpose, uint32, base=enum:L1CDGapPurposeT
    gapRatModeBefore, uint32, base=enum:L1CDIratGapRatModeT
    gapRatModeAfter, uint32, base=enum:L1CDIratGapRatModeT
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDEIratServiceCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDECdmaIratMeasCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDEMasterRatCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendClcIratWakeupRsp() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendRmcIratSrchCfgMsg() Rsp
    StartTime, uint32, base=16
    Duration, uint32, base=10
    LteMode, uint32, base=enum:LTE_Idle/LTE_Connected
    MeasMode, uint32, base=enum:DRX Mode/Meas GAP Mode
    CdmaBand, uint32, base=10
    FreqChan, uint32, base=10
    SchWinSize, uint32, base=10
    NumOfPN, uint32, base=10
    PilotPN, uint32, base=10
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendRmcIratGapAbortReq() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1UCDIratServiceReq() Rsp
    IratServiceRequest, uint32, base=enum:L1UCDIratServiceReqT
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1UCDMasterRatReq() Rsp
    RatId, uint32, base=enum:L1CDRATIdT
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1UCDCdmaGapAbortReq() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDUIratServiceCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDUMasterRatCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDUCdmaGapInd() Rsp
    gapStart, uint32, base=16
    gapDuration, uint32, base=10
    gapRatModeBefore, uint32, base=enum:L1CDIratGapRatModeT
    gapRatModeAfter, uint32, base=enum:L1CDIratGapRatModeT
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1GCDMasterRatReq() Rsp
    RatId, uint32, base=enum:L1CDRATIdT
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1GCDIratServiceReq() Rsp
    IratServiceRequest, uint32, base=enum:L1GCDIratServiceReqT
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1GCDCdmaGapAbortReq() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDGMasterRatCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDGIratServiceCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDGCdmaGapInd() Rsp
    gapStart, uint32, base=16
    gapDuration, uint32, base=10
    gapRatModeBefore, uint32, base=enum:L1CDIratGapRatModeT
    gapRatModeAfter, uint32, base=enum:L1CDIratGapRatModeT
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDGGeranGapAbortCnf() Rsp
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1TDCDMasterRatReq() Rsp
    RatId, uint32, base=enum:L1CDRATIdT
End

Begin Message, CP_L1CD_SEND_MSG_TRACE_ID L1CDApiSendL1CDTDMasterRatCnf() Rsp
End

Begin Message, CP Trace MON_CP_FCP_MSGID_TRACE_ID Rsp
    printformat ,      1,1,MON_CP_FCP_MSGID_TRACE_ID, N=%d, <systime>  MON_CP_FCP_MSGID_TRACE_ID= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgName, uint32, base=enum:FCP Message Name
End

Begin Message, CP Trace CP_FCP_DMA_RCVD_PRM_VAL_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_DMA_RCVD_PRM_VAL_TRACE_ID, N=%d, <systime>  CP - DmaRegisterOffset:%d RawDMAPrmVal: %x macId:%d, Pkt0TimeStamp: 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    dmaOffset, uint32
    RawDMAPrmVal, uint32
    macId, uint32
    Pkt0TimeStamp, uint32
End

Begin Message, CP Trace CP_FCP_DMA_INT_OUT_OF_SYNC_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_DMA_INT_OUT_OF_SYNC_TRACE_ID, N=%d, <systime>  CP - DmaHwStatus:0x%08X DmaHwStatus: 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    DmaHwStatus, uint32
    PingPongStatus, uint32
End

Begin Message, CP Trace CP_FCP_CCM_MAC_HDR_ATI_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_CCM_MAC_HDR_ATI_TRACE_ID, N=%d, <systime>  CP - MatchStatus:%s  RcvdATIType:%x  RcvdATI:%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MatchStatus, uint32, base=enum:ATIMatchStatusT
    RcvdATIType, uint32
    RcvdATI, uint32
End

Begin Message, CP Trace CP_FCP_CCM_MAC_HDR_INFO_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_CCM_MAC_HDR_INFO_TRACE_ID, N=%d, <systime>  CP - SleepDone:%d Offset:%d Last:%d First:%d SyncCap:%d RawDMAPrmVal:%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SyncCap, bit,   offset=8,   count = 1,  bytes=4, pos=first,   base=10,
    First, bit,   offset=9,   count = 1,  bytes=4, pos=middle, base=10,
    Last, bit,   offset=10,   count = 1,  bytes=4, pos=middle, base=10,
    Offset, bit,   offset=11,   count = 2,  bytes=4, pos=middle, base=10,
    SleepDone, bit,   offset=13,   count = 1,  bytes=4, pos=last,  base=10,
    RawDMAPrmVal, uint32
End

Begin Message, CP Trace CP_FCP_FTM_ACTIVATE_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_FTM_ACTIVATE_TRACE_ID, N=%d, <systime>  CP - FTM Msg Id is %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32
End

Begin Message, CP Trace CP_FCP_FTM_DEACTIVATE_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_FTM_DEACTIVATE_TRACE_ID, N=%d, <systime>  CP - FTM Msg Id is %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32
End

Begin Message, CP Trace CP_FCP_FTM_MAC_INFO_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_FTM_MAC_INFO_TRACE_ID, N=%d, <systime>  CP - MAC Packet Len: %d, Offset: %d, MAC Index: %d, %s, Sec Packet Len: %d, DataPtr: %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MAC Packet Len, uint32
    Offset, uint32
    MAC Index, uint32
    Conn Layer Format, uint32, base=enum:FormatA/FormatB
    Sec Layer Pkt Len, uint32
    MAC Pkt Data Ptr, uint32, base=16
End

Begin Message, CP Trace CP_FCP_DRC_SUPERVISION_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_DRC_SUPERVISION_TRACE_ID, N=%d, <systime>  CP - Trace SV Event: %s, DRCSupvState: %s DRCSupvCnt: %d TxRestartTimer: %d GoodFtmPkt: %s GoodCCPkt: %s NonNullRateCnt: %d  DefaultFTCMac: %s NullRate384Status: %s TxStatus: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SV Event, uint32, base=enum:DRCSupervisonStatus, indent=1
    DRCSupvState, uint32, base=enum:DrcSuprvStateT
    DRCSupvCnt, uint32, base=10
    TxRestartTimer, uint32, base=10
    GoodFtmPkt, bit,   offset=3,   count = 1,  bytes=4, pos=first,    base=enum:No/Yes,
    GoodCCPkt, bit,   offset=7,   count = 1,  bytes=4, pos=middle,   base=enum:No/Yes,
    NonNullRateCnt, bit,   offset=8,   count = 8,  bytes=4, pos=last,     base=10,
    DefaultFTCMac, uint32, base=enum:No/Yes
    NullRate384Status, uint32, base=enum:No/Yes
    TxStatus, uint32, base=enum:OFF/ON
End

Begin Message, CP Trace CP_FCP_DRC_CHAN_UPDATE_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_DRC_CHAN_UPDATE_TRACE_ID, N=%d, <systime>  CP -  LevelCrossing:  %d ,  UpdateCnt:  %d ,  SumLvlCross:  %d , LvlVariance:  %d , NormalizeVar: %d , LongTermC2I: %x, ChanSpeed: %d, ChanType: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    LevelCorssing, uint32, base=10
    UpdateCnt, uint32, base=10
    SumLvlCross, uint32, base=10
    LvlVariance, uint32, base=10
    NormalizeVar, uint32, base=10
    LongTermC2I, uint32
    ChanSpeed, uint32, base=10
    ChanType, uint32, base=enum:FAST_2/FAST_1/SLOW/Stationary/AWGN/NO_Decision
End

Begin Message, CP Trace CP_FCP_DRC_TRAFFIC_UPDATE_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_DRC_TRAFFIC_UPDATE_TRACE_ID, N=%d, <systime>  CP - CurrentFlowType: %x, FER_1: %x,FER_2: %x,FER_3: %x,FER_4: %x,FER_target: %x, GlbalAdjStep: %x, Disable469: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurrentFlowType, uint32,
    FER_1, uint32,
    FER_2, uint32,
    FER_3, uint32,
    FER_4, uint32,
    FER_target, uint32,
    GlbalAdjStep, uint32,
    Disable469, uint32, base=enum:No/Yes
End

Begin Message, CP Trace CP_FCP_DRC_GENERIC_DEC_1_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_DRC_GENERIC_DEC_1_TRACE_ID, N=%d, <systime>  CP - MON DRC Generic DEC 1: %d, %d, %d, %d, %d, %d, %d, %d, %d, %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32,base=10, maxsize=10, size=end
End

Begin Message, CP Trace CP_FCP_DRC_GENERIC_1_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_DRC_GENERIC_1_TRACE_ID, N=%d, <systime>  CP - MON DRC Generic Hex 1: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP_FCP_DRC_GENERIC_2_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_DRC_GENERIC_2_TRACE_ID, N=%d, <systime>  CP - MON DRC Generic Hex 2: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP_FCP_DRC_FTMCONFIG_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_DRC_FTMCONFIG_TRACE_ID, N=%d, <systime>  CP - DefaultMac: %s, NulRateORSupvTimer: %d, DRCGating: %s, DRCOffset_1: 0x%x , DRCOffset_2: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    DefaultMac, uint32, base=enum:No/Yes
    NulRateORSupvTimer, uint32,
    DRCGating, uint32, base=enum:No/Yes
    DRCOffset_1, uint32,
    DRCOffset_2, uint32
End

Begin Message, CP Trace CP_FCP_DRC_HALFSLOT_CNT_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_DRC_HALFSLOT_CNT_TRACE_ID, N=%d, <systime>  CP - PrevSysTimeinSlot: 0x%x,SysTimeInSlot: 0x%x SysTimeInHalfSlot: 0x%x stCount: 0x%x HalfSlotCnt: 0x%x  HalfSlotDiff: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PrevSysTimeinSlot, uint32
    SysTimeInSlot, uint32
    SysTimeInHalfSlot, uint32
    stCount1, uint32
    HalfSlotCnt, uint32
    HalfSlotDiff, uint32
    curBctCount, uint32
    stCount2, uint32
End

Begin Message, CP Trace CP_FCP_DCOFFSET_HARQ_PARAM_UPD_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_DCOFFSET_HARQ_PARAM_UPD_TRACE_ID, N=%d, <systime>  CP - FngSnrSwAvg: 0x%x,FngSnrHw: 0x%x MainDcIirCoef: 0x%x HarqCtrl3: 0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FngSnrSwAvg, uint32
    FngSnrHw, uint32
    MainDcIirCoef, uint32
    HarqCtrl3, uint32
End

Begin Message, CP Trace CP_FCP_PCP_PACKET_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_PCP_PACKET_TRACE_ID, N=%d, <systime>  CP - Connection Layer Format %s Packet Received, Packet Len = %d, Offset = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Format, uint32, base=enum:A/B
    PacketLen, uint32
    PacketOffset, uint32
End

Begin Message, CP Trace CP_FCP_STREAM_PACKET_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_STREAM_PACKET_TRACE_ID, N=%d, <systime>  CP - Packet Received on Stream = %d, Packet Len = %d, Offset = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    StreamNumber, uint32
    PacketLen, uint32
    PacketOffset, uint32
End

Begin Message, CP Trace CP_PAF_RLP_STATE_TRACE_ID Rsp
    printformat , 1, 1, CP_PAF_RLP_STATE_TRACE_ID, N=%d, <systime>  CP -  PAF %s's RLP Flow %x's State is: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Types
    RLPFlow, uint32
    RLPState, uint32, base=enum:RLPState Type
End

Begin Message, CP Trace CP_PAF_FLOW_CTRL_STATE_TRACE_ID Rsp
    printformat , 1, 1, CP_PAF_FLOW_CTRL_STATE_TRACE_ID, N=%d, <systime>  CP - PAF %s's Flow Control State is: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Stream Type
    FlowCtrlState, uint32, base=enum:OFF/ON
End

Begin Message, CP Trace CP_PAF_RLP_FRAME_RECV_TRACE_ID Rsp
    printformat , 1, 1, CP_PAF_RLP_FRAME_RECV_TRACE_ID, N=%d, <systime>  CP - PAF %s's RLP Flow %x Packet Received: SEQ = 0x%08X, LEN = 0x%08X, V(N) = 0x%08X, V(R) = 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Types
    RLPFlow, uint32
    SEQ, uint32
    LEN, uint32
    VN, uint32
    VR, uint32
End

Begin Message, CP Trace CP_PAF_RLP_FRAME_ABORT_TRACE_ID Rsp
    printformat , 1, 1, CP_PAF_RLP_FRAME_ABORT_TRACE_ID, N=%d, <systime>  CP - PAF %s's RLP Flow %x Packet Aborted: SEQ = 0x%08X, LEN = 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Types
    RLPFlow, uint32
    SEQ, uint32
    LEN, uint32
End

Begin Message, CP Trace CP_PAF_RLP_FRAME_DUPRXD_TRACE_ID Rsp
    printformat , 1, 1, CP_PAF_RLP_FRAME_DUPRXD_TRACE_ID, N=%d, <systime>  CP - PAF %s's RLP Flow %x Dup RLP Packet Received: SEQ = 0x%08X, LEN = 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Types
    RLPFlow, uint32
    SEQ, uint32
    LEN, uint32
End

Begin Message, CP Trace CP_PAF_RLP_NAK_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP_PAF_RLP_NAK_MSG_TRACE_ID, N=%d, <systime>  CP - PAF %s's RLP Flow %x Packet Naked: SEQ = 0x%08X, LEN = 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Types
    RLPFlow, uint32
    SEQ, uint32
    LEN, uint32
End

Begin Message, CP Trace CP_PAF_RLP_FRAME_DELAYED_TRACE_ID Rsp
    printformat , 1, 1, CP_PAF_RLP_FRAME_DELAYED_TRACE_ID, N=%d, <systime>  CP - PAF %s's RLP Flow %x delayed RLP Packet Received: SEQ = 0x%08X, LEN = 0x%08X, NAK sent at = 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Types
    RLPFlow, uint32
    SEQ, uint32
    LEN, uint32
    NAK Sent At, uint32
End

Begin Message, CP Trace CP_PAF_DOS_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP_PAF_DOS_MSG_TRACE_ID, N=%d, <systime>  CP - PAF %s's Data Over Signaling Packet Received: SEQ = 0x%08X, LEN = 0x%08X, Reset: %s, Ack Required:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Types
    SEQ, uint32
    LEN, uint32
    Reset, uint32, base=enum:FALSE/TRUE
    AckRequired, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP_PAF_RSP_STATE_TRACE_ID Rsp
    printformat , 1, 1, CP_PAF_RSP_STATE_TRACE_ID, N=%d, <systime>  CP - PAF %s's RSP State from %s to %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Stream Type
    Old State, uint32, base=enum:RouteState Types
    New State, uint32, base=enum:RouteState Types
End

Begin Message, CP Trace CP_EMPAF_RLP_FRAME_RECV_TRACE_ID Rsp
    printformat , 1, 1, CP_EMPAF_RLP_FRAME_RECV_TRACE_ID, N=%d, <systime>  CP - PAF %s's RLP Flow %x Packet Received: SEQ = 0x%08X, LEN = 0x%08X, V(N) = 0x%08X, V(R) = 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Types
    RLPFlow, uint32
    SEQ, uint32
    LEN, uint32
    VN, uint32
    VR, uint32
End

Begin Message, CP Trace CP_EMPAF_RLP_FRAME_DECODE_TRACE_ID Rsp
    printformat , 1, 1, CP_EMPAF_RLP_FRAME_DECODE_TRACE_ID, N=%d, <systime>  CP - PAF %s's RLP Flow %x Route %s Packet Received: SEQ = 0x%08X, LEN = 0x%08X, FirstDataUnit = %s, LastDataUnit = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Types
    RLPFlow, uint32
    Route, uint32, base=enum:RouteA/RouteB
    SEQ, uint32
    LEN, uint32
    FirstDataUnit, uint32, base=enum:FALSE/TRUE
    LastDataUnit, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP_PAF_RLP_PASS_TO_UPPER_LAYER_TRACE_ID Rsp
    printformat , 1, 1, CP_PAF_RLP_PASS_TO_UPPER_LAYER_TRACE_ID, N=%d, <systime>  CP - PAF Pass %s's RLP Flow %x Packet Received: SEQ = 0x%08X, LEN = 0x%08X to uppper layer
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Types
    RLPFlow, uint32
    SEQ, uint32
    LEN, uint32
End

Begin Message, CP Trace CP_PAF_TEST_RESULT_TRACE_ID Rsp
    printformat , 1, 1, CP_PAF_TEST_RESULT_TRACE_ID, N=%d, <systime>  CP -  The %d PAF Test Result is: : %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TestCount, uint32
    TestResult, uint32, base=enum:TestResult Type
End

Begin Message, CP Trace CP_PAF_TEST_RESULT_DETAIL_TRACE_ID Rsp
    printformat , 1, 1, CP_PAF_TEST_RESULT_DETAIL_TRACE_ID, N=%d, <systime>  CP -  PAF Test Result Mismatch Data Information: srcBuf[%d] = 0x%02X, dstBuf[%d] = 0x%02X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    srcData, uint32
    srcIndex, uint32
    dstData, uint32
    dstIndex, uint32
End

Begin Message, CP Trace CP_FCP_TEST_HW_TRIG_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_TEST_HW_TRIG_TRACE_ID, N=%d, <systime>  CP - Slot:%x Symb:%x SysTimeLower32:%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Slot, uint32
    Symb, uint32
    SysTimeLower32, uint32
End

Begin Message, CP Trace CP_DSAF_MSG_BLOCKER_TRACE_ID Rsp
    printformat , 1, 1, CP_DSAF_MSG_BLOCKER_TRACE_ID, N=%d, <systime>  CP -  DSAF MSG Block ProtocolType=%s, MessageId = 0x%x, Result=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ProtocolType, uint32, base=enum:DO Protocol Type Enum
    MessageId, uint32
    Result, uint32, base=enum:Blocked/Passed
End

Begin Message, CP Trace CP_FCP_FTAP_TRAFFIC_CHANN_ASSIGN_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_FTAP_TRAFFIC_CHANN_ASSIGN_TRACE_ID, N=%d, <systime>  CP - Traffic Channel Assignment Message Seqence Num = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Seq Num, uint32
End

Begin Message, CP Trace CP_FCP_FTAP_SERVSECTOR_CHANGE_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_FTAP_SERVSECTOR_CHANGE_TRACE_ID, N=%d, <systime>  CP -  Sector change FTAPF Current State = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:FTAP Types
End

Begin Message, CP Trace CP_FCP_FTAP_FIRST_SYNC_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_FTAP_FIRST_SYNC_TRACE_ID, N=%d, <systime>  CP -  First Sync FTAPF Current State = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:FTAP Types
End

Begin Message, CP Trace CP_FCP_FTAP_IDLE_HO_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_FTAP_IDLE_HO_TRACE_ID, N=%d, <systime>  CP -  Idle Ho FTAPF Current State = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:FTAP Types
End

Begin Message, CP Trace CP_FCP_FTAP_FWD_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_FTAP_FWD_TRACE_ID, N=%d, <systime>  CP -  Ftapf Fwd Link pkt SysTimeInSlot=%d, MacPkt=%d,LoadSize=%d,PhySlots=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SysTimeInSlot, uint32
    MacPkt, uint32
    LoadSize, uint32
    PhySlots, uint32
End

Begin Message, CP Trace CP_FCP_FTAP_STATUS_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_FTAP_STATUS_TRACE_ID, N=%d, <systime>  CP -  FTAPF Send Status=%s to FTAPR
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    LoopBack, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP_FCP_FTAP_TIMER_TRACE_ID Rsp
    printformat , 1, 1, CP_FCP_FTAP_TIMER_TRACE_ID, N=%d, <systime>  CP -  FTAPF TimerID = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    LoopBack, uint32
End

Begin Message, CP Trace MON_CP_FCP_REDUCE_SIG_STATE_TRACE_ID Rsp
    printformat , 1, 1, MON_CP_FCP_REDUCE_SIG_STATE_TRACE_ID, N=%d, <systime>  CP -  Tag=0x%x, ReduceMode=%s, CurrState=%s, CurrSubSt=%s, PrevState=%s, PrevSubSt=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Tag, uint32,
    ReduceMode, uint32, base=enum:FALSE/TRUE
    CurrState, uint32, base=enum:FcpCrsStateT
    CurrSubSt, uint32, base=enum:FcpCrsSubStateT
    PrevState, uint32, base=enum:FcpCrsStateT
    PrevSubSt, uint32, base=enum:FcpCrsSubStateT
End

Begin Message, CP Trace MON_CP_FCP_REDUCE_SIG_RSSI_TRACE Rsp
    printformat , 1, 1, MON_CP_FCP_REDUCE_SIG_RSSI_TRACE, N=%d, <systime>  CP -  Rssi_Q4=%12.4fdBm, Rssi_Q7=%4.2fdBm
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Rssi, int32, scale=Q4, indent=1
    Rssi_Q7, int32, scale=Q7, indent=1
End

Begin Message, CP Trace MON_CP_RCP_MPA_RF_RESOURCE_REQUEST_TRACE_ID Rsp
    printformat ,      1,1,MON_CP_RCP_MPA_RF_RESOURCE_REQUEST_TRACE_ID, N=%d, <systime>  RF Resource Request Info: Requester = %s, RFPath = %s, RfBand = %d, RfChan = %d, AntTs = %d,Duration = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Requester, uint32, base=enum:ACM/RTM
    RFPath, uint32, base=enum:RFPath_Enum
    RfBand, uint32, base=10
    RfChan, uint32, base=10
    AntTS, uint32, base=16
    Duration, uint32, base=10
End

Begin Message, CP Trace MON_CP_RCP_MPA_RF_RESOURCE_ASSIGN_TRACE_ID Rsp
    printformat ,      1,1,MON_CP_RCP_MPA_RF_RESOURCE_ASSIGN_TRACE_ID, N=%d, <systime>  RF Resource Assign Info: Requester = %s, Status = %s,RFPath = %d, RfId = %d, AntTs = %d,Duration = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Requester, uint32, base=enum:ACM/RTM
    Status, uint32, base=enum:FALSE/TRUE
    RFPath, uint32, base=enum:RFPath_Enum
    RfId, uint32, base=10
    AntTS, uint32, base=16
    Duration, uint32, base=10
End

Begin Message, CP Trace MON_CP_RCP_MPA_RF_RESOURCE_RELEASE_TRACE_ID Rsp
    printformat ,      1,1,MON_CP_RCP_MPA_RF_RESOURCE_RELEASE_TRACE_ID, N=%d, <systime>  RF Release Rsp Info: Requester = %s, Status = %s,RFPath = %s, RfId = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Requester, uint32, base=enum:ACM/RTM
    Status, uint32, base=enum:FALSE/TRUE
    RFPath, uint32, base=enum:RFPath_Enum
    RfId, uint32, base=10
End

Begin Message, CP Trace MON_CP_RCP_MSGID_TRACE_ID Rsp
    printformat ,      1,1,MON_CP_RCP_MSGID_TRACE_ID, N=%d, <systime>  MON_CP_RCP_MSGID_TRACE_ID= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgName, uint32, base=enum:RCP Message Name
End

Begin Message, CP Trace CP_RCP_ACM_CTL_SM_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_CTL_SM_TRACE_ID, N=%d, <systime>  RCP-ACM: RCP_ACM_CTL_SM IO=%s, Event=%s, CTLstate=%s, RBstate=%s, MsgInQueue=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    IO, uint32, base=enum:Enter/Exit
    Event, uint32, base=enum:StartAccess/AccessParmsUpd/SysParmsUpd/Activate/Deactivate/AccessHO/RFReady/RFRelease/AcAck/StopTx
    CTLstate, uint32, base=enum:Inactive/Idle/ParmUpd/AcTxing
    RBstate, uint32, base=enum:Inactive/InterSeq/Probing/InterProbe
    MsgInQueue, uint32, base=10
End

Begin Message, CP Trace CP_RCP_ACM_RB_SM_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_RB_SM_TRACE_ID, N=%d, <systime>  RCP-ACM: RCP_ACM_RB_SM IO=%s, Event=%s, RBstate=%s, CTLstate=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    IO, uint32, base=enum:Enter/Exit
    Event, uint32, base=enum:Activate/Deactivate/RFRelease/RFReady/Handoff/PreambleSig/DataSig/InterSeqBkOffSig/TestDelaySig/TxOffCb/TxOnCb
    RBstate, uint32, base=enum:Inactive/InterSeq/Probing/InterProbe
    CTLstate, uint32, base=enum:Inactive/Idle/ParmUpd/AcTxing
End

Begin Message, CP Trace CP_RCP_ACM_SIGNAL_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_SIGNAL_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_SIGNAL Action=%s, Signal=%s, CTLstate=%s, RBstate=%s, Time={%x, %x}
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Action, uint32, base=enum:Reg/Cancel/Expire
    Signal, uint32, base=enum:PreambleSig/DataSig/TestDelaySig/InterSeqSig/TxOffSig/TxOnSig
    CTLstate, uint32, base=enum:Inactive/Idle/ParmUpd/AcTxing
    RBstate, uint32, base=enum:Inactive/InterSeq/Probing/InterProbe
    Frame, uint32
    Slot, uint32
End

Begin Message, CP Trace CP_RCP_ACM_TIMER_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_TIMER_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_TIMER Action=%s, TimerId=%s, Duration=%d(ms), CTLstate=%s, RBstate=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Action, uint32, base=enum:Start/Stop/Expire/TransactionTimerUnavailable
    TimerId, uint32, base=enum:Acm TimerId
    Duration, uint32, base=10
    CTLstate, uint32, base=enum:Inactive/Idle/ParmUpd/AcTxing
    RBstate, uint32, base=enum:Inactive/InterSeq/Probing/InterProbe
End

Begin Message, CP Trace CP_RCP_ACM_RCV_OTA_MSG_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_RCV_OTA_MSG_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_RCV_OTA_MSG MsgId=%s, Length=%d, CTLstate=%s, RBstate=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32, base=enum:Acm OTA message
    Length, uint32, base=10
    CTLstate, uint32, base=enum:Inactive/Idle/ParmUpd/AcTxing
    RBstate, uint32, base=enum:Inactive/InterSeq/Probing/InterProbe
End

Begin Message, CP Trace CP_RCP_ACM_ACCESS_PARMS_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_ACCESS_PARMS_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_ACCESS_PARMS AccessCycleDuration=%d,AccessSignature=%x,OpenLoopAdjust=%d,ProbeInitialAdjust=%d,ProbeNumStep=%d,PowerStep=%d,PreambleLength=%d,CapsuleLengthMax=%d,APersistence0=%d,APersistence1=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AccessCycleDuration, uint32
    AccessSignature, uint32
    OpenLoopAdjust, uint32, base=10
    ProbeInitialAdjust, uint32, base=10
    ProbeNumStep, uint32, base=10
    PowerStep, uint32, base=10
    PreambleLength, uint32, base=10
    CapsuleLengthMax, uint32, base=10
    APersistence0, uint32, base=10
    APersistence1, uint32, base=10
End

Begin Message, CP Trace CP_RCP_ACM_ENH_ACCESS_PARMS_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_ENH_ACCESS_PARMS_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_ENH_ACCESS_PARMS PreambleLengthSlots=%d,AccessOffset=%d,SectorAccessMaxRate=%d,ProbeTimeOutAdjust=%d,PilotStrengthNominal=%d,PilotStrengthCorrectionMin=%d,PilotStrengthCorrectionMax=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PreambleLengthSlots, uint32, base=10
    AccessOffset, uint32, base=10
    SectorAccessMaxRate, uint32, base=enum:R96/R192/R384/Reserved/NotSpecified
    ProbeTimeOutAdjust, uint32, base=10
    PilotStrengthNominal, uint32, base=10
    PilotStrengthCorrectionMin, uint32, base=10
    PilotStrengthCorrectionMax, uint32, base=10
End

Begin Message, CP Trace CP_RCP_ACM_ATTRIBUTE_UPDATE_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_ATTRIBUTE_UPDATE_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_ATTRIBUTE_UPDATE TerminalAccessRateMax=%d,APersistenceOverride=%d,AccessTerminalClassOverride=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TerminalAccessRateMax, uint32, base=enum:R96/R192/R384/Reserved
    APersistenceOverride, uint32, base=10
    AccessTerminalClassOverride, uint32, base=10
End

Begin Message, CP Trace CP_RCP_ACM_CONFIG_REQ_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_CONFIG_REQ_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_CONFIG_REQ APersistenceOverride=%d,TerminalAccessRateMax=%d,AccessTerminalClassOverride=%d,ProbeSeqMax=%d,ProbeBackoff=%d,ProbeSeqBackoff=%d,DataOffsetNom=%d,DataOffset9k6=%d,DataOffset19k2=%d,DataOffset38k4=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    APersistenceOverride, uint32, base=10
    TerminalAccessRateMax, uint32, base=enum:R96/R192/R384/Reserved
    AccessTerminalClassOverride, uint32, base=10
    ProbeSeqMax, uint32, base=10
    ProbeBackoff, uint32, base=10
    ProbeSeqBackoff, uint32, base=10
    DataOffset0, uint32, base=10
    DataOffset1, uint32, base=10
    DataOffset2, uint32, base=10
    DataOffset3, uint32, base=10
End

Begin Message, CP Trace CP_RCP_ACM_SYS_INFO_UPDATE_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_SYS_INFO_UPDATE_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_SYS_INFO_UPDATE bUpdated=%d,AccessSignature=%x,ColorCode=%x,SectorId=%x,ReverseLinkSilencePeriod=%d,ReverseLinkSilenceDuration=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    bUpdated, uint32, base=10
    AccessSignature, uint32
    ColorCode, uint32
    SectorId, uint32
    ReverseLinkSilencePeriod, uint32
    ReverseLinkSilenceDuration, uint32
End

Begin Message, CP Trace CP_RCP_ACM_ACCESS_HANDOFF_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_ACCESS_HANDOFF_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_ACCESS_HANDOFF CTLstate=%s, RBstate=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CTLstate, uint32, base=enum:Inactive/Idle/ParmUpd/AcTxing
    RBstate, uint32, base=enum:Inactive/InterSeq/Probing/InterProbe
End

Begin Message, CP Trace CP_RCP_ACM_TX_CONDITION_TEST_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_TX_CONDITION_TEST_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_TX_CONDITION_TEST Type=%s, TestTimes=%d, Time={%x, %x}, ProbeStartTime=%x, AccessOffset=%d, PreambleDuration=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Type, uint32, base=enum:InterSeq/InterProbe
    TestTimes, uint32, base=10
    Frame, uint32
    Slot, uint32
    ProbeStart, uint32
    AccessOffset, uint32
    PreambleDuration, uint32
End

Begin Message, CP Trace CP_RCP_ACM_PROBE_TX_TEST_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_PROBE_TX_TEST_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_PROBE_TX_TEST Type=%s, Time={%x, %x}, ProbNum=%d, SeqNum=%d, ProbeStartTime=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Type, uint32, base=enum:Restart/Pass
    Frame, uint32
    Slot, uint32
    ProbeNum, uint32, base=10
    SeqNum, uint32, base=10
    ProbeStart, uint32
End

Begin Message, CP Trace CP_RCP_ACM_PST_TEST_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_PST_TEST_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_PST_TEST Randomx=%d, pTest=%d, numConsecFailedTest=%d, cTest=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Randomx, uint32, base=10
    pTest, uint32, base=10
    numConsecFailedTest, uint32, base=10
    cTest, uint32, base=10
End

Begin Message, CP Trace CP_RCP_ACM_PST_INIT_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_PST_INIT_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_PST_INIT p=%x,ATAccessClass=%d,AcmInUseSubtype=%d,AccessTerminalClassOverride=%d,APersistenceOverride=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    p, uint32, base=10
    ATAccessClass, uint32, base=10
    InUseSubtype, uint32, base=enum:DefaultACM/EnhancedACM
    AccessTerminalClassOverride, uint32, base=10
    APersistenceOverride, uint32, base=10
End

Begin Message, CP Trace CP_RCP_ACM_SILENCE_TST_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_SILENCE_TST_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_SILENCE_TEST preSilenceStart=%x,nxtSilenceStart=%x,ReverseLinkSilenceDuration=%x,ProbeStartTime=%x,ProbeDuration=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    preSilenceStart, uint32
    nxtSilenceStart, uint32
    ReverseLinkSilenceDuration, uint32
    ProbeStartTime, uint32
    ProbeDuration, uint32
End

Begin Message, CP Trace CP_RCP_ACM_RX_OVERLAP_TST_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_RX_OVERLAP_TST_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_RX_OVERLAP_TEST Time1xWakeup=(%x,%x),ProbeStartTime=%x,ProbeDuration=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Time1xWakeup64H, uint32
    Time1xWakeup64L, uint32
    ProbeStartTime, uint32
    ProbeDuration, uint32
End

Begin Message, CP Trace CP_RCP_ACM_SNR_TST_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_SNR_TST_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_SNR_TEST PilotStrength=%d,Threshold=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotStrength, uint32, base=10
    Threshold, uint32, base=10
End

Begin Message, CP Trace CP_RCP_ACM_PREP_PROBE_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_PREP_PROBE_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_PREP_PROBE curDataStartOffset=%x,AccessStart=%x,PreambleActTime=%x,DataActTime=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    curDataStartOffset, uint32
    AccessStart, uint32
    PreambleActTime, uint32
    DataActTime, uint32
End

Begin Message, CP Trace CP_RCP_ACM_TX_SETUP_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_TX_SETUP_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_TX_SETUP ProbeNum=%d,PwrRef=%d,PreamblePilotScale=%d,ColorCode=%x,SectorId=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ProbeNum, uint32, base=10
    PwrRef, uint32, base=10
    PreamblePilotScale, uint32, base=10
    ColorCode, uint32
    SectorId, uint32
End

Begin Message, CP Trace CP_RCP_ACM_TX_CALLBACK_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_TX_CALLBACK_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_TX_CALLBACK Action=%s,Time={%x, %x},Param1=%d,Param2=%d,TxTurnOffReason=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Action, uint32, base=enum:TxOn/TxOff
    TimeSlots, bit, count=6, offset=5, bytes=4, pos=first
    Time64Chips, bit, count=5, offset=11, bytes=4, pos=last
    Param1, uint32
    Param2, uint32
    TxTurnOffReason, uint32, base=enum:NormalTurnOff/NormalAbort/RFRelease/TurnOn
End

Begin Message, CP Trace CP_RCP_ACM_LONGCODE_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_LONGCODE_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_LONGCODE mil0=%d, mil1=%d, mih0=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    mil0, uint32
    mil1, uint32
    mih0, uint32
End

Begin Message, CP Trace CP_RCP_ACM_SEND_PROBE_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_SEND_PROBE_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_SEND_PROBE Time={%x, %x},DataActTime=%x,Data2Send=%d,AccessRate=%s,ProbeNum=%d,SeqNum=%d,DataGainScale=%d,RateData=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Frame, uint32
    Slot, uint32
    DataActTime, uint32
    Data2Send, uint32, base=10
    AccessRate, uint32, base=enum:Rnom/R96/R192/R384
    ProbeNum, uint32, base=10
    SeqNum, uint32, base=10
    DataGainScale, uint32, base=10
    RateData, uint32
End

Begin Message, CP Trace CP_RCP_ACM_PROBE_DONE_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_PROBE_DONE_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_PROBE_DONE Time={%x, %x},RBstate=%s,RFReady=%d,ProbeNum=%d,ProbeNumStep=%d,SeqNum=%d,SeqMax=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Frame, uint32
    Slot, uint32
    RBstate, uint32, base=enum:Inactive/InterSeq/Probing/InterProbe
    RFReady, uint32, base=10
    ProbeNum, uint32, base=10
    ProbeNumStep, uint32, base=10
    SeqNum, uint32, base=10
    SeqMax, uint32, base=10
End

Begin Message, CP Trace CP_RCP_ACM_SELECT_TX_RATE_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_SELECT_TX_RATE_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_SELECT_TX_RATE AccessRateMax=%s,DataLen=%d,TotalPower=%d,TXPwrAvail=%d,PilotPower=%d,myKs=%d,myDataG=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AccessRateMax, uint32, base=enum:Rnom/R96/R192/R384
    DataLen, uint32, base=10
    TotalPower, uint32, base=10
    TXPwrAvail, uint32, base=10
    PilotPower, uint32, base=10
    myKs, uint32, base=10
    myDataG, uint32, base=10
End

Begin Message, CP Trace CP_RCP_ACM_FORM_PHY_PACKET_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_FORM_PHY_PACKET_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_FORM_PHY_PACKET maxPayload=%d, Data2Send=%d, PktLen=%d, PktOffset=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    maxPayload, uint32, base=10
    Data2Send, uint32, base=10
    PktLen, uint32, base=10
    PktOffset, uint32, base=10
End

Begin Message, CP Trace CP_RCP_ACM_START_ACCESS_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_START_ACCESS_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_START_ACCESS GrantByteSize=%d, PktTotalLen=%d, revMacPktId=%d, AcmTestMode=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    GrantByteSize, uint32, base=10
    PktTotalLen, uint32, base=10
    revMacPktId, uint32, base=10
    AcmTestMode, uint32, base=10
End

Begin Message, CP Trace CP_RCP_ACM_FORM_CAPSULE_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_FORM_CAPSULE_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_FORM_CAPSULE PktTotalLen=%d, PktListCount=%d, HeadPktLen=%d, SCToken=%d, ATIType=%d, ATI=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PktTotalLen, uint32, base=10
    PktListCount, uint32, base=10
    HeadPktLen, uint32, base=10
    SCToken, uint32
    ATIType, uint32, base=10
    ATI, uint32
End

Begin Message, CP Trace CP_RCP_ACM_TX_STOP_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_TX_STOP_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_TX_STOP Reason=%s, CTLstate=%s, RBstate=%s, revMacPktId=%d, MsgInDSAQueue=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Reason, uint32, base=enum:TxSuccess/TxFail/Deactivate/APFail
    CTLstate, uint32, base=enum:Inactive/Idle/ParmUpd/AcTxing
    RBstate, uint32, base=enum:Inactive/InterSeq/Probing/InterProbe
    revMacPktId, uint32, base=10
    MsgInDsaQueue, uint32, base=10
End

Begin Message, CP Trace CP_RCP_ACM_PWR_REF_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_PWR_REF_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_PWR_REF PwrRef=%d, ProbeInitialAdjust=%d, SectorPilotStrength=%d, ProbeNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PwrRef, uint32, base=10
    ProbeInitialAdjust, uint32, base=10
    SectorPilotStrength, uint32, base=10
    ProbeNum, uint32, base=10
End

Begin Message, CP Trace CP_RCP_ACM_SESSION_CONFIGURATION_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_SESSION_CONFIGURATION_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_SESSION_CONFIGURATION Status=%s, CTLstate=%s, RBstate=%s, InUseSubtype=%s, InConfigSubtype=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Status, uint32,	base=enum:Start/Committed
    CTLstate, uint32, base=enum:Inactive/Idle/ParmUpd/AcTxing
    RBstate, uint32, base=enum:Inactive/InterSeq/Probing/InterProbe
    InUseSubtype, uint32, base=enum:DefaultACM/EnhancedACM
    InConfigSubtype, uint32, base=enum:DefaultACM/EnhancedACM
End

Begin Message, CP Trace CP_RCP_ACM_DSAR_SEND_MSG_TRACE_ID Rsp
    printformat , RCP_ACM, 1, CP_RCP_ACM_DSAR_SEND_MSG_TRACE_ID, N=%d, <systime>  RCP-ACM: CP_RCP_ACM_DSAR_SEND_MSG_TRACE_ID MsgInDsaQueue=%d,CTLstate=%s,RBstate=%s,APersistence0=%d,ATClassOverride=%d,bUpdated=%d,AccessSignature=%x,ColorCode=%x,SectorId=%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgInDsaQueue, uint32, base=10
    CTLstate, uint32, base=enum:Inactive/Idle/ParmUpd/AcTxing
    RBstate, uint32, base=enum:Inactive/InterSeq/Probing/InterProbe
    APersistence0, uint32
    ATClassOverride, uint32
    bUpdated, uint32, base=10
    AccessSignature, uint32
    ColorCode, uint32
    SectorId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_PROCESS_REV_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PROCESS_REV_TRACE_ID, N=%d, <systime>  DSAR PROCESS REV: RcpMode = %s, allowedChan = %s, reliable = %s, confirmReq = %s, inConfigurationProtocol = %s, protocolType = %s, transId = %d, priority = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RcpMode, uint32, base=enum:RCP_INACTIVE/RCP_ACCESS/RCP_TRAFFIC
    allowedChan, uint32, base=enum:AccessChannel/TrafficChannel/AccessTrafficChannel
    reliable, uint32, base=enum: bestEffort/reliable/bestEfforInAccessReliableInTraffic
    confirmReq, uint32, base=enum:none/ended/success
    inConfigurationProtocol, uint32, base=enum:FALSE/TRUE
    protocolType, uint32, base=enum:Protocol Type
    transId, uint32
    priority, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_SELECT_HI_PRIORITY_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_SELECT_HI_PRIORITY_TRACE_ID Rsp    , N=%d, <systime>  DSAR SELECT HI PRIOTITY: Qsize = %d, Slpd_Vs = %d, Slpd_Vn = %d,RcpMode = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Qsize, uint32
    Slpd_Vs, uint32
    Slpd_Vn, uint32
    RcpMode, uint32, base=enum:RCP_INACTIVE/RCP_ACCESS/RCP_TRAFFIC
End

Begin Message, CP Trace CP_RCP_DSAR_REXMIT_TIMEOUT_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_REXMIT_TIMEOUT_TRACE_ID, N=%d, <systime>  DSAR REXMIT TMO: index = %d, retryCount = %d, msgSeq = %d, revMacId = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Index, uint32
    retryCount, uint32
    msgSeq, uint32
    revMacId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_PROCESS_GRANT_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PROCESS_GRANT_TRACE_ID, N=%d, <systime>  DSAR PROCESS GRANT: RcpMode = %s, grantSize = %d, revMacId = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RcpMode, uint32, base=enum:RCP_INACTIVE/RCP_ACCESS/RCP_TRAFFIC
    grantsize, uint32
    revMacId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_ENCODE_REV_PACKET_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_ENCODE_REV_PACKET_TRACE_ID, N=%d, <systime>  DSAR ENCODE REC PKT: Index = %d, fragCount = %d, retryCount = %d, txWaitingForConfirm = %s, allowChannel=%s, reliable = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    index, uint32
    fragCount, uint32
    retryCount, uint32
    txWaitingForConfirm, uint32, base=enum:FALSE/TRUE
    allowedChan, uint32, base=enum:AccessChannel/TrafficChannel/AccessTrafficChannel
    reliable, uint32, base=enum: bestEffort/reliable/bestEfforInAccessReliableInTraffic
End

Begin Message, CP Trace CP_RCP_DSAR_ENCODE_SNP_PACKET_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_ENCODE_SNP_PACKET_TRACE_ID, N=%d, <systime>  DSAR ENCODE SNP PKT: fragCount = %d, inConfigurationProtocol = %s, protocolType = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    fragCount, uint32
    inConfigurationProtocol, uint32, base=enum:FALSE/TRUE
    protocolType, uint32, base=enum:Protocol Type
End

Begin Message, CP Trace CP_RCP_DSAR_ENCODE_SLPD_PACKET_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_ENCODE_SLPD_PACKET_TRACE_ID, N=%d, <systime>  DSAR ENCODE SLPD PKT: remitExpFlag = %s, retryCount = %d, msgSeq = %d, Slpd_Vs = %d,Slpd_Vs2 = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    remitExpFlag, uint32, base=enum:FALSE/TRUE
    retryCount, uint32
    msgSeq, uint32
    Slpd_Vs, uint32
    Slpd_Vs2, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_ENCODE_SLPF_PACKET_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_ENCODE_SLPF_PACKET_TRACE_ID, N=%d, <systime>  DSAR ENCODE SLPF PKT: fragCount = %d, byteAvail = %d, byteNotSent = %d, msgSeq = %d, Slpf_Vs = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    fragCount, uint32
    byteAvail, uint32
    byteNotSent, uint32
    msgSeq, uint32
    Slpf_Vs, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_PKT_SENT_TRACE_1_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PKT_SENT_TRACE_1_ID, N=%d, <systime>  DSAR PKT SENT 1: qSize = %d, revMacId = %d, Slpd_Vs = %d, Slpd_Vs2 = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    qSize, uint32
    revMacId, uint32
    Slpd_Vs, uint32
    Slpd_Vs2, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_PKT_SENT_TRACE_2_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PKT_SENT_TRACE_2_ID, N=%d, <systime>  DSAR PKT SENT 2: index = %d, fragCount = %d, confirmReq = %s, reliable = %s, lastFrag = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    index, uint32
    fragCount, uint32
    ConfirmReq, uint32, base=enum:NONE/ENDED/SUCCESS
    reliable, uint32, base=enum: bestEffort/reliable/bestEfforInAccessReliableInTraffic
    LastFlag, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP_RCP_DSAR_PKT_NOTSENT_TRACE_1_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PKT_NOTSENT_TRACE_1_ID, N=%d, <systime>  DSAR PKT NOT SENT 1: qSize = %d, revMacId = %d, Slpd_Vs = %d, Slpd_Vs2 = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    qSize, uint32
    revMacId, uint32
    Slpd_vs, uint32
    Slpd_vs2, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_PKT_NOTSENT_TRACE_2_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PKT_NOTSENT_TRACE_2_ID, N=%d, <systime>  DSAR PKT NOT SENT 2: index = %d, reliable = %s, sentTryCount = %d, confirmReq = %s, fragCount = %d, retryCount = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    index, uint32
    reliable, uint32, base=enum:Best Effort/Reliable
    sentTryCount, uint32
    ConfirmReq, uint32, base=enum:NONE/ENDED/SUCCESS
    fragCount, uint32
    retryCount, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_PHY_TRAFFIC_ACKED_TRACE_1_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PHY_TRAFFIC_ACKED_TRACE_1_ID, N=%d, <systime>  DSAR PHY TRAFFIC ACKED 1: Packet Sent Queue Size = %d, revMacId = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    QSize, uint32
    revMacId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_PHY_TRAFFIC_ACKED_TRACE_2_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PHY_TRAFFIC_ACKED_TRACE_2_ID, N=%d, <systime>  DSAR PHY TRAFFIC ACKED 2: index = %d, reliable = %s, confirmReq = %s, lastfrag = %s, fragTrafficAckedCounter = %d,fragTrafficSentCounter = %d, fragCount = %d, timeId = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    index, uint32
    reliable, uint32, base=enum: bestEffort/reliable/bestEfforInAccessReliableInTraffic
    ConfirmReq, uint32, base=enum:NONE/ENDED/SUCCESS
    LastFlag, uint32, base=enum:FALSE/TRUE
    fragTrafficAckedCounter, uint32
    fragTrafficSentCounter, uint32
    fragCount, uint32
    timeId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_PHY_TRAFFIC_MISSED_TRACE_1_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PHY_TRAFFIC_MISSED_TRACE_1_ID, N=%d, <systime>  DSAR PHY TRAFFIC MISSED 1: Packet Sent Queue Size = %d, revMacId = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    QSize, uint32
    revMacId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_PHY_TRAFFIC_MISSED_TRACE_2_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PHY_TRAFFIC_MISSED_TRACE_2_ID, N=%d, <systime>  DSAR PHY TRAFFIC MISSED 2: index = %d, reliable = %s, fragCount = %d, confirmReq = %s, lastFlag = %s, fragTrafficAckedCounter = %d, fragTrafficNakCounter = %d, fragTrafficSentCounter = %d, timeId = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    index, uint32
    reliable, uint32, base=enum: bestEffort/reliable/bestEfforInAccessReliableInTraffic
    fragCount, uint32
    ConfirmReq, uint32, base=enum:NONE/ENDED/SUCCESS
    LastFlag, uint32, base=enum:FALSE/TRUE
    fragTrafficAckedCounter, uint32
    fragTrafficNakCounter, uint32
    fragTrafficSentCounter, uint32
    timeId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_EXPIRE_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_EXPIRE_TRACE_ID, N=%d, <systime>  DSAR TIMER EXPIRE Index=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimeId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_ACK_REQ_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_ACK_REQ_TRACE_ID, N=%d, <systime>  DSAR Receive DSAF Ack Req Index = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Index, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_ACK_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_ACK_TRACE_ID, N=%d, <systime>  DSAR Receive DSAF ACK Index = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Index, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_ACK_OK_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_ACK_OK_ID, N=%d, <systime>  DSAR Receive Correct Fwd Ack Index
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
End

Begin Message, CP Trace CP_RCP_DSAR_ACK_TRACE_2_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_ACK_TRACE_2_ID, N=%d, <systime>  DSAR Ack Index2: msgSeq= % d, confirmReq = %s, revMacId = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    msgSeq, uint32
    ConfirmReq, uint32, base=enum:NONE/ENDED/SUCCESS
    revMacId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_ACK_TRACE_3_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_ACK_TRACE_3_ID, N=%d, <systime>  DSAR Ack Index3: RcpMode = %s, retryCount = %d,allowedChann = %s, , revMacId = %d, msgSeq= % d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RcpMode, uint32, base=enum:RCP_INACTIVE/RCP_ACCESS/RCP_TRAFFIC
    retryCount, uint32
    allowedChan, uint32, base=enum:AccessChannel/TrafficChannel/AccessTrafficChannel
    revMacId, uint32
    msgSeq, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_ACK_TRACE_4_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_ACK_TRACE_4_ID, N=%d, <systime>  DSAR Ack Index4: msgSeq= % d, confirmReq = %s, revMacId = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    reliable, uint32, base=enum: bestEffort/reliable/bestEfforInAccessReliableInTraffic
    ConfirmReq, uint32, base=enum:NONE/ENDED/SUCCESS
    revMacId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_MSG_BLK_ID Rsp
    printformat , 1, 1, CP_RCP_DSAR_MSG_BLK_ID, N=%d, <systime>  CP -  DSAR MSG Block ProtocolType=%s, MessageId = 0x%x, Result=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ProtocolType, uint32, base=enum:DO Protocol Type Enum
    MessageId, uint32
    Result, uint32, base=enum:Blocked/Passed
End

Begin Message, CP Trace CP_RCP_DSAR_SLPD_INIT_PACKET_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_SLPD_INIT_PACKET_TRACE_ID, N=%d, <systime>  DSAR SLP D Init: Msg Qsize = %d, RetryCount = %d, fragCount = %d,txWaitingForConfirm = %s, confirmReq = %d, revMacId = %d, AllowedChann = %s, RcpMode = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Qsize, uint32
    RetryCount, uint32
    fragCount, uint32
    txWaitingForConfirm, uint32, base=enum:FALSE/TRUE
    ConfirmReq, uint32, base=enum:NONE/ENDED/SUCCESS
    revMacId, uint32
    AllowedChann, uint32, base=enum:AccessChannel/TrafficChannel/AccessTrafficChannel
    RcpMode, uint32, base=enum:RCP_INACTIVE/RCP_ACCESS/RCP_TRAFFIC
End

Begin Message, CP Trace CP_RCP_DSAR_PHY_TRAFFIC_MISSED_TRACE_3_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PHY_TRAFFIC_MISSED_TRACE_3_ID, N=%d, <systime>  DSAR Missed 3: txWaitingForConfirm = %s, revMacId = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    txWaitingForConfirm, uint32, base=enum:FALSE/TRUE
    revMacId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_PHY_TRAFFIC_ACKED_TRACE_3_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PHY_TRAFFIC_ACKED_TRACE_3_ID, N=%d, <systime>  DSAR Acked 3: txWaitingForConfirm = %s, revMacId = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    txWaitingForConfirm, uint32, base=enum:FALSE/TRUE
    revMacId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_PKT_NOTSENT_TRACE_3_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PKT_NOTSENT_TRACE_3_ID, N=%d, <systime>  DSAR NotSent 3: txWaitingForConfirm = %s, revMacId = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    txWaitingForConfirm, uint32, base=enum:FALSE/TRUE
    revMacId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_PKT_SENT_TRACE_3_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PKT_SENT_TRACE_3_ID, N=%d, <systime>  DSAR Sent 3: txWaitingForConfirm = %s, revMacId = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    txWaitingForConfirm, uint32, base=enum:FALSE/TRUE
    revMacId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_VN_VS_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_VN_VS_TRACE_ID, N=%d, <systime>  DSAR Vn Vs: OldSlpd_Vn = %d, Slpd_Vn = %d, Slpd_Vs = %d, Slpd_Vs2 = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    OldSlpd_Vn, uint32
    Slpd_Vn, uint32
    Slpd_Vs, uint32
    Slpd_Vs2, uint32
End

Begin Message, CP Trace CP_RCP_SELECT_HI_PRIORITY_TRACE_2_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_SELECT_HI_PRIORITY_TRACE_2_ID, N=%d, <systime>  DSAR SELECT HI PRIOTITY 2: fragCount = %d, retryCount = %d, txWaitingForConfirm = %s, reliable = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    fragCount, uint32
    retryCount, uint32
    txWaitingForConfirm, uint32, base=enum:FALSE/TRUE
    reliable, uint32, base=enum: bestEffort/reliable/bestEfforInAccessReliableInTraffic
End

Begin Message, CP Trace CP_RCP_DSAR_ENCODE_REV_PACKET_TRACE_2_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_ENCODE_REV_PACKET_TRACE_2_ID, N=%d, <systime>  DSAR ENCODE REV PKT 2: Index = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Index, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_GET_QUE_SZ_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_GET_QUE_SZ_TRACE_ID, N=%d, <systime>  DSAR GET QUEUE SIZE : Macflow ID = %d, %d Acks, %d Msgs In DsarMsgQ and size is %d. total bytes = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MacflowId, uint32
    AckNum, uint32
    DsarMsgNum, uint32
    DsarMsgQsz, uint32
    totalBytesInQ, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_ERR_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_ERR_TRACE_ID, N=%d, <systime>  DSAR Err: type:0x%x, param1:0x%x, param2:0x%x,param3:0x%x,param4:0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    type, uint32
    param1, uint32
    param2, uint32
    param3, uint32
    param4, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_RESET_TRANSMIT_Q_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_RESET_TRANSMIT_Q_TRACE_ID, N=%d, <systime>  DSAR Reset Transmit queue: Protocol Type=%s, Msg Seq=%d, Retry Count=%d, FragCount=%d, txWaitingForConfirm=%s,revMacId=%d, allowChannel=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ProtocolType, uint32, base=enum:DO Protocol Type Enum
    MsgSeq, uint32
    Retry Count, uint32
    FragCount, uint32
    txWaitingForConfirm, uint32, base=enum:FALSE/TRUE
    MacflowId, uint32
    AllowedChann, uint32, base=enum:AccessChannel/TrafficChannel/AccessTrafficChannel
End

Begin Message, CP Trace CP_RCP_DSAR_RESET_RELIABLE_Q_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_RESET_RELIABLE_Q_TRACE_ID, N=%d, <systime>  DSAR Reset Reliable queue: Protocol Type=%s, Msg Seq=%d, Retry Count=%d, FragCount=%d, txWaitingForConfirm=%s, revMacId=%d, allowChannel=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ProtocolType, uint32, base=enum:DO Protocol Type Enum
    MsgSeq, uint32
    Retry Count, uint32
    FragCount, uint32
    txWaitingForConfirm, uint32, base=enum:FALSE/TRUE
    MacflowId, uint32
    AllowedChann, uint32, base=enum:AccessChannel/TrafficChannel/AccessTrafficChannel
End

Begin Message, CP Trace CP_RCP_DSAR_DEL_TRANSMITQ_MSG_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_DEL_TRANSMITQ_MSG_TRACE_ID, N=%d, <systime>  DSAR Delete Transmitting queue: txWaitingForConfirm=%s, reliable = %s, NumtxWaitingForConfirm = %d,_Slpd_Vs = %d, FragCount=%d, Retry Count=%d, Msg Seq=%d, Timer Id=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    txWaitingForConfirm, uint32, base=enum:FALSE/TRUE
    reliable, uint32, base=enum: bestEffort/reliable/bestEfforInAccessReliableInTraffic
    NumtxWaitingForConfirm, uint32
    _Slpd_Vs, uint32
    fragCount, uint32
    retryCount, uint32
    msgSeq, uint32
    timerId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_DEL_RELQ_MSG_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_DEL_RELQ_MSG_TRACE_ID, N=%d, <systime>  DSAR Delete Reliable queue: Msg Seq=%d, Timer Id=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgSeq, uint32
    TimerId, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_PROCESS_REV_TRACE_1_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PROCESS_REV_TRACE_1_ID, N=%d, <systime>  DSAR PROCESS REV : dsarQueMsgSz = %d, reliableMsgQSz = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    dsarQueMsgSz, uint32
    reliableMsgQSz, uint32
End

Begin Message, CP Trace CP_RCP_DSAR_PROCESS_REV_TRACE_2_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_PROCESS_REV_TRACE_2_ID, N=%d, <systime>  DSAR PROCESS REV : Protocol Type = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ProtocolType, uint32, base=enum:DO Protocol Type Enum
End

Begin Message, CP Trace CP_RCP_DSAR_DEL_MSG_TRACE_ID Rsp
    printformat , RCP_DSAR, 1, CP_RCP_DSAR_DEL_MSG_TRACE_ID, N=%d, <systime>  DSAR PROCESS REV : Protocol Type = %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Status, uint32
    WaitForConfirmNum, uint32
    SLPd_V, uint32
    CallID, uint32
    ReliableQInfo, uint32
    DsarQInfo, uint32
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_ACTIVATE1 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_ACTIVATE1, N=%d, <systime>  RTM_ERROR_ACTIVATE1- RupActivate(): Not in INACTIVE! RtmState:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_ACTIVATE2 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_ACTIVATE2, N=%d, <systime>  RTM_ERROR_ACTIVATE2- RupActivate(): Commit in Progress! RtmState:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_DEACTIVATE1 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_DEACTIVATE1, N=%d, <systime>  RTM_ERROR_DEACTIVATE1- RupDeactivate(): Already in INACTIVE! RtmState:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_TCHASSIGN1 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_TCHASSIGN1 Rsp                         , N=%d, <systime>  RTM_ERROR_TCHASSIGN1- RupTchAssign(): NumPilots Exceeded! RtmState:%s, NumPilot:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    NumPilots, uint32
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_TMREXP1 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_TMREXP1, N=%d, <systime>  RTM_ERROR_TMREXP1- TmrExp(): Invalid State! RtmState:%s, TmrId:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    TmrId, uint32, base=enum:SetupTmr/FakeRTCAckTmr/Invalid
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_TMREXP2 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_TMREXP2, N=%d, <systime>  RTM_ERROR_TMREXP2- TmrExp(): Invalid TmrId! RtmState:%s, TmrId:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    TmrId, uint32, base=enum:SetupTmr/FakeRTCAckTmr/Invalid
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_DSAF1 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_DSAF1, N=%d, <systime>  RTM_ERROR_DSAF1- DsafFwdMsg(): Null CpBuf! RtmState:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_DSAF2 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_DSAF2, N=%d, <systime>  RTM_ERROR_DSAF2- DsafFwdMsg(): Null CpBuf dataPtr! RtmState:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_DSAF3 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_DSAF3, N=%d, <systime>  RTM_ERROR_DSAF3- DsafFwdMsg(): Invalid msgId! RtmState:%s, msgId:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    msgId, uint32
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_RTCACK1 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_RTCACK1, N=%d, <systime>  RTM_ERROR_RTCACK1- RtcAckMsg(): Invalid State! RtmState:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_BCREVLIM1 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_BCREVLIM1, N=%d, <systime>  RTM_ERROR_BCREVLIM1- BCRevRateLimMsg(): Cannot Decode Msg! RtmState:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_UNIREVLIM1 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_UNIREVLIM1, N=%d, <systime>  RTM_ERROR_UNIREVLIM1- UniRevRateLimMsg(): Cannot Decode Msg! RtmState:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_TMR1 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_TMR1, N=%d, <systime>  RTM_ERROR_TMR1- Tmr(): Tmr Already Started! RtmState:%s, tmrId=%s (%s)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    tmrId, uint32, base=enum:Setup/FakeRTCAckTmr/Invalid
    startstop, uint32, base=enum:Start/Stop
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_TMR2 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_TMR2, N=%d, <systime>  RTM_ERROR_TMR2- Tmr(): Invalid tmrId! RtmState:%s, tmrId=%s (%s)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    tmrId, uint32, base=enum:Setup/FakeRTCAckTmr/Invalid
    startstop, uint32, base=enum:Start/Stop
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_TMR3 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_TMR3, N=%d, <systime>  RTM_ERROR_TMR3- Tmr(): Tmr Not Active! RtmState:%s, tmrId=%s (%s)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    tmrId, uint32, base=enum:Setup/FakeRTCAckTmr/Invalid
    startstop, uint32, base=enum:Start/Stop
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_TXPKT1 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_TXPKT1, N=%d, <systime>  RTM_ERROR_TXPKT1- TxPkt(): pktSz exceeds grant! RtmState:%s, pktList:0x%08X, macId:%d, pktLen:%d, grantSz:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    pktList, uint32
    revMacPktId, uint32
    pktLen, uint32
    grantSz, uint32
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_TXPKT2 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_TXPKT2, N=%d, <systime>  RTM_ERROR_TXPKT2- TxPkt(): Invalid State! RtmState:%s, pktList:0x%08X, macId:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    pktList, uint32
    revMacPktId, uint32
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_TXPKT3 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_TXPKT3, N=%d, <systime>  RTM_ERROR_TXPKT3- TxPkt(): Cannot create TxDmalld! RtmState:%s, pktList:0x%08X, macId:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    pktList, uint32
    revMacPktId, uint32
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_GRANT1 Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_ERROR_GRANT1, N=%d, <systime>  RTM_ERROR_GRANT1- Grant()-%s: MACFlow exceeded! i:%d, numflows:%d, macflowId:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    func, uint32, base=enum:UpdQSz/StoreGrant/AddBytes
    i, uint32
    numflows, uint32
    macflowId, uint32
End

Begin Message, CP Trace CP_RCP_RTM_SPUR_TASK_SIG Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_SPUR_TASK_SIG, N=%d, <systime>  RtmProcPhyAckNak : RtmState:%s, currChip:%d, currSlot:%d, deadlineCurrSlot:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    currChip, uint32
    currSlot, uint32
    deadlineCurrSlot, uint32
End

Begin Message, CP Trace CP_RCP_RTM_TASK_SIG_DELAY Rsp
    printformat , RCP_RTM, 1, CP_RCP_RTM_TASK_SIG_DELAY, N=%d, <systime>  RtmProcPhyAckNak : RtmState:%s, currChip:%d, currSlot:%d, rcpTaskSigCurrSlot:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    currChip, uint32
    currSlot, uint32
    rcpTaskSigCurrSlot, uint32
End

Begin Message, CP Trace CP_RCP_RTM_TCHASSIGN1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_TCHASSIGN1, N=%d, <systime>  RTM_TCHASSIGN1- RupTchAssign(): RtmState:%s, frOff:%d, drcLen:%d, drcGB:%d, dscGB:%d, ackG:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    frameOff, uint32
    drcLen, uint32
    drcChanGainBase, uint32
    dscChanGainBase, uint32
    ackChanGain, uint32
End

Begin Message, CP Trace CP_RCP_RTM_ACTIVATE1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_ACTIVATE1, N=%d, <systime>  RTM_ACTIVATE1- RupActivate(): MsgRx! RtmState:%s, Frm:%d, Slot:%d, slotcnt:%d, actFrm:%d, actSlot:%d, subfr:%d, currInterlace:%d, currSubFr:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    currFrame, uint32
    currSlot, uint32
    slotcnt, uint32
    actionFrame, uint32
    actionSlot, uint32
    subframe, uint32
    CurrInterlace, uint32
    CurrSubframe, uint32
End

Begin Message, CP Trace CP_RCP_RTM_DEACTIVATE1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_DEACTIVATE1, N=%d, <systime>  RTM_DEACTIVATE1- RupDeactivate(): MsgRx! RtmState:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
End

Begin Message, CP Trace CP_RCP_RTM_RFREADY1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_RFREADY1, N=%d, <systime>  RTM_RFREADY1- RfReady(): RtmState:%s->%s, Silent:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmStateOld, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    SilentState, uint32, base=enum:N/Y
End

Begin Message, CP Trace CP_RCP_RTM_RFRELEASE1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_RFRELEASE1, N=%d, <systime>  RTM_RFRELEASE1- RfRelease(): RtmState:%s->%s, Silent:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmStateOld, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    SilentState, uint32, base=enum:N/Y
End

Begin Message, CP Trace CP_RCP_RTM_AMPTXATI1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_AMPTXATI1, N=%d, <systime>  RTM_AMPTXATI1- AmpTxATI(): RtmState:%s, lcmATIL:0x%08X, lcmATILUpdate:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    lcmATIL, uint32
    lcmATILUpdate, uint32
End

Begin Message, CP Trace CP_RCP_RTM_OMPSECP1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_OMPSECP1, N=%d, <systime>  RTM_OMPSECP1- OmpSecParm(): RtmState:%s, revLSilDur:%d, revLSilPer:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    revlinkSilenceDuration, uint32
    revlinkSilencePeriod, uint32
End

Begin Message, CP Trace CP_RCP_RTM_FTMCFG1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_FTMCFG1, N=%d, <systime>  RTM_FTMCFG1- FtmCfg(): drcGate:%d, dscLen:%d, drcBLen:%d, dscBLen:%d, drcGB:%d, dscGB:%d, deltaAck:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    drcGating, uint32
    dscLen, uint32
    drcBoostLen, uint32
    dscBoostLen, uint32
    drcChanGainBoost, uint32
    dscChanGainBoost, uint32
    deltaAckChanGainMUP, uint32
End

Begin Message, CP Trace CP_RCP_RTM_SMPSESS1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_SMPSESS1, N=%d, <systime>  RTM_SMPSESS1- SmpSessOpen(): RtmState:%s, sessionOpen:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    RtmScm.sessionOpenFlag, uint32
End

Begin Message, CP Trace CP_RCP_RTM_CSSSEARCH1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_CSSSEARCH1, N=%d, <systime>  RTM_CSSSEARCH1- CssSearch(): RtmState:%s, SearchEnded:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    RtmScm.cssSearchEndFlag, uint32
End

Begin Message, CP Trace CP_RCP_RTM_RTAPMODE1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_RTAPMODE1, N=%d, <systime>  RTM_RTAPMODE1- RtapMode(): cfgRateM:%d, MinR:%d, MaxR:%d, cfgSzMode:%d, MinS:%d, MaxS:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    configuredPacketRateMode, uint32
    rtapMinRate, uint32
    rtapMaxRate, uint32
    configuredPacketPayloadSizeMode, uint32
    rtapMinPayloadSize, uint32
    rtapMaxPayloadSize, uint32
End

Begin Message, CP Trace CP_RCP_RTM_TMREXP1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_TMREXP1, N=%d, <systime>  RTM_TMREXP1- TmrExp(): RtmState:%s, TmrId:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    TmrId, uint32, base=enum:Setup/FakeRTCAckTmr/Invalid
End

Begin Message, CP Trace CP_RCP_RTM_RTCACK1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_RTCACK1, N=%d, <systime>  RTM_RTCACK1- RtcAckMsg(): RtmState:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
End

Begin Message, CP Trace CP_RCP_RTM_BCREVLIM1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_BCREVLIM1, N=%d, <systime>  RTM_BCREVLIM1- BCRevRateLimMsg(): RtmState:%s, minRateLim=%d, rpcCount=%d, macIdMatched=%s, maxRateLimit=%d, numPilot=%d, userMacId0=%d, userMacId1=%d, userMacId2=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    minRateLim, uint32
    rpcCount, uint32
    macIdMatched, uint32, base=enum:FALSE/TRUE
    maxRateLimit, uint32
    numPilot, uint32
    userMacId0, uint32
    userMacId1, uint32
    userMacId2, uint32
End

Begin Message, CP Trace CP_RCP_RTM_UNIREVLIM1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_UNIREVLIM1, N=%d, <systime>  RTM_UNIREVLIM1- UniRevRateLimMsg(): RtmState:%s, RateLim=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    RateLim, uint32
End

Begin Message, CP Trace CP_RCP_RTM_TMR1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_TMR1, N=%d, <systime>  RTM_TMR1- Tmr(): RtmState:%s, tmrId=%s (%s)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    tmrId, uint32, base=enum:Setup/FakeRTCAckTmr/Invalid
    startstop, uint32, base=enum:Start/Stop
End

Begin Message, CP Trace CP_RCP_RTM_SIGREG1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_SIGREG1, N=%d, <systime>  RTM_SIGREG1- RcpTaskSig(): RtmState:%s, currChip:%d, currSlot:%d, currSubfr:%d, {fr:%d,slot:%d}-%s-%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    currChip, uint32
    currSlot, uint32
    currSubframe, uint32
    frame, uint32
    slot, uint32
    event, uint32, base=enum:SigRegEventTypeT
    regCanc, uint32, base=enum:Reg/Cancel
End

Begin Message, CP Trace CP_RCP_RTM_SILENT1 Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_SILENT1, N=%d, <systime>  RTM_SILENT1- SilentChk(): RtmState:%s, SilentStateOld:%s, SilentStateNew:%s, silStart:%d, silCount:%d, silDur:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    SilentStateOld, uint32, base=enum:NotSilent/Silent
    SilentStateNew, uint32, base=enum:NotSilent/Silent
    SilentStart, uint32
    revSilentTime, uint32
    revlinkSilenceDur, uint32
End

Begin Message, CP Trace CP_RCP_RTM_MAX_MAC_FLOW Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_MAX_MAC_FLOW, N=%d, <systime>  RTM_MAX_MAC_FLOW - RtmSubtype:%d, RtmInCfgSubtype:%d, RtmInCfgRtmSubtype:%d, RtmInUseRtmSubtype:%d, RtmInCfgMaxNumMacFlows:%d, RtmInUseMaxNumMacFlows:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmSubtype, uint32
    RtmInCfgSubtype, uint32
    RtmInCfgRtmSubtype, uint32
    RtmInUseRtmSubtype, uint32
    RtmInCfgMaxNumMacFlows, uint32
    RtmInUseMaxNumMacFlows, uint32
End

Begin Message, CP Trace CP_RCP_RTM_ATTRIBUTE_CONFIG Rsp
    printformat , RCP_RTM, 2, CP_RCP_RTM_ATTRIBUTE_CONFIG, N=%d, <systime>  RTM_ATTRIBUTE_CONFIG - complex_attr_id_flag:%d, attr_id:%d, value_id:%d, simple_attr_value:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    complex_attr_id_flag, uint32
    attr_id, uint32
    value_id, uint32
    simple_attr_value, uint32
End

Begin Message, CP Trace CP_RCP_RTM_SILENT2 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_SILENT2, N=%d, <systime>  RTM_SILENT2- SilentChk(): RtmState:%s, SilentState:%s, silCount:%d, silDur:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    SilentState, uint32, base=enum:NotSilent/Silent
    revSilentTime, uint32
    revlinkSilenceDur, uint32
End

Begin Message, CP Trace CP_RCP_RTM_PHYACKNAK1 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_PHYACKNAK1, N=%d, <systime>  RTM_PHYACKNAK1- PhyAckNak()-GetMbpBits: FwdValid:%s, Silent:%s, pSubfr:%d, pValid:%d, nextHL:%s, nextpValid:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmFwdChanValid, uint32, base=enum:INVALID/VALID
    RtmSilentState, uint32, base=enum:NOT_SILENT/SILENT
    parqSubframe, uint32
    parqValid, uint32
    nextHLarqType, uint32, base=enum:H/L
    nextParqValid, uint32
End

Begin Message, CP Trace CP_RCP_RTM_PHYACKNAK2 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_PHYACKNAK2, N=%d, <systime>  RTM_PHYACKNAK2- PhyAckNak01(): currRevMacPkt:0x%08x, macId:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmCurrRevMacPkt, uint32
    revMacPktId, uint32
End

Begin Message, CP Trace CP_RCP_RTM_PHYACKNAK3 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_PHYACKNAK3, N=%d, <systime>  RTM_PHYACKNAK3- PhyAckNak2()-HLarq: i:%d, arq:%d, subPkt:%d, max:%s, currRevMacPkt:0x%08x, macId:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    i, uint32
    arq, uint32
    subPktIndex, uint32
    maxSubPktReached, uint32, base=enum:N/Y
    RtmCurrRevMacPkt, uint32
    revMacPktId, uint32
End

Begin Message, CP Trace CP_RCP_RTM_PHYACKNAK4 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_PHYACKNAK4, N=%d, <systime>  RTM_PHYACKNAK4- PhyAckNak2()-Parq: i:%d, parq:%d, subfr:%d, macId:%d, larq:%s, 1stSubp:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    i, uint32
    parq, uint32
    mySubframe, uint32
    revMacPktId, uint32
    larqPresent, uint32, base=enum:N/Y
    1stSubpkt, uint32, base=enum:N/Y
End

Begin Message, CP Trace CP_RCP_RTM_PHYACKNAK5 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_PHYACKNAK5, N=%d, <systime>  RTM_PHYACKNAK5- PhyAckNak2()-PktSent: i:%d, subPkt:%d, currRevMacPkt:0x%08x, macId:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    i, uint32
    subPkt, uint32
    RtmCurrRevMacPkt, uint32
    revMacPktId, uint32
End

Begin Message, CP Trace CP_RCP_RTM_PHYACKNAK6 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_PHYACKNAK6, N=%d, <systime>  RTM_PHYACKNAK6- PhyAckNak2()-AbortHarq: RtmState:%s, currRevMacPkt:0x%08x, macId:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    RtmCurrRevMacPkt, uint32
    revMacPktId, uint32
End

Begin Message, CP Trace CP_RCP_RTM_PHYACKNAK7 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_PHYACKNAK7, N=%d, <systime>  RTM_PHYACKNAK7- PhyAckNak2()-MBP: drcLock:%02x, qrab:0x%02x, hlarq:%02x, parq:%02x, frab:%d, qrabs:%d, pilotStrength:%d, numPilots:%d, servingPN:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    drcLock, uint32
    qrab, uint32
    hlarq, uint32
    parq, uint32
    frab, uint32
    qrabs, uint32
    pilotStrength, uint32
    numPilots, uint32
    servingPN, uint32
End

Begin Message, CP Trace CP_RCP_RTM_PHYACKNAK8 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_PHYACKNAK8, N=%d, <systime>  RTM_PHYACKNAK8- PhyAckNak2()-PktSent: i:%d, nHL:%d, spId:%d, maxSp:%d, maxR:%d, lflag:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    currI, uint32
    nHL, uint32
    subPkt, uint32
    maxSubPkt, uint32
    maxR, uint32
    lflag, uint32
End

Begin Message, CP Trace CP_RCP_RTM_TXHIST1 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_TXHIST1, N=%d, <systime>  RTM_TXHIST1- TxHistAdd(): j:%d, macId:%d, 1stSub:%s, add:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    j, uint32
    revMacPktId, uint32
    1stSubpkt, uint32, base=enum:N/Y
    addItem, uint32, base=enum:init/hlarq
End

Begin Message, CP Trace CP_RCP_RTM_TXPKT1 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_TXPKT1, N=%d, <systime>  RTM_TXPKT1- TxPkt()-Enter: RtmState:%s, pktList:%d, macId:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    pktList, uint32
    revMacPktId, uint32
End

Begin Message, CP Trace CP_RCP_RTM_TXPKT2 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_TXPKT2, N=%d, <systime>  RTM_TXPKT2- TxPkt(): slot:%d, chip:%d, RtmState:%s, rate:%d, pktsz:%d, dataG:%d, pkthead:0x%08x, macId:%d, subpkt:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    currSlot, uint32
    currChip, uint32
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    revRate, uint32
    revPktSz, uint32
    dataGainScale, uint32
    pktList, uint32
    revMacPktId, uint32
    subPkt, uint32
End

Begin Message, CP Trace CP_RCP_RTM_TXPKT3 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_TXPKT3, N=%d, <systime>  RTM_TXPKT3- TxPkt()-ProgHw-%s: RtmState:%s, currChip:%d, currSlot:%d, val1:%d, val2:%d, val3:%d, val4:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ProgHw, uint32, base=enum:Activate/NoData/AckDataPhy01/AckDataPhy2/NakDataPhy2/TxOff/TxDisabled/Deactivate/SigException/TxException
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    currChip, uint32
    currSlot, uint32
    val1, uint32
    val2, uint32
    val3, uint32
    val4, uint32
End

Begin Message, CP Trace CP_RCP_RTM_TXPKT4 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_TXPKT4, N=%d, <systime>  RTM_TXPKT4- TxPkt-Harq(): Data:%d, I:%d, slot:%d, chip:%d, sp:%d, hlparq:0x%08X, sz:%d, rate:%d, macId:%d, txPktMode:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Data, uint32
    I, uint32
    slot, uint32
    chip, uint32
    sp, uint32
    hlparq, uint32
    Sz, uint32
    rate, uint32
    macId, uint32
    txPktMode, uint32, base=enum:HICAP/LOLAT
End

Begin Message, CP Trace CP_RCP_RTM_GRANT1 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_GRANT1, N=%d, <systime>  RTM_GRANT1- CalGrant()-Enter: RtmState:%s, Silent:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
    SilentState, uint32, base=enum:N/Y
End

Begin Message, CP Trace CP_RCP_RTM_GRANT2 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_GRANT2, N=%d, <systime>  RTM_GRANT2- CalGrant(): Interlace:%3d, Subframecnt:%3d, historycnt:%3d, Spid:%3d, maxsubpkt:%3d, revpkt:%3d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Interlace, uint32
    Subframecnt, uint32
    historycnt, uint32
    Spid, uint32
    maxsubpkt, uint32
    revpkt, uint32
End

Begin Message, CP Trace CP_RCP_RTM_GRANT3 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_GRANT3, N=%d, <systime>  RTM_GRANT3- CalGrant01(): grantSz:%d, prevR:%d, currR:%d, maxR:%d, rateLim:%d, combBB:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    grantSz, uint32
    prevRate, uint32
    currRate, uint32
    maxRate, uint32
    currRateLimitAN, uint32
    combBusyBit, uint32
End

Begin Message, CP Trace CP_RCP_RTM_GRANT4 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_GRANT4, N=%d, <systime>  RTM_GRANT4- CalGrant01()-SelTxRate: myR:%d, maxR:%d, rateLim:%d, txPwrAvail:%d, txPwrReq:%d, cfgPktR:%d, rtapR:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    myRate, uint32
    maxRate, uint32
    currRateLimit, uint32
    txPwrAvail, uint32
    txPwrReq, uint32
    cfgPacketRateMode, uint32
    rtapTargetRate, uint32
End

Begin Message, CP Trace CP_RCP_RTM_GRANT5 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_GRANT5, N=%d, <systime>  RTM_GRANT5- CalGrant01()-ReselTxRate: currR:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Rate, uint32
End

Begin Message, CP Trace CP_RCP_RTM_GRANT6 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_GRANT6, N=%d, <systime>  RTM_GRANT6- CalGrant01()-SysRandNum: randZn:0x%08x, zn:%d, range:%d, znMSB:0x%08x, znLSB:0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    randZn, uint32
    zn, uint32
    range, uint32
    znMSB, uint32
    znLSB, uint32
End

Begin Message, CP Trace CP_RCP_RTM_GRANT7 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_GRANT7, N=%d, <systime>  RTM_GRANT7- CalGrant01()-TranProb: combBB:%d, currRate:%d, x:%d, transProb:%d, maxRate:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    combBB, uint32
    currRate, uint32
    x, uint32
    transProb, uint32
    maxRate, uint32
End

Begin Message, CP Trace CP_RCP_RTM_GRANT8 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_GRANT8, N=%d, <systime>  RTM_GRANT8- CalGrant01()-RtmRrcGetTxPwrRate: myRate:%d, myDataG:%d, Ks0:%d, scInput:%d, myKs:%d, TxPilPwr:0x%08x, txPwrReq:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    myRate, uint32
    myDataG, uint32
    RtmScm.Ks0, uint32
    scInput, uint32
    myKs, uint32
    currTxPilPwr, uint32
    txPwrReq, uint32
End

Begin Message, CP Trace CP_RCP_RTM_GRANT9 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_GRANT9, N=%d, <systime>  RTM_GRANT9- RtmScmDataGScale(): i:%d, pwrParm0:%d, pwrParm:%d, dGBase:%d, dbInput:%d, dGScale:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    i, uint32
    pwrParm0, uint32
    pwrParm[i], uint32
    dataGBase[i], uint32
    dbInput, uint32
    dataGScale[i], uint32
End

Begin Message, CP Trace CP_RCP_RTM_GRANT10 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_GRANT10, N=%d, <systime>  RTM_GRANT10- RtmQueueSz[0]: %d, RtmQueueSz[1]: %d, RtmQueueSz[2]: %d, RtmQueueSz[3]: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RtmQueueSz0, uint32
    RtmQueueSz1, uint32
    RtmQueueSz2, uint32
    RtmQueueSz3, uint32
End

Begin Message, CP Trace CP_RCP_RTM_ERROR_GRANT2 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_ERROR_GRANT2, N=%d, <systime>  RTM_ERROR_GRANT2- CalGrant(): %s! RtmState:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    reason, uint32, base=enum:Invalid State/Null RtmCurrRevMacPkt/NoGrant
    RtmState, uint32, base=enum:Inact/Setup/SetupNoRF/Open/OpenNoRF
End

Begin Message, CP Trace CP_RCP_RTM_CLOSE_LOOP Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_CLOSE_LOOP, N=%d, <systime>  RTM_CLOSED_LOOP- TxPkt(): Data:%s, InterlaceNo:%d, NextAckMode:%s, SlotNo:%d, SubPktIdx:%d, HLARQ:%s, HARQMetric:0x%08X, HL_DMetric:0x%08X, ARQMode:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Data, uint32, base=enum:NoData/Data
    InterlaceNo, uint32
    NextAckMode, uint32, base=enum:L/H/L_P/H_P
    SlotNo, uint32
    SubPktIdx, uint32
    HLARQ, uint32, base=enum:Ack/Nak
    HARQMetric, uint32
    HL_DMetric, uint32
    ARQMode, uint32, base=enum:BPSK/OOK
End

Begin Message, CP Trace CP_RCP_RTM_QOS_INIT Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_INIT, N=%d, <systime>  RTM_QOS_INIT- QosCal(): macFlowID:0x%08X, bucketLevelMax:0x%08X, t2PInflow:0x%08X, bucketLevelSat(Q4):0x%08X, NumFlowsRcvingThisGrant:0x%08X, Debug2:0x%08X, Debug3:0x%08X, Debug4:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    macFlowID, uint32
    bucketLevelMax, uint32
    t2PInflow, uint32
    bucketLevelSat, uint32
    NumFlowsRcvingThisGrant, uint32
    Debug2, uint32
    Debug3, uint32
    Debug4, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_TXT2P Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_TXT2P, N=%d, <systime>  RTM_QOS_TXT2P- QosCal(): revPktSzSentInPrevInterlace:0x%08X, packetTxT2PPrevInterlace:0x%08X, txT2P:0x%08X, TMmin:0x%08X, prevSubpktId:0x%08X, Debug2:0x%08X, Debug3:0x%08X, Debug4:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    revPktSzSentInPrevInterlace, uint32
    packetTxT2PPrevInterlace, uint32
    txT2P, uint32
    TMmin, uint32
    prevSubpktId, uint32
    Debug2, uint32
    Debug3, uint32
    Debug4, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_OUTFLOW Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_OUTFLOW, N=%d, <systime>  RTM_QOS_OUTFLOW- QosCal(): SumPayload:0x%08X, t2POutflow0:0x%08X, t2POutflow1:0x%08X, grantByteSize0:0x%08X, grantByteSize1:0x%08X, txT2P:0x%08X, revPktSzSentInPrevInterlace:0x%08X, auxPilotChannelMinPayload:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SumPayload, uint32
    t2POutflow0, uint32
    t2POutflow1, uint32
    grantByteSize0, uint32
    grantByteSize1, uint32
    txT2P, uint32
    revPktSzSentInPrevInterlace, uint32
    auxPilotChannelMinPayload, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_BUCKET_LEVEL Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_BUCKET_LEVEL, N=%d, <systime>  RTM_QOS_BUCKET_LEVEL- QosCal(): bucketLevelSat0(Q4):0x%08X, bucketLevel0(Q4):0x%08X, bucketLevelSat1(Q4):0x%08X, bucketLevel1(Q4):0x%08X, t2PInflow0:0x%08X, t2POutflow0:0x%08X, bucketFactor0:0x%08X, bucketLevelMax0:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    bucketLevelSat0, uint32
    bucketLevel0, uint32
    bucketLevelSat1, uint32
    bucketLevel1, uint32
    t2PInflow0, uint32
    t2POutflow0, uint32
    bucketFactor0, uint32
    bucketLevelMax0, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_PILOTST_RAB Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_PILOTST_RAB, N=%d, <systime>  RTM_QOS_PILOTST_RAB- QosCal(): qrabs0:0x%08X, pilotStrength0:0x%08X, drcLock0:0x%08X, QRABps:0x%08X, frab:0x%08X, qrab0:0x%08X, qrab1:0x%08X, Debug0:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    qrabs0, uint32
    pilotStrength0, uint32
    drcLock0, uint32
    QRABps, uint32
    frab, uint32
    qrab0, uint32
    qrab1, uint32
    Debug, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_INFLOW0 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_INFLOW0, N=%d, <systime>  RTM_QOS_INFLOW0- QosCal(): tT2PHold:0x%08X, t2PInflowmax:0x%08X, prevT2PInflow:0x%08X, t2POutflow:0x%08X, deltaT2PInflow:0x%08X, t2PFilterTC:0x%08X, t2PInflowTmp:0x%08X, t2PInflow:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    tT2PHold, uint32
    t2PInflowmax, uint32
    prevT2PInflow, uint32
    t2POutflow, uint32
    deltaT2PInflow, uint32
    t2PFilterTC, uint32
    t2PInflowTmp, uint32
    t2PInflow, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_INFLOW1 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_INFLOW1, N=%d, <systime>  RTM_QOS_INFLOW1- QosCal(): tT2PHold:0x%08X, t2PInflowmax:0x%08X, prevT2PInflow:0x%08X, t2POutflow:0x%08X, deltaT2PInflow:0x%08X, t2PFilterTC:0x%08X, t2PInflowTmp:0x%08X, t2PInflow:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    tT2PHold, uint32
    t2PInflowmax, uint32
    prevT2PInflow, uint32
    t2POutflow, uint32
    deltaT2PInflow, uint32
    t2PFilterTC, uint32
    t2PInflowTmp, uint32
    t2PInflow, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_MINPKTSIZE Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_MINPKTSIZE, N=%d, <systime>  RTM_QOS_MINPKTSIZE- QosCal(): PktSize:0x%08X, TMmin:%s, TxMode:%s, SetF:0x%08X, TransmissionModeNn:%s, grantByteSize0:0x%08X, grantByteSize1:0x%08X, grantByteSize2:0x%08X , grantByteSize3:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PktSize, uint32
    TMmin, uint32, base=enum:HICAP/LOLAT
    TxMode, uint32, base=enum:HICAP/LOLAT
    SetF, uint32
    TransmissionModeNn, uint32, base=enum:HICAP/LOLAT
    grantByteSize0, uint32
    grantByteSize1, uint32
    grantByteSize2, uint32
    grantByteSize3, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_MINPKTSIZE_CONDITION Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_MINPKTSIZE_CONDITION, N=%d, <systime>  RTM_QOS_MINPKTSIZE- QosCal(): TxMode:%s, PktSize:0x%08X, BreakConditionNo:0x%08X, condition0:0x%08X, condition1:0x%08X, condition2:0x%08X, condition3:0x%08X, condition4:0x%08X , condition5:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TxMode, uint32, base=enum:HICAP/LOLAT/Silent
    PktSize, uint32
    BreakConditionNo, uint32
    condition0, uint32
    condition1, uint32
    condition2, uint32
    condition3, uint32
    condition4, uint32
    condition5, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_PKTSIZE Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_PKTSIZE, N=%d, <systime>  RTM_QOS_PKTSIZE- QosCal(): rN:0x%08X, allocationStagger:0x%08X, bucketFactor0:0x%08X, bucketLevel0(Q4):0x%08X, t2PInflow0:0x%08X, RtmQueueSz0:0x%08X, potentialT2POutflowHC0:0x%08X, queueOutflowHC0:0x%08X, sumQueueOutflow:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    rN, uint32
    allocationStagger, uint32
    bucketFactor0, uint32
    bucketLevel0, uint32
    t2PInflow0, uint32
    RtmQueueSz0, uint32
    potentialT2POutflowHC0, uint32
    queueOutflowHC0, uint32
    sumQueueOutflow, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_CHAN_SCALE0 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_CHAN_SCALE0, N=%d, <systime>  RTM_QOS_CHAN_SCALE0- QosCal(): revPktSz:0x%08X, packetTxT2PCurrInterlaceNew:0x%08X, packetTxT2PCurrInterlaceNewLenear:0x%08X, packetTxT2PCurrInterlaceOld:0x%08X, packetTxT2PCurrInterlaceOldLinear:0x%08X, packetSzNew:0x%08X, revPktSzSentInCurrInterlace:0x%08X, txT2pNew:0x%08X, txT2pOld:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    revPktSz, uint32
    packetTxT2PCurrInterlaceNew, uint32
    packetTxT2PCurrInterlaceNeLinear, uint32
    packetTxT2PCurrInterlaceOld, uint32
    packetTxT2PCurrInterlaceOldLinear, uint32
    packetSzNew, uint32
    revPktSzSentInCurrInterlace, uint32
    txT2pNew, uint32
    txT2pOld, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_CHAN_SCALE1 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_CHAN_SCALE1, N=%d, <systime>  RTM_QOS_CHAN_SCALE1- QosCal(): revPktSz:0x%08X, txT2p0New:0x%08X, txT2p1New:0x%08X, txT2p2New:0x%08X, rriGainScaleNew:0x%08X, txT2p0Old:0x%08X, txT2p1Old:0x%08X, txT2p2Old:0x%08X, rriGainScaleOld:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    revPktSz, uint32
    txT2p0New, uint32
    txT2p1New, uint32
    txT2p2New, uint32
    rriGainScaleNew, uint32
    txT2p0Old, uint32
    txT2p1Old, uint32
    txT2p2Old, uint32
    rriGainScaleOld, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_PILOTST_INT Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_PILOTST_INT, N=%d, <systime>  RTM_QOS_PILOTST_INT- QosCal(): int_val:0x%08X, i:0x%08X, tmp:0x%08X, tmp1:0x%08X, PilotStrengthn:0x%08X, pilotStrengthAxis[i]:0x%08X, numPilotStrength:0x%08X, Debug0:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    int_val, uint32
    i, uint32
    tmp, uint32
    tmp1, uint32
    PilotStrengthn, uint32
    pilotStrengthAxis[i], uint32
    numPilotStrength, uint32
    Debug0, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_T2PMAX_INT Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_T2PMAX_INT, N=%d, <systime>  RTM_QOS_T2PMAX_INT- QosCal(): int_val:0x%08X, i:0x%08X, tmp:0x%08X, tmp1:0x%08X, PilotStrengthn:0x%08X, txT2PmaxPilotStrengthAxis[i]:0x%08X, numTxT2PmaxPilotStrength:0x%08X, Debug0:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    int_val, uint32
    i, uint32
    tmp, uint32
    tmp1, uint32
    PilotStrengthn, uint32
    txT2PmaxPilotStrengthAxis[i], uint32
    numTxT2PmaxPilotStrength, uint32
    Debug0, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_T2PUP_INT Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_T2PUP_INT, N=%d, <systime>  RTM_QOS_T2PUP_INT- QosCal(): int_val:0x%08X, a:0x%08X, b:0x%08X, T2PInFlow:0x%08X, FRAB:0x%08X, index:0x%08X, i:0x%08X, j:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    int_val, uint32
    a, uint32
    b, uint32
    T2PInFlow, uint32
    FRAB, uint32
    index, uint32
    i, uint32
    j, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_T2PDN_INT Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_T2PDN_INT, N=%d, <systime>  RTM_QOS_T2PDN_INT- QosCal(): int_val:0x%08X, a:0x%08X, b:0x%08X, T2PInFlow:0x%08X, FRAB:0x%08X, index:0x%08X, i:0x%08X, j:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    int_val, uint32
    a, uint32
    b, uint32
    T2PInFlow, uint32
    FRAB, uint32
    index, uint32
    i, uint32
    j, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_BUCKETFACTOR_INT Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_BUCKETFACTOR_INT, N=%d, <systime>  RTM_QOS_BUCKETFACTOR_INT- QosCal(): int_val:0x%08X, a:0x%08X, b:0x%08X, T2PInFlow:0x%08X, FRAB:0x%08X, index:0x%08X, i:0x%08X, j:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    int_val, uint32
    a, uint32
    b, uint32
    T2PInFlow, uint32
    FRAB, uint32
    index, uint32
    i, uint32
    j, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_MAX_AVAILABLE_POWER Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_MAX_AVAILABLE_POWER, N=%d, <systime>  RTM_QOS_MAX_AVAILABLE_POWER- QosCal(): pktSz:%d, transmissionMode:%s, subPktId:%d, packetTxT2P:0x%08X, maxAvailableTxT2P:0x%08X, TotalMaxTxPwr:0x%08X, Slot_TxPwrALog2:0x%08X, Hslot_TxPwrALog2:0x%08X, Debug : 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    pktSz, uint32
    transmissionMode, uint32, base=enum:HICAP/LOLAT
    subPktId, uint32
    packetTxT2P, uint32
    maxAvailableTxT2P, uint32
    TotalMaxTxPwr, uint32
    Slot_TxPwrALog2, uint32
    Hslot_TxPwrALog2, uint32
    Debug, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_SETFLL Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_SETFLL, N=%d, <systime>  RTM_QOS_SETFLL- QosCal(): debug1:0x%08X, debug2:0x%08X, debug3:0x%08X, debug4:0x%08X, debug5:0x%08X, debug6:0x%08X, debug7:0x%08X, debug8:0x%08X, debug9:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    debug1, uint32
    debug2, uint32
    debug3, uint32
    debug4, uint32
    debug5, uint32
    debug6, uint32
    debug7, uint32
    debug8, uint32
    debug9, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_POTENTIAL_T2P_OUTFLOW Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_POTENTIAL_T2P_OUTFLOW, N=%d, <systime>  RTM_QOS_POTENTIAL_T2P_OUTFLOW- QosCal(): debug1:0x%08X, debug2:0x%08X, debug3:0x%08X, debug4:0x%08X, debug5:0x%08X, debug6:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    debug1, uint32
    debug2, uint32
    debug3, uint32
    debug4, uint32
    debug5, uint32
    debug6, uint32
End

Begin Message, CP Trace CP_RCP_RTM_QOS_PKTSIZE1 Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_QOS_PKTSIZE1, N=%d, <systime>  RTM_QOS_PKTSIZE1- QosCal(): debug1:0x%08X, debug2:0x%08X, debug3:0x%08X, debug4:0x%08X, debug5:0x%08X, debug6:0x%08X, debug7:0x%08X, debug8:0x%08X, debug9:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    debug1, uint32
    debug2, uint32
    debug3, uint32
    debug4, uint32
    debug5, uint32
    debug6, uint32
    debug7, uint32
    debug8, uint32
    debug9, uint32
End

Begin Message, CP Trace CP_RCP_RTM_TX_TIME_PROFILE Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_TX_TIME_PROFILE, N=%d, <systime>  RTM_TX_TIME_PROFILE TxPkt() : txTime[0]:0x%08X, txTime[1]:0x%08X, txTime[2]:0x%08X, txTime[3]:0x%08X, txTime[4]:0x%08X, txTime[5]:0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    txTime[0], uint32
    txTime[1], uint32
    txTime[2], uint32
    txTime[3], uint32
    txTime[4], uint32
    txTime[5], uint32
End

Begin Message, CP Trace CP_RCP_RTM_TX_TIME Rsp
    printformat , RCP_RTM, 3, CP_RCP_RTM_TX_TIME, N=%d, <systime>  RTM_TX_TIME TxPkt() : deadline_slot:%d, cur_slot:%d, cur_chip:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    deadline_slot, uint32
    cur_slot, uint32
    cur_chip, uint32
End

Begin Message, CP Trace CP_RCP_TXDMA_ERROR_BUFMGR Rsp
    printformat , RCP_TXDMA, 1, CP_RCP_TXDMA_ERROR_BUFMGR, N=%d, <systime>  TXDMA_ERROR_BUFMGR- %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Error, uint32, base=enum:Get-Out of buffers!/ Free- Null Ptrs!
End

Begin Message, CP Trace CP_RCP_TXDMA_ADD Rsp
    printformat , RCP_TXDMA, 3, CP_RCP_TXDMA_ADD, N=%d, <systime>  TXDMA_ADD- lldrec:0x%08x, src:0x%08x, srcDma:0x%08x, prevNext:0x%08x, len:%d, width:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    item, uint32
    srcAddr, uint32
    srcDma, uint32
    prevNext, uint32
    len, uint32
    width, uint32
End

Begin Message, CP Trace CP_RCP_TXDMA_FREE Rsp
    printformat , RCP_TXDMA, 3, CP_RCP_TXDMA_FREE, N=%d, <systime>  TXDMA_FREE- lldrec:0x%08x, next:0x%08x, count:%d, i:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    item, uint32
    next, uint32
    count, uint32
    i, uint32
End

Begin Message, CP Trace CP_RCP_TXDMA_FREE1 Rsp
    printformat , RCP_TXDMA, 3, CP_RCP_TXDMA_FREE1, N=%d, <systime>  TXDMA_FREE1 - FreeListCount:%d, LldCount:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FreeListCount, uint32
    LldCount, uint32
End

Begin Message, CP Trace CP_RCP_TXDMA_CREATE Rsp
    printformat , RCP_TXDMA, 3, CP_RCP_TXDMA_CREATE, N=%d, <systime>  TXDMA_CREATE - FreeListCount:%d, FreeListHead:0x%08x, FreeListTail:0x%08x, count:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FreeListCount, uint32
    FreeListHead, uint32
    FreeListTail, uint32
    count, uint32
End

Begin Message, CP Trace CP_RCP_RTAP_GENPKT_TRACE_ID Rsp
    printformat , RTAP_STATE, 1, CP_RCP_RTAP_GENPKT_TRACE_ID, N=%d, <systime>   RTAP GEN PKT INFO:MacFlowId=%d,PktQueueNum = %d, TestOverFlow=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MacFlow, uint32
    Num, uint32
    OverFlow, uint32
End

Begin Message, CP Trace CP_RCP_RTAP_CONNFLAG_TRACE_ID Rsp
    printformat , RTAP_STATE, 1, CP_RCP_RTAP_CONNFLAG_TRACE_ID, N=%d, <systime>   RTAP_ConnFlag = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Flag, uint32
End

Begin Message, CP Trace CP_RCP_RTAP_TXPKT01_TRACE_ID Rsp
    printformat , RTAP_STATE, 1, CP_RCP_RTAP_TXPKT01_TRACE_ID, N=%d, <systime>   RTAP TX PKT INFO:GrantBytes=%d,Hdrlen = %d, HdrOffset=%d, PktLen=%d, PktOffset=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    GrantBytes, uint32
    HdrLen, uint32
    HdrOff, uint32
    PktLen, uint32
    PktOff, uint32
End

Begin Message, CP Trace CP_RCP_RTAP_TXPKT2_TRACE_ID Rsp
    printformat , RTAP_STATE, 1, CP_RCP_RTAP_TXPKT2_TRACE_ID, N=%d, <systime>   RETAP TX PKT INFO:GrantBytes=%d,LinkFlow = %d, ViSeq=%d, PayloadIndex=%d, PL_2RevSysTime=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    GrantBytes, uint32
    LinkFlowId, uint32
    ViSeq, uint32
    PayloadIndex, uint32
    PL_2RevSysTime, uint32
End

Begin Message, CP Trace CP_PAR_RLP_STATE_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_RLP_STATE_TRACE_ID, N=%d, <systime>  CP -  PAR %s's RLP Flow %x's State is: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Type
    RLPFlow, uint32
    RLPState, uint32, base=enum:RLPStates Type
End

Begin Message, CP Trace CP_PAR_FLOW_CTRL_STATE_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_FLOW_CTRL_STATE_TRACE_ID, N=%d, <systime>  CP -  PAR %s's Flow Control State is: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Streams Type
    FlowCtrlState, uint32, base=enum:OFF/ON
End

Begin Message, CP Trace CP_PAR_RLP_FRAME_SEND_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_RLP_FRAME_SEND_TRACE_ID, N=%d, <systime>  CP -  PAR %s's RLP Flow %x Packet Send: VS = 0x%08X, LEN = 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Type
    RLPFlow, uint32
    VS, uint32
    LEN, uint32
End

Begin Message, CP Trace CP_PAR_RLP_FRAME_RETX_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_RLP_FRAME_RETX_TRACE_ID, N=%d, <systime>  CP -  Step %d, PAR %s's RLP Flow %x Packet Retransmit: SEQ = 0x%08X, LEN = 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Step, uint32
    AppType, uint32, base=enum:Apps Type
    RLPFlow, uint32
    SEQ, uint32
    LEN, uint32
End

Begin Message, CP Trace CP_PAR_RLP_NAK_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_RLP_NAK_MSG_TRACE_ID, N=%d, <systime>  CP -  PAR %s's RLPFlow = %d, 0x%02xth NAK Rec: FirstErased = 0x%08X, LEN = 0x%08X, VS = 0x%08X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Type
    RLPFlow, uint32
    NakRecNo, uint32
    SEQ, uint32
    LEN, uint32
    VS, uint32
End

Begin Message, CP Trace CP_PAR_DOS_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_DOS_MSG_TRACE_ID, N=%d, <systime>  CP - PAR Data Over Signaling Packet Send: SEQ = 0x%08X, LEN = 0x%08X, Reset: %s, Ack Required:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SEQ, uint32
    LEN, uint32
    Reset, uint32, base=enum:FALSE/TRUE
    AckReq, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP_PAR_MAX_PRIORITY_INFO_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_MAX_PRIORITY_INFO_TRACE_ID, N=%d, <systime>  CP - PAR %s's RLPFlow = %d, Max Pkt Priority return %s, Packet Priority is %d, TimeStamp is 0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Type
    RLP Flow, uint32
    ReturnValue, uint32, base=enum:FALSE/TRUE
    Pkt Priority, uint32
    TimeStamp, uint32
End

Begin Message, CP Trace CP_PAR_GRANT_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_GRANT_TRACE_ID, N=%d, <systime>  CP - PAR %s's RLPFlow = %d on revMacId = %d GrantSize is = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Type
    RLP Flow, uint32
    revMacId, uint32
    GrantSize, uint32
End

Begin Message, CP Trace CP_PAR_RLP_PACKET_SENT_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_RLP_PACKET_SENT_TRACE_ID, N=%d, <systime>  CP - PAR %s's RLPFlow = %d data send on MacFlowId = %d has been sent out
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Type
    RLP Flow, uint32
    revMacId, uint32
End

Begin Message, CP Trace CP_PAR_RLP_PACKET_NOSENT_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_RLP_PACKET_NOSENT_TRACE_ID, N=%d, <systime>  CP - PAR %s's RLPFlow = %d data send on MacFlowId = %d not been sent out
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Type
    RLP Flow, uint32
    revMacId, uint32
End

Begin Message, CP Trace CP_PAR_RLP_PHY_MISSED_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_RLP_PHY_MISSED_TRACE_ID, N=%d, <systime>  CP - PAR %s's RLPFlow = %d data send on MacFlowId = %d receive phyMissedInd(SEQ = 0x%08X, LEN = 0x%08X)
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Type
    RLP Flow, uint32
    revMacId, uint32
    SEQ, uint32
    LEN, uint32
End

Begin Message, CP Trace CP_PAR_RLP_PHY_ACKED_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_RLP_PHY_ACKED_TRACE_ID, N=%d, <systime>  CP - PAR %s's RLPFlow = %d data send on MacFlowId = %d receive physicalAcked indication
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Type
    RLP Flow, uint32
    revMacId, uint32
End

Begin Message, CP Trace CP_PAR_GAUP_STATE_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_GAUP_STATE_TRACE_ID, N=%d, <systime>  CP - MFPA GAUP State %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:MFPA GaupState Enum
End

Begin Message, CP Trace CP_PAR_GAUP_TM_EXPIRE_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_GAUP_TM_EXPIRE_TRACE_ID, N=%d, <systime>  CP - MFPA GAUP Timer Expired Timerd=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TimerId, uint32
End

Begin Message, CP Trace CP_PAR_QUEUE_ERROR_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_QUEUE_ERROR_TRACE_ID, N=%d, <systime>  CP - PAR %s's RLPFlow = %d %s Queue Error
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Type
    RLP Flow, uint32
    QueueType, uint32, base=enum:Tx/Retx
    TotalBytesInQ, uint32
End

Begin Message, CP Trace CP_PAR_GET_QUEUE_SZ_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_GET_QUEUE_SZ_TRACE_ID, N=%d, <systime>  CP - PAR AppFtnType = %s, AppType = %s, Macflowid = %d, TotalBytesInQ = %d, TotalBytesTxQ = %d, TotalBytesReTxQ = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppFtnType, uint32, base=enum:Apps Type
    AppType, uint32, base=enum:Apps Type
    Macflowid, uint32
    TotalBytesInQ, uint32
    TotalBytesTxQ, uint32
    TotalBytesReTxQ, uint32
End

Begin Message, CP Trace CP_PAR_RESERVATIONLABEL_STATE_ID Rsp
    printformat , 1, 1, CP_PAR_RESERVATIONLABEL_STATE_ID, N=%d, <systime>  ReservationLabel state change:Direction=%s,ReservationLabel = %d , State Change to %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Direction, uint32,base=enum:QOS Direction Enum
    Labelw, uint32
    State, uint32, base=enum:ReservationState Enum
End

Begin Message, CP Trace CP_PAR_RLP_TX_QUEUE_SZ_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_RLP_TX_QUEUE_SZ_TRACE_ID, N=%d, <systime>  CP - PAR AppType = %s, RLPFlow = %d, FtnIdx = %d, TotalBytesInQ = %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Type
    RLP Flow, uint32
    FtnIdx, uint32
    TotalBytesInQ, uint32
End

Begin Message, CP Trace CP_PAR_RLP_RETX_QUEUE_SZ_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_RLP_RETX_QUEUE_SZ_TRACE_ID, N=%d, <systime>  CP - PAR AppType = %s, RLPFlow = %d, FtnIdx = %d, TotalBytesInQ = %d bytes
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Apps Type
    RLP Flow, uint32
    FtnIdx, uint32
    TotalBytesInQ, uint32
End

Begin Message, CP Trace CP_PAR_RSP_STATE_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_RSP_STATE_TRACE_ID, N=%d, <systime>  CP - PAR %s's RSP State from %s to %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AppType, uint32, base=enum:Streams Type
    Old State, uint32, base=enum:RouteStates Types
    New State, uint32, base=enum:RouteStates Types
End

Begin Message, CP Trace CP_PARSMCM_TRACE_ID Rsp
    printformat , 1, 1, CP_PARSMCM_TRACE_ID, N=%d, <systime>  CP - PARSMCM: %x, %x, %x, %x, %x, %x, %x, %x, %x, %x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint32, maxsize=10, size=end
End

Begin Message, CP Trace CP_PCPR_GRANT_INFO_TRACE_ID Rsp
    printformat , 1, 1, CP_PCPR_GRANT_INFO_TRACE_ID, N=%d, <systime>  CP - PCPR Received Grant on MacFlow %d, MackFlowId is %d, GrantSize is %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MacFlowNum, uint32
    MacFlowId, uint32
    GrantSize, uint32
End

Begin Message, CP Trace CP_PCPR_GRANT_TOT_INFO_TRACE_ID Rsp
    printformat , 1, 1, CP_PCPR_GRANT_TOT_INFO_TRACE_ID, N=%d, <systime>  CP - PCPR TotGrant Info:  connLfmt=%d, Grant=%d, totPktLen=%d, pad=%d, leftover=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ConnLayerFormat, uint32
    GrantSize, uint32
    totPktLen, uint32
    PadLen, uint32
    leftoverGrant, uint32
End

Begin Message, CP Trace CP_PCPR_BESTPKT_FOR_MACFLOW_TRACE_ID Rsp
    printformat , 1, 1, CP_PCPR_BESTPKT_FOR_MACFLOW_TRACE_ID, N=%d, <systime>  CP - PCPR Find BestPkt for MacFlow Debug Info: MacFlowId=%d,StreamNumber=%d,SubStreamNumber=%d,AppType=%d,getMaxPktPriority=0x%08x,grant=0x%08x,phyTrafficMissed=0x%08x,phyTrafficAcked=0x%08x,pktSent=0x%08x,pktNotSent=0x%08x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MackFlowId, uint32
    StreamNumber, uint32
    SubStreamNumber, uint32
    AppType, uint32
    getMaxPktPriority, uint32
    grant, uint32
    phyTrafficMissed, uint32
    phyTrafficAcked, uint32
    pktSent, uint32
    pktNotSent, uint32
End

Begin Message, CP Trace CP_PAR_RLP_QUEUED_BYTE_TRACE_ID Rsp
    printformat , 1, 1, CP_PAR_RLP_PHY_MISSED_TRACE_ID, N=%d, <systime>  CP - RLP queue bytes from %s, %d, new = %d,total=%d,nsapi=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    IncDec, uint32, base=enum:Add/Delete
    caller, uint32
    num, uint32
    total, uint32
    nsapi, uint32
End

Begin Message, CP Trace CP_RCP_FTAP_LOOKBK_PKT_TRACE_ID Rsp
    printformat ,  1, 1, CP_RCP_FTAP_LOOKBK_PKT_TRACE_ID, N=%d, <systime>  CP - FwdSysTime=0x%08X  FwdSeqNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SysTime, uint32
    Fwd SeqNum, uint32
End

Begin Message, CP Trace CP_RCP_FTAP_INIT_TRACE_ID Rsp
    printformat ,  1, 1, CP_RCP_FTAP_INIT_TRACE_ID, N=%d, <systime>  CP - SubType = 0x%04X  ProtocolType=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Sub Type, uint32
    Protocol Type, uint32
End

Begin Message, CP Trace CP_RCP_FTAP_PKT_SENT_TRACE_ID Rsp
    printformat ,  1, 1, CP_RCP_FTAP_PKT_SENT_TRACE_ID, N=%d, <systime>  CP - Ftap Sent Ack revMacId = %d, sent pkt num=%d, Node deleted=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    revMacId, uint32
    pktNum, uint32
    bNode, uint32, base=enum:FALSE/TRUE
End

Begin Message, CP Trace CP_RCP_FTAP_PKT_NOT_SENT_TRACE_ID Rsp
    printformat ,  1, 1, CP_RCP_FTAP_PKT_NOT_SENT_TRACE_ID, N=%d, <systime>  CP - Ftap Not Sent Ack revMacId = %d, sent pkt num=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    revMacId, uint32
    pktNum, uint32
End

Begin Message, CP Trace CP_RCP_FTAP_REV_REC_INFO_TRACE_ID Rsp
    printformat ,  1, 1, CP_RCP_FTAP_REV_REC_INFO_TRACE_ID, N=%d, <systime>  CP - Ftap Test Record TCAMSeqInc = %s, TCAMSeq=%d,DRCCover=%d,Slot=%d,FwdMacPkt=%d,FwdSeqInc=%s,FwdSeq=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TCAMSeqInc, uint32, base=enum:FALSE/TRUE
    TCAMSeq, uint32
    DRCCover, uint32
    Slot, uint32
    FwdMacPkt, uint32
    FwdSeqInc, uint32, base=enum:FALSE/TRUE
    FwdSeq, uint32
End

Begin Message, CP Trace CP_RCP_FTAP_GRANT_TRACE_ID Rsp
    printformat ,  1, 1, CP_RCP_FTAP_GRANT_TRACE_ID, N=%d, <systime>  CP - Ftapr state Active = %s, grantSize=%d, revMacId=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    bActive, uint32, base=enum:FALSE/TRUE
    grantSize, uint32
    revMacId, uint32
End

Begin Message, CP Trace CP_RCP_FTAP_REPEATED_TRACE_ID Rsp
    printformat ,  1, 1, CP_RCP_FTAP_REPEATED_TRACE_ID, N=%d, <systime>  CP - Ftap Receive repeated record SeqNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SeqNum, uint32
End

Begin Message, CP Trace CP_RCP_FTAP_LOOPBACK_OVERFLOW_TRACE_ID Rsp
    printformat ,  1, 1, CP_RCP_FTAP_LOOPBACK_OVERFLOW_TRACE_ID, N=%d, <systime>  CP - Ftapr loopback buffer overflow, seqNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    seqNum, uint32
End

Begin Message, CP Trace CP_RCP_FTAP_LOOPBK_REC_OVERFLOW_TRACE_ID Rsp
    printformat ,  1, 1, CP_RCP_FTAP_LOOPBK_REC_OVERFLOW_TRACE_ID, N=%d, <systime>  CP - Ftapr loopback record buffer overflow, seqNum=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    seqNum, uint32
End

Begin Message, CP Trace CP_RCP_FTAPR_ERROR_TRACE_ID Rsp
    printformat , RCP_FTAPR, 1, CP_RCP_FTAPR_ERROR_TRACE_ID, N=%d, <systime>  FTAPR Err: type:0x%x, param1:0x%x, param2:0x%x,param3:0x%x,param4:0x%x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    type, uint32
    param1, uint32
    param2, uint32
    param3, uint32
    param4, uint32
End

Begin Message, CP Trace CP_RCP_AUTH_PROCESS_ACM_PKTS_TRACE_ID Rsp
    printformat ,  1, 1, CP_RCP_AUTH_PROCESS_ACM_PKTS_TRACE_ID, N=%d, <systime>  CP - Auth process ACM Packets in protocol subtype =%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Subtype, uint32, base=enum:DEFAULT_AUTHENTICATION_PROTOCPL/SHA1_AUTHENTICATION_PROTOCPL
End

Begin Message, CP Trace CP_RCP_SEC_GET_CRYPTOSYNC_TRACE_ID Rsp
    printformat ,  1, 1, CP_RCP_SEC_GET_CRYPTOSYNC_TRACE_ID, N=%d, <systime>  CP - Sec get CryptoSunc = 0x%02x %02x %02x %02x %02x %02x %02x %02x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CryptoSync0, uint8
    CryptoSync1, uint8
    CryptoSync2, uint8
    CryptoSync3, uint8
    CryptoSync4, uint8
    CryptoSync5, uint8
    CryptoSync6, uint8
    CryptoSync7, uint8
End

Begin Message, CP Trace CP_RCP_SEC_PROCESS_ACM_PKTS_TRACE_ID Rsp
    printformat ,  1, 1, CP_RCP_SEC_PROCESS_ACM_PKTS_TRACE_ID, N=%d, <systime>  CP - Sec process ACM Packets in protocol subtype =%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Subtype, uint32, base=enum:DEFAULT_SECURITY_PROTOCOL/GENERIC_SECURITY_PROTOCOL
End

Begin Message, CP Trace CP_PDS_CMD_MBOX_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_CMD_MBOX_MSG, N=%d, <systime>  CP - PDS MegId=%s, received bytes=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Id, uint32, base=enum:PDS MBox Msg
    Msg Size, uint32, base=16
End

Begin Message, CP Trace CP_PDS_IS801_API_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_API , N=%d, <systime>  CP - %s, parm1=%d, parm2=%d, parm3=%d, parm4=%d, parm5=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PDSIS801API, uint32, base=enum:PDS API Id
    parm1, uint32, base=10
    parm2, uint32, base=10
    parm3, uint32, base=10
    parm4, uint32, base=10
    parm5, uint32, base=10
End

Begin Message, CP Trace CP_PDS_IS801_V2_RX_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_V2_RX_MSG , N=%d, <systime>  CP - %s, Req=%s, Rsp=%s, parm1=%s, parm2=%s, parm3=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Is801v2, uint32, base=enum:PDS IS801V2 DL Msg Id
    Req, uint32, base=enum:PDS ReqType Id
    Rsp, uint32, base=enum:PDS RspType Id
    parm1, uint32, base=10
    parm2, uint32, base=10
    parm3, uint32, base=10
End

Begin Message, CP Trace CP_PDS_IS801_SESS_INFO_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_SESS_INFO, N=%d, <systime>  CP - InstanceId: %d, Sess_Id: %d,FixMode: %s, NumFixes: %d, TimeBFixes:%d, Accuracy:%d, Performance:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    InstanceId, uint32
    Sess_Id, uint32
    FixMode, uint32, base=enum:PDS PosMode enum
    NumFixes, uint32
    TimeBFixes, uint32
    Accuracy, uint32
    Performance, uint32
End

Begin Message, CP Trace CP_PDS_IS801_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801, N=%d, <systime>  CP - LocSrv: %s, %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Trace Index, uint32, base=enum:PDS LocSrv Trace Index
    Rec, union, enum=Trace Index
End

Begin Message, CP_PDS_IS801_TRACE_ID Outstanding Requests Received Rsp
    SessId, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID BS Capabilities Rsp
    Session ID, uint32
    Revision, uint32
    GPS Cap, uint32, base=enum:FALSE/TRUE
    AFLT Cap, uint32, base=enum:FALSE/TRUE
    APDC ID, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID BS Reject Response Received Rsp
    SessId, uint32
    RejElem, uint32, base=enum:PDS MS Request Element enum
    RejReason, uint32, base=enum:CAP not Supported/CAP Temp Not Supported
End

Begin Message, CP_PDS_IS801_TRACE_ID BS Response Not Supported Rsp
    Element, uint32, base=enum:PDS Loc BS Response Element enum
End

Begin Message, CP_PDS_IS801_TRACE_ID Invalid PPM Session ID Rsp
    PPMId, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID Invalid LocServ Session ID Rsp
    SessId, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID Outgoing Msg Buffer Get Failed Rsp
End

Begin Message, CP_PDS_IS801_TRACE_ID Session Tag Mismatch Rsp
End

Begin Message, CP_PDS_IS801_TRACE_ID BS Location Response Rcvd Rsp
    CDMA Time Ref, uint32
    Lat, uint32
    Long, uint32
    Height, uint32
    Heading, uint32
    Horizontal Velo, uint32
    Vertical Velo, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID BS Response Element Rcvd Rsp
    Response element, uint32, base=enum:PDS Loc BS Response Element enum
End

Begin Message, CP_PDS_IS801_TRACE_ID BS Request Element Rcvd Rsp
    Request element, uint32, base=enum:PDS Loc BS Request Element enum
End

Begin Message, CP_PDS_IS801_TRACE_ID Mobile Orig Location Session Rsp
End

Begin Message, CP_PDS_IS801_TRACE_ID Loc Session PS Struct Header Rsp
    Sess Start, uint32, base=enum:FALSE/TRUE
    Sess End, uint32, base=enum:FALSE/TRUE
    Sess Source, uint32, base=enum:BS Init/MS Orig
    Sess Tag, uint32
    Sess Id, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID Loc Session PS Struct Requests Rsp
    Num Req Out, uint32
    Out Req Map, uint32
    Num Req, uint32
    Req Len, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID Loc Session PS Struct Responses Rsp
    Num Rsp, uint32
    Rsp Len, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID Loc Session PS Struct AFLT Rsp
    PPM Id, uint32
    AFLT State, uint32, base=enum:PDS AFLT States enum
    Num Fixes, uint32
    Num Pilots, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID Loc Session PS Struct AGPS Rsp
    AGPS State, uint32, base=enum:PDS AGPS States enum
    Num Fixes, uint32
    AcqAsst Len, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID Invalid AFLT State Rsp
    AFLT State, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID Invalid AGPS State Rsp
    AGPS State, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID Unexpected AFLT Event Rsp
End

Begin Message, CP_PDS_IS801_TRACE_ID Unexpected AGPS Event Rsp
End

Begin Message, CP_PDS_IS801_TRACE_ID MS Request to BS Rsp
    MS Req, uint32, base=enum:PDS MS Request Element enum
End

Begin Message, CP_PDS_IS801_TRACE_ID MS Response to BS Rsp
    MS Rsp, uint32, base=enum:PDS MS Response Element enum
End

Begin Message, CP_PDS_IS801_TRACE_ID Collision Rsp
End

Begin Message, CP_PDS_IS801_TRACE_ID PDDM Received Rsp
End

Begin Message, CP_PDS_IS801_TRACE_ID PDDM Sent Rsp
End

Begin Message, CP_PDS_IS801_TRACE_ID RMS Error Phase Response Dump Rsp
    Index, uint32
    PolyX, double
    RmsErr, double
    ParmX, uint32
    ParmY, uint32
    RmsErrPhase, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID MS Response Not Supported Rsp
End

Begin Message, CP_PDS_IS801_TRACE_ID PPM Qual Response Timer Expired Rsp
End

Begin Message, CP_PDS_IS801_TRACE_ID PRM Qual Response Timer Expired Rsp
End

Begin Message, CP_PDS_IS801_TRACE_ID Output Request Timer Expired Rsp
End

Begin Message, CP_PDS_IS801_TRACE_ID Invalid Timer Rsp
End

Begin Message, CP_PDS_IS801_TRACE_ID Received PRM from GPS Rsp
    SessId, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID PPM Pref Qual Timer Rsp
    SessId, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID PRM Pref Qual Timer Rsp
    SessId, uint32
End

Begin Message, CP_PDS_IS801_TRACE_ID Pars Session Handler Rsp
    NewSession, uint32
    EndSession, uint32
    SessSource, uint32
    SessTag, uint32
End

Begin Message, CP Trace CP_PDS_IS801_STATUS_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_STATUS, N=%d, <systime>  CP - InstanceId: %d, Sess_Id: %d, Loc FixMode: %s, oldState:%s, State:%s, event:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    InstanceId, uint32
    Sess_Id, uint32
    FixMode, uint32, base=enum:PDS PosMode enum
    CP_oState, uint32,base=enum:PDS ControlPlane Loc State enum,exist=(FixMode==0)
    CP_cState, uint32,base=enum:PDS ControlPlane Loc State enum,exist=(FixMode==0)
    MSA_oldState, uint32,base=enum:PDS Msa Loc State enum,exist=(FixMode==1)
    MSA_State, uint32,base=enum:PDS Msa Loc State enum,exist=(FixMode==1)
    MSB_oldState, uint32,base=enum:PDS Msb Loc State enum,exist=(FixMode==2)
    MSB_State, uint32,base=enum:PDS Msb Loc State enum,exist=(FixMode==2)
    MSS_oldState, uint32,base=enum:PDS Mss Loc State enum,exist=(FixMode==3)
    MSS_State, uint32,base=enum:PDS Mss Loc State enum,exist=(FixMode==3)
    CP_oldState, uint32,base=enum:PDS ControlPlane Loc State enum,exist=(FixMode==4)
    CP_State, uint32,base=enum:PDS ControlPlane Loc State enum,exist=(FixMode==4)
    event, uint32, base=enum:PDS Loc Event enum
End

Begin Message, CP Trace CP_PDS_IS801_MODE_FLOW_GET_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_MODE_FLOW_GET, N=%d, <systime>  CP - InstanceId: %d, Sess_Id: %d, Loc FixMode: %s, NumFixes:%d,Sub Flow:%s, Performance:%d, Accuracy:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    InstanceId, uint32
    Sess_Id, uint32
    FixMode, uint32, base=enum:PDS PosMode enum
    NumFixes, uint32
    CP_State, uint32,exist=(FixMode==1)
    MSA_State, uint32,base=enum:PDS MSA_FLOW enum,exist=(FixMode==2)
    MSB_State, uint32,base=enum:PDS MSB_FLOW enum,exist=(FixMode==3)
    MSS_State, uint32,exist=(FixMode==4)
    Performance, uint32
    Accuracy, uint32
End

Begin Message, CP Trace CP_PDS_IS801_ALM_EPH_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_ALM_EPH, N=%d, <systime>  CP - Sess_Id: %d, GPS Almanac: %d, GPS Ephemeris: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Sess_Id, uint32
    Almanac, uint32
    Ephemeris, uint32
End

Begin Message, CP Trace CP_PDS_IS801_OUTPUT_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_OUTPUT, N=%d, <systime>  CP - InstanceId: %d, Sess_Id: %d, OutstandingREQ=%d, OutStandingRsp=%d, NumReqOutstanding=%d, NumRspOutstanding=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    InstanceId, uint32
    Sess_Id, uint32
    OutstandingREQ, uint32
    OutStandingRsp, uint32
    NumReqOutstanding, uint32
    NumRspOutstanding, uint32
End

Begin Message, CP Trace CP_PDS_IS801_REV_TCBP_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_REV_TCBP, N=%d, <systime>  CP - TCPsendOK: %d, TcpSendPktSessionId: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TCPsendOK, uint32
    TcpSendPktSessionId, uint32
End

Begin Message, CP Trace CP_PDS_IS801_REV_SMS_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_REV_SMS, N=%d, <systime>  CP - SMSsendOK: %d, SmsSendPktSessionId: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SMSsendOK, uint32
    SmsSendPktSessionId, uint32
End

Begin Message, CP Trace CP_PDS_IS801_OUTPUT_INFO_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_OUTPUT_INFO, N=%d, <systime>  CP - InstanceId: %d, Sess_Id: %d, FixMode: %d, LocSMSsendOK: %d, LocTCPsendOK: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    InstanceId, uint32
    Sess_Id, uint32
    FixMode, uint32
    LocSMSsendOK, uint32
    LocTCPsendOK, uint32
End

Begin Message, CP Trace CP_PDS_IS801_RCV_RSP_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_RCV_RSP_MSG, N=%d, <systime>  CP - InstanceId: %d, Sess_Id=%d, RspType: %s, OutstandingREQ: %d, NumReqOutstanding: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    InstanceId, uint32
    Sess_Id, uint32
    RspType, uint32, base=enum:Loc BS Response Element enum
    OutstandingREQ, uint32
    NumReqOutstanding, uint32
End

Begin Message, CP Trace CP_PDS_IS801_ALM_EPH_CHECK_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_ALM_EPH_CHECK, N=%d, <systime>  CP - AlmSysTime:0x%08X, ephSysTime:0x%08X, currentTime:0x%08X, expired:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AlmSysTime, uint32
    ephSysTime, uint32
    currentTime, uint32
    expired, uint32
End

Begin Message, CP Trace CP_PDS_IS801_CLR_PPM_STATUS_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_CLR_PPM_STATUS, N=%d, <systime>  CP - PPM: Operation:%d, PPMId:%d, SessID0:%d, SessID1:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Operation, uint32, base=enum:PDS PrmPpm Operation enum
    PPMId, uint32
    SessID0, uint32
    SessID1, uint32
End

Begin Message, CP Trace CP_PDS_IS801_PRM_MSM_REQ_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_PRM_MSM_REQ, N=%d, <systime>  CP - SessId:%d, ReadForSess:%d, PrmReqInc:%d, AADataInc:%d, ResponseTime:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SessId, uint32
    ReadForSess, uint32
    PrmReqInc, uint32
    AADataInc, uint32
    ResponseTime, uint32
End

Begin Message, CP Trace CP_PDS_IS801_PPM_MSM_REQ_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_PPM_MSM_REQ, N=%d, <systime>  CP - SessId:%d, PPMId:%d, OffsetReq:%d, PrefRespQual:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SessId, uint32
    PPMId, uint32
    OffsetReq, uint32
    PrefRespQual, uint32
End

Begin Message, CP Trace CP_PDS_IS801_RCV_REQ_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_RCV_REQ_MSG, N=%d, <systime>  CP - InstanceId: %d, Sess_Id=%d, ReqType: %s, OutstandingREQ: %d, NumReqOutstanding: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    InstanceId, uint32
    Sess_Id, uint32
    ReqType, uint32, base=enum:PDS Loc BS Request Element enum
    OutstandingREQ, uint32
    NumReqOutstanding, uint32
End

Begin Message, CP Trace CP_PDS_IS801_CONN_IND_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_CONN_IND, N=%d, <systime>  CP - %s, Status: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SmsTcp, uint32, base=enum:PDS SmsTcp enum
    ConnStatus, uint32, base=enum:PDS Conn Status enum
End

Begin Message, CP Trace CP_PDS_IS801_ALM_EPH_RESTORE_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_ALM_EPH_RESTORE, N=%d, <systime>  CP - ephSysTime:0x%08X, almSysTime:0x%08X, ephTimeInterval:%d,almTimeInterval:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ephSysTime, uint32
    almSysTime, uint32
    ephTimeInterval, uint32
    almTimeInterval, uint32
End

Begin Message, CP Trace CP_PDS_IS801_READY_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_READY, N=%d, <systime>  CP - SessId:%d, PDSIs801Ready:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SessId, uint32
    PDSIs801Ready, uint32
End

Begin Message, CP Trace CP_PDS_IS801_CLR_PRM_STATUS_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_IS801_CLR_PRM_STATUS, N=%d, <systime>  CP - PRM: Operation:%d, SessId:%d, PrmState:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Operation, uint32, base=enum:PDS PrmPpm Operation enum
    SessId, uint32
    PrmState, uint32
End

Begin Message, CP Trace CP_PDS_RAT_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_RAT_MSG, N=%d, <systime>  Msg Id=%s, parm1=%d, parm2=%d, parm3=%d, parm4=%d, parm5=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Id, uint32, base=enum:PDS RAT MSG Id
    parm1, uint32, base=10
    parm2, uint32, base=10
    parm3, uint32, base=10
    parm4, uint32, base=10
    parm5, uint32, base=10
End

Begin Message, CP Trace CP_PDS_PAC_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_PAC_MSG, N=%d, <systime>  Msg Id=%s, parm1=%d, parm2=%d, parm3=%d, parm4=%d, parm5=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Id, uint32, base=enum:PDS MBox Msg
    parm1, uint32, base=10
    parm2, uint32, base=10
    parm3, uint32, base=10
    parm4, uint32, base=10
    parm5, uint32, base=10
End

Begin Message, CP Trace CP_PDS_AP_MSG_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_AP_MSG, N=%d, <systime>  Msg Id=%s, parm1=%d,  parm2=%d, parm3=%d, parm4=%d, parm5=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Msg Id, uint32, base=enum:PDS MBox Msg
    parm1, uint32, base=10
    parm2, uint32, base=10
    parm3, uint32, base=10
    parm4, uint32, base=10
    parm5, uint32, base=10
End

Begin Message, CP Trace CP_PDS_PRIVACY_MODE_TRACE_ID Rsp
    printformat , 1, 1, CP_PDS_Privacy_Mode, N=%d, <systime>  CP - PDS PrivacyMode: Operation:%d, CurrentMode:%d, NewMode:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Operation, uint32, base=enum:PDS PrivacyMode Operation enum
    CurrentMode, uint32, base=enum:CP_LR_0/CP_LR_1
    NewMode, uint32, base=enum:CP_LR_0/CP_LR_1
End

Begin Message, CP Trace CP CAS CDRR MODE TRACE Rsp
    printformat ,      1,1,CP CAS Mode TRACE, N=%d, <systime>  NewMode= %s,CurMode= %s,SlaveState= %s, MasterState= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NewMode, uint32, base=enum:CDRR Mode
    CurMode, uint32, base=enum:CDRR Mode
    SlaveState, uint32, base=enum:CDRR SlaveMode State
    MasterState, uint32, base=enum:CDRR MasterMode State
End

Begin Message, CP Trace CP CAS MESSAGE TRACE Rsp
    printformat ,      1,1,CP CAS Mode TRACE, N=%d, <systime>  MsgId=%s,size=%d, CDRRMode=%s,MasterState=%s,SlaveState=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32, base=enum:CAS Message Name
    MsgSize, uint32
    CDRRMode, uint32, base=enum:CDRR Mode
    MasterState, uint32, base=enum:CDRR MasterMode State
    SlaveState, uint32, base=enum:CDRR SlaveMode State
End

Begin Message, CP Trace CP CAS CDRR SLAVE STATE TRACE Rsp
    printformat ,      1,1,CP CAS SlaveState TRACE, N=%d, <systime>  NewState= %s,CurState= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NewState, uint32, base=enum:CDRR SlaveMode State
    CurState, uint32, base=enum:CDRR SlaveMode State
End

Begin Message, CP Trace CP CAS CDRR MASTER STATE TRACE Rsp
    printformat ,      1,1,CP CAS MasterState TRACE, N=%d, <systime>  NewState= %s,CurState= %s, PendedMPSS=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NewState, uint32, base=enum:CDRR MasterMode State
    CurState, uint32, base=enum:CDRR MasterMode State
    PendedMPSS, uint32
End

Begin Message, CP Trace CP CAS CDRR MESSAGE TRACE Rsp
    printformat ,      1,1,CP CAS CDRR Message Received, N=%d, <systime>  MsgId=%s, Mode= %s,SlaveState= %s, MasterState= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32, base=enum:CAS Message Name
    Mode, uint32, base=enum:CDRR Mode
    SlaveState, uint32, base=enum:CDRR SlaveMode State
    MasterState, uint32, base=enum:CDRR MasterMode State
End

Begin Message, CP Trace CP CAS CDRR TIMER STATUS TRACE Rsp
    printformat ,      1,1,CP CAS CDRR Timer Status, N=%d, <systime> TimerId=%s, Status= %s,Duration= %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TmId, uint32, base=enum:CDRR Timer Name
    Status, uint32, base=enum:CDRR Timer Status
    Duration, uint32, base = 10
End

Begin Message, CP Trace CP CAS EGW MESSAGE TRACE Rsp
    printformat ,      1,1,CP CAS EGW Message Received, N=%d, <systime>  MsgId=%s, Parm1= %d,Parm2= %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32, base=enum:CAS Message Name
    Parm1, uint32
    Parm2, uint32
End

Begin Message, CP Trace CP CAS MLC EVENT TRACE Rsp
    printformat ,      1,1,CP CAS MLC Event, N=%d, <systime> MLC State= %s, Event=%s, Size=%d,CDMA=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:CDRR MLC State
    Event, uint32, base=enum:CDRR MLC Event
    Length, uint32, base=16
    CdmaTchState, uint32, base = enum:Connected/NotConnected
End

Begin Message, CP Trace CP CAS MLC STATE CHANGE Rsp
    printformat ,      1,1,CP CAS MLC State, N=%d, <systime> MLC State= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint32, base=enum:CDRR MLC State
End

Begin Message, CP Trace CP CAS MLC FSM TRACE Rsp
    printformat ,      1,1,CP CAS MLC FSM, N=%d, <systime> Function = %d, CurEvent=%s, CurState= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Function, uint32
    Event, uint32, base=enum:CDRR MLC Event
    State, uint32, base=enum:CDRR MLC State
End

Begin Message, CP Trace CP CAS MLC LTE NEIGHBOR INFO TRACE Rsp
    printformat ,      1,1,CP CAS MLC LTE INFO, N=%d, <systime> Available=%d, ServPrioity=%d, ServThresh=%d,FreqNum=%d,Earfcn1=%d,Earfcn2=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Avaible, uint32
    ServingPriority, uint32
    ThreshServing, uint32
    ListNum, uint32
    Earfcn0, uint32, base=16
    Earfcn1, uint32, base=16
End

Begin Message, CP Trace CP CAS MLC SEND MEAS CMD TRACE Rsp
    printformat ,      1,1,CP CAS MLC MEAS CMD, N=%d, <systime> FreqNum=%d, Freq0=%d,Freq1=%d,Freq2=%d,Freq3=%d,Freq4=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FreqNum, uint32
    Freq0, uint32, base=16
    Freq1, uint32, base=16
    Freq2, uint32, base=16
    Freq3, uint32, base=16
    Freq4, uint32, base=16
End

Begin Message, CP Trace CP CAS MLC PS REG REQ TRACE Rsp
    printformat ,      1,1,CP CAS MLC RESEL CMD, N=%d, <systime> Type=%s, CellNum=%d,Freq=%d,CellId=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Type, uint32, base=enum:IratMobilityType
    CellNum, uint32
    Freq, uint32, base=16
    CellId, uint32, base=16
End

Begin Message, CP Trace CP CAS MLC PS REG CNF TRACE Rsp
    printformat ,      1,1,CP CAS MLC RESEL CNF, N=%d, <systime> Resulte=%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Result, uint32, base=enum:Fail/Sucess
End

Begin Message, CP Trace CP CAS MLC MEAS RESULT TRACE Rsp
    printformat ,      1,1,CP CAS MLC MEAS RESULT, N=%d, <systime> Index=%d, Freq=%d,,CellIndex=%d, Qmeas=%d, PeMax=%d,Srxlev=%d,ReselIdx=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Index, uint32
    Earfcn, uint32
    CellIndex, uint32
    Qmeas, uint32, base=10
    PeMax, uint32, base=10
    Srxlev, uint32, base=16
    ReselIdx, uint32, base=10
End

Begin Message, CP Trace CP CAS MLC RESEL REJ TRACE Rsp
    printformat ,      1,1,CP CAS MLC RESEL REJECT, N=%d, <systime> CellNum=%d, Index=%d, Cause=%s, Freq=%d,CellId=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CellNum, uint32
    Index, uint32
    Cause, uint32, base=enum:RejectCause
    Freq, uint32, base=16
    CellId, uint32, base=16
End

Begin Message, CP Trace CP CAS MLC BARRED INFO TRACE Rsp
    printformat ,      1,1,CP CAS MLC BARRED INFO, N=%d, <systime> CellNum=%d, Freq0=%d,CellId0=%d,Freq1=%d,CellId1=%d,Freq2=%d,CellId2=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    BarredNum, uint32
    Freq0, uint32, base=16
    CellId0, uint32, base=16
    Freq1, uint32, base=16
    CellId1, uint32, base=16
    Freq2, uint32, base=16
    CellId2, uint32, base=16
End

Begin Message, CP Trace CP IRATRFC MESSAGE TRACE Rsp
    printformat ,      1,1,CP IRATRFC TRACE, N=%d, <systime>  MsgId= %s,size=%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint32, base=enum:IRATRFC Message Name
    MsgSize, uint32
End

Begin Message, CP Trace CP IRATRFC SERVICE REQ TRACE Rsp
    printformat ,      1,1,CP IRATRFC Service Request TRACE, N=%d, <systime>  RatId= %s,Cause= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RatId, uint32, base=enum:IRATRFC Rat Type
    Cause, uint32, base=enum:IRATRFC ArbCause
End

Begin Message, CP Trace CP IRATRFC SERVICE REL IND TRACE Rsp
    printformat ,      1,1,CP IRATRFC Service Release TRACE, N=%d, <systime>  RatId= %s,Cause= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RatId, uint32, base=enum:IRATRFC Rat Type
    Cause, uint32, base=enum:IRATRFC ArbCause
End

Begin Message, CP Trace CP IRATRFC BAND CONFLICT INFO IND TRACE Rsp
    printformat ,      1,1,CP IRATRFC Band Conflict TRACE, N=%d, <systime>  RatId= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RatId, uint32, base=enum:IRATRFC Rat Type
End

Begin Message, CP Trace CP IRATRFC ACT STATUS IND TRACE Rsp
    printformat ,      1,1,CP IRATRFC Act Status TRACE, N=%d, <systime>  RatId= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RatId, uint32, base=enum:IRATRFC Rat Type
End

Begin Message, CP Trace CP IRATRFC SUSPEND CNF TRACE Rsp
    printformat ,      1,1,CP IRATRFC Suspend Cnf TRACE, N=%d, <systime>  RatId= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RatId, uint32, base=enum:IRATRFC Rat Type
End

Begin Message, CP Trace CP IRATRFC SERVICE CNF TRACE Rsp
    printformat ,      1,1,CP IRATRFC Service Cnf TRACE, N=%d, <systime>  RatId= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RatId, uint32, base=enum:IRATRFC Rat Type
End

Begin Message, CP Trace CP IRATRFC SERVICE REJ TRACE Rsp
    printformat ,      1,1,CP IRATRFC Service Rej TRACE, N=%d, <systime>  RatId= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RatId, uint32, base=enum:IRATRFC Rat Type
End

Begin Message, CP Trace CP IRATRFC SUSPEND REQ TRACE Rsp
    printformat ,      1,1,CP IRATRFC Suspend Req TRACE, N=%d, <systime>  RatId= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RatId, uint32, base=enum:IRATRFC Rat Type
End

Begin Message, CP Trace CP IRATRFC RESUME IND TRACE Rsp
    printformat ,      1,1,CP IRATRFC Resume Ind TRACE, N=%d, <systime>  RatId= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RatId, uint32, base=enum:IRATRFC Rat Type
End

Begin Message, CP Trace CP IRATRFC BAND CONFLICT IND TRACE Rsp
    printformat ,      1,1,CP IRATRFC Band Conflict Ind TRACE, N=%d, <systime>  RatId= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RatId, uint32, base=enum:IRATRFC Rat Type
End

Begin Message, CP Trace CP IRATRFC BAND SRCH ALLOWED IND TRACE Rsp
    printformat ,      1,1,CP IRATRFC Band Srch Allowed TRACE, N=%d, <systime>  RatId= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RatId, uint32, base=enum:IRATRFC Rat Type
End

Begin Message, CP Trace CP IRATRFC DBG TRACE Rsp
    printformat ,      1,1,CP IRATRFC Debug TRACE, N=%d, <systime>  RatId= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RatId, uint32, base=enum:IRATRFC Rat Type
End

Begin Message, CP Trace CP IRATRFC INFO TRACE Rsp
    printformat ,      1,1,CP IRATRFC Info TRACE, N=%d, <systime>  RatId= %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RatId, uint32, base=enum:IRATRFC Rat Type
End

Begin Message, CP Spy All Off Rsp
End

Begin Message, CP Spy CP Tx DSPM Mbox Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Length, uint16
    Num Msgs, uint16
    Data, record, type=DSP HW Tx Mailbox, maxsize=10, size=Num Msgs
End

Begin Record, DSP HW Tx Mailbox
    Msg Id, uint16, base=enum:DSP HW Tx Mailbox Ids
    Length, uint16
    Data, array,  type=uint16, maxsize=326, size=Length
End

Begin Message, CP Spy CP Tx DSPV Mbox Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Length, uint16
    Num Msgs, uint16
    Data, record, type=DSP HW Tx Mailbox, maxsize=20, size=Num Msgs
End

Begin Message, CP Spy CP Rx DSPM Mbox Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Length, uint16
    Num Msgs, uint16
    Data, record, type=DSP HW Rx Mailbox, maxsize=10, size=Num Msgs
End

Begin Record, DSP HW Rx Mailbox
    Msg Id, uint16, base=enum:DSP HW Rx Mailbox Ids
    Length, uint16
    Data, array,  type=uint16, maxsize=326, size=Length
End

Begin Message, CP Spy CP Rx DSPV Mbox Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Length, uint16
    Num Msgs, uint16
    Data, record, type=DSP HW Rx Mailbox, maxsize=20, size=Num Msgs
End

Begin Message, CP Spy CP Msg Mbox Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, record, type=Msg Mbox Stats, maxsize=sizeofenum:CP Thread Ids, size=end
End

Begin Record, Msg Mbox Stats
    Task Id, uint8, base=enum:CP Thread Ids
    Num Msgs, uint8, base=10
End

Begin Message, CP Spy CP Action Time Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Num Action Times In Use, uint16, base=10
    Max Num Action Times Used, uint16, base=10
End

Begin Message, CP Spy CP Timestamp Header Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Index, uint8
    Overflow, uint8
End

Begin Message, CP Spy CP Timestamp Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Segment, uint8
    Profile, record, type=MON Profile Data, maxsize=32, size=end
End

Begin Record, MON Profile Data
    Id, uint8
    Time, uint32
End

Begin Message, CP Spy CP Tx DSPM Code Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Length, uint16
    Num Msgs, uint16
    Data, record, type=DSP HW Tx Mailbox, maxsize=10, size=Num Msgs
End

Begin Message, CP Spy CP Tx DSPV Code Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Length, uint16
    Num Msgs, uint16
    Data, record, type=DSP HW Tx Mailbox, maxsize=10, size=Num Msgs
End

Begin Message, CP Spy CP Timer HISR Consume Time Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, record, type=Timer HISR Data, maxsize=12, size=end
End

Begin Record, Timer HISR Data
    HISR Callback Addr, uint32, base=16
    Consume 32k Time, uint32, base=10
End

Begin Message, Cp Spy CP System Time Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Interface, uint8, base=enum:1xRTT/EVDO, indent=1
    BctTime, uint64, base=16
    VtCdmaFrame, uint64, base=16
    VtTimeTc8, uint16, base=16
    CdmaFrame, uint64, base=16
    Tc8HWReadback, uint16, base=16
    BctAfcOffset, int32, base=10
    BctDll, int32, base=10
End

Begin Message, Cp Spy CP DSPM Debug Info Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint16, maxsize=52, size=52
End

Begin Message, CP Spy CP ISR Time Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    TotalTime (ms), uint32, base=10, indent=1
    ContextSave, record, type=IsrTimeAvgT, maxsize=1
    HisrAvg, record, type=IsrTimeAvgT, maxsize=1
    IrqAvg, record, type=IsrTimeAvgT, maxsize=1
    FiqAvg, record, type=IsrTimeAvgT, maxsize=1
    HisrMax, record, type=IsrTimeMaxT, maxsize=8
    IrqMax, record, type=IsrTimeMaxT, maxsize=8
    FiqMax, record, type=IsrTimeMaxT, maxsize=8
End

Begin Record, IsrTimeAvgT
    TimeAvg (us), uint32, scale=Q5, format=%.2f, indent=1
    Count, uint16, base=10
    CountPerSec, uint16, base=10
End

Begin Record, IsrTimeMaxT
    TimeMax (us), uint32, base=10, indent=1
    ThreadId, uint16, base=enum:CP Thread Ids
End

Begin Message, CP Spy CP RF Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Interface, uint8, base=enum:1xRTT/EVDO, indent=1
    CdmaBand, uint8, base=enum:Cdma Band, indent=1
    Channel, uint16, base=10
    RfUsed, uint8, base=enum:Full Path Bits
    Main Rx Pwr, int16, scale=Q6, format=%2.3f, indent=1
    Main Rx GainState, uint8, base=10
    Div Rx Pwr, int16, scale=Q6, format=%2.3f
    Div Rx GainState, uint8, base=10
    Tx Pwr, int16, scale=Q6, format=%2.3f, indent=1
    Tx Max Pwr, int16, scale=Q6, format=%2.3f
    Afc State, uint8, base=enum:AFC States, indent=1
    Afc Error  [Hz], int32, scale=Q2, format=%10.2f
    Afc Offset [Hz], int32, scale=Q2, format=%10.2f
    Afc Offset [Ppbi], int32, scale=Q2, format=%10.2f
    Afc Offset [Ppm], int32, scale=Q17, format=%10.8f
    RAC Afc Offset, int32, scale=Q2, format=%10.2f
    Spy State, uint8, base=enum:RF SPY States, indent=1
    Temperature [C], int16, base=10
    LtlFoffs [Ppbi], int32, scale=Q2, format=%10.2f
    LtlAbsFoffs [Ppbi], int32, scale=Q2, format=%10.2f
    LtlAfcDeltaFoffs [Ppbi], int32, scale=Q2, format=%10.2f
    Rx FIFO Cnt, uint8, base=10
    ADJCNT, int16, base=10
    AdvRet, uint8, base=enum:ADV/RET, indent=1
    FIFO IntStat, uint16, base=16
    Tx FIFO Cnt, uint8, base=10
    AccumDLL Adjust Tc8, int32, base=10, indent=1
    CurrentPort, uint8, base=10
End

Begin Message, CP Spy CP SYS Single Register Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SlotNum, uint16, base=16
    SymbNumInFrm, uint16, base=16
    AllocSlot, uint16, base=16
    Count, array, type=uint16, size=end, maxsize=60
End

Begin Message, CP Spy CP SYS Periodic Register Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SlotNum, uint16, base=16
    SymbNumInFrm, uint16, base=16
    AllocSlot, uint16, base=16
    Count, array, type=uint16, size=end, maxsize=60
End

Begin Message, CP Spy CP SYS CPINT Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, size=end, maxsize=100
End

Begin Message, CP Spy CP SYS ST DO Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SysFrame1X, record, type=SysFrameRecT, maxsize=1
    SysFrameDO, record, type=SysFrameRecT, maxsize=1
    SysMisc, record, type=SysTimeMiscT, maxsize=1
    Transition, record, type=SysTransitionT, maxsize=1
    Sys9MHzCnt, record, type=Sys9MHzCntT, maxsize=1
End

Begin Record, SysFrameRecT
    Lower32, uint32, base=16
    Upper6, uint8,  base=16
    FineCnt, uint16, base=16
    PrevCnt, uint16, base=16
    FrameSize, uint16, base=16
    Offset, uint16, base=16
End

Begin Record, SysTimeMiscT
    Valid1X, uint8,  base=enum:SysTimeStatusT
    ValidDO, uint8,  base=enum:SysTimeStatusT
    AirInterface, uint8,  base=enum:SysModeT
    SingleSystemTime, uint32, base=16
    DualUpdate, uint8,  base=enum:FALSE/TRUE
End

Begin Record, SysTransitionT
    Lower32, uint32, base=16
    Upper6, uint8,  base=16
    ST_Resync, uint32, base=16
End

Begin Record, Sys9MHzCntT
    Cnt1X, uint32, base=16
    CntDO, uint32, base=16
End

Begin Message, CP Spy CP Fast MBox Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FIQCount, uint8,  base=10
    FastMBoxData, record, type=DspmFastMBoxDataT, size=FIQCount, maxsize=96
End

Begin Record, DspmFastMBoxDataT
    idx, uint16,     base=enum:DspmFiqCmd, indent=1
    FiqCtrlWord, uint16,     base=16
    FiqCtrlSymbol, uint16,     base=16
    FiqBctCnt, uint32,     base=16
End

Begin Message, CP Spy CP Ipc Fwd Direct Buffer Header Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ChnlRdy, uint16
    ChnlDataQlty, uint16
    FundRate, uint16
    ChnlType, uint16
    ChnlSize0, uint16
    ChnlSize1, uint16
    ChnlSize2, uint16
    ChnlSize3, uint16
End

Begin Message, CP Spy CP Ipc Fwd Direct Buffer DB0 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=47, size=end, columns=60
End

Begin Message, CP Spy CP Ipc Fwd Direct Buffer DB1 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=47, size=end, columns=60
End

Begin Message, CP Spy CP Ipc Fwd Direct Buffer DB2 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=47, size=end, columns=60
End

Begin Message, CP Spy CP IPC Shared Mem Rx Header Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    AppServiceId, uint16
    TotalNumBytes, uint16
    NumAppMsgs, uint16
    AppChanData, record, type=IPC AppChanData Rec, maxsize=16, size=NumAppMsgs
End

Begin Record, IPC AppChanData Rec
    MsgId, uint16
    AppId, uint16
    NumWords, uint16
    CmdArgs, array, type=uint16, maxsize=6
End

Begin Message, CP Spy CP IPC Shared Mem Tx Header Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    AppServiceId, uint16
    TotalNumBytes, uint16
    NumAppMsgs, uint16
    AppChanData, record, type=IPC AppChanData Rec, maxsize=16, size=NumAppMsgs
End

Begin Message, CP Spy CP IPC SBC Encode Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SbcEncData, array, type=uint16, maxsize=96, size=end
End

Begin Message, Cp Spy CP Fpc Traf Chan Start Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ForRc, uint8
    FpcMode, uint8
    FpcPriChan, uint8, base=enum:FpcPriChans
    ChInd, uint8, base=enum:ChIndT
    FchCurrSetPt, uint8
    FchFer, uint8
    FchMinSetPt, uint8
    FchMaxSetPt, uint8
    DcchCurrSetPt, uint8
    DcchFer, uint8
    DcchMinSetPt, uint8
    DcchMaxSetPt, uint8
    FpcSubChanGain, uint8
End

Begin Message, Cp Spy CP Fpc Service Config Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Immediate, uint8, base=bool
    Time, uint32
    FchCcIncl, uint8, base=bool
    ForFchRc, uint8
    RevFchRc, uint8
    DcchCcIncl, uint8, base=bool
    ForDcchRc, uint8
    RevDcchRc, uint8
End

Begin Message, Cp Spy CP Fpc Config NN Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Immediate, uint8, base=bool
    Time, uint32
    FpcIncl, uint8, base=bool
    FpcPriChan, uint8, base=enum:FpcPriChans
    FpcMode, uint8
    OlpcFchIncl, uint8, base=bool
    FchFer, uint8
    FchMinSetPt, uint8
    FchMaxSetPt, uint8
    OlpcDcchIncl, uint8, base=bool
    DcchFer, uint8
    DcchMinSetPt, uint8
    DcchMaxSetPt, uint8
End

Begin Message, Cp Spy CP Fpc Power Control Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Immediate, uint8, base=bool
    Time, uint32
    FpcIncl, uint8, base=bool
    FpcPriChan, uint8, base=enum:FpcPriChans
    FpcMode, uint8
    FpcSchMode, uint8
    OlpcFchIncl, uint8, base=bool
    FchFer, uint8
    FchMinSetPt, uint8
    FchMaxSetPt, uint8
    OlpcDcchIncl, uint8, base=bool
    DcchFer, uint8
    DcchMinSetPt, uint8
    DcchMaxSetPt, uint8
    FpcSecChan, uint8, base=bool
    FpcThreshIncl, uint8, base=bool
    FpcSetPtThresh, uint8
    FpcThreshSchIncl, uint8, base=bool
    FpcSetPtThreshSch, uint8
    NumSup, uint8
    SchId, uint8
    SchFer, uint8
    SchMinSetPt, uint8
    SchMaxSetPt, uint8
End

Begin Message, Cp Spy CP Fpc Dspm Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RC, uint16
    ChIncl, uint16, base=enum:FpcChannels
    ChChanged, uint16, base=enum:FpcChannels
    PriChan, uint16, base=enum:FpcPriChans
    FpcMode, uint16
    SchRate, uint16
    FchChnlNum, uint16
    FchInitSetPt, int16
    FchFer, uint16
    FchMinSetPt, int16
    FchMaxSetPt, int16
    DcchChnlNum, uint16
    DcchInitSetPt, int16
    DcchFer, uint16
    DcchMinSetPt, int16
    DcchMaxSetPt, int16
    SchChnlNum, uint16
    SchInitSetPt, int16
    SchFer, uint16
    SchMinSetPt, int16
    SchMaxSetPt, int16
    SetPtThres, uint16
    SetPtThresSch, uint16
    FpcSubChanGain, uint16
End

Begin Message, Cp Spy CP Fpc Report Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FchIncl, uint8, base=bool
    FchCurrSetPt, uint8
    DcchIncl, uint8, base=bool
    DcchCurrSetPt, uint8
    NumSup, uint8
    SchId, uint8
    SchCurrSetPt, uint8
End

Begin Message, Cp Spy CP Fpc Sch Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FpcPriChansIncl, uint8, base=bool
    FpcPriChan, uint8, base=enum:FpcPriChans
    PilotGatingUseRate, uint8
    ForSchFerRep, uint8, base=bool
    FpcIncl, uint8, base=bool
    FpcModeSch, uint8
    FpcSecChan, uint8
    FpcSchInitSetptOp, uint8
    FpcThreshSchIncl, uint8, base=bool
    FpcSetptThreshSch, uint8
    NumSup, uint8
    FpcSchInitSetptIncl, uint8, base=bool
    FpcSchInitSetpt, array, type=int16, maxsize=2, indent=1
    Sch, record, type=L1dFpcOlPcSCHParamsT, maxsize=2, indent=1
End

Begin Record, L1dFpcOlPcSCHParamsT
    SchId, uint8
    Fer, uint8
    MinSetpt, uint8
    MaxSetpt, uint8
End

Begin Message, CP Spy CP Search Results Active Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Num Act, uint8
    Num Cand, uint8
    Num Nghbr, uint8
    Active Data, record, type=Search Result Active, maxsize=6, indent=1
    Cand Data, record, type=Search Result Cand, maxsize=10, indent=1
    Neighbor Data, record, type=Search Result Nghbr, maxsize=40, indent=1
    System, uint32,  base=enum:1xRTT/EVDO
    Antenna, uint32,  base=enum:Main/Div
End

Begin Record, Search Result Active
    Stale, uint8,  base=10
    Pilot PN, uint16, base=10
    Phase, uint16, base=10
    Strength, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
End

Begin Record, Search Result Cand
    Stale, uint8,  base=10
    Pilot PN, uint16, base=10
    Phase, uint16, base=10
    Strength, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
End

Begin Record, Search Result Nghbr
    Stale, uint8,  base=10
    Pilot PN, uint16, base=10
    Phase, uint16, base=10
    Strength, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
End

Begin Message, CP Spy CP Fwd Channel Config Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Disable, uint16
    Dest, uint16
    ChannelNum, uint16, base=enum:FwdChnlNum
    Change, uint16
    RC, uint16, base=enum:RadioConfig
    FrameOffset, uint16, base=10
    LcMask0[0], uint16
    LcMask0[1], uint16
    LcMask0[2], uint16
    LcMask1[0], uint16
    LcMask1[1], uint16
    LcMask1[2], uint16
    ChannelType, uint16, base=enum:FwdChnlType
    NumBits[0], uint16, base=10
    NumBits[1], uint16, base=10
    NumBits[2], uint16, base=10
    NumBits[3], uint16, base=10
    FrameDuration, uint16, base=enum:FrameDuration
    CrcIdx, uint16
    Rate, uint16
    FrepM, uint16
    PuncIdx, uint16
    IntrlvMJ, uint16
    RxaSum, uint16, base=10
    LcMaskIdx, uint16, base=10
    SymbolLength, uint16, base=10
    ViterbiScale, uint16, base=enum:VitScale
    MrcScale, int16
    RdaDecAllRates, uint16
    FourChnlConfig, uint16
    TurboMode, uint16, base=enum:Viterbi/Turbo
    SlotDuration, uint16, base=enum:SlotDuration
    DtxEnabled, uint16
    FrameIndex, uint16
    FfchAckMask, uint16
    EarlyTerminationTest, uint16
    FwdBlankingDutyCycles, uint16
End

Begin Message, CP Spy CP Rev Channel Config Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Disable, uint16
    ChannelNum, uint16, base=enum:RevChnlNum
    Change, uint16
    RC, uint16, base=enum:RadioConfig
    LcMask[0], uint16
    LcMask[1], uint16
    LcMask[2], uint16
    PilotInfo, uint16
    OpenLoopPwrCorr, uint16,
    ChannelType, uint16, base=enum:RevChnlType
    NumBits[0], uint16, base=10
    NumBits[1], uint16, base=10
    NumBits[2], uint16, base=10
    NumBits[3], uint16, base=10
    FrameDuration, uint16, base=enum:FrameDuration
    CrcIdx, uint16
    Rate, uint16
    Rep1, uint16
    PuncIdx, uint16
    IntrlvMJ, uint16
    ChipOffset, uint16, base=10
    ChannelWalsh, uint16
    ChTxPwrToPilot[0], uint16
    ChTxPwrToPilot[1], uint16
    ChTxPwrToPilot[2], uint16
    ChTxPwrToPilot[3], uint16
    RevFchGatPwrCntlStep, uint16
    FfchAckMask, uint16
    RfchAckMask, uint16
    AckScale[0], uint16
    AckScale[1], uint16
    RevBlankingDutyCycles, uint16
    Rc8RpcMode, uint16
End

Begin Message, CP Spy CP Rx L1D Mdm Mbox Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, record, type=L1D Mdm Rx Mailbox, maxsize=1
End

Begin Record, L1D Mdm Rx Mailbox
    Msg Id, uint8, base=enum:L1dMsgId
    Length, uint8, base=10
    Data, array, type=uint8, maxsize=365, size=Length
End

Begin Message, CP Spy CP Active PN and Walsh Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PN 1, uint16, base=10
    For Walsh 1, uint16, base=10
    PN 2, uint16, base=10
    For Walsh 2, uint16, base=10
    PN 3, uint16, base=10
    For Walsh 3, uint16, base=10
    PN 4, uint16, base=10
    For Walsh 4, uint16, base=10
    PN 5, uint16, base=10
    For Walsh 5, uint16, base=10
    PN 6, uint16, base=10
    For Walsh 6, uint16, base=10
End

Begin Message, CP Spy CP L1D RX PDCH Params Part1 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Immediate, uint8, base=bool
    ActTime, uint32
    HandoffType, uint8
    AckDelay, uint8
    NumArqChan, uint8, base=10
    PilotGatingUseRate, uint8, base=bool
    PilotGatingRate, uint8
    ChInd, uint8, base=enum:ChIndT
    ForPdchRc, uint8, base=10
    FullCIFeedbackInd, uint8, base=bool
    RevCqichFrameOffset, uint8
    RevCqichReps, uint8
    RevAckchReps, uint8
    PdchGroupIndIncl, uint8, base=bool
    CpcchInfoIncl, uint8, base=bool
    NumSoftSwitchingFrames, uint8, base=10
    NumSofterSwitchingFrames, uint8, base=10
    NumSoftSwitchingFramesChm, uint8, base=10
    NumSofterSwitchingFramesChm, uint8, base=10
    NumSoftSwitchingSlots, uint8, base=10
    NumSofterSwitchingSlots, uint8, base=10
    NumSoftSwitchingSlotsChm, uint8, base=10
    NumSofterSwitchingSlotsChm, uint8, base=10
    PdchSoftSwitchingDelay, uint8, base=10
    PdchSofterSwitchingDelay, uint8, base=10
End

Begin Message, CP Spy CP L1D RX PDCH Params Part2 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    NumPdchSet, uint8, base=10
    PdchSet, record, type=L1dPdchSetT, maxsize=8, indent=1
End

Begin Record, L1dPdchSetT
    PilotPn, uint16
    WalshTableId, uint8, base=10
    NumPdcch, uint8, base=10
    ForPdcchWalsh, array, type=uint8, maxsize=8, indent=1
    MacId, uint8
    RevCqichCover, uint8
    ForCpcchWalsh, uint8
    ForCpcsch, uint8
    PdchGroupInd, uint8, base=bool
    PwrCombInd, uint8, base=bool
End

Begin Message, CP Spy CP L1D RX Traf Chan Start Part1 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FreqIncl, uint8, base=bool, indent=1
    CdmaBand, uint32, base=enum:SysCdmaBandT, indent=1
    CdmaFreq, uint16
    LcMask[0], uint16, indent=1
    LcMask[1], uint16
    LcMask[2], uint16
    FrameOffset, uint8, indent=1
    ForRc, uint8, base=10
    RevRc, uint8, base=10
    PwrCntlStep, uint8, indent=1
    Fch5MsFrames, uint8, base=bool
    Dcch5MsFrames, uint8, base=bool
End

Begin Message, CP Spy CP L1D RX Traf Chan Start Part2 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    NumActSets, uint8, base=10
    ActSetList, record, type=L1dTcActiveSetT, maxsize=6
End

Begin Record, L1dTcActiveSetT
    PilotPn, uint16, indent=1
    AddPilotRecIncl, uint8, base=bool
    PilotRecType, uint8
    PilotRec, record, type=L1dPilotRecT, maxsize=1, indent=2
    PowerCombInd, uint8, base=bool, indent=1
    CodeChanFch, uint16
    QofMaskIdFch, uint8
    CodeChanDcch, uint16, indent=1
    QofMaskIdDcch, uint8
    SrchOffset, uint8
End

Begin Record, L1dPilotRecT
    Parm1, uint8
    Parm2, uint8
    AuxWalsh, array, type=uint8, maxsize=1, indent=2
    Parm3, uint8, indent=2
    Parm4, uint8
End

Begin Message, CP Spy CP L1D RX Traf Chan Start Part3 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ChInd, uint8, base=enum:ChIndT, indent=1
    FpcMode, uint8
    FpcModeNoSch, uint8
    FpcModeSch, uint8, indent=1
    FpcPriChan, uint8
    FpcSubChanGain, uint8
    FpcFch, record, type=L1dFpcParamsT, maxsize=1, indent=1
    FpcDcch, record, type=L1dFpcParamsT, maxsize=1, indent=1
    RevFchGatingMode, uint8, base=bool, indent=1
    RevPwrCntlDelay, uint8
    PilotGatingUseRate, uint8
    PilotGatingRate, uint8
    EarlyTerminationTest, uint8
End

Begin Record, L1dFpcParamsT
    CurrSetPt, uint8
    Fer, uint8
    MinSetPt, uint8
    MaxSetPt, uint8
End

Begin Message, CP Spy CP L1D RX Reverse Power Set Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ActionTime, uint32, indent=1
    PwrCntlStep, uint8
    rpcIncl, uint8, base=bool
    ChPowerLevel, uint8, indent=1
    RPiCHPwr, uint16
    FchPwr20Ms, array, type=uint8, maxsize=4, indent=1
    DcchPwr, uint8, indent=1
    PilotRefLevel20Ms, array, type=uint8, maxsize=4, indent=1
    RAckchCqichInfoIncl, uint8, base=bool, indent=1
    RAckchPwr, uint8, indent=2
    RAckchPilotRefLevel, uint8
    RCqichHighPwr, uint8, indent=2
    RCqichHighPilotRefLevel, uint8
    RCqichLowPwr, uint8, indent=2
    RCqichLowPilotRefLevel, uint8
End

Begin Message, CP Spy CP L1D RX Service Config NN Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FpcIncl, uint8, base=bool, indent=1
    FpcPriChan, uint8
    FpcMode, uint8
    FpcOlpcFchIncl, uint8, base=bool, indent=1
    FpcFchFer, uint8
    FpcFchMinSetPt, uint8
    FpcFchMaxSetPt, uint8
    FpcOlpcDcchIncl, uint8, base=bool, indent=1
    FpcDcchFer, uint8
    FpcDcchMinSetPt, uint8
    FpcDcchMaxSetPt, uint8
    GatingRateIncl, uint8, base=bool, indent=1
    PilotGatingRate, uint8
    SwitchingParamsIncl, uint8, base=bool, indent=1
    NumSoftSwitchingFramesChm, uint8
    NumSofterSwitchingFramesChm, uint8
    Immediate, uint8, base=bool, indent=1
    ActTime, uint32
End

Begin Message, CP Spy CP L1D RX Service Config Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FchCcIncl, uint8, base=bool, indent=1
    FchFrameSize, uint32, base=enum:SysFchFrameSizeT, indent=2
    ForFchRc, uint8, base=10
    RevFchRc, uint8, base=10
    DcchCcIncl, uint8, base=bool, indent=1
    DcchFrameSize, uint32, base=enum:SysDcchFrameSizeT, indent=2
    ForDcchRc, uint8, base=10
    RevDcchRc, uint8, base=10
    ForSchCcIncl, uint8, base=bool, indent=1
    NumForSch, uint8, base=10
    ForSchConfig, record, type=L1dSchChanConfigT, maxsize=2
    RevSchCcIncl, uint8, base=bool, indent=1
    NumRevSch, uint8, base=10
    RevSchConfig, record, type=L1dSchChanConfigT, maxsize=2
    ForPdchCcIncl, uint8, base=bool, indent=1
    ForPdchRc, uint8, base=10
    Immediate, uint8, base=bool, indent=1
    ActTime, uint32
End

Begin Record, L1dSchChanConfigT
    SchId, uint8, indent=2
    SchRc, uint8
    Coding, uint8, base=bool
End

Begin Message, CP Spy CP L1D RX Soft Handoff Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Immediate, uint8, base=bool, indent=1
    ActTime, uint32
    ChInd, uint8, base=enum:ChIndT, indent=1
    NumActSets, uint8, base=10
    NumForSup, uint8, base=10
    ActSetList, record, type=L1dTcActiveSetT, maxsize=6
    SrchWinIncl, uint8, base=bool, indent=1
    SrchWinA, uint8
    SrchWinN, uint8
    SrchWinR, uint8
    FpcSubChanGainIncl, uint8, base=bool, indent=1
    FpcSubChanGain, uint8
    UsePcTime, uint8, base=bool, indent=1
    Immediate 1, uint8, base=bool, indent=1
    ActTime 1, uint32
    RevFchGatingMode, uint8, base=bool, indent=1
    RevPwrCntlDelay, uint8
End

Begin Message, CP Spy CP L1D RX Hard Handoff Part1 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Immediate, uint8, base=bool
    ActTime, uint32
    FreqIncl, uint8, base=bool, indent=1
    CdmaBand, uint32, base=enum:SysCdmaBandT, indent=1
    CdmaFreq, uint16
    LcMaskIncl, uint8, base=bool, indent=1
    LcMask[0], uint16
    LcMask[1], uint16
    LcMask[2], uint16
    FrameOffsetIncl, uint8, base=bool, indent=1
    FrameOffset, uint8
    PwrCntlStepIncl, uint8, base=bool, indent=1
    PwrCntlStep, uint8
End

Begin Message, CP Spy CP L1D RX Hard Handoff Part2 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    NumActSets, uint8, base=10
    ActSetList, record, type=L1dTcActiveSetT, maxsize=6, indent=1
End

Begin Message, CP Spy CP L1D RX Hard Handoff Part3 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    NumPreambleFrames, uint8
    SrchWinIncl, uint8, base=bool, indent=1
    SrchWinA, uint8
    SrchWinN, uint8
    SrchWinR, uint8
    ChInd, uint8, base=enum:ChIndT, indent=1
    FpcSubChanGain, uint8
    UsePcTime, uint8, base=bool, indent=1
    PCTimeImmediate, uint8, base=bool
    PCTime, uint32
    RevFchGatingMode, uint8, base=bool, indent=1
    RevPwrCntlDelay, uint8
    ScrIncluded, uint8, base=bool
End

Begin Message, CP Spy CP L1D RX Resource Allocate Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Immediate, uint8, base=bool
    ActTime, uint32
    Channels, uint16, indent=1
    FpcPriChan, uint8
End

Begin Message, CP Spy CP L1D RX Resource Dealloc Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Immediate, uint8, base=bool
    ActTime, uint32
    Channels, uint16, indent=1
    Pilot_Type, uint8
    PilotGatingRate, uint8
    SwitchingParamsIncl, uint8, base=bool, indent=1
    NumSoftSwitchingFramesChm, uint8
    NumSofterSwitchingFramesChm, uint8
End

Begin Message, CP Spy CP L1D RX ACKCQICH Rate Change Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Immediate, uint8, base=bool
    ActTime, uint32
    RCqichRateChangeIncl, uint8, base=bool, indent=1
    FullCIFeedbackInd, uint8, base=bool
    RevCqichReps, uint8
    SwitchingParamsIncl, uint8, base=bool, indent=1
    NumSoftSwitchingFrames, uint8, indent=2
    NumSofterSwitchingFrames, uint8
    NumSoftSwitchingFramesChm, uint8, indent=2
    NumSofterSwitchingFramesChm, uint8
    RCqichPwrIncl, uint8, base=bool
    RCqichHighPwr, uint8, indent=2
    RCqichHighPilotRefLevel, uint8
    RCqichLowPwr, uint8, indent=2
    RCqichLowPilotRefLevel, uint8
    RAckchRateChangeIncl, uint8, base=bool, indent=1
    RevAckchReps, uint8
End

Begin Message, CP Spy CP L1D RX Bcch Start Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CdmaBand, uint32, base=enum:SysCdmaBandT, indent=1
    FreqChan, uint16, indent=1
    PilotPn, uint16
    WalshCode, uint8
    BRate, uint32, base=enum:L1dBcchDataRateT, indent=1
    TdSupported, uint8,  base=bool, indent=1
    TdMode, uint8
    TdPwrLevel, uint8
    CRate, uint32, base=enum:CodeRateT, indent=1
    LcMask[0], uint16, indent=1
    LcMask[1], uint16
    LcMask[2], uint16
End

Begin Message, CP Spy CP L1D RX Fccch Start Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PilotPn, uint16
    WalshCode, uint8
    CRate, uint32, base=enum:CodeRateT, indent=1
    DRate, uint32, base=enum:L1dFccchDataRateT
    LcMask[0], uint16, indent=1
    LcMask[1], uint16
    LcMask[2], uint16
End

Begin Message, CP Spy CP L1D RX Each Sig Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PcgDelay, uint16, indent=1
    EachSlot, uint8
    SysTimeOffset, uint8
    LcMask[0], uint16, indent=1
    LcMask[1], uint16
    LcMask[2], uint16
    PreambleEnabled, uint8, base=bool, indent=1
    RPichPwrPreamble, uint16
    RPichPwr, uint16
    UseCurrMip, uint8, base=bool
    PreambleNumFrac, uint8, indent=1
    PreambleFracDuration, uint8
    PreambleOffDuration, uint8, indent=1
    PreambleAddDuration, uint8
    EachPwr, uint16, indent=1
    FrameDuration, uint32, base=enum:L1dFrameDurationT
    FrameNumBits, uint16, base=10
End

Begin Message, CP Spy CP L1D RX Radio Config Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Immediate, uint8, base=bool
    ActTime, uint32
    FfchAckMaskRlBlankingInc, uint8
    FfchAckMaskRlBlanking, uint16
    FfchAckMaskNoRlBlankingInc, uint8
    FfchAckMaskNoRlBlanking, uint16
    RfchAckMaskInc, uint8
    RfchAckMask, uint16
    FpcMode, uint8
    Rc8RpcMode, uint8
    PwrCntlStep, uint8
    FwdBlankingDutyCycles, uint8
    RevBlankingDutyCycles, uint8
    Rc8AckChPwr, int16
End

Begin Message, CP Spy CP L1D TX FPDCHS Param Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SysTime, uint16, indent=1
    AckDelayAndNumArqChan, uint16
    PilotGatingInfo, uint16
    ForPdchRcAndFullCI, uint16, indent=1
    RevCqichFrameOffset, uint16
    RevCqichAckReps, uint16
    NumSwitchingFrames, uint16, indent=1
    NumSwitchingFramesChm, uint16
    NumSwitchingSlot, uint16, indent=1
    NumSwitchingSlotChm, uint16
    PdchSwitchingDelay, uint16
    NumPilots, uint16
    BaseStationCfg, record, type=IpcDsmFPdchsBaseStationCfgT, maxsize=7, size=NumPilots
End

Begin Message, CP Spy CP L1D TX Fwd Rate Pwr Chg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FullCIFeedbackInd, uint16
    RevCqichAckReps, uint16, indent=1
    NumSwitchingFrames, uint16
    NumSwitchingFramesChm, uint16
    RevAckchPwr, uint16, indent=1
    RevCqichHighPwr, uint16
    RevCqichLowPwr, uint16
End

Begin Message, CP Spy CP L1D TX FPDCHS Disable Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Disable, uint16
End

Begin Message, CP Spy CP Rev Signal Buffer Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=5, size=end, columns=60
End

Begin Message, CP Spy CP Rev Fch Frame Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=17, size=end, columns=60
End

Begin Message, CP Spy CP Rev Dcch Frame Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=17, size=end, columns=60
End

Begin Message, CP Spy CP Rev Sch Frame Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=383, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Fch Frame Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=17, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Dcch Frame Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=17, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Sch0 Frame Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=320, size=end, columns=60
End

Begin Message, CP Spy CP Signaling Message Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=32, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Bad Frames Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Bad Frames, record, type=Fwd Frame Count Rec, maxsize=1, size=end
End

Begin Record, Fwd Frame Count Rec
    FSYNC, uint32, base=10
    FPAGE, uint32, base=10
    FBCCH, uint32, base=10
    FQPCH, uint32, base=10
    FCPCCH, uint32, base=10
    FCACH, uint32, base=10
    FCCCH, uint32, base=10
    FDCCH, uint32, base=10
    FFCH, uint32, base=10
    FSCH, uint32, base=10
    F_MON_CHNL, uint32, base=10
End

Begin Message, CP Spy CP Fwd Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Total Frames, record, type=Fwd Frame Count Rec, maxsize=1
    Bad Frames, record, type=Fwd Frame Count Rec, maxsize=1, size=end
End

Begin Message, CP Spy CP Rev Loopback Packet Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=22, size=end, columns=60
End

Begin Message, CP Spy CP Rev Rlp Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint32, maxsize=4, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Fch MuxOpt1 Counter Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint32, maxsize=16, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Dcch MuxOpt1 Counter Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint32, maxsize=16, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Fch MuxOpt2 Counter Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint32, maxsize=28, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Dcch MuxOpt2 Counter Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint32, maxsize=28, size=end, columns=60
End

Begin Message, CP Spy CP Rev Fch MuxOpt1 Counter Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint32, maxsize=16, size=end, columns=60
End

Begin Message, CP Spy CP Rev Dcch MuxOpt1 Counter Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint32, maxsize=16, size=end, columns=60
End

Begin Message, CP Spy CP Rev Fch MuxOpt2 Counter Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint32, maxsize=28, size=end, columns=60
End

Begin Message, CP Spy CP Rev Dcch MuxOpt2 Counter Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint32, maxsize=28, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Voice Packet Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Voice Rate, uint16, base=enum:VoicePacket Rates
    PacketSizeinWord, uint16, base=10
    Data, array, type=uint16, maxsize=17, size=end, columns=60
End

Begin Message, CP Spy CP Rev Voice Packet Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Voice Rate, uint16, base=enum:VoicePacket Rates
    PacketSizeinWord, uint16, base=10
    Data, array, type=uint16, maxsize=17, size=end, columns=60
End

Begin Message, CP Spy CP Fwd MuxPDU Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    MuxPDU Type, bit,    offset=6,  count=2, bytes=2, pos=first, base=enum:TYPE1/TYPE2/TYPE3/TYPE5
    Decoder, bit,    offset=5,  count=1, bytes=2, pos=middle,base=enum:TURBO/VITERBI
    Type 3 Type, bit,    offset=4,  count=1, bytes=2, pos=middle,base=enum:SINGLE/DOUBLE
    Type 3 Rate, bit,    offset=3,  count=1, bytes=2, pos=middle,base=enum:RATE SET 1/RATE SET 2
    Type 3 MPDU, bit,    offset=1,  count=2, bytes=2, pos=middle,base=enum:ONE/TWO/FOUR/EIGHT
    Rlp Size, bit,    offset=0,  count=1, bytes=2, pos=middle,base=enum:ZERO BITS/TWO BITS
    Channel Type, bit,    offset=15, count=1, bytes=2, pos=middle,base=enum:FSCH/FPDCH
    MuxPDU Mode, bit,    offset=13, count=2, bytes=2, pos=middle,base=enum:NORMAL/BYPASS/RESERVED/TEST
    Crc Chk Byp, bit,    offset=12, count=1, bytes=2, pos=last,  base=enum:CHECK/NO CHECK
    Num Frames, uint16, base=10
    Num Good Frames, uint16, base=10
    Num Mux PDU's, uint16, base=10
    Mux PDU Header, uint16, base=16
    Data, array, type=uint16, maxsize=20, size=end, columns=60
End

Begin Message, CP Spy CP Fwd SCH MuxPDU Type 1 Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=80, size=end, columns=60
End

Begin Message, CP Spy CP Fwd SCH MuxPDU Type 3 Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SrId+Ind, uint16
    Pdu Length, uint16,  base=10
    ExtHeader/RLPFrmType, uint16
    Padding, uint16
    PduData, array, type=uint16, maxsize=20, columns=20
End

Begin Message, CP Spy CP Fwd SCH MuxPDU Type 5 Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Mux PDU Sys Time, uint32
    Mux PDU Type 5 Ctrl Reg, uint16, base=16
    Mux PDU Ctrl Reg, uint16, base=16
    Number of Frames, uint16, base=10
    Number of Good Frames, uint16, base=10
    Number of Mux PDUs, uint32, base=10
    Sr ID, uint16, base=10
    Mux PDU Length, uint16, base=10
    Mux PDU Ext Header, uint16, base=16
    Mux PDU Padding, uint16, base=16
    Data, array, type=uint32, maxsize=20, size=end, columns=60
End

Begin Message, CP Spy CP Fwd PDCH MuxPDU Type 5 Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Mux PDU Sys Time, uint32
    Mux PDU Type 5 Ctrl Reg, uint16, base=16
    Mux PDU Ctrl Reg, uint16, base=16
    Number of Frames, uint16, base=10
    Number of Good Frames, uint16, base=10
    Number of Mux PDUs, uint32, base=10
    Sr ID, uint16, base=10
    Mux PDU Length, uint16, base=10
    Mux PDU Ext Header, uint16, base=16
    Mux PDU Padding, uint16, base=16
    Data, array, type=uint32, maxsize=20, size=end, columns=60
End

Begin Message, CP Spy CP Fwd PDCH MuxPDU Debug Input Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Num MuxPDUs, uint8,  base=10
    Pad, uint8,  base=10
    First MuxPDU Size, uint16, base=10
End

Begin Message, CP Spy CP Fwd PDCH MuxPDU Debug Output Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Num Rlp Frames, uint8,  base=10
    Rlp Frame Format, uint8,  base=enum:FORMAT D/FORMAT AB/FORMAT C NEW/FORMAT C REXMIT
    First Rlp Frame Len, uint16, base=10
End

Begin Message, CP Spy CP Fwd MuxPDU Input 1 Debug Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Mux Pdu Ctrl Reg, uint16, base=16
    Mux Pdu Ctrl Type 5 Reg, uint16, base=16
    Num Mux Pdu Frames, uint16, base=10
    Num Mux Pdu Good Frames, uint16, base=10
    Num Mux Pdus, uint16, base=10
    First Sr Id, uint16, base=16
    First Mux Pdu Len, uint16, base=10
    First Mux Pdu Ext Header, uint16, base=16
    Data, array, type=uint32, maxsize=20, size=end, columns=60
End

Begin Message, CP Spy CP Fwd MuxPDU Output 1 Debug Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Num Rlp Frames, uint16, base=10
    Rec, record, type=Mux Pdu Header Rec, size=Num Rlp Frames, maxsize=20
End

Begin Record, Mux Pdu Header Rec
    Sr Id, uint8,  base=16
    Rlp Frame Format, uint32, base=enum:FORMAT D/FORMAT AB/FORMAT C NEW/FORMAT C REXMIT
    Rlp Offset, uint8,  base=10
    Rlp Reserved, uint8,  base=10
    Rlp Frame Len, uint16, base=10
    Data, array, type=uint8, maxsize=4, columns=20
End

Begin Message, CP Spy CP Mux Pdu Fundicated Data Output Debug Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Rec, record, type=Mux Pdu Fundicated Data Rec, size=2, maxsize=2
End

Begin Record, Mux Pdu Fundicated Data Rec
    Sr Id, uint8, base=16
    Rate, uint8, base=enum:FrameRate
    Data, array, type=uint8, maxsize=4, columns=20
End

Begin Message, CP Spy CP Fwd SCH MuxPDU Type 3 Header Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Frame1_Info1, uint32
    Frame1_Info2, uint32
    Frame2_Info1, uint32
    Frame2_Info2, uint32
    Frame1_arrive_Pcg, uint16, base=10
    Frame2_arrive_Pcg, uint16, base=10
    Mux PDU arrive Time, uint32
    Mux PDU Type 5 Ctrl Reg, uint16, base=16
    Mux PDU Ctrl Reg, uint16, base=16
    Number of Frames, uint16, base=10
    Number of Good Frames, uint16, base=10
    Number of Mux PDUs, uint32, base=10
End

Begin Message, CP Spy CP Fwd SCH DTX Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    TotalFrames, uint32, base=10
    GoodCRCs, uint32, base=10
    DtxIndicators, uint32, base=10
    BadFrames, uint32, base=10
    DtxFrames, uint32, base=10
End

Begin Message, CP Spy CP Fwd FER Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FFCH FER(%), uint16, scale=Q8, format=%4.2f
    FSCH FER(%), uint16, scale=Q8, format=%4.2f
End

Begin Message, CP Spy CP Mp Hisr Frame Header Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    F1Info1, uint32, indent=1
    F1Info2, uint32
    F2Info1, uint32
    F2Info2, uint32
    F1Pcg, uint16, indent=1
    F2Pcg, uint16
    TimeStamp, uint32, indent=1
    MpduType5Ctl, uint16
    MpduCtl, uint16
    NumFrames, uint16, base=10, indent=1
    NumGoodFrames, uint16, base=10
    NumMuxPdus, uint32, base=10
End

Begin Message, CP Spy CP Mp Hisr Pdu Header Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PduHeader, record, type=PduHeader Rec, maxsize=8, size=end
End

Begin Record, PduHeader Rec
    sr_id, uint16, indent=1
    Len, uint16, base=10
    ExtHeader, uint16
    Data0, uint8
    Data1, uint8
    Data2, uint8
    Data3, uint8
End

Begin Message, CP Spy CP Mp Hisr Pdu Raw Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    IntTime, uint16, indent=1
    Pcg, uint16
    Info1, uint32, indent=1
    Info2, uint32
    Data, array, type=uint32, maxsize=40, size=end, columns=60, indent=1
End

Begin Message, CP Spy CP Markov Transmit Statistics Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    MSO_E1_T1, uint32, base=10
    MSO_E2_T2, uint32, base=10
    MSO_E4_T4, uint32, base=10
    MSO_E8_T8, uint32, base=10
    MSO_E1_TD, uint32, base=10
    MSO_E2_TD, uint32, base=10
    MSO_E4_TD, uint32, base=10
    MSO_E8_TD, uint32, base=10
    MSO_E1_TB, uint32, base=10
    MSO_E2_TB, uint32, base=10
    MSO_E4_TB, uint32, base=10
    MSO_E8_TB, uint32, base=10
End

Begin Message, CP Spy CP Markov Receive Statistics Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    MSO_E1_R1, uint32, base=10
    MSO_E1_RD, uint32, base=10
    MSO_E1_RB, uint32, base=10
    MSO_E1_R2, uint32, base=10
    MSO_E1_R4, uint32, base=10
    MSO_E1_R8, uint32, base=10
    MSO_E1_RFL, uint32, base=10
    MSO_E1_RE, uint32, base=10
    MSO_E1_RERR, uint32, base=10
    MSO_E2_R2, uint32, base=10
    MSO_E2_RD, uint32, base=10
    MSO_E2_RB, uint32, base=10
    MSO_E2_R1, uint32, base=10
    MSO_E2_R4, uint32, base=10
    MSO_E2_R8, uint32, base=10
    MSO_E2_RFL, uint32, base=10
    MSO_E2_RE, uint32, base=10
    MSO_E2_RERR, uint32, base=10
    MSO_E4_R4, uint32, base=10
    MSO_E4_RD, uint32, base=10
    MSO_E4_RB, uint32, base=10
    MSO_E4_R1, uint32, base=10
    MSO_E4_R2, uint32, base=10
    MSO_E4_R8, uint32, base=10
    MSO_E4_RFL, uint32, base=10
    MSO_E4_RE, uint32, base=10
    MSO_E4_RERR, uint32, base=10
    MSO_E8_R8, uint32, base=10
    MSO_E8_RD, uint32, base=10
    MSO_E8_RB, uint32, base=10
    MSO_E8_R1, uint32, base=10
    MSO_E8_R2, uint32, base=10
    MSO_E8_R4, uint32, base=10
    MSO_E8_RFL, uint32, base=10
    MSO_E8_RE, uint32, base=10
    MSO_E8_RERR, uint32, base=10
End

Begin Message, CP Spy CP Markov Rev Packet Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=16, size=end, columns=60
End

Begin Message, CP Spy CP Markov Receive FER Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Service Option, uint16, base=enum:Service Options
    Processing Rate, uint8,  base=enum:Mso SSO Rates
    FULL Rate Expected, record, type=Markov Rx FER Rec, maxsize=1
    HALF Rate Expected, record, type=Markov Rx FER Rec, maxsize=1
    QUARTER Rate Expected, record, type=Markov Rx FER Rec, maxsize=1
    EIGHTH Rate Expected, record, type=Markov Rx FER Rec, maxsize=1
    OVERALL, record, type=Markov Rx FER Rec, maxsize=1, size=end
End

Begin Record, Markov Rx FER Rec
    Good, uint32, base=10
    Data Err, uint32, base=10
    Rate Err, uint32, base=10
    Erasure+Bit Err, uint32, base=10
    Total Err, uint32, base=10
    Total, uint32, base=10
    FER (percent), uint16, scale=Q6, format=%4.2f
End

Begin Message, CP Spy CP LMD Record Speech Packet Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=162, size=end, columns=60
End

Begin Message, CP Spy CP LMD Playback Speech Packet Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=162, size=end, columns=60
End

Begin Message, CP Spy CP LMD PC Mic Speech Packet Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=162, size=end, columns=60
End

Begin Message, CP Spy CP LMD PC Spkr Speech Packet Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=162, size=end, columns=60
End

Begin Message, CP Spy CP Tdso Fch Transmit Statistics Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Rev Mux Option, uint16, base=16
    TDSO_E1_T1, uint32, base=10
    TDSO_E1_TD, uint32, base=10
    TDSO_E1_TB, uint32, base=10
    TDSO_EB_TB, uint32, base=10
    TDSO_EB_TO, uint32, base=10
End

Begin Message, CP Spy CP Tdso Fch Receive Statistics Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Fwd Mux Option, uint16, base=16
    TDSO_E1_R1, uint32, base=10
    TDSO_E1_RD, uint32, base=10
    TDSO_E1_RO, uint32, base=10
    TDSO_E1_RB, uint32, base=10
    TDSO_E1_RFL, uint32, base=10
    TDSO_E1_RE, uint32, base=10
    TDSO_E1_RERR, uint32, base=10
    TDSO_EN_RN, uint32, base=10
    TDSO_EN_RB, uint32, base=10
    TDSO_EN_RO, uint32, base=10
End

Begin Message, CP Spy CP Tdso Fch Receive FER Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Fwd Mux Option, uint16, base=16
    FULL Rate, record, type=Tdso Rx FER Rec, maxsize=1
End

Begin Record, Tdso Rx FER Rec
    Good, uint32, base=10
    Bad, uint32, base=10
    Total, uint32, base=10
    FER (%), uint16, scale=Q6, format=%4.2f
End

Begin Message, CP Spy CP Tdso Dcch Transmit Statistics Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Rev Mux Option, uint16, base=16
    TDSO_E1_T1, uint32, base=10
    TDSO_E1_TD, uint32, base=10
    TDSO_E1_TB, uint32, base=10
    TDSO_EB_TB, uint32, base=10
    TDSO_EB_TO, uint32, base=10
End

Begin Message, CP Spy CP Tdso Dcch Receive Statistics Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Fwd Mux Option, uint16, base=16
    TDSO_E1_R1, uint32, base=10
    TDSO_E1_RD, uint32, base=10
    TDSO_E1_RO, uint32, base=10
    TDSO_E1_RB, uint32, base=10
    TDSO_E1_RFL, uint32, base=10
    TDSO_E1_RE, uint32, base=10
    TDSO_E1_RERR, uint32, base=10
    TDSO_EN_RN, uint32, base=10
    TDSO_EN_RB, uint32, base=10
    TDSO_EN_RO, uint32, base=10
End

Begin Message, CP Spy CP Tdso Dcch Receive FER Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Fwd Mux Option, uint16, base=16
    FULL Rate, record, type=Tdso Rx FER Rec, maxsize=1
End

Begin Message, CP Spy CP Tdso Supp Transmit Statistics Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Rev Mux Option, uint16, base=16
    Rate, uint16, base=enum:Tdso Rates
    TDSO_ENx_TNx, uint32, base=10
    TDSO_ENx_TB, uint32, base=10
    TDSO_EB_TB, uint32, base=10
    TDSO_EB_TO, uint32, base=10
End

Begin Message, CP Spy CP Tdso Supp Pdu Receive Statistics Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Fwd Mux Option, uint16, base=16
    TDSO_E3_R3, uint32, base=10
    TDSO_E3_RERR, uint32, base=10
    TDSO_E3_RE, uint32, base=10
    TDSO_E2_R2, uint32, base=10
    TDSO_E2_RERR, uint32, base=10
    TDSO_E2_RE, uint32, base=10
    TDSO_E1a_R1a, uint32, base=10
    TDSO_E1a_RERR, uint32, base=10
    TDSO_E1a_RE, uint32, base=10
    TDSO_E1b_R1b, uint32, base=10
    TDSO_E1b_RERR, uint32, base=10
    TDSO_E1b_RE, uint32, base=10
End

Begin Message, CP Spy CP Tdso Supp Receive Statistics Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Fwd Mux Option, uint16, base=16
    Rate, uint16, base=enum:Tdso Rates
    TDSO_ENx_RNx, uint32, base=10
    TDSO_ENx_RERR, uint32, base=10
    TDSO_ENx_RE, uint32, base=10
    TDSO_ENx_RB, uint32, base=10
    TDSO_EB_RB, uint32, base=10
    TDSO_EB_RO, uint32, base=10
End

Begin Message, CP Spy CP Tdso Supp Receive FER Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Fwd Mux Option, uint16, base=16
    FULL Rate, record, type=Tdso Rx FER Rec, maxsize=1
End

Begin Message, CP Spy CP Mux Pdu Rlp Fwd Frame Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Task ID, uint16, base=10
    MailBox ID, uint16, base=10
    Msg ID, uint16, base=10
    MuxPDU Type, uint16, base=16
    SR ID, uint16, base=10
    Page Num, uint16, base=10
    Pdu Frame Type, uint16, base=10
End

Begin Message, CP Spy CP LMD Symbol Error Rate Statistics Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    TotalFramesSER, uint32, base=10
    TotalBadSymbols, uint32, base=10
End

Begin Message, CP Spy IP counters Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    IP Rx Bytes, uint32, base=10, indent=1
    IP Rx packets, uint32, base=10, indent=1
    IP Rx bad packets, uint32, base=10, indent=1
    IP Tx Bytes, uint32, base=10, indent=1
    IP Tx Packets, uint32, base=10, indent=1
    IP Total Rx Bytes, uint64, base=10, indent=1
    IP Total Rx Packets, uint64, base=10, indent=1
    IP Total Rx Bad Pakets, uint64, base=10, indent=1
    IP Total Tx Bytes, uint64, base=10, indent=1
    IP Total Tx Packets, uint64, base=10, indent=1
End

Begin Message, CP Spy CP Val Mpc Start Pos Req Spy Rsp
    Sys Time, uint32
    Capability, uint32
    length, uint16
    AppType, uint32, base=enum:ValMpcAppTypeIndE
    pQos, uint8
    Duration, uint32
    CorrelationId, uint8
    BrewAppId, uint32
    WapAppIdLen, uint16
    WapAppId, array, type=uint8, maxsize=100, size=100, base=16
    Sid, uint16
    Nid, uint16
    baseId, uint16
    baseLat, uint32
    baseLong, uint32
    PilotPn, uint16
    Band, uint8
    CDMA_Freq, uint16
End

Begin Message, CP Spy CP VAL GPS MPC TCP RAW DATA SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Tcp Raw Data, array, type=uint8, maxsize=256, size=end, columns=16
End

Begin Message, CP Spy CP Val Mpc Start Pos Resp Spy Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Length, uint16
    CorrelationId, uint8
    PositioningStatusInd, uint32, base=enum:PositioningStatusIndE
    PdeAddrLen, uint8
    PdeAddrEncoding, uint32
    PdeUrlAddr, array, type=uint8, maxsize=255, size=255, base=16
    PdeIpAddr, array, type=uint8, maxsize=4, size=4
    PdePort, uint16
    PositionInc, uint8
    GpsWeek, uint16
    Sec, uint32
    Lat, uint32
    Long, uint32
    Loc_Uncrtnty_Ang, uint8
    Loc_Uncrtnty_A, uint8
    Loc_Uncrtnty_P, uint8
    Velocity_Inc, uint8
    Velocity_Hor, uint16
    Heading, uint16
    Velocity_Ver, uint8
    HeightInc, uint8
    Height, uint16
    Loc_Uncrtnty_V, uint8
    Reserved, uint8
End

Begin Message, CP Spy CP IRAT Default Bearer APN String Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    APN String, array, type=uint8, maxsize=128, size=end, columns=60
End

Begin Message, CP Spy CP IRAT PDN Address Default Bearer Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PDN IPv6 address, array, type=uint16, maxsize=8, size=8
    PDN IPv4 address, array, type=uint8, maxsize=4, size=4
End

Begin Message, CP Spy CP IRAT Dedicated Bearer APN String Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    APN String, array, type=uint8, maxsize=128, size=end, columns=60
End

Begin Message, CP Spy CP IRAT Dedicated Bearer Profile ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Profile ID 1, uint16
    Profile ID 2, uint16
End

Begin Message, CP Spy CP IRAT Dedicated Bearer TFT Info Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    IPv4, uint8, base=enum:False/True
    PrecedenceIndex, uint8
    Dest Port, uint16
    ProNumOrNHeader, uint8
    SPI, uint32
    Traffic Class, uint8
    Traffic Mask, uint8
    Flow Label, uint32
End

Begin Message, CP Spy CP IRAT Default Bearer Attach Cnf Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PDN id, uint8
    Bearer id, uint8
    Status, uint8, base=enum:Attach Status Type
    Addr Type, uint8, base=enum:IpAddressType
    Local IPv6 Addr, array,	type=uint32, maxsize=4, size=4
    Local IPv4 Addr, uint32
    P-CSCF IPv6 Num, uint8
    Pad1, uint8
    Pad2, uint16
    P-CSCF1 IPv6, array,	type=uint32, maxsize=4, size=4
    P-CSCF2 IPv6, array,	type=uint32, maxsize=4, size=4
    DNS IPv6 Num, uint8
    Pad3, uint8
    Pad4, uint16
    DNS1 IPv6 Addr, array,	type=uint32, maxsize=4, size=4
    DNS2 IPv6 Addr, array,	type=uint32, maxsize=4, size=4
    P-CSCF IPv4 Num, uint8
    Pad5, uint8
    Pad6, uint16
    P-CSCF1 IPv4, uint32
    P-CSCF2 IPv4, uint32
    DNS IPv4 Num, uint8
    Pad7, uint8
    Pad8, uint16
    DNS1 IPv4 Addr, uint32
    DNS2 IPv4 Addr, uint32
    Rout Addr, uint32
    Interface ID, array, type=uint8, maxsize=8, size=8
    Bearer Ctrl Mode, uint8
    Error Code, uint8
End

Begin Message, CP Spy CP IRAT Dedicated Bearer Attach Cnf Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Status, uint8, base=enum:Passed/Failed
    PDN id, uint8
    Bearer id, uint8
    Error Code, uint8
End

Begin Message, CP Spy CP VAL Display Records Spy Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Received Data, array, type=uint8, maxsize=255, size=end, columns=60, format=%c
End

Begin Message, CP Spy CP Fwd Fndl Pri Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Fndl Sec Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Supl0 Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Supl1 Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Supl2 Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Supl3 Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Supl4 Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Supl5 Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Supl6 Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Rev Eng Pri Frame Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Rev Eng Sec Frame Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Rev2 LMD Pri Frame Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Rev2 LMD Sec Frame Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Iop2 Rlp Rev Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Hl2 Rlp Fwd Data Buf Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Data Before Decrypt Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Data After Decrypt Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Data Before Encrypt Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Data After Encrypt Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP Fwd Raw Data Frm Eng Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP RLP Event Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    TimeStamp, int32
    ServiceId, int32
    ResetTime, uint32
    NaksReceived, int32
    ReXmitsNotFound, int32
    LargestContigErasure, int32
    Resets, int32
    Aborts, int32
    LastRtt, int32
    BlobUsed, int32
    RxRexmitFrmCount, int32
    RxIdleFrmCount, int32
    RxFillFrmCount, int32
    RxBlankFrmCount, int32
    RxNullFrmCount, int32
    RxNewFrmCount, int32
    Rx20msFrmCount, int32
    RxTotalBytes, int32
    RxRLPErasures, int32
    RxMuxErasures, int32
    TxRexmitFrmCount, int32
    TxIdleFrmCount, int32
    TxNewDataFrmCount, int32
    Tx20msFrmCount, int32
    TxTotalBytes, int32
    TxNaksCount, int32
    Tx1Nak, int32
    Tx2Naks, int32
    Tx3Naks, int32
    Tx4Naks, int32
    Tx5Naks, int32
    Tx6Naks, int32
    Tx7Naks, int32
End

Begin Message, CP Spy CP Fwd RLP Frame Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    TimeStamp, uint32
    ServiceId, uint32
    FramePhyChan, uint8,base=enum:RlpFramePhyChan
    FrameMuxPdu, uint8, base=enum:RlpFrameMuxPdu
    FramePhyChanRate, uint8, base=enum:RlpFramePhyChanRate
    FrameTimeDelta, uint8
    RlpFrameLen, uint16, base=10
    Data, array, type=uint8, maxsize=300, size=end, columns=60
End

Begin Message, CP Spy CP Rev RLP Frame Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    TimeStamp, uint32
    ServiceId, uint32
    FramePhyChan, uint8,base=enum:RlpFramePhyChan
    FrameMuxPdu, uint8, base=enum:RlpFrameMuxPdu
    FramePhyChanRate, uint8, base=enum:RlpFramePhyChanRate
    FrameTimeDelta, uint8
    RlpFrameLen, uint16, base=10
    Data, array, type=uint8, maxsize=300, size=end, columns=60
End

Begin Message, CP Spy CP RLP Frame Count Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RLP Forward Missing Frame Count, uint32, base=10
    RLP Forward Receiving Frame Count, uint32, base=10
    RLP Reverse Missing Frame Count, uint32, base=10
    RLP Reverse Sent Frame Count, uint32, base=10
    RLP Forward Max. Missing Block Size, uint32, base=10
    RLP Forward 8-PDU type Frame Count, uint32, base=10
    RLP Forward 4-PDU type Frame Count, uint32, base=10
    RLP Forward 2-PDU type Frame Count, uint32, base=10
    RLP Forward 1-PDU type Frame Count, uint32, base=10
    RLP Resets Count, uint32, base=10
End

Begin Message, CP Spy CP EHRPD RCVD VSNCP MSG REC Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PDN ID Valid, uint8, base=enum:False/True
    PDN ID, uint8,
    PDN Type Valid, uint8, base=enum:False/True
    PDN Type, uint8
    PDN Addr Valid, uint8, base=enum:False/True
    IPv4 Address Valid, uint8, base=enum:False/True
    IPv4 Address, array, type=uint8, maxsize=4, size=4
    IPv6 Address Valid, uint8, base=enum:False/True
    IPv6 Address, array, type=uint8, maxsize=8, size=8
    Error Code Valid, uint8, base=enum:False/True
    Error Code, uint8
    Router Address Valid, uint8, base=enum:False/True
    Padding1, uint16
    Router Address, uint32
    PCSCF IPv6 Number, uint8
    PCSCF1 IPv6 Address, array, type=uint8, maxsize=16, size=16, columns=40
    PCSCF2 IPv6 Address, array, type=uint8, maxsize=16, size=16, columns=40
    PCSCF IPv4 Number, uint8
    PCSCF1 IPv4 Address, array, type=uint8, maxsize=4, size=4, columns=40
    PCSCF2 IPv4 Address, array, type=uint8, maxsize=4, size=4, columns=40
    DNS IPv6 Number, uint8
    DNS1 IPv6 Address, array, type=uint8, maxsize=16, size=16, columns=40
    DNS2 IPv6 Address, array, type=uint8, maxsize=16, size=16, columns=40
    DNS IPv4 Number, uint8
    DNS1 IPv4 Address, array, type=uint8, maxsize=4, size=4, columns=40
    DNS2 IPv4 Address, array, type=uint8, maxsize=4, size=4, columns=40
    Sel Bearer Control Mode, uint8
    APN Length, uint8
    APN, array, type=uint8, maxsize=100, size=100, columns=40
End

Begin Message, CP Spy CP EHRPD IP PKT FROM EMPAF Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=436, size=end, columns=64
End

Begin Message, CP Spy CP EHRPD STORED IP4 ADDR TFT MATCH Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=4, size=end, columns=64
End

Begin Message, CP Spy CP EHRPD STORED IP6 ADDR TFT MATCH Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=16, size=end, columns=64
End

Begin Message, CP Spy CP EHRPD INCOMING IP4 ADDR TFT MATCH Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=4, size=end, columns=64
End

Begin Message, CP Spy CP EHRPD INCOMING IP6 ADDR TFT MATCH Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=16, size=end, columns=64
End

Begin Message, CP Spy CP EHRPD FWD VNSP TO IP AT IOP Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP EHRPD FWD SEND PPP TO IOP Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP EHRPD FWD IP FOR INTERNAL USE Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP Fwd data into engine Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP Rev data into RLPW Rsp
End

Begin Message, CP Spy CP UPB User ID string Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=34, size=end, columns=60
End

Begin Message, CP Spy CP UPB Password string Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=34, size=end, columns=60
End

Begin Message, CP Spy CP UPB dialing digits Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=34, size=end, columns=60
End

Begin Message, CP Spy CP UPB send data request Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP UPB received data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP Rev data low HL to RLP Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP Fwd data RLP to low HL Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP Rev data AI to Rm HL Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP Fwd data Rm HL to AI Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP MIP Agent Adv Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Type, uint8,  base=10
    Code, uint8,  base=10
    Checksum, uint16
    Num Addr, uint8,  base=10
    Addr Entry Size, uint8,  base=10
    Lifetime, uint16
    Router Addr, array, type=uint8, base=10, maxsize=4, size=4, columns=15, exist = (Num Addr != 0)
    Router Pref, uint32, exist = (Num Addr != 0)
    Ext Type, uint8,  base=10
    Len, uint8,  base=10
    Seq Num, uint16
    Max Reg Lifetime, uint16
    Bitfield, uint16
    COA, array, type=uint8, base=10, maxsize=4, size=4, columns=15
    Chall Type, uint8,  base=10
    Len1, uint8,  base=10
    Chall Data, array, type=uint8, maxsize=64, size=Len1, columns=40
End

Begin Message, CP Spy CP MIP Agent Sol Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Type, uint8, base=10
    Code, uint8, base=10
    Checksum, uint16
    Reserved, uint32
End

Begin Message, CP Spy CP MIP RRP Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Type, uint8,  base=10
    Code, uint8,  base=10
    Lifetime, uint16
    MN Home IP Addr, array, type=uint8, base=10, maxsize=4, size=4, columns=15
    HA IP Addr, array, type=uint8, base=10, maxsize=4, size=4, columns=15
    Ident1, array, type=uint8, maxsize=8, size=8, columns=40
    NAI Type, uint8,  base=10
    Len1, uint8,  base=10
    NAI Data1, string, size=Len1, columns=32
    Ext Type, uint8,  base=enum:RRP Ext Type
    Len2, uint8,base=10,exist=(Ext Type == 32)
    SPI, array,type=uint8,maxsize=4,size=4,columns=40,exist=(Ext Type == 32)
    Auth Data1, array,type=uint8,maxsize=16,size=16,columns=40,exist=(Ext Type == 32)
    Chall Ext, uint8,base=10,exist=(Ext Type == 32)
    Len3, uint8,  base=10
    Chall Data, array, type=uint8, maxsize=64, size=Len3, columns=40
    Remaining, array, type=uint8, maxsize=64, size=end, columns=40
End

Begin Message, CP Spy CP MIP RRQ Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Type, uint8, base=10
    Bitfield, uint8
    Lifetime, uint16
    MN Home IP Addr, array, type=uint8, base=10, maxsize=4, size=4, columns=15
    HA IP Addr, array, type=uint8, base=10, maxsize=4, size=4, columns=15
    COA, array, type=uint8, base=10, maxsize=4, size=4, columns=15
    Ident, array, type=uint8, maxsize=8, size=8, columns=40
    NAI Type, uint8,  base=10
    Len1, uint8,  base=10
    NAI Data1, string, size=Len1, columns=32
    Ext Type, uint8,  base=enum:RRP Ext Type
    Len2, uint8,base=10,exist=(Ext Type == 32)
    SPI_1, array,type=uint8,maxsize=4,size=4,columns=40,exist=(Ext Type == 32)
    Auth_Data, array,type=uint8,maxsize=16,size=16,columns=40,exist=(Ext Type == 32)
    Chall Type, uint8,base=10,exist=(Ext Type == 32)
    Len3, uint8,  base=10
    Chall Data, array, type=uint8, maxsize=64, size=Len3, columns=40
    AAA Auth Type, uint8,  base=10
    Subtype, uint8,  base=10
    Len4, array, type=uint8, maxsize=2, size=2, columns=40
    SPI_2, array, type=uint8, maxsize=4, size=4, columns=40
    Auth Data, array, type=uint8, maxsize=16, size=16, columns=40
End

Begin Message, CP Spy CP MIP DMU RRP Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Type, uint8,  base=10
    Code, uint8,  base=10
    Lifetime, uint16
    MN Home IP Addr, array, type=uint8, base=10, maxsize=4, size=4, columns=15
    HA IP Addr, array, type=uint8, base=10, maxsize=4, size=4, columns=15
    Ident1, array, type=uint8, maxsize=8, size=8, columns=40
    Extension Data, array, type=uint8, maxsize=256, size=end, columns=40
End

Begin Message, CP Spy CP MIP DMU RRQ Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Type, uint8, base=10
    Bitfield, uint8
    Lifetime, uint16
    MN Home IP Addr, array, type=uint8, base=10, maxsize=4, size=4, columns=15
    HA IP Addr, array, type=uint8, base=10, maxsize=4, size=4, columns=15
    COA, array, type=uint8, base=10, maxsize=4, size=4, columns=15
    Ident, array, type=uint8, maxsize=8, size=8, columns=40
    Extension Data, array, type=uint8, maxsize=256, size=end, columns=40
End

Begin Message, CP Spy CP MIP DMU Key Prev Encrypt Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    MN AAA Password, array, type=uint8, maxsize=16, size=16, columns=40
    MN HA Password, array, type=uint8, maxsize=16, size=16, columns=40
    CHAP Password, array, type=uint8, maxsize=16, size=16, columns=40
    MN Authenticator, array, type=uint8, maxsize=3, size=3, columns=40
    AAA Authenticator, array, type=uint8, maxsize=8, size=8, columns=40
End

Begin Message, CP Spy CP MIP DMU Key Post Encrypt Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=128, size=end, columns=64
End

Begin Message, CP Spy CP MIP DMU RSA Public Key Exp Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=128, size=end, columns=64
End

Begin Message, CP Spy CP MIP DMU RSA Public Key Mod Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=128, size=end, columns=64
End

Begin Message, CP Spy CP Rev HDLC data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP Fwd HDLC data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP RCVD DECODED PPP FRAME Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP TO BE ENCODED PPP FRAME Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP PPP HA LLD0 Data Entry Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP PPP HA LLD1 Data Entry Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP PPP HA ENC0 Output Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP PPP HA ENC1 Output Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP Rev data request Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP Um Fwd PPP Frame Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Seq, uint32
    Data, array,  type=uint8, maxsize=436, size=end, columns=64
End

Begin Message, CP Spy CP Um Rev PPP Frame Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Seq, uint32
    Data, array,  type=uint8, maxsize=436, size=end, columns=64
End

Begin Message, CP Spy CP Rm Fwd PPP Frame Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Seq, uint32
    Data, array,  type=uint8, maxsize=436, size=end, columns=64
End

Begin Message, CP Spy CP Rm Rev PPP Frame Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Seq, uint32
    Data, array,  type=uint8, maxsize=436, size=end, columns=64
End

Begin Message, CP Spy CP Um Fwd Reduced PPP Frame Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Seq, uint32
    Data, array,  type=uint8, maxsize=436, size=end, columns=64
End

Begin Message, CP Spy CP Um Rev Reduced PPP Frame Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Seq, uint32
    Data, array,  type=uint8, maxsize=436, size=end, columns=64
End

Begin Message, CP Spy CP HLP NAI Prev Derived Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=72, size=end, columns=36
End

Begin Message, CP Spy CP HLP NAI Post Derived Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=72, size=end, columns=36
End

Begin Message, CP Spy CP HLP MIP DMU Secrets Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    MN AAA Password, array, type=uint8, maxsize=16, size=16, columns=40
    MN HA Password, array, type=uint8, maxsize=16, size=16, columns=40
    CHAP Password, array, type=uint8, maxsize=16, size=16, columns=40
    MN Authenticator, array, type=uint8, maxsize=3, size=3, columns=40
    AAA Authenticator, array, type=uint8, maxsize=8, size=8, columns=40
End

Begin Message, CP Spy CP A12 Fwd PPP Frame Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Seq, uint32
    Data, array,  type=uint8, maxsize=436, size=end, columns=64
End

Begin Message, CP Spy CP A12 Rev PPP Frame Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Seq, uint32
    Data, array,  type=uint8, maxsize=436, size=end, columns=64
End

Begin Message, CP Spy CP HLP Current Throttling System ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RTT System ID (SID-PID), array, type=uint8, maxsize=4,  size=4, columns=40
    DO System ID (SubnetID), array, type=uint8, maxsize=16, size=16, columns=40
End

Begin Message, CP Spy CP Uim Access Chap Request Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ChapId, uint8, base=16
    ChapLen, uint8
    ChapData, array, type=uint8, base=16, maxsize=16, size=ChapLen, columns=16
End

Begin Message, CP Spy CP Uim Access Chap Response Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    NAI or IMSI, uint8, base=enum:IMSI/NAI
    UserName Length, uint8,
    Username, array, type=uint8, base=16, maxsize=72, size=72, columns=24
    ChapRsp Len, uint8
    Chap Rsp Data, array, type=uint8, base=16, maxsize=16, size=end, columns=16
End

Begin Message, CP Spy CP Uim SIP Chap Request Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ChapId, uint8, base=16
    ChapLen, uint8
    ChapData, array, type=uint8, base=16, maxsize=16, size=ChapLen, columns=16
End

Begin Message, CP Spy CP Uim SIP Chap Response Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Chap Rsp Data, array, type=uint8, base=16, maxsize=16, size=end, columns=16
End

Begin Message, CP Spy CP Uim MIP MNHA Auth Request Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP Uim MIP MNHA Auth Response Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=16, size=end, columns=60
End

Begin Message, CP Spy CP Uim MIP RRQ Hash Request Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP Uim MIP RRQ Hash Response Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=16, size=end, columns=60
End

Begin Message, CP Spy CP Uim MIP MNAAA Auth Request Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP Uim MIP MNAAA Auth Response Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=16, size=end, columns=60
End

Begin Message, CP Spy CP Uim MIP AKA Auth Request Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RANDA, array, type=uint8, base=16, maxsize=16, size=16, columns=16
    AUTN, array, type=uint8, base=16, maxsize=16, size=16, columns=16
End

Begin Message, CP Spy CP Uim MIP AKA Auth Response Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    AKA Result, uint8, base=enum:HLP EAP AKA Result
    IK Data, array, type=uint8, base=16, maxsize=16, size=16, columns=16
    CK Data, array, type=uint8, base=16, maxsize=16, size=16, columns=16
    RES Len, uint8
    RES Data, array, type=uint8, base=16, maxsize=16, size=RES Len, columns=16
    AUTS Data, array, type=uint8, base=16, maxsize=14, size=14, columns=14
End

Begin Message, CP Spy CP HLP EAP REQ Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP HLP EAP RSP Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=164, size=end, columns=60
End

Begin Message, CP Spy CP HLP PPP Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PPPStatus, uint16, base=enum:PPPStatus, default=NET_NONET_STAUS
End

Begin Message, CP Spy CP HLP IMS STATE Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CurrentImsState, uint8, base=enum:IMSState Enum
    bMainPdnConn, uint8
    bSIPRegistered, uint8
    CurrentPdnId, uint8
    CurrentApp, uint8, base=enum:IMSAppType Enum
    SavedImsState, uint8, base=enum:IMSState Enum
    ReleaseType, uint8, base=enum:IMSEvent Enum
    RequestType, uint8, base=enum:IMSEvent Enum
    IP4RemoteAddr, array, type=uint8, base=10, maxsize=4, size=4
    IP4LocalAddr, array, type=uint8, base=10, maxsize=4, size=4
    IP6LocalAddr, array, type=uint16, Byteorder = motorola, base=16, maxsize=8, size=8
End

Begin Message, CP Spy CP HLP SIP MSG Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, string, size=end, rows=20, columns=150
End

Begin Message, CP Spy CP Uim Cmd Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Cmd, array, type=uint8, maxsize=5, size=5
    DataLen, uint8, base=10
    Cmd Data, array, type=uint8, maxsize=256, size=DataLen, columns=60
End

Begin Message, CP Spy CP Uim Rsp Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Rc, uint16
    DataLen, uint16, base=10
    Rsp Data, array, type=uint8, maxsize=256, size=DataLen, columns=60
End

Begin Message, CP Spy CP Uim Read Nam Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    COUNTsp, uint8
    IMSI_M_Valid, uint8
    IMSIM.MCC, uint16
    IMSIM.1112, uint8
    IMSIM.S2, uint16
    IMSIM.S1, uint32
    IMSIM.Cla, uint8
    Imsim.num, uint8
    IMSI_T_Valid, uint8
    IMSIt.MCC, uint16
    IMSIt.1112, uint8
    IMSIt.S2, uint16
    IMSIt.S1, uint32
    IMSIt.Cla, uint8
    Imsit.num, uint8
    Tmsi.zlen, uint8
    Tmsi.zone, array, type=uint8, maxsize=8
    Tmsi.code, uint32
    Tmsi.Time, uint32
    HomeSid, uint16
    Ex, uint8
    Nxtreg, uint32
    Sidsp, uint16
    Locaid, uint16
    Pureg, uint8
    Sidp, uint16
    Nidp, uint16
    ZL.zone, uint16
    ZL.sid, uint16
    ZL.nid, uint16
    ZL.Timer, uint16
    ZL.Ten, uint8
    ZL.block, uint8
    ZL.bandcl, uint8
    SIL.sid, uint16
    SIL.nid, uint16
    SIL.Timer, uint16
    SIL.Ten, uint8
    SIL.block, uint8
    SIL.Bandcl, uint8
    LatReg, int32
    Longeg, int32
    DistReg, uint16
    Accolc, uint8
    TermHome, uint8
    TermSid, uint8
    TermNid, uint8
    SlotIn, uint8
    Firstchp, uint16
    Fcca, uint16
    Fccb, uint16
    AllowO, uint8
    NamLock, uint8
    ServBand, uint8
    Mode, uint8
    MdnNum, uint8
    Mdn, array, type=uint8, maxsize=16
    UimId, uint32
End

Begin Message, CP Spy CP Uim Update Nam Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    COUNTsp, uint8
    IMSI_M_Valid, uint8
    IMSIM.MCC, uint16
    IMSIM.1112, uint8
    IMSIM.S2, uint16
    IMSIM.S1, uint32
    IMSIM.Cla, uint8
    Imsim.num, uint8
    IMSI_T_Valid, uint8
    IMSIt.MCC, uint16
    IMSIt.1112, uint8
    IMSIt.S2, uint16
    IMSIt.S1, uint32
    IMSIt.Cla, uint8
    Imsit.num, uint8
    Tmsi.zlen, uint8
    Tmsi.zone, array, type=uint8, maxsize=8
    Tmsi.code, uint32
    Tmsi.Time, uint32
    HomeSid, uint16
    Ex, uint8
    Nxtreg, uint32
    Sidsp, uint16
    Locaid, uint16
    Pureg, uint8
    Sidp, uint16
    Nidp, uint16
    ZL.zone, uint16
    ZL.sid, uint16
    ZL.nid, uint16
    ZL.Timer, uint16
    ZL.Ten, uint8
    ZL.block, uint8
    ZL.bandcl, uint8
    SIL.sid, uint16
    SIL.nid, uint16
    SIL.Timer, uint16
    SIL.Ten, uint8
    SIL.block, uint8
    SIL.Bandcl, uint8
    LatReg, int32
    Longeg, int32
    DistReg, uint16
    Accolc, uint8
    TermHome, uint8
    TermSid, uint8
    TermNid, uint8
    SlotIn, uint8
    Firstchp, uint16
    Fcca, uint16
    Fccb, uint16
    AllowO, uint8
    NamLock, uint8
    ServBand, uint8
    Mode, uint8
    MdnNum, uint8
    Mdn, array, type=uint8, maxsize=16
    UimId, uint32
End

Begin Message, CP Spy CP PAC_Printf Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, string, size=end, rows=16, columns=40
End

Begin Message, CP Spy CP Deliver Ind Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SeqNum, uint8
    MsgType, uint8
    NumMsgs, uint8
    MsgEncoding, uint8
    NumFields, uint8
    Data, array, type=uint8, maxsize=256, size=end, columns=60
End

Begin Message, CP Spy CP Cause Code Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    MO SeqNum, uint8, base=10
    MO ErrorClass, uint8
    MO CauseCode, uint8
    MT SeqNum, uint8, base=10
    MT ErrorClass, uint8
    MT CauseCode, uint8
    MMI SeqNum, uint8, base=10
    MMI ErrorClass, uint8
    MMI CauseCode, uint8
    Info to MMI, uint8, base=enum:SMS MostRecent
End

Begin Message, CP Spy CP Location Serv Tx Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=256, size=end, columns=60
End

Begin Message, CP Spy CP Location Serv Rx Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=256, size=end, columns=60
End

Begin Message, CP Spy CP Location Event Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Handset Time, uint32
    Latitude, uint32
    Longitude, uint32
    Heading, uint16
    Height, uint16
    CDMA Time Reference, uint16
    Horizontal Velocity, uint16
    Vertical Velocity, uint16
    Fix Type, uint8
    Location Uncertainty Angle, uint8
    Location Uncertainty A, uint8
    Location Uncertainty P, uint8
    Session Id, uint8
    GPS Session Count, uint32, default=0
    Num Of Positions, uint32, default =0
    GPS Week, uint32, default =0
    GPS Time Of Week, uint32, default =0
    Altitude Above Sea Level, uint8, default =0
    Horizontal Velocity Uncetainty, uint8, default =0
    Vertical Velocity Uncetainty, uint8, default =0
    Horizontal Heading Uncetainty, uint8, default =0
    Altitude Uncetainty, uint8, default =0
    Latitude Uncetainty, uint8, default =0
    Longitude Uncetainty, uint8, default =0
    Horizontal Magnetic Heading, uint8, default =0
    Position Dilution of Precision, uint8, default =0
    Horizontal Dilution of Precision, uint8, default =0
    Vertical Dilution of Precision, uint8, default =0
    Number Of Space Vehicles, uint32, default =0
    Total Space Vehicles Detected, uint32, default =0
    Pseudo Random Noise Of Space Vehicle, uint32, default =0
End

Begin Message, CP Spy CP Location Almnanac Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=256, size=end, columns=60
End

Begin Message, CP Spy CP Location Ephemeris Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=256, size=end, columns=60
End

Begin Message, CP Spy CP Location LocResp Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=256, size=end, columns=60
End

Begin Message, CP Spy CP DBM Secure Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=434, size=end, columns=60
End

Begin Message, CP Spy CP Location IS801 MSG Rsp, BitPack, OTTSName=CMsgIS801MSG
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    IS_801_Message, record, type=IS801 Msg Rec, maxsize=1
End

Begin Record, IS801 Msg Rec, BitPack, OTTSName = CMsgIs801
    <<< MessageId, uint8, indent = 1, base=enum:IS801 Msg Enum
    IS_801_msg, union, enum=<<< MessageId
End

Begin Message, IS801 Msg Rec FOR IP packet Rec LS Rsp, BitPack, OTTSName=CMsgFORBurstTypeLS
    SESS_START, bit, count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    SESS_END, bit, count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    SESS_SOURCE, bit, count=1,indent=2,base=enum:BS Init/MS Orig,pos=none
    SESS_TAG, bit, count=5,indent=2,pos=none
    PD_MSG_TYPE, bit, count=8,indent=2,pos=none
    NUM_REQUESTS, bit, count=4,indent=2,pos=none
    NUM_RESPONSES, bit,count=4,indent=2,pos=none
    REQ_Rec, record, type=LS BS Req Rec, maxsize=15, size=NUM_REQUESTS, indent = 2
    RSP_Rec, record, type=LS BS Rsp Rec, maxsize=15, size=NUM_RESPONSES, indent = 2
End

Begin Record, LS BS Req Rec, BitPack, OTTSName=CRecLSBSReq
    RESERVED, bit,count=4,indent=2,pos=none
    REQ_TYPE, bit,count=4,indent=2,base=enum:LS BS Req Type enum,pos=none
    REQ_PAR_LEN, bit,count=8,indent=2,pos=none
    REQ_PAR_RECORD, union, enum=REQ_TYPE, ConsumeBytes=REQ_PAR_LEN
End

Begin Message, LS BS Req Rec RESERVED Rsp, BitPack, OTTSName=CMsgLSBSReqReserved
End

Begin Message, LS BS Req Rec REQ LOCATION RSP Rsp, BitPack, OTTSName=CMsgLSBSReqLocationRsp
    PREF_RESP_QUAL, bit,count=3,indent=2,pos=none
    NUM_FIXES, bit,count=8,indent=2,pos=none
    T_BETW_FIXES, bit,count=8,indent=2,pos=none
    HEIGHT_REQ, bit,count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    CLK_COR_GPS_REQ, bit,count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    VELOCITY_REQ, bit,count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    RESERVED, bit,count=2,indent=2,pos=none
End

Begin Message, LS BS Req Rec REQ MS INFO Rsp, BitPack, OTTSName=CMsgLSBSReqMSInfo
End

Begin Message, LS BS Req Rec REQ AUTO MEAS WEIGHTING FACTORS Rsp, BitPack, OTTSName=CMsgLSBSReqAutoMeasWeighting
End

Begin Message, LS BS Req Rec REQ PSEUDORANGE MEAS Rsp, BitPack, OTTSName=CMsgLSBSReqPseudoRangeMeas
    PREF_RESP_QUAL, bit,count=3,indent=2,pos=none
    NUM_FIXES, bit,count=8,indent=2,pos=none
    T_BETW_FIXES, bit,count=8,indent=2,pos=none
    OFFSET_REQ, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=4,indent=2,pos=none
End

Begin Message, LS BS Req Rec REQ PILOT PHASE MEAS Rsp, BitPack, OTTSName=CMsgLSBSReqPilotPhaseMeas
    PREF_RESP_QUAL, bit,count=3,indent=2,pos=none
    NUM_FIXES, bit,count=8,indent=2,pos=none
    T_BETW_FIXES, bit,count=8,indent=2,pos=none
    OFFSET_REQ, bit,count=1,indent=2,pos=none
    DESI_PIL_PH_RES, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=3,indent=2,pos=none
End

Begin Message, LS BS Req Rec REQ TIME OFFSET MEAS Rsp, BitPack, OTTSName=CMsgLSBSReqTimeOffsetMeas
    USE_TIME, bit,count=1,indent=2,pos=none
    ACTION_TIME, bit,count=6,indent=2,exist=(USE_TIME == 1),pos=none
    RESERVED, bit,count=(USE_TIME == 1) ? 1 : 7,indent=2,pos=none
End

Begin Message, LS BS Req Rec REQ CANCELLATION Rsp, BitPack, OTTSName=CMsgLSBSReqCancel
    CANCEL_TYPE, bit,count=4,indent=2,base=enum:LS BS Req Type enum,pos=none
    RESERVED, bit,count=4,indent=2,pos=none
End

Begin Record, LS BS Rsp Rec, BitPack, OTTSName=CRecLSBSRsp
    RESERVED, bit,count=3,indent=2,pos=none
    UNSOL_RESP, bit,count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    RESP_TYPE, bit,count=4,indent=2,base=enum:LS BS Rsp Type enum,pos=none
    RESP_PAR_LEN, bit,count=8,indent=2,pos=none
    RESP_PAR_RECORD, union, enum=RESP_TYPE, ConsumeBytes=RESP_PAR_LEN
End

Begin Message, LS BS Rsp Rec REJECT Rsp, BitPack, OTTSName=CMsgLSBSRspReject
    REJ_REQ_TYPE, bit,count=4,indent=2,base=enum:LS MS Req Type enum,pos=none
    REJ_REASON, bit,count=3,indent=2,base=enum:Cap Not Supp/Cap Temp Not Supp,pos=none
    RESERVED, bit,count=1,indent=2,pos=none
End

Begin Message, LS BS Rsp Rec PROV LOCATION RSP Rsp, BitPack, OTTSName=CMsgLSBSRspProvLocationRsp
    TIME_REF_CDMA, bit,count=14,indent=2,pos=none
    LAT, bit,count=25,indent=2,pos=none
    LONG, bit,count=26,indent=2,pos=none
    LOC_UNCRTNTY_ANG, bit,count=4,indent=2,pos=none
    LOC_UNCRTNTY_A, bit,count=5,indent=2,pos=none
    LOC_UNCRTNTY_P, bit,count=5,indent=2,pos=none
    FIX_TYPE, bit,count=1,indent=2,pos=none
    VELOCITY_INCL, bit,count=1,indent=2,pos=none
    VELOCITY_HOR, bit,count=9,indent=2,exist=(VELOCITY_INCL == 1),pos=none
    HEADING, bit,count=10,indent=2,exist=(VELOCITY_INCL == 1),pos=none
    VELOCITY_VER, bit,count=8,indent=2,exist=(VELOCITY_INCL == 1 && FIX_TYPE == 1),pos=none
    CLOCK_INCL, bit,count=1,indent=2,pos=none
    CLOCK_BIAS, bit,count=18,indent=2,exist=(CLOCK_INCL == 1),pos=none
    CLOCK_DRIFT, bit,count=16,indent=2,exist=(CLOCK_INCL == 1),pos=none
    HEIGHT_INCL, bit,count=1,indent=2,pos=none
    HEIGHT, bit,count=14,indent=2,exist=(HEIGHT_INCL == 1),pos=none
    LOC_UNCRTNTY_V, bit,count=5,indent=2,exist=(HEIGHT_INCL == 1),pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, LS BS Rsp Rec PROV BS CAPABILITIES Rsp, BitPack, OTTSName=CMsgLSBSRspProvBSCap
    BS_LS_REV, bit,count=6,indent=2,pos=none
    GPSC_ID, bit,count=1,indent=2,base=enum:Not Supp/Supp,pos=none
    AFLTC_ID, bit,count=1,indent=2,base=enum:Not Supp/Supp,pos=none
    APDC_ID, bit,count=8,indent=2,pos=none
End

Begin Message, LS BS Rsp Rec PROV BS ALMANAC Rsp, BitPack, OTTSName=CMsgLSBSRspProvBSAlmanac
    REF_PN, bit,count=9,indent=2,pos=none
    TIME_CRRCTION_REF, bit,count=9,indent=2,pos=none
    LAT_REF, bit,count=23,indent=2,pos=none
    LONG_REF, bit,count=24,indent=2,pos=none
    HEIGHT_REF, bit,count=10,indent=2,pos=none
    PART_NUM, bit,count=3,indent=2,pos=none
    TOTAL_PARTS, bit,count=3,indent=2,pos=none
    NUM_PILOTS_P, bit,count=9,indent=2,pos=none
    PILOT_Rec, record, type=LS BS Almanac Pilot Rec, maxsize=60, size=NUM_PILOTS_P
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, LS BS Almanac Pilot Rec, BitPack, OTTSName=CRecLSBSAlmanacPilot
    PILOT_PN, bit,count=9,indent=2,pos=none
    BASE_ID, bit,count=16,indent=2,pos=none
    TIME_CORRECTION, bit,count=9,indent=2,pos=none
    LOC_SAME_AS_PREV, bit,count=1,indent=2,pos=none
    DELTA_LAT, bit,count=16,indent=2,exist=(LOC_SAME_AS_PREV == 0),pos=none
    DELTA_LONG, bit,count=16,indent=2,exist=(LOC_SAME_AS_PREV == 0),pos=none
    HEIGHT, bit,count=10,indent=2,exist=(LOC_SAME_AS_PREV == 0),pos=none
End

Begin Message, LS BS Rsp Rec PROV GPS ACQUISITION ASSIST Rsp, BitPack, OTTSName=CMsgLSBSRspProvGPSAcqAssist
    NUM_SV, bit,count=4,indent=2,pos=none
    TIME_OF_APP, bit,count=8,indent=2,pos=none
    DOPP_INCL, bit,count=1,indent=2,pos=none
    ADD_DOPP_INCL, bit,count=1,indent=2,exist=(DOPP_INCL == 1),pos=none
    CODE_PH_PAR_INCL, bit,count=1,indent=2,pos=none
    REFERENCE_PN, bit,count=10,indent=2,exist=(CODE_PH_PAR_INCL),pos=none
    AZ_EL_INCL, bit,count=1,indent=2,pos=none
    Rec, record, type = LS PGAA Rec, maxsize = 16, size = NUM_SV+1, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, LS PGAA Rec, BitPack, OTTSName=CRecLSGPAARec
    SV_PRN_NUM, bit,count=6,indent=2,pos=none
    DOPPLER0, bit,count=12,indent=2,exist=(..\DOPP_INCL == 1),pos=none
    DOPPLER1, bit,count=7,indent=2,exist=(..\DOPP_INCL == 1 && ..\ADD_DOPP_INCL == 1),pos=none
    DOPPLER_WIN, bit,count=3,indent=2,exist=(..\DOPP_INCL == 1 && ..\ADD_DOPP_INCL == 1),pos=none
    SV_CODE_PH, bit,count=10,indent=2,exist=(..\CODE_PH_PAR_INCL == 1),pos=none
    SV_CDDE_PH_INT, bit,count=5,indent=2,exist=(..\CODE_PH_PAR_INCL == 1),pos=none
    GPS_BIT_NUM, bit,count=2,indent=2,exist=(..\CODE_PH_PAR_INCL == 1),pos=none
    SV_CODE_PH_WIN, bit,count=5,indent=2,exist=(..\CODE_PH_PAR_INCL == 1),pos=none
    AZIMUTH, bit,count=5,indent=2,exist=(..\AZ_EL_INCL == 1),pos=none
    ELEVATION, bit,count=3,indent=2,exist=(..\AZ_EL_INCL == 1),pos=none
End

Begin Message, LS BS Rsp Rec PROV GPS SENSITIVITY ASSIST Rsp, BitPack, OTTSName=CMsgLSBSRspProvGPSSensAssist
    REF_BIT_NUM, bit,count=11,indent=2,pos=none
    NUM_DR_P, bit,count=4,indent=2,pos=none
    DR_SIZE, bit,count=8,indent=2,pos=none
    PART_NUM, bit,count=3,indent=2,pos=none
    TOTAL_PARTS, bit,count=3,indent=2,pos=none
    NAV_Rec, record, type=LS GPS Sensitivity Asst Nav Rec, size=NUM_DR_P+1, maxsize=16
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, LS GPS Sensitivity Asst Nav Rec, BitPack, OTTSName=CRecLSGPSSensAsstNav
    NAV_MSG_BITS, record, type=LS Sensitivity Asst NavBits Rec, size = 1, maxsize = 1
    NUM_SV_DR, bit,count=4,indent=2,pos=none
    SV_PRN_Rec, record, type=LS Sensitivity Asst SV Rec, size=NUM_SV_DR+1, maxsize=16
End

Begin Record, LS Sensitivity Asst NavBits Rec, BitPack, OTTSName=CRecLSSensAsstNavBits
    NAV_MSG_BITS, array,type=bit,count=1,indent=2,size=2*(..\..\DR_SIZE),maxsize=510,pos=none
End

Begin Record, LS Sensitivity Asst SV Rec, BitPack, OTTSName=CRecLSSensAsstSV
    SV_PRN_NUM, bit,count=6,indent=2,pos=none
End

Begin Message, LS BS Rsp Rec PROV GPS LOC ASSIST - SPHERE COORD Rsp, BitPack, OTTSName=CMsgLSBSRspProvGPSLocAsstSphereCoord
    LAT_REF, bit,count=20,indent=2,pos=none
    LONG_REF, bit,count=20,indent=2,pos=none
    HEIGHT_REF, bit,count=7,indent=2,pos=none
    NUM_DLY, bit,count=3,indent=2,pos=none
    NUM_SV, bit,count=4,indent=2,pos=none
    DLY_Rec, record, type=LS Delay Rec, maxsize=7, size=NUM_DLY, indent = 2
    SV_Rec, record, type=LS Sphere SV Rec, maxsize=16, size=NUM_SV+1, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, LS Delay Rec, BitPack, OTTSName=CRecLSDelay
    PILOT_PN, bit,count=9,indent=2,pos=none
    DLY_ONEWAY, bit,count=11,indent=2,pos=none
End

Begin Record, LS Sphere SV Rec, BitPack, OTTSName=CRecLSSphereSV
    DOPPLER_LSB, bit,count=4,indent=2,pos=none
    SV_CODE_PH_FR, bit,count=10,indent=2,pos=none
    AZIMUTH_LSB, bit,count=11,indent=2,pos=none
    ELEVATION_LSB, bit,count=11,indent=2,pos=none
End

Begin Message, LS BS Rsp Rec PROV GPS LOC ASSIST - CARTES COORD Rsp, BitPack, OTTSName=CMsgLSBSRspProvGPSLocAsstCartesCoord
    NUM_DLY, bit,count=3,indent=2,pos=none
    NUM_SV, bit,count=4,indent=2,pos=none
    DLY_Rec, record, type=LS Delay Rec, maxsize=7, size=NUM_DLY
    SV_Rec, record, type=LS Cartes SV Rec, maxsize=16, size=NUM_SV+1
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, LS Cartes SV Rec, BitPack, OTTSName=CRecLSCartesSV
    DOPPLER_LSB, bit,count=4,indent=2,pos=none
    SV_COORD_X, bit,count=27,indent=2,pos=none
    SV_COORD_Y, bit,count=27,indent=2,pos=none
    SV_COORD_Z, bit,count=27,indent=2,pos=none
End

Begin Message, LS BS Rsp Rec PROV GPS ALMANAC Rsp, BitPack, OTTSName=CMsgLSBSRspProvGPSAlmanac
    NUM_SV_P, bit,count=6,indent=2,pos=none
    WEEK_NUM, bit,count=8,indent=2,pos=none
    TOA, bit,count=8,indent=2,pos=none
    PART_NUM, bit,count=5,indent=2,pos=none
    TOTAL_PARTS, bit,count=5,indent=2,pos=none
    SV_Rec, record, type=LS GPS Almanac SV Rec, maxsize=64, size=NUM_SV_P+1
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, LS GPS Almanac SV Rec, BitPack, OTTSName=CRecLSGPSAlmanacSV
    SV_PRN_NUM, bit,count=5,indent=2,pos=none
    DELTA_INCLINATION, bit,count=16,indent=2,pos=none
    MO, bit,count=24,indent=2,pos=none
    ECCENTRICITY, bit,count=16,indent=2,pos=none
    A_SQRT, bit,count=24,indent=2,pos=none
    OMEGA_0, bit,count=24,indent=2,pos=none
    OMEGA, bit,count=24,indent=2,pos=none
    OMEGADOT, bit,count=16,indent=2,pos=none
    AF1, bit,count=11,indent=2,pos=none
    AF0, bit,count=11,indent=2,pos=none
End

Begin Message, LS BS Rsp Rec PROV GPS EPHEMERIS Rsp, BitPack, OTTSName=CMsgLSBSRspProvGPSEphemeris
    NUM_SV_P, bit,count=4,indent=2,pos=none
    PART_NUM, bit,count=5,indent=2,pos=none
    TOTAL_PARTS, bit,count=5,indent=2,pos=none
    AB_PAR_INCL, bit,count=1,indent=2,pos=none
    ALPHA_0, bit,count=8,indent=2,exist=(AB_PAR_INCL == 1),pos=none
    ALPHA_1, bit,count=8,indent=2,exist=(AB_PAR_INCL == 1),pos=none
    ALPHA_2, bit,count=8,indent=2,exist=(AB_PAR_INCL == 1),pos=none
    ALPHA_3, bit,count=8,indent=2,exist=(AB_PAR_INCL == 1),pos=none
    BETA_0, bit,count=8,indent=2,exist=(AB_PAR_INCL == 1),pos=none
    BETA_1, bit,count=8,indent=2,exist=(AB_PAR_INCL == 1),pos=none
    BETA_2, bit,count=8,indent=2,exist=(AB_PAR_INCL == 1),pos=none
    BETA_3, bit,count=8,indent=2,exist=(AB_PAR_INCL == 1),pos=none
    SV_REC, record, type=LS GPS Ephemeris SV Rec, maxsize=16, size=NUM_SV_P+1
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, LS GPS Ephemeris SV Rec, BitPack, OTTSName=CRecLSGPSEphemerisSV
    SV_PRN_NUM, bit,count=5,indent=2,pos=none
    IODE, bit,count=8,indent=2,pos=none
    C_RS, bit,count=16,indent=2,pos=none
    DELTA_N, bit,count=16,indent=2,pos=none
    M0, bit,count=32,indent=2,pos=none
    C_UC, bit,count=16,indent=2,pos=none
    ECCENTRICITY, bit,count=32,indent=2,pos=none
    C_US, bit,count=16,indent=2,pos=none
    A_SQRT, bit,count=32,indent=2,pos=none
    TOE, bit,count=16,indent=2,pos=none
    C_IC, bit,count=16,indent=2,pos=none
    OMEGA_0, bit,count=32,indent=2,pos=none
    C_IS, bit,count=16,indent=2,pos=none
    ANGLE_INCLINATION, bit,count=32,indent=2,pos=none
    C_RC, bit,count=16,indent=2,pos=none
    OMEGA, bit,count=32,indent=2,pos=none
    OMEAGDOT, bit,count=24,indent=2,pos=none
    IDOT, bit,count=14,indent=2,pos=none
    TOC, bit,count=16,indent=2,pos=none
    AF2, bit,count=8,indent=2,pos=none
    AF1, bit,count=16,indent=2,pos=none
    AF0, bit,count=22,indent=2,pos=none
End

Begin Message, LS BS Rsp Rec PROV GPS NAVIGATION MSG BITS Rsp, BitPack, OTTSName=CMsgLSBSRspProvGPSNavigationMSGBits
    NUM_SV_P, bit,count=6,indent=2,pos=none
    PART_NUM, bit,count=5,indent=2,pos=none
    TOTAL_PARTS, bit,count=5,indent=2,pos=none
    SUBF_4_5_INCL, bit,count=1,indent=2,pos=none
    SUBF_4_5, array, type = uint8, maxsize = 1875, indent = 2, exist = (SUBF_4_5_INCL == 1)
    Rec, record, type = LS PGNM Rec, maxsize = 64, size = NUM_SV_P+1, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, LS PGNM Rec, BitPack, OTTSName=CRecLSPGNM
    SV_PRN_NUM, bit,count=6,indent=2,pos=none
    SUB_1_2_3, array,type=bit,count=1,maxsize=900,indent=2,pos=none
End

Begin Message, LS BS Rsp Rec PROV GPS ALMANAC CORRECTION Rsp, BitPack, OTTSName=CMsgLSBSRspProvGPSAlmanacCorrection
    NUM_SV_P, bit,count=4,indent=2,pos=none
    REF_TIME, bit,count=8,indent=2,pos=none
    TOA, bit,count=8,indent=2,pos=none
    WEEK_NUM, bit,count=8,indent=2,pos=none
    PART_NUM, bit,count=5,indent=2,pos=none
    TOTAL_PARTS, bit,count=5,indent=2,pos=none
    SV_Rec, record, type=LS GPS Almanac Cor SV Rec, maxsize=16, size=NUM_SV_P+1
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, LS GPS Almanac Cor SV Rec, BitPack, OTTSName=CRecLSGPSAlmanacCorSVRec
    SV_PRN_NUM, bit,count=5,indent=2,pos=none
    DELTA_XYZ_INCL, bit,count=1,indent=2,pos=none
    DELTA_X, bit,count=15,indent=2,exist=(DELTA_XYZ_INCL == 1),pos=none
    DELTA_Y, bit,count=15,indent=2,exist=(DELTA_XYZ_INCL == 1),pos=none
    DELTA_Z, bit,count=15,indent=2,exist=(DELTA_XYZ_INCL == 1),pos=none
    DELTA_X_1, bit,count=7,indent=2,exist=(DELTA_XYZ_INCL == 1),pos=none
    DELTA_Y_1, bit,count=7,indent=2,exist=(DELTA_XYZ_INCL == 1),pos=none
    DELTA_Z_1, bit,count=7,indent=2,exist=(DELTA_XYZ_INCL == 1),pos=none
    DELTA_CLOCK_INCL, bit,count=1,indent=2,pos=none
    DELTA_CLOCK, bit,count=17,indent=2,exist=(DELTA_CLOCK_INCL == 1),pos=none
    DELTA_CLOCK_1, bit,count=8,indent=2,exist=(DELTA_CLOCK_INCL == 1),pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, LS BS Rsp Rec PROV GPS SATELLITE HEALTH INFO Rsp, BitPack, OTTSName=CMsgLSBSRspProvGPSSatHealthInfo
    BAD_SV_PRESENT, bit,count=1,indent=2,pos=none
    NUM_BAD_SV, bit,count=4,indent=2,exist=(BAD_SV_PRESENT == 1),pos=none
    BAD_SV_Rec, record, type=LS Bad SV PRN Rec, maxsize=16, size=NUM_BAD_SV+1, exist = (BAD_SV_PRESENT == 1)
End

Begin Record, LS Bad SV PRN Rec, BitPack, OTTSName=CRecLSBadSVPRN
    BAD_SV_PRN_NUM, bit,count=5,indent=2,pos=none
End

Begin Message, IS801 Msg Rec REV IP packet Rec LS Rsp, BitPack, OTTSName=CMsgREVBurstTypeLS
    SESS_START, bit, count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    SESS_END, bit, count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    SESS_SOURCE, bit, count=1,indent=2,base=enum:BS Init/MS Orig,pos=none
    SESS_TAG, bit, count=5,indent=2,pos=none
    PD_MSG_TYPE, bit, count=8,indent=2,pos=none
    NUM_REQUESTS, bit, count=4,indent=2,pos=none
    NUM_RESPONSES, bit,count=4,indent=2,pos=none
    REQ_Rec, record, type=LS MS Req Rec, maxsize=15, size=NUM_REQUESTS, indent = 2
    RSP_Rec, record, type=LS MS Rsp Rec, maxsize=15, size=NUM_RESPONSES, indent = 2
End

Begin Record, LS MS Req Rec, BitPack, OTTSName=CRecLSMSReq
    RESERVED, bit,count=4,indent=2,pos=none
    REQ_TYPE, bit,count=4,indent=2,base=enum:LS MS Req Type enum,pos=none
    REQ_PAR_LEN, bit,count=8,indent=2,pos=none
    REQ_PAR_Rec, union, enum=REQ_TYPE, ConsumeBytes=REQ_PAR_LEN
End

Begin Message, LS MS Req Rec RESERVED Rsp, BitPack, OTTSName=CMsgLSMSReqReserved
End

Begin Message, LS MS Req Rec REQ LOCATION RSP Rsp, BitPack, OTTSName=CMsgLSMSReqLocRsp
    HEIGHT_REQ, bit,count=1,indent=2,pos=none
    CLK COR GPS REQ, bit,count=1,indent=2,pos=none
    VELOCITY_REQ, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=5,indent=2,pos=none
End

Begin Message, LS MS Req Rec REQ BS CAPABILITIES Rsp, BitPack, OTTSName=CMsgLSMSReqBSCap
End

Begin Message, LS MS Req Rec REQ BS ALMANAC Rsp, BitPack, OTTSName=CMsgLSMSReqBSAlmanac
    EXT_BS_ALM, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=7,indent=2,pos=none
End

Begin Message, LS MS Req Rec REQ GPS ACQUISITION ASSIST Rsp, BitPack, OTTSName=CMsgLSMSReqGPSAcqAsst
    DOPP_REQ, bit,count=1,indent=2,pos=none
    ADD_DOPP_REQ, bit,count=1,indent=2,pos=none
    CODE_PH_PAR_REQ, bit,count=1,indent=2,pos=none
    AZ_EL_REQ, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=4,indent=2,pos=none
End

Begin Message, LS MS Req Rec REQ GPS SENSITIVITY ASSIST Rsp, BitPack, OTTSName=CMsgLSMSReqGPSSensAsst
End

Begin Message, LS MS Req Rec REQ GPS LOCATION ASSIST Rsp, BitPack, OTTSName=CMsgLSMSReqGPSLocAsst
    COORD_TYPE, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=7,indent=2,pos=none
End

Begin Message, LS MS Req Rec RESERVED1 Rsp, BitPack, OTTSName=CMsgLSMSReqReserved1
End

Begin Message, LS MS Req Rec REQ GPS ALMANAC Rsp, BitPack, OTTSName=CMsgLSMSReqGPSAlmanac
End

Begin Message, LS MS Req Rec REQ GPS EPHEMERIS Rsp, BitPack, OTTSName=CMsgLSMSReqGPSEphemeris
    AB_PAR_REQ, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=7,indent=2,pos=none
End

Begin Message, LS MS Req Rec REQ GPS NAVIGATION MSG BITS Rsp, BitPack, OTTSName=CMsgLSMSReqGPSNavMsgBits
    SUBF_4 5_REQ, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=7,indent=2,pos=none
End

Begin Message, LS MS Req Rec REQ GPS ALMANAC CORRECTION Rsp, BitPack, OTTSName=CMsgLSMSReqGPSAlmanacCorrection
    TOA, bit,count=8,indent=2,pos=none
    WEEK_NUM, bit,count=8,indent=2,pos=none
End

Begin Message, LS MS Req Rec REQ GPS SATELLITE HEALTH INFO Rsp, BitPack, OTTSName=CMsgLSMSReqGPSSatHealthInfo
End

Begin Record, LS MS Rsp Rec, BitPack, OTTSName=CRecLSMSRsp
    RESERVED, bit,count=3,indent=2,pos=none
    UNSOL_RESP, bit,count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    RESP_TYPE, bit,count=4,indent=2,base=enum:LS MS Rsp Type enum,pos=none
    RESP_PAR_LEN, bit,count=8,indent=2,pos=none
    RESP_PAR_RECORD, union, enum=RESP_TYPE, ConsumeBytes=RESP_PAR_LEN
End

Begin Message, LS MS Rsp Rec REJECT Rsp, BitPack, OTTSName=CMsgLSMSRspReject
    REJ_REQ_TYPE, bit,count=4,indent=2,base=enum:LS BS Req Type enum,pos=none
    REJ_REASON, bit,count=3,indent=2,base=enum:Cap NOT supp/Cap TEMP not supp,pos=none
    RESERVED, bit,count=1,indent=2,pos=none
End

Begin Message, LS MS Rsp Rec PROV LOCATION RSP Rsp, BitPack, OTTSName=CMsgLSMSRspProvLocRsp
    TIME_REF_CDMA, bit,count=14,indent=2,pos=none
    LAT, bit,count=25,indent=2,pos=none
    LONG, bit,count=26,indent=2,pos=none
    LOC_UNCRTNTY_ANG, bit,count=4,indent=2,pos=none
    LOC_UNCRTNTY_A, bit,count=5,indent=2,pos=none
    LOC_UNCRTNTY_P, bit,count=5,indent=2,pos=none
    FIX_TYPE, bit,count=1,indent=2,pos=none
    VELOCITY_INCL, bit,count=1,indent=2,pos=none
    VELOCITY_HOR, bit,count=9,indent=2,exist=(VELOCITY_INCL == 1),pos=none
    HEADING, bit,count=10,indent=2,exist=(VELOCITY_INCL == 1),pos=none
    VELOCITY_VER, bit,count=8,indent=2,exist=(VELOCITY_INCL == 1),pos=none
    CLOCK_INCL, bit,count=1,indent=2,pos=none
    CLOCK_BIAS, bit,count=18,indent=2,exist=(CLOCK_INCL == 1),pos=none
    CLOCK_DRIFT, bit,count=16,indent=2,exist=(CLOCK_INCL == 1),pos=none
    HEIGHT_INCL, bit,count=1,indent=2,pos=none
    HEIGHT, bit,count=14,indent=2,exist=(HEIGHT_INCL == 1),pos=none
    LOC_UNCRTNTY_V, bit,count=5,indent=2,exist=(HEIGHT_INCL == 1),pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, LS MS Rsp Rec PROV MS INFORMATION Rsp, BitPack, OTTSName=CMsgLSMSRspProvMSInfo
    MS_LS_REV, bit,count=6,indent=2,pos=none
    MS_MODE, bit,count=4,indent=2,pos=none
    PILOT_PH_CAP, bit,count=6,indent=2,pos=none
    GPS_ACQ_CAP, bit,count=12,indent=2,pos=none
    LOC_CALC_CAP, bit,count=12,indent=2,pos=none
End

Begin Message, LS MS Rsp Rec PROV AUTO MEAS WEIGHTING FACTORS Rsp, BitPack, OTTSName=CMsgLSMSRspProvAutoMeasWeighting
    TIME_REF_CDMA, bit,count=14,indent=2,pos=none
    DGPS, bit,count=1,indent=2,pos=none
    NUM_SV, bit,count=4,indent=2,pos=none
    GPS_WEIGHT, bit,count=4,indent=2,pos=none
    SV_REC, record, type=LS Auto Meas SV Rec, maxsize=16, size=NUM_SV+1
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, LS Auto Meas SV Rec, BitPack, OTTSName=CRecLSAutoMeasSV
    SV_PRN_NUM, bit,count=6,indent=2,pos=none
    INV_WEIGHT_FA, bit,count=6,indent=2,pos=none
End

Begin Message, LS MS Rsp Rec PROV PSEUDORANGE MEAS Rsp, BitPack, OTTSName=CMsgLSMSRspProvPseudoRangeMeas
    PART_NUM, bit,count=3,indent=2,pos=none
    TOTAL_PARTS, bit,count=3,indent=2,pos=none
    NUM_PS_RANGES_P, bit,count=6,indent=2,pos=none
    TIME_REF, bit,count=24,indent=2,pos=none
    TIME_REF_SRC, bit,count=2,indent=2,pos=none
    OFFSET_INCL, bit,count=1,indent=2,pos=none
    REF_PN, bit,count=9,indent=2,exist=(OFFSET_INCL == 1),pos=none
    MOB_SYS_T_OFFSET, bit,count=14,indent=2,exist=(OFFSET_INCL == 1),pos=none
    PS_Rec, record, type=LS PseudoR PS Rec, size=NUM_PS_RANGES_P+1, maxsize=30
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, LS PseudoR PS Rec, BitPack, OTTSName=CRecLSPseudoRPS
    SV_PRN_NUM, bit,count=6,indent=2,pos=none
    SV_CNO, bit,count=6,indent=2,pos=none
    PS_DOPPLER, bit,count=16,indent=2,pos=none
    SV_CODE_PH_WH, bit,count=10,indent=2,pos=none
    SV_CODE_PH_FR, bit,count=10,indent=2,pos=none
    MUL_PATH_IND, bit,count=3,indent=2,pos=none
    PS_RANGE_RMS_ER, bit,count=6,indent=2,pos=none
End

Begin Message, LS MS Rsp Rec PROV PILOT PHASE MEAS Rsp, BitPack, OTTSName=CMsgLSMSRspProvPilotPhaseMeas
    TIME_REF_MS, bit,count=24,indent=2,pos=none
    OFFSET_INCL, bit,count=1,indent=2,pos=none
    MOB_SYS_T_OFFSET, bit,count=14,indent=2,exist=(OFFSET_INCL == 1),pos=none
    REF_PN, bit,count=9,indent=2,pos=none
    REF_PILOT_STRENGTH, bit,count=6,indent=2,pos=none
    BAND_CLASS, bit,count=5,indent=2,pos=none
    CDMA_FREQ, bit,count=11,indent=2,pos=none
    BASE_ID, bit,count=16,indent=2,pos=none
    SID, bit,count=15,indent=2,pos=none
    NID, bit,count=16,indent=2,pos=none
    TOTAL_RX_PWR, bit,count=5,indent=2,pos=none
    PART_NUM, bit,count=3,indent=2,pos=none
    TOTAL_PARTS, bit,count=3,indent=2,pos=none
    NUM_PILOTS_P, bit,count=6,indent=2,pos=none
    PILOT_Rec, record, type=LS PPM Pilot Rec, maxsize=30, size=NUM_PILOTS_P
    ADD_PILOTS_INCL, bit,count=1,indent=2,pos=none
    ADD_BAND_CLASS, bit,count=5,indent=2,exist=(ADD_PILOTS_INCL == 1),pos=none
    ADD_CDMA_FREQ, bit,count=11,indent=2,exist=(ADD_PILOTS_INCL == 1),pos=none
    ADD_TOTAL_RX_PWR, bit,count=5,indent=2,exist=(ADD_PILOTS_INCL == 1),pos=none
    NUM_ADD_PILOTS_P, bit,count=6,indent=2,exist=(ADD_PILOTS_INCL == 1),pos=none
    ADD_PILOTS_Rec, record, type=LS Add Pilot Rec, maxsize=63, size=NUM_ADD_PILOTS_P, exist = (ADD_PILOTS_INCL == 1)
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, LS PPM Pilot Rec, BitPack, OTTSName=CRecLSPPMPilot
    PILOT_PN_PHASE, bit,count=19,indent=2,pos=none
    PILOT_STRENGTH, bit,count=6,indent=2,pos=none
    RMS_ERR_PHASE, bit,count=6,indent=2,pos=none
End

Begin Record, LS Add Pilot Rec, BitPack, OTTSName=CRecLSAddPilot
    ADD_PILOT_PN_PH, bit,count=19,indent=2,pos=none
    ADD_PILOT_STRENGTH, bit,count=6,indent=2,pos=none
    ADD_RMS_ERR_PH, bit,count=6,indent=2,pos=none
End

Begin Message, LS MS Rsp Rec PROV TIME OFFSET MEAS Rsp, BitPack, OTTSName=CMsgLSMSRspProvTimeOffsetMeas
    TIME_REF_MS, bit,count=24,indent=2,pos=none
    REF_PN, bit,count=9,indent=2,pos=none
    MOB_SYS_T_OFFSET, bit,count=14,indent=2,pos=none
    RESERVED, bit,count=1,indent=2,pos=none
End

Begin Message, LS MS Rsp Rec PROV CANCELLATION ACK Rsp, BitPack, OTTSName=CMsgLSMSRspProvCancelAck
    CANCEL_TYPE_ACK, bit,count=4,indent=2,base=enum:LS BS Req Type enum,pos=none
    NO_OUT_REQ, bit,count=1,indent=2,base=enum:TRUE/FALSE,pos=none
    RESERVED, bit,count=3,indent=2,pos=none
End

Begin Message, CP Spy CP SCC Svc Control Rec Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC DS Alert Disply Info Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC DS Alert Called Party Number Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC DS Alert Calling Party Number Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC DS Alert Connected Number Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC PS Alert Disply Info Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC PS Alert Called Party Number Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC PS Alert Calling Party Number Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC PS Alert Connected Number Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC VS Alert Disply Info Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC VS Alert Called Party Number Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC VS Alert Calling Party Number Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC VS Alert Connected Number Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC SMS Rx Ind Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC SMS Tx Req Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC SMS Tx Req Called ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC OTA Rx Ind Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC OTA Tx Req Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC LS SOC Rec Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP SCC PS Packet Zone List Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PacketZone Len, uint8,  base=10
    PacketZone Num, uint8,  base=10
    PacketZone Records, record, type=PacketZone Rec, maxsize=15,size=end
End

Begin Record, PacketZone Rec
    Id, uint8,  base=10
    New, uint8,  base=enum:False/True
    Time, uint32, base=16
End

Begin Message, CP Spy CP SCC PS Packet HAT HT Timer Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    HAI, uint8, base=10
    HAT, uint8, base=enum:Expired/Started
    HT, uint8, base=enum:Expired/Started
End

Begin Message, CP Spy CP PE ENG_ACCESS_PROC_TR 1 40 Rsp, BitPack, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PREV, uint8, globalvar=GBL_PREV
    EXT_MSG_LENGTH, bit, count=1,exist=PREV >= 7,pos=none
    Length, bit,count=((PREV<7) ? 8 : ((EXT_MSG_LENGTH==0) ? 7 : 15)),pos=none
    Rec, record, type=Access Msg Rec, maxsize=1
End

Begin Record, Access Msg Rec, Bitpack, TruncateBits=30, OTTSName=CMsgAccess
    PD, bit, count=2,exist=(GBL_PREV>5),indent=2,pos=none
    <<< Msg Id, bit, count=(GBL_PREV>5)?6:8,indent=2,base=enum:Access Msg Enum,pos=none
    LAC_LENGTH, bit,count=5,exist=(GBL_PREV == 6),indent=2,pos=none
    ARQ_Rec, record, type = Rcsch Arq Rec, maxsize = 1, indent = 2
    MSID_Rec, record, type = Rcsch Address Rec, maxsize = 1, indent = 2
    AUTH_Rec, record, type = Access Auth Rec, maxsize = 1, indent = 2
    ENC_Rec, record, maxsize = 1, exist = (GBL_PREV>6), type = r-rcsch Encry Rec
    LAC_PADDING, bit,count=-8,exist=(GBL_PREV == 6),indent=2,pos=none
    Radio_Env, record, maxsize=1, exist=(GBL_PREV>5), type=r-csch Radio Environment Record
    Msg, union, enum=<<< Msg Id
    PDU_PADDING, bit, count=-2,indent=2,pos=none
    MACI, bit,count=32,exist=(GBL_PREV>8 && AUTH_Rec\MACI_INCL==1),indent=2,pos=none
End

Begin Record, Rcsch Arq Rec, Bitpack, OTTSName=CMsgRcschArq
    ACK_SEQ, bit, count=3,indent=2,pos=none
    MSG_SEQ, bit, count=3,indent=2,pos=none
    ACK_REQ, bit, count=1,indent=2,pos=none
    VALID_ACK, bit, count=1,indent=2,pos=none
    ACK_TYPE, bit,count=3,indent=2,pos=none
End

Begin Record, Rcsch Address Rec, Bitpack, OTTSName=CMsgRcschAddr
    MSID_TYPE, bit,count=3,base=enum:Rcsch Address Enum,indent=2,pos=none
    MSID_LEN, bit,count=4,exist=(MSID_TYPE!=4 && MSID_TYPE!=5),indent=2,pos=none
    Msid, union, enum = MSID_TYPE, consumeBytes=MSID_LEN, indent = 2,exist = (MSID_TYPE!=4 && MSID_TYPE!=5)
    TMSI_Rec, record, type=Rcsch Address TMSI Rec, maxsize=1, indent=2, exist=(MSID_TYPE==5)
End

Begin Message, Rcsch Address Rec IMSI_S and ESN (Band Class 0 only) Rsp, BitPack, OTTSName=CMsgRcschAddrIMSI_SandESN
    MIN1, bit,count=24,indent=2,pos=none
    MIN2, bit,count=10,indent=2,pos=none
    Esn_Rec, record, type = ESN Rec, maxsize = 1, indent = 2
    RESERVED, bit,count=6,indent=2,pos=none
End

Begin Record, ESN Rec, BitPack, OTTSName=CMsgESNRec
    MFR_CODE, bit,count=8,indent=2,base=16,pos=none
    SERIAL_NUMBER, bit,count=24,indent=2,base=16,pos=none
End

Begin Message, Rcsch Address Rec ESN Rsp, BitPack, OTTSName=CMsgRcschAddrESN
    Esn_Rec, record, type = ESN Rec, maxsize = 1, indent = 2
End

Begin Message, Rcsch Address Rec IMSI Rsp, BitPack, OTTSName=CMsgRcschAddrIMSI
    Imsi_Rec, record, type = Imsi Rec, maxsize = 1, indent = 2
End

Begin Record, IMSI Rec, BitPack, OTTSName=CMsgIMSI
    IMSI_CLASS, bit,count=1,base=enum:IMSI Class Enum,indent=2,pos=none
    IMSI_Class_Rec, union, enum = IMSI_CLASS, indent = 2
End

Begin Message, IMSI Rec CLASS_0 Rsp, BitPack, OTTSName=CMsgIMSIClass0
    IMSI_CLASS_0_TYPE, bit,count=2,base=enum:IMSI Class 0 Type Enum,indent=2,pos=none
    IMSI_Type_Rec, union, enum = IMSI_CLASS_0_TYPE, indent = 2
End

Begin Message, CLASS_0 IMSI_S included Rsp, BitPack, OTTSName=CMsgClass0IMSI_S
    RESERVED, bit,count=3,indent=2,pos=none
    IMSI_S, bit,count=34,indent=2,base=16,pos=none
End

Begin Message, CLASS_0 IMSI_S and IMSI_11_12 included Rsp, BitPack, OTTSName=CMsgClass0IMSI_S_and_IMSI_11_12
    RESERVED, bit,count=4,indent=2,pos=none
    IMSI_11_12, bit,count=7,indent=2,pos=none
    IMSI_S, bit,count=34,indent=2,base=16,pos=none
End

Begin Message, CLASS_0 IMSI_S and MCC included Rsp, BitPack, OTTSName=CMsgClass0IMSI_S_and_MCC
    RESERVED, bit,count=1,indent=2,pos=none
    MCC, bit,count=10,indent=2,pos=none
    IMSI_S, bit,count=34,indent=2,base=16,pos=none
End

Begin Message, CLASS_0 IMSI_S IMSI_11_12 and MCC included Rsp, BitPack, OTTSName=CMsgClass0IMSI_S_IMSI_11_12_and_MCC
    RESERVED, bit,count=2,indent=2,pos=none
    MCC, bit,count=10,indent=2,pos=none
    IMSI_11_12, bit,count=7,indent=2,pos=none
    IMSI_S, bit,count=34,indent=2,base=16,pos=none
End

Begin Message, IMSI Rec CLASS_1 Rsp, BitPack, OTTSName=CMsgIMSIClass1
    IMSI_CLASS_1_TYPE, bit,count=1,base=enum:IMSI Class 1 Type Enum,indent=2,pos=none
    IMSI_Type_Rec, union, enum = IMSI_CLASS_1_TYPE, indent = 2
End

Begin Message, CLASS_1 IMSI_S and IMSI_11_12 included Rsp, BitPack, OTTSName=CMsgClass1IMSI_S_and_IMSI_11_12
    RESERVED, bit,count=2,indent=2,pos=none
    IMSI_ADDR_NUM, bit,count=3,indent=2,pos=none
    IMSI_11_12, bit,count=7,indent=2,pos=none
    IMSI_S, bit,count=34,indent=2,base=16,pos=none
End

Begin Message, CLASS_1 IMSI_S IMSI_11_12 and MCC included Rsp, BitPack, OTTSName=CMsgClass1IMSI_SIMSI_11_12_and_MCC
    IMSI_ADDR_NUM, bit,count=3,indent=2,pos=none
    MCC, bit,count=10,indent=2,pos=none
    IMSI_11_12, bit,count=7,indent=2,pos=none
    IMSI_S, bit,count=34,indent=2,base=16,pos=none
End

Begin Message, Rcsch Address Rec IMSI and ESN Rsp, BitPack, OTTSName=CMsgRcschAddrIMSIandESN
    Esn_Rec, record, type = ESN Rec, maxsize = 1, indent = 2
    Imsi_Rec, record, type = Imsi Rec, maxsize = 1, indent = 2
End

Begin Message, Rcsch Address Rec Reserved Rsp, BitPack, OTTSName=CMsgRcschAddrReserved
End

Begin Message, Rcsch Address Rec TMSI Rsp, BitPack, OTTSName=CMsgRcschAddrTMSI
End

Begin Message, Rcsch Address Rec MC-MAP1 Rsp, BitPack, OTTSName=CMsgRcschAddMCMAP1
    Addr, array, type=uint8, maxsize=12, size=..\MSID_LEN, indent=2
End

Begin Message, Rcsch Address Rec MC-MAP2 Rsp, BitPack, OTTSName=CMsgRcschAddMCMAP2
    Addr, array, type=uint8, maxsize=10, size=..\MSID_LEN, indent=2
End

Begin Record, Rcsch Address TMSI Rec, Bitpack, OTTSName=CMsgRcschAddrTMSIRec
    MSID_LEN, bit,count=4,indent=2,pos=none
    TMSI_ZONE, array, type=uint8, maxsize=8,size=(MSID_LEN - 4), exist = (MSID_LEN > 4), indent = 2
    TMSI_CODE_ADDR32, bit,count=32,exist=(MSID_LEN > 4),indent=2,pos=none
    TMSI_CODE_ADDR, array, type=uint8, maxsize=4, size = MSID_LEN, exist = (MSID_LEN <= 4), indent = 2
End

Begin Record, Access Auth Rec, BitPack, OTTSName=CMsgAccessAuth
    MACI_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 8),pos=none
    AUTH_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 8),pos=none
    AUTHR1, bit,count=18,indent=2,exist=((AUTH_INCL == 1)) && ((GBL_PREV > 8)),pos=none
    RANDC1, bit,count=8,indent=2,exist=((AUTH_INCL == 1 || MACI_INCL == 1)) && ((GBL_PREV > 8)),pos=none
    COUNT1, bit,count=6,indent=2,exist=((AUTH_INCL == 1)) && ((GBL_PREV > 8)),pos=none
    SDU_KEY_ID, bit,count=2,indent=2,exist=((GBL_PREV > 8)) && ((MACI_INCL == 1)),pos=none
    SDU_INTEGRITY_ALGO, bit,count=3,indent=2,exist=((GBL_PREV > 8)) && ((MACI_INCL == 1)),pos=none
    SDU_SSEQ_OR_SSEQH, bit,count=1,indent=2,exist=((GBL_PREV > 8)) && ((MACI_INCL == 1)),pos=none
    SDU_SSEQ, bit,count=8,indent=2,exist=((SDU_SSEQ_OR_SSEQH == 0)) && (((GBL_PREV > 8)) && ((MACI_INCL == 1))),pos=none
    SDU_SSEQ_H, bit,count=24,indent=2,exist=((SDU_SSEQ_OR_SSEQH == 1)) && (((GBL_PREV > 8)) && ((MACI_INCL == 1))),pos=none
    AUTH_MODE, bit,count=2,indent=2,exist=(GBL_PREV <= 8),pos=none
    AUTHR0, bit,count=18,indent=2,exist=((GBL_PREV <= 8)) && ((AUTH_MODE == 1)),pos=none
    RANDC0, bit,count=8,indent=2,exist=((GBL_PREV <= 8)) && ((AUTH_MODE == 1)),pos=none
    COUNT0, bit,count=6,indent=2,exist=((GBL_PREV <= 8)) && ((AUTH_MODE == 1)),pos=none
End

Begin Record, r-rcsch Encry Rec, BitPack, OTTSName=CMsgRcschEncryption
    ENC_FIELDS_INCL, bit, count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    SDU_ENCRYPT_MODE, bit, count=3,indent=2,exist=((GBL_PREV > 6)) && ((ENC_FIELDS_INCL==1)),pos=none
    ENC_SEQ, bit,count=8,indent=2,exist=(((SDU_ENCRYPT_MODE==1||SDU_ENCRYPT_MODE==2)&&((GBL_PREV>8&&..\AUTH_Rec\MACI_INCL==0)||GBL_PREV<9))) && (((GBL_PREV > 6)) && ((ENC_FIELDS_INCL==1))),pos=none
End

Begin Record, r-csch Radio Environment Record, BitPack, OTTSName=CMsgRcschRadioEnvironment
    ACTIVE_PILOT_STRENGTH, bit, count=6,indent=2,exist=GBL_PREV > 5,pos=none
    FIRST_IS_ACTIVE, bit, count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FIRST_IS_PTA, bit, count=1,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_ADD_PILOTS, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    Rec, record,maxsize=5,size=NUM_ADD_PILOTS,type=r-csch Pilot Info Rec,exist=GBL_PREV > 5
    NUM_AUX_PILOTS, bit,count=3,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    AUX_PILOTS_Rec, record,maxsize=5,size=NUM_AUX_PILOTS,type=r-csch AUX Pilot Rec,exist=(GBL_PREV > 5) && (GBL_PREV > 6)
End

Begin Record, r-csch Pilot Info Rec, BitPack, OTTSName=CMsgRcschPilotInfo
    PILOT_PN_PHASE, bit, count=15,indent=2,exist=GBL_PREV > 5,pos=none
    PILOT_STRENGTH, bit, count=6,indent=2,exist=GBL_PREV > 5,pos=none
    ACCESS_HO_EN, bit, count=1,indent=2,exist=GBL_PREV > 5,pos=none
    ACCESS_ATTEMPTED, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, r-csch AUX Pilot Rec, BitPack, OTTSName=CMsgRcschAUXPilot
    PILOT_PN_PHASE, bit, count=15,indent=2,exist=GBL_PREV > 6,pos=none
    PILOT_STRENGTH, bit, count=6,indent=2,exist=GBL_PREV > 6,pos=none
    PILOT_REC_TYPE, bit, count=3,base=enum:Rcsch Pilot Rec Enum,indent=2,exist=GBL_PREV > 6,pos=none
    RECORD_LEN, bit,count=3,indent=2,exist=GBL_PREV > 6,pos=none
    TYPE_FIELDS, union,enum=PILOT_REC_TYPE,consumebytes=RECORD_LEN,indent=2,exist=GBL_PREV > 6
End

Begin Message, r-csch AUX Pilot Rec TYPE0 Rsp, BitPack, OTTSName=CMsgRcschPilotType0
    QOF, bit, count=2,indent=2,exist=GBL_PREV > 6,pos=none
    WALSH_LENGTH, bit, count=3,indent=2,exist=GBL_PREV > 6,pos=none
    PILOT_WALSH, array,type=bit,count=1,maxsize=16,size=(WALSH_LENGTH + 6),indent=2,exist=GBL_PREV > 6,pos=none
    Reserved, bit,count=-8,indent=2,exist=GBL_PREV > 6,pos=none
End

Begin Message, Access Msg Rec AC - Registration Rsp, BitPack, OTTSName=CMsgAccessRegistration
    REG_TYPE, bit, count=4,indent=2,base=enum:Registration Type Enum,pos=none
    SLOT_CYCLE_INDEX, bit, count=3,indent=2,pos=none
    MOB_P_REV, bit, count=8,indent=2,pos=none
    EXT_SCM, bit, count=1,indent=2,exist=GBL_PREV==1,pos=none
    RESERVED1, bit, count=1,indent=2,exist=GBL_PREV==1,pos=none
    SLOTTED_MODE, bit, count=1,indent=2,exist=GBL_PREV==1,pos=none
    RESERVED2, bit, count=5,indent=2,exist=GBL_PREV==1,pos=none
    SCM, bit, count=8,indent=2,exist=!(GBL_PREV==1),pos=none
    MOB_TERM, bit, count=1,indent=2,pos=none
    RETURN_CAUSE, bit, count=4,indent=2,base=enum:RETURN_CAUSE Codes Enum,exist=GBL_PREV>5,pos=none
    QPCH_SUPPORTED, bit, count=1,indent=2,exist=GBL_PREV>5,pos=none
    ENHANCED_RC, bit, count=1,indent=2,exist=GBL_PREV>5,pos=none
    UZID_INCL, bit, count=1,indent=2,exist=GBL_PREV>5,pos=none
    UZID, bit, count=16,indent=2,exist=((UZID_INCL == 1)) && (GBL_PREV>5),pos=none
    RERSERVE, bit, count=6,indent=2,exist=!(GBL_PREV>5),pos=none
    GEO_LOC_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    GEO_LOC_TYPE, bit, count=3,indent=2,exist=((GEO_LOC_INCL == 1)) && (GBL_PREV > 6),pos=none
    OTD_SUPPORTED, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    STS_SUPPORTED, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    3X_CCH_SUPPORTED, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    WLL_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    WLL_DEVICE_TYPE, bit, count=3,indent=2,base=enum:WLL_DEVICE Types Enum,exist=((WLL_INCL == 1)) && (GBL_PREV > 6),pos=none
    HOOK_STATUS, bit, count=4,indent=2,base=enum:HOOK_STATUS Values Enum,exist=((WLL_INCL == 1)) && (GBL_PREV > 6),pos=none
    ENC_INFO_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    SIG_ENCRYPT_SUP, record,type=csch SIG_ENCRYPT_SUP Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6) && ((ENC_INFO_INCL == 1))
    C_SIG_ENCRYPT_REQ, bit, count=1,indent=2,exist=(GBL_PREV > 6) && ((ENC_INFO_INCL == 1)),pos=none
    ENC_SEQ_H, bit, count=24,indent=2,exist=((SIG_ENCRYPT_SUP\ECMEA == 1 || SIG_ENCRYPT_SUP\REA == 1)) && (((GBL_PREV > 6) && ((ENC_INFO_INCL == 1))) && ((GBL_PREV < 9))),pos=none
    ENC_SEQ_H_SIG, bit, count=8,indent=2,exist=((SIG_ENCRYPT_SUP\ECMEA == 1 || SIG_ENCRYPT_SUP\REA == 1)) && (((GBL_PREV > 6) && ((ENC_INFO_INCL == 1))) && ((GBL_PREV < 9))),pos=none
    NEW_SEQ_H, bit, count=24,indent=2,exist=((SIG_ENCRYPT_SUP\ECMEA == 1 || SIG_ENCRYPT_SUP\REA == 1)) && (((GBL_PREV > 6) && ((ENC_INFO_INCL == 1))) && (!(GBL_PREV < 9))),pos=none
    NEW_SEQ_H_SIG, bit, count=8,indent=2,exist=((SIG_ENCRYPT_SUP\ECMEA == 1 || SIG_ENCRYPT_SUP\REA == 1)) && (((GBL_PREV > 6) && ((ENC_INFO_INCL == 1))) && (!(GBL_PREV < 9))),pos=none
    UI_ENCRYPT_SUP, bit, count=8,indent=2,exist=(GBL_PREV > 6) && ((ENC_INFO_INCL == 1)),pos=none
    MSG_INT_INFO_INCL, bit, count=1,indent=2,exist=(GBL_PREV > 6) && (GBL_PREV > 8),pos=none
    SIG_INTEGRITY_SUP_INCL, bit, count=1,indent=2,exist=((GBL_PREV > 6) && (GBL_PREV > 8)) && ((MSG_INT_INFO_INCL==1)),pos=none
    SIG_INTEGRITY_SUP, bit, count=8,indent=2,exist=((SIG_INTEGRITY_SUP_INCL==1)) && (((GBL_PREV > 6) && (GBL_PREV > 8)) && ((MSG_INT_INFO_INCL==1))),pos=none
    SIG_INTEGRITY_REQ, bit, count=3,indent=2,exist=((SIG_INTEGRITY_SUP_INCL==1)) && (((GBL_PREV > 6) && (GBL_PREV > 8)) && ((MSG_INT_INFO_INCL==1))),pos=none
    NEW_KEY_ID, bit, count=2,indent=2,exist=((GBL_PREV > 6) && (GBL_PREV > 8)) && ((MSG_INT_INFO_INCL==1)),pos=none
    NEW_SSEQ_H_INCL, bit, count=1,indent=2,exist=((GBL_PREV > 6) && (GBL_PREV > 8)) && ((MSG_INT_INFO_INCL==1)),pos=none
    NEW_SSEQ_H, bit, count=24,indent=2,exist=((NEW_SSEQ_H_INCL == 1)) && (((GBL_PREV > 6) && (GBL_PREV > 8)) && ((MSG_INT_INFO_INCL==1))),pos=none
    NEW_SSEQ_H_SIG, bit, count=8,indent=1,exist=((NEW_SSEQ_H_INCL == 1)) && (((GBL_PREV > 6) && (GBL_PREV > 8)) && ((MSG_INT_INFO_INCL==1))),pos=none
    FOR_PDCH_SUPPORTED, bit,count=1,indent=1,exist=(GBL_PREV > 6) && (GBL_PREV > 8),pos=none
End

Begin Record, csch SIG_ENCRYPT_SUP Rec, BitPack, OTTSName = CMsgRcschSIG_ENCRYPT_SUP
    CMEA, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    ECMEA, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    REA, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    Reserved, bit,count=5,indent=2,exist=GBL_PREV > 6,pos=none
End

Begin Message, Access Msg Rec AC - Order Rsp, BitPack, OTTSName=CMsgAccessOrder
    ORDER_Rec, record, maxsize=1, type=REV Access Order Rec
End

Begin Record, REV Access Order Rec, Bitpack, OTTSName=CMsgRevAccessOrder
    ORDER, bit, count=6,base=enum:REV Order Code Enum,indent=2,pos=none
    ADD_RECORD_LEN, bit,count=3,indent=2,pos=none
    RecIs95, array,type=uint8,maxsize=7,size=ADD_RECORD_LEN,indent=2,exist=(GBL_PREV >1 && GBL_PREV < 5)
    Rec, union,enum=ORDER,consumebytes=ADD_RECORD_LEN,indent=2,exist=!(GBL_PREV >1 && GBL_PREV < 5)
End

Begin Message, REV Access Order Rec BS Challenge Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderBSChallenge
    ORDQ, bit, count=8,indent=2,pos=none
    RANDBS, bit,count=32,indent=2,pos=none
End

Begin Message, REV Access Order Rec SSD Update Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderSSDUpdate
    ORDQ, bit,count=8,indent=2,noexist=0 [Confirm Order],base=enum:0 [Confirm Order]/1 [Reject Order],pos=none
End

Begin Message, REV Access Order Rec Parameter Update Confirmation Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderParameterUpdateConfirmation
    ORDQ, bit,count=8,indent=2,pos=none
End

Begin Message, REV Access Order Rec Request Analog Servive Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderRequestAnalogServive
    ORDQ, bit,count=8,indent=2,noexist=0 [Wide Analog],base=enum:0 [Wide Analog]/1 [Narrow Analog]/2 [Analog],pos=none
End

Begin Message, REV Access Order Rec MS Ack Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderMSAck
End

Begin Message, REV Access Order Rec Service Option Request Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderServiceOptionRequest
    ORDQ, bit, count=8,indent=2,pos=none
    SERVICE_OPTION, bit,count=16,indent=2,pos=none
End

Begin Message, REV Access Order Rec Service Option Response Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderServiceOptionResponse
    ORDQ, bit, count=8,indent=2,pos=none
    SERVICE_OPTION, bit,count=16,indent=2,pos=none
End

Begin Message, REV Access Order Rec Release Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderRelease
    ORDQ, bit,count=8,indent=2,noexist=0 [Normal],base=enum:0 [Normal]/1 [Power Down]/2 [Service Inactive],pos=none
End

Begin Message, REV Access Order Rec Long Code Transition Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderLongCodeTransitionRequest
    ORDQ, bit,count=8,indent=2,noexist=0 [request public],base=enum:0 [request public]/1 [request private]/2 [response public]/3 [response public],pos=none
End

Begin Message, REV Access Order Rec Connect Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderConnect
End

Begin Message, REV Access Order Rec Continuous DTMF Tone Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderContinuousDTMFTone
    ORDQ, bit,count=8,indent=2,pos=none
End

Begin Message, REV Access Order Rec Service Option Control Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderServiceOptionControl
    ORDQ, bit,count=8,indent=2,pos=none
End

Begin Message, REV Access Order Rec Local Control Response Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderLocalControlResponse
    ORDQ, bit,count=8,indent=2,pos=none
End

Begin Message, REV Access Order Rec MS Reject Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderMSReject
    ORDQ, bit, count=8,base=enum:MS Reject Type Enum,indent=2,pos=none
    REJECTED_TYPE, bit, count=8,base=enum:Paging Msg Enum,indent=2,exist=(ORDQ < 20),pos=none
    RESERVED1, bit, count=2,indent=2,exist=((REJECTED_TYPE==7&&GBL_PREV > 6)) && ((ORDQ < 20)),pos=none
    REJECTED_ORDER, bit, count=(GBL_PREV>6)?6:8,indent=2,exist=((REJECTED_TYPE==7)) && ((ORDQ < 20)),pos=none
    REJECTED_ORDQ, bit, count=8,indent=2,exist=((REJECTED_TYPE==7)) && ((ORDQ < 20)),pos=none
    REJECTED_RECORD, bit, count=8,indent=2,exist=((REJECTED_TYPE==12)) && ((ORDQ < 20)),pos=none
    CON_REF, bit, count=8,indent=2,exist=((GBL_PREV > 6&&(ORDQ==16 || ORDQ==17 || ORDQ==18 || ORDQ==19))) && ((ORDQ < 20)),pos=none
    TAG, bit, count=4,indent=2,exist=((ORDQ==19&&GBL_PREV > 6)) && ((ORDQ < 20)),pos=none
    REJECTED_PDU_TYPE, bit, count=2,indent=2,exist=((GBL_PREV > 5)) && ((ORDQ < 20)),pos=none
    RESERVED2, bit, count=-8,indent=2,exist=((GBL_PREV > 6)) && ((ORDQ < 20)),pos=none
    RESERVED, bit,count=6,indent=2,exist=((GBL_PREV == 6)) && ((ORDQ < 20)),pos=none
End

Begin Message, REV Access Order Rec Call Rescue Cancel Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderRescueCancel
End

Begin Message, REV Access Order Rec Security Mode Completion Order Rsp, BitPack, OTTSName=CMsgRevAccessOrderSecurityModeCompletion
End

Begin Message, Access Msg Rec AC - Data Burst Rsp, BitPack, OTTSName=CMsgAccessDataBurst
    BURST_Rec, record, type = REV Burst Type Rec, maxsize = 1, indent = 2
End

Begin Record, REV Burst Type Rec, BitPack, OTTSName=CMsgREVBurstType
    MSG_NUMBER, bit,count=8,indent=2,pos=none
    BURST_TYPE, bit,count=6,base=enum:REV Burst Type Enum,indent=2,pos=none
    NUM_MSGS, bit,count=8,indent=2,pos=none
    NUM_FIELDS, bit,count=8,indent=2,pos=none
    Rec, union, enum=BURST_TYPE, ConsumeBytes=NUM_FIELDS
End

Begin Message, REV Burst Type Rec Unknown Burst Type [0x00] Rsp, BitPack, OTTSName=CMsgREVBurstTypeUnknown
    Data, array, type = uint8, maxsize = 100, size = ..\NUM_FIELDS, indent = 2
End

Begin Message, REV Burst Type Rec Async Data Services [0x01] Rsp, BitPack, OTTSName=CMsgREVBurstTypeDataSvc
    Data, array, type = uint8, maxsize = 100, size = ..\NUM_FIELDS, indent = 2
End

Begin Message, REV Burst Type Rec Group-3 Facsimile [0x02] Rsp, BitPack, OTTSName=CMsgREVBurstTypeGroupFacsimile
    Data, array, type = uint8, maxsize = 100, size = ..\NUM_FIELDS, indent = 2
End

Begin Message, REV Burst Type Rec SMS Rsp, BitPack, OTTSName=CMsgREVBurstTypeSMS
    SMS_Rec, record, type = SMS Rec, maxsize = 1, indent = 2
End

Begin Record, SMS Rec, BitPack, OTTSName=CRecSMSRec
    SMS_MSG_TYPE, bit,count=8,indent=2,base=enum:SMS Transport Msg Type Enum,pos=none
    Rec, record, type=SMS Transport Parameter Rec, maxsize=10, size = end, indent = 2
End

Begin Record, SMS Transport Parameter Rec, BitPack, OTTSName=CMsgSMSTransportParm
    PARAMETER_ID, bit,count=8,indent=2,base=enum:SMS Transport Parameter Enum,pos=none
    PARAMETER_LEN, bit,count=8,indent=2,pos=none
    ParamData, union, enum=PARAMETER_ID, consumeBytes = PARAMETER_LEN
End

Begin Message, SMS Transport Parameter Rec Teleserv Id [0x00] Rsp, BitPack, OTTSName=CMsgSMSTransportParmTeleservId
    IDENTIFIER, bit,count=16,indent=2,pos=none
End

Begin Message, SMS Transport Parameter Rec Serv Cat [0x01] Rsp, BitPack, OTTSName=CMsgSMSTransportParmServCat
    CATEGORY, bit,count=16,indent=2,base=enum:SMS Service Category Enum,pos=none
End

Begin Message, SMS Transport Parameter Rec Orig Addr [0x02] Rsp, BitPack, OTTSName=CMsgSMSTransportParmOrigAddr
    DIGIT_MODE, bit,count=1,indent=2,pos=none
    NUMBER_MODE, bit,count=1,indent=2,pos=none
    NUMBER_TYPE, bit,count=3,indent=2,exist=(DIGIT_MODE == 1),pos=none
    NUMBER_PLAN, bit,count=4,indent=2,exist=(NUMBER_MODE == 0) && (DIGIT_MODE == 1),pos=none
    NUM_FIELDS, bit,count=8,indent=2,pos=none
    CHARi4, record, type = Char4 List Rec, maxsize = 200, exist = (DIGIT_MODE == 0), size = NUM_FIELDS, indent = 2
    CHARi8, record, type = Char8 List Rec, maxsize = 200, exist = (DIGIT_MODE == 1), size = NUM_FIELDS, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, Char4 List Rec, BitPack, OTTSName=CMsgChar4ListRec
    CharI, bit,count=4,base=enum:DTMF Enum,indent=2,pos=none
End

Begin Record, Char8 List Rec, BitPack, OTTSName=CMsgChar8ListRec
    CharI, bit,count=8,indent=2,pos=none
End

Begin Message, SMS Transport Parameter Rec Orig Subaddr [0x03] Rsp, BitPack, OTTSName=CMsgSMSTransportParmOrigSubaddr
    TYPE, bit,count=3,base=enum:Subaddress Type Enum,indent=2,pos=none
    ODD, bit,count=1,indent=2,pos=none
    NUM_FIELDS, bit,count=8,indent=2,pos=none
    CHARi, array, type=uint8, maxsize=50, size=NUM_FIELDS, indent=2
    RESERVED, bit,count=4,indent=2,pos=none
End

Begin Message, SMS Transport Parameter Rec Dest Addr [0x04] Rsp, BitPack, OTTSName=CMsgSMSTransportParmDestAddr
    DIGIT_MODE, bit,count=1,indent=2,pos=none
    NUMBER_MODE, bit,count=1,indent=2,pos=none
    NUMBER_TYPE, bit,count=3,indent=2,exist=(DIGIT_MODE == 1),pos=none
    NUMBER_PLAN, bit,count=4,indent=2,exist=(NUMBER_MODE == 0) && (DIGIT_MODE == 1),pos=none
    NUM_FIELDS, bit,count=8,indent=2,pos=none
    CHARi4, record, type = Char4 List Rec, maxsize = 200, exist = (DIGIT_MODE == 0), size = NUM_FIELDS, indent = 2
    CHARi8, record, type = Char8 List Rec, maxsize = 200, exist = (DIGIT_MODE == 1), size = NUM_FIELDS, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, SMS Transport Parameter Rec Dest Subaddr [0x05] Rsp, BitPack, OTTSName=CMsgSMSTransportParmDestSubaddr
    TYPE, bit,count=3,indent=2,base=enum:Subaddress Type Enum,pos=none
    ODD, bit,count=1,indent=2,pos=none
    NUM_FIELDS, bit,count=8,indent=2,pos=none
    CHARi, array, type=uint8, maxsize=200, size=NUM_FIELDS, indent=2
    RESERVED, bit,count=4,indent=2,pos=none
End

Begin Message, SMS Transport Parameter Rec Bearer Reply Opt [0x06] Rsp, BitPack, OTTSName=CMsgSMSTransportParmBearerReplyOpt
    REPLY_SEQ, bit,count=6,indent=2,pos=none
    RESERVED, bit,count=2,indent=2,pos=none
End

Begin Message, SMS Transport Parameter Rec Cause Codes [0x07] Rsp, BitPack, OTTSName=CMsgSMSTransportParmCauseCodes
    REPLY_SEQ, bit,count=6,indent=2,pos=none
    ERROR_CLASS, bit,count=2,indent=2,base=enum:SMS ErrorClass,pos=none
    CAUSE_CODE, bit,count=8,indent=2,base=enum:IS41D Error Code Enum,exist=(ERROR_CLASS != 0),pos=none
End

Begin Message, SMS Transport Parameter Rec Bearer Data [0x08] Rsp, BitPack, OTTSName=CMsgSMSTransportParmBearerData
    Rec, record, type=SMS Teleservice Rec, maxsize=20, size = end, indent = 2
End

Begin Record, SMS Teleservice Rec, BitPack, OTTSName=CMsgSMSTeleservice
    SUBPARAMETER_ID, bit,count=8,indent=2,base=enum:SMS Teleservice Subparameter Type Enum,pos=none
    SUBPARAM_LEN, bit,count=8,indent=2,exist=(SUBPARAMETER_ID != 12),pos=none
    SubParamData, union,enum=SUBPARAMETER_ID,consumebytes=SUBPARAM_LEN,exist=(SUBPARAMETER_ID != 12)
    SUBPARAM_LENGTH, bit,count=8,indent=2,exist=(SUBPARAMETER_ID == 12),pos=none
    ALERT_PRIORITY, bit,count=2,indent=2,base=enum:Alert Priority Style Enum,exist=(SUBPARAMETER_ID == 12),pos=none
    RESERVED, bit,count=6,indent=2,exist=(SUBPARAMETER_ID == 12),pos=none
End

Begin Message, SMS Teleservice Rec Message Id [0x00] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceMessageId
    MESSAGE_TYPE, bit,count=4,indent=2,base=enum:SMS Teleservice Message Type Enum,pos=none
    MESSAGE_ID, bit,count=16,indent=2,pos=none
    HEADER_IND, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=3,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec User Data [0x01] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceUserData
    MSG_ENCODING, bit,count=5,indent=2,base=enum:TSB58A Type Enum,pos=none
    MSG_TYPE, bit,count=8,indent=2,exist=(MSG_ENCODING == 1) || (MSG_ENCODING == 10),pos=none
    NUM_FIELDS, bit,count=8,indent=2,pos=none
    uCharI, union, enum=MSG_ENCODING, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, User Data [0x01] Octet '00000' Rsp, OTTSName=CMsgSMSTsUserData1_Octet
    CharI, array, type=uint8, size=..\NUM_FIELDS, maxsize=255, indent=2
End

Begin Message, User Data [0x01] IS91 Ext Protocol '00001' Rsp, OTTSName=CMsgSMSTsUserData1_IS91ExtProtocol
    CharI, record, type = SMS IS91 UserData Rec, maxsize = 255, size=..\NUM_FIELDS, indent = 2
End

Begin Record, SMS IS91 UserData Rec, BitPack, OTTSName=CRecSMSIS91UserDataRec
    CharI, bit,count=6,indent=2,pos=none
End

Begin Message, User Data [0x01] 7bit ASCII '00010' Rsp, BitPack, OTTSName=CMsgSMSTsUserData1_7BitAscii
    CharI, array,type=bit,count=7,size=..\NUM_FIELDS,maxsize=255,indent=2,pos=none
End

Begin Message, User Data [0x01] IA5 '00011' Rsp, BitPack, OTTSName=CMsgSMSTsUserData1_IA5
    CharI, array,type=bit,count=7,size=..\NUM_FIELDS,maxsize=255,indent=2,pos=none
End

Begin Message, User Data [0x01] UNICODE '00100' Rsp, OTTSName=CMsgSMSTsUserData1_UNICODE
    CharI, array, type=uint16, size=..\NUM_FIELDS, maxsize=255, indent=2
End

Begin Message, User Data [0x01] Shift-JIS '00101' Rsp, OTTSName=CMsgSMSTsUserData1_ShiftJIS
    CharI, array, type=uint8, size=..\NUM_FIELDS, maxsize=255, indent=2
End

Begin Message, User Data [0x01] KS C 5601 '00110' Rsp, OTTSName=CMsgSMSTsUserData1_KS_C_5601
    CharI, array, type=uint8, size=..\NUM_FIELDS, maxsize=255, indent=2
End

Begin Message, User Data [0x01] Latin-Hebrew '00111' Rsp, OTTSName=CMsgSMSTsUserData1_LatinHebrew
    CharI, array, type=uint8, size=..\NUM_FIELDS, maxsize=255, indent=2
End

Begin Message, User Data [0x01] Latin '01000' Rsp, OTTSName=CMsgSMSTsUserData1_Latin
    CharI, array, type=uint8, size=..\NUM_FIELDS, maxsize=255, indent=2
End

Begin Message, User Data [0x01] GSM '01001' Rsp, OTTSName=CMsgSMSTsUserData1_GSM
    CharI, array, type=uint8, size=end, base=16, maxsize=255, indent=2
End

Begin Message, User Data [0x01] GSM '01010' Rsp, OTTSName=CMsgSMSTsUserData1_GSM
    CharI, array, type=uint16, size=end, base=16, maxsize=255, indent=2
End

Begin Message, User Data [0x01] Custom '10000' Rsp, OTTSName=CMsgSMSTsUserData1_Custom
    CharI, array, type=uint8, size=..\NUM_FIELDS, maxsize=255, indent=2
End

Begin Message, SMS Teleservice Rec User Resp Code [0x02] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceUserRespCode
    RESPONSE_CODE, bit,count=8,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec MsgCntr Time Stmp[0x03] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceMsgCntrTimeStmp
    YEAR, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    MONTH, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    DAY, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    HOURS, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    MINUTES, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    SECONDS, array,type=bit,count=4,maxsize=2,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Validity Per ABS [0x04] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceValidityPerABS
    YEAR, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    MONTH, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    DAY, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    HOURS, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    MINUTES, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    SECONDS, array,type=bit,count=4,maxsize=2,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Validity Per REL [0x05] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceValidityPerREL
    VALIDITY, bit,count=8,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Def Del Time ABS [0x06] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceDefDelTimeABS
    YEAR, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    MONTH, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    DAY, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    HOURS, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    MINUTES, array,type=bit,count=4,maxsize=2,indent=2,pos=none
    SECONDS, array,type=bit,count=4,maxsize=2,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Def Del Time REL [0x07] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceDefDelTimeREL
    DELIVERY_TIME, bit,count=8,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Priority Ind [0x08] Rsp, BitPack, OTTSName=CMsgSMSTeleservicePriorityInd
    PRIORITY, bit,count=2,indent=2,base=enum:Priority Level Enum,pos=none
    RESERVED, bit,count=6,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Privacy Ind [0x09] Rsp, BitPack, OTTSName=CMsgSMSTeleservicePrivacyInd
    PRIVACY, bit,count=2,indent=2,base=enum:Privacy Level Enum,pos=none
    RESERVED, bit,count=6,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Reply Option [0x0A] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceReplyOption
    USER_ACK_REQ, bit,count=1,indent=2,pos=none
    DAK_REQ, bit,count=1,indent=2,pos=none
    READ_ACK_REQ, bit,count=1,indent=2,pos=none
    REPORT_REQ, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=4,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Number of Msgs [0x0B] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceNumberofMsgs
    MESSAGE_CT, bit,count=8,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Alert on Msg Del [0x0C] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceAlertonMsgDel
    ALERT_PRIORITY, bit,count=2,indent=2,base=enum:Alert Priority Style Enum,pos=none
    RESERVED, bit,count=6,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Language Ind [0x0D] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceLanguageInd
    LANGUAGE, bit,count=8,indent=2,base=enum:Language Style Enum,pos=none
End

Begin Message, SMS Teleservice Rec Call Back Number [0x0E] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceCallBackNumber
    DIGIT_MODE, bit,count=1,indent=2,pos=none
    NUMBER_TYPE, bit,count=3,indent=2,exist=(DIGIT_MODE == 1),pos=none
    NUMBER_PLAN, bit,count=4,indent=2,exist=(DIGIT_MODE == 1),pos=none
    NUM_FIELDS, bit,count=8,indent=2,pos=none
    CHARi4, record, type = Char4 List Rec, maxsize = 200, exist = (DIGIT_MODE == 0), size = NUM_FIELDS, indent = 2
    CHARi8, record, type = Char8 List Rec, maxsize = 200, exist = (DIGIT_MODE == 1), size = NUM_FIELDS, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Msg Disp Mode [0x0F] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceMsgDispMode
    MSG_DISPLAY_MODE, bit,count=2,indent=2,base=enum:Msg Display Style Enum,pos=none
    RESERVED, bit,count=6,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Mult Enc Usr Data[0x10] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceMultEncUsrData
    Mult Encode User Data, array, type=uint8, maxsize=50, size=end, indent=2
End

Begin Message, SMS Teleservice Rec Msg Deposit Index[0x11] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceMsgDepositIndex
    MESSAGE_DEPOSIT_INDEX, bit,count=16,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Svc Cat Prog Data[0x12] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceSvcCatProgData
    MESSAGE_ENCODING, bit,count=5,indent=2,pos=none
    Data, array, type=uint8, maxsize=50, size=end, indent=2
End

Begin Message, SMS Teleservice Rec Svc Cat Prog Rslt[0x13] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceSvcCatProgRslt
    Data, array, type=uint8, maxsize=50, size=end, indent=2
End

Begin Message, SMS Teleservice Rec Message Status[0x14] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceMessageStatus
    ERROR_CLASS, bit,count=2,indent=2,pos=none
    MSG_STATUS_CODE, bit,count=6,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Ip Address[0x55] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceIpAddress
    IP_ADDRESS, bit,count=32,indent=2,pos=none
    CTL_FLAG, bit,count=8,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec Notify Flag[0x56] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceNotifyFlag
    NOTIFY_FLAG, bit,count=8,indent=2,pos=none
End

Begin Message, SMS Teleservice Rec UIM ID[0x57] Rsp, BitPack, OTTSName=CMsgSMSTeleserviceUIMId
    UIM_ID, bit,count=32,indent=2,pos=none
End

Begin Message, REV Burst Type Rec OTASP Rsp, BitPack, OTTSName=CMsgREVBurstTypeRecOTASP
    OTASP_MSG_TYPE, bit,count=8,indent=2,base=enum:REV Otasp Msg Type Enum,pos=none
    MSG_BLOCKS, union, enum=OTASP_MSG_TYPE
End

Begin Message, OTASP Configuration Response Rsp, BitPack, OTTSName=CMsgOTASPConfigRsp
    NUM_BLOCKS, bit,count=8,indent=2,pos=none
    BLOCK_Rec, record, type=OTASP Config Rsp Block Rec, maxsize=255, size=NUM_BLOCKS, indent = 2
    RESULT_CODE_Rec, record, type=OTASP Config Rsp Result Code Rec, maxsize = 255, size = NUM_BLOCKS, indent = 2
End

Begin Record, OTASP Config Rsp Block Rec, BitPack, OTTSName=CRecOTASPConfigRspBlock
    BLOCK_ID, bit,count=8,indent=2,base=enum:REV OTASP NAM Param Block Type Enum,pos=none
    BLOCK_LEN, bit,count=8,indent=2,pos=none
    PARAM_DATA, union, enum = BLOCK_ID, indent = 2, ConsumeBytes = BLOCK_LEN, exist = (BLOCK_LEN > 0)
End

Begin Message, OTASP Config Rsp Block Rec CDMA/Analog NAM Rsp, BitPack, OTTSName=CMsgOTASPConfigRspBlockRecCDMAAnalogNAM
    FIRSTCHP, bit,count=11,indent=2,pos=none
    HOME_SID, bit,count=15,indent=2,pos=none
    EX, bit,count=1,indent=2,pos=none
    SCM, bit,count=8,indent=2,pos=none
    MOB_P_REV, bit,count=8,indent=2,pos=none
    IMSI_M_CLASS, bit,count=1,indent=2,pos=none
    IMSI_M_ADDR_NUM, bit,count=3,indent=2,pos=none
    MCC_M, bit,count=10,indent=2,pos=none
    IMSI_M_11_12, bit,count=7,indent=2,pos=none
    IMSI_M_S, bit,count=34,indent=2,base=16,pos=none
    ACCOLC, bit,count=4,indent=2,pos=none
    LOCAL_CONTROL, bit,count=1,indent=2,pos=none
    MOB_TERM_HOME, bit,count=1,indent=2,pos=none
    MOB_TERM_FOR_SID, bit,count=1,indent=2,pos=none
    MOB_TERM_FOR_NID, bit,count=1,indent=2,pos=none
    MAX_SID_NID, bit,count=8,indent=2,pos=none
    STORED_SID_NID, bit,count=8,indent=2,pos=none
    SID_NID_Rec, record, type = NID SID Pair Rec, maxsize = 255, size = STORED_SID_NID, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, NID SID Pair Rec, BitPack, OTTSName=CRecNIDSIDPair
    SID, bit,count=15,indent=2,pos=none
    NID, bit,count=16,indent=2,pos=none
End

Begin Message, OTASP Config Rsp Block Rec MDN Rsp, BitPack, OTTSName=CMsgOTASPConfigRspBlockRecMDN
    N_DIGITS, bit,count=4,indent=2,pos=none
    DIGITS_Rec, record, type = N_DIGITS Rec, maxsize = 15, size = N_DIGITS, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, N_DIGITS Rec, BitPack, OTTSName=CRecN_DIGITS
    DIGITn, bit,count=4,indent=2,pos=none
End

Begin Message, OTASP Config Rsp Block Rec CDMA NAM Rsp, BitPack, OTTSName=CMsgOTASPConfigRspBlockRecCDMANAM
    RESERVED, bit,count=2,indent=2,pos=none
    SLOTTED_MODE, bit,count=1,indent=2,pos=none
    RESERVED1, bit,count=5,indent=2,pos=none
    MOB_P_REV, bit,count=8,indent=2,pos=none
    IMSI_M_CLASS, bit,count=1,indent=2,pos=none
    IMSI_M_ADDR_NUM, bit,count=3,indent=2,pos=none
    MCC_M, bit,count=10,indent=2,pos=none
    IMSI_M_11_12, bit,count=7,indent=2,pos=none
    IMSI_M_S, bit,count=34,indent=2,base=16,pos=none
    ACCOLC, bit,count=4,indent=2,pos=none
    LOCAL_CONTROL, bit,count=1,indent=2,pos=none
    MOB_TERM_HOME, bit,count=1,indent=2,pos=none
    MOB_TERM_FOR_SID, bit,count=1,indent=2,pos=none
    MOB_TERM_FOR_NID, bit,count=1,indent=2,pos=none
    MAX_SID_NID, bit,count=8,indent=2,pos=none
    STORED_SID_NID, bit,count=8,indent=2,pos=none
    SID_NID_Rec, record, type = NID SID Pair Rec, maxsize = 255, size = STORED_SID_NID, indent = 2
    RESERVED2, bit,count=-8,indent=2,pos=none
End

Begin Message, OTASP Config Rsp Block Rec IMSI_T Rsp, BitPack, OTTSName=CMsgOTASPConfigRspBlockRecIMSI_T
    IMSI_T_CLASS, bit,count=1,indent=2,pos=none
    IMSI_T_ADDR_NUM, bit,count=3,indent=2,pos=none
    MCC_T, bit,count=10,indent=2,pos=none
    IMSI_T_11_12, bit,count=7,indent=2,pos=none
    IMSI_T_S, bit,count=34,indent=2,base=16,pos=none
    RESERVED, bit,count=1,indent=2,pos=none
End

Begin Record, OTASP Config Rsp Result Code Rec, BitPack, OTTSName=CRecOTASPConfigRspResultCode
    RESULT_CODE, bit,count=8,indent=2,pos=none
End

Begin Message, OTASP Download Response Rsp, BitPack, OTTSName=CMsgOTASPDownloadRsp
    NUM_BLOCKS, bit,count=8,indent=2,pos=none
    Rec, record, maxsize=255, size=NUM_BLOCKS, minbytes=2, type=OTASP Download Rsp Rec
End

Begin Record, OTASP Download Rsp Rec, BitPack, OTTSName=CRecOTASPDownloadRspRec
    BLOCK_ID, bit,count=8,indent=2,base=enum:FOR OTASP NAM Param Block Type Enum,pos=none
    RESULT_CODE, bit,count=8,indent=2,pos=none
End

Begin Message, OTASP MS Key Response Rsp, BitPack, OTTSName=CMsgOTASPMSKeyRsp
    RESULT_CODE, bit,count=8,indent=2,pos=none
End

Begin Message, OTASP Key Generation Response Rsp, BitPack, OTTSName=CMsgOTASPKeyGenRsp
    RESULT_CODE, bit,count=8,indent=2,pos=none
    MS_RESULT_LEN, bit,count=8,indent=2,pos=none
    MS_RESULT, array, type=uint8, size=MS_RESULT_LEN, maxsize=255, indent=2
End

Begin Message, OTASP Re-Authenticate Response Rsp, BitPack, OTTSName=CMsgOTASPReAuthRsp
    AUTHR, bit,count=18,indent=2,pos=none
    RANDC, bit,count=8,indent=2,pos=none
    COUNT, bit,count=6,indent=2,pos=none
    AUTH_DATA, bit,count=24,indent=2,pos=none
End

Begin Message, OTASP Commit Response Rsp, BitPack, OTTSName=CMsgOTASPCommitRsp
    RESULT_CODE, bit,count=8,indent=2,pos=none
End

Begin Message, OTASP Protocol Capability Response Rsp, BitPack, OTTSName=CMsgOTASPProtocolCapRsp
    MOB_FIRM_REV, bit,count=16,indent=2,pos=none
    MOB_MODEL, bit,count=8,indent=2,pos=none
    NUM_FEATURES, bit,count=8,indent=2,pos=none
    Rec, record, type=OTASP Feature Rec, maxsize=30, size=NUM_FEATURES
    ADD_LENGTH, bit,count=8,indent=2,pos=none
    Additional_Fields, array, type=uint8, maxsize=30, size=ADD_LENGTH, indent=2
End

Begin Record, OTASP Feature Rec, BitPack, OTTSName=CRecOTASPFeatureRec
    FEATURE_ID, bit,count=8,indent=2,pos=none
    FEATURE_P_REV, bit,count=8,indent=2,pos=none
End

Begin Message, OTASP SSPR Configuration Response Rsp, BitPack, OTTSName=CMsgOTASPSSPRConfigRsp
    BLOCK_ID, bit,count=8,indent=2,base=enum:REV OTASP SSPR Param Block Type Enum,pos=none
    RESULT_CODE, bit,count=8,indent=2,pos=none
    BLOCK_LEN, bit,count=8,indent=2,pos=none
    PARAM_DATA, union, enum = BLOCK_ID, indent = 2,ConsumeBytes = BLOCK_LEN
End

Begin Message, SSPR Configuration Response PRL Dimensions Rsp, BitPack, OTTSName=CMsgOTASPSSPRConfigRspPRLD
    MAX_PR_LIST_SIZE, bit,count=16,indent=2,pos=none
    CUR_PR_LIST_SIZE, bit,count=16,indent=2,pos=none
    PR_LIST_ID, bit,count=16,indent=2,pos=none
    RESERVED, bit,count=1,indent=2,pos=none
    NUM_ACQ_RECS, bit,count=9,indent=2,pos=none
    NUM_SYS_RECS, bit,count=14,indent=2,pos=none
End

Begin Message, SSPR Configuration Response PRL Rsp, BitPack, OTTSName=CMsgOTASPSSPRConfigRspPRL
    RESERVED, bit,count=7,indent=2,pos=none
    LAST_SEGMENT, bit,count=1,indent=2,pos=none
    SEGMENT_OFFSET, bit,count=16,indent=2,pos=none
    SEGMENT_SIZE, bit,count=8,indent=2,pos=none
    SEGMENT_DATA, array, type=uint8, maxsize = 255, size = SEGMENT_SIZE, indent = 2
End

Begin Message, OTASP SSPR Download Response Rsp, BitPack, OTTSName=CMsgOTASPSSPRDownloadRsp
    BLOCK_ID, bit,count=8,indent=2,pos=none
    RESULT_CODE, bit,count=8,indent=2,pos=none
    SEGMENT_OFFSET, bit,count=16,indent=2,pos=none
    SEGMENT_SIZE, bit,count=8,indent=2,pos=none
End

Begin Message, OTASP Validation Response Rsp, BitPack, OTTSName=CMsgOTASPValidRsp
    NUM_BLOCKS, bit,count=8,indent=2,pos=none
    Rec, record, type=OTASP Validation Rsp Rec, maxsize=200, size=NUM_BLOCKS
End

Begin Record, OTASP Validation Rsp Rec, BitPack, OTTSName=CRecOTASPValidRsp
    BLOCK_ID, bit,count=8,indent=2,base=enum:FOR OTASP Validation Param Block Type Enum,pos=none
    RESULT_CODE, bit,count=8,indent=2,pos=none
End

Begin Message, OTASP OTAPA Response Rsp, BitPack, OTTSName=CMsgOTASP_PTAPARsp
    RESULT_CODE, bit,count=8,indent=2,pos=none
    RESERVED, bit,count=7,indent=2,pos=none
    NAM_LOCK_IND, bit,count=1,indent=2,pos=none
    RAND_OTAPA, bit,count=32,indent=2,exist=(NAM_LOCK_IND == 1),pos=none
End

Begin Message, OTASP Extended Protocol Capability Response Rsp, BitPack, OTTSName=CMsgOTASPExtProtocolCapRsp
    OTASP_MOB_P_REV, bit,count=8,indent=2,pos=none
    MOB_FIRM_REV, bit,count=16,indent=2,pos=none
    MOB_MODEL, bit,count=8,indent=2,pos=none
    NUM_FEATURES, bit,count=8,indent=2,pos=none
    Feature Rec, record, type=OTASP Feature Rec, maxsize=30, size=NUM_FEATURES
    NUM_CAP_RECORDS, bit,count=8,indent=2,pos=none
    Cap Rec, record, type=OTASP Cap Rec, maxsize=3, size=NUM_CAP_RECORDS
End

Begin Record, OTASP Cap Rec, BitPack, OTTSName=CRecOTASPCapRec
    CAP_RECORD_TYPE, bit,count=8,indent=2,base=enum:FOR OTASP Capbility Record Type Enum,pos=none
    CAP_LENGTH, bit,count=8,indent=2,pos=none
    CAP_RECORD, array, type=uint8, maxsize=7, size=CAP_LENGTH, indent=2
End

Begin Message, REV Burst Type Rec LS Rsp, BitPack, OTTSName=CMsgREVBurstTypeLS
    SESS_START, bit,count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    SESS_END, bit,count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    SESS_SOURCE, bit,count=1,indent=2,base=enum:BS Init/MS Orig,pos=none
    SESS_TAG, bit,count=5,indent=2,pos=none
    PD_MSG_TYPE, bit,count=8,indent=2,pos=none
    NUM_REQUESTS, bit,count=4,indent=2,pos=none
    NUM_RESPONSES, bit,count=4,indent=2,pos=none
    REQ_Rec, record, type=LS MS Req Rec, maxsize=15, size=NUM_REQUESTS, indent = 2
    RSP_Rec, record, type=LS MS Rsp Rec, maxsize=15, size=NUM_RESPONSES, indent = 2
End

Begin Message, REV Burst Type Rec Short Data Bursts Rsp, BitPack, OTTSName=CMsgREVBurstTypeShortDataBursts
    SR_ID, bit,count=3,indent=2,pos=none
    Reserved, bit,count=5,indent=2,pos=none
    SO, bit,count=16,indent=2,pos=none
    Data, array, type = uint8, maxsize = 100, size = (..\NUM_FIELDS-3), indent = 2
End

Begin Message, REV Burst Type Rec Ext Burst-International Rsp, BitPack, OTTSName=CMsgREVBurstTypeExtBurstInter
    MCC, bit,count=10,indent=2,pos=none
    COUNTRY_BURST_TYPE, bit,count=6,indent=2,pos=none
    Data, array, type = uint8, maxsize = 100, size = (..\NUM_FIELDS-2), indent = 2
End

Begin Message, REV Burst Type Rec Ext Burst Type Rsp, BitPack, OTTSName=CMsgREVBurstTypeExtBurst
    EXTENDED_BURST_TYPE, bit,count=16,indent=2,pos=none
    Data, array, type = uint8, maxsize = 100, size = (..\NUM_FIELDS-2), indent = 2
End

Begin Message, Access Msg Rec AC - Origination Rsp, BitPack, OTTSName=CMsgAccessOrigination
    MOB_TERM, bit, count=1,indent=2,pos=none
    SLOT_CYCLE_INDEX, bit, count=3,indent=2,pos=none
    MOB_P_REV, bit, count=8,indent=2,pos=none
    EXT_SCM, bit, count=1,indent=2,exist=GBL_PREV ==1,pos=none
    RESERVED1, bit, count=1,indent=2,exist=GBL_PREV ==1,pos=none
    SLOTTED_MODE, bit, count=1,indent=2,exist=GBL_PREV ==1,pos=none
    RESERVED2, bit, count=5,indent=2,exist=GBL_PREV ==1,pos=none
    SCM, bit, count=8,indent=2,exist=GBL_PREV >1,pos=none
    REQUEST_MODE, bit, count=3,indent=2,base=enum:REQUEST_MODE Codes Enum,pos=none
    SPECIAL_SERVICE, bit, count=1,indent=2,pos=none
    SERVICE_OPTION, bit, count=16,indent=2,exist=(SPECIAL_SERVICE == 1),pos=none
    PM, bit, count=1,indent=2,pos=none
    DIGIT_MODE, bit, count=1,indent=2,base=enum:0 DTMF/1 ASCII,pos=none
    NUMBER_TYPE, bit, count=3,indent=2,base=enum:Number Types Enum,exist=(DIGIT_MODE == 1 || GBL_PREV >= 9),pos=none
    NUMBER_PLAN, bit, count=4,indent=2,base=enum:Number Plan Enum,exist=(DIGIT_MODE == 1),pos=none
    MORE_FIELDS, bit, count=1,indent=2,pos=none
    NUM_FIELDS, bit,count=8,indent=2,pos=none
    CHARi4, record, type = Char4 List Rec, maxsize = 100, exist = (DIGIT_MODE == 0), size = NUM_FIELDS, indent = 2
    CHARi8, record, type = Char8 List Rec, maxsize = 100, exist = (DIGIT_MODE == 1), size = NUM_FIELDS, indent = 2
    NAR_AN_CAP, bit, count=1,indent=2,pos=none
    PACA_REORIG, bit, count=1,indent=2,exist=GBL_PREV>5,pos=none
    RETURN_CAUSE, bit, count=4,indent=2,base=enum:RETURN_CAUSE Codes Enum,exist=GBL_PREV>5,pos=none
    MORE_RECORDS, bit, count=1,indent=2,exist=GBL_PREV>5,pos=none
    ENCRYPTION_SUPPORTED, bit, count=4,indent=2,base=enum:0 [Basic Enc]/1 [Basic and En Enc],exist=((..\AUTH_Rec\AUTH_MODE != 0 && GBL_PREV < 7)) && (GBL_PREV>5),pos=none
    PACA_SUPPORTED, bit, count=1,indent=2,exist=GBL_PREV>5,pos=none
    NUM_ALT_SO, bit,count=3,indent=2,exist=GBL_PREV>5,pos=none
    ALT_SO, record,maxsize=10,size=NUM_ALT_SO,type=ALT_SO Rec,indent=2,exist=GBL_PREV>5
    DRS, bit, count=1,indent=2,exist=GBL_PREV>5,pos=none
    UZID_INCL, bit, count=1,indent=2,exist=GBL_PREV>5,pos=none
    UZID, bit, count=16,indent=2,exist=((UZID_INCL == 1)) && (GBL_PREV>5),pos=none
    CH_IND, bit, count=2,indent=2,base=enum:0 EXT_CH_IND/1 FCH/2 DCCH/3 [FCH and DCCH],exist=GBL_PREV>5,pos=none
    SR_ID, bit, count=3,indent=2,exist=GBL_PREV>5,pos=none
    OTD_SUPPORTED, bit, count=1,indent=2,exist=GBL_PREV>5,pos=none
    QPCH_SUPPORTED, bit, count=1,indent=2,exist=GBL_PREV>5,pos=none
    ENHANCED_RC, bit, count=1,indent=2,exist=GBL_PREV>5,pos=none
    FOR_RC_PREF, bit, count=5,indent=2,exist=GBL_PREV>5,pos=none
    REV_RC_PREF, bit, count=5,indent=2,exist=GBL_PREV>5,pos=none
    FCH_SUPPORTED, bit,count=1,indent=2,exist=GBL_PREV>5,pos=none
    FCH_CAPABILITY, record,maxsize=1,exist=((FCH_SUPPORTED == 1)) && (GBL_PREV>5),type=REV Info FCH Rec,indent=2
    DCCH_SUPPORTED, bit,count=1,indent=2,exist=GBL_PREV>5,pos=none
    DCCH_CAPABILITY, record,maxsize=1,exist=((DCCH_SUPPORTED == 1)) && (GBL_PREV>5),type=REV Info DCCH Rec,indent=2
    RESERVED, bit, count=1,indent=2,exist=(GBL_PREV == 6),pos=none
    GEO_LOC_INCL, bit, count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    GEO_LOC_TYPE, bit, count=3,indent=2,base=enum:Geo_location Type Enum,exist=((GEO_LOC_INCL==1)) && ((GBL_PREV > 6)),pos=none
    REV_FCH_GATING_REQ, bit, count=1,indent=2,exist=(GBL_PREV > 5),pos=none
    ORIG_REASON, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    ORIG_COUNT, bit, count=2,indent=2,exist=GBL_PREV > 6,pos=none
    STS_SUPPORTED, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    3X_CCH_SUPPORTED, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    WLL_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    WLL_DEVICE_TYPE, bit, count=3,indent=2,base=enum:WLL_DEVICE Types Enum,exist=((WLL_INCL==1)) && (GBL_PREV > 6),pos=none
    GLOBAL_EMERGENCY_CALL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    MS_INIT_POS_LOC_IND, bit, count=1,indent=2,exist=((GLOBAL_EMERGENCY_CALL)) && (GBL_PREV > 6),pos=none
    QOS_PARMS_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    QOS_PARMS_LEN, bit,count=5,indent=2,exist=((QOS_PARMS_INCL==1)) && (GBL_PREV > 6),pos=none
    QOS_PARMS_REC, record,maxsize=31,size=QOS_PARMS_LEN,type=QOS_PARMS Rec,exist=((QOS_PARMS_INCL==1)) && (GBL_PREV > 6)
    ENC_INFO_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    SIG_ENCRYPT_SUP, record,type=csch SIG_ENCRYPT_SUP Rec,maxsize=1,indent=2,exist=((ENC_INFO_INCL==1)) && (GBL_PREV > 6)
    D_SIG_ENCRYPT_REQ, bit, count=1,indent=2,exist=((ENC_INFO_INCL==1)) && (GBL_PREV > 6),pos=none
    C_SIG_ENCRYPT_REQ, bit, count=1,indent=2,exist=((ENC_INFO_INCL==1)) && (GBL_PREV > 6),pos=none
    ENC_SEQ_H, bit, count=24,indent=2,exist=(((SIG_ENCRYPT_SUP\ECMEA==1 || SIG_ENCRYPT_SUP\REA==1)&&(ENC_INFO_INCL==1))) && ((GBL_PREV > 6) && (GBL_PREV < 9)),pos=none
    ENC_SEQ_H_SIG, bit, count=8,indent=2,exist=(((SIG_ENCRYPT_SUP\ECMEA==1 || SIG_ENCRYPT_SUP\REA==1)&&(ENC_INFO_INCL==1))) && ((GBL_PREV > 6) && (GBL_PREV < 9)),pos=none
    NEW_SSEQ_H, bit, count=24,indent=2,exist=(((SIG_ENCRYPT_SUP\ECMEA==1 || SIG_ENCRYPT_SUP\REA==1)&&(ENC_INFO_INCL==1))) && ((GBL_PREV > 6) && (!(GBL_PREV < 9))),pos=none
    NEW_SSEQ_H_SIG, bit, count=8,indent=2,exist=(((SIG_ENCRYPT_SUP\ECMEA==1 || SIG_ENCRYPT_SUP\REA==1)&&(ENC_INFO_INCL==1))) && ((GBL_PREV > 6) && (!(GBL_PREV < 9))),pos=none
    UI_ENCRYPT_REQ, bit, count=1,indent=2,exist=((ENC_INFO_INCL==1)) && (GBL_PREV > 6),pos=none
    UI_ENCRYPT_SUP, bit, count=8,indent=2,exist=((ENC_INFO_INCL==1)) && (GBL_PREV > 6),pos=none
    SYNC_ID_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    SYNC_ID_LEN, bit,count=4,indent=2,exist=((SYNC_ID_INCL==1)) && (GBL_PREV > 6),pos=none
    SYNC_ID_REC, record,maxsize=15,size=SYNC_ID_LEN,type=SYNC_ID Rec,exist=((SYNC_ID_INCL==1&&SYNC_ID_LEN != 0)) && (GBL_PREV > 6)
    PREV_SID_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    PREV_SID, bit, count=15,indent=2,exist=((PREV_SID_INCL==1)) && (GBL_PREV > 6),pos=none
    PREV_NID_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    PREV_NID, bit, count=16,indent=2,exist=((PREV_NID_INCL==1)) && (GBL_PREV > 6),pos=none
    PREV_PZID_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    PREV_PZID, bit, count=8,indent=2,exist=((PREV_PZID_INCL==1)) && (GBL_PREV > 6),pos=none
    SO_BITMAP_IND, bit, count=2,indent=2,exist=GBL_PREV > 6,pos=none
    SO_GROUP_NUM, bit,count=5,indent=2,exist=((SO_BITMAP_IND!=0)) && (GBL_PREV > 6),pos=none
    SO_BITMAP, record,maxsize=3,size=SO_BITMAP_IND,type=SO_BITMAP Rec,exist=((SO_BITMAP_IND != 0)) && (GBL_PREV > 6)
    SDB_DESIRED_ONLY, bit, count=1,indent=2,exist=(GBL_PREV > 6) && ((GBL_PREV > 7)),pos=none
    ALT_BAND_CLASS_SUP, bit, count=1,indent=2,exist=(GBL_PREV > 6) && ((GBL_PREV > 7)),pos=none
    MSG_INT_INFO_INCL, bit, count=1,indent=2,exist=((GBL_PREV > 6) && ((GBL_PREV > 7))) && ((GBL_PREV > 8)),pos=none
    SIG_INTEGRITY_SUP_INCL, bit, count=1,indent=2,exist=(((GBL_PREV > 6) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((MSG_INT_INFO_INCL==1)),pos=none
    SIG_INTEGRITY_SUP, bit, count=8,indent=2,exist=((SIG_INTEGRITY_SUP_INCL==1)) && ((((GBL_PREV > 6) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((MSG_INT_INFO_INCL==1))),pos=none
    SIG_INTEGRITY_REQ, bit, count=3,indent=2,exist=((SIG_INTEGRITY_SUP_INCL==1)) && ((((GBL_PREV > 6) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((MSG_INT_INFO_INCL==1))),pos=none
    NEW_KEY_ID, bit, count=2,indent=2,exist=(((GBL_PREV > 6) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((MSG_INT_INFO_INCL==1)),pos=none
    NEW_SSEQ_H_INCL, bit, count=1,indent=2,exist=(((GBL_PREV > 6) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((MSG_INT_INFO_INCL==1)),pos=none
    NEW_SSEQ_H_2, bit, count=24,indent=2,exist=((NEW_SSEQ_H_INCL==1)) && ((((GBL_PREV > 6) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((MSG_INT_INFO_INCL==1))),pos=none
    NEW_SSEQ_H_SIG_2, bit, count=8,indent=2,exist=((NEW_SSEQ_H_INCL==1)) && ((((GBL_PREV > 6) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((MSG_INT_INFO_INCL==1))),pos=none
    FOR_PDCH_SUPPORTED, bit,count=1,indent=2,exist=((GBL_PREV > 6) && ((GBL_PREV > 7))) && ((GBL_PREV > 8)),pos=none
    FOR_PDCH_REC, record,maxsize=1,size=FOR_PDCH_SUPPORTED,exist=((FOR_PDCH_SUPPORTED==1)) && (((GBL_PREV > 6) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))),type=REV Info FOR PDCH Rec
    EXT_CH_IND, bit,count=5,indent=2,base=enum:EXT_CH_IND enum,exist=((CH_IND==0)) && (((GBL_PREV > 6) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))),pos=none
End

Begin Record, ALT_SO Rec, BitPack, OTTSName=CmsgALT_SO
    ALT_SO, bit,count=16,indent=2,pos=none
End

Begin Record, REV Info FCH Rec, BitPack, OTTSName=CMsgRevInfoFCH
    FCH_FRAME_SIZE, bit,count=1,indent=2,pos=none
    FOR_RC_MAP, record, type = REV Info FOR RC Map Rec, maxsize = 1, indent = 2
    REV_RC_MAP, record, type = REV Info REV RC Map Rec, maxsize = 1, indent = 2
End

Begin Record, REV Info FOR RC Map Rec, BitPack, OTTSName=CMsgRevInfoForRCMap
    FOR_RC_MAP_LEN, bit,count=3,indent=2,pos=none
    RC1, bit,count=1,indent=2,exist=(FOR_RC_MAP_LEN>0),pos=none
    RC2, bit,count=1,indent=2,exist=(FOR_RC_MAP_LEN>0),pos=none
    RC3, bit,count=1,indent=2,exist=(FOR_RC_MAP_LEN>0),pos=none
    RC4, bit,count=1,indent=2,exist=(FOR_RC_MAP_LEN>1),pos=none
    RC5, bit,count=1,indent=2,exist=(FOR_RC_MAP_LEN>1),pos=none
    RC6, bit,count=1,indent=2,exist=(FOR_RC_MAP_LEN>1),pos=none
    RC7, bit,count=1,indent=2,exist=(FOR_RC_MAP_LEN>2),pos=none
    RC8, bit,count=1,indent=2,exist=(FOR_RC_MAP_LEN>2),pos=none
    RC9, bit,count=1,indent=2,exist=(FOR_RC_MAP_LEN>2),pos=none
    RC11, bit,count=1,indent=2,exist=(FOR_RC_MAP_LEN>3),pos=none
    RC12, bit,count=1,indent=2,exist=(FOR_RC_MAP_LEN>3),pos=none
    Unused, bit,count=1,indent=2,exist=(FOR_RC_MAP_LEN>3),pos=none
End

Begin Record, REV Info REV RC Map Rec, BitPack, OTTSName=CMsgRevInfoRevRCMap
    REV_RC_MAP_LEN, bit,count=3,indent=2,pos=none
    RC1, bit,count=1,indent=2,exist=(REV_RC_MAP_LEN>0),pos=none
    RC2, bit,count=1,indent=2,exist=(REV_RC_MAP_LEN>0),pos=none
    RC3, bit,count=1,indent=2,exist=(REV_RC_MAP_LEN>0),pos=none
    RC4, bit,count=1,indent=2,exist=(REV_RC_MAP_LEN>1),pos=none
    RC5, bit,count=1,indent=2,exist=(REV_RC_MAP_LEN>1),pos=none
    RC6, bit,count=1,indent=2,exist=(REV_RC_MAP_LEN>1),pos=none
    RC8, bit,count=1,indent=2,exist=(REV_RC_MAP_LEN>2),pos=none
    Unused, bit,count=1,indent=2,exist=(REV_RC_MAP_LEN>2),pos=none
    Unused2, bit,count=1,indent=2,exist=(REV_RC_MAP_LEN>2),pos=none
End

Begin Record, REV Info DCCH Rec, BitPack, OTTSName=CMsgRevInfoDCCH
    DCCH_FRAME_SIZE, bit,count=2,base=enum: 0 [either 5ms or 20ms]/1 [20 ms]/2 [5 ms]/3 [both 5ms and 20ms],indent=2,pos=none
    FOR_RC_MAP, record, type = REV Info FOR RC Map Rec, maxsize = 1, indent = 2
    REV_RC_MAP, record, type = REV Info REV RC Map Rec, maxsize = 1, indent = 2
End

Begin Record, QOS_PARMS Rec, BitPack, OTTSName=CMsgQOS_PARMS
    QOS_PARMS, bit,count=8,indent=2,pos=none
End

Begin Record, SYNC_ID Rec, BitPack, OTTSName=CMsgSYNC_ID
    SYNC_ID, bit,count=8,indent=2,pos=none
End

Begin Record, SO_BITMAP Rec, BitPack, OTTSName=CMsgSO_BITMAP
    SO_BITMAP, bit,count=4,indent=2,pos=none
End

Begin Record, REV Info FOR PDCH Rec, BitPack, OTTSName=CMsgRevInfoRevPdch
    ACK_DELAY, bit,count=1,indent=2,exist=GBL_PREV>8,pos=none
    NUM_ARQ_CHAN, bit,count=2,indent=2,exist=GBL_PREV>8,pos=none
    FOR_PDCH_LEN, bit,count=2,indent=2,exist=GBL_PREV>8,pos=none
    FOR_PDCH_RC_MAP_REC, record,maxsize=3,size=(FOR_PDCH_LEN + 1),type=FOR_PDCH_RC_MAP Rec,exist=GBL_PREV>8
    CH_CONFIG_SUP_MAP_LEN, bit,count=2,indent=2,exist=GBL_PREV>8,pos=none
    CH_CONFIG_SUP_MAP_REC, record,maxsize=3,size=(CH_CONFIG_SUP_MAP_LEN +1),type=CH_CONFIG_SUP_MAP_REC Rec,exist=((CH_CONFIG_SUP_MAP_LEN != 0)) && (GBL_PREV>8)
End

Begin Record, FOR_PDCH_RC_MAP Rec, BitPack, OTTSName=CMsgFOR_PDCH_RC_MAP
    FOR_PDCH_RC_MAP, bit,count=3,indent=2,exist=GBL_PREV >8,pos=none
End

Begin Record, CH_CONFIG_SUP_MAP_REC Rec, BitPack, OTTSName=CMsgCH_CONFIG_SUP_MAP_REC
    CH_CONFIG_SUP_MAP, bit,count=3,indent=2,exist=GBL_PREV >8,pos=none
End

Begin Message, Access Msg Rec AC - Page Response Rsp, BitPack, OTTSName=CMsgAccessPageRsp
    MOB_TERM, bit, count=1,indent=2,pos=none
    SLOT_CYCLE_INDEX, bit, count=3,indent=2,pos=none
    MOB_P_REV, bit, count=8,indent=2,pos=none
    EXT_SCM, bit, count=1,indent=2,exist=GBL_PREV == 1,pos=none
    RESERVED1, bit, count=1,indent=2,exist=GBL_PREV == 1,pos=none
    SLOTTED_MODE, bit, count=1,indent=2,exist=GBL_PREV == 1,pos=none
    RESERVED2, bit, count=5,indent=2,exist=GBL_PREV == 1,pos=none
    SCM, bit, count=8,indent=2,exist=(GBL_PREV > 1),pos=none
    REQUEST_MODE, bit, count=3,indent=2,base=enum:REQUEST_MODE Codes Enum,pos=none
    SERVICE_OPTION, bit, count=16,indent=2,pos=none
    PM, bit, count=1,indent=2,pos=none
    NAR_AN_CAP, bit, count=1,indent=2,pos=none
    ENCRYPTION_SUPPORTED, bit, count=4,indent=2,exist=((..\AUTH_Rec\AUTH_MODE != 0 && GBL_PREV < 7)) && (GBL_PREV >5),pos=none
    NUM_ALT_SO, bit,count=3,indent=2,exist=GBL_PREV >5,pos=none
    ALT_SO, record,maxsize=7,size=NUM_ALT_SO,type=ALT_SO Rec,indent=2,exist=GBL_PREV >5
    UZID_INCL, bit, count=1,indent=2,exist=GBL_PREV >5,pos=none
    UZID, bit, count=16,indent=2,exist=((UZID_INCL == 1)) && (GBL_PREV >5),pos=none
    CH_IND, bit, count=2,indent=2,base=enum:0 EXT_CH_IND/1 FCH/2 DCCH/3 [FCH and DCCH],exist=GBL_PREV >5,pos=none
    OTD_SUPPORTED, bit, count=1,indent=2,exist=GBL_PREV >5,pos=none
    QPCH_SUPPORTED, bit, count=1,indent=2,exist=GBL_PREV >5,pos=none
    ENHANCED_RC, bit, count=1,indent=2,exist=GBL_PREV >5,pos=none
    FOR_RC_PREF, bit, count=5,indent=2,exist=GBL_PREV >5,pos=none
    REV_RC_PREF, bit, count=5,indent=2,exist=GBL_PREV >5,pos=none
    FCH_SUPPORTED, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    FCH_CAPABILITY, record,maxsize=1,exist=((FCH_SUPPORTED == 1)) && (GBL_PREV >5),type=REV Info FCH Rec,indent=2
    DCCH_SUPPORTED, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    DCCH_CAPABILITY, record,maxsize=1,exist=((DCCH_SUPPORTED == 1)) && (GBL_PREV >5),type=REV Info DCCH Rec,indent=2
    REV_FCH_GATING_REQ, bit, count=1,indent=2,exist=GBL_PREV >5,pos=none
    STS_SUPPORTED, bit, count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 6),pos=none
    3X_CCH_SUPPORTED, bit, count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 6),pos=none
    WLL_INCL, bit, count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 6),pos=none
    WLL_DEVICE_TYPE, bit, count=3,indent=2,base=enum:WLL_DEVICE Types Enum,exist=((WLL_INCL==1)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    HOOK_STATUS, bit, count=4,indent=2,base=enum:HOOK_STATUS Values Enum,exist=((WLL_INCL == 1)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    ENC_INFO_INCL, bit, count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 6),pos=none
    SIG_ENCRYPT_SUP, bit, count=8,indent=2,exist=((ENC_INFO_INCL==1)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    D_SIG_ENCRYPT_REQ, bit, count=1,indent=2,exist=((ENC_INFO_INCL==1)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    C_SIG_ENCRYPT_REQ, bit, count=1,indent=2,exist=((ENC_INFO_INCL==1)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    ENC_SEQ_H, bit, count=24,indent=2,exist=((SIG_ENCRYPT_SUP!=0 && SIG_ENCRYPT_SUP!=1 && ENC_INFO_INCL==1)) && (((GBL_PREV >5) && (GBL_PREV > 6)) && (GBL_PREV < 9)),pos=none
    ENC_SEQ_H_SIG, bit, count=8,indent=2,exist=((SIG_ENCRYPT_SUP!=0 && SIG_ENCRYPT_SUP!=1 && ENC_INFO_INCL==1)) && (((GBL_PREV >5) && (GBL_PREV > 6)) && (GBL_PREV < 9)),pos=none
    NEW_SSEQ_H, bit, count=24,indent=2,exist=((SIG_ENCRYPT_SUP!=0 && SIG_ENCRYPT_SUP!=1 && ENC_INFO_INCL==1)) && (((GBL_PREV >5) && (GBL_PREV > 6)) && ((GBL_PREV >= 9))),pos=none
    NEW_SSEQ_H_SIG, bit, count=8,indent=2,exist=((SIG_ENCRYPT_SUP!=0 && SIG_ENCRYPT_SUP!=1 && ENC_INFO_INCL==1)) && (((GBL_PREV >5) && (GBL_PREV > 6)) && ((GBL_PREV >= 9))),pos=none
    UI_ENCRYPT_REQ, bit, count=1,indent=2,exist=((ENC_INFO_INCL==1)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    UI_ENCRYPT_SUP, bit, count=8,indent=2,exist=((ENC_INFO_INCL==1)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    SYNC_ID_INCL, bit, count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 6),pos=none
    SYNC_ID_LEN, bit,count=4,indent=2,exist=((SYNC_ID_INCL==1)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    SYNC_ID_REC, record,maxsize=15,size=SYNC_ID_LEN,type=SYNC_ID Rec,exist=(GBL_PREV >5) && (GBL_PREV > 6)
    SO_BITMAP_IND, bit, count=2,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 6),pos=none
    SO_GROUP_NUM, bit,count=5,indent=2,exist=((SO_BITMAP_IND!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    SO_BITMAP, record,maxsize=3,size=SO_BITMAP_IND,type=SO_BITMAP Rec,exist=(GBL_PREV >5) && (GBL_PREV > 6)
    ALT_BAND_CLASS_SUP, bit, count=1,indent=2,exist=((GBL_PREV >5) && (GBL_PREV > 6)) && ((GBL_PREV > 7)),pos=none
    MSG_INT_INFO_INCL, bit, count=1,indent=2,exist=(((GBL_PREV >5) && (GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8)),pos=none
    SIG_INTEGRITY_SUP_INCL, bit, count=1,indent=2,exist=((((GBL_PREV >5) && (GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((MSG_INT_INFO_INCL==1)),pos=none
    SIG_INTEGRITY_SUP, bit, count=8,indent=2,exist=((SIG_INTEGRITY_SUP_INCL==1)) && (((((GBL_PREV >5) && (GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((MSG_INT_INFO_INCL==1))),pos=none
    SIG_INTEGRITY_REQ, bit, count=3,indent=2,exist=((SIG_INTEGRITY_SUP_INCL==1)) && (((((GBL_PREV >5) && (GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((MSG_INT_INFO_INCL==1))),pos=none
    NEW_KEY_ID, bit, count=2,indent=2,exist=((((GBL_PREV >5) && (GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((MSG_INT_INFO_INCL==1)),pos=none
    NEW_SSEQ_H_INCL, bit, count=1,indent=2,exist=((((GBL_PREV >5) && (GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((MSG_INT_INFO_INCL==1)),pos=none
    NEW_SSEQ_H_2, bit, count=24,indent=2,exist=((NEW_SSEQ_H_INCL==1 )) && (((((GBL_PREV >5) && (GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((MSG_INT_INFO_INCL==1))),pos=none
    NEW_SSEQ_H_SIG_2, bit, count=8,indent=2,exist=((NEW_SSEQ_H_INCL==1 )) && (((((GBL_PREV >5) && (GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((MSG_INT_INFO_INCL==1))),pos=none
    FOR_PDCH_SUPPORTED, bit,count=1,indent=2,exist=(((GBL_PREV >5) && (GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8)),pos=none
    FOR_PDCH_REC, record,maxsize=1,exist=((FOR_PDCH_SUPPORTED==1)) && ((((GBL_PREV >5) && (GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))),type=REV Info FOR PDCH Rec
    EXT_CH_IND, bit,count=5,indent=2,base=enum:EXT_CH_IND enum,exist=((CH_IND==0)) && ((((GBL_PREV >5) && (GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))),pos=none
End

Begin Message, Access Msg Rec AC - Authentication Challenge Response Rsp, BitPack, OTTSName=CMsgAccessAuthChallengeRsp
    AUTHU, bit,count=18,indent=2,base=16,pos=none
End

Begin Message, Access Msg Rec AC - Status Response Rsp, BitPack, OTTSName=CMsgAccessStatusRsp
    RESERVED, bit,count=2,indent=2,exist=GBL_PREV ==1,pos=none
    QAUL_JSTD, record,maxsize=20,size=end,type=SRM Qual Record,minbytes=2,exist=GBL_PREV ==1
    QUAL_Rec, record,type=Qual Info Rec,maxsize=1,indent=2,exist=GBL_PREV > 1
    INFO_Rec, record,maxsize=20,size=end,type=REV Information Rec,minbytes=2,exist=GBL_PREV > 1
End

Begin Record, SRM Qual Record, BitPack, OTTSName=CMsgSRMQualRecord
    QUAL_INFO_TYPE, bit, count=8,indent=2,base=enum:Access Status Qual Info Type,exist=GBL_PREV ==1,pos=none
    QUAL_INFO_LEN, bit,count=3,indent=2,exist=GBL_PREV ==1,pos=none
    QUAL, array,type=uint8,maxsize=7,size=QUAL_INFO_LEN,indent=2,exist=GBL_PREV ==1
End

Begin Record, Qual Info Rec, BitPack, OTTSName=CMsgQualInfo
    QUAL_INFO_TYPE, bit,count=8,indent=2,base=enum:Qual Info Type Enum,pos=none
    QUAL_INFO_LEN, bit,count=3,indent=2,pos=none
    Rec, union, enum=QUAL_INFO_TYPE, ConsumeBytes=QUAL_INFO_LEN
End

Begin Message, Qual Info Rec 0 [None] Rsp, BitPack, OTTSName=CMsgQualInfoNone
End

Begin Message, Qual Info Rec 1 [Band_Class] Rsp, BitPack, OTTSName=CMsgQualInfoBandClass
    BAND_CLASS, bit,count=5,indent=2,pos=none
    RESERVED, bit,count=3,indent=2,pos=none
End

Begin Message, Qual Info Rec 2 [Band_Class and Op_Mode] Rsp, BitPack, OTTSName=CMsgQualInfoBandClassOpMode
    BAND_CLASS, bit,count=5,indent=2,pos=none
    OP_MODE, bit,count=8,indent=2,pos=none
    RESERVED, bit,count=3,indent=2,pos=none
End

Begin Record, REV Information Rec, BitPack, OTTSName=CMsgRevInformation
    RECORD_TYPE, bit,count=8,base=enum:REV Information Record Type Enum,indent=2,pos=none
    RECORD_LEN, bit,count=8,indent=2,pos=none
    Rec, union, enum=RECORD_TYPE, ConsumeBytes=RECORD_LEN, indent = 2
End

Begin Message, REV Information Rec 1 [Reserved1] Rsp, BitPack, OTTSName=CMsgRevInfoReserved1
End

Begin Message, REV Information Rec 2 [Reserved2] Rsp, BitPack, OTTSName=CMsgRevInfoReserved2
End

Begin Message, REV Information Rec 3 [Keypad Facility] Rsp, BitPack, OTTSName=CMsgRevInfoKeypadFacility
    CHARi, array, type = uint8, maxsize = 100, size = end, indent = 2
End

Begin Message, REV Information Rec 4 [Called Party Number] Rsp, BitPack, OTTSName=CMsgRevInfoCalledPartyNumber
    NUMBER_TYPE, bit,count=3,indent=2,base=enum:Number Types Enum,pos=none
    NUMBER_PLAN, bit,count=4,indent=2,base=enum:Number Plan Enum,pos=none
    CHARi, array, type = uint8, maxsize = 100, size = end, indent = 2
    RESERVED, bit,count=1,indent=2,pos=none
End

Begin Message, REV Information Rec 5 [Calling Party Number] Rsp, BitPack, OTTSName=CMsgRevInfoCallingPartyNumber
    NUMBER_TYPE, bit,count=3,indent=2,base=enum:Number Types Enum,pos=none
    NUMBER_PLAN, bit,count=4,indent=2,base=enum:Number Plan Enum,pos=none
    PI, bit,count=2,indent=2,base=enum:0 [Presentation allowed]/1 [Presentation restricted]/2 [Number not available],pos=none
    SI, bit,count=2,indent=2,base=enum:0 [User-provided not screened]/1 [User-pro verified and passed]/2 [User-proverified&failed]/3 [Network-provided],pos=none
    CHARi, array, type = uint8, maxsize = 100, size = end, indent = 2
    RESERVED, bit,count=5,indent=2,pos=none
End

Begin Message, REV Information Rec 6 [Reserved3] Rsp, BitPack, OTTSName=CMsgRevInfoReserved3
End

Begin Message, REV Information Rec 7 [Call Mode] Rsp, BitPack, OTTSName=CMsgRevInfoCallMode
    ORIG_MODE, bit,count=1,indent=2,pos=none
    PRI_SERVICE, bit,count=16,indent=2,pos=none
    SEC_SERVICE, bit,count=16,indent=2,pos=none
    RESERVED, bit,count=7,indent=2,pos=none
End

Begin Message, REV Information Rec 8 [Terminal Information] Rsp, BitPack, OTTSName=CMsgRevInfoTerminalInfo
    MOB_P_REV, bit,count=8,indent=2,pos=none
    MOB_MFG_CODE, bit,count=8,indent=2,pos=none
    MOB_MODEL, bit,count=8,indent=2,pos=none
    MOB_FIRM_REV, bit,count=16,indent=2,pos=none
    SCM, bit,count=8,indent=2,pos=none
    LOCAL_CTRL, bit,count=1,indent=2,pos=none
    SLOT_CYCLE_INDEX, bit,count=3,indent=2,pos=none
    Rec, record, type = REV Info Rec 8 Service Option Rec, maxsize = 100, minbytes = 2, size = end, indent = 2
    RESERVED, bit,count=4,indent=2,pos=none
End

Begin Record, REV Info Rec 8 Service Option Rec, BitPack, OTTSName=CRecRevInfoServiceOption
    SERVICE_OPTION, bit,count=16,indent=2,pos=none
End

Begin Message, REV Information Rec 9 [Roaming Information] Rsp, BitPack, OTTSName=CMsgRevInfoRoamingInfo
    ACCOLC, bit,count=4,indent=2,pos=none
    MOB_TERM_HOME, bit,count=1,indent=2,pos=none
    MOB_TERM_FOR_SID, bit,count=1,indent=2,pos=none
    MOB_TERM_FOR_NID, bit,count=1,indent=2,pos=none
    Rec, record, type = REV Info SID NID Rec, maxsize = 20, size = end, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, REV Info SID NID Rec, BitPack, OTTSName=CMsgRevInfoSIDNID
    SID, bit,count=15,indent=2,pos=none
    NID, bit,count=16,indent=2,pos=none
End

Begin Message, REV Information Rec 10 [Security Status] Rsp, BitPack, OTTSName=CMsgRevInfoSecurityStatus
    AUTH_MODE, bit,count=2,indent=2,pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,pos=none
    PRIVATE_LCM, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=3,indent=2,pos=none
End

Begin Message, REV Information Rec 11 [Connected Number] Rsp, BitPack, OTTSName=CMsgRevInfoConnectedNumber
    NUMBER_TYPE, bit,count=3,indent=2,base=enum:Number Types Enum,pos=none
    NUMBER_PLAN, bit,count=4,indent=2,base=enum:Number Plan Enum,pos=none
    PI, bit,count=2,indent=2,base=enum:0 [Presentation allowed]/1 [Presentation restricted]/2 [Number not available],pos=none
    SI, bit,count=2,indent=2,base=enum:0 [User-provided not screened]/1 [User-pro verified&passed]/2 [User-pro verified&failed]/3 [Network-provided],pos=none
    CHARi, array, type = uint8, maxsize = 100, size = end, indent = 2
    RESERVED, bit,count=5,indent=2,pos=none
End

Begin Message, REV Information Rec 12 [IMSI] Rsp, BitPack, OTTSName=CMsgRevInfoIMSI
    IMSI_CLASS, bit,count=1,indent=2,pos=none
    IMSI_ADDR_NUM, bit,count=3,indent=2,pos=none
    MCC_O, bit,count=10,indent=2,pos=none
    IMSI_O_11_12, bit,count=7,indent=2,pos=none
    IMSI_O_S, bit,count=34,indent=2,base=16,pos=none
    RESERVED, bit,count=1,indent=2,pos=none
End

Begin Message, REV Information Rec 13 [ESN] Rsp, BitPack, OTTSName=CMsgRevInfoESN
    ESN, bit,count=32,indent=2,pos=none
End

Begin Message, REV Information Rec 14 [Band Class Information] Rsp, BitPack, OTTSName=CMsgRevInfoBandClassInfo
    BAND_CLASS_0, bit,count=1,indent=2,pos=none
    BAND_CLASS_1, bit,count=1,indent=2,pos=none
    BAND_CLASS_2, bit,count=1,indent=2,pos=none
    BAND_CLASS_3, bit,count=1,indent=2,pos=none
    BAND_CLASS_4, bit,count=1,indent=2,pos=none
    BAND_CLASS_5, bit,count=1,indent=2,pos=none
    BAND_CLASS_6, bit,count=1,indent=2,pos=none
    BAND_CLASS_7, bit,count=1,indent=2,pos=none
    BAND_CLASS_8, bit,count=1,indent=2,noexist=0,pos=none
    BAND_CLASS_9, bit,count=1,indent=2,noexist=0,pos=none
    BAND_CLASS_10, bit,count=1,indent=2,noexist=0,pos=none
    BAND_CLASS_11, bit,count=1,indent=2,noexist=0,pos=none
    BAND_CLASS_12, bit,count=1,indent=2,noexist=0,pos=none
    BAND_CLASS_13, bit,count=1,indent=2,noexist=0,pos=none
    BAND_CLASS_14, bit,count=1,indent=2,noexist=0,pos=none
    BAND_CLASS_15, bit,count=1,indent=2,noexist=0,pos=none
End

Begin Message, REV Information Rec 15 [Power Class Information] Rsp, BitPack, OTTSName=CMsgRevInfoPowerClassInfo
    MAX_EIRP, bit,count=8,indent=2,pos=none
End

Begin Message, REV Information Rec 16 [Operating Mode Information] Rsp, BitPack, OTTSName=CMsgRevInfoOperatingModeInfo
    OP_MODE0, bit,count=1,indent=2,pos=none
    OP_MODE1, bit,count=1,indent=2,pos=none
    OP_MODE2, bit,count=1,indent=2,pos=none
    OP_MODE3, bit,count=1,indent=2,pos=none
    OP_MODE4, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=3,indent=2,noexist=0,exist=(GBL_PREV < 4),pos=none
    OP_MODE5, bit,count=1,indent=2,noexist=0,exist=(GBL_PREV > 3),pos=none
    OP_MODE6, bit,count=1,indent=2,noexist=0,exist=(GBL_PREV > 3),pos=none
    RESERVED, bit,count=1,indent=2,noexist=0,exist=(GBL_PREV > 3),pos=none
End

Begin Message, REV Information Rec 17 [Service Option Information] Rsp, BitPack, OTTSName=CMsgRevInfoServiceOptionInfo
    Rec, record, type = REV Info Service Option Rec, maxsize = 50, size = end, indent = 2
End

Begin Record, REV Info Service Option Rec, BitPack, OTTSName=CMsgRevInfoServiceOption
    RESERVED, bit,count=6,indent=2,pos=none
    FORWARD_SUPPORT, bit,count=1,indent=2,pos=none
    REVERSE_SUPPORT, bit,count=1,indent=2,pos=none
    SERVICE_OPTION, bit,count=16,indent=2,pos=none
End

Begin Message, REV Information Rec 18 [Multiplex Option Information] Rsp, BitPack, OTTSName=CMsgRevInfoMultiplexOptionInfo
    Rec, record, type = REV Info Multiplex Option Rec, maxsize = 20, size = end, indent = 2
End

Begin Record, REV Info Multiplex Option Rec, BitPack, OTTSName=CMsgRevInfoMultiplexOption
    MULTIPLEX_OPTION, bit,count=16,indent=2,pos=none
    FOR_RATES, bit,count=8,indent=2,pos=none
    REV_RATES, bit,count=8,indent=2,pos=none
End

Begin Message, REV Information Rec 19 [Service Configuration] Rsp, BitPack, OTTSName=CMsgRevInfoServiceConfig
    FOR_MUX_OPTION, bit,count=16,indent=2,pos=none
    REV_MUX_OPTION, bit,count=16,indent=2,pos=none
    FOR_RATES, bit,count=8,indent=2,pos=none
    REV_RATES, bit,count=8,indent=2,pos=none
    NUM_CON_REC, bit,count=8,indent=2,pos=none
    Rec1, record, type = REV Info Rec Service Config Rec, maxsize = 40, size = NUM_CON_REC, indent = 2
    FCH_CC_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    FCH_FRAME_SIZE, bit,count=1,indent=2,exist=((FCH_CC_INCL == 1)) && (GBL_PREV >5),pos=none
    FOR_FCH_RC, bit,count=5,indent=2,exist=((FCH_CC_INCL == 1)) && (GBL_PREV >5),pos=none
    REV_FCH_RC, bit,count=5,indent=2,exist=((FCH_CC_INCL == 1)) && (GBL_PREV >5),pos=none
    DCCH_CC_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    DCCH_FRAME_SIZE, bit,count=2,indent=2,exist=((DCCH_CC_INCL == 1)) && (GBL_PREV >5),pos=none
    FOR_DCCH_RC, bit,count=5,indent=2,exist=((DCCH_CC_INCL == 1)) && (GBL_PREV >5),pos=none
    REV_DCCH_RC, bit,count=5,indent=2,exist=((DCCH_CC_INCL == 1)) && (GBL_PREV >5),pos=none
    FOR_SCH_CC_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    NUM_FOR_SCH, bit,count=2,indent=2,exist=((FOR_SCH_CC_INCL == 1)) && (GBL_PREV >5),pos=none
    Rec2, record,type=REV Info Rec FOR SCH Rec,maxsize=20,size=NUM_FOR_SCH,exist=((FOR_SCH_CC_INCL == 1)) && (GBL_PREV >5),indent=2
    REV_SCH_CC_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    NUM_REV_SCH, bit,count=2,indent=2,exist=((REV_SCH_CC_INCL == 1)) && (GBL_PREV >5),pos=none
    Rec3, record,type=REV Info Rec REV SCH Rec,maxsize=20,size=NUM_REV_SCH,exist=((REV_SCH_CC_INCL == 1)) && (GBL_PREV >5),indent=2
    FCH_DCCH_MUX_OPTION_IND, bit,count=2,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 7),pos=none
    FCH_DCCH_MUX_OPTION, bit,count=16,indent=2,exist=((FCH_DCCH_MUX_OPTION_IND==3)) && ((GBL_PREV >5) && (GBL_PREV > 7)),pos=none
    REV_DCCH_MUX_OPTION, bit,count=16,indent=2,exist=((FCH_DCCH_MUX_OPTION_IND==3)) && ((GBL_PREV >5) && (GBL_PREV > 7)),pos=none
    FOR_PDCH_CC_INCL, bit,count=1,indent=2,exist=((GBL_PREV >5) && (GBL_PREV > 7)) && (GBL_PREV > 8),pos=none
    FOR_PDCH_MUX_OPTION, bit,count=16,indent=2,exist=((FOR_PDCH_CC_INCL==1)) && (((GBL_PREV >5) && (GBL_PREV > 7)) && (GBL_PREV > 8)),pos=none
    FOR_PDCH_RC, bit,count=5,indent=2,exist=((FOR_PDCH_CC_INCL==1)) && (((GBL_PREV >5) && (GBL_PREV > 7)) && (GBL_PREV > 8)),pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV >5,pos=none
End

Begin Record, REV Info Rec Service Config Rec, BitPack, OTTSName=CMsgRevInfoRecServiceConfig
    RECORD_LEN, bit,count=8,indent=2,pos=none
    CON_REF, bit,count=8,indent=2,pos=none
    SERVICE_OPTION, bit,count=16,indent=2,pos=none
    FOR_TRAFFIC, bit,count=4,indent=2,pos=none
    REV_TRAFFIC, bit,count=4,indent=2,pos=none
    UI_ENCRYPT_MODE, bit,count=3,indent=2,exist=GBL_PREV>5,pos=none
    SR_ID, bit,count=3,indent=2,exist=GBL_PREV>5,pos=none
    RLP_INFO_INCL, bit,count=1,indent=2,exist=GBL_PREV>5,pos=none
    RLP_BLOB_LEN, bit,count=4,indent=2,exist=(RLP_INFO_INCL == 1 && GBL_PREV>5),pos=none
    Rec, record, type = MS RLP BLOB Rec, maxsize = 1, size = 1, exist = (RLP_INFO_INCL == 1 && GBL_PREV>5), indent = 2
    QOS_PARMS_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    QOS_PARMS_LEN, bit,count=5,indent=2,exist=((QOS_PARMS_INCL)) && (GBL_PREV > 6),pos=none
    QOS_PARMS_REC, record,maxsize=16,size=QOS_PARMS_LEN,type=QOS_PARMS Rec,exist=((QOS_PARMS_INCL)) && (GBL_PREV > 6)
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, MS RLP BLOB Rec, BitPack
    RLP_BLOB_TYPE, bit,count=3,indent=2,pos=none
    RLP_VERSION, bit,count=3,indent=2,pos=none
    INIT_VAR, bit,count=1,indent=2,pos=none
    MAX_MS_NAK_ROUNDS_FWD, bit,count=3,indent=2,pos=none
    MAX_MS_NAK_ROUNDS_REV, bit,count=3,indent=2,pos=none
    NAK_ROUNDS_FWD, bit,count=3,indent=2,pos=none
    NAK_ROUNDS_REV, bit,count=3,indent=2,pos=none
    NAK_PER_ROUND_FWD_1, bit,count=3,indent=2,exist=(NAK_ROUNDS_FWD>0),pos=none
    NAK_PER_ROUND_FWD_2, bit,count=3,indent=2,exist=(NAK_ROUNDS_FWD>1),pos=none
    NAK_PER_ROUND_FWD_3, bit,count=3,indent=2,exist=(NAK_ROUNDS_FWD>2),pos=none
    NAK_PER_ROUND_FWD_4, bit,count=3,indent=2,exist=(NAK_ROUNDS_FWD>3),pos=none
    NAK_PER_ROUND_FWD_5, bit,count=3,indent=2,exist=(NAK_ROUNDS_FWD>4),pos=none
    NAK_PER_ROUND_FWD_6, bit,count=3,indent=2,exist=(NAK_ROUNDS_FWD>5),pos=none
    NAK_PER_ROUND_FWD_7, bit,count=3,indent=2,exist=(NAK_ROUNDS_FWD>6),pos=none
    NAK_PER_ROUND_REV_1, bit,count=3,indent=2,exist=(NAK_ROUNDS_REV>0),pos=none
    NAK_PER_ROUND_REV_2, bit,count=3,indent=2,exist=(NAK_ROUNDS_REV>1),pos=none
    NAK_PER_ROUND_REV_3, bit,count=3,indent=2,exist=(NAK_ROUNDS_REV>2),pos=none
    NAK_PER_ROUND_REV_4, bit,count=3,indent=2,exist=(NAK_ROUNDS_REV>3),pos=none
    NAK_PER_ROUND_REV_5, bit,count=3,indent=2,exist=(NAK_ROUNDS_REV>4),pos=none
    NAK_PER_ROUND_REV_6, bit,count=3,indent=2,exist=(NAK_ROUNDS_REV>5),pos=none
    NAK_PER_ROUND_REV_7, bit,count=3,indent=2,exist=(NAK_ROUNDS_REV>6),pos=none
    DELAY_DETECTION_WINDOW, bit,count=8,indent=2,exist=(RLP_BLOB_TYPE == 2),pos=none
    REXMIT_TIMER, bit,count=8,indent=2,exist=(RLP_BLOB_TYPE == 2),pos=none
    BLOB_RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, REV Info Rec FOR SCH Rec, BitPack, OTTSName=CMsgRevInfoRecForSch
    FOR_SCH_ID, bit,count=2,indent=2,pos=none
    FOR_SCH_MUX, bit,count=16,indent=2,pos=none
    SCH_CC_Rec, record, type = REV Info Rec SCH_CC Rec, maxsize = 1, indent = 2
End

Begin Record, REV Info Rec SCH_CC Rec, BitPack, OTTSName=CMsgRevInfoRecSchCC
    SCH_REC_LEN, bit,count=4,indent=2,pos=none
    SCH_RC, bit,count=5,indent=2,pos=none
    CODING, bit,count=1,indent=2,pos=none
    FRAME_40_USED, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    FRAME_80_USED, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    MAX_RATE, bit,count=4,indent=2,exist=GBL_PREV > 6,pos=none
    RESERVED, bit,count=6,indent=2,exist=GBL_PREV < 7,pos=none
End

Begin Record, REV Info Rec REV SCH Rec, BitPack, OTTSName=CMsgRevInfoRecRevSch
    REV_SCH_ID, bit,count=2,indent=2,pos=none
    REV_SCH_MUX, bit,count=16,indent=2,pos=none
    SCH_CC_Rec, record, type = REV Info Rec SCH_CC Rec, maxsize = 1, indent = 2
End

Begin Message, REV Information Rec 20 [Called Party Subaddress] Rsp, BitPack, OTTSName=CMsgRevInfoCalledPartySubaddress
    EXTENSION_BIT, bit,count=1,indent=2,pos=none
    SUBADDRESS_TYPE, bit,count=3,indent=2,base=enum:0 NASP/2 Userspecified,pos=none
    ODD_EVEN_INDICATOR, bit,count=1,indent=2,base=enum:0 Even/1 Odd,pos=none
    RESERVED, bit,count=3,indent=2,pos=none
    CHARi, array, type = uint8, maxsize = 100, size = end, indent = 2
End

Begin Message, REV Information Rec 21 [Calling Party Subaddress] Rsp, BitPack, OTTSName=CMsgRevInfoCallingPartySubaddress
    EXTENSION_BIT, bit,count=1,indent=2,pos=none
    SUBADDRESS_TYPE, bit,count=3,indent=2,base=enum:0 NASP/2 Userspecified,pos=none
    ODD_EVEN_INDICATOR, bit,count=1,indent=2,base=enum:0 Even/1 Odd,pos=none
    RESERVED, bit,count=3,indent=2,pos=none
    CHARi, array, type = uint8, maxsize = 100, size = end, indent = 2
End

Begin Message, REV Information Rec 22 [Connected Subaddress] Rsp, BitPack, OTTSName=CMsgRevInfoConnectedSubaddress
    EXTENSION_BIT, bit,count=1,indent=2,pos=none
    SUBADDRESS_TYPE, bit,count=3,indent=2,base=enum:0 NASP/2 Userspecified,pos=none
    ODD_EVEN_INDICATOR, bit,count=1,indent=2,base=enum:0 Even/1 Odd,pos=none
    RESERVED, bit,count=3,indent=2,pos=none
    CHARi, array, type = uint8, maxsize = 100, size = end, indent = 2
End

Begin Message, REV Information Rec 23 [Power Control Information] Rsp, BitPack, OTTSName=CMsgRevInfoPowerControlInfo
    MIN_PWR_CNTL_STEP, bit,count=3,indent=2,pos=none
    RESERVED, bit,count=5,indent=2,pos=none
End

Begin Message, REV Information Rec 24 [IMSI_M] Rsp, BitPack, OTTSName=CMsgRevInfoIMSI_M
    IMSI_M_CLASS, bit,count=1,indent=2,pos=none
    IMSI_M_ADDR_NUM, bit,count=3,indent=2,pos=none
    MCC_M, bit,count=10,indent=2,pos=none
    IMSI_M_11_12, bit,count=7,indent=2,pos=none
    IMSI_M_S, bit,count=34,indent=2,base=16,pos=none
    RESERVED, bit,count=1,indent=2,pos=none
End

Begin Message, REV Information Rec 25 [IMSI_T] Rsp, BitPack, OTTSName=CMsgRevInfoIMSI_T
    IMSI_T_CLASS, bit,count=1,indent=2,pos=none
    IMSI_T_ADDR_NUM, bit,count=3,indent=2,pos=none
    MCC_T, bit,count=10,indent=2,pos=none
    IMSI_T_11_12, bit,count=7,indent=2,pos=none
    IMSI_T_S, bit,count=34,indent=2,base=16,pos=none
    RESERVED, bit,count=1,indent=2,pos=none
End

Begin Message, REV Information Rec 26 [Capability Information] Rsp, BitPack, OTTSName=CMsgRevInfoCapabilityInfo
    ACCESS_ENTRY_HO, bit,count=1,indent=2,pos=none
    ACCESS_PROBE_HO, bit,count=1,indent=2,pos=none
    ANALOG_SEARCH, bit,count=1,indent=2,pos=none
    HOPPING_BEACON, bit,count=1,indent=2,pos=none
    MAHHO, bit,count=1,indent=2,pos=none
    PUF, bit,count=1,indent=2,pos=none
    ANALOG_553A, bit,count=1,indent=2,pos=none
    QPCH, bit,count=1,indent=2,pos=none
    SLOTTED_TIMER, bit,count=1,indent=2,pos=none
    CHS_SUPPORTED, bit,count=1,indent=2,pos=none
    GATING_RATE_SET, bit,count=2,indent=2,base=enum:1 [1]/2 [1 + half]/3 [1 + half + quater],exist=(CHS_SUPPORTED == 1),pos=none
    EXT_CAP_INCLUDED, bit,count=1,indent=2,pos=none
    MABO, bit,count=1,indent=2,exist=(EXT_CAP_INCLUDED == 1),pos=none
    SDB, bit,count=1,indent=2,exist=(EXT_CAP_INCLUDED == 1),pos=none
    RLP_CAP_BLOB_LEN, bit,count=3,indent=2,pos=none
    RLP_MAX_MS_NAK_ROUNDS_FWD, bit,count=3,indent=2,exist=(RLP_CAP_BLOB_LEN != 0),pos=none
    RLP_MAX_MS_NAK_ROUNDS_REV, bit,count=3,indent=2,exist=(RLP_CAP_BLOB_LEN != 0),pos=none
    RLP_BLOB_RESERVED, bit,count=2,indent=2,exist=(RLP_CAP_BLOB_LEN != 0),pos=none
    FLEX_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    F_FCH_FLEX_SUPPORTED, bit,count=1,indent=2,exist=(FLEX_SUPPORTED==1),noexist=Not included,pos=none
    R_FCH_FLEX_SUPPORTED, bit,count=1,indent=2,exist=(FLEX_SUPPORTED==1),noexist=Not included,pos=none
    F_DCCH_FLEX_SUPPORTED, bit,count=1,indent=2,exist=(FLEX_SUPPORTED==1),noexist=Not included,pos=none
    R_DCCH_FLEX_SUPPORTED, bit,count=1,indent=2,exist=(FLEX_SUPPORTED==1),noexist=Not included,pos=none
    F_SCH_FLEX_SUPPORTED, bit,count=1,indent=2,exist=(FLEX_SUPPORTED==1),noexist=Not included,pos=none
    R_SCH_FLEX_SUPPORTED, bit,count=1,indent=2,exist=(FLEX_SUPPORTED==1),noexist=Not included,pos=none
    VAR_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    F_SCH_VAR_SUPPORTED, bit,count=1,indent=2,exist=(VAR_SUPPORTED==1),noexist=Not included,pos=none
    R_SCH_VAR_SUPPORTED, bit,count=1,indent=2,exist=(VAR_SUPPORTED==1),noexist=Not included,pos=none
    MAX_SUM_NUM_BITS_C, bit,count=16,indent=2,exist=(F_SCH_VAR_SUPPORTED==1),noexist=Not included,pos=none
    MAX_SUM_NUM_BITS_T, bit,count=16,indent=2,exist=(F_SCH_VAR_SUPPORTED==1),noexist=Not included,pos=none
    CS_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    F_SCH_LTU_TAB_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    R_SCH_LTU_TAB_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    ERAM_SUPPORTED, bit,count=1,indent=2,exist=(FLEX_SUPPORTED==1 || VAR_SUPPORTED==1)&&(GBL_PREV > 7),noexist=Not included,pos=none
    PDCH_CHM_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    REV_FCH_GATING_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    RER_MODE_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    ADD_NUM_SYNC_ID_INCL, bit,count=1,indent=2,noexist=Not included,pos=none
    ADD_NUM_SYNC_ID, bit,count=1,indent=2,exist=(ADD_NUM_SYNC_ID_INCL==1),noexist=Not included,pos=none
    RSC_MODE_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    TKZ_MODE_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    F_SCH_EARLY_TERM_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    RPCPOWER_CONTROL_MODE_01_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    F_SCH_DELAYED_ARQ_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    R_SCH_DELAYED_ARQ_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    SO_73_OP_0_SUPPORTED, bit,count=1,indent=2,noexist=Not included,pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, REV Information Rec 27 [Channel Configuration Cap] Rsp, BitPack, OTTSName=CMsgRevInfoChannelConfigurationCap
    OTD_SUPPORTED, bit,count=1,indent=2,pos=none
    FCH_SUPPORTED, bit,count=1,indent=2,pos=none
    FCH_Rec, record, type = REV Info FCH Rec, exist = (FCH_SUPPORTED == 1), maxsize = 1, indent = 2
    DCCH_SUPPORTED, bit,count=1,indent=2,pos=none
    DCCH_Rec, record, type = REV Info DCCH Rec, exist = (DCCH_SUPPORTED == 1), maxsize = 1, indent = 2
    FOR_SCH_SUPPORTED, bit,count=1,indent=2,pos=none
    FOR_SCH_Rec, record, type = REV Info FOR SCH Rec, exist = (FOR_SCH_SUPPORTED == 1), maxsize = 1, indent = 2
    REV_SCH_SUPPORTED, bit,count=1,indent=2,pos=none
    REV_SCH_Rec, record, type = REV Info REV SCH Rec, exist = (REV_SCH_SUPPORTED == 1), maxsize = 1, indent = 2
    RESERVED_1, bit,count=2,indent=2,exist=(FOR_SCH_SUPPORTED == 0) && (REV_SCH_SUPPORTED == 0),pos=none
    STS_SUPPORTED, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    _3X_CCH_SUPPORTED, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    CCSH_SUPPORTED, bit,count=1,indent=2,exist=((FOR_SCH_SUPPORTED==1)) && ((GBL_PREV > 6) && (GBL_PREV > 8)),pos=none
    FOR_PDCH_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6) && (GBL_PREV > 8),pos=none
    FOR_PDCH_REC, record,type=REV Info FOR PDCH Rec,exist=((FOR_PDCH_SUPPORTED==1)) && ((GBL_PREV > 6) && (GBL_PREV > 8)),maxsize=1
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, REV Info FOR SCH Rec, BitPack, OTTSName=CMsgRevInfoForSch
    FOR_RC_MAP, record, type = REV Info FOR RC Map Rec, maxsize = 1, indent = 2
    FOR_SCH_NUM, bit,count=2,indent=2,pos=none
    Rec, record, type = REV Info FOR SCH Specific Rec, maxsize = 4, size = FOR_SCH_NUM, indent = 2
End

Begin Record, REV Info FOR SCH Specific Rec, BitPack, OTTSName=CMsgRevInfoForSchSpecific
    FOR_TURBO_SUPPORTED, bit,count=1,indent=2,pos=none
    FOR_MAX_TURBO_BLOCK_SIZE, bit,count=4,exist=(FOR_TURBO_SUPPORTED == 1),indent=2,pos=none
    FOR_CONV_SUPPORTED, bit,count=1,indent=2,pos=none
    FOR_MAX_CONV_BLOCK_SIZE, bit,count=4,exist=(FOR_CONV_SUPPORTED == 1),indent=2,pos=none
    RESERVED, bit,count=6,indent=2,exist=(GBL_PREV < 7),pos=none
    FOR_FRAME_40_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    FOR_FRAME_80_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    FOR_MAX_RATE, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, REV Info REV SCH Rec, BitPack, OTTSName=CMsgRevInfoRevSch
    REV_RC_MAP, record, type = REV Info REV RC Map Rec, maxsize = 1, indent = 2
    REV_SCH_NUM, bit,count=2,indent=2,pos=none
    Rec, record, type = REV Info REV SCH Specific Rec, maxsize = 4, size = REV_SCH_NUM, indent = 2
End

Begin Record, REV Info REV SCH Specific Rec, BitPack, OTTSName=CMsgRevInfoRevSchSpecific
    REV_TURBO_SUPPORTED, bit,count=1,indent=2,pos=none
    REV_MAX_TURBO_BLOCK_SIZE, bit,count=4,exist=(REV_TURBO_SUPPORTED == 1),indent=2,pos=none
    REV_CONV_SUPPORTED, bit,count=1,indent=2,pos=none
    REV_MAX_CONV_BLOCK_SIZE, bit,count=4,exist=(REV_CONV_SUPPORTED == 1),indent=2,pos=none
    RESERVED, bit,count=6,indent=2,exist=(GBL_PREV < 7),pos=none
    REV_FRAME_40_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    REV_FRAME_80_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    REV_MAX_RATE, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Message, REV Information Rec 28 [Extended Multiplex Option] Rsp, BitPack, OTTSName=CMsgRevInfoExtendedMultiplexOption
    NUM_MO_FOR_FCH, bit,count=4,indent=2,pos=none
    Rec1, record, type = REV Info MO FOR FCH Rec, maxsize = 100, size = NUM_MO_FOR_FCH, indent = 2,exist=(NUM_MO_FOR_FCH!=0)
    NUM_MO_REV_FCH, bit,count=4,indent=2,pos=none
    Rec2, record, type = REV Info MO REV FCH Rec, maxsize = 100, size = NUM_MO_REV_FCH, indent = 2,exist=(NUM_MO_REV_FCH!=0)
    NUM_MO_FOR_DCCH, bit,count=4,indent=2,pos=none
    Rec3, record, type = REV Info MO FOR DCCH Rec, maxsize = 100, size = NUM_MO_FOR_DCCH, indent = 2,exist=(NUM_MO_FOR_DCCH!=0)
    NUM_MO_REV_DCCH, bit,count=4,indent=2,pos=none
    Rec4, record, type = REV Info MO REV DCCH Rec, maxsize = 100, size = NUM_MO_REV_DCCH, indent = 2,exist=(NUM_MO_REV_DCCH!=0)
    NUM_MO_FOR_SCH, bit,count=4,indent=2,pos=none
    Rec5, record, type = REV Info MO FOR SCH Rec, maxsize = 100, size = NUM_MO_FOR_SCH, indent = 2,exist=(NUM_MO_FOR_SCH!=0)
    NUM_MO_REV_SCH, bit,count=4,indent=2,pos=none
    Rec6, record, type = REV Info MO REV SCH Rec, maxsize = 100, size = NUM_MO_REV_SCH, indent = 2,exist=(NUM_MO_REV_SCH!=0)
    NUM_MO_FOR_PDCH, bit,count=4,indent=2,exist=GBL_PREV > 8,pos=none
    Rec7, record,type=REV Info MO FOR PDCH Rec,maxsize=100,size=NUM_MO_FOR_PDCH,indent=2,exist=((NUM_MO_FOR_PDCH!=0)) && (GBL_PREV > 8)
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, REV Info MO FOR FCH Rec, BitPack, OTTSName=CMsgRevInfoMoForFch
    MO_FOR_FCH, bit,count=16,indent=2,pos=none
    FOR_RATES_FCH, bit,count=8,indent=2,pos=none
End

Begin Record, REV Info MO REV FCH Rec, BitPack, OTTSName=CMsgRevInfoMoRevFch
    MO_REV_FCH, bit,count=16,indent=2,pos=none
    REV_RATES_FCH, bit,count=8,indent=2,pos=none
End

Begin Record, REV Info MO FOR DCCH Rec, BitPack, OTTSName=CMsgRevInfoMoForDCCH
    MO_FOR_DCCH, bit,count=16,indent=2,pos=none
End

Begin Record, REV Info MO REV DCCH Rec, BitPack, OTTSName=CMsgRevInfoMoRevDCCH
    MO_REV_DCCH, bit,count=16,indent=2,pos=none
End

Begin Record, REV Info MO FOR SCH Rec, BitPack, OTTSName=CMsgRevInfoMoForSch
    FOR_SCH_ID, bit,count=1,indent=2,pos=none
    MO_FOR_SCH, bit,count=16,indent=2,pos=none
End

Begin Record, REV Info MO REV SCH Rec, BitPack, OTTSName=CMsgRevInfoMoRevSch
    REV_SCH_ID, bit,count=1,indent=2,pos=none
    MO_REV_SCH, bit,count=16,indent=2,pos=none
End

Begin Record, REV Info MO FOR PDCH Rec, BitPack, OTTSName=CMsgRevInfoMoRevPdch
    MO_FOR_PDCH, bit,count=16,indent=2,pos=none
End

Begin Message, REV Information Rec 29 [Reserved4] Rsp, BitPack, OTTSName=CMsgRevInfoReserved4
End

Begin Message, REV Information Rec 30 [Geo-location Information] Rsp, BitPack, OTTSName=CMsgRevInfoGeoLocationInfo
    GEO_LOC, bit,count=3,indent=2,base=enum:Geo_location Type Enum,pos=none
    RESERVED, bit,count=5,indent=2,pos=none
End

Begin Message, REV Information Rec 31 [Band Subclass Information] Rsp, BitPack, OTTSName=CMsgRevInfoBandSubclassInfo
    BAND_SUBCLASS_INFO, array, type = uint8, maxsize = 100, size = ..\RECORD_LEN, indent = 2
End

Begin Message, REV Information Rec 32 [GLB Emergency Call] Rsp, BitPack, OTTSName=CMsgRevInfoGLBEmergCall
    NUM_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    DIGIT_MODE, bit,count=1,indent=2,base=enum:0 DTMF/1 ASCII,exist=((GBL_PREV > 6)) && ((NUM_INCL == 1)),pos=none
    NUMBER_TYPE, bit,count=3,indent=2,base=enum:Number Types Enum,exist=((GBL_PREV > 6)) && ((NUM_INCL == 1)),pos=none
    NUMBER_PLAN, bit,count=4,indent=2,base=enum:Number Plan Enum,exist=((GBL_PREV > 6)) && ((NUM_INCL == 1)),pos=none
    NUM_CHAR, bit,count=8,indent=2,exist=((GBL_PREV > 6)) && ((NUM_INCL == 1)),pos=none
    CHARi4, record,type=Char4 List Rec,maxsize=100,exist=((DIGIT_MODE == 0)) && (((GBL_PREV > 6)) && ((NUM_INCL == 1))),size=NUM_CHAR,indent=2
    CHARi8, record,type=Char8 List Rec,maxsize=100,exist=((DIGIT_MODE == 1)) && (((GBL_PREV > 6)) && ((NUM_INCL == 1))),size=NUM_CHAR,indent=2
    MS_ORIG_POS_LOC_IND, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    Reserved, bit,count=-8,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Message, REV Information Rec 33 [Hook Status] Rsp, BitPack, OTTSName=CMsgRevInfoHookStatus
    HOOK_STATUS, bit,count=4,base=enum:HOOK_STATUS Values Enum,indent=2,exist=(GBL_PREV > 6),pos=none
    Reserved, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Message, REV Information Rec 34 [QoS Parameters] Rsp, BitPack, OTTSName=CMsgRevInfoQoSPara
    QoS_Para, record,maxsize=16,size=(..\RECORD_LEN),type=QOS_PARMS Rec,exist=(GBL_PREV > 6)
End

Begin Message, REV Information Rec 35 [Encryption Cap] Rsp, BitPack, OTTSName=CMsgRevInfoEncryCap
    SIG_ENCRYPT_SUP, record,type=csch SIG_ENCRYPT_SUP Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    UI_ENCRYPT_SUP, bit,count=8,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Message, REV Information Rec 36 [Sig MSG Integrity Cap] Rsp, BitPack, OTTSName=CMsgRevInfoSigIntegrityCap
    SIG_ENCRYPT_SUP, bit,count=8,indent=2,exist=(GBL_PREV > 8),pos=none
End

Begin Message, REV Information Rec 39 [MEID] Rsp, BitPack, OTTSName=CMsgRevInfoMEID
    MEID_LENGTH, bit,count=4,indent=2,pos=none
    MEID, array, type = uint8, maxsize = 16, size = MEID_LENGTH, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, Access Msg Rec AC - TMSI Assignment Completion Rsp, BitPack, OTTSName=CMsgAccessTMSIAssignmentCompletion
End

Begin Message, Access Msg Rec AC - PACA Cancel Rsp, BitPack, OTTSName=CMsgAccessPACACancel
End

Begin Message, Access Msg Rec AC - Extended Status Response Rsp, BitPack, OTTSName=CMsgAccessExtStatusRsp
    QUAL_Rec, record, type = Qual Info Rec, maxsize = 1, indent = 2
    NUM_INFO_RECORDS, bit,count=4,indent=2,pos=none
    INFO_Rec, record, type = REV Information Rec, maxsize = 100, size = NUM_INFO_RECORDS, indent = 2
End

Begin Message, Access Msg Rec AC - Device Information Rsp, BitPack, OTTSName=CMsgACDeviceInformation
    WLL_DEVICE_TYPE, bit, count=3,indent=2,base=enum:WLL_DEVICE Types Enum,exist=GBL_PREV > 6,pos=none
    NUM_INFO_RECORDS, bit,count=5,indent=2,exist=GBL_PREV > 6,pos=none
    INFO_Rec, record,type=REV Information Rec,maxsize=100,size=NUM_INFO_RECORDS,indent=2,exist=GBL_PREV > 6
End

Begin Message, Access Msg Rec AC - Security Mode Request Rsp, BitPack, OTTSName=CMsgACSecurityModeReq
    UI_ENC_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    UI_ENCRYPT_SUP, bit, count=8,indent=2,exist=((UI_ENC_INCL == 1)) && (GBL_PREV > 6),pos=none
    SIG_ENC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    SIG_ENCRYPT_SUP, record,type=csch SIG_ENCRYPT_SUP Rec,maxsize=1,indent=2,exist=((SIG_ENC_INCL == 1)) && (GBL_PREV > 6)
    C_SIG_ENCRYPT_REQ, bit, count=1,indent=2,exist=((SIG_ENC_INCL == 1)) && (GBL_PREV > 6),pos=none
    ENC_SEQ_H_INCL, bit, count=1,indent=2,exist=(GBL_PREV > 6) && (GBL_PREV < 9),pos=none
    ENC_SEQ_H, bit, count=24,indent=2,exist=((ENC_SEQ_H_INCL== 1)) && ((GBL_PREV > 6) && (GBL_PREV < 9)),pos=none
    ENC_SEQ_H_SIG, bit, count=8,indent=2,exist=((ENC_SEQ_H_INCL == 1)) && ((GBL_PREV > 6) && (GBL_PREV < 9)),pos=none
    NEW_SSEQ_H_INCL, bit, count=1,indent=2,exist=(GBL_PREV > 6) && (GBL_PREV > 8),pos=none
    NEW_SSEQ_H, bit, count=24,indent=2,exist=((NEW_SSEQ_H_INCL == 1)) && ((GBL_PREV > 6) && (GBL_PREV > 8)),pos=none
    NEW_SSEQ_H_SIG, bit, count=8,indent=2,exist=((NEW_SSEQ_H_INCL == 1)) && ((GBL_PREV > 6) && (GBL_PREV > 8)),pos=none
    MSG_INT_INFO_INCL, bit, count=1,indent=2,exist=(GBL_PREV > 6) && (GBL_PREV > 8),pos=none
    SIG_INTEGRITY_SUP_INCL, bit, count=1,indent=2,exist=((MSG_INT_INFO_INCL == 1)) && ((GBL_PREV > 6) && (GBL_PREV > 8)),pos=none
    SIG_INTEGRITY_SUP, bit, count=8,indent=2,exist=((SIG_INTEGRITY_SUP_INCL == 1 && MSG_INT_INFO_INCL == 1)) && ((GBL_PREV > 6) && (GBL_PREV > 8)),pos=none
    SIG_INTEGRITY_REQ, bit,count=3,indent=2,exist=((SIG_INTEGRITY_SUP_INCL == 1 && MSG_INT_INFO_INCL == 1)) && ((GBL_PREV > 6) && (GBL_PREV > 8)),pos=none
End

Begin Message, Access Msg Rec AC - Data Burst Response Rsp, BitPack, OTTSName=CMsgACDataBurstResponse
    Data, array, type=uint8, maxsize=200, size=End, indent=3
End

Begin Message, Access Msg Rec AC - RR-level Registration Rsp, BitPack, OTTSName=CMsgACRRLevelRegistration
    Data, array, type=uint8, maxsize=200, size=End, indent=3
End

Begin Message, Access Msg Rec AC - MC-MAP Initial L3 Rsp, BitPack, OTTSName=CMsgACMcMapInitialL3
    Data, array, type=uint8, maxsize=200, size=End, indent=3
End

Begin Message, Access Msg Rec AC - MC-MAP L3 Rsp, BitPack, OTTSName=CMsgACMcMapL3
    Data, array, type=uint8, maxsize=200, size=End, indent=3
End

Begin Message, Access Msg Rec AC - MC-MAP RRC Connection Request Rsp, BitPack, OTTSName=CMsgACMcMapRrcConnectionRequest
    Data, array, type=uint8, maxsize=200, size=End, indent=3
End

Begin Message, Access Msg Rec AC - R-TMSI Assignment Completion Rsp, BitPack, OTTSName=CMsgACRTMSIAssignmentCompletion
    Data, array, type=uint8, maxsize=200, size=End, indent=3
End

Begin Message, Access Msg Rec AC - Authentication Response Rsp, BitPack, OTTSName=CMsgACAuthRsp
    RES, array,type=uint8,maxsize=16,size=16,indent=2,exist=(GBL_PREV > 8)
    SIG_INTEGRITY_SUP_INCL, bit, count=1,indent=2,exist=(GBL_PREV > 8),pos=none
    SIG_INTEGRITY_SUP, bit, count=8,indent=2,exist=((SIG_INTEGRITY_SUP_INCL == 1)) && ((GBL_PREV > 8)),pos=none
    SIG_INTEGRITY_REQ, bit, count=3,indent=2,exist=((SIG_INTEGRITY_SUP_INCL == 1)) && ((GBL_PREV > 8)),pos=none
    NEW_KEY_ID, bit, count=2,indent=2,exist=(GBL_PREV > 8),pos=none
    NEW_SSEQ_H, bit,count=24,indent=2,exist=(GBL_PREV > 8),pos=none
End

Begin Message, Access Msg Rec AC - Authentication Resynchronization Rsp, BitPack, OTTSName=CMsgACAuthResyn
    CON_MS_SQN, bit, count=48,indent=2,exist=(GBL_PREV > 8),base=16,pos=none
    MAC_S, bit,count=64,indent=2,exist=(GBL_PREV > 8),base=16,pos=none
End

Begin Message, Access Msg Rec AC - Reconnect Rsp, BitPack, OTTSName=CMsgACReconnect
    ORIG_IND, bit, count=1,indent=2,exist=(GBL_PREV > 8),pos=none
    SYNC_ID_INCL, bit, count=1,indent=2,exist=(GBL_PREV > 8),pos=none
    SYNC_ID_LEN, bit,count=4,indent=2,exist=((GBL_PREV > 8)) && ((SYNC_ID_INCL==1)),pos=none
    SYNC_ID, array,type=uint8,maxsize=15,size=SYNC_ID_LEN,exist=((SYNC_ID_LEN!=0)) && (((GBL_PREV > 8)) && ((SYNC_ID_INCL==1)))
    SERVICE_OPTION, bit, count=16,indent=2,exist=((GBL_PREV > 8)) && ((SYNC_ID_INCL==1)),pos=none
    SR_ID, bit,count=3,indent=2,exist=((ORIG_IND == 1)) && ((GBL_PREV > 8)),pos=none
End

Begin Message, CP Spy CP PE ENG_ACCESS_TR 12 1 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PE ENG_ACCESS_TR 12 2 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PE ENG_CP_TR 12 3 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PE ENG_CP_TR 12 4 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PE ENG_LAYER2_TR 13 13 Rsp, BitPack, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FORCHTYPE, uint8, globalvar=GBL_FORCHTYPE
    PREV, uint8, globalvar=GBL_PREV
    EXT_MSG_LENGTH, bit, count=1,exist=(PREV >= 7 && FORCHTYPE !=0),pos=none
    Length, bit,count=((PREV<7 ||FORCHTYPE ==0) ? 8 : ((EXT_MSG_LENGTH==0) ? 7 : 15)),pos=none
    Rec, record, type=Paging Msg Rec, maxsize=1
End

Begin Record, Paging Msg Rec, BitPack, TruncateBits = 30, OTTSName=CMsgPaging
    PD, bit,count=2,exist=GBL_PREV>6,indent=2,pos=none
    >>> Msg Id, bit,count=(GBL_PREV>6)?6:8,indent=1,base=enum:Paging Msg Enum,noexist=Null,pos=none
    Msg, union, enum=>>> Msg Id
End

Begin Message, Paging Msg Rec QPCH - Indicator Rsp
    PILOT_PN, uint16,base=10,indent=2,exist=GBL_PREV > 5
    QPCH_RATE, uint8,base=enum:0 [4800 bps]/1 [9600 bps],indent=2,exist=GBL_PREV > 5
    Indicator, uint8,base=enum:PCH/PI 1/PI 2/CCI,indent=2,exist=GBL_PREV > 5
    Position, uint16,base=10,indent=2,exist=GBL_PREV > 5
    Status, uint8,base=enum:0 [Off]/1 [On]/2 [Undefined]/3 [Erasure],indent=2,exist=GBL_PREV > 5
End

Begin Message, Paging Msg Rec PC - System Parameters Rsp, BitPack, OTTSName=CMsgPageSystemParameters
    PILOT_PN, bit,count=9,indent=2,pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,pos=none
    SID, bit,count=15,indent=2,pos=none
    NID, bit,count=16,indent=2,pos=none
    REG_ZONE, bit,count=12,indent=2,pos=none
    TOTAL_ZONES, bit,count=3,indent=2,pos=none
    ZONE_TIMER, bit,count=3,indent=2,base=enum:0 [1 Min]/1 [2 Min]/2 [5 Min]/3 [10 Min]/4 [20 Min]/5 [30 Min]/6 [45 Min]/7 [60 Min],pos=none
    MULT_SIDS, bit,count=1,indent=2,pos=none
    MULT_NIDS, bit,count=1,indent=2,pos=none
    BASE_ID, bit,count=16,indent=2,pos=none
    BASE_CLASS, bit,count=4,indent=2,pos=none
    PAGE_CHAN, bit,count=3,indent=2,pos=none
    MAX_SLOT_CYCLE_INDEX, bit,count=3,indent=2,pos=none
    HOME_REG, bit,count=1,indent=2,pos=none
    FOR_SID_REG, bit,count=1,indent=2,pos=none
    FOR_NID_REG, bit,count=1,indent=2,pos=none
    POWER_UP_REG, bit,count=1,indent=2,pos=none
    POWER_DOWN_REG, bit,count=1,indent=2,pos=none
    PARAMETER_REG, bit,count=1,indent=2,pos=none
    REG_PRD, bit,count=7,indent=2,pos=none
    BASE_LAT, bit,count=22,indent=2,pos=none
    BASE_LONG, bit,count=23,indent=2,pos=none
    REG_DIST, bit,count=11,indent=2,pos=none
    SRCH_WIN_A, bit,count=4,indent=2,pos=none
    SRCH_WIN_N, bit,count=4,indent=2,pos=none
    SRCH_WIN_R, bit,count=4,indent=2,pos=none
    NGHBR_MAX_AGE, bit,count=4,indent=2,pos=none
    PWR_REP_THRESH, bit,count=5,indent=2,pos=none
    PWR_REP_FRAMES, bit,count=4,indent=2,pos=none
    PWR_THRESH_ENABLE, bit,count=1,indent=2,pos=none
    PWR_PERIOD_ENABLE, bit,count=1,indent=2,pos=none
    PWR_REP_DELAY, bit,count=5,indent=2,pos=none
    RESCAN, bit,count=1,indent=2,pos=none
    T_ADD, bit,count=6,indent=2,pos=none
    T_DROP, bit,count=6,indent=2,pos=none
    T_COMP, bit,count=4,indent=2,pos=none
    T_TDROP, bit,count=4,indent=2,pos=none
    EXT_SYS_PARAMETER, bit,count=1,indent=2,pos=none
    EXT_NGHBR_LST, bit,count=1,indent=2,pos=none
    GEN_NGHBR_LST, bit,count=1,indent=2,exist=GBL_PREV>5,pos=none
    GLOBAL_REDIRECT, bit,count=1,indent=2,exist=GBL_PREV>5,pos=none
    PRI_NGHBR_LST, bit,count=1,indent=2,exist=GBL_PREV>5,pos=none
    USER_ZONE_ID, bit,count=1,indent=2,exist=GBL_PREV>5,pos=none
    EXT_GLOBAL_REDIRECT, bit,count=1,indent=2,exist=GBL_PREV>5,pos=none
    EXT_CHAN_LST, bit,count=1,indent=2,exist=GBL_PREV>5,pos=none
    T_TDROP_RANGE_INCL, bit,count=1,indent=2,exist=GBL_PREV>5,pos=none
    T_TDROP_RANGE, bit,count=4,indent=2,exist=((T_TDROP_RANGE_INCL)) && (GBL_PREV>5),pos=none
    NEG_SLOT_CYCLE_INDEX_SUP, bit,count=1,indent=2,exist=(((..\..\Length > 34) || (T_TDROP_RANGE_INCL==0))) && (GBL_PREV>5),pos=none
    RC_BITMAP_CAPABILITY_EXT_ALLOWED, bit,count=1,indent=2,exist=(((..\..\Length > 34) || (T_TDROP_RANGE_INCL==0))) && (GBL_PREV>5),pos=none
    CRRM_MSG_IND, bit,count=1,indent=2,exist=(((..\..\Length > 34) || (T_TDROP_RANGE_INCL==0))) && (GBL_PREV>5),pos=none
    NUM_OPT_MSG_BITS, bit,count=4,indent=2,exist=((..\..\Length > 34)) && (GBL_PREV>5),pos=none
    AP_PILOT_INFO, bit,count=1,indent=2,exist=(((..\..\Length > 34) && (NUM_OPT_MSG_BITS > 0))) && (GBL_PREV>5),pos=none
    AP_IDT, bit,count=1,indent=2,exist=(((..\..\Length > 34) && (NUM_OPT_MSG_BITS > 1))) && (GBL_PREV>5),pos=none
    AP_IDT_TEXT, bit,count=1,indent=2,exist=(((..\..\Length > 34) && (NUM_OPT_MSG_BITS > 2))) && (GBL_PREV>5),pos=none
    GEN_OVHD_INF_IND, bit,count=1,indent=2,exist=(((..\..\Length > 34) && (NUM_OPT_MSG_BITS > 3))) && (GBL_PREV>5),pos=none
    FD_CHAN_LST_IND, bit,count=1,indent=2,exist=(((..\..\Length > 34) && (NUM_OPT_MSG_BITS > 4))) && (GBL_PREV>5),pos=none
    ATIM_IND, bit,count=1,indent=2,exist=(((..\..\Length > 34) && (NUM_OPT_MSG_BITS > 5))) && (GBL_PREV>5),pos=none
    FREQ_GEN_OVHD_INF_IND, bit,count=1,indent=2,exist=(((..\..\Length > 34) && (NUM_OPT_MSG_BITS > 6))) && (GBL_PREV>5),pos=none
    GAPM_IND, bit,count=1,indent=2,exist=(((..\..\Length > 34) && (NUM_OPT_MSG_BITS > 7))) && (GBL_PREV>5),pos=none
    HDPPM_IND, bit,count=1,indent=2,exist=(((..\..\Length > 34) && (NUM_OPT_MSG_BITS > 8))) && (GBL_PREV>5),pos=none
    RESERVED, bit,count=NUM_OPT_MSG_BITS-9,indent=2,exist=(((..\..\Length > 34) && (NUM_OPT_MSG_BITS > 9))) && (GBL_PREV>5),pos=none
    APPIM_PERIOD_INDEX, bit,count=3,indent=2,exist=(((..\..\Length > 34) && (NUM_OPT_MSG_BITS > 0) && (AP_PILOT_INFO==1))) && (GBL_PREV>5),pos=none
    GEN_OVHD_CYCLE_INDEX, bit,count=3,indent=2,exist=(((..\..\Length > 34) && (NUM_OPT_MSG_BITS > 3) && (GEN_OVHD_INF_IND==1))) && (GBL_PREV>5),pos=none
    ATIM_CYCLE_INDEX, bit,count=3,indent=2,exist=(((..\..\Length > 34) && (NUM_OPT_MSG_BITS > 5) && (ATIM_IND==1))) && (GBL_PREV>5),pos=none
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Message, Paging Msg Rec PC - Access Parameters Rsp, BitPack, OTTSName=CMsgPageAccessParameters
    PILOT_PN, bit,count=9,indent=2,pos=none
    ACC_MSG_SEQ, bit,count=6,indent=2,pos=none
    ACC_CHAN, bit,count=5,indent=2,pos=none
    NOM_PWR, bit,count=4,indent=2,pos=none
    INIT_PWR, bit,count=5,indent=2,pos=none
    PWR_STEP, bit,count=3,indent=2,pos=none
    NUM_STEP, bit,count=4,indent=2,pos=none
    MAX_CAP_SZ, bit,count=3,indent=2,pos=none
    PAM_SZ, bit,count=4,indent=2,pos=none
    PSIST(0-9), bit,count=6,indent=2,pos=none
    PSIST(10), bit,count=3,indent=2,pos=none
    PSIST(11), bit,count=3,indent=2,pos=none
    PSIST(12), bit,count=3,indent=2,pos=none
    PSIST(13), bit,count=3,indent=2,pos=none
    PSIST(14), bit,count=3,indent=2,pos=none
    PSIST(15), bit,count=3,indent=2,pos=none
    MSG_PSIST, bit,count=3,indent=2,pos=none
    REG_PSIST, bit,count=3,indent=2,pos=none
    PROBE_PN_RAN, bit,count=4,indent=2,pos=none
    ACC_TMO, bit,count=4,indent=2,pos=none
    PROBE_BKOFF, bit,count=4,indent=2,pos=none
    BKOFF, bit,count=4,indent=2,pos=none
    MAX_REQ_SEQ, bit,count=4,indent=2,pos=none
    MAX_RSP_SEQ, bit,count=4,indent=2,pos=none
    AUTH, bit,count=2,indent=2,pos=none
    RAND, bit,count=32,indent=2,exist=(AUTH == 1),pos=none
    NOM_PWR_EXT, bit,count=1,indent=2,exist=(GBL_PREV==1 || GBL_PREV >5),pos=none
    PSIST_EMG_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    PSIST_EMG, bit,count=3,indent=2,exist=((PSIST_EMG_INCL == 1)) && ((GBL_PREV > 6)),pos=none
    ACCT_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    ACCT_INCL_EMG, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((ACCT_INCL == 1)),pos=none
    ACCT_AOC_BITMAP_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((ACCT_INCL == 1)),pos=none
    ACCT_SO_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((ACCT_INCL == 1)),pos=none
    NUM_ACC_SO, bit,count=4,indent=2,exist=((ACCT_SO_INCL == 1)) && (((GBL_PREV > 6)) && ((ACCT_INCL == 1))),pos=none
    ACCT_SO_Rec, record,type=ACM ACCT_SO Record,maxsize=20,size=(NUM_ACC_SO+1),indent=2,exist=((ACCT_SO_INCL==1)) && (((GBL_PREV > 6)) && ((ACCT_INCL == 1)))
    ACCT_SO_GRP_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((ACCT_INCL == 1)),pos=none
    NUM_ACCT_SO_GRP, bit,count=3,indent=2,exist=((ACCT_SO_GRP_INCL == 1)) && (((GBL_PREV > 6)) && ((ACCT_INCL == 1))),pos=none
    ACCT_SO_GRP_Rec, record,type=ACM ACCT_SO_GRP Record,maxsize=10,size=(NUM_ACCT_SO_GRP+1),indent=2,exist=((ACCT_SO_GRP_INCL==1)) && (((GBL_PREV > 6)) && ((ACCT_INCL == 1)))
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, ACM ACCT_SO Record, BitPack, OTTSName = CMsgPageACMACCT_SO
    ACCT_AOC_BITMAP1, record, type=ACCT BitMap Record, maxsize=1, indent = 2, exist = (..\ACCT_AOC_BITMAP_INCL==1)
    ACCT_SO, bit,count=16,indent=2,pos=none
End

Begin Record, ACCT BitMap Record, BitPack, OTTSName = CMsgACCTBitMap
    ACCOLC_0_1, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    ACCOLC_2_3, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    ACCOLC_4_5, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    ACCOLC_6_7, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    ACCOLC_8_9, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, ACM ACCT_SO_GRP Record, BitPack, OTTSName = CMsgPageACMACCT_SO_GRP
    ACCT_AOC_BITMAP2, record, type=ACCT BitMap Record, maxsize=1, indent = 2, exist = (..\ACCT_AOC_BITMAP_INCL==1)
    ACCT_SO_GRP, bit,count=5,indent=2,pos=none
End

Begin Message, Paging Msg Rec PC - Neighbor List Rsp, BitPack, OTTSName=CMsgPageNeighborList
    PILOT_PN, bit,count=9,indent=2,exist=GBL_PREV>5,pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,exist=GBL_PREV>5,pos=none
    PILOT_INC, bit,count=4,indent=2,exist=GBL_PREV>5,pos=none
    PILOT_Rec, record,maxsize=63,size=end,type=NHBR Neighbor Rec,indent=2,exist=GBL_PREV>5
    Data, array,type=uint8,maxsize=100,size=end,columns=60,indent=2,exist=GBL_PREV <= 5
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, NHBR Neighbor Rec, BitPack, OTTSName=CMsgPageNeighbor
    NGBR_CONFIG, bit,count=3,indent=2,exist=GBL_PREV>5,pos=none
    NGHBR_PN, bit,count=9,indent=2,exist=GBL_PREV>5,pos=none
End

Begin Message, Paging Msg Rec PC - CDMA Channel List Rsp, BitPack, OTTSName=CMsgPageCDMAChannelList
    PILOT_PN, bit,count=9,indent=2,pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,pos=none
    CDMA_FREQ, array,type=bit,count=11,maxsize=20,size=End,indent=2,pos=none
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Message, Paging Msg Rec PC - Obsolete Slotted Page Rsp, BitPack, OTTSName=CMsgPageObsoleteSlottedPage
    Data, array, type=uint8, maxsize=100, size=end, columns=60, indent = 2
End

Begin Message, Paging Msg Rec PC - Obsolete Page Rsp, BitPack, OTTSName=CMsgPageObsoletePage
    Data, array, type=uint8, maxsize=100, size=end, columns=60, indent = 2
End

Begin Message, Paging Msg Rec PC - Order Message Rsp, BitPack, OTTSName=CMsgPageOrderMessage
    ODRM_Rec, record,type=ODRM Order Rec,maxsize=20,size=end,minbytes=3,exist=(GBL_PREV < 7)
    ODRM_Rec1, record,type=ODRM Order Rec,maxsize=1,size=end,minbytes=3,exist=!(GBL_PREV < 7)
    PDU_PADDING, bit,count=-2,indent=2,pos=none
    MACI, bit,count=32,indent=2,exist=(GBL_PREV>8 && ..\PD==2 && ODRM_Rec1\ADDRESS_Rec\ADDR_TYPE!=5 && ODRM_Rec1\Integrity_Rec\MACI_INCL == 1),pos=none
End

Begin Record, ODRM Order Rec, Bitpack, OTTSName=CMsgOrderRecord
    ARQ_Rec, record, type = Fcsch Arq Rec, maxsize = 1, indent = 2
    ADDRESS_Rec, record, type = Fcsch Address Rec, maxsize = 1, indent = 2
    Integrity_Rec, record,type=Message Integrity Rec,maxsize=1,exist=((GBL_PREV>8 && ..\..\PD==2)) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    ExtEncry_Rec, record,type=Fcsch RecExt-Encryption Rec,maxsize=1,exist=(((GBL_FORCHTYPE==0 && ..\..\PD==1 && GBL_PREV<9)||(GBL_FORCHTYPE==0 && ..\..\PD!=0 && GBL_PREV>8)||(GBL_FORCHTYPE==1 && ..\..\PD!=1))) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    ORDER_Rec, record, type = FOR Order Rec, maxsize = 1
End

Begin Record, Fcsch Arq Rec, Bitpack, OTTSName=CMsgFcschArq
    ACK_SEQ, bit,count=3,indent=2,pos=none
    MSG_SEQ, bit,count=3,indent=2,pos=none
    ACK_REQ, bit,count=1,indent=2,pos=none
    VALID_ACK, bit,count=1,indent=2,pos=none
End

Begin Record, Fcsch Address Rec, Bitpack, OTTSName=CMsgFcschAddress
    ADDR_TYPE, bit,count=3,base=enum:Fcsch Address Enum,indent=2,pos=none
    ADDR_LEN, bit,count=4,exist=(ADDR_TYPE!=4 && ADDR_TYPE<5 && ADDR_TYPE!=3),indent=2,pos=none
    Address_Rec, union, enum = ADDR_TYPE, consumeBytes=ADDR_LEN, indent = 2,exist=(ADDR_TYPE!=4 && ADDR_TYPE<5&& ADDR_TYPE!=3)
    Address_TMSI, record, type = Fcsch Address TMSI Rec, maxsize=1, indent = 2,exist=(ADDR_TYPE==3)
    Address_BC, record, type=Fcsch Address Broadcast Rec, maxsize=1, indent=2, exist=(ADDR_TYPE==5)
End

Begin Message, Fcsch Address Rec IMSI_S Rsp, BitPack, OTTSName=CMsgFcschAddressIMSI_S
    IMSI_S, bit,count=34,indent=2,base=16,pos=none
    RESERVED, bit,count=6,indent=2,pos=none
End

Begin Message, Fcsch Address Rec ESN Rsp, BitPack, OTTSName=CMsgFcschAddressESN
    Esn_Rec, record, type = ESN Rec, maxsize = 1, indent = 2
End

Begin Message, Fcsch Address Rec IMSI Rsp, BitPack, OTTSName=CMsgFcschAddressIMSI
    Imsi_Rec, record, type = IMSI Rec, maxsize = 1, indent = 2
End

Begin Message, Fcsch Address Rec TMSI Rsp, BitPack, OTTSName=CMsgFcschAddressTMSI
End

Begin Message, Fcsch Address Rec Reserved1 Rsp, BitPack, OTTSName=CMsgFcschAddressReserved1
End

Begin Message, Fcsch Address Rec Broadcast Rsp, BitPack, OTTSName=CMsgFcschAddressBroadcast
End

Begin Message, Fcsch Address Rec Reserved2 Rsp, BitPack, OTTSName=CMsgFcschAddressReserved2
End

Begin Message, Fcsch Address Rec Reserved3 Rsp, BitPack, OTTSName=CMsgFcschAddressReserved3
End

Begin Record, Fcsch Address TMSI Rec, BitPack, OTTSName=CMsgFcschTMSIRec
    TMSI_LEN, bit,count=4,indent=2,pos=none
    TMSI_ZONE, array,type=uint8, maxsize=8,size=(TMSI_LEN - 4), exist = (TMSI_LEN > 4), indent = 2
    TMSI_CODE_ADDR32, bit,count=32,exist=(TMSI_LEN > 4),indent=2,pos=none
    TMSI_CODE_ADDR, array,type=uint8,maxsize=4,size = TMSI_LEN, exist = (TMSI_LEN <= 4), indent = 2
End

Begin Record, Fcsch Address Broadcast Rec, BitPack, OTTSName=CMsgFcschAddressBroadcastRec
    BCAddr_len, bit,count=4,indent=2,pos=none
    BC_ADDR, array,type=uint8, maxsize=16, size =BCAddr_len, indent = 2
End

Begin record, Message Integrity Rec, BitPack, OTTSName=CMsgFcschIntegrity
    MACI_INCL, bit,count=1,indent=2,pos=none
    AUTH_INCL, bit,count=1,indent=2,pos=none
    AUTHR, bit,count=18,indent=2,exist=(AUTH_INCL == 1),pos=none
    RANDC, bit,count=8,indent=2,exist=(AUTH_INCL == 1 || MACI_INCL == 1),pos=none
    COUNT, bit,count=6,indent=2,exist=(AUTH_INCL == 1),pos=none
    SDU_KEY_ID, bit,count=2,indent=2,exist=(MACI_INCL == 1),pos=none
    SDU_INTEGRITY_ALGO, bit,count=3,indent=2,exist=(MACI_INCL == 1),pos=none
    SDU_SSEQ_OR_SSEQH, bit,count=1,indent=2,exist=(MACI_INCL == 1),pos=none
    SDU_SSEQ, bit,count=8,indent=2,exist=((SDU_SSEQ_OR_SSEQH == 0)) && ((MACI_INCL == 1)),pos=none
    SDU_SSEQ_H, bit,count=24,indent=2,exist=((SDU_SSEQ_OR_SSEQH == 1)) && ((MACI_INCL == 1)),pos=none
End

Begin Record, Fcsch RecExt-Encryption Rec, BitPack, OTTSName=CMsgRecExtEncryption
    ENC_FIELDS_INCL, bit,count=1,indent=2,pos=none
    SDU_ENCRYPT_MODE, bit,count=3,indent=2,exist=(ENC_FIELDS_INCL),pos=none
    ENC_SEQ, bit,count=8,indent=2,exist=(((SDU_ENCRYPT_MODE==1||SDU_ENCRYPT_MODE==2)&&(GBL_PREV<9 || (GBL_PREV>8 && ..\..\..\PD!=2) || (GBL_PREV>8 && ..\..\..\PD==2&& ..\Integrity_Rec\MACI_INCL==0)))) && ((ENC_FIELDS_INCL)),pos=none
End

Begin Record, FOR Order Rec, Bitpack, OTTSName=CMsgForOrder
    ORDER, bit,count=6,base=enum:FOR Order Code Enum,indent=2,pos=none
    ADD_RECORD_LEN, bit,count=3,indent=2,pos=none
    ADD_RECORD, array,type=uint8,maxsize=7,size=ADD_RECORD_LEN,indent=2,exist=(GBL_PREV >1 && GBL_PREV <=5)
    Rec, union,enum=ORDER,indent=2,exist=(GBL_PREV > 5)
End

Begin Message, FOR Order Rec Abreviated Alert Order Rsp, BitPack, OTTSName=CMsgForOrderAbreviatedAlert
End

Begin Message, FOR Order Rec BS Challenge Confirmation Order Rsp, BitPack, OTTSName=CMsgForOrderBSChallengeConfirmation
    ORDQ, bit,count=8,indent=2,pos=none
    AUTHBS, bit,count=18,indent=2,pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, FOR Order Rec Message Encryption Mode Order Rsp, BitPack, OTTSName=CMsgForOrderMessageEncryptionMode
    ORDQ, bit,count=8,indent=2,base=enum: 0 [Encryption Disable]/1 [Basic Enc of CC Msg]/2 [En Enc of CC Msg]/3 [Ext Enc of CC Msg],pos=none
End

Begin Message, FOR Order Rec Reorder Order Rsp, BitPack, OTTSName=CMsgForOrderReorder
End

Begin Message, FOR Order Rec Parameter Update Order Rsp, BitPack, OTTSName=CMsgForOrderParameterUpdate
    ORDQ, bit,count=8,indent=2,pos=none
End

Begin Message, FOR Order Rec Audit Order Rsp, BitPack, OTTSName=CMsgForOrderAudit
End

Begin Message, FOR Order Rec Intercept Order Rsp, BitPack, OTTSName=CMsgForOrderIntercept
End

Begin Message, FOR Order Rec Maintenance Order Rsp, BitPack, OTTSName=CMsgForOrderMaintenance
End

Begin Message, FOR Order Rec BS Ack Order Rsp, BitPack, OTTSName=CMsgForOrderBSAck
End

Begin Message, FOR Order Rec Pilot Measurement Request Order Rsp, BitPack, OTTSName=CMsgForOrderPilotMeasurementRequest
    ORDQ, bit,count=8,indent=2,noexist=0,exist=(GBL_PREV > 3),pos=none
    MIN_PILOT_PWR_THRESH, bit,count=5,indent=2,exist=((ORDQ != 0)) && ((GBL_PREV > 3)),pos=none
    MIN_PILOT_EC_IO_THRESH, bit,count=5,indent=2,exist=((ORDQ != 0)) && ((GBL_PREV > 3)),pos=none
    INCL_SEPT, bit,count=1,indent=2,exist=((GBL_PREV>6 && ORDQ!=0)) && ((GBL_PREV > 3)),pos=none
    RESERVED, bit,count=-8,indent=2,exist=((ORDQ != 0)) && ((GBL_PREV > 3)),pos=none
End

Begin Message, FOR Order Rec Lock Order Rsp, BitPack, OTTSName=CMsgForOrderLock
    ORDQ, bit,count=8,indent=2,pos=none
End

Begin Message, FOR Order Rec Service Option Request Order Rsp, BitPack, OTTSName=CMsgForOrderServiceOptionRequest
    ORDQ, bit,count=8,indent=2,pos=none
    SERVICE_OPTION, bit,count=16,indent=2,pos=none
End

Begin Message, FOR Order Rec Service Option Response Order Rsp, BitPack, OTTSName=CMsgForOrderServiceOptionResponse
    ORDQ, bit,count=8,indent=2,pos=none
    SERVICE_OPTION, bit,count=16,indent=2,pos=none
End

Begin Message, FOR Order Rec Release Order Rsp, BitPack, OTTSName=CMsgForOrderRelease
    ORDQ, bit,count=8,indent=2,noexist=0 [no reason],base=enum:0 [no reason]/1 [Reserved]/2 [Service Option is rejected]/3 [Enhanced],pos=none
    RELEASE_TYPE, bit,count=3,indent=2,exist=(GBL_PREV>8 && ORDQ==3),pos=none
    SID, bit,count=15,indent=2,exist=((RELEASE_TYPE!=3)) && ((GBL_PREV>8 && ORDQ==3)),pos=none
    NID, bit,count=16,indent=2,exist=((RELEASE_TYPE!=3)) && ((GBL_PREV>8 && ORDQ==3)),pos=none
    FREQ_INCL, bit,count=1,indent=2,exist=((RELEASE_TYPE!=3)) && ((GBL_PREV>8 && ORDQ==3)),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=((RELEASE_TYPE!=3 && FREQ_INCL!=0)) && ((GBL_PREV>8 && ORDQ==3)),pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=((RELEASE_TYPE!=3 && FREQ_INCL!=0)) && ((GBL_PREV>8 && ORDQ==3)),pos=none
    PAGE_CH, bit,count=3,indent=2,exist=((RELEASE_TYPE == 0)) && ((GBL_PREV>8 && ORDQ==3)),pos=none
    PRAT, bit,count=2,indent=2,exist=((RELEASE_TYPE == 0)) && ((GBL_PREV>8 && ORDQ==3)),pos=none
    SR1_BCCH_CODE_CHAN_NON_TD, bit,count=6,indent=2,exist=((RELEASE_TYPE == 1)) && ((GBL_PREV>8 && ORDQ==3)),pos=none
    SR1_CRAT_NON_TD, bit,count=1,indent=2,exist=((RELEASE_TYPE == 1)) && ((GBL_PREV>8 && ORDQ==3)),pos=none
    SR1_BRAT_NON_TD, bit,count=2,indent=2,exist=((RELEASE_TYPE == 1)) && ((GBL_PREV>8 && ORDQ==3)),pos=none
    SR1_TD_MODE, bit,count=2,indent=2,exist=((RELEASE_TYPE == 2)) && ((GBL_PREV>8 && ORDQ==3)),pos=none
    SR1_BCCH_CODE_CHAN_TD, bit,count=6,indent=2,exist=((RELEASE_TYPE == 2)) && ((GBL_PREV>8 && ORDQ==3)),pos=none
    SR1_CRAT_TD, bit,count=1,indent=2,exist=((RELEASE_TYPE == 2)) && ((GBL_PREV>8 && ORDQ==3)),pos=none
    SR1_BRAT_TD, bit,count=2,indent=2,exist=((RELEASE_TYPE == 2)) && ((GBL_PREV>8 && ORDQ==3)),pos=none
    RESERVED, bit,count=-8,indent=2,exist=(GBL_PREV>8 && ORDQ==3),pos=none
End

Begin Message, FOR Order Rec Outer Loop Report Request Order Rsp, BitPack, OTTSName=CMsgForOrderOuterLoopReportRequest
End

Begin Message, FOR Order Rec Long Code Transition Request Order Rsp, BitPack, OTTSName=CMsgForOrderLongCodeTransitionRequest
    ORDQ, bit,count=8,indent=2,noexist=0 [Request Public],base=enum:0 [Request Public]/1 [Request Private],pos=none
End

Begin Message, FOR Order Rec Continuous DTMF Tone Order Rsp, BitPack, OTTSName=CMsgForOrderContinuousDTMFTone
    ORDQ, bit,count=8,indent=2,pos=none
End

Begin Message, FOR Order Rec Status Request Order Rsp, BitPack, OTTSName=CMsgForOrderStatusRequest
    ORDQ, bit,base=enum:Status Request Enum,count=8,indent=2,exist=(GBL_PREV < 8),pos=none
End

Begin Message, FOR Order Rec Registration Order Rsp, BitPack, OTTSName=CMsgForOrderRegistration
    ORDQ, bit,count=8,indent=2,noexist=0 [Reg Accepted Order],base=enum:0 [Reg Accepted Order]/1 [Reg Request Order]/2 Reg Rejected Order]/4 [Reg Rejected Order (delete TMSI)]/5 [Reg Accepted Order (ROAM_INDI included)]/7 [Reg Accepted Order (ROAM_INDI & Encryption)],pos=none
    ROAM_INDI, bit,count=8,indent=2,exist=(ORDQ == 5||(ORDQ == 7&&GBL_PREV>6)),pos=none
    C_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=(GBL_PREV>6 && ORDQ == 7),pos=none
    ENC_KEY_SIZE, bit,count=3,indent=2,exist=((C_SIG_ENCRYPT_MODE==1)) && ((GBL_PREV>6 && ORDQ == 7)),pos=none
    MSG_INT_INFO_INCL, bit,count=1,indent=2,exist=((GBL_PREV>6 && ORDQ == 7)) && ((GBL_PREV > 8)),pos=none
    CHANGE_KEYS, bit,count=1,indent=2,exist=((MSG_INT_INFO_INCL==1)) && (((GBL_PREV>6 && ORDQ == 7)) && ((GBL_PREV > 8))),pos=none
    USE_UAK, bit,count=1,indent=2,exist=((MSG_INT_INFO_INCL==1)) && (((GBL_PREV>6 && ORDQ == 7)) && ((GBL_PREV > 8))),pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, FOR Order Rec Service Option Control Order Rsp, BitPack, OTTSName=CMsgForOrderServiceOptionControl
    ORDQ, bit,count=8,indent=2,exist=(GBL_PREV < 7),pos=none
End

Begin Message, FOR Order Rec Local Control Order Rsp, BitPack, OTTSName=CMsgForOrderLocalControl
    ORDQ, bit,count=8,indent=2,pos=none
End

Begin Message, FOR Order Rec Slotted Mode Order Rsp, BitPack, OTTSName=CMsgForOrderSlottedMode
End

Begin Message, FOR Order Rec Retry Order Rsp, BitPack, OTTSName=CMsgForOrderRetry
    ORDQ, bit,count=8,indent=2,pos=none
    RETRY_TYPE, bit,count=3,indent=2,base=enum:0 [Clear all]/1 [Origination]/2 [Resource Request]/3 [Suppplemental Channel Request],pos=none
    RETRY_DELAY, bit,count=8,indent=2,exist=(RETRY_TYPE != 0),pos=none
    RESERVED, bit,count=-8,indent=2,exist=(GBL_PREV > 5),pos=none
End

Begin Message, FOR Order Rec BS Reject Order Rsp, BitPack, OTTSName=CMsgForOrderBSReject
    ORDQ, bit,count=8,indent=2,noexist=0,base=enum:0[cannot decrypt Ori&Recon]/1 [cannot decrypt]/2 [unaccept message],exist=(GBL_PREV > 6),pos=none
    REJECT_REASON, bit,count=4,indent=2,exist=((GBL_PREV > 6)) && ((GBL_PREV>9 && ORDQ==2)),pos=none
    REJECT_MSG_TYPE, bit,count=8,indent=2,exist=((GBL_PREV > 6)) && ((GBL_PREV>9 && ORDQ==2)),pos=none
    REJECT_MSG_SEQ, bit,count=3,indent=2,exist=((GBL_PREV > 6)) && ((GBL_PREV>9 && ORDQ==2)),pos=none
End

Begin Message, FOR Order Rec Transit to Idle Order Rsp, BitPack, OTTSName=CMsgForOrderTransittoIdle
End

Begin Message, Paging Msg Rec PC - Channel Assignment Rsp, BitPack, OTTSName=CMsgPageChannelAssignment
    Rec1, record,type=CAM Rec,maxsize=1,minbytes=3,exist=(GBL_PREV > 6)
    Rec, record,type=CAM Rec,maxsize=20,size=end,minbytes=3,exist=!(GBL_PREV > 6)
    PDU_PADDING, bit,count=-2,indent=2,pos=none
    MACI, bit,count=32,indent=2,exist=(GBL_PREV>8 && ..\PD==2 && Rec1\ADDRESS_Rec\ADDR_TYPE!=5 && Rec1\Integrity_Rec\MACI_INCL == 1),pos=none
End

Begin Record, CAM Rec, BitPack, OTTSName=CMsgCam
    ARQ_Rec, record, type = Fcsch Arq Rec, maxsize = 1, indent = 2
    ADDRESS_Rec, record, type = Fcsch Address Rec, maxsize = 1, indent = 2
    Integrity_Rec, record,type=Message Integrity Rec,maxsize=1,exist=((GBL_PREV>8 && ..\..\PD==2)) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    ExtEncry_Rec, record,type=Fcsch RecExt-Encryption Rec,maxsize=1,exist=(((GBL_FORCHTYPE==0 && ..\..\PD==1 && GBL_PREV<9)||(GBL_FORCHTYPE==0 && ..\..\PD!=0 && GBL_PREV>8)||(GBL_FORCHTYPE==1 && ..\..\PD!=1))) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    ASSIGN_MODE, bit,count=3,indent=2,base=enum:CAM Assign Mode Enum,pos=none
    ADD_RECORD_LEN, bit,count=3,indent=2,pos=none
    Rec, union, enum=ASSIGN_MODE, consumeBytes = ADD_RECORD_LEN, indent = 2
End

Begin Message, CAM Rec 0 [Zero] Rsp, BitPack, OTTSName=CMsgCam0
    FREQ_INCL, bit,count=1,indent=2,pos=none
    CODE_CHAN, bit,count=8,indent=2,pos=none
    CDMA_FREQ, bit,count=11,exist=(FREQ_INCL == 1),indent=2,pos=none
    FRAME_OFFSET, bit,count=4,indent=2,pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,pos=none
    D_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((ENCRYPT_MODE==3)) && ((GBL_PREV > 6)),pos=none
    ENC_KEY_SIZE, bit,count=3,indent=2,exist=((ENCRYPT_MODE==2 || ENCRYPT_MODE==3)) && ((GBL_PREV > 6)),pos=none
    C_SIG_ENCRYPT_MODE_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    C_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((C_SIG_ENCRYPT_MODE_INCL==1)) && ((GBL_PREV > 6)),pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, CAM Rec 1 [One] Rsp, BitPack, OTTSName=CMsgCam1
    RESPOND, bit,count=1,indent=2,pos=none
    FREQ_INCL, bit,count=1,indent=2,pos=none
    CDMA_FREQ, bit,count=11,exist=(FREQ_INCL == 1),indent=2,pos=none
    Rec, record, type = CAM Pilot PN Rec, maxsize=10, size=end, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, CAM Pilot PN Rec, BitPack, OTTSName=CMsgCAMPilotPN
    PILOT_PN, bit,count=9,indent=2,pos=none
End

Begin Message, CAM Rec 2 [Acquire Analog System] Rsp, BitPack, OTTSName=CMsgCamAcquireAnalogSystem
    RESPOND, bit,count=1,indent=2,pos=none
    ANALOG_SYS, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    USE_ANALOG_SYS, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    RESERVED, bit,count=7,indent=2,exist=!(GBL_PREV > 5),pos=none
End

Begin Message, CAM Rec 3 [Analog Voice Ch Assignment] Rsp, BitPack, OTTSName=CMsgCamAnalogVoiceChAssignment
    SID, bit,count=15,indent=2,pos=none
    VMAC, bit,count=3,indent=2,pos=none
    ANALOG_CHAN, bit,count=11,indent=2,pos=none
    SCC, bit,count=2,indent=2,pos=none
    MMEM, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    RESERVED1, bit,count=1,indent=2,exist=!(GBL_PREV > 5),pos=none
    AN_CHAN_TYPE, bit,count=2,indent=2,pos=none
    DSCC_MSB, bit,count=1,indent=2,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    RESERVED2, bit,count=5,indent=2,exist=!(GBL_PREV > 5),pos=none
    DTX, bit,count=1,indent=2,exist=!(GBL_PREV > 5),pos=none
    RESERVED3, bit,count=7,indent=2,exist=!(GBL_PREV > 5),pos=none
End

Begin Message, CAM Rec 4 [Ext Traffic Ch Assignment] Rsp, BitPack, OTTSName=CMsgCamExtTrafficChAssignment
    FREQ_INCL, bit,count=1,indent=2,pos=none
    RESERVED1, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    BYPASS_ALERT_ANSWER, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    DEFAULT_CONFIG, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    RESERVED2, bit,count=7,indent=2,exist=!(GBL_PREV > 5),pos=none
    GRANTED_MODE, bit,count=2,indent=2,pos=none
    CODE_CHAN, bit,count=8,indent=2,pos=none
    FRAME_OFFSET, bit,count=4,indent=2,pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=(FREQ_INCL == 1),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=(FREQ_INCL == 1),pos=none
    D_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((ENCRYPT_MODE==3)) && ((GBL_PREV > 6)),pos=none
    ENC_KEY_SIZE, bit,count=3,indent=2,exist=((ENCRYPT_MODE==2 || ENCRYPT_MODE==3)) && ((GBL_PREV > 6)),pos=none
    C_SIG_ENCRYPT_MODE_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    C_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((C_SIG_ENCRYPT_MODE_INCL==1)) && ((GBL_PREV > 6)),pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, CAM Rec 5 [Ext Paging Ch Assignment] Rsp, BitPack, OTTSName=CMsgCamExtPagingChAssignment
    RESPOND, bit,count=1,indent=2,pos=none
    FREQ_INCL, bit,count=1,indent=2,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=(FREQ_INCL == 1),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=(FREQ_INCL == 1),pos=none
    Rec, record, type = CAM Pilot PN Rec, maxsize=10, size=end, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, CAM Rec 6 [Six] Rsp, BitPack, OTTSName=CMsgCam6
    Data, array, type=uint8, maxsize=7, size=end, indent = 2
End

Begin Message, CAM Rec 7 [Seven] Rsp, BitPack, OTTSName=CMsgCam7
    Data, array, type=uint8, maxsize=7, size=end, indent = 2
End

Begin Message, Paging Msg Rec PC - Data Burst Rsp, BitPack, OTTSName=CMsgPageDataBurst
    ARQ_Rec, record, type = Fcsch Arq Rec, maxsize = 1, indent = 2
    ADDRESS_Rec, record, type = Fcsch Address Rec, maxsize = 1, indent = 2
    Integrity_Rec, record,type=Message Integrity Rec,maxsize=1,exist=((GBL_PREV>8 && ..\PD==2)) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    ExtEncry_Rec, record,type=Fcsch Ext-Encryption Rec,maxsize=1,exist=(((GBL_FORCHTYPE==0 && ..\PD==1 && GBL_PREV<9)||(GBL_FORCHTYPE==0 && ..\PD!=0 && GBL_PREV>8) ||(GBL_FORCHTYPE==1 && ..\PD!=1))) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    BURST_Rec, record, type = FOR Burst Type Rec, maxsize = 1, indent = 2
    PDU_PADDING, bit,count=-2,indent=2,pos=none
    MACI, bit,count=32,indent=2,exist=(GBL_PREV>8 && ADDRESS_Rec\ADDR_TYPE!=5 && ..\PD==2 && Integrity_Rec\MACI_INCL == 1),pos=none
End

Begin Record, Fcsch Ext-Encryption Rec, BitPack, OTTSName=CMsgExtEncryption
    ENC_FIELDS_INCL, bit,count=1,indent=2,pos=none
    SDU_ENCRYPT_MODE, bit,count=3,indent=2,exist=(ENC_FIELDS_INCL),pos=none
    ENC_SEQ, bit,count=8,indent=2,exist=(((SDU_ENCRYPT_MODE==1||SDU_ENCRYPT_MODE==2)&&(GBL_PREV<9 || (GBL_PREV>8 && ..\..\PD!=2) || (GBL_PREV>8 && ..\..\PD==2&& ..\Integrity_Rec\MACI_INCL==0)))) && ((ENC_FIELDS_INCL)),pos=none
End

Begin Record, FOR Burst Type Rec, BitPack, OTTSName=CMsgFORBurstType
    MSG_NUMBER, bit,count=8,indent=2,pos=none
    BURST_TYPE, bit,count=6,base=enum:FOR Burst Type Enum,indent=2,pos=none
    NUM_MSGS, bit,count=8,indent=2,pos=none
    NUM_FIELDS, bit,count=8,indent=2,pos=none
    Rec, union, enum=BURST_TYPE, ConsumeBytes=NUM_FIELDS
End

Begin Message, FOR Burst Type Rec Unknown Burst Type [0x00] Rsp, BitPack, OTTSName=CMsgFORBurstTypeUnknown
    Data, array, type = uint8, maxsize = 100, size = ..\NUM_FIELDS, indent = 2
End

Begin Message, FOR Burst Type Rec Async Data Services [0x01] Rsp, BitPack, OTTSName=CMsgFORBurstTypeDataSvc
    Data, array, type = uint8, maxsize = 100, size = ..\NUM_FIELDS, indent = 2
End

Begin Message, FOR Burst Type Rec Group-3 Facsimile [0x02] Rsp, BitPack, OTTSName=CMsgFORBurstTypeGroupFacsimile
    Data, array, type = uint8, maxsize = 100, size = ..\NUM_FIELDS, indent = 2
End

Begin Message, FOR Burst Type Rec SMS Rsp, BitPack, OTTSName=CMsgFORBurstTypeSMS
    SMS_Rec, record, type = SMS Rec, maxsize = 1, indent = 2
End

Begin Message, FOR Burst Type Rec OTASP Rsp, BitPack, OTTSName=CMsgFORBurstTypeOTASP
    OTASP_MSG_TYPE, bit,count=8,indent=2,base=enum:FOR Otasp Msg Type Enum,pos=none
    MSG_BLOCKS, union, enum=OTASP_MSG_TYPE
End

Begin Message, OTASP Configuration Request Rsp, BitPack, OTTSName=CMsgOTASPConfigReq
    NUM_BLOCKS, bit,count=8,indent=2,pos=none
    BLOCK_ID, array, type=uint8, maxsize=200, size = NUM_BLOCKS, indent=2
End

Begin Message, OTASP Download Request Rsp, BitPack, OTTSName=CMsgOTASPDownloadReq
    NUM_BLOCKS, bit,count=8,indent=2,pos=none
    BLOCK_Rec, record, maxsize=30, size=NUM_BLOCKS, minbytes=2, type=FOR OTASP Param Block Rec
End

Begin Record, FOR OTASP Param Block Rec, BitPack, OTTSName=CRecFOROTASPParamBlockRec
    BLOCK_ID, bit,count=8,indent=2,base=enum:FOR OTASP NAM Param Block Type Enum,pos=none
    BLOCK_LEN, bit,count=8,indent=2,pos=none
    PARAM_DATA, union, enum = BLOCK_ID, ConsumeBytes = BLOCK_LEN
End

Begin Message, FOR OTASP Param Block Rec CDMA/Analog NAM Rsp, BitPack, OTTSName=CMsgFOROTASPParamBlockCDMAAnalogNAM
    FIRSTCHP, bit,count=11,indent=2,pos=none
    HOME_SID, bit,count=15,indent=2,pos=none
    EX, bit,count=1,indent=2,pos=none
    IMSI_M_CLASS, bit,count=1,indent=2,pos=none
    IMSI_M_ADDR_NUM, bit,count=3,indent=2,pos=none
    MCC_M, bit,count=10,indent=2,pos=none
    IMSI_M_11_12, bit,count=7,indent=2,pos=none
    IMSI_M_S, bit,count=34,indent=2,base=16,pos=none
    ACCOLC, bit,count=4,indent=2,pos=none
    LOCAL_CONTROL, bit,count=1,indent=2,pos=none
    MOB_TERM_HOME, bit,count=1,indent=2,pos=none
    MOB_TERM_FOR_SID, bit,count=1,indent=2,pos=none
    MOB_TERM_FOR_NID, bit,count=1,indent=2,pos=none
    N_SID_NID, bit,count=8,indent=2,pos=none
    SID_NID_Rec, record, type = NID SID Pair Rec, maxsize = 255, size = N_SID_NID, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, FOR OTASP Param Block Rec MDN Rsp, BitPack, OTTSName=CMsgFOROTASPParamBlockMDN
    N_DIGITS, bit,count=4,indent=2,pos=none
    DIGITS_Rec, record, type = N_DIGITS Rec, maxsize = 15, size = N_DIGITS, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, FOR OTASP Param Block Rec CDMA NAM Rsp, BitPack, OTTSName=CMsgFOROTASPParamBlockCDMANAM
    IMSI_M_CLASS, bit,count=1,indent=2,pos=none
    IMSI_M_ADDR_NUM, bit,count=3,indent=2,pos=none
    MCC_M, bit,count=10,indent=2,pos=none
    IMSI_M_11_12, bit,count=7,indent=2,pos=none
    IMSI_M_S, bit,count=34,indent=2,base=16,pos=none
    ACCOLC, bit,count=4,indent=2,pos=none
    LOCAL_CONTROL, bit,count=1,indent=2,pos=none
    MOB_TERM_HOME, bit,count=1,indent=2,pos=none
    MOB_TERM_FOR_SID, bit,count=1,indent=2,pos=none
    MOB_TERM_FOR_NID, bit,count=1,indent=2,pos=none
    N_SID_NID, bit,count=8,indent=2,pos=none
    SID_NID_Rec, record, type = NID SID Pair Rec, maxsize = 255, size = N_SID_NID, indent = 2
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, FOR OTASP Param Block Rec IMSI_T Rsp, BitPack, OTTSName=CMsgFOROTASPParamBlockIMSI_T
    IMSI_T_CLASS, bit,count=1,indent=2,pos=none
    IMSI_T_ADDR_NUM, bit,count=3,indent=2,pos=none
    MCC_T, bit,count=10,indent=2,pos=none
    IMSI_T_11_12, bit,count=7,indent=2,pos=none
    IMSI_T_S, bit,count=34,indent=2,base=16,pos=none
    RESERVED, bit,count=1,indent=2,pos=none
End

Begin Message, OTASP MS Key Request Rsp, BitPack, OTTSName=CMsgOTASPMSKeyReq
    A_KEY_P_REV, bit,count=8,indent=2,pos=none
    PARAM_P_LEN, bit,count=8,indent=2,exist=(A_KEY_P_REV == 2),pos=none
    PARAM_P, array,type=uint8,maxsize=255,size=PARAM_P_LEN,indent=2,exist=(A_KEY_P_REV == 2)
    PARAM_G_LEN, bit,count=8,indent=2,exist=(A_KEY_P_REV == 2),pos=none
    PARAM_G, array,type=uint8,maxsize=255,size=PARAM_G_LEN,indent=2,exist=(A_KEY_P_REV == 2)
End

Begin Message, OTASP Key Generation Request Rsp, BitPack, OTTSName=CMsgOTASPKeyGenReq
    BS_RESULT_LEN, bit,count=8,indent=2,pos=none
    BS_RESULT, array, type = uint8, maxsize = 255, size = BS_RESULT_LEN, indent = 2
End

Begin Message, OTASP Re-Authenticate Request Rsp, BitPack, OTTSName=CMsgOTASPReAuthReq
    RAND, bit,count=32,indent=2,pos=none
End

Begin Message, OTASP Commit Request Rsp, BitPack, OTTSName=CMsgOTASPCommitReq
End

Begin Message, OTASP Protocol Capability Request Rsp, BitPack, OTTSName=CMsgOTASPProtocolCapReq
    OTASP_P_REV, bit,count=8,indent=2,exist=(..\..\NUM_FIELDS > 1),pos=none
    NUM_CAP_RECORDS, bit,count=8,indent=2,exist=(..\..\NUM_FIELDS > 1),pos=none
    Rec, record, type=OTASP Capability Request Rec, maxsize=3, size=NUM_CAP_RECORDS, indent = 2
End

Begin Record, OTASP Capability Request Rec, BitPack, OTTSName=CRecOTASPCapReq
    CAP_RECORD_TYPE, bit,count=8,indent=2,base=enum:FOR OTASP Capbility Record Type Enum,pos=none
End

Begin Message, OTASP SSPR Configuration Request Rsp, BitPack, OTTSName=CMsgOTASPSSPRConfigReq
    BLOCK_ID, bit,count=8,indent=2,base=enum:REV OTASP SSPR Param Block Type Enum,pos=none
    REQUEST_OFFSET, bit,count=16,indent=2,exist=(BLOCK_ID == 1),pos=none
    REQUEST_MAX_SIZE, bit,count=8,indent=2,exist=(BLOCK_ID == 1),pos=none
End

Begin Message, OTASP SSPR Download Request Rsp, BitPack, OTTSName=CMsgOTASPSSPRDownloadReq
    BLOCK_ID, bit,count=8,indent=2,base=enum:FOR OTASP SSPR Param Block Type Enum,pos=none
    BLOCK_LEN, bit,count=8,indent=2,pos=none
    PARAM_DATA, union, enum=BLOCK_ID, ConsumeBytes = BLOCK_LEN, indent = 2
    FRESH_INCL, bit,count=1,indent=2,exist=(GBL_PREV >= 6),pos=none
    FRESH, bit,count=15,indent=2,exist=((FRESH_INCL == 1)) && ((GBL_PREV >= 6)),pos=none
    RESERVED, bit,count=-8,indent=2,exist=(GBL_PREV >= 6),pos=none
End

Begin Message, SSPR Download Request PRL Rsp, BitPack, OTTSName=CMsgSSPRDownloadReqPRL
    RESERVED, bit,count=7,indent=2,pos=none
    LAST_SEGMENT, bit,count=1,indent=2,pos=none
    SEGMENT_OFFSET, bit,count=16,indent=2,pos=none
    SEGMENT_SIZE, bit,count=8,indent=2,pos=none
    SEGMENT_DATA, array, type=uint8, maxsize=255, size=SEGMENT_SIZE, indent = 2
End

Begin Message, SSPR Download Request EXT PRL Rsp, BitPack, OTTSName=CMsgSSPRDownloadReqExtPRL
    RESERVED, bit,count=7,indent=2,exist=(GBL_PREV >= 6),pos=none
    LAST_SEGMENT, bit,count=1,indent=2,exist=(GBL_PREV >= 6),pos=none
    SEGMENT_OFFSET, bit,count=16,indent=2,exist=(GBL_PREV >= 6),pos=none
    SEGMENT_SIZE, bit,count=8,indent=2,exist=(GBL_PREV >= 6),pos=none
    SEGMENT_DATA, array,type=uint8,maxsize=255,size=SEGMENT_SIZE,indent=2,exist=(GBL_PREV >= 6)
End

Begin Message, OTASP Validation Request Rsp, BitPack, OTTSName=CMsgOTASPValidReq
    NUM_BLOCKS, bit,count=8,indent=2,pos=none
    Rec, record, type=OTASP Validation Request Rec, maxsize=255, size=NUM_BLOCKS, indent = 2
End

Begin Record, OTASP Validation Request Rec, BitPack, OTTSName=CRecOTASPValidReq
    BLOCK_ID, bit,count=8,indent=2,base=enum:FOR OTASP Validation Param Block Type Enum,pos=none
    BLOCK_LEN, bit,count=8,indent=2,pos=none
    PARAM_DATA, union, enum=BLOCK_ID, ConsumeBytes = BLOCK_LEN, indent = 2
End

Begin Message, OTASP Validation Request Rec Verify SPC Rsp, BitPack, OTTSName=CMsgOTASPValidReqVerifySPC
    SPC, bit,count=24,indent=2,pos=none
End

Begin Message, OTASP Validation Request Rec Change SPC Rsp, BitPack, OTTSName=CMsgOTASPValidReqChangeSPC
    SPC, bit,count=24,indent=2,pos=none
End

Begin Message, OTASP Validation Request Rec Validate SPASM Rsp, BitPack, OTTSName=CMsgOTASPValidReqValidSPASM
    AUTH_OTAPA_INCL, bit,count=1,indent=2,pos=none
    AUTH_OTAPA, bit,count=18,indent=2,exist=(AUTH_OTAPA_INCL),pos=none
    NAM_LOCK, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, OTASP OTAPA Request Rsp, BitPack, OTTSName=CMsgOTASP_OTAPAReq
    START_STOP, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=7,indent=2,pos=none
End

Begin Message, FOR Burst Type Rec LS Rsp, BitPack, OTTSName=CMsgFORBurstTypeLS
    SESS_START, bit,count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    SESS_END, bit,count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    SESS_SOURCE, bit,count=1,indent=2,base=enum:BS Init/MS Orig,pos=none
    SESS_TAG, bit,count=5,indent=2,pos=none
    PD_MSG_TYPE, bit,count=8,indent=2,pos=none
    NUM_REQUESTS, bit,count=4,indent=2,pos=none
    NUM_RESPONSES, bit,count=4,indent=2,pos=none
    REQ_Rec, record, type=LS BS Req Rec, maxsize=15, size=NUM_REQUESTS, indent = 2
    RSP_Rec, record, type=LS BS Rsp Rec, maxsize=15, size=NUM_RESPONSES, indent = 2
End

Begin Message, FOR Burst Type Rec Short Data Bursts Rsp, BitPack, OTTSName=CMsgFORBurstTypeShortDataBursts
    SR_ID, bit,count=3,indent=2,pos=none
    Reserved, bit,count=5,indent=2,pos=none
    SO, bit,count=16,indent=2,pos=none
    Data, array, type = uint8, maxsize = 100, size = (..\NUM_FIELDS-3), indent = 2
End

Begin Message, FOR Burst Type Rec Ext Burst Type-International Rsp, BitPack, OTTSName=CMsgFORBurstTypeExtBurstInter
    MCC, bit,count=10,indent=2,pos=none
    COUNTRY_BURST_TYPE, bit,count=6,indent=2,pos=none
    Data, array, type = uint8, maxsize = 100, size = (..\NUM_FIELDS-2), indent = 2
End

Begin Message, FOR Burst Type Rec Ext Burst Type Rsp, BitPack, OTTSName=CMsgFORBurstTypeExtBurst
    EXTENDED_BURST_TYPE, bit,count=16,indent=2,pos=none
    Data, array, type = uint8, maxsize = 100, size = (..\NUM_FIELDS-2), indent = 2
End

Begin Message, Paging Msg Rec PC - Authentication Challenge Rsp, BitPack, OTTSName=CMsgPageAuthenticationChallenge
    ARQ_Rec, record, type = Fcsch Arq Rec, maxsize = 1, indent = 2
    ADDRESS_Rec, record, type = Fcsch Address Rec, maxsize = 1, indent = 2
    Integrity_Rec, record,type=Message Integrity Rec,maxsize=1,exist=((GBL_PREV>8 && ..\PD==2)) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    ExtEncry_Rec, record,type=Fcsch Ext-Encryption Rec,maxsize=1,exist=(((GBL_FORCHTYPE==0 && ..\PD==1 && GBL_PREV<9)||(GBL_FORCHTYPE==0 && ..\PD!=0 && GBL_PREV>8) ||(GBL_FORCHTYPE==1 && ..\PD!=1))) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    RANDU, bit,count=24,indent=2,pos=none
    PDU_PADDING, bit,count=-2,indent=2,pos=none
    MACI, bit,count=32,indent=2,exist=(GBL_PREV>8 && ADDRESS_Rec\ADDR_TYPE!=5 && ..\PD==2 && Integrity_Rec\MACI_INCL == 1),pos=none
End

Begin Message, Paging Msg Rec PC - SSD Update Rsp, BitPack, OTTSName=CMsgPageSSDUpdate
    ARQ_Rec, record, type = Fcsch Arq Rec, maxsize = 1, indent = 2
    ADDRESS_Rec, record, type = Fcsch Address Rec, maxsize = 1, indent = 2
    Integrity_Rec, record,type=Message Integrity Rec,maxsize=1,exist=((GBL_PREV>8 && ..\PD==2)) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    ExtEncry_Rec, record,type=Fcsch Ext-Encryption Rec,maxsize=1,exist=(((GBL_FORCHTYPE==0 && ..\PD==1 && GBL_PREV<9)||(GBL_FORCHTYPE==0 && ..\PD!=0 && GBL_PREV>8) ||(GBL_FORCHTYPE==1 && ..\PD!=1))) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    RANDSSD, bit,count=56,base=16,indent=2,pos=none
    PDU_PADDING, bit,count=-2,indent=2,pos=none
    MACI, bit,count=32,indent=2,exist=(GBL_PREV>8 && ADDRESS_Rec\ADDR_TYPE!=5 && ..\PD==2 && Integrity_Rec\MACI_INCL == 1),pos=none
End

Begin Message, Paging Msg Rec PC - Feature Notification Rsp, BitPack, OTTSName=CMsgPageFeatureNotification
    ARQ_Rec, record, type = Fcsch Arq Rec, maxsize = 1, indent = 2
    ADDRESS_Rec, record, type = Fcsch Address Rec, maxsize = 1, indent = 2
    Integrity_Rec, record,type=Message Integrity Rec,maxsize=1,exist=((GBL_PREV>8 && ..\PD==2)) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    ExtEncry_Rec, record,type=Fcsch Ext-Encryption Rec,maxsize=1,exist=(((GBL_FORCHTYPE==0 && ..\PD==1 && GBL_PREV<9)||(GBL_FORCHTYPE==0 && ..\PD!=0 && GBL_PREV>8) ||(GBL_FORCHTYPE==1 && ..\PD!=1))) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    RELEASE, bit,count=1,indent=2,pos=none
    INFO_Rec, record,type=FOR Information Rec,maxsize=20,size=end,minbytes=2,exist=(GBL_PREV == 1 || GBL_PREV > 5)
    Data, array,type=uint8,maxsize=200,size=end,exist=!(GBL_PREV == 1      || GBL_PREV > 5)
    PDU_PADDING, bit,count=-2,indent=2,pos=none
    MACI, bit,count=32,indent=2,exist=(GBL_PREV>8 && ADDRESS_Rec\ADDR_TYPE!=5 && ..\PD==2 && Integrity_Rec\MACI_INCL == 1),pos=none
End

Begin Record, FOR Information Rec, BitPack, OTTSName=CMsgForInfo
    RECORD_TYPE, uint8, base=enum:FOR Information Record Type Enum, indent=2
    RECORD_LEN, int8, indent=2
    Rec, union, enum=RECORD_TYPE, ConsumeBytes=RECORD_LEN, indent = 2
End

Begin Message, FOR Information Rec 1 [Display] Rsp, BitPack, OTTSName=CMsgForInfoDisplay
    ChARi, array, type = uint8, maxsize = 100, size = end, indent = 2
End

Begin Message, FOR Information Rec 2 [Called Party Number] Rsp, BitPack, OTTSName=CMsgForInfoCalledPartyNumber
    NUMBER_TYPE, bit,count=3,indent=2,pos=none
    NUMBER_PLAN, bit,count=4,indent=2,pos=none
    ChARi, array, type = uint8, maxsize = 100, size = end, indent = 2
    RESERVED, bit,count=1,indent=2,pos=none
End

Begin Message, FOR Information Rec 3 [Calling Party Number] Rsp, BitPack, OTTSName=CMsgForInfoCallingPartyNumber
    NUMBER_TYPE, bit,count=3,indent=2,pos=none
    NUMBER_PLAN, bit,count=4,indent=2,pos=none
    PI, bit,count=2,indent=2,pos=none
    SI, bit,count=2,indent=2,pos=none
    ChARi, array, type = uint8, maxsize = 100, size = end, indent = 2
    RESERVED, bit,count=5,indent=2,pos=none
End

Begin Message, FOR Information Rec 4 [Connected Number] Rsp, BitPack, OTTSName=CMsgForInfoConnectedNumber
    NUMBER_TYPE, bit,count=3,indent=2,pos=none
    NUMBER_PLAN, bit,count=4,indent=2,pos=none
    PI, bit,count=2,indent=2,pos=none
    SI, bit,count=2,indent=2,pos=none
    ChARi, array, type = uint8, maxsize = 100, size = end, indent = 2
    RESERVED, bit,count=5,indent=2,pos=none
End

Begin Message, FOR Information Rec 5 [Signal] Rsp, BitPack, OTTSName=CMsgForInfoSignal
    SIGNAL_TYPE, bit,count=2,base=enum:0 [Tone Signal]/1 [ISDN Alerting]/2 IS-54B [Alerting]/3 [Reserved],indent=2,pos=none
    ALERT_PITCH, bit,count=2,base=enum:0 [Medium Pitch]/1 [High Pitch]/2 [Low Pitch]/3 [Reserved],indent=2,pos=none
    SIGNAL, bit,count=6,indent=2,pos=none
    RESERVED, bit,count=6,indent=2,pos=none
End

Begin Message, FOR Information Rec 6 [Message Waiting] Rsp, BitPack, OTTSName=CMsgForInfoMessageWaiting
    MSG_COUNT, bit,count=8,indent=2,pos=none
End

Begin Message, FOR Information Rec 7 [Service Configuration] Rsp, BitPack, OTTSName=CMsgForInfoServiceConfiguration
    FOR_MUX_OPTION, bit,count=16,indent=2,pos=none
    REV_MUX_OPTION, bit,count=16,indent=2,pos=none
    FOR_RATES, bit,count=8,indent=2,pos=none
    REV_RATES, bit,count=8,indent=2,pos=none
    NUM_CON_REC, bit,count=8,indent=2,pos=none
    Rec1, record, type = FOR Info Rec Service Config Rec, maxsize = 255, size = NUM_CON_REC, indent = 2
    FCH_CC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FCH_FRAME_SIZE, bit,count=1,indent=2,exist=((FCH_CC_INCL == 1)) && (GBL_PREV > 5),pos=none
    FOR_FCH_RC, bit,count=5,indent=2,exist=((FCH_CC_INCL == 1)) && (GBL_PREV > 5),pos=none
    REV_FCH_RC, bit,count=5,indent=2,exist=((FCH_CC_INCL == 1)) && (GBL_PREV > 5),pos=none
    DCCH_CC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    DCCH_FRAME_SIZE, bit,count=2,indent=2,exist=((DCCH_CC_INCL == 1)) && (GBL_PREV > 5),pos=none
    FOR_DCCH_RC, bit,count=5,indent=2,exist=((DCCH_CC_INCL == 1)) && (GBL_PREV > 5),pos=none
    REV_DCCH_RC, bit,count=5,indent=2,exist=((DCCH_CC_INCL == 1)) && (GBL_PREV > 5),pos=none
    FOR_SCH_CC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_FOR_SCH, bit,count=2,indent=2,exist=((FOR_SCH_CC_INCL == 1)) && (GBL_PREV > 5),pos=none
    Rec2, record,type=FOR Info Rec FOR SCH Rec,maxsize=3,size=NUM_FOR_SCH,exist=((FOR_SCH_CC_INCL == 1)) && (GBL_PREV > 5),indent=2
    REV_SCH_CC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_REV_SCH, bit,count=2,exist=((REV_SCH_CC_INCL == 1)) && (GBL_PREV > 5),indent=2,pos=none
    Rec3, record,type=FOR Info Rec REV SCH Rec,maxsize=3,size=NUM_REV_SCH,exist=((REV_SCH_CC_INCL == 1)) && (GBL_PREV > 5),indent=2
    FCH_DCCH_MUX_OPTION_IND, bit,count=2,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 7),pos=none
    FOR_DCCH_MUX_OPTION, bit,count=16,indent=2,exist=((FCH_DCCH_MUX_OPTION_IND == 3)) && ((GBL_PREV > 5) && (GBL_PREV > 7)),pos=none
    REV_DCCH_MUX_OPTION, bit,count=16,indent=2,exist=((FCH_DCCH_MUX_OPTION_IND == 3)) && ((GBL_PREV > 5) && (GBL_PREV > 7)),pos=none
    FOR_PDCH_CC_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 8),pos=none
    FOR_PDCH_MUX_OPTION, bit,count=16,indent=2,exist=((FOR_PDCH_CC_INCL == 1)) && ((GBL_PREV > 5) && (GBL_PREV > 8)),pos=none
    FOR_PDCH_RC, bit,count=5,indent=2,exist=((FOR_PDCH_CC_INCL == 1)) && ((GBL_PREV > 5) && (GBL_PREV > 8)),pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, FOR Info Rec Service Config Rec, BitPack, OTTSName=CMsgForInfoRecServiceConfig
    RECORD_LEN, bit,count=8,indent=2,pos=none
    CON_REF, bit,count=8,indent=2,pos=none
    SERVICE_OPTION, bit,count=16,indent=2,pos=none
    FOR_TRAFFIC, bit,count=4,indent=2,pos=none
    REV_TRAFFIC, bit,count=4,indent=2,pos=none
    UI_ENCRYPT_MODE, bit,count=3,indent=2,exist=GBL_PREV>5,pos=none
    SR_ID, bit,count=3,indent=2,exist=GBL_PREV>5,pos=none
    RLP_INFO_INCL, bit,count=1,indent=2,exist=GBL_PREV>5,pos=none
    RLP_BLOB_LEN, bit,count=4,indent=2,exist=(RLP_INFO_INCL == 1 && GBL_PREV>5),pos=none
    Rec, record, type = BTS RLP BLOB Rec, maxsize=1, size=1, exist = (RLP_INFO_INCL == 1 && GBL_PREV>5), indent = 2
    QOS_PARMS_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    QOS_PARMS_LEN, bit,count=5,indent=2,exist=((QOS_PARMS_INCL == 1)) && (GBL_PREV > 6),pos=none
    QOS_PARMS, array,type=uint8,maxsize=32,size=QOS_PARMS_LEN,indent=2,exist=((QOS_PARMS_INCL == 1)) && (GBL_PREV > 6)
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, BTS RLP BLOB Rec, BitPack
    RLP_BLOB_TYPE, bit,count=3,indent=2,pos=none
    RLP_VERSION, bit,count=3,indent=2,pos=none
    RTT, bit,count=4,indent=2,pos=none
    INIT_VAR, bit,count=1,indent=2,pos=none
    NAK_ROUNDS_FWD, bit,count=3,indent=2,pos=none
    NAK_ROUNDS_REV, bit,count=3,indent=2,pos=none
    NAK_PER_ROUND_FWD_1, bit,count=3,indent=2,exist=(NAK_ROUNDS_FWD>0),pos=none
    NAK_PER_ROUND_FWD_2, bit,count=3,indent=2,exist=(NAK_ROUNDS_FWD>1),pos=none
    NAK_PER_ROUND_FWD_3, bit,count=3,indent=2,exist=(NAK_ROUNDS_FWD>2),pos=none
    NAK_PER_ROUND_FWD_4, bit,count=3,indent=2,exist=(NAK_ROUNDS_FWD>3),pos=none
    NAK_PER_ROUND_FWD_5, bit,count=3,indent=2,exist=(NAK_ROUNDS_FWD>4),pos=none
    NAK_PER_ROUND_FWD_6, bit,count=3,indent=2,exist=(NAK_ROUNDS_FWD>5),pos=none
    NAK_PER_ROUND_FWD_7, bit,count=3,indent=2,exist=(NAK_ROUNDS_FWD>6),pos=none
    NAK_PER_ROUND_REV_1, bit,count=3,indent=2,exist=(NAK_ROUNDS_REV>0),pos=none
    NAK_PER_ROUND_REV_2, bit,count=3,indent=2,exist=(NAK_ROUNDS_REV>1),pos=none
    NAK_PER_ROUND_REV_3, bit,count=3,indent=2,exist=(NAK_ROUNDS_REV>2),pos=none
    NAK_PER_ROUND_REV_4, bit,count=3,indent=2,exist=(NAK_ROUNDS_REV>3),pos=none
    NAK_PER_ROUND_REV_5, bit,count=3,indent=2,exist=(NAK_ROUNDS_REV>4),pos=none
    NAK_PER_ROUND_REV_6, bit,count=3,indent=2,exist=(NAK_ROUNDS_REV>5),pos=none
    NAK_PER_ROUND_REV_7, bit,count=3,indent=2,exist=(NAK_ROUNDS_REV>6),pos=none
    DELAY_DETECTION_WINDOW, bit,count=8,indent=2,exist=(RLP_BLOB_TYPE == 2),pos=none
    REXMIT_TIMER, bit,count=8,indent=2,exist=(RLP_BLOB_TYPE == 2),pos=none
    BLOB_RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, FOR Info Rec FOR SCH Rec, BitPack, OTTSName=CMsgForInfoForRecSch
    FOR_SCH_ID, bit,count=2,indent=2,pos=none
    FOR_SCH_MUX, bit,count=16,indent=2,pos=none
    SCH_REC_LEN, bit,count=4,indent=2,pos=none
    SCH_RC, bit,count=5,indent=2,pos=none
    CODING, bit,count=1,indent=2,pos=none
    FRAME_40_USED, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    FRAME_80_USED, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    MAX_RATE, bit,count=4,indent=2,exist=GBL_PREV > 6,pos=none
    RESERVED, bit,count=6,indent=2,exist=(GBL_PREV <= 6),pos=none
End

Begin Record, FOR Info Rec REV SCH Rec, BitPack, OTTSName=CMsgForInfoRevRecSch
    REV_SCH_ID, bit,count=2,indent=2,pos=none
    REV_SCH_MUX, bit,count=16,indent=2,pos=none
    SCH_REC_LEN, bit,count=4,indent=2,pos=none
    SCH_RC, bit,count=5,indent=2,pos=none
    CODING, bit,count=1,indent=2,pos=none
    FRAME_40_USED, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    FRAME_80_USED, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    MAX_RATE, bit,count=4,indent=2,exist=GBL_PREV > 6,pos=none
    RESERVED, bit,count=6,indent=2,exist=(GBL_PREV <= 6),pos=none
End

Begin Message, FOR Information Rec 8 [Called Party Subaddress] Rsp, BitPack, OTTSName=CMsgForInfoCalledPartySubaddress
    EXTENSION_BIT, bit,count=1,indent=2,pos=none
    SUBADDRESS_TYPE, bit,count=3,indent=2,pos=none
    ODD_EVEN_INDICATOR, bit,count=1,indent=2,base=enum:0 [EVEN]/1 [ODD],pos=none
    RESERVED, bit,count=3,indent=2,pos=none
    ChARi, array, type = uint8, maxsize = 100, size = end, indent = 2
End

Begin Message, FOR Information Rec 9 [Calling party Subaddress] Rsp, BitPack, OTTSName=CMsgForInfoCallingPartySubaddress
    EXTENSION_BIT, bit,count=1,indent=2,pos=none
    SUBADDRESS_TYPE, bit,count=3,indent=2,pos=none
    ODD_EVEN_INDICATOR, bit,count=1,indent=2,base=enum:0 [EVEN]/1 [ODD],pos=none
    RESERVED, bit,count=3,indent=2,pos=none
    ChARi, array, type = uint8, maxsize = 100, size = end, indent = 2
End

Begin Message, FOR Information Rec 10 [Connected Subaddress] Rsp, BitPack, OTTSName=CMsgForInfoConnectedSubaddress
    EXTENSION_BIT, bit,count=1,indent=2,pos=none
    SUBADDRESS_TYPE, bit,count=3,indent=2,pos=none
    ODD_EVEN_INDICATOR, bit,count=1,indent=2,base=enum:0 [EVEN]/1 [ODD],pos=none
    RESERVED, bit,count=3,indent=2,pos=none
    ChARi, array, type = uint8, maxsize = 100, size = end, indent = 2
End

Begin Message, FOR Information Rec 11 [Redirecting Number] Rsp, BitPack, OTTSName=CMsgForInfoRedirectingNumber
    EXTENSION_BIT_1, bit,count=1,indent=2,pos=none
    NUMBER_TYPE, bit,count=3,indent=2,base=enum:Number Types Enum,pos=none
    NUMBER_PLAN, bit,count=4,indent=2,base=enum:Number Plan Enum,pos=none
    EXTENSION_BIT_2, bit,count=1,indent=2,exist=(EXTENSION_BIT_1 == 0),pos=none
    PI, bit,count=2,indent=2,exist=(EXTENSION_BIT_1 == 0),pos=none
    RESERVED1, bit,count=3,indent=2,exist=(EXTENSION_BIT_1 == 0),pos=none
    SI, bit,count=2,indent=2,exist=(EXTENSION_BIT_1 == 0),pos=none
    EXTENSION_BIT_3, bit,count=1,indent=2,exist=(EXTENSION_BIT_2 == 0),pos=none
    RESERVED, bit,count=3,indent=2,exist=(EXTENSION_BIT_2 == 0),pos=none
    REDIRECTION_REASON, bit,count=4,indent=2,exist=(EXTENSION_BIT_2 == 0),pos=none
    ChARi, array, type = uint8, maxsize = 100, size = end, indent = 2
End

Begin Message, FOR Information Rec 12 [Redirecting Subaddress] Rsp, BitPack, OTTSName=CMsgForInfoRedirectingSubaddress
    EXTENSION_BIT, bit,count=1,indent=2,pos=none
    SUBADDRESS_TYPE, bit,count=3,indent=2,pos=none
    ODD_EVEN_INDICATOR, bit,count=1,indent=2,base=enum:0 [EVEN]/1 [ODD],pos=none
    RESERVED, bit,count=3,indent=2,pos=none
    ChARi, array, type = uint8, maxsize = 100, size = end, indent = 2
End

Begin Message, FOR Information Rec 13 [Meter Pulses] Rsp, BitPack, OTTSName=CMsgForInfoMeterPulses
    PULSE_FREQUENCY, bit,count=11,indent=2,pos=none
    PULSE_ON_TIME, bit,count=8,indent=2,pos=none
    PULSE_OFF_TIME, bit,count=8,indent=2,pos=none
    PULSE_COUNT, bit,count=4,indent=2,pos=none
    RESERVED, bit,count=1,indent=2,pos=none
End

Begin Message, FOR Information Rec 14 [Parametric Alerting] Rsp, BitPack, OTTSName=CMsgForInfoParametricAlerting
    CADENCE_COUNT, bit,count=8,indent=2,pos=none
    NUM_GROUPS, bit,count=4,indent=2,pos=none
    Rec, record, type = Info Rec Group Rec, maxsize = 100, size = NUM_GROUPS, indent = 2
    CADENCE_TYPE, bit,count=2,indent=2,exist=GBL_PREV > 6,pos=none
    RESERVED, bit,count=(GBL_PREV>6)?2:4,indent=2,pos=none
End

Begin Record, Info Rec Group Rec, BitPack, OTTSName=CMsgInfoRecGroup
    AMPLITUDE, bit,count=8,indent=2,pos=none
    FREQ_1, bit,count=10,indent=2,pos=none
    FREQ_2, bit,count=10,indent=2,pos=none
    ON_TIME, bit,count=8,indent=2,pos=none
    OFF_TIME, bit,count=8,indent=2,pos=none
    REPEAT, bit,count=4,indent=2,pos=none
    DELAY, bit,count=8,indent=2,pos=none
End

Begin Message, FOR Information Rec 15 [Line Control] Rsp, BitPack, OTTSName=CMsgForInfoLineControl
    POLARITY_INCLUDED, bit,count=1,indent=2,pos=none
    TOGGLE_MODE, bit,count=1,indent=2,exist=(POLARITY_INCLUDED == 1),pos=none
    REVERSED_POLARITY, bit,count=1,indent=2,exist=(POLARITY_INCLUDED == 1),pos=none
    POWER_DENIAL_TIME, bit,count=8,indent=2,pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, FOR Information Rec 16 [Extended Display] Rsp, BitPack, OTTSName=CMsgForInfoExtendedDisplay
    EXT_DISPLAY_IND, bit,count=1,indent=2,pos=none
    DISPLAY_TYPE, bit,count=7,indent=2,pos=none
    Rec, record, type = Info Rec Display Rec, maxsize = 20, size = end, indent = 2
End

Begin Record, Info Rec Display Rec, BitPack, OTTSName=CMsgInfoRecDisplay
    DISPLAY_TAG, bit,count=8,indent=2,pos=none
    DISPLAY_LEN, bit,count=8,indent=2,pos=none
    ChARi, array, type = uint8, maxsize = 255, size = DISPLAY_LEN, indent = 2, exist=(DISPLAY_TAG!=128||DISPLAY_TAG!=129)
End

Begin Message, FOR Information Rec 19 [Non-Negotiable Service Config] Rsp, BitPack, OTTSName=CMsgForInfoNonNegotiableServiceConfig
    FPC_INCL, bit,count=1,indent=2,pos=none
    FPC_PRI_CHAN, bit,count=1,indent=2,exist=(FPC_INCL == 1),pos=none
    FPC_MODE, bit,count=3,indent=2,exist=(FPC_INCL == 1),pos=none
    FPC_OLPC_FCH_INCL, bit,count=1,indent=2,exist=(FPC_INCL == 1),pos=none
    FPC_FCH_FER, bit,count=5,indent=2,exist=(FPC_OLPC_FCH_INCL == 1),pos=none
    FPC_FCH_MIN_SETPT, bit,count=8,indent=2,exist=(FPC_OLPC_FCH_INCL == 1),pos=none
    FPC_FCH_MAX_SETPT, bit,count=8,indent=2,exist=(FPC_OLPC_FCH_INCL == 1),pos=none
    FPC_OLPC_DCCH_INCL, bit,count=1,indent=2,exist=(FPC_INCL == 1),pos=none
    FPC_DCCH_FER, bit,count=5,indent=2,exist=(FPC_OLPC_DCCH_INCL == 1),pos=none
    FPC_DCCH_MIN_SETPT, bit,count=8,indent=2,exist=(FPC_OLPC_DCCH_INCL == 1),pos=none
    FPC_DCCH_MAX_SETPT, bit,count=8,indent=2,exist=(FPC_OLPC_DCCH_INCL == 1),pos=none
    GATING_RATE_INCL, bit,count=1,indent=2,pos=none
    PILOT_GATING_RATE, bit,count=2,indent=2,exist=(GATING_RATE_INCL == 1),pos=none
    FOR_SCH_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    NUM_FOR_SCH, bit,count=2,indent=2,exist=((FOR_SCH_INCL == 1)) && (GBL_PREV > 6),pos=none
    Rec1, record,type=FOR Information FOR SCH,maxsize=3,size=NUM_FOR_SCH,indent=2,exist=((FOR_SCH_INCL==1)) && (GBL_PREV > 6)
    REV_SCH_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    NUM_REV_SCH, bit,count=2,indent=2,exist=((REV_SCH_INCL == 1)) && (GBL_PREV > 6),pos=none
    Rec2, record,type=FOR Information REV SCH,maxsize=5,size=NUM_REV_SCH,indent=2,exist=((REV_SCH_INCL==1)) && (GBL_PREV > 6)
    RESERVED1, bit,count=2,indent=2,exist=(GBL_PREV <= 6),pos=none
    LPM_IND, bit,count=2,indent=2,pos=none
    NUM_LPM_ENTRIES, bit,count=4,indent=2,exist=(LPM_IND == 1),pos=none
    Rec, record, type = Info Rec NonNegotiable rec, maxsize = 20, size = NUM_LPM_ENTRIES, exist = (LPM_IND == 1), indent = 2
    NUM_REC, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    Service_Rec, record,type=FOR Information SpecService Rec,maxsize=10,size=NUM_REC,indent=2,exist=((NUM_REC!=0)) && ((GBL_PREV > 6))
    USE_FLEX_NUM_BITS, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    NUM_BITS_TABLES_INCL, bit,count=1,indent=2,exist=((USE_FLEX_NUM_BITS == 1)) && ((GBL_PREV > 6)),pos=none
    NUM_BITS_TABLES_COUNT, bit,count=3,indent=2,exist=((USE_FLEX_NUM_BITS==1 && NUM_BITS_TABLES_INCL==1)) && ((GBL_PREV > 6)),pos=none
    Tables_Rec, record,type=FOR Information Tables Rec,maxsize=10,size=(NUM_BITS_TABLES_COUNT+1),exist=((USE_FLEX_NUM_BITS==1&&NUM_BITS_TABLES_INCL==1)) && ((GBL_PREV > 6))
    USE_VAR_RATE, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    VAR_TABLES_INCL, bit,count=1,indent=2,exist=((USE_VAR_RATE == 1)) && ((GBL_PREV > 6)),pos=none
    VAR_RATE_TABLES_COUNT, bit,count=3,indent=2,exist=((USE_VAR_RATE==1 && VAR_TABLES_INCL==1)) && ((GBL_PREV > 6)),pos=none
    VAR_RATE_Rec, record,type=FOR Information VAR_RATE Rec,maxsize=10,size=(VAR_RATE_TABLES_COUNT+1),indent=2,exist=((USE_VAR_RATE==1 && VAR_TABLES_INCL==1)) && ((GBL_PREV > 6))
    USE_OLD_FLEX_MAPPING, bit,count=1,indent=2,exist=((USE_FLEX_NUM_BITS == 1)) && ((GBL_PREV > 6)),pos=none
    FSCH0_NBIT_TABLE_ID, bit,count=4,indent=2,exist=((USE_FLEX_NUM_BITS==1&&USE_OLD_FLEX_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    RSCH0_NBIT_TABLE_ID, bit,count=4,indent=2,exist=((USE_FLEX_NUM_BITS==1&&USE_OLD_FLEX_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    FSCH1_NBIT_TABLE_ID, bit,count=4,indent=2,exist=((USE_FLEX_NUM_BITS==1&&USE_OLD_FLEX_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    RSCH1_NBIT_TABLE_ID, bit,count=4,indent=2,exist=((USE_FLEX_NUM_BITS==1&&USE_OLD_FLEX_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    FFCH_NBIT_TABLE_ID, bit,count=4,indent=2,exist=((USE_FLEX_NUM_BITS==1&&USE_OLD_FLEX_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    RFCH_NBIT_TABLE_ID, bit,count=4,indent=2,exist=((USE_FLEX_NUM_BITS==1&&USE_OLD_FLEX_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    FDCCH_NBIT_TABLE_ID, bit,count=4,indent=2,exist=((USE_FLEX_NUM_BITS==1&&USE_OLD_FLEX_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    FDCCH_NBITS_IDX, bit,count=4,indent=2,exist=((FDCCH_NBIT_TABLE_ID!=0)) && ((GBL_PREV > 6)),pos=none
    RDCCH_NBIT_TABLE_ID, bit,count=4,indent=2,exist=((USE_FLEX_NUM_BITS==1&&USE_OLD_FLEX_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    RDCCH_NBITS_IDX, bit,count=4,indent=2,exist=((RDCCH_NBIT_TABLE_ID != 0)) && ((GBL_PREV > 6)),pos=none
    USE_OLD_VAR_MAPPING, bit,count=1,indent=2,exist=((USE_VAR_RATE == 1)) && ((GBL_PREV > 6)),pos=none
    FSCH0_VAR_TABLE_ID, bit,count=3,indent=2,exist=((USE_VAR_RATE==1 && USE_OLD_VAR_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    RSCH0_VAR_TABLE_ID, bit,count=3,indent=2,exist=((USE_VAR_RATE==1 && USE_OLD_VAR_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    FSCH1_VAR_TABLE_ID, bit,count=3,indent=2,exist=((USE_VAR_RATE==1 && USE_OLD_VAR_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    RSCH1_VAR_TABLE_ID, bit,count=3,indent=2,exist=((USE_VAR_RATE==1 && USE_OLD_VAR_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    R_INC_RATE_ALLOWED, bit,count=1,indent=2,exist=((USE_VAR_RATE == 1)) && ((GBL_PREV > 6)),pos=none
    F_INC_RATE_ALLOWED, bit,count=1,indent=2,exist=((USE_VAR_RATE == 1)) && ((GBL_PREV > 6)),pos=none
    LTU_INFO_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    LTU_TABLES_INCL, bit,count=1,indent=2,exist=((LTU_INFO_INCL==1)) && ((GBL_PREV > 6)),pos=none
    NUM_LTU_TABLES, bit,count=2,indent=2,exist=((LTU_INFO_INCL==1 && LTU_TABLES_INCL==1)) && ((GBL_PREV > 6)),pos=none
    LTU_TABLE_Rec, record,type=FOR Information LTU_TABLE Rec,maxsize=6,size=(NUM_LTU_TABLES+1),indent=2,exist=((LTU_INFO_INCL==1 && LTU_TABLES_INCL==1)) && ((GBL_PREV > 6))
    USE_OLD_LTU_MAPPING, bit,count=1,indent=2,exist=((LTU_INFO_INCL==1)) && ((GBL_PREV > 6)),pos=none
    FSCH0_LTU_TAB_ID, bit,count=3,indent=2,exist=((LTU_INFO_INCL==1 && USE_OLD_LTU_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    RSCH0_LTU_TAB_ID, bit,count=3,indent=2,exist=((LTU_INFO_INCL==1 && USE_OLD_LTU_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    FSCH1_LTU_TAB_ID, bit,count=3,indent=2,exist=((LTU_INFO_INCL==1 && USE_OLD_LTU_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    RSCH1_LTU_TAB_ID, bit,count=3,indent=2,exist=((LTU_INFO_INCL==1 && USE_OLD_LTU_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    PARTITION_TABLES_INFO_INCL, bit,count=1,indent=2,exist=((USE_FLEX_NUM_BITS==1)) && ((GBL_PREV > 6)),pos=none
    PARTITION_TABLES_INCL, bit,count=1,indent=2,exist=((PARTITION_TABLES_INFO_INCL==1)) && ((GBL_PREV > 6)),pos=none
    NUM_PARTITION_TABLES, bit,count=2,indent=2,exist=((PARTITION_TABLES_INCL==1)) && ((GBL_PREV > 6)),pos=none
    PARTITION_TABLES_Rec, record,type=FOR Information PartitionTable Rec,maxsize=6,size=(NUM_PARTITION_TABLES+1),indent=2,exist=((PARTITION_TABLES_INCL==1)) && ((GBL_PREV > 6))
    USE_OLD_PART_MAPPING, bit,count=1,indent=2,exist=((PARTITION_TABLES_INFO_INCL==1)) && ((GBL_PREV > 6)),pos=none
    FFCH_PART_TAB_ID, bit,count=3,indent=2,exist=((PARTITION_TABLES_INFO_INCL==1 && USE_OLD_PART_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    RFCH_PART_TAB_ID, bit,count=3,indent=2,exist=((PARTITION_TABLES_INFO_INCL==1 && USE_OLD_PART_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    FDCCH_PART_TAB_ID, bit,count=3,indent=2,exist=((PARTITION_TABLES_INFO_INCL==1 && USE_OLD_PART_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    RDCCH_PART_TAB_ID, bit,count=3,indent=2,exist=((PARTITION_TABLES_INFO_INCL==1 && USE_OLD_PART_MAPPING==0)) && ((GBL_PREV > 6)),pos=none
    USE_ERAM, bit,count=1,indent=2,exist=((USE_FLEX_NUM_BITS==1 || USE_VAR_RATE==1)) && ((GBL_PREV > 7)),pos=none
    SWITCHING_PARAMS_INCL, bit,count=1,indent=2,exist=((GATING_RATE_INCL==1)) && (((GBL_PREV > 7)) && ((GBL_PREV > 8))),pos=none
    NUM_SOFT_SWITCHING_FRAMES_CHM, bit,count=4,indent=2,exist=((SWITCHING_PARAMS_INCL==1)) && (((GBL_PREV > 7)) && ((GBL_PREV > 8))),pos=none
    NUM_SOFTER_SWITCHING_FRAMES_CHM, bit,count=4,indent=2,exist=((SWITCHING_PARAMS_INCL==1)) && (((GBL_PREV > 7)) && ((GBL_PREV > 8))),pos=none
    RESERVED2, bit,count=-8,indent=2,pos=none
End

Begin Record, FOR Information FOR SCH, BitPack, OTTSName = CMsgForInfoRecForSCH
    FOR_SCH_ID, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
    FOR_SCH_FRAME_OFFSET, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, FOR Information REV SCH, BitPack, OTTSName = CMsgForInfoRecRevSCH
    REV_SCH_ID, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
    REV_SCH_FRAME_OFFSET, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, Info Rec NonNegotiable Rec, BitPack, OTTSName=CMsgInfoRecNonNegotiable
    SR_ID, bit,count=3,indent=2,pos=none
    LOGICAL_RESOURCE, bit,count=4,indent=2,pos=none
    PHYSICAL_RESOURCE, bit,count=4,indent=2,pos=none
    FORWARD_FLAG, bit,count=1,indent=2,pos=none
    REVERSE_FLAG, bit,count=1,indent=2,pos=none
    PRIORITY, bit,count=4,indent=2,pos=none
End

Begin Record, FOR Information SpecService Rec, BitPack, OTTSName = CMsgForInfoSpecServiceRec
    RECORD_LEN, bit,count=8,indent=2,exist=(GBL_PREV > 6),pos=none
    SR_ID, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    SDB_SO_OMIT, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    Reserved, bit,count=-8,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, FOR Information Tables Rec, BitPack, OTTSName = CMsgForInfoTablesRec
    NUM_BITS_TABLE_ID, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    NUM_RECS, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    Rec, record,type=Tables FLEX Rec,maxsize=20,size=(NUM_RECS+1),exist=((..\USE_FLEX_NUM_BITS==1)) && ((GBL_PREV > 6)),indent=2
End

Begin Record, Tables FLEX Rec, BitPack, OTTSName = CMsgForInfoTablesFLEXRec
    NUM_BITS_IDX, bit,count=4,indent=2,pos=none
    NUM_BITS, bit,count=16,indent=2,pos=none
    CRC_LEN_IDX, bit,count=3,indent=2,pos=none
End

Begin Record, FOR Information VAR_RATE Rec, BitPack, OTTSName = CMsgForInfoVARRateRec
    VAR_RATE_TABLE_ID, bit,count=3,indent=2,pos=none
    NUM_RECS, bit,count=4,indent=2,pos=none
    Rec, record,type=VAR_RATE Rec, maxsize=20,size=(NUM_RECS+1), indent=2
End

Begin Record, VAR_RATE Rec, BitPack, OTTSName = CMsgForInfoVARRateSubRec
    NUM_BITS_IDX, bit,count=4,indent=2,pos=none
    MASK, array,type=bit,count=1,maxsize=20,size=NUM_BITS_IDX,indent=2,pos=none
End

Begin Record, FOR Information LTU_TABLE Rec, BitPack, OTTSName = CMsgForInfoLTUTableRec
    LTU_TABLE_ID, bit,count=3,indent=2,pos=none
    NUM_ROWS, bit,count=4,indent=2,pos=none
    ROWS_Rec, record,type=LTU_TABLE ROWS Rec, maxsize=20,size=(NUM_ROWS+1), indent=2
End

Begin Record, LTU_TABLE ROWS Rec, BitPack, OTTSName = CMsgForInfoLTUTableRowRec
    NBITS_IDX, bit,count=4,indent=2,pos=none
    NUM_LTUS, bit,count=4,indent=2,pos=none
End

Begin Record, FOR Information PartitionTable Rec, BitPack, OTTSName = CMsgForInfoPartitionTabRec
    PARTITION_TABLE_ID, bit,count=3,indent=2,pos=none
    NUM_ROWS, bit,count=5,indent=2,pos=none
    Rec, record,type=PartitionTable ROWS Rec,maxsize=40,size=(NUM_ROWS+1),indent=2
End

Begin Record, PartitionTable ROWS Rec, BitPack, OTTSName = CMsgFORInfoPartitionTabRowRec
    CATEGORY, bit,count=5,indent=2,pos=none
    MUX_HEADER_LEN, bit,count=3,indent=2,pos=none
    MUX_HEADER, array,type=bit,count=1,maxsize=10,size=MUX_HEADER_LEN,indent=2,pos=none
    NUM_PARTITIONS, bit,count=3,indent=2,pos=none
    Rec, record,type=PartitionTable ROWS Partition Rec, maxsize=10,size=(NUM_PARTITIONS+1),indent=2
End

Begin Record, PartitionTable ROWS Partition Rec, BitPack, OTTSName = CMsgPartitionTableRowRec
    SR_ID, bit,count=3,indent=2,pos=none
    SRV_NUM_BITS, bit,count=9,indent=2,pos=none
End

Begin Message, FOR Information Rec 20 [Multiple Char Extended Display] Rsp, BitPack, OTTSName=CMsgForInfoMulCharExtDisplay
    MC_EXT_DISPLAY_IND, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    DISPLAY_TYPE, bit,count=7,indent=2,exist=(GBL_PREV > 6),pos=none
    Rec, record,type=FOR Information MulDisplay Rec,maxsize=40,size=end,indent=2,exist=(GBL_PREV > 6)
    Reserved, bit,count=-8,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, FOR Information MulDisplay Rec, BitPack, OTTSName = CMsgForInfoMulDisplayRec
    DISPLAY_TAG, bit,count=8,indent=2,pos=none
    NUM_RECORD, bit,count=8,indent=2,pos=none
    Rec, record,type=MulDisplay Record Field Rec,maxsize=255,size=NUM_RECORD,indent=2,exist=(DISPLAY_TAG!=128||DISPLAY_TAG!=129)
End

Begin Record, MulDisplay Record Field Rec, BitPack, OTTSName = CMsgMulDisplayFieldRec
    DISPLAY_ENCODING, bit,count=8,indent=2,pos=none
    NUM_FIELDS, bit,count=8,indent=2,pos=none
    ChARi, array, type=uint8, maxsize=255, size=NUM_FIELDS, indent=2
End

Begin Message, FOR Information Rec 21 [Call Waiting Indicator] Rsp, BitPack, OTTSName=CMsgForInfoCallWaitingInd
    CALL_WAITING_INDICATOR, bit,count=1,indent=2,pos=none
    Reserved, bit,count=7,indent=2,pos=none
End

Begin Message, FOR Information Rec Extended Record Type-International Rsp, BitPack, OTTSName=CMsgForInfoExtRecTypeInternational
    MCC, bit,count=10,indent=2,pos=none
    Countrytype, bit,count=6,indent=2,pos=none
    ChARi, array, type = uint8, maxsize = 100, size = end, indent = 2
End

Begin Message, Paging Msg Rec PC - Extended System Parameters Rsp, BitPack, OTTSName=CMsgPageExtendedSystemParameters
    PILOT_PN, bit,count=9,indent=2,pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,pos=none
    DELETE_FOR_TMSI, bit,count=1,indent=2,pos=none
    USE_TMSI, bit,count=1,indent=2,pos=none
    PREF_MSID_TYPE, bit,count=2,indent=2,base=enum:0 [IMSI_S and ESN]/1 []/2 [IMSI]/3 [IMSI and ESN],pos=none
    MCC, bit,count=10,indent=2,pos=none
    IMSI_11_12, bit,count=7,indent=2,pos=none
    TMSI_ZONE_LEN, bit,count=4,indent=2,pos=none
    TMSI_ZONE, array, type=uint8, maxsize=15, size=TMSI_ZONE_LEN, indent = 2
    BCAST_INDEX, bit,count=3,indent=2,pos=none
    IMSI_T_SUPPORTED, bit,count=1,indent=2,pos=none
    P_REV, bit,count=8,indent=2,pos=none
    MIN_P_REV, bit,count=8,indent=2,pos=none
    SOFT_SLOPE, bit,count=6,indent=2,pos=none
    ADD_INTERCEPT, bit,count=6,indent=2,pos=none
    DROP_INTERCEPT, bit,count=6,indent=2,pos=none
    PACKET_ZONE_ID, bit,count=8,indent=2,pos=none
    MAX_NUM_ALT_SO, bit,count=3,indent=2,pos=none
    RESELECT_INCLUDED, bit,count=1,indent=2,pos=none
    EC_THRESH, bit,count=5,indent=2,exist=(RESELECT_INCLUDED == 1),pos=none
    EC_IO_THRESH, bit,count=5,indent=2,exist=(RESELECT_INCLUDED == 1),pos=none
    PILOT_REPORT, bit,count=1,indent=2,pos=none
    NGHBR_SET_ENTRY_INFO, bit,count=1,indent=2,pos=none
    ACC_ENT_HO_ORDER, bit,count=1,indent=2,exist=(NGHBR_SET_ENTRY_INFO == 1),pos=none
    NGHBR_SET_ACCESS_INFO, bit,count=1,indent=2,pos=none
    ACCESS_HO, bit,count=1,indent=2,exist=(NGHBR_SET_ACCESS_INFO == 1),pos=none
    ACCESS_HO_MSG_RSP, bit,count=1,indent=2,exist=((ACCESS_HO == 1 )) && ((NGHBR_SET_ACCESS_INFO == 1)),pos=none
    ACCESS_PROBE_HO, bit,count=1,indent=2,exist=(NGHBR_SET_ACCESS_INFO == 1),pos=none
    ACC_HO_LIST_UPD, bit,count=1,indent=2,exist=((ACCESS_PROBE_HO == 1)) && ((NGHBR_SET_ACCESS_INFO == 1)),pos=none
    ACC_PROBE_HO_OTHER_MSG, bit,count=1,indent=2,exist=((ACCESS_PROBE_HO == 1 )) && ((NGHBR_SET_ACCESS_INFO == 1)),pos=none
    MAX_NUM_PROBE_HO, bit,count=3,indent=2,exist=((ACCESS_PROBE_HO == 1 )) && ((NGHBR_SET_ACCESS_INFO == 1)),pos=none
    NGHBR_SET_SIZE, bit,count=6,indent=2,exist=(NGHBR_SET_ACCESS_INFO == 1) || (NGHBR_SET_ENTRY_INFO == 1),pos=none
    ACCESS_ENTRY_HO, record, type = ESP Access Entry HO Rec, maxsize = 63, size = NGHBR_SET_SIZE, indent = 2, exist = (NGHBR_SET_ENTRY_INFO == 1)
    ACCESS_HO_ALLOWED, record, type = ESP Access Ho Allowed Rec, maxsize = 63, size = NGHBR_SET_SIZE, indent = 2, exist = (NGHBR_SET_ACCESS_INFO == 1)
    BROADCAST_GPS_ASST, bit,count=1,indent=2,pos=none
    QPCH_SUPPORTED, bit,count=1,indent=2,pos=none
    NUM_QPCH, bit,count=2,indent=2,exist=(QPCH_SUPPORTED == 1),pos=none
    QPCH_RATE, bit,count=1,indent=2,exist=(QPCH_SUPPORTED == 1),pos=none
    QPCH_POWER_LEVEL_PAGE, bit,count=3,indent=2,exist=(QPCH_SUPPORTED == 1),pos=none
    QPCH_CCI_SUPPORTED, bit,count=1,indent=2,exist=(QPCH_SUPPORTED == 1),pos=none
    QPCH_POWER_LEVEL_CONFIG, bit,count=3,indent=2,exist=(QPCH_CCI_SUPPORTED == 1),pos=none
    SDB_SUPPORTED, bit,count=1,indent=2,pos=none
    RLGAIN_TRAFFIC_PILOT, bit,count=6,indent=2,pos=none
    REV_PWR_CNTL_DELAY_INCL, bit,count=1,indent=2,pos=none
    REV_PWR_CNTL_DELAY, bit,count=2,indent=2,exist=(REV_PWR_CNTL_DELAY_INCL == 1),pos=none
    AUTO_MSG_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    AUTO_MSG_INTERVAL, bit,count=3,indent=2,exist=((AUTO_MSG_SUPPORTED==1)) && ((GBL_PREV > 6)),pos=none
    MOB_QOS, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    ENC_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    SIG_ENCRYPT_SUP, bit,count=8,indent=2,exist=((ENC_SUPPORTED==1)) && ((GBL_PREV > 6)),pos=none
    UI_ENCRYPT_SUP, bit,count=8,indent=2,exist=((ENC_SUPPORTED==1)) && ((GBL_PREV > 6)),pos=none
    USE_SYNC_ID, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    CS_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    BCCH_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    MS_INIT_REQ_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    PILOT_INFO_REQ_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    QPCH_BI_SUPPORTED, bit,count=1,indent=2,exist=((QPCH_SUPPORTED==1)) && ((GBL_PREV > 7)),pos=none
    QPCH_POWER_LEVEL_BCAST, bit,count=3,indent=2,exist=((QPCH_SUPPORTED==1&&QPCH_BI_SUPPORTED==1)) && ((GBL_PREV > 7)),pos=none
    BAND_CLASS_INFO_REQ, bit,count=1,indent=2,exist=(GBL_PREV > 7),pos=none
    ALT_BAND_CLASS, bit,count=5,indent=2,exist=((BAND_CLASS_INFO_REQ == 1)) && ((GBL_PREV > 7)),pos=none
    CDMA_OFF_TIME_REP_SUP_IND, bit,count=1,indent=2,exist=(GBL_PREV > 7),pos=none
    CDMA_OFF_TIME_REP_THRESHOLD_UNIT, bit,count=1,indent=2,exist=((CDMA_OFF_TIME_REP_SUP_IND==1)) && ((GBL_PREV > 7)),pos=none
    CDMA_OFF_TIME_REP_THRESHOLD, bit,count=3,indent=2,exist=((CDMA_OFF_TIME_REP_SUP_IND==1)) && ((GBL_PREV > 7)),pos=none
    RELEASE_TO_IDLE_IND, bit,count=1,indent=2,exist=(GBL_PREV > 8),pos=none
    RECONNECT_MSG_IND, bit,count=1,indent=2,exist=(GBL_PREV > 8),pos=none
    MSG_INTEGRITY_SUP, bit,count=1,indent=2,exist=(GBL_PREV > 8),pos=none
    SIG_INTEGRITY_SUP_INCL, bit,count=1,indent=2,exist=((MSG_INTEGRITY_SUP==1)) && ((GBL_PREV > 8)),pos=none
    SIG_INTEGRITY_SUP, bit,count=8,indent=2,exist=((MSG_INTEGRITY_SUP==1)) && ((GBL_PREV > 8)),pos=none
    FOR_PDCH_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 8),pos=none
    RLGAIN_ACKCQICH_PILOT, bit,count=6,indent=2,exist=((FOR_PDCH_SUPPORTED==1)) && ((GBL_PREV > 8)),pos=none
    PDCH_PARAMS_INCL, bit,count=1,indent=2,exist=((FOR_PDCH_SUPPORTED==1)) && ((GBL_PREV > 8)),pos=none
    NUM_SOFT_SWITCHING_FRAMES, bit,count=4,indent=2,exist=((GBL_PREV > 8)) && ((PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFTER_SWITCHING_FRAMES, bit,count=4,indent=2,exist=((GBL_PREV > 8)) && ((PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFT_SWITCHING_SLOTS, bit,count=2,indent=2,exist=((GBL_PREV > 8)) && ((PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFTER_SWITCHING_SLOTS, bit,count=2,indent=2,exist=((GBL_PREV > 8)) && ((PDCH_PARAMS_INCL==1)),pos=none
    PDCH_SOFT_SWITCHING_DELAY, bit,count=8,indent=2,exist=((GBL_PREV > 8)) && ((PDCH_PARAMS_INCL==1)),pos=none
    PDCH_SOFTER_SWITCHING_DELAY, bit,count=8,indent=2,exist=((GBL_PREV > 8)) && ((PDCH_PARAMS_INCL==1)),pos=none
    WALSH_TABLE_ID, bit,count=3,indent=2,exist=((GBL_PREV > 8)) && ((PDCH_PARAMS_INCL==1)),pos=none
    NUM_PDCCH, bit,count=3,indent=2,exist=((GBL_PREV > 8)) && ((PDCH_PARAMS_INCL==1)),pos=none
    Rec, record,type=ESPM WALSH Record,maxsize=10,size=(NUM_PDCCH+1),indent=2,exist=((GBL_PREV > 8)) && ((PDCH_PARAMS_INCL==1))
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, ESP Access Entry HO Rec, BitPack, OTTSName=CMsgAccessEntryHO
    ACCESS_ENTRY_HO, bit,count=1,indent=2,pos=none
End

Begin Record, ESP Access HO Allowed Rec, BitPack, OTTSName=CMsgAccessHOAllowed
    ACCESS_HO_ALLOWED, bit,count=1,indent=2,pos=none
End

Begin Record, ESPM WALSH Record, BitPack, OTTSName = CMsgESPMWALSHRec
    FOR_PDCCH_WALSH, bit,count=6,indent=2,exist=(GBL_PREV > 8),pos=none
End

Begin Message, Paging Msg Rec PC - Extended Neighbor List Rsp, BitPack, OTTSName=CMsgPageExtendedNeighborList
    PILOT_PN, bit,count=9,indent=2,pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,pos=none
    PILOT_INC, bit,count=4,indent=2,pos=none
    NGHBR_Rec, record, type = ENLM Neighbor Rec, maxsize=50, size=end, minbytes=2
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, ENLM Neighbor Rec, BitPack, OTTSName=CMsgENLMNeighbor
    NGHBR_CONFIG, bit,count=3,indent=2,pos=none
    NGHBR_PN, bit,count=9,indent=2,pos=none
    SEARCH_PRIORITY, bit,count=2,indent=2,base=enum:0 [Low]/1 [Med]/2 [High]/3 [Very High],pos=none
    FREQ_INCL, bit,count=1,indent=2,pos=none
    NGHBR_BAND, bit,count=5,indent=2,exist=(FREQ_INCL == 1),pos=none
    NGHBR_FREQ, bit,count=11,indent=2,exist=(FREQ_INCL == 1),pos=none
End

Begin Message, Paging Msg Rec PC - Status Request Rsp, BitPack, OTTSName=CMsgPageStatusRequest
    ARQ_Rec, record, type = Fcsch Arq Rec, maxsize = 1, indent = 2
    ADDRESS_Rec, record, type = Fcsch Address Rec, maxsize = 1, indent = 2
    Integrity_Rec, record,type=Message Integrity Rec,maxsize=1,exist=((GBL_PREV>8 && ..\PD==2)) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    ExtEncry_Rec, record,type=Fcsch Ext-Encryption Rec,maxsize=1,exist=(((GBL_FORCHTYPE==0 && ..\PD==1 && GBL_PREV<9)||(GBL_FORCHTYPE==0 && ..\PD!=0 && GBL_PREV>8) ||(GBL_FORCHTYPE==1 && ..\PD!=1))) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    RESERVED, bit,count=4,indent=2,pos=none
    QUAL_INFO_Rec, record, type= Qual Info Rec, maxsize=1, indent = 2
    NUM_FIELDS, bit,count=4,indent=2,pos=none
    RECORD_TYPE_Rec, record, type = STRQM Record Type Rec, size=NUM_FIELDS, maxsize=15, indent = 2
    PDU_PADDING, bit,count=-2,indent=2,pos=none
    MACI, bit,count=32,indent=2,exist=(GBL_PREV>8 && ADDRESS_Rec\ADDR_TYPE!=5 && ..\PD==2 && Integrity_Rec\MACI_INCL == 1),pos=none
End

Begin Record, STRQM Record Type Rec, BitPack, OTTSName=CMsgSTRQMRecord
    RECORD_TYPE, uint8, base=enum:Status Request Record Type Enum, indent = 2
End

Begin Message, Paging Msg Rec PC - Service Redirection Rsp, BitPack, OTTSName=CMsgPageServiceRedirection
    ARQ_Rec, record, type = Fcsch Arq Rec, maxsize = 1, indent = 2
    ADDRESS_Rec, record, type = Fcsch Address Rec, maxsize = 1, indent = 2
    Integrity_Rec, record,type=Message Integrity Rec,maxsize=1,exist=((GBL_PREV>8 && ..\PD==2)) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    ExtEncry_Rec, record,type=Fcsch Ext-Encryption Rec,maxsize=1,exist=(((GBL_FORCHTYPE==0 && ..\PD==1 && GBL_PREV<9)||(GBL_FORCHTYPE==0 && ..\PD!=0 && GBL_PREV>8) ||(GBL_FORCHTYPE==1 && ..\PD!=1))) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    RETURN_IF_FAIL, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=2,indent=2,exist=(GBL_PREV < 5  && GBL_PREV >1),pos=none
    DELETE_TMSI, bit,count=1,indent=2,exist=!(GBL_PREV < 5  && GBL_PREV >1),pos=none
    REDIRECT_TYPE, bit,count=1,indent=2,base=enum:0 [Normal]/1 [NDSS],exist=!(GBL_PREV < 5  && GBL_PREV >1),pos=none
    REDIRECT_Rec, record, type=Service Redirection Rec, maxsize=1, indent = 2
    PDU_PADDING, bit,count=-2,indent=2,pos=none
    MACI, bit,count=32,indent=2,exist=(GBL_PREV>8 && ADDRESS_Rec\ADDR_TYPE!=5 && ..\PD==2 && Integrity_Rec\MACI_INCL == 1),pos=none
End

Begin Record, Service Redirection Rec, BitPack, OTTSName=CMsgServiceRedirection
    RECORD_TYPE, bit,count=8,indent=2,base=enum:Service Redirection Type Enum,pos=none
    RECORD_LEN, bit,count=8,indent=2,pos=none
    Rec, union,enum=RECORD_TYPE,consumebytes=RECORD_LEN,indent=2,exist=(GBL_PREV == 1 || GBL_PREV >4)
    RecA, array,type=uint8,maxsize=100,indent=2,exist=!(GBL_PREV == 1 || GBL_PREV >4)
End

Begin Message, Service Redirection Rec 0 [NDSS off indication] Rsp, BitPack, OTTSName=CMsgSvcRedirToNDSS
End

Begin Message, Service Redirection Rec 1 [Redirection to AMPS] Rsp, BitPack, OTTSName=CMsgSvcRedirToAMPS
    EXPECTED_SID, bit,count=15,indent=2,pos=none
    IGNORE_CDMA, bit,count=1,indent=2,pos=none
    SYS_ORDERING, bit,count=3,indent=2,pos=none
    RESERVED, bit,count=5,indent=2,pos=none
End

Begin Message, Service Redirection Rec 2 [Redirection to CDMA] Rsp, BitPack, OTTSName=CMsgSvcRedirToCDMA
    BAND_CLASS, bit,count=5,indent=2,pos=none
    EXPECTED_SID, bit,count=15,indent=2,pos=none
    EXPECTED_NID, bit,count=16,indent=2,pos=none
    RESERVED1, bit,count=4,indent=2,pos=none
    NUM_CHANS, bit,count=4,indent=2,pos=none
    CDMA_CHAN_Rec, record, type=Service Redirection CDMA Chan Rec, maxsize=15, size=NUM_CHANS, indent=2
    RESERVED2, bit,count=-8,indent=2,pos=none
End

Begin Record, Service Redirection CDMA Chan Rec, BitPack, OTTSName=CMsgServiceRedirCDMAChan
    CDMA_CHAN, bit,count=11,indent=2,pos=none
End

Begin Message, Service Redirection Rec 5 [Redirection to a DS-41 system] Rsp, BitPack, OTTSName=CMsgSvcRedirToDS41
End

Begin Message, Paging Msg Rec PC - General Page Rsp, Bitpack, OTTSName=CMsgPageGeneralPage
    CONFIG_MSG_SEQ, bit,count=6,indent=2,pos=none
    ACC_MSG_SEQ, bit,count=6,indent=2,pos=none
    CLASS_0_DONE, bit,count=1,indent=2,pos=none
    CLASS_1_DONE, bit,count=1,indent=2,pos=none
    TMSI_DONE, bit,count=1,indent=2,exist=(GBL_PREV == 1 || GBL_PREV > 5),pos=none
    ORDERED_TMSIS, bit,count=1,indent=2,exist=(GBL_PREV == 1 || GBL_PREV > 5),pos=none
    Rsvd1, bit,count=2,indent=2,exist=!(GBL_PREV == 1 || GBL_PREV > 5),pos=none
    BROADCAST_DONE, bit,count=1,indent=2,pos=none
    RESERVED, bit,count=4,indent=2,pos=none
    ADD_LENGTH, bit,count=3,indent=2,pos=none
    ADD_PFIELD, array, type=uint8, maxsize=8, size=ADD_LENGTH, columns=40, indent = 2
    Page, record, type=Page Record Rec, maxsize=15, size=end, minbytes=5
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, Page Record Rec, Bitpack, OTTSName=CMsgPageRec
    PageClassId, bit,count=4,base=enum:Page Class Enum,indent=2,pos=none
    PAGE_SUBCLASS_EXT, bit,count=2,indent=2,exist=(GBL_PREV>6 && PageClassId>12),pos=none
    Rec, union,   enum=PageClassId
End

Begin Message, Page Record Rec 0_IMSI_S Rsp, BitPack, OTTSName=CMsgPageRec0_IMSI_S
    MSG_SEQ, bit,count=3,indent=2,pos=none
    IMSI_S, bit,count=34,indent=2,base=16,pos=none
    Spec_Rec, record, type = Page Record SpecRecord,maxsize=1,indent = 2, exist = (GBL_PREV > 5)
    SPECIAL_SERVICE, bit,count=1,indent=2,exist=(GBL_PREV < 6),pos=none
    SERVICEOPTION, bit,count=16,indent=2,exist=((SPECIAL_SERVICE==1)) && ((GBL_PREV < 6)),pos=none
    SERVICE_OPTION, bit,count=16,indent=2,exist=((Spec_Rec\SDU_INCLUDED==1)) && ((GBL_PREV > 5)),pos=none
End

Begin Record, Page Record SpecRecord, BitPack, OTTSName=CMsgPageSpecRec
    SDU_INCLUDED, bit,count=1,indent=2,pos=none
End

Begin Message, Page Record Rec 0_IMSI_S_IMSI_11_12 Rsp, BitPack, OTTSName=CMsgPageRec0_IMSI_S_IMSI_11_12
    MSG_SEQ, bit,count=3,indent=2,pos=none
    IMSI_11_12, bit,count=7,indent=2,pos=none
    IMSI_S, bit,count=34,indent=2,base=16,pos=none
    Spec_Rec, record, type = Page Record SpecRecord,maxsize=1,indent = 2, exist = (GBL_PREV > 5)
    SPECIAL_SERVICE, bit,count=1,indent=2,exist=(GBL_PREV < 6),pos=none
    SERVICEOPTION, bit,count=16,indent=2,exist=((SPECIAL_SERVICE==1)) && ((GBL_PREV < 6)),pos=none
    SERVICE_OPTION, bit,count=16,indent=2,exist=((Spec_Rec\SDU_INCLUDED==1)) && ((GBL_PREV > 5)),pos=none
End

Begin Message, Page Record Rec 0_IMSI_S_MCC Rsp, BitPack, OTTSName=CMsgPageRec0_IMSI_S_MCC
    MSG_SEQ, bit,count=3,indent=2,pos=none
    MCC, bit,count=10,indent=2,pos=none
    IMSI_S, bit,count=34,indent=2,base=16,pos=none
    Spec_Rec, record, type = Page Record SpecRecord,maxsize=1,indent = 2, exist = (GBL_PREV > 5)
    SPECIAL_SERVICE, bit,count=1,indent=2,exist=(GBL_PREV < 6),pos=none
    SERVICEOPTION, bit,count=16,indent=2,exist=((SPECIAL_SERVICE==1)) && ((GBL_PREV < 6)),pos=none
    SERVICE_OPTION, bit,count=16,indent=2,exist=((Spec_Rec\SDU_INCLUDED==1)) && ((GBL_PREV > 5)),pos=none
End

Begin Message, Page Record Rec 0_IMSI_S_IMSI_11_12_MCC Rsp, BitPack, OTTSName=CMsgPageRec0_IMSI_S_IMSI_11_12_MCC
    MSG_SEQ, bit,count=3,indent=2,pos=none
    MCC, bit,count=10,indent=2,pos=none
    IMSI_11_12, bit,count=7,indent=2,pos=none
    IMSI_S, bit,count=34,indent=2,base=16,pos=none
    Spec_Rec, record, type = Page Record SpecRecord,maxsize=1,indent = 2, exist = (GBL_PREV > 5)
    SPECIAL_SERVICE, bit,count=1,indent=2,exist=(GBL_PREV < 6),pos=none
    SERVICEOPTION, bit,count=16,indent=2,exist=((SPECIAL_SERVICE==1)) && ((GBL_PREV < 6)),pos=none
    SERVICE_OPTION, bit,count=16,indent=2,exist=((Spec_Rec\SDU_INCLUDED==1)) && ((GBL_PREV > 5)),pos=none
End

Begin Message, Page Record Rec 1_IMSI_S_IMSI_11_12 Rsp, BitPack, OTTSName=CMsgPageRec1_IMSI_S_IMSI_11_12
    MSG_SEQ, bit,count=3,indent=2,pos=none
    IMSI_ADDR_NUM, bit,count=3,indent=2,pos=none
    IMSI_11_12, bit,count=7,indent=2,pos=none
    IMSI_S, bit,count=34,indent=2,base=16,pos=none
    Spec_Rec, record, type = Page Record SpecRecord,maxsize=1,indent = 2, exist = (GBL_PREV > 5)
    SPECIAL_SERVICE, bit,count=1,indent=2,exist=(GBL_PREV < 6),pos=none
    SERVICEOPTION, bit,count=16,indent=2,exist=((SPECIAL_SERVICE==1)) && ((GBL_PREV < 6)),pos=none
    SERVICE_OPTION, bit,count=16,indent=2,exist=((Spec_Rec\SDU_INCLUDED==1)) && ((GBL_PREV > 5)),pos=none
End

Begin Message, Page Record Rec 1_IMSI_S_IMSI_11_12_MCC Rsp, BitPack, OTTSName=CMsgPageRec1_IMSI_S_IMSI_11_12_MCC
    MSG_SEQ, bit,count=3,indent=2,pos=none
    IMSI_ADDR_NUM, bit,count=3,indent=2,pos=none
    MCC, bit,count=10,indent=2,pos=none
    IMSI_11_12, bit,count=7,indent=2,pos=none
    IMSI_S, bit,count=34,indent=2,base=16,pos=none
    Spec_Rec, record, type = Page Record SpecRecord,maxsize=1,indent = 2, exist = (GBL_PREV > 5)
    SPECIAL_SERVICE, bit,count=1,indent=2,exist=(GBL_PREV < 6),pos=none
    SERVICEOPTION, bit,count=16,indent=2,exist=((SPECIAL_SERVICE==1)) && ((GBL_PREV < 6)),pos=none
    SERVICE_OPTION, bit,count=16,indent=2,exist=((Spec_Rec\SDU_INCLUDED==1)) && ((GBL_PREV > 5)),pos=none
End

Begin Message, Page Record Rec Reserved1 Rsp, BitPack, OTTSName=CMsgPageRecReserved1
End

Begin Message, Page Record Rec Reserved2 Rsp, BitPack, OTTSName=CMsgPageRecReserved2
End

Begin Message, Page Record Rec 2_32 Rsp, BitPack, OTTSName=CMsgPageRec2_32
    MSG_SEQ, bit,count=3,indent=2,pos=none
    TMSI_CODE_ADDR, bit,count=32,indent=2,pos=none
    Spec_Rec, record, type = Page Record SpecRecord,maxsize=1,indent = 2, exist = (GBL_PREV > 5)
    SPECIAL_SERVICE, bit,count=1,indent=2,exist=(GBL_PREV < 6),pos=none
    SERVICEOPTION, bit,count=16,indent=2,exist=((SPECIAL_SERVICE==1)) && ((GBL_PREV < 6)),pos=none
    SERVICE_OPTION, bit,count=16,indent=2,exist=((Spec_Rec\SDU_INCLUDED==1)) && ((GBL_PREV > 5)),pos=none
End

Begin Message, Page Record Rec 2_24 Rsp, BitPack, OTTSName=CMsgPageRec2_24
    MSG_SEQ, bit,count=3,indent=2,pos=none
    TMSI_CODE_ADDR, bit,count=24,indent=2,pos=none
    Spec_Rec, record, type = Page Record SpecRecord,maxsize=1,indent = 2, exist = (GBL_PREV > 5)
    SPECIAL_SERVICE, bit,count=1,indent=2,exist=(GBL_PREV < 6),pos=none
    SERVICEOPTION, bit,count=16,indent=2,exist=((SPECIAL_SERVICE==1)) && ((GBL_PREV < 6)),pos=none
    SERVICE_OPTION, bit,count=16,indent=2,exist=((Spec_Rec\SDU_INCLUDED==1)) && ((GBL_PREV > 5)),pos=none
End

Begin Message, Page Record Rec 2_16 Rsp, BitPack, OTTSName=CMsgPageRec2_16
    MSG_SEQ, bit,count=3,indent=2,pos=none
    TMSI_CODE_ADDR, bit,count=16,indent=2,pos=none
    Spec_Rec, record, type = Page Record SpecRecord,maxsize=1,indent = 2, exist = (GBL_PREV > 5)
    SPECIAL_SERVICE, bit,count=1,indent=2,exist=(GBL_PREV < 6),pos=none
    SERVICEOPTION, bit,count=16,indent=2,exist=((SPECIAL_SERVICE==1)) && ((GBL_PREV < 6)),pos=none
    SERVICE_OPTION, bit,count=16,indent=2,exist=((Spec_Rec\SDU_INCLUDED==1)) && ((GBL_PREV > 5)),pos=none
End

Begin Message, Page Record Rec 2_32_TMSI_ZONE Rsp, BitPack, OTTSName=CMsgPageRec2_32_TMSI_ZONE
    MSG_SEQ, bit,count=3,indent=2,pos=none
    TMSI_ZONE_LEN, bit,count=4,indent=2,pos=none
    TMSI_ZONE, array, type=uint8, maxsize=16, size=TMSI_ZONE_LEN, indent = 2
    TMSI_CODE_ADDR, bit,count=32,indent=2,pos=none
    Spec_Rec, record, type = Page Record SpecRecord,maxsize=1,indent = 2, exist = (GBL_PREV > 5)
    SPECIAL_SERVICE, bit,count=1,indent=2,exist=(GBL_PREV < 6),pos=none
    SERVICEOPTION, bit,count=16,indent=2,exist=((SPECIAL_SERVICE==1)) && ((GBL_PREV < 6)),pos=none
    SERVICE_OPTION, bit,count=16,indent=2,exist=((Spec_Rec\SDU_INCLUDED==1)) && ((GBL_PREV > 5)),pos=none
End

Begin Message, Page Record Rec Class3_Broadcast Rsp, BitPack, OTTSName=CMsgPageRecClass3_Broadcast
    BURST_TYPE, bit,count=6,indent=2,pos=none
    ADDR_LEN, bit,count=4,indent=2,pos=none
    BC_ADDR, array,   type=uint8, maxsize=16, size=ADDR_LEN, indent = 2
End

Begin Message, Page Record Rec Class3a_Broadcast Rsp, BitPack, OTTSName=CMsgPageRecClass3a_Broadcast
    Reserved32, bit,count=32,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 0)),pos=none
    Reserved24, bit,count=24,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 1)),pos=none
    Reserved16, bit,count=16,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 2)),pos=none
    LENGTH, bit,count=4,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 3)),pos=none
    Reserved, array,type=uint8,maxsize=20,size=LENGTH+4,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 3))
End

Begin Message, Page Record Rec Class3b_Broadcast Rsp, BitPack, OTTSName=CMsgPageRecClass3b_Broadcast
    Reserved32, bit,count=32,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 0)),pos=none
    Reserved68, array,type=bit,count=1,maxsize=68,size=68,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 1)),pos=none
    Reserved76, array,type=bit,count=1,maxsize=76,size=76,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 2)),pos=none
End

Begin Message, Page Record Rec Class3c_Broadcast Rsp, BitPack, OTTSName=CMsgPageRecClass3c_Broadcast
    BURST_TYPE, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    ADDR_LEN, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    BC_ADDR, array,type=uint8,maxsize=16,size=ADDR_LEN,indent=2,exist=(GBL_PREV > 6)
    Spec_Rec, record,type=Page Record Broadcast Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    BCN, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    TIME_OFFSET, bit,count=10,indent=2,exist=(GBL_PREV > 6),pos=none
    REPEAT_TIME_OFFSET, bit,count=5,indent=2,exist=((Spec_Rec\EXT_BCAST_SDU_LENGTH_IND==1||Spec_Rec\EXT_BCAST_SDU_LENGTH_IND==3)) && ((GBL_PREV > 6)),pos=none
    ADD_BCAST_RECORD, array,type=uint8,maxsize=15,size=(Spec_Rec\EXT_BCAST_SDU_LENGTH),exist=((Spec_Rec\EXT_BCAST_SDU_LENGTH_IND>1)) && ((GBL_PREV > 6))
End

Begin Record, Page Record Broadcast Rec, BitPack, OTTSName = CMsgPageBroadcastRec
    EXT_BCAST_SDU_LENGTH_IND, bit,count=2,indent=2,pos=none
    EXT_BCAST_SDU_LENGTH, bit,count=4,indent=2,exist=(EXT_BCAST_SDU_LENGTH_IND>1),pos=none
End

Begin Message, Paging Msg Rec PC - Global Service Redirection Rsp, Bitpack, OTTSName=CMsgPageGlobalServiceRedirection
    PILOT_PN, bit,count=9,indent=2,pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,pos=none
    REDIRECT_ACCOLC, bit,count=16,indent=2,base=16,pos=none
    RETURN_IF_FAIL, bit,count=1,indent=2,pos=none
    DELETE_TMSI, bit,count=1,indent=2,pos=none
    EXCL_P_REV_MS, bit,count=1,indent=2,pos=none
    REDIRECT_Rec, record, type = Global Service Redirection Rec, maxsize = 1, indent = 2
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, Global Service Redirection Rec, BitPack, OTTSName=CMsgGlobalSvcRedir
    RECORD_TYPE, bit,count=8,indent=2,base=enum:Global Service Redirection Enum,pos=none
    RECORD_LEN, bit,count=8,indent=2,pos=none
    Rec, union,enum=RECORD_TYPE,consumebytes=RECORD_LEN,exist=(GBL_PREV == 1 || GBL_PREV >5)
    RecA, array,type=uint8,maxsize=100,size=RECORD_LEN,indent=2,exist=!(GBL_PREV == 1 || GBL_PREV >5)
End

Begin Message, Global Service Redirection Rec Redirection to AMPS Rsp, Bitpack, OTTSName=CMsgGlobalSvcRedirToAmps
    EXPECTED_SID, bit,count=15,indent=2,pos=none
    IGNORE_CDMA, bit,count=1,indent=2,pos=none
    SYS_ORDERING, bit,count=3,indent=2,pos=none
    RESERVED, bit,count=5,indent=2,exist=(GBL_PREV == 1),pos=none
    MAX_REDIRECT_DELAY, bit,count=5,indent=2,exist=(GBL_PREV > 5),pos=none
End

Begin Message, Global Service Redirection Rec Redirection to CDMA Rsp, Bitpack, OTTSName=CMsgGlobalSvcRedirtoCDMA
    BAND_CLASS, bit,count=5,indent=2,pos=none
    EXPECTED_SID, bit,count=15,indent=2,pos=none
    EXPECTED_NID, bit,count=16,indent=2,pos=none
    RESERVED1, bit,count=4,indent=2,pos=none
    NUM_CHANS, bit,count=4,indent=2,pos=none
    Rec, record, type = Service Redirection CDMA Chan Rec, maxsize=15,size=NUM_CHANS
    RESERVED2, bit,count=-8,indent=2,pos=none
End

Begin Message, Paging Msg Rec PC - TMSI Assignment Rsp, Bitpack, OTTSName=CMsgPageTMSIAssignment
    ARQ_Rec, record, type = Fcsch Arq Rec, maxsize = 1, indent = 2
    ADDRESS_Rec, record, type = Fcsch Address Rec, maxsize = 1, indent = 2
    Integrity_Rec, record,type=Message Integrity Rec,maxsize=1,exist=((GBL_PREV>8 && ..\PD==2)) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    ExtEncry_Rec, record,type=Fcsch Ext-Encryption Rec,maxsize=1,exist=(((GBL_FORCHTYPE==0 && ..\PD==1 && GBL_PREV<9)||(GBL_FORCHTYPE==0 && ..\PD!=0 && GBL_PREV>8) ||(GBL_FORCHTYPE==1 && ..\PD!=1))) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    RESERVED, bit,count=5,indent=2,pos=none
    TMSI_ZONE_LEN, bit,count=4,indent=2,pos=none
    TMSI_ZONE, array, type=uint8, maxsize=15, size=TMSI_ZONE_LEN, indent=2
    TMSI_CODE, bit,count=32,indent=2,pos=none
    TMSI_EXP_TIME, bit,count=24,indent=2,pos=none
    PDU_PADDING, bit,count=-2,indent=2,pos=none
    MACI, bit,count=32,indent=2,exist=(GBL_PREV>8 && ADDRESS_Rec\ADDR_TYPE!=5 && ..\PD==2 && Integrity_Rec\MACI_INCL == 1),pos=none
End

Begin Message, Paging Msg Rec PC - PACA Rsp, BitPack, OTTSName=CMsgPagePACA
    ARQ_Rec, record, type = Fcsch Arq Rec, maxsize = 1, indent = 2
    ADDRESS_Rec, record, type = Fcsch Address Rec, maxsize = 1, indent = 2
    Integrity_Rec, record,type=Message Integrity Rec,maxsize=1,exist=((GBL_PREV>8 && ..\PD==2)) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    ExtEncry_Rec, record,type=Fcsch Ext-Encryption Rec,maxsize=1,exist=(((GBL_FORCHTYPE==0 && ..\PD==1 && GBL_PREV<9)||(GBL_FORCHTYPE==0 && ..\PD!=0 && GBL_PREV>8) ||(GBL_FORCHTYPE==1 && ..\PD!=1))) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5)),indent=2
    RESERVED, bit,count=7,indent=2,pos=none
    PURPOSE, bit,count=4,indent=2,pos=none
    Q_POS, bit,count=8,indent=8,pos=none
    PACA_TIMEOUT, bit,count=3,indent=3,pos=none
    PDU_PADDING, bit,count=-2,indent=2,pos=none
    MACI, bit,count=32,indent=2,exist=(GBL_PREV>8 && ADDRESS_Rec\ADDR_TYPE!=5 && ..\PD==2 && Integrity_Rec\MACI_INCL == 1),pos=none
End

Begin Message, Paging Msg Rec PC - Extended Channel Assignment Rsp, BitPack, OTTSName=CMsgPageExtendedChannelAssignment
    ECAM_Rec, record,type=ECAM Rec,maxsize=10,size=end,minbytes=2,indent=2,exist=(GBL_PREV > 5)
    Data, array,type=uint8,maxsize=100,size=end,columns=60,indent=2,exist=!(GBL_PREV > 5)
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, ECAM Rec, BitPack, OTTSName=CMsgEcam
    ARQ_Rec, record,type=Fcsch Arq Rec,maxsize=1,indent=2,exist=GBL_PREV > 5
    ADDRESS_Rec, record,type=Fcsch Address Rec,maxsize=1,indent=2,exist=GBL_PREV > 5
    Integrity_Rec, record,type=Message Integrity Rec,maxsize=1,exist=((GBL_PREV>8 && ..\..\PD==2)) && ((GBL_PREV > 5) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5))),indent=2
    ExtEncry_Rec, record,type=Fcsch RecExt-Encryption Rec,maxsize=1,exist=(((GBL_FORCHTYPE==0 && ..\..\PD==1 && GBL_PREV<9)||(GBL_FORCHTYPE==0 && ..\..\PD!=0 && GBL_PREV>8)||(GBL_FORCHTYPE==1 && ..\..\PD!=1))) && ((GBL_PREV > 5) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5))),indent=2
    RESERVED1, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    ADD_RECORD_LEN, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    ASSIGN_MODE, bit,count=3,base=enum:ECAM Assign Mode Enum,indent=2,exist=GBL_PREV > 5,pos=none
    RESERVED2, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    Rec, union,enum=ASSIGN_MODE,consumebytes=(ADD_RECORD_LEN - 1),gensizevarname=ADD_RECORD_LEN,gensizeexpression=THISSIZE+1,indent=2,exist=GBL_PREV > 5
    MACI, bit,count=32,indent=2,exist=((GBL_PREV>8 && ..\..\PD==2 && ADDRESS_Rec\ADDR_TYPE!=5 && Integrity_Rec\MACI_INCL == 1)) && (GBL_PREV > 5),pos=none
End

Begin Message, ECAM Rec 0 [0] Rsp, BitPack, OTTSName=CMsgEcam0
    FREQ_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    DEFAULT_CONFIG, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    BYPASS_ALERT_ANSWER, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    RESERVED, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_PILOTS, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    GRANTED_MODE, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    FRAME_OFFSET, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    BAND_CLASS, bit,count=5,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),indent=2,pos=none
    CDMA_FREQ, bit,count=11,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),indent=2,pos=none
    PILOT_Rec, record,type=ECAM Pilot Rec,size=(NUM_PILOTS + 1),maxsize=20,indent=2,exist=GBL_PREV > 5
    FOR_FCH_RC, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    REV_FCH_RC, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_INIT_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_SUBCHAN_GAIN, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    RLGAIN_ADJ, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_FER, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_MIN_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_MAX_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    REV_FCH_GATING_MODE, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_PWR_CNTL_DELAY_INCL, bit,count=1,exist=((REV_FCH_GATING_MODE == 1)) && (GBL_PREV > 5),indent=2,pos=none
    REV_PWR_CNTL_DELAY, bit,count=2,exist=((REV_FCH_GATING_MODE == 1 && REV_PWR_CNTL_DELAY_INCL!=0)) && (GBL_PREV > 5),indent=2,pos=none
    D_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((ENCRYPT_MODE==3)) && ((GBL_PREV > 5) && ((GBL_PREV > 6))),pos=none
    ENC_KEY_SIZE, bit,count=3,indent=2,exist=((ENCRYPT_MODE==2 || ENCRYPT_MODE== 3)) && ((GBL_PREV > 5) && ((GBL_PREV > 6))),pos=none
    C_SIG_ENCRYPT_MODE_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && ((GBL_PREV > 6)),pos=none
    C_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((C_SIG_ENCRYPT_MODE_INCL==1)) && ((GBL_PREV > 5) && ((GBL_PREV > 6))),pos=none
    MSG_INT_INFO_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 5) && ((GBL_PREV > 6))) && ((GBL_PREV > 8)),pos=none
    CHANGE_KEYS, bit,count=1,indent=2,exist=((MSG_INT_INFO_INCL==1)) && (((GBL_PREV > 5) && ((GBL_PREV > 6))) && ((GBL_PREV > 8))),pos=none
    USE_UAK, bit,count=1,indent=2,exist=((MSG_INT_INFO_INCL==1)) && (((GBL_PREV > 5) && ((GBL_PREV > 6))) && ((GBL_PREV > 8))),pos=none
    PLCM_TYPE_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 5) && ((GBL_PREV > 6))) && ((GBL_PREV > 8)),pos=none
    PLCM_TYPE, bit,count=4,indent=2,exist=((PLCM_TYPE_INCL==1)) && (((GBL_PREV > 5) && ((GBL_PREV > 6))) && ((GBL_PREV > 8))),pos=none
    PLCM_39, bit,count=39,indent=2,exist=((PLCM_TYPE_INCL==1&&PLCM_TYPE==1)) && (((GBL_PREV > 5) && ((GBL_PREV > 6))) && ((GBL_PREV > 8))),base=16,pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, ECAM Pilot Rec, BitPack, OTTSName=CMsgECAMPilotRec
    PILOT_PN, bit,count=9,indent=2,exist=GBL_PREV > 5,pos=none
    PWR_COMB_IND, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    CODE_CHAN, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, ECAM Rec 1 [1] Rsp, BitPack, OTTSName=CMsgEcam1
    RESPOND, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FREQ_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    NUM_PILOTS, bit,count=6,indent=2,exist=GBL_PREV > 5,pos=none
    Rec, record,maxsize=63,size=NUM_PILOTS+1,type=ECAM Pilot PN Rec,indent=2,exist=GBL_PREV > 5
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, ECAM Pilot PN Rec, BitPack, OTTSName=CMsgECAMPilotPNRec
    PILOT_PN, bit,count=9,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, ECAM Rec 2 [2] Rsp, BitPack, OTTSName=CMsgEcam2
    RESPOND, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    ANALOG_SYS, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    USE_ANALOG_SYS, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, ECAM Rec 3 [3] Rsp, BitPack, OTTSName=CMsgEcam3
    SID, bit,count=15,indent=2,exist=GBL_PREV > 5,pos=none
    VMAC, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    ANALOG_CHAN, bit,count=11,indent=2,exist=GBL_PREV > 5,pos=none
    SCC, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    MEM, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    AN_CHAN_TYPE, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    DSCC_MSB, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, ECAM Rec 4 [4] Rsp, BitPack, OTTSName=CMsgEcam4
    FREQ_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    BYPASS_ALERT_ANSWER, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    GRANTED_MODE, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    SR_ID_RESTORE, bit,count=3,indent=2,exist=((GBL_PREV>8 && GRANTED_MODE==3)) && (GBL_PREV > 5),pos=none
    DEFAULT_CONFIG, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_RC, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    REV_RC, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    FRAME_OFFSET, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_SUBCHAN_GAIN, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    RLGAIN_ADJ, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_PILOTS, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    CH_Rec, record,type=ECAM CH Rec,maxsize=1,indent=2,exist=GBL_PREV > 5
    REV_FCH_GATING_MODE, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_PWR_CNTL_DELAY_INCL, bit,count=1,indent=2,exist=((REV_FCH_GATING_MODE == 1)) && (GBL_PREV > 5),pos=none
    REV_PWR_CNTL_DELAY, bit,count=2,indent=2,exist=((REV_FCH_GATING_MODE == 1 && REV_PWR_CNTL_DELAY_INCL==1)) && (GBL_PREV > 5),pos=none
    D_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((ENCRYPT_MODE==3)) && ((GBL_PREV > 5) && ((GBL_PREV > 6))),pos=none
    ENC_KEY_SIZE, bit,count=3,indent=2,exist=((ENCRYPT_MODE==2 || ENCRYPT_MODE== 3)) && ((GBL_PREV > 5) && ((GBL_PREV > 6))),pos=none
    C_SIG_ENCRYPT_MODE_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && ((GBL_PREV > 6)),pos=none
    C_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((C_SIG_ENCRYPT_MODE_INCL==1)) && ((GBL_PREV > 5) && ((GBL_PREV > 6))),pos=none
    _3XFL_1XRL_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && ((GBL_PREV > 6)),pos=none
    _1XRL_FREQ_OFFSET, bit,count=2,indent=2,exist=((_3XFL_1XRL_INCL==1)) && ((GBL_PREV > 5) && ((GBL_PREV > 6))),pos=none
    MSG_INT_INFO_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 5) && ((GBL_PREV > 6))) && ((GBL_PREV > 8)),pos=none
    CHANGE_KEYS, bit,count=1,indent=2,exist=((MSG_INT_INFO_INCL==1)) && (((GBL_PREV > 5) && ((GBL_PREV > 6))) && ((GBL_PREV > 8))),pos=none
    USE_UAK, bit,count=1,indent=2,exist=((MSG_INT_INFO_INCL==1)) && (((GBL_PREV > 5) && ((GBL_PREV > 6))) && ((GBL_PREV > 8))),pos=none
    PLCM_TYPE_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 5) && ((GBL_PREV > 6))) && ((GBL_PREV > 8)),pos=none
    PLCM_TYPE, bit,count=4,indent=2,exist=((PLCM_TYPE_INCL==1)) && (((GBL_PREV > 5) && ((GBL_PREV > 6))) && ((GBL_PREV > 8))),pos=none
    PLCM_39, bit,count=39,indent=2,exist=((PLCM_TYPE_INCL==1&&PLCM_TYPE==1)) && (((GBL_PREV > 5) && ((GBL_PREV > 6))) && ((GBL_PREV > 8))),base=16,pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, ECAM CH Rec, BitPack, OTTSName=CMsgEcamCh
    CH_IND, bit,count=2,base=enum:ECAM CH Enum,indent=2,exist=GBL_PREV > 5,pos=none
    CH_RECORD_LEN, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    CH_Rec, union,enum=CH_IND,consumebytes=CH_RECORD_LEN,indent=2,exist=GBL_PREV > 5
End

Begin Message, ECAM CH Rec 01 Rsp, BitPack, OTTSName=CMsgEcamCh01
    FPC_FCH_INIT_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_FER, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_MIN_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_MAX_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    PILOT_Rec, record,type=ECAM Rec 01 Pilot Rec,maxsize=10,size=..\..\NUM_PILOTS + 1,indent=2,exist=GBL_PREV > 5
    _3X_FCH_INFO_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    _3XFCH_Rec, record,type=ECAM CH Rec 01 _3XFCH Rec,maxsize=10,size=..\..\NUM_PILOTS + 1,indent=2,exist=((_3X_FCH_INFO_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6))
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, ECAM Rec 01 Pilot Rec, BitPack, OTTSName=CMsgEcam01Pilot
    PILOT_PN, bit,count=9,indent=2,exist=GBL_PREV > 5,pos=none
    ADD_PILOT_REC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    OTD_PILOT_rec, record,type=OTD Pilot Rec,maxsize=1,exist=((ADD_PILOT_REC_INCL == 1)) && (GBL_PREV > 5),indent=2
    PWR_COMB_IND, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    CODE_CHAN_FCH, bit,count=11,indent=2,exist=GBL_PREV > 5,pos=none
    QOF_MASK_ID_FCH, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, OTD Pilot Rec, BitPack, OTTSName=CMsgOTDPilot
    PILOT_REC_TYPE, bit,count=3,base=enum:OTD Pilot Enum,indent=2,pos=none
    PILOT_REC_LEN, bit,count=3,indent=2,pos=none
    Rec, union, enum = PILOT_REC_TYPE, consumeBytes = PILOT_REC_LEN, indent = 2
End

Begin Message, OTD Pilot Rec 1X Common Pilot w Transmit Diversity Rsp, BitPack, OTTSName=CMsgOTDPilot1XCommonPilotwTransmitDiversity
    OTD_POWER_LEVEL, bit,count=2,indent=2,exist=((GBL_PREV==6)) && ((GBL_PREV > 5)),pos=none
    TD_POWER_LEVEL, bit,count=2,indent=2,exist=((GBL_PREV>6)) && ((GBL_PREV > 5)),pos=none
    TD_MODE, bit,count=2,indent=2,exist=((GBL_PREV>6)) && ((GBL_PREV > 5)),pos=none
    RESERVED, bit,count=(GBL_PREV>6)?4:6,indent=2,exist=(GBL_PREV > 5),pos=none
End

Begin Message, OTD Pilot Rec 1X Auxiliary Pilot Rsp, BitPack, OTTSName=CMsgOTDPilot1XAuxiliaryPilot
    QOF, bit,count=2,indent=2,pos=none
    WALSH_LENGTH, bit,count=3,indent=2,pos=none
    AUX_PILOT_WALSH, array,type=bit,count=1,maxsize=16,size=(WALSH_LENGTH+6),indent=2,pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, OTD Pilot Rec 1X Aux Pilot w Transmit Diversity Rsp, BitPack, OTTSName=CMsgOTDPilot1XAuxPilotwTransmitDiversity
    QOF, bit,count=2,indent=2,pos=none
    WALSH_LENGTH, bit,count=3,indent=2,pos=none
    AUX_WALSH, array,type=bit,count=1,maxsize=14,size=(WALSH_LENGTH+6),indent=2,pos=none
    AUX_TD_POWER_LEVEL, bit,count=2,indent=2,pos=none
    TD_MODE, bit,count=2,indent=2,pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, OTD Pilot Rec 3X Common Pilot Rsp, BitPack, OTTSName=CMsgOTDPilot3XCommonPilot
    SR3_PRIMARY_PILOT, bit,count=2,indent=2,pos=none
    SR3_PILOT_POWER1, bit,count=3,indent=2,pos=none
    SR3_PILOT_POWER2, bit,count=3,indent=2,pos=none
End

Begin Message, OTD Pilot Rec 3X Auxiliary Pilot Rsp, BitPack, OTTSName=CMsgOTDPilot3XAuxiliaryPilot
    SR3_PRIMARY_PILOT, bit,count=2,indent=2,pos=none
    SR3_PILOT_POWER1, bit,count=3,indent=2,pos=none
    SR3_PILOT_POWER2, bit,count=3,indent=2,pos=none
    QOF, bit,count=2,indent=2,pos=none
    WALSH_LENGTH, bit,count=3,indent=2,pos=none
    AUX_PILOT_WALSH, array,type=bit,count=1,maxsize=16,size=(WALSH_LENGTH+6),indent=2,pos=none
    ADD_INFO_INCL1, bit,count=1,indent=2,pos=none
    QOF1, bit,count=2,indent=2,exist=(ADD_INFO_INCL1==1),pos=none
    WALSH_LENGTH1, bit,count=3,indent=2,exist=(ADD_INFO_INCL1==1),pos=none
    AUX_PILOT_WALSH1, array,type=bit,count=1,maxsize=16,size=(WALSH_LENGTH1+6),indent=2,exist=(ADD_INFO_INCL1==1),pos=none
    ADD_INFO_INCL2, bit,count=1,indent=2,pos=none
    QOF2, bit,count=2,indent=2,exist=(ADD_INFO_INCL2==1),pos=none
    WALSH_LENGTH2, bit,count=3,indent=2,exist=(ADD_INFO_INCL2==1),pos=none
    AUX_PILOT_WALSH2, array,type=bit,count=1,maxsize=16,size=(WALSH_LENGTH2+6),indent=2,exist=(ADD_INFO_INCL2==1),pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, ECAM CH Rec 01 _3XFCH Rec, BitPack, OTTSName = CMsgEcamCH3XFCHInfo
    _3X_FCH_LOW_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    QOF_MASK_ID_FCH_LOW, bit,count=2,indent=2,exist=((_3X_FCH_LOW_INCL==1)) && ((GBL_PREV > 6)),pos=none
    CODE_CHAN_FCH_LOW, bit,count=11,indent=2,exist=((_3X_FCH_LOW_INCL==1)) && ((GBL_PREV > 6)),pos=none
    _3X_FCH_HIGH_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    QOF_MASK_ID_FCH_HIGH, bit,count=2,indent=2,exist=((_3X_FCH_HIGH_INCL==1)) && ((GBL_PREV > 6)),pos=none
    CODE_CHAN_FCH_HIGH, bit,count=11,indent=2,exist=((_3X_FCH_HIGH_INCL==1)) && ((GBL_PREV > 6)),pos=none
End

Begin Message, ECAM CH Rec 10 Rsp, BitPack, OTTSName=CMsgEcamCh10
    FPC_DCCH_INIT_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_DCCH_FER, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_DCCH_MIN_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_DCCH_MAX_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    PILOT_Rec, record,type=ECAM Rec 10 Pilot Rec,maxsize=10,size=..\..\NUM_PILOTS + 1,indent=2,exist=GBL_PREV > 5
    _3X_DCCH_INFO_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    _3XDCCH_Rec, record,type=ECAM CH Rec 10 _3XDCCH Rec,maxsize=10,size=..\..\NUM_PILOTS + 1,indent=2,exist=((_3X_DCCH_INFO_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6))
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, ECAM Rec 10 Pilot Rec, BitPack, OTTSName=CMsgEcam10Pilot
    PILOT_PN, bit,count=9,indent=2,exist=GBL_PREV > 5,pos=none
    ADD_PILOT_REC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    OTD_PILOT_rec, record,type=OTD Pilot Rec,maxsize=1,exist=((ADD_PILOT_REC_INCL == 1)) && (GBL_PREV > 5),indent=2
    PWR_COMB_IND, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    CODE_CHAN_DCCH, bit,count=11,indent=2,exist=GBL_PREV > 5,pos=none
    QOF_MASK_ID_DCCH, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, ECAM CH Rec 10 _3XDCCH Rec, BitPack, OTTSName = CMsgEcamCH3XDCCHInfo
    _3X_DCCH_LOW_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    QOF_MASK_ID_DCCH_LOW, bit,count=2,indent=2,exist=((_3X_DCCH_LOW_INCL==1)) && ((GBL_PREV > 6)),pos=none
    CODE_CHAN_DCCH_LOW, bit,count=11,indent=2,exist=((_3X_DCCH_LOW_INCL==1)) && ((GBL_PREV > 6)),pos=none
    _3X_DCCH_HIGH_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    QOF_MASK_ID_DCCH_HIGH, bit,count=2,indent=2,exist=((_3X_DCCH_HIGH_INCL==1)) && ((GBL_PREV > 6)),pos=none
    CODE_CHAN_DCCH_HIGH, bit,count=11,indent=2,exist=((_3X_DCCH_HIGH_INCL==1)) && ((GBL_PREV > 6)),pos=none
End

Begin Message, ECAM CH Rec 11 Rsp, BitPack, OTTSName=CMsgEcamCh11
    FPC_FCH_INIT_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_DCCH_INIT_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_PRI_CHAN, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_FER, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_MIN_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_MAX_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_DCCH_FER, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_DCCH_MIN_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_DCCH_MAX_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    PILOT_Rec, record,type=ECAM Rec 11 Pilot Rec,maxsize=10,size=..\..\NUM_PILOTS + 1,indent=2,exist=GBL_PREV > 5
    _3X_FCH_INFO_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    _3XFCH_Rec, record,type=ECAM CH Rec 01 _3XFCH Rec,maxsize=10,size=..\..\NUM_PILOTS + 1,indent=2,exist=((_3X_FCH_INFO_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6))
    _3X_DCCH_INFO_INCL, bit,count=1,indent=1,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    _3XDCCH_Rec, record,type=ECAM CH Rec 10 _3XDCCH Rec,maxsize=10,size=..\..\NUM_PILOTS + 1,indent=2,exist=((_3X_DCCH_INFO_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6))
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, ECAM Rec 11 Pilot Rec, BitPack, OTTSName=CMsgEcam11Pilot
    PILOT_PN, bit,count=9,indent=2,exist=GBL_PREV > 5,pos=none
    ADD_PILOT_REC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    OTD_Pilot_rec, record,type=OTD Pilot Rec,maxsize=1,exist=((ADD_PILOT_REC_INCL == 1)) && (GBL_PREV > 5),indent=2
    PWR_COMB_IND, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    CODE_CHAN_FCH, bit,count=11,indent=2,exist=GBL_PREV > 5,pos=none
    QOF_MASK_ID_FCH, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    CODE_CHAN_DCCH, bit,count=11,indent=2,exist=GBL_PREV > 5,pos=none
    QOF_MASK_ID_DCCH, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, ECAM Rec 5 [5] Rsp, BitPack, OTTSName=CMsgEcam5
    FREQ_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=((FREQ_INCL==1)) && (GBL_PREV > 8),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=((FREQ_INCL==1)) && (GBL_PREV > 8),pos=none
    BYPASS_ALERT_ANSWER, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    GRANTED_MODE, bit,count=2,indent=2,exist=GBL_PREV > 8,pos=none
    SR_ID_RESTORE, bit,count=3,indent=2,exist=((GRANTED_MODE==3)) && (GBL_PREV > 8),pos=none
    FRAME_OFFSET, bit,count=4,indent=2,exist=GBL_PREV > 8,pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,exist=GBL_PREV > 8,pos=none
    D_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((ENCRYPT_MODE == 3)) && (GBL_PREV > 8),pos=none
    ENC_KEY_SIZE, bit,count=3,indent=2,exist=((ENCRYPT_MODE > 1)) && (GBL_PREV > 8),pos=none
    C_SIG_ENCRYPT_MODE_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    C_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((C_SIG_ENCRYPT_MODE_INCL==1)) && (GBL_PREV > 8),pos=none
    MSG_INT_INFO_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    CHANGE_KEYS, bit,count=1,indent=2,exist=((MSG_INT_INFO_INCL == 1)) && (GBL_PREV > 8),pos=none
    USE_UAK, bit,count=1,indent=2,exist=((MSG_INT_INFO_INCL == 1)) && (GBL_PREV > 8),pos=none
    PLCM_TYPE_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    PLCM_TYPE, bit,count=4,indent=2,exist=((PLCM_TYPE_INCL == 1)) && (GBL_PREV > 8),pos=none
    PLCM_39, bit,count=39,indent=2,exist=((PLCM_TYPE_INCL == 1&&PLCM_TYPE == 1)) && (GBL_PREV > 8),base=16,pos=none
    RLGAIN_ADJ, bit,count=4,indent=2,exist=GBL_PREV > 8,pos=none
    NUM_PILOTS, bit,count=3,indent=2,exist=GBL_PREV > 8,pos=none
    EXT_CH_IND, bit,count=5,indent=2,base=enum:EXT_CH_IND enum,exist=GBL_PREV > 8,pos=none
    FPC_SUBCHAN_GAIN, bit,count=5,indent=2,exist=((EXT_CH_IND<7 && EXT_CH_IND>2)) && (GBL_PREV > 8),pos=none
    REV_FCH_GATING_MODE, bit,count=1,indent=2,exist=(GBL_PREV > 8) && ((EXT_CH_IND==1||EXT_CH_IND==3||EXT_CH_IND==5||EXT_CH_IND==6)),pos=none
    REV_PWR_CNTL_DELAY_INCL, bit,count=1,indent=2,exist=((REV_FCH_GATING_MODE!=0)) && ((GBL_PREV > 8) && ((EXT_CH_IND==1||EXT_CH_IND==3||EXT_CH_IND==5||EXT_CH_IND==6))),pos=none
    REV_PWR_CNTL_DELAY, bit,count=2,indent=2,exist=((REV_PWR_CNTL_DELAY_INCL==1 &&REV_FCH_GATING_MODE!=0)) && ((GBL_PREV > 8) && ((EXT_CH_IND==1||EXT_CH_IND==3||EXT_CH_IND==5||EXT_CH_IND==6))),pos=none
    FULL_CI_FEEDBACK_IND, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    REV_CQICH_FRAME_OFFSET, bit,count=4,indent=2,exist=GBL_PREV > 8,pos=none
    REV_CQICH_REPS, bit,count=2,indent=2,exist=GBL_PREV > 8,pos=none
    REV_ACKCH_REPS, bit,count=2,indent=2,exist=GBL_PREV > 8,pos=none
    FOR_PDCH_RC, bit,count=5,indent=2,exist=GBL_PREV > 8,pos=none
    FOR_FCH_DCCH_RC, bit,count=5,indent=2,exist=((EXT_CH_IND<7 && EXT_CH_IND>2)) && (GBL_PREV > 8),pos=none
    REV_FCH_DCCH_RC, bit,count=5,indent=2,exist=((EXT_CH_IND<7 && EXT_CH_IND!=0)) && (GBL_PREV > 8),pos=none
    FPC_PRI_CHAN, bit,count=1,indent=2,exist=((EXT_CH_IND == 6)) && (GBL_PREV > 8),pos=none
    FPC_FCH_INIT_SETPT, bit,count=8,indent=2,exist=(GBL_PREV > 8) && ((EXT_CH_IND==5 || EXT_CH_IND==6 || EXT_CH_IND==3)),pos=none
    FPC_FCH_FER, bit,count=5,indent=2,exist=(GBL_PREV > 8) && ((EXT_CH_IND==5 || EXT_CH_IND==6 || EXT_CH_IND==3)),pos=none
    FPC_FCH_MIN_SETPT, bit,count=8,indent=2,exist=(GBL_PREV > 8) && ((EXT_CH_IND==5 || EXT_CH_IND==6 || EXT_CH_IND==3)),pos=none
    FPC_FCH_MAX_SETPT, bit,count=8,indent=2,exist=(GBL_PREV > 8) && ((EXT_CH_IND==5 || EXT_CH_IND==6 || EXT_CH_IND==3)),pos=none
    FPC_DCCH_INIT_SETPT, bit,count=8,indent=2,exist=(GBL_PREV > 8) && ((EXT_CH_IND==4 || EXT_CH_IND==6)),pos=none
    FPC_DCCH_FER, bit,count=5,indent=2,exist=(GBL_PREV > 8) && ((EXT_CH_IND==4 || EXT_CH_IND==6)),pos=none
    FPC_DCCH_MIN_SETPT, bit,count=8,indent=2,exist=(GBL_PREV > 8) && ((EXT_CH_IND==4 || EXT_CH_IND==6)),pos=none
    FPC_DCCH_MAX_SETPT, bit,count=8,indent=2,exist=(GBL_PREV > 8) && ((EXT_CH_IND==4 || EXT_CH_IND==6)),pos=none
    PDCH_GROUP_IND_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    FOR_PDCH_PARAMS_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    NUM_SOFT_SWITCHING_FRAMES, bit,count=4,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFTER_SWITCHING_FRAMES, bit,count=4,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFT_SWITCHING_FRAMES_CHM, bit,count=4,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFTER_SWITCHING_FRAMES_CHM, bit,count=4,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFT_SWITCHING_SLOTS, bit,count=2,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFTER_SWITCHING_SLOTS, bit,count=2,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFT_SWITCHING_SLOTS_CHM, bit,count=2,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFTER_SWITCHING_SLOTS_CHM, bit,count=2,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    PDCH_SOFT_SWITCHING_DELAY, bit,count=8,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    PDCH_SOFTER_SWITCHING_DELAY, bit,count=8,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    Pilot_Rec, record,type=ECAM Rec 5 Pilot Rec,size=(NUM_PILOTS + 1),maxsize=10,indent=2,exist=GBL_PREV > 8
    Reserved, bit,count=-8,indent=2,exist=GBL_PREV > 8,pos=none
End

Begin Record, ECAM Rec 5 Pilot Rec, BitPack, OTTSName=CMsgEcam5PilotRec
    PILOT_PN, bit,count=9,indent=2,exist=(GBL_PREV > 8),pos=none
    ADD_PILOT_REC_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 8),pos=none
    Rec1, record,type=OTD Pilot Rec,maxsize=1,indent=2,exist=((ADD_PILOT_REC_INCL==1)) && ((GBL_PREV > 8))
    FOR_PDCH_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 8),pos=none
    WALSH_TABLE_ID, bit,count=3,indent=2,exist=((..\FOR_PDCH_PARAMS_INCL==1)) && (((GBL_PREV > 8)) && ((FOR_PDCH_INCL==1))),pos=none
    NUM_PDCCH, bit,count=3,indent=2,exist=((..\FOR_PDCH_PARAMS_INCL==1)) && (((GBL_PREV > 8)) && ((FOR_PDCH_INCL==1))),pos=none
    Rec2, record,type=ECAM 5 PDCCH Rec,maxsize=8,size=NUM_PDCCH+1,indent=2,exist=((..\FOR_PDCH_PARAMS_INCL==1)) && (((GBL_PREV > 8)) && ((FOR_PDCH_INCL==1)))
    MAC_ID, bit,count=8,indent=2,exist=((GBL_PREV > 8)) && ((FOR_PDCH_INCL==1)),pos=none
    REV_CQICH_COVER, bit,count=3,indent=2,exist=((GBL_PREV > 8)) && ((FOR_PDCH_INCL==1)),pos=none
    FOR_CPCCH_WALSH, bit,count=7,indent=2,exist=((..\EXT_CH_IND==1 || ..\EXT_CH_IND==2)) && (((GBL_PREV > 8)) && ((FOR_PDCH_INCL==1))),pos=none
    FOR_CPCSCH, bit,count=5,indent=2,exist=((..\EXT_CH_IND==1 || ..\EXT_CH_IND==2)) && (((GBL_PREV > 8)) && ((FOR_PDCH_INCL==1))),pos=none
    PWR_COMB_IND, bit,count=1,indent=2,exist=(GBL_PREV > 8),pos=none
    PDCH_GROUP_IND, bit,count=1,indent=2,exist=((..\PDCH_GROUP_IND_INCL == 1)) && ((GBL_PREV > 8)),pos=none
    CODE_CHAN_FCH, bit,count=11,indent=2,exist=((GBL_PREV > 8)) && ((..\EXT_CH_IND==3 || ..\EXT_CH_IND==5 || ..\EXT_CH_IND==6)),pos=none
    QOF_MASK_ID_FCH, bit,count=2,indent=2,exist=((GBL_PREV > 8)) && ((..\EXT_CH_IND==3 || ..\EXT_CH_IND==5 || ..\EXT_CH_IND==6)),pos=none
    CODE_CHAN_DCCH, bit,count=11,indent=2,exist=((GBL_PREV > 8)) && ((..\EXT_CH_IND==4 || ..\EXT_CH_IND==5 || ..\EXT_CH_IND==6)),pos=none
    QOF_MASK_ID_DCCH, bit,count=2,indent=2,exist=((GBL_PREV > 8)) && ((..\EXT_CH_IND==4 || ..\EXT_CH_IND==5 || ..\EXT_CH_IND==6)),pos=none
End

Begin Record, ECAM 5 PDCCH Rec, BitPack, OTTSName = CMsgEcam5PDCCHRec
    FOR_PDCCH_WALSH, bit,count=6,indent=2,exist=(GBL_PREV > 8),pos=none
End

Begin Message, Paging Msg Rec PC - General Neighbor List Rsp, BitPack, OTTSName=CMsgPageGeneralNeighborList
    PILOT_PN, bit,count=9,indent=2,exist=(GBL_PREV > 5),pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,exist=(GBL_PREV > 5),pos=none
    PILOT_INC, bit,count=4,indent=2,exist=(GBL_PREV > 5),pos=none
    NGHBR_SRCH_MODE, bit,count=2,indent=2,exist=(GBL_PREV > 5),pos=none
    NGHBR_CONFIG_PN_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5),pos=none
    FREQ_FIELDS_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5),pos=none
    USE_TIMING, bit,count=1,indent=2,exist=(GBL_PREV > 5),pos=none
    GLOBAL_TIMING_INCL, bit,count=1,indent=2,exist=((USE_TIMING == 1)) && ((GBL_PREV > 5)),pos=none
    GLOBAL_TX_DURATION, bit,count=4,indent=2,exist=((USE_TIMING == 1 && GLOBAL_TIMING_INCL==1)) && ((GBL_PREV > 5)),pos=none
    GLOBAL_TX_PERIOD, bit,count=7,indent=2,exist=((USE_TIMING == 1 && GLOBAL_TIMING_INCL==1)) && ((GBL_PREV > 5)),pos=none
    NUM_NGHBR, bit,count=6,indent=2,exist=(GBL_PREV > 5),pos=none
    NGHBR_Rec, record,type=GNLM Nghbr Rec,maxsize=63,size=NUM_NGHBR,indent=2,exist=(GBL_PREV > 5)
    NUM_ANALOG_NGHBR, bit,count=3,indent=2,exist=(GBL_PREV > 5),pos=none
    ANALOG_NGHBR_Rec, record,type=GNLM Analog Nghbr Rec,maxsize=7,size=NUM_ANALOG_NGHBR,indent=2,exist=(GBL_PREV > 5)
    SRCH_OFFSET_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5),pos=none
    ADD_NGHBR_Rec, record,type=GNLM Add Nghbr Rec,maxsize=63,size=NUM_NGHBR,indent=2,exist=(GBL_PREV > 5)
    BCCH_IND_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 5)) && ((GBL_PREV > 6)),pos=none
    BCCH_SUPPORT, array,type=bit,count=1,maxsize=63,size=NUM_NGHBR,indent=2,exist=((BCCH_IND_INCL==1)) && (((GBL_PREV > 5)) && ((GBL_PREV > 6))),pos=none
    RESQ_ENABLED, bit,count=1,indent=2,exist=((GBL_PREV > 5)) && ((GBL_PREV > 7)),pos=none
    RESQ_DELAY_TIME, bit,count=6,indent=2,exist=(((GBL_PREV > 5)) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_ALLOWED_TIME, bit,count=6,indent=2,exist=(((GBL_PREV > 5)) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_ATTEMPT_TIME, bit,count=6,indent=2,exist=(((GBL_PREV > 5)) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_CODE_CHAN, bit,count=11,indent=2,exist=(((GBL_PREV > 5)) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_QOF, bit,count=2,indent=2,exist=(((GBL_PREV > 5)) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_MIN_PERIOD_INCL, bit,count=1,indent=2,exist=(((GBL_PREV > 5)) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_MIN_PERIOD, bit,count=5,indent=2,exist=((RESQ_MIN_PERIOD_INCL==1)) && ((((GBL_PREV > 5)) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1))),pos=none
    RESQ_NUM_TOT_TRANS_INCL, bit,count=1,indent=2,exist=(((GBL_PREV > 5)) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_NUM_TOT_TRANS_20MS, bit,count=4,indent=2,exist=((RESQ_NUM_TOT_TRANS_INCL==1)) && ((((GBL_PREV > 5)) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1))),pos=none
    RESQ_NUM_TOT_TRANS_5MS, bit,count=4,indent=2,exist=((RESQ_NUM_TOT_TRANS_INCL==1)) && ((((GBL_PREV > 5)) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1))),pos=none
    RESQ_NUM_PREAMBLE_RC1_RC2, bit,count=3,indent=2,exist=(((GBL_PREV > 5)) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_NUM_PREAMBLE, bit,count=3,indent=2,exist=(((GBL_PREV > 5)) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_POWER_DELTA, bit,count=3,indent=2,exist=(((GBL_PREV > 5)) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    NGHBR_RESQ_CONFIGURED, array,type=bit,count=1,maxsize=63,size=NUM_NGHBR,indent=2,exist=(((GBL_PREV > 5)) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    Data, array,type=uint8,maxsize=100,size=end,columns=60,indent=2,exist=!(GBL_PREV > 5)
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, GNLM Nghbr Rec, BitPack, OTTSName=CMsgGNLMNghbr
    NGHBR_CONFIG, bit,count=3,indent=2,exist=((..\NGHBR_CONFIG_PN_INCL == 1)) && ((GBL_PREV > 5)),pos=none
    NGHBR_PN, bit,count=9,indent=2,exist=((..\NGHBR_CONFIG_PN_INCL == 1)) && ((GBL_PREV > 5)),pos=none
    SEARCH_PRIORITY, bit,count=2,indent=2,exist=(((..\NGHBR_SRCH_MODE == 1) || (..\NGHBR_SRCH_MODE == 3))) && ((GBL_PREV > 5)),pos=none
    SRCH_WIN_NGHBR, bit,count=4,indent=2,exist=(((..\NGHBR_SRCH_MODE == 2) || (..\NGHBR_SRCH_MODE == 3))) && ((GBL_PREV > 5)),pos=none
    FREQ_INCL, bit,count=1,indent=2,exist=((..\FREQ_FIELDS_INCL == 1)) && ((GBL_PREV > 5)),pos=none
    NGHBR_BAND, bit,count=5,indent=2,exist=((..\FREQ_FIELDS_INCL == 1 && FREQ_INCL == 1)) && ((GBL_PREV > 5)),pos=none
    NGHBR_FREQ, bit,count=11,indent=2,exist=((..\FREQ_FIELDS_INCL == 1 && FREQ_INCL == 1)) && ((GBL_PREV > 5)),pos=none
    TIMING_INCL, bit,count=1,indent=2,exist=((..\USE_TIMING == 1)) && ((GBL_PREV > 5)),pos=none
    NGHBR_TX_OFFSET, bit,count=7,indent=2,exist=((GBL_PREV > 5)) && ((..\USE_TIMING == 1 && TIMING_INCL == 1)),pos=none
    NGHBR_TX_DURATION, bit,count=4,indent=2,exist=((..\GLOBAL_TIMING_INCL == 0)) && (((GBL_PREV > 5)) && ((..\USE_TIMING == 1 && TIMING_INCL == 1))),pos=none
    NGHBR_TX_PERIOD, bit,count=7,indent=2,exist=((..\GLOBAL_TIMING_INCL == 0)) && (((GBL_PREV > 5)) && ((..\USE_TIMING == 1 && TIMING_INCL == 1))),pos=none
End

Begin Record, GNLM Analog Nghbr Rec, BitPack, OTTSName=CMsgGNLMAnalogNghbr
    BAND_CLASS, bit,count=5,indent=2,exist=(GBL_PREV > 5),pos=none
    SYS_A_B, bit,count=2,indent=2,exist=(GBL_PREV > 5),pos=none
End

Begin Record, GNLM Add Nghbr Rec, BitPack, OTTSName=CMsgGNLMAddNghbr
    ADD_PILOT_REC_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5),pos=none
    NGHBR_PILOT_Rec, record,type=NGHBR Pilot Rec,maxsize=1,indent=2,exist=((ADD_PILOT_REC_INCL == 1)) && ((GBL_PREV > 5))
    SRCH_OFFSET_NGHBR, bit,count=3,indent=2,exist=(((..\SRCH_OFFSET_INCL == 1) && ((..\NGHBR_SRCH_MODE == 2) || (..\NGHBR_SRCH_MODE ==3)))) && ((GBL_PREV > 5)),pos=none
End

Begin Record, NGHBR Pilot Rec, BitPack, OTTSName=CMsgNGHBRPilotRec
    NGHBR_PILOT_REC_TYPE, bit,count=3,base=enum:NGHBR Pilot Type Enum,indent=2,pos=none
    RECORD_LEN, bit,count=3,indent=2,pos=none
    REC1, union, enum = NGHBR_PILOT_REC_TYPE, consumeBytes=RECORD_LEN, indent=2
End

Begin Message, NGHBR Pilot Rec 1X Common Pilot with TD Rsp, BitPack, OTTSName=CMsgNGHBRPilotType0
    TD_POWER_LEVEL, bit,count=2,indent=2,exist=(GBL_PREV > 5),pos=none
    TD_MODE, bit,count=2,indent=2,exist=((GBL_PREV>6)) && ((GBL_PREV > 5)),pos=none
    RESERVED, bit,count=(GBL_PREV>6)?4:6,indent=2,exist=(GBL_PREV > 5),pos=none
End

Begin Message, NGHBR Pilot Rec 1X Auxiliary Pilot Rsp, BitPack, OTTSName=CMsgNGHBRPilotType1
    QOF, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
    WALSH_LENGTH, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    AUX_PILOT_WALSH, array,type=bit,count=1,maxsize=16,size=(WALSH_LENGTH+6),indent=2,exist=(GBL_PREV > 6),pos=none
    RESERVED, bit,count=-8,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Message, NGHBR Pilot Rec 1X Auxiliary Pilot with TD Rsp, BitPack, OTTSName=CMsgNGHBRPilotType2
    QOF, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
    WALSH_LENGTH, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    AUX_WALSH, array,type=bit,count=1,maxsize=16,size=(WALSH_LENGTH+6),indent=2,exist=(GBL_PREV > 6),pos=none
    AUX_TD_POWER_LEVEL, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
    TD_MODE, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
    RESERVED, bit,count=-8,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Message, NGHBR Pilot Rec 3X Common Pilot Rsp, BitPack, OTTSName=CMsgNGHBRPilotType3
    SR3_PRIMARY_PILOT, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
    SR3_PILOT_POWER1, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    SR3_PILOT_POWER2, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Message, NGHBR Pilot Rec 3X Auxiliary Pilot Rsp, BitPack, OTTSName=CMsgNGHBRPilotType4
    SR3_PRIMARY_PILOT, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
    SR3_PILOT_POWER1, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    SR3_PILOT_POWER2, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    QOF, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
    WALSH_LENGTH, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    AUX_PILOT_WALSH, array,type=bit,maxsize=13,count=1,size=(WALSH_LENGTH+6),indent=2,exist=(GBL_PREV > 6),pos=none
    ADD_INFO_INCL1, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    QOF1, bit,count=2,indent=2,exist=((ADD_INFO_INCL1==1)) && ((GBL_PREV > 6)),pos=none
    WALSH_LENGTH1, bit,count=3,indent=2,exist=((ADD_INFO_INCL1==1)) && ((GBL_PREV > 6)),pos=none
    AUX_PILOT_WALSH1, array,type=bit,count=1,maxsize=13,size=(WALSH_LENGTH1+6),indent=2,exist=((ADD_INFO_INCL1==1)) && ((GBL_PREV > 6)),pos=none
    ADD_INFO_INCL2, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    QOF2, bit,count=2,indent=2,exist=((ADD_INFO_INCL2==1)) && ((GBL_PREV > 6)),pos=none
    WALSH_LENGTH2, bit,count=3,indent=2,exist=((ADD_INFO_INCL2==1)) && ((GBL_PREV > 6)),pos=none
    AUX_PILOT_WALSH2, array,type=bit,count=1,maxsize=13,size=(WALSH_LENGTH2+6),indent=2,exist=((ADD_INFO_INCL2==1)) && ((GBL_PREV > 6)),pos=none
    RESERVED, bit,count=-8,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Message, Paging Msg Rec PC - User Zone Identification Rsp, Bitpack, OTTSName=CMsgPageUserZoneIdentification
    PILOT_PN, bit,count=9,indent=2,pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,pos=none
    UZ_EXIT, bit,count=4,indent=2,pos=none
    NUM_UZID, bit,count=4,indent=2,pos=none
    Rec, record, type = UZIM UZ Rec, maxsize = 15, size = NUM_UZID, indent = 2
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, UZIM UZ Rec, BitPack, OTTSName=CMsgUzimUz
    UZID, bit,count=16,indent=2,pos=none
    UZ_REV, bit,count=4,indent=2,pos=none
    TEMP_SUB, bit,count=1,indent=2,pos=none
End

Begin Message, Paging Msg Rec PC - Private Neighbor List Rsp, Bitpack, OTTSName=CMsgPagePrivateNeighborList
    PILOT_PN, bit,count=9,indent=2,pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,pos=none
    NUM_RADIO_INTERFACES, bit,count=4,indent=2,pos=none
    Rec, record, type = PNLM Radio Interface Rec, maxsize = 20, size = NUM_RADIO_INTERFACES, indent = 2
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, PNLM Radio Interface Rec, BitPack, OTTSName=CMsgPNLMRadioInterface
    RADIO_INTERFACE_TYPE, bit,count=4,indent=2,base=enum:PNLM Radio Interface Type Enum,pos=none
    RADIO_INTERFACE_LEN, bit,count=8,indent=2,pos=none
    Rec, union, enum = RADIO_INTERFACE_TYPE, consumeBytes = RADIO_INTERFACE_LEN, indent = 2
End

Begin Message, PNLM Radio Interface Rec Type 0 Rsp, BitPack, OTTSName=CMsgPNLMRadioInterface0
    COMMON_INCL, bit,count=1,indent=2,pos=none
    COMMON_BAND_CLASS, bit,count=5,indent=2,exist=(COMMON_INCL == 1),pos=none
    COMMON_NGHBR_FREQ, bit,count=11,indent=2,exist=(COMMON_INCL == 1),pos=none
    SRCH_WIN_PN, bit,count=4,indent=2,pos=none
    NUM_PRI_NGHBR, bit,count=6,indent=2,pos=none
    Rec, record, type = PNLM Nghbr Rec, maxsize = 63, size = NUM_PRI_NGHBR, indent = 2
End

Begin Record, PNLM Nghbr Rec, BitPack, OTTSName=CMsgPNLMNghbr
    SID, bit,count=15,indent=2,pos=none
    NID, bit,count=16,indent=2,pos=none
    PRI_NGHBR_PN, bit,count=9,indent=2,pos=none
    ADD_PILOT_REC_INCL, bit,count=1,indent=2,pos=none
    PILOT_Rec, record, type=NGHBR Pilot Rec, maxsize=1, indent=2, exist = (ADD_PILOT_REC_INCL == 1)
    BAND_CLASS, bit,count=5,indent=2,exist=(..\COMMON_INCL == 0),pos=none
    NGHBR_FREQ, bit,count=11,indent=2,exist=(..\COMMON_INCL == 0),pos=none
    UZID_INCL, bit,count=1,indent=2,pos=none
    NUM_UZID, bit,count=4,indent=2,exist=(UZID_INCL == 1),pos=none
    UZID_Rec, record, type = PNLM Nghbr UZID Rec, maxsize=20, size=NUM_UZID, indent=2, exist=(UZID_INCL==1)
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, PNLM Nghbr UZID Rec, BitPack, OTTSName = CMsgPNLMNghbrUzidRec
    UZID, bit,count=16,indent=2,pos=none
    UZ_REV, bit,count=4,indent=2,pos=none
    TEMP_SUB, bit,count=1,indent=2,pos=none
End

Begin Message, Paging Msg Rec PC - Reserved Rsp, BitPack, OTTSName=CMsgPageReserved
End

Begin Message, Paging Msg Rec PC - Extended Global Service Rsp, Bitpack, OTTSName=CMsgPageExtendedGlobalService
    PILOT_PN, bit,count=9,indent=2,pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,pos=none
    REDIRECT_ACCOLC, bit,count=16,indent=2,pos=none
    RETURN_IF_FAIL, bit,count=1,indent=2,pos=none
    DELETE_TMSI, bit,count=1,indent=2,pos=none
    REDIRECT_P_REV_INCL, bit,count=1,indent=2,pos=none
    EXCL_P_REV_IND, bit,count=1,indent=2,exist=(REDIRECT_P_REV_INCL == 1),pos=none
    REDIRECT_P_MIN, bit,count=8,indent=2,exist=(REDIRECT_P_REV_INCL == 1),pos=none
    REDIRECT_P_MAX, bit,count=8,indent=2,exist=(REDIRECT_P_REV_INCL == 1),pos=none
    Rec, record,   type = EGSRDM Rec, maxsize=1, indent = 2
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, EGSRDM Rec, Bitpack, OTTSName=CMsgEGSRDM
    RECORD_TYPE, bit,count=8,indent=2,base=enum:EGSRDM Type Enum,pos=none
    RECORD_LEN, bit,count=8,indent=2,pos=none
    Rec, union, enum = RECORD_TYPE, ConsumeBytes = RECORD_LEN, indent = 2
End

Begin Message, EGSRDM Rec Type 1 Rsp, Bitpack, OTTSName=CMsgEGSRDMRecType1
    EXPECTED_SID, bit,count=15,indent=2,pos=none
    IGNORE_CDMA, bit,count=1,indent=2,pos=none
    SYS_ORDERING, bit,count=3,indent=2,pos=none
    MAX_REDIRECT_DELAY, bit,count=5,indent=2,pos=none
End

Begin Message, EGSRDM Rec Type 2 Rsp, Bitpack, OTTSName=CMsgEGSRDMRecType2
    BAND_CLASS, bit,count=5,indent=2,pos=none
    EXPECTED_SID, bit,count=15,indent=2,pos=none
    EXPECTED_NID, bit,count=16,indent=2,pos=none
    RESERVED, bit,count=4,indent=2,pos=none
    NUM_CHANS, bit,count=4,indent=2,pos=none
    CDMA_CHAN_Rec, record, type = EGSRDM CDMA Chan Rec, maxsize = 63, size = NUM_CHANS, indent = 2
    Reserved2, bit,count=-8,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, EGSRDM CDMA Chan Rec, Bitpack, OTTSName=CMsgEGSRDMCDMAChan
    CDMA_CHAN, bit,count=11,indent=2,pos=none
End

Begin Message, Paging Msg Rec PC - Extended CDMA Channel List Rsp, Bitpack, OTTSName=CMsgPageExtendedCDMAChannelList
    PILOT_PN, bit,count=9,indent=2,pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,pos=none
    NUM_FREQ, bit,count=4,indent=2,pos=none
    CDMA_FREQ, record, maxsize=15, size=NUM_FREQ, type=ECCLM Freq Rec, indent=2
    RC_QPCH_SEL_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5),pos=none
    RC_QPCH_HASH_IND, array,type=bit,count=1,maxsize=15,size=NUM_FREQ,exist=((RC_QPCH_SEL_INCL == 1)) && ((GBL_PREV > 5)),indent=2,pos=none
    TD_SEL_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    TD_MODE, bit,count=2,indent=2,exist=((TD_SEL_INCL == 1)) && ((GBL_PREV > 6)),pos=none
    TD_Rec, record,type=ECCLM TD Rec,maxsize=15,size=NUM_FREQ,exist=((TD_SEL_INCL==1)) && ((GBL_PREV > 6)),indent=2
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, ECCLM Freq Rec, BitPack, OTTSName=CMsgECCLMFreq
    CDMA_FREQ, bit,count=11,indent=2,pos=none
End

Begin Record, ECCLM TD Rec, BitPack, OTTSName=CMsgECCLMTDRec
    TD_HASH_IND, bit,count=1,indent=2,pos=none
    TD_POWER_LEVEL, bit,count=2,indent=2,exist=(TD_HASH_IND == 1),pos=none
End

Begin Message, Paging Msg Rec PC - User Zone Reject Rsp, Bitpack, OTTSName=CMsgPageUserZoneReject
    ARQ_Rec, record,type=Fcsch Arq Rec,maxsize=1,indent=2,exist=(GBL_PREV > 5)
    ADDRESS_Rec, record,type=Fcsch Address Rec,maxsize=1,indent=2,exist=(GBL_PREV > 5)
    Integrity_Rec, record,type=Message Integrity Rec,maxsize=1,exist=((GBL_PREV>8 && ..\PD==2)) && (((GBL_PREV > 5)) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5))),indent=2
    ExtEncry_Rec, record,type=Fcsch Ext-Encryption Rec,maxsize=1,exist=(((GBL_FORCHTYPE==0 && ..\PD==1 && GBL_PREV<9)||(GBL_FORCHTYPE==0 && ..\PD!=0 && GBL_PREV>8) ||(GBL_FORCHTYPE==1 && ..\PD!=1))) && (((GBL_PREV > 5)) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5))),indent=2
    REJECT_UZID, bit,count=16,indent=2,exist=(GBL_PREV > 5),pos=none
    REJECT_ACTION_INDI, bit,count=3,indent=2,exist=(GBL_PREV > 5),pos=none
    UZID_ASSIGN_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5),pos=none
    ASSIGN_UZID, bit,count=16,indent=2,exist=((UZID_ASSIGN_INCL == 1)) && ((GBL_PREV > 5)),pos=none
    PDU_PADDING, bit,count=-2,indent=2,exist=(GBL_PREV > 5),pos=none
    MACI, bit,count=32,indent=2,exist=((GBL_PREV>8 && ADDRESS_Rec\ADDR_TYPE!=5 && ..\PD==2 && Integrity_Rec\MACI_INCL == 1)) && ((GBL_PREV > 5)),pos=none
End

Begin Message, Paging Msg Rec PC - ANSI-41 System Parameter Rsp, Bitpack, OTTSName=CMsgPageANSI41SystemParameter
    PILOT_PN, bit,count=9,indent=2,exist=(GBL_PREV > 6),pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    SID, bit,count=15,indent=2,exist=(GBL_PREV > 6),pos=none
    NID, bit,count=16,indent=2,exist=(GBL_PREV > 6),pos=none
    PACKET_ZONE_ID, bit,count=8,indent=2,exist=(GBL_PREV > 6),pos=none
    REG_ZONE, bit,count=12,indent=2,exist=(GBL_PREV > 6),pos=none
    TOTAL_ZONES, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    ZONE_TIMER, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    MULT_SIDS, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    MULT_NIDS, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    HOME_REG, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    FOR_SID_REG, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    FOR_NID_REG, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    POWER_UP_REG, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    POWER_DOWN_REG, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    PARAMETER_REG, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    REG_PRD, bit,count=7,indent=2,exist=(GBL_PREV > 6),pos=none
    DIST_REG_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    REG_DIST, bit,count=11,indent=2,exist=((DIST_REG_INCL == 1)) && ((GBL_PREV > 6)),pos=none
    DELETE_FOR_TMSI, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    USE_TMSI, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    PREF_MSID_TYPE, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
    TMSI_ZONE_LEN, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    TMSI_ZONE, array,type=uint8,maxsize=20,size=TMSI_ZONE_LEN,indent=2,exist=(GBL_PREV > 6)
    IMSI_T_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    MAX_NUM_ALT_SO, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    AUTO_MSG_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    AUTO_MSG_INTERVAL, bit,count=3,indent=2,exist=((AUTO_MSG_SUPPORTED == 1)) && ((GBL_PREV > 6)),pos=none
    OTHER_INFO_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    BASE_ID, bit,count=16,indent=2,exist=((OTHER_INFO_INCL ==1)) && ((GBL_PREV > 6)),pos=none
    MCC, bit,count=10,indent=2,exist=((OTHER_INFO_INCL==1)) && ((GBL_PREV > 6)),pos=none
    IMSI_11_12, bit,count=7,indent=2,exist=((OTHER_INFO_INCL==1)) && ((GBL_PREV > 6)),pos=none
    BROADCAST_GPS_ASST, bit,count=1,indent=2,exist=((OTHER_INFO_INCL==1)) && ((GBL_PREV > 6)),pos=none
    SIG_ENCRYPT_SUP, record,type=csch SIG_ENCRYPT_SUP Rec,maxsize=1,indent=2,exist=((OTHER_INFO_INCL==1)) && ((GBL_PREV > 6))
    CS_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    MS_INIT_POS_LOC_SUP_IND, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    MSG_INTEGRITY_SUP, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((GBL_PREV > 8)),pos=none
    SIG_INTEGRITY_SUP_INCL, bit,count=1,indent=2,exist=((MSG_INTEGRITY_SUP==1)) && (((GBL_PREV > 6)) && ((GBL_PREV > 8))),pos=none
    SIG_INTEGRITY_SUP, bit,count=8,indent=2,exist=((MSG_INTEGRITY_SUP==1)) && (((GBL_PREV > 6)) && ((GBL_PREV > 8))),pos=none
    PDU_PADDING, bit,count=-2,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Message, Paging Msg Rec PC - MC-RR Parameter Rsp, Bitpack, OTTSName=CMsgPageMcRrParameter
    PILOT_PN, bit,count=9,indent=2,exist=(GBL_PREV > 6),pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    BASE_ID, bit,count=16,indent=2,exist=(GBL_PREV > 6),pos=none
    P_REV, bit,count=8,indent=2,exist=(GBL_PREV > 6),pos=none
    MIN_P_REV, bit,count=8,indent=2,exist=(GBL_PREV > 6),pos=none
    SR3_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    SR3_CENTER_FREQ_INCL, bit,count=1,indent=2,exist=((SR3_INCL == 1)) && ((GBL_PREV > 6)),pos=none
    SR3_CENTER_FREQ, bit,count=11,indent=2,exist=((SR3_INCL == 1&&SR3_CENTER_FREQ_INCL==1)) && ((GBL_PREV > 6)),pos=none
    SR3_BRAT, bit,count=2,indent=2,exist=((SR3_INCL == 1)) && ((GBL_PREV > 6)),pos=none
    SR3_BCCH_CODE_CHAN, bit,count=7,indent=2,exist=((SR3_INCL == 1)) && ((GBL_PREV > 6)),pos=none
    SR3_PRIMARY_PILOT, bit,count=2,indent=2,exist=((SR3_INCL == 1)) && ((GBL_PREV > 6)),pos=none
    SR3_PILOT_POWER1, bit,count=3,indent=2,exist=((SR3_INCL == 1)) && ((GBL_PREV > 6)),pos=none
    SR3_PILOT_POWER2, bit,count=3,indent=2,exist=((SR3_INCL == 1)) && ((GBL_PREV > 6)),pos=none
    SRCH_WIN_A, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    SRCH_WIN_R, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    T_ADD, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    T_DROP, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    T_COMP, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    T_TDROP, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    NGHBR_MAX_AGE, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    SOFT_SLOPE, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    ADD_INTERCEPT, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    DROP_INTERCEPT, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    ENC_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    SIG_ENCRYPT_SUP, record,type=csch SIG_ENCRYPT_SUP Rec,maxsize=1,indent=2,exist=((ENC_SUPPORTED==1)) && ((GBL_PREV > 6))
    UI_ENCRYPT_SUP, bit,count=8,indent=2,exist=((ENC_SUPPORTED==1)) && ((GBL_PREV > 6)),pos=none
    ADD_FIELDS_LEN, bit,count=8,indent=2,exist=(GBL_PREV > 6),pos=none
    ADD_FIELDS, array,type=uint8,maxsize=300,size=ADD_FIELDS_LEN,indent=2,exist=((ADD_FIELDS_LEN!=0)) && ((GBL_PREV > 6))
    CCH_INFO_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    MCC, bit,count=10,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    IMSI_11_12, bit,count=7,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    MAX_SLOT_CYCLE_INDEX, bit,count=3,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    PWR_REP_THRESH, bit,count=5,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    PWR_REP_FRAMES, bit,count=4,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    PWR_THRESH_ENABLE, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    PWR_PERIOD_ENABLE, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    PWR_REP_DELAY, bit,count=5,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    RESELECT_INCLUDED, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    EC_THRESH, bit,count=5,indent=2,exist=((RESELECT_INCLUDED==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    EC_IO_THRESH, bit,count=5,indent=2,exist=((RESELECT_INCLUDED==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    BASE_LAT, bit,count=22,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    BASE_LONG, bit,count=23,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    PILOT_REPORT, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    ACC_ENT_HO_ORDER, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    ACCESS_HO, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    ACCESS_HO_MSG_RSP, bit,count=1,indent=2,exist=((ACCESS_HO==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    ACCESS_PROBE_HO, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    ACC_HO_LIST_UPD, bit,count=1,indent=2,exist=((ACCESS_PROBE_HO==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    ACC_PROBE_HO_OTHER_MSG, bit,count=1,indent=2,exist=((ACCESS_PROBE_HO==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    MAX_NUM_PROBE_HO, bit,count=3,indent=2,exist=((ACCESS_PROBE_HO==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    NUM_FCCCH, bit,count=3,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    FCCCH_RATE, bit,count=3,indent=2,exist=((NUM_FCCCH!=0)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    FCCCH_CODE_RATE, bit,count=1,indent=2,exist=((NUM_FCCCH!=0)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    FCCCH_CODE_CHAN, array,type=uint8,maxsize=10,size=NUM_FCCCH,indent=2,exist=((NUM_FCCCH!=0)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)))
    BCAST_INDEX, bit,count=3,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    NUM_BCCH_BCAST, bit,count=3,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    BCAST_Rec, record,type=MC-RR BCAST Rec,maxsize=10,size=NUM_BCCH_BCAST,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))
    QPCH_SUPPORTED, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    NUM_QPCH, bit,count=2,indent=2,exist=((QPCH_SUPPORTED==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    QPCH_RATE, bit,count=1,indent=2,exist=((QPCH_SUPPORTED==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    QPCH_POWER_LEVEL_PAGE, bit,count=3,indent=2,exist=((QPCH_SUPPORTED==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    QPCH_CCI_SUPPORTED, bit,count=1,indent=2,exist=((QPCH_SUPPORTED==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    QPCH_POWER_LEVEL_CONFIG, bit,count=3,indent=2,exist=((QPCH_SUPPORTED==1&&QPCH_CCI_SUPPORTED==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    QPCH_CODE_CHAN, array,type=uint8,maxsize=3,size=NUM_QPCH,indent=2,exist=((SR3_INCL==1&&QPCH_SUPPORTED==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)))
    QPCH_BI_SUPPORTED, bit,count=1,indent=2,exist=((QPCH_SUPPORTED==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    QPCH_POWER_LEVEL_BCAST, bit,count=3,indent=2,exist=((QPCH_SUPPORTED==1&&QPCH_BI_SUPPORTED==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    SDB_SUPPORTED, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    BROADCAST_GPS_ASST, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    RLGAIN_TRAFFIC_PILOT, bit,count=6,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    REV_PWR_CNTL_DELAY_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    REV_PWR_CNTL_DELAY, bit,count=2,indent=2,exist=((REV_PWR_CNTL_DELAY_INCL==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    MOB_QOS, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    USE_SYNC_ID, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    NUM_OPT_MSG, bit,count=4,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    SENDING_RAND, bit,count=1,indent=2,exist=((NUM_OPT_MSG > 0)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    PRI_NGHBR_LST, bit,count=1,indent=2,exist=((NUM_OPT_MSG > 1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    USER_ZONE_ID, bit,count=1,indent=2,exist=((NUM_OPT_MSG > 2)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    EXT_GLOBAL_REDIRECT, bit,count=1,indent=2,exist=((NUM_OPT_MSG > 3)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    RESERVED, array,type=bit,count=1,maxsize=12,size=(NUM_OPT_MSG-4),indent=2,exist=((NUM_OPT_MSG > 4)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    PILOT_INFO_REQ_SUPPORTED, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((CCH_INFO_INCL==1)),pos=none
    BAND_CLASS_INFO_REQ, bit,count=1,indent=2,exist=((GBL_PREV > 7)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    ALT_BAND_CLASS, bit,count=5,indent=2,exist=((GBL_PREV > 7&&BAND_CLASS_INFO_REQ==1)) && (((GBL_PREV > 6)) && ((CCH_INFO_INCL==1))),pos=none
    CDMA_OFF_TIME_REP_SUP_IND, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((GBL_PREV > 7)),pos=none
    CDMA_OFF_TIME_REP_THRESHOLD_UNIT, bit,count=1,indent=2,exist=((CDMA_OFF_TIME_REP_SUP_IND==1)) && (((GBL_PREV > 6)) && ((GBL_PREV > 7))),pos=none
    CDMA_OFF_TIME_REP_THRESHOLD, bit,count=3,indent=2,exist=((CDMA_OFF_TIME_REP_SUP_IND==1)) && (((GBL_PREV > 6)) && ((GBL_PREV > 7))),pos=none
    RELEASE_TO_IDLE_IND, bit,count=1,indent=2,exist=(((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8)),pos=none
    RECONNECT_MSG_IND, bit,count=1,indent=2,exist=(((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8)),pos=none
    T_TDROP_RANGE_INCL, bit,count=1,indent=2,exist=(((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8)),pos=none
    T_TDROP_RANGE, bit,count=4,indent=2,exist=((T_TDROP_RANGE_INCL==1)) && ((((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))),pos=none
    FOR_PDCH_SUPPPPORTED, bit,count=1,indent=2,exist=(((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8)),pos=none
    RLGAIN_ACKCQICH_PILOT, bit,count=6,indent=2,exist=((((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((FOR_PDCH_SUPPPPORTED==1)),pos=none
    PDCH_PARAMS_INCL, bit,count=1,indent=2,exist=((((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((FOR_PDCH_SUPPPPORTED==1)),pos=none
    NUM_SOFT_SWITCHING_FRAMES, bit,count=4,indent=2,exist=((PDCH_PARAMS_INCL==1)) && (((((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((FOR_PDCH_SUPPPPORTED==1))),pos=none
    NUM_SOFTER_SWITCHING_FRAMES, bit,count=4,indent=2,exist=((PDCH_PARAMS_INCL==1)) && (((((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((FOR_PDCH_SUPPPPORTED==1))),pos=none
    NUM_SOFT_SWITCHING_SLOTS, bit,count=2,indent=2,exist=((PDCH_PARAMS_INCL==1)) && (((((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((FOR_PDCH_SUPPPPORTED==1))),pos=none
    NUM_SOFTER_SWITCHING_SLOTS, bit,count=2,indent=2,exist=((PDCH_PARAMS_INCL==1)) && (((((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((FOR_PDCH_SUPPPPORTED==1))),pos=none
    PDCH_SOFT_SWITCHING_DELAY, bit,count=8,indent=2,exist=((PDCH_PARAMS_INCL==1)) && (((((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((FOR_PDCH_SUPPPPORTED==1))),pos=none
    PDCH_SOFTER_SWITCHING_DELAY, bit,count=8,indent=2,exist=((PDCH_PARAMS_INCL==1)) && (((((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((FOR_PDCH_SUPPPPORTED==1))),pos=none
    WALSH_TABLE_ID, bit,count=3,indent=2,exist=((PDCH_PARAMS_INCL==1)) && (((((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((FOR_PDCH_SUPPPPORTED==1))),pos=none
    NUM_PDCCH, bit,count=3,indent=2,exist=((PDCH_PARAMS_INCL==1)) && (((((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((FOR_PDCH_SUPPPPORTED==1))),pos=none
    FOR_PDCCH_Rec, record,type=MC-RR FOR_PDCCH Rec,maxsize=10,size=(NUM_PDCCH+1),indent=2,exist=((PDCH_PARAMS_INCL==1)) && (((((GBL_PREV > 6)) && ((GBL_PREV > 7))) && ((GBL_PREV > 8))) && ((FOR_PDCH_SUPPPPORTED==1)))
    PDU_PADDING, bit,count=-2,indent=2,exist=((GBL_PREV > 6)) && ((GBL_PREV > 7)),pos=none
End

Begin Record, MC-RR BCAST Rec, BitPack, OTTSName = CMsgMCRRBcastRec
    BCCH_CODE_CHAN, bit,count=7,indent=2,exist=(GBL_PREV > 6),pos=none
    BRAT, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
    BCCH_CODE_RATE, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, MC-RR FOR_PDCCH Rec, BitPack, OTTSName = CMsgMCRRForPdcchRec
    FOR_PDCCH_WALSH, bit,count=6,indent=2,exist=(GBL_PREV > 8),pos=none
End

Begin Message, Paging Msg Rec PC - ANSI-41 Rand Rsp, BitPack, OTTSName=CMsgPageANSI41Rand
    PILOT_PN, bit,count=9,indent=2,exist=(GBL_PREV > 6),pos=none
    Reserved, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    RAND, bit,count=32,indent=2,exist=(GBL_PREV > 6),pos=none
    PDU_PADDING, bit,count=-2,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Message, Paging Msg Rec PC - Enhanced Access Parameter Rsp, Bitpack, OTTSName=CMsgPageEnhancedAccessParameter
    PILOT_PN, bit,count=9,indent=2,exist=(GBL_PREV > 6),pos=none
    ACC_MSG_SEQ, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    PSIST_PARMS_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    PSISTRec, record,type=EAPM PSIST Rec,maxsize=1,indent=2,exist=((PSIST_PARMS_INCL==1)) && ((GBL_PREV > 6))
    LACParmRec, record,type=EAPM LAC Parm Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    NUM_MODE_SELECTION_ENTRIES, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    Access_Rec, record,type=EAPM Access Rec,maxsize=10,size=(NUM_MODE_SELECTION_ENTRIES+1),indent=2,exist=(GBL_PREV > 6)
    RLGAIN_COMMON_PILOT, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    IC_THRESH, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    IC_MAX, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    NUM_MODE_PARM_REC, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    EACH_ModeRec, record,type=EAPM EACH Rec,maxsize=10,size=(NUM_MODE_PARM_REC+1),indent=2,exist=(GBL_PREV > 6)
    BA_PARMS_LEN, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    BAParmRec, record,type=EAPM BA Parm Rec,maxsize=1,exist=((BA_PARMS_LEN !=0)) && ((GBL_PREV > 6)),indent=2
    RA_PARMS_LEN, bit,count=5,indent=2,exist=(GBL_PREV > 6),pos=none
    RAParmRec, record,type=EAPM RA Parm Rec,maxsize=1,exist=((RA_PARMS_LEN !=0)) && ((GBL_PREV > 6)),indent=2
    ACCT_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    ACCT_INCL_EMG, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((ACCT_INCL==1)),pos=none
    ACCT_AOC_BITMAP_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((ACCT_INCL==1)),pos=none
    ACCT_SO_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((ACCT_INCL==1)),pos=none
    NUM_ACCT_SO, bit,count=4,indent=2,exist=((ACCT_SO_INCL==1)) && (((GBL_PREV > 6)) && ((ACCT_INCL==1))),pos=none
    ACCT_Rec1, record,type=EAPM ACCT_SO Rec,maxsize=20,size=(NUM_ACCT_SO+1),indent=2,exist=((ACCT_SO_INCL==1)) && (((GBL_PREV > 6)) && ((ACCT_INCL==1)))
    ACCT_SO_GRP_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((ACCT_INCL==1)),pos=none
    NUM_ACCT_SO_GRP, bit,count=3,indent=2,exist=((ACCT_SO_GRP_INCL==1)) && (((GBL_PREV > 6)) && ((ACCT_INCL==1))),pos=none
    ACCT_Rec2, record,type=EAPM ACCT_SO_GRP Rec,maxsize=10,size=(NUM_ACCT_SO_GRP+1),indent=2,exist=((ACCT_SO_GRP_INCL==1)) && (((GBL_PREV > 6)) && ((ACCT_INCL==1)))
    PDU_PADDING, bit,count=-2,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, EAPM PSIST Rec, BitPack, OTTSName = CMsgEAPMPSISTRec
    PSIST_PARMS_LEN, bit,count=5,indent=2,pos=none
    PSIST(0-9)_EACH, bit,count=6,indent=2,pos=none
    PSIST(10)_EACH, bit,count=3,indent=2,pos=none
    PSIST(11)_EACH, bit,count=3,indent=2,pos=none
    PSIST(12)_EACH, bit,count=3,indent=2,pos=none
    PSIST(13)_EACH, bit,count=3,indent=2,pos=none
    PSIST(14)_EACH, bit,count=3,indent=2,pos=none
    PSIST(15)_EACH, bit,count=3,indent=2,pos=none
    PSIST_EMG, bit,count=3,indent=2,pos=none
    MSG_PSIST_EACH, bit,count=3,indent=2,pos=none
    REG_PSIST_EACH, bit,count=3,indent=2,pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, EAPM LAC Parm Rec, BitPack, OTTSName = CMsgEAPMLACParmRec
    LAC_PARMS_LEN, bit,count=4,indent=2,pos=none
    ACC_TMO, bit,count=6,indent=2,pos=none
    RESERVED1, bit,count=4,indent=2,pos=none
    MAX_REQ_SEQ, bit,count=4,indent=2,pos=none
    MAX_RSP_SEQ, bit,count=4,indent=2,pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, EAPM Access Rec, BitPack, OTTSName = CMsgEAPMAccessRec
    ACCESS_MODE, bit,count=3,indent=2,base=enum:0 [Basic]/1 [Reservation],exist=(GBL_PREV > 6),pos=none
    ACCESS_MODE_MIN_DURATION, bit,count=10,indent=2,exist=(GBL_PREV > 6),pos=none
    ACCESS_MODE_MAX_DURATION, bit,count=10,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, EAPM EACH Rec, BitPack, OTTSName = CMsgEAPMEACHRec
    EACH_PARM_REC_LEN, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    APPLICABLE_MODES, record,type=EAPM EACH Applicable Mode Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    EACH_NOM_PWR, bit,count=5,indent=2,exist=(GBL_PREV > 6),pos=none
    EACH_INIT_PWR, bit,count=5,indent=2,exist=(GBL_PREV > 6),pos=none
    EACH_PWR_STEP, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    EACH_NUM_STEP, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    EACH_PREAMBLE_ENABLED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    EACH_PREAMBLE_NUM_FRAC, bit,count=4,indent=2,exist=((GBL_PREV > 6)) && ((EACH_PREAMBLE_ENABLED==1)),pos=none
    EACH_PREAMBLE_FRAC_DURATION, bit,count=4,indent=2,exist=((GBL_PREV > 6)) && ((EACH_PREAMBLE_ENABLED==1)),pos=none
    EACH_PREAMBLE_OFF_DURATION, bit,count=4,indent=2,exist=((GBL_PREV > 6)) && ((EACH_PREAMBLE_ENABLED==1)),pos=none
    EACH_PREAMBLE_ADD_DURATION, bit,count=4,indent=2,exist=((GBL_PREV > 6)) && ((EACH_PREAMBLE_ENABLED==1)),pos=none
    RESERVED1, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    EACH_PROBE_BKOFF, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    EACH_BKOFF, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    EACH_SLOT, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    EACH_SLOT_OFFSET1, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    EACH_SLOT_OFFSET2, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    RESERVED, bit,count=-8,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, EAPM EACH Applicable Mode Rec, BitPack, OTTSName = CMsgEAPMEACHAppModeRec
    ACC_MODE_1, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    ACC_MODE_2, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    RESERVED, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, EAPM BA Parm Rec, BitPack, OTTSName = CMsgEAPMBAParmRec
    NUM_EACH_BA, bit,count=5,indent=2,pos=none
    EACH_BA_RATES_SUPPORTED, bit,count=8,indent=2,pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, EAPM RA Parm Rec, BitPack, OTTSName = CMsgEAPMRAParmRec
    NUM_EACH_RA, bit,count=5,indent=2,pos=none
    NUM_CACH, bit,count=3,indent=2,pos=none
    CACH_CODE_RATE, bit,count=1,indent=2,pos=none
    CACH_CODE_CHAN, array, type=uint8, maxsize=10, size=(NUM_CACH+1), indent=2
    NUM_RCCCH, bit,count=5,indent=2,pos=none
    RCCCH_RATES_SUPPORTED, bit,count=8,indent=2,pos=none
    RCCCH_PREAMBLE_ENABLED, bit,count=1,indent=2,pos=none
    RCCCH_PREAMBLE_NUM_FRAC, bit,count=4,indent=2,exist=(RCCCH_PREAMBLE_ENABLED==1),pos=none
    RCCCH_PREAMBLE_FRAC_DURATION, bit,count=4,indent=2,exist=(RCCCH_PREAMBLE_ENABLED==1),pos=none
    RCCCH_PREAMBLE_OFF_DURATION, bit,count=4,indent=2,exist=(RCCCH_PREAMBLE_ENABLED==1),pos=none
    RCCCH_PREAMBLE_ADD_DURATION, bit,count=4,indent=2,exist=(RCCCH_PREAMBLE_ENABLED==1),pos=none
    RCCCH_SLOT, bit,count=6,indent=2,pos=none
    RCCCH_SLOT_OFFSET1, bit,count=6,indent=2,pos=none
    RCCCH_SLOT_OFFSET2, bit,count=6,indent=2,pos=none
    RCCCH_NOM_PWR, bit,count=5,indent=2,pos=none
    RCCCH_INIT_PWR, bit,count=5,indent=2,pos=none
    RA_PC_DELAY, bit,count=5,indent=2,pos=none
    EACAM_CACH_DELAY, bit,count=4,indent=2,pos=none
    RCCCH_HO_SUPPORTED, bit,count=1,indent=2,pos=none
    RCCCH_HO_THRESH, bit,count=4,indent=2,exist=(RCCCH_HO_SUPPORTED==1),pos=none
    EACAM_PCCAM_DELAY, bit,count=5,indent=2,exist=(RCCCH_HO_SUPPORTED==1),pos=none
    NUM_CPCCH, bit,count=2,indent=2,pos=none
    CPCCH_RATE, bit,count=2,indent=2,pos=none
    CPCCH_CODE_LEN, array, type=uint8, maxsize=6, size=(NUM_CPCCH+1)
    NUM_PCSCH_RA, bit,count=7,indent=2,pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, EAPM ACCT_SO Rec, BitPack, OTTSName = CMsgEAPMAcctSORec
    ACCT_AOC_BITMAP1, bit,count=5,indent=2,exist=((..\ACCT_AOC_BITMAP_INCL==1)) && ((GBL_PREV > 6)),pos=none
    ACCT_SO, bit,count=16,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, EAPM ACCT_SO_GRP Rec, BitPack, OTTSName = CMsgEAPMAcctSOGrpRec
    ACCT_AOC_BITMAP2, bit,count=5,indent=2,exist=((..\ACCT_AOC_BITMAP_INCL==1)) && ((GBL_PREV > 6)),pos=none
    ACCT_SO_GRP, bit,count=5,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Message, Paging Msg Rec PC - Universal Neighbor List Rsp, Bitpack, OTTSName=CMsgPageUniversalNeighborList
    PILOT_PN, bit,count=9,indent=2,exist=(GBL_PREV > 6),pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    NUM_RADIO_INTERFACE, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    Rec, record,type=UNLM Radio Interface Rec,maxsize=20,size=NUM_RADIO_INTERFACE,indent=2,exist=(GBL_PREV > 6)
    PDU_PADDING, bit,count=-2,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, UNLM Radio Interface Rec, BitPack, OTTSName=CMsgUNLMRadioInterface
    RADIO_INTERFACE_TYPE, bit,count=4,indent=2,base=enum:UNLM Radio Interface Type Enum,pos=none
    RADIO_INTERFACE_LEN, bit,count=8,indent=2,pos=none
    Rec, union, enum = RADIO_INTERFACE_TYPE, consumeBytes = RADIO_INTERFACE_LEN, indent = 2
End

Begin Message, UNLM Radio Interface Rec MC System Rsp, BitPack, OTTSName=CMsgUNLMRadioInterfaceType0
    PILOT_INC, bit,count=4,indent=2,pos=none
    NGHBR_SRCH_MODE, bit,count=2,indent=2,pos=none
    SRCH_WIN_N, bit,count=4,indent=2,exist=(NGHBR_SRCH_MODE < 2),pos=none
    SRCH_OFFSET_INCL, bit,count=1,indent=2,pos=none
    FREQ_FIELDS_INCL, bit,count=1,indent=2,pos=none
    USE_TIMING, bit,count=1,indent=2,pos=none
    GLOBAL_TIMING_INCL, bit,count=1,indent=2,exist=(USE_TIMING == 1),pos=none
    GLOBAL_TX_DURATION, bit,count=4,indent=2,exist=((GLOBAL_TIMING_INCL==1)) && ((USE_TIMING == 1)),pos=none
    GLOBAL_TX_PERIOD, bit,count=7,indent=2,exist=((GLOBAL_TIMING_INCL==1)) && ((USE_TIMING == 1)),pos=none
    NGHBR_SET_ENTRY_INFO, bit,count=1,indent=2,pos=none
    NGHBR_SET_ACCESS_INFO, bit,count=1,indent=2,pos=none
    NUM_NGHBR, bit,count=6,indent=2,pos=none
    Rec, record, type=UNLM Radio NGHBR Rec, maxsize=63, size=NUM_NGHBR, indent=2
    RESQ_ENABLED, bit,count=1,indent=2,exist=(GBL_PREV > 7),pos=none
    RESQ_DELAY_TIME, bit,count=6,indent=2,exist=((GBL_PREV > 7)) && ((RESQ_ENABLED==1)),pos=none
    RESQ_ALLOWED_TIME, bit,count=6,indent=2,exist=((GBL_PREV > 7)) && ((RESQ_ENABLED==1)),pos=none
    RESQ_ATTEMPT_TIME, bit,count=6,indent=2,exist=((GBL_PREV > 7)) && ((RESQ_ENABLED==1)),pos=none
    RESQ_CODE_CHAN, bit,count=11,indent=2,exist=((GBL_PREV > 7)) && ((RESQ_ENABLED==1)),pos=none
    RESQ_QOF, bit,count=2,indent=2,exist=((GBL_PREV > 7)) && ((RESQ_ENABLED==1)),pos=none
    RESQ_MIN_PERIOD_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 7)) && ((RESQ_ENABLED==1)),pos=none
    RESQ_MIN_PERIOD, bit,count=5,indent=2,exist=((RESQ_MIN_PERIOD_INCL==1)) && (((GBL_PREV > 7)) && ((RESQ_ENABLED==1))),pos=none
    RESQ_NUM_TOT_TRANS_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 7)) && ((RESQ_ENABLED==1)),pos=none
    RESQ_NUM_TOT_TRANS_20MS, bit,count=4,indent=2,exist=((RESQ_NUM_TOT_TRANS_INCL==1)) && (((GBL_PREV > 7)) && ((RESQ_ENABLED==1))),pos=none
    RESQ_NUM_TOT_TRANS_5MS, bit,count=4,indent=2,exist=((RESQ_NUM_TOT_TRANS_INCL==1)) && (((GBL_PREV > 7)) && ((RESQ_ENABLED==1))),pos=none
    RESQ_NUM_PREAMBLE_RC1_RC2, bit,count=3,indent=2,exist=((GBL_PREV > 7)) && ((RESQ_ENABLED==1)),pos=none
    RESQ_NUM_PREAMBLE, bit,count=3,indent=2,exist=((GBL_PREV > 7)) && ((RESQ_ENABLED==1)),pos=none
    RESQ_POWER_DELTA, bit,count=3,indent=2,exist=((GBL_PREV > 7)) && ((RESQ_ENABLED==1)),pos=none
    NGHBR_RESQ_CONFIGURED, array,type=bit,count=1,maxsize=63,size=NUM_NGHBR,indent=2,exist=((RESQ_ENABLED==1)) && (((GBL_PREV > 7)) && ((RESQ_ENABLED==1))),pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, UNLM Radio NGHBR Rec, BitPack, OTTSName=CMsgUNLMRadioNghbrRec
    NGHBR_CONFIG, bit,count=3,indent=2,pos=none
    NGHBR_PN, bit,count=9,indent=2,pos=none
    BCCH_SUPPORT, bit,count=1,indent=2,exist=(NGHBR_CONFIG == 3),pos=none
    ADD_PILOT_REC_INCL, bit,count=1,indent=2,pos=none
    Rec, record, type=NGHBR PILOT Rec, maxsize=1, indent=2, exist=(ADD_PILOT_REC_INCL==1)
    SEARCH_PRIORITY, bit,count=2,indent=2,exist=(..\NGHBR_SRCH_MODE==1 || ..\NGHBR_SRCH_MODE==3),pos=none
    SRCH_WIN_NGHBR, bit,count=4,indent=2,exist=(..\NGHBR_SRCH_MODE==2 || ..\NGHBR_SRCH_MODE==3),pos=none
    SRCH_OFFSET_NGHBR, bit,count=3,indent=2,exist=(..\SRCH_OFFSET_INCL==1),pos=none
    FREQ_INCL, bit,count=1,indent=2,exist=(..\FREQ_FIELDS_INCL==1),pos=none
    NGHBR_BAND, bit,count=5,indent=2,exist=((FREQ_INCL==1)) && ((..\FREQ_FIELDS_INCL==1)),pos=none
    NGHBR_FREQ, bit,count=11,indent=2,exist=((FREQ_INCL==1)) && ((..\FREQ_FIELDS_INCL==1)),pos=none
    TIMING_INCL, bit,count=1,indent=2,exist=(..\USE_TIMING==1),pos=none
    NGHBR_TX_OFFSET, bit,count=7,indent=2,exist=((TIMING_INCL==1)) && ((..\USE_TIMING==1)),pos=none
    NGBHR_TX_DURATION, bit,count=4,indent=2,exist=((TIMING_INCL==1 && ..\GLOBAL_TIMING_INCL==0)) && ((..\USE_TIMING==1)),pos=none
    NGHBR_TX_PERIOD, bit,count=7,indent=2,exist=((TIMING_INCL==1 && ..\GLOBAL_TIMING_INCL==0)) && ((..\USE_TIMING==1)),pos=none
    ACCESS_ENTRY_HO, bit,count=1,indent=2,exist=(..\NGHBR_SET_ENTRY_INFO==1),pos=none
    ACCESS_HO_ALLOWED, bit,count=1,indent=2,exist=(..\NGHBR_SET_ACCESS_INFO==1),pos=none
End

Begin Message, UNLM Radio Interface Rec Analog System Rsp, BitPack, OTTSName=CMsgUNLMRadioInterfaceType1
    NUM_ANALOG_NGHBR, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    Rec, record,type=NGHBR Analog Rec,maxsize=10,size=NUM_ANALOG_NGHBR,indent=2,exist=(GBL_PREV > 6)
    RESERVED, bit,count=-8,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, NGHBR Analog Rec, BitPack, OTTSName=CMsgNGHBRAnalogRec
    BAND_CLASS, bit,count=5,indent=2,exist=(GBL_PREV > 6),pos=none
    SYS_A_B, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Message, Paging Msg Rec PC - Security Mode Command Rsp, Bitpack, OTTSName=CMsgPageSecurityModeCommand
    ARQ_Rec, record,type=Fcsch Arq Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    ADDRESS_Rec, record,type=Fcsch Address Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    Integrity_Rec, record,type=Message Integrity Rec,maxsize=1,exist=((GBL_PREV>8 && ..\PD==2)) && (((GBL_PREV > 6)) && ((ADDRESS_Rec\ADDR_TYPE!=5))),indent=2
    ExtEncry_Rec, record,type=Fcsch Ext-Encryption Rec,maxsize=1,exist=(((GBL_FORCHTYPE==0 && ..\PD==1 && GBL_PREV<9)||(GBL_FORCHTYPE==0 && ..\PD!=0 && GBL_PREV>8) ||(GBL_FORCHTYPE==1 && ..\PD!=1))) && (((GBL_PREV > 6)) && ((ADDRESS_Rec\ADDR_TYPE!=5))),indent=2
    C_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    ENC_KEY_SIZE, bit,count=3,indent=2,exist=((C_SIG_ENCRYPT_MODE==1)) && ((GBL_PREV > 6)),pos=none
    MSG_INT_INFO_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 6)) && ((GBL_PREV > 8)),pos=none
    CHANGE_KEYS, bit,count=1,indent=2,exist=((MSG_INT_INFO_INCL==1)) && (((GBL_PREV > 6)) && ((GBL_PREV > 8))),pos=none
    USE_UAK, bit,count=1,indent=2,exist=((MSG_INT_INFO_INCL==1)) && (((GBL_PREV > 6)) && ((GBL_PREV > 8))),pos=none
    PDU_PADDING, bit,count=-2,indent=2,exist=(GBL_PREV > 6),pos=none
    MACI, bit,count=32,indent=2,exist=((GBL_PREV>8 && ADDRESS_Rec\ADDR_TYPE!=5 && ..\PD==2 && Integrity_Rec\MACI_INCL == 1)) && ((GBL_PREV > 6)),pos=none
End

Begin Message, Paging Msg Rec PC - Universal Page Message 1 Rsp, Bitpack, OTTSName=CMsgPageUnivPageMsg1
    Block_Rec, record,type=Page Universal Block,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    PDU_PADDING, bit,count=-2,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, Page Universal Block, BitPack, OTTSName = CMsgUPMBlock
    CONFIG_MSG_SEQ, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    ACC_MSG_SEQ, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    READ_NEXT_SLOT, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    READ_NEXT_SLOT_BCAST, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    IntAddr_Rec, record,type=Page Interleave_Addr Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    Page_Rec, record,type=Page Universal Record Rec,maxsize=100,size=end,indent=2,exist=(GBL_PREV > 6)
End

Begin Record, Page Interleave_Addr Rec, BitPack, OTTSName = CMsgPageInterAddr
    BCAST_INCLUDED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    NUM_BCAST, bit,count=5,indent=2,exist=((BCAST_INCLUDED==1)) && ((GBL_PREV > 6)),pos=none
    IMSI_INCLUDED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    NUM_IMSI, bit,count=6,indent=2,exist=((IMSI_INCLUDED==1)) && ((GBL_PREV > 6)),pos=none
    TMSI_INCLUDED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    NUM_TMSI, bit,count=6,indent=2,exist=((TMSI_INCLUDED==1)) && ((GBL_PREV > 6)),pos=none
    RESERVED_TYPE_INCLUDED, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    NUM_RESERVED_TYPE, bit,count=6,indent=2,exist=((RESERVED_TYPE_INCLUDED==1)) && ((GBL_PREV > 6)),pos=none
    BurstType_Rec, record,type=Page InterAddr BurstType Rec,maxsize=32,size=(NUM_BCAST+1),exist=((BCAST_INCLUDED==1)) && ((GBL_PREV > 6)),indent=2
    Rec, record,type=Page InterAddr Rec,maxsize=16,size=16,indent=2,exist=(GBL_PREV > 6)
End

Begin Record, Page InterAddr BurstType Rec, BitPack, OTTSName = CMsgPageAddrBurstType
    BURST_TYPE, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Record, Page InterAddr Rec, BitPack, OTTSName = CMsgPageInterAddrRec
    BC_ADDR_BLOCK, array,type=bit,count=1,maxsize=100,size=(..\NUM_BCAST+1),indent=2,exist=((..\BCAST_INCLUDED==1)) && ((GBL_PREV > 6)),pos=none
    IMSI_ADDR_BLOCK, array,type=bit,count=1,maxsize=100,size=(..\NUM_BCAST+1),indent=2,exist=((..\IMSI_INCLUDED==1)) && ((GBL_PREV > 6)),pos=none
    TMSI_ADDR_BLOCK, array,type=bit,count=1,maxsize=100,size=(..\NUM_BCAST+1),indent=2,exist=((..\TMSI_INCLUDED==1)) && ((GBL_PREV > 6)),pos=none
    RESERVED_ADDR_BLOCK, array,type=bit,count=1,maxsize=100,size=(..\NUM_RESERVED_TYPE+1),indent=2,exist=((..\RESERVED_TYPE_INCLUDED==1)) && ((GBL_PREV > 6)),pos=none
End

Begin Record, Page Universal Record Rec, Bitpack, OTTSName=CMsgUPageRec
    PageClassId, bit,count=4,base=enum:Page Class Enum,indent=2,pos=none
    PAGE_SUBCLASS_EXT, bit,count=2,indent=2,exist=(GBL_PREV>6 && PageClassId>12),pos=none
    URec, union,   enum=PageClassId
End

Begin Message, Page Universal Record Rec 0_IMSI_S Rsp, BitPack, OTTSName=CMsgUPageRec0_IMSI_S
    MSG_SEQ, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    IMSI_S_33_16, bit,count=18,indent=2,exist=(GBL_PREV > 6),pos=none
    Spec_Rec, record,type=Page Universal Record SpecRecord,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    SDU_Rec, record,type=Page Universal Record SDU Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
End

Begin Record, Page Universal Record SpecRecord, BitPack, OTTSName = CMsgUPMSpecRec
    EXT_MS_SDU_LENGTH_INCL, bit,count=1,indent=2,pos=none
    EXT_MS_SDU_LENGTH, bit,count=4,indent=2,exist=(EXT_MS_SDU_LENGTH_INCL==1),pos=none
End

Begin Record, Page Universal Record SDU Rec, BitPack, OTTSName = CMsgUPageSDU
    SERVICE_OPTION, bit,count=16,indent=2,pos=none
    ADD_MS_RECORD, array,type=uint8,maxsize=20,size=..\Spec_Rec\EXT_MS_SDU_LENGTH,exist=(..\Spec_Rec\EXT_MS_SDU_LENGTH_INCL==1),indent = 2
End

Begin Message, Page Universal Record Rec 0_IMSI_S_IMSI_11_12 Rsp, BitPack, OTTSName=CMsgUPageRec0_IMSI_S_IMSI_11_12
    MSG_SEQ, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    IMSI_11_12, bit,count=7,indent=2,exist=(GBL_PREV > 6),pos=none
    IMSI_S_33_16, bit,count=18,indent=2,exist=(GBL_PREV > 6),pos=none
    Spec_Rec, record,type=Page Universal Record SpecRecord,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    SDU_Rec, record,type=Page Universal Record SDU Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
End

Begin Message, Page Universal Record Rec 0_IMSI_S_MCC Rsp, BitPack, OTTSName=CMsgUPageRec0_IMSI_S_MCC
    MSG_SEQ, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    MCC, bit,count=10,indent=2,exist=(GBL_PREV > 6),pos=none
    IMSI_S_33_16, bit,count=18,indent=2,exist=(GBL_PREV > 6),pos=none
    Spec_Rec, record,type=Page Universal Record SpecRecord,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    SDU_Rec, record,type=Page Universal Record SDU Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
End

Begin Message, Page Universal Record Rec 0_IMSI_S_IMSI_11_12_MCC Rsp, BitPack, OTTSName=CMsgUPageRec0_IMSI_S_IMSI_11_12_MCC
    MSG_SEQ, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    MCC, bit,count=10,indent=2,exist=(GBL_PREV > 6),pos=none
    IMSI_11_12, bit,count=7,indent=2,exist=(GBL_PREV > 6),pos=none
    IMSI_S_33_16, bit,count=18,indent=2,exist=(GBL_PREV > 6),pos=none
    Spec_Rec, record,type=Page Universal Record SpecRecord,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    SDU_Rec, record,type=Page Universal Record SDU Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
End

Begin Message, Page Universal Record Rec 1_IMSI_S_IMSI_11_12 Rsp, BitPack, OTTSName=CMsgUPageRec1_IMSI_S_IMSI_11_12
    MSG_SEQ, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    IMSI_ADDR_NUM, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    IMSI_11_12, bit,count=7,indent=2,exist=(GBL_PREV > 6),pos=none
    IMSI_S_33_16, bit,count=18,indent=2,exist=(GBL_PREV > 6),pos=none
    Spec_Rec, record,type=Page Universal Record SpecRecord,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    SDU_Rec, record,type=Page Universal Record SDU Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
End

Begin Message, Page Universal Record Rec 1_IMSI_S_IMSI_11_12_MCC Rsp, BitPack, OTTSName=CMsgUPageRec1_IMSI_S_IMSI_11_12_MCC
    MSG_SEQ, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    IMSI_ADDR_NUM, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    MCC, bit,count=10,indent=2,exist=(GBL_PREV > 6),pos=none
    IMSI_11_12, bit,count=7,indent=2,exist=(GBL_PREV > 6),pos=none
    IMSI_S_33_16, bit,count=18,indent=2,exist=(GBL_PREV > 6),pos=none
    Spec_Rec, record,type=Page Universal Record SpecRecord,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    SDU_Rec, record,type=Page Universal Record SDU Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
End

Begin Message, Page Universal Record Rec Reserved1 Rsp, BitPack, OTTSName=CMsgUPageRecReserved1
    RESERVED_LEN, bit,count=5,indent=2,exist=(GBL_PREV > 6),pos=none
    RESERVED, array,type=uint8,maxsize=32,size=RESERVED_LEN,indent=2,exist=(GBL_PREV > 6)
End

Begin Message, Page Universal Record Rec Reserved2 Rsp, BitPack, OTTSName=CMsgUPageRecReserved2
    RESERVED_LEN, bit,count=5,indent=2,exist=(GBL_PREV > 6),pos=none
    RESERVED, array,type=uint8,maxsize=32,size=RESERVED_LEN,indent=2,exist=(GBL_PREV > 6)
End

Begin Message, Page Universal Record Rec 2_32 Rsp, BitPack, OTTSName=CMsgUPageRec2_32
    MSG_SEQ, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    TMSI_CODE_ADDR_31_16, bit,count=16,indent=2,exist=(GBL_PREV > 6),pos=none
    Spec_Rec, record,type=Page Universal Record SpecRecord,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    SDU_Rec, record,type=Page Universal Record SDU Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
End

Begin Message, Page Universal Record Rec 2_24 Rsp, BitPack, OTTSName=CMsgUPageRec2_24
    MSG_SEQ, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    TMSI_CODE_ADDR_23_16, bit,count=8,indent=2,exist=(GBL_PREV > 6),pos=none
    Spec_Rec, record,type=Page Universal Record SpecRecord,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    SDU_Rec, record,type=Page Universal Record SDU Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
End

Begin Message, Page Universal Record Rec 2_16 Rsp, BitPack, OTTSName=CMsgUPageRec2_16
    MSG_SEQ, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    Spec_Rec, record,type=Page Universal Record SpecRecord,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    SDU_Rec, record,type=Page Universal Record SDU Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
End

Begin Message, Page Universal Record Rec 2_32_TMSI_ZONE Rsp, BitPack, OTTSName=CMsgUPageRec2_32_TMSI_ZONE
    MSG_SEQ, bit,count=3,indent=2,exist=(GBL_PREV > 6),pos=none
    TMSI_ZONE_LEN, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    TMSI_ZONE, array,type=uint8,maxsize=20,size=TMSI_ZONE_LEN,indent=2,exist=(GBL_PREV > 6)
    TMSI_CODE_ADDR_31_16, bit,count=16,indent=2,exist=(GBL_PREV > 6),pos=none
    Spec_Rec, record,type=Page Universal Record SpecRecord,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    SDU_Rec, record,type=Page Universal Record SDU Rec,maxsize=1,indent=2,exist=(GBL_PREV > 6)
End

Begin Message, Page Universal Record Rec Class3_Broadcast Rsp, BitPack, OTTSName=CMsgUPageRecClass3_Broadcast
End

Begin Message, Page Universal Record Rec Class3a_Broadcast Rsp, BitPack, OTTSName=CMsgUPageRecClass3a_Broadcast
    Reserved16, bit,count=16,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 0)),pos=none
    Reserved8, bit,count=8,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 1)),pos=none
    LENGTH, bit,count=4,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 3)),pos=none
    Reserved, array,type=uint8,maxsize=20,size=LENGTH+2,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 3))
End

Begin Message, Page Universal Record Rec Class3b_Broadcast Rsp, BitPack, OTTSName=CMsgUPageRecClass3b_Broadcast
    Reserved16, bit,count=16,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 0)),pos=none
    Reserved52, bit,count=52,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 1)),base=16,pos=none
    Reserved60, bit,count=60,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 2)),base=16,pos=none
    RESERVED_LEN, bit,count=5,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 3)),pos=none
    RESERVED, array,type=uint8,maxsize=32,size=RESERVED_LEN,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 3))
End

Begin Message, Page Universal Record Rec Class3c_Broadcast Rsp, BitPack, OTTSName=CMsgUPageRecClass3c_Broadcast
    ADDR_LEN, bit,count=4,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 0)),pos=none
    BC_ADDR_REMAINDER, array,type=uint8,maxsize=16,size=ADDR_LEN-2,indent=2,exist=((ADDR_LEN>2)) && (((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 0)))
    Spec_Rec, record,type=Page Record Broadcast Rec,maxsize=1,indent=2,exist=((GBL_PREV > 6)) && (((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 0)))
    BCN, bit,count=3,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 0)),pos=none
    TIME_OFFSET, bit,count=10,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 0)),pos=none
    REPEAT_TIME_OFFSET, bit,count=5,indent=2,exist=((Spec_Rec\EXT_BCAST_SDU_LENGTH_IND==1||Spec_Rec\EXT_BCAST_SDU_LENGTH_IND==3)) && (((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 0))),pos=none
    ADD_BCAST_RECORD, array,type=uint8,maxsize=15,size=(Spec_Rec\EXT_BCAST_SDU_LENGTH),exist=((Spec_Rec\EXT_BCAST_SDU_LENGTH_IND>1)) && (((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 0)))
    RESERVED_LEN, bit,count=5,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 3)),pos=none
    RESERVED, array,type=uint8,maxsize=32,size=RESERVED_LEN,indent=2,exist=((GBL_PREV>6 && (..\PageClassId>12))) && ((..\PAGE_SUBCLASS_EXT == 3))
End

Begin Message, Paging Msg Rec PC - Universal Page Message 2 Rsp, Bitpack, OTTSName=CMsgPageUnivPageMsg2
    FirstBlock_Rec, record,type=Page Universal Block,maxsize=1,indent=2,exist=(GBL_PREV > 6)
End

Begin Message, Paging Msg Rec PC - Universal Page Message 3 Rsp, Bitpack, OTTSName=CMsgPageUnivPageMsg3
    UPM_SEGMENT_SEQ, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
    MiddleBlock_Rec, record,type=Page Universal Block,maxsize=1,indent=2,exist=(GBL_PREV > 6)
End

Begin Message, Paging Msg Rec PC - Universal Page Message 4 Rsp, Bitpack, OTTSName=CMsgPageUnivPageMsg4
    UPM_SEGMENT_SEQ, bit,count=2,indent=2,exist=(GBL_PREV > 6),pos=none
    FinalBlock_Rec, record,type=Page Universal Block,maxsize=1,indent=2,exist=(GBL_PREV > 6)
    PDU_PADDING, bit,count=-2,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Message, Paging Msg Rec PC - Null B Rsp, BitPack, OTTSName=CMsgPageNullB
    Data, array, type=uint8, maxsize=100, size=end, columns=60, indent = 2
End

Begin Message, Paging Msg Rec PC - MC-MAP System Information Rsp, Bitpack, OTTSName=CMsgPageMCMAPSysInfo
    PILOT_PN, bit,count=9,indent=2,exist=(GBL_PREV > 6),pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,exist=(GBL_PREV > 6),pos=none
    NUM_RADIO_INTER_COUNT, bit,count=4,indent=2,exist=(GBL_PREV > 6),pos=none
    PDU_PADDING, bit,count=-2,indent=2,exist=(GBL_PREV > 6),pos=none
End

Begin Message, Paging Msg Rec PC - Authentication Request Rsp, Bitpack, OTTSName=CMsgPageAuthReq
    ARQ_Rec, record,type=Fcsch Arq Rec,maxsize=1,indent=2,exist=(GBL_PREV > 8)
    ADDRESS_Rec, record,type=Fcsch Address Rec,maxsize=1,indent=2,exist=(GBL_PREV > 8)
    Integrity_Rec, record,type=Message Integrity Rec,maxsize=1,exist=((GBL_PREV>8 && ..\PD==2)) && (((GBL_PREV > 8)) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5))),indent=2
    ExtEncry_Rec, record,type=Fcsch Ext-Encryption Rec,maxsize=1,exist=(((GBL_FORCHTYPE==0 && ..\PD==1 && GBL_PREV<9)||(GBL_FORCHTYPE==0 && ..\PD!=0 && GBL_PREV>8) ||(GBL_FORCHTYPE==1 && ..\PD!=1))) && (((GBL_PREV > 8)) && ((GBL_PREV>6 && ADDRESS_Rec\ADDR_TYPE!=5))),indent=2
    RANDA, array,type=uint8,maxsize=16,size=16,indent=2,exist=(GBL_PREV > 8)
    CON_SQN, bit,count=48,indent=2,exist=(GBL_PREV > 8),base=16,pos=none
    AMF, bit,count=16,indent=2,exist=(GBL_PREV > 8),pos=none
    MAC_A, bit,count=64,indent=2,exist=(GBL_PREV > 8),base=16,pos=none
    PDU_PADDING, bit,count=-2,indent=2,exist=(GBL_PREV > 8),pos=none
    MACI, bit,count=32,indent=2,exist=((GBL_PREV>8 && ADDRESS_Rec\ADDR_TYPE!=5 && ..\PD==2 && Integrity_Rec\MACI_INCL == 1)) && ((GBL_PREV > 8)),pos=none
End

Begin Message, Paging Msg Rec PC - MEID Extended Channel Assignment Rsp, BitPack, OTTSName=CMsgPageMEIDExtendedChannelAssignment
    ECAM_Rec, record,type=MECAM Rec,maxsize=10,size=end,minbytes=2,indent=2,exist=(GBL_PREV > 5)
    Data, array,type=uint8,maxsize=100,size=end,columns=60,indent=2,exist=!(GBL_PREV > 5)
End

Begin Record, MECAM Rec, BitPack, OTTSName=CMsgMEcam
    ARQ_Rec, record,type=Fcsch Arq Rec,maxsize=1,indent=2,exist=GBL_PREV > 5
    ADDRESS_Rec, record,type=Fcsch Address Rec,maxsize=1,indent=2,exist=GBL_PREV > 5
    RESERVED1, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    ADD_RECORD_LEN, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    ASSIGN_MODE, bit,count=3,base=enum:MECAM Assign Mode Enum,indent=2,exist=GBL_PREV > 5,pos=none
    RESERVED2, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    Rec, union,enum=ASSIGN_MODE,consumebytes=ADD_RECORD_LEN - 1,gensizevarname=ADD_RECORD_LEN,gensizeexpression=THISSIZE+1,indent=2,exist=GBL_PREV > 5
End

Begin Message, MECAM Rec 1 [1] Rsp, BitPack, OTTSName=CMsgMEcam1
    RESPOND, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FREQ_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    NUM_PILOTS, bit,count=6,indent=2,exist=GBL_PREV > 5,pos=none
    Rec, record,maxsize=63,size=NUM_PILOTS+1,type=ECAM Pilot PN Rec,indent=2,exist=GBL_PREV > 5
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, MECAM Rec 4 [4] Rsp, BitPack, OTTSName=CMsgMEcam4
    FREQ_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    BYPASS_ALERT_ANSWER, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    GRANTED_MODE, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    DEFAULT_CONFIG, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_RC, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    REV_RC, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    FRAME_OFFSET, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_SUBCHAN_GAIN, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    RLGAIN_ADJ, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_PILOTS, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    CH_Rec, record,type=ECAM CH Rec,maxsize=1,indent=2,exist=GBL_PREV > 5
    REV_FCH_GATING_MODE, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_PWR_CNTL_DELAY_INCL, bit,count=1,indent=2,exist=((REV_FCH_GATING_MODE == 1)) && (GBL_PREV > 5),pos=none
    REV_PWR_CNTL_DELAY, bit,count=2,indent=2,exist=((REV_FCH_GATING_MODE == 1)) && (GBL_PREV > 5),pos=none
    RESERVED_BLOB, bit,count=(ENCRYPT_MODE == 2)?6:3,indent=2,exist=GBL_PREV > 5,pos=none
    PLCM_TYPE_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    PLCM_TYPE, bit,count=4,indent=2,exist=((PLCM_TYPE_INCL == 1)) && (GBL_PREV > 5),pos=none
    PLCM_39, bit,count=39,indent=2,exist=((PLCM_TYPE == 1)) && (GBL_PREV > 5),base=16,pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, Paging Msg Rec PC - Alternate Tech Info Rsp, Bitpack, OTTSName=CMsgAlternateTechInfo
    PILOT_PN, bit,count=9,indent=2,pos=none
    CONFIG_MSG_SEQ, bit,count=6,indent=2,pos=none
    NUM_RADIO_INTERFACE, bit,count=4,indent=2,pos=none
    Rec, record, type=ATI Rec, maxsize=15, size=NUM_RADIO_INTERFACE, indent=2
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, ATI Rec, BitPack, OTTSName=CMsgATIRec
    RADIO_INTERFACE_TYPE, bit,count=4,indent=2,base=enum:ATI Radio Interface Type Enum,pos=none
    RADIO_INTERFACE_LEN, bit,count=10,indent=2,pos=none
    Rec, union, enum = RADIO_INTERFACE_TYPE, consumeBytes = RADIO_INTERFACE_LEN, indent = 2
End

Begin Message, ATI Rec HRPD Rsp, Bitpack
    CommonRec, record, type=HRPD Common Rec, maxsize=1, size=1, indent=2
    NUM_HRPD_NGHBR, bit,count=6,indent=2,pos=none
    Rec, record, type=HRPD Neighbor Rec, maxsize=63, size=NUM_HRPD_NGHBR, indent=2
End

Begin Record, HRPD Common Rec, BitPack
    COMMON_RECORD_LEN, bit,count=4,indent=2,pos=none
    SUBNET_COLOR_CODE_INCL, bit,count=1,indent=2,pos=none
    SUBNET_COLOR_CODE, bit,count=8,indent=2,exist=(SUBNET_COLOR_CODE_INCL==1),pos=none
    COMMON_RECORD_RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Record, HRPD Neighbor Rec, BitPack
    HRPD_NGHBR_REC_LEN, bit,count=4,indent=2,pos=none
    NGHBR, bit,count=9,indent=2,pos=none
    NGHBR_FREQ_SAME_AS_PREV, bit,count=1,indent=2,pos=none
    NGHBR_BAND, bit,count=5,indent=2,exist=(NGHBR_FREQ_SAME_AS_PREV==0),pos=none
    NGHBR_FREQ, bit,count=11,indent=2,exist=(NGHBR_FREQ_SAME_AS_PREV==0),pos=none
    PN_ASSOCIATION_IND, bit,count=1,indent=2,pos=none
    DATA_ASSOCIATION_IND, bit,count=1,indent=2,pos=none
    NGHBR_SUBNET_COLOR_CODE_IND, bit,count=2,indent=2,pos=none
    NGHBR_SUBNET_COLOR_CODE, bit,count=8,indent=2,exist=(NGHBR_SUBNET_COLOR_CODE_IND==2),pos=none
    HRPD_NGHBR_REC_RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, ATI Rec E-UTRAN Rsp, Bitpack
    PriorityIncluded, bit,count=1,indent=2,pos=none
    ServingPriority, bit,count=3,indent=2,exist=(PriorityIncluded==1),pos=none
    ThreshServing, bit,count=6,indent=2,pos=none
    PerEARFCNParamsIncluded, bit,count=1,indent=2,pos=none
    RxLevMinEUTRACommon, bit,count=7,indent=2,exist=(PerEARFCNParamsIncluded==0),pos=none
    PEMaxCommon, bit,count=6,indent=2,exist=(PerEARFCNParamsIncluded==0),pos=none
    RxLevMinEUTRAOffsetCommonIncl, bit,count=1,indent=2,exist=(PerEARFCNParamsIncluded==0),pos=none
    RxLevMinEUTRAOffsetCommon, bit,count=3,indent=2,exist=(RxLevMinEUTRAOffsetCommonIncl==1),pos=none
    MaxReselectionTimerIncluded, bit,count=1,indent=2,pos=none
    MaxReselectionTimer, bit,count=4,indent=2,exist=(MaxReselectionTimerIncluded==1),pos=none
    SearchBackOffTimerIncluded, bit,count=1,indent=2,pos=none
    MinMeasurementBackoff, bit,count=4,indent=2,exist=(SearchBackOffTimerIncluded==1),pos=none
    MaxMeasurementBackoff, bit,count=4,indent=2,exist=(SearchBackOffTimerIncluded==1),pos=none
    PLMNIDIncluded, bit,count=1,indent=2,pos=none
    NumEUTRAFrequencies, bit,count=3,indent=2,pos=none
    Rec, record, type=EUTRAFrequency Rec, maxsize=7, size=NumEUTRAFrequencies, indent=2
End

Begin Record, EUTRAFrequency Rec, Bitpack
    EARFCN, bit,count=16,indent=2,pos=none
    EARFCNPriority, bit,count=3,indent=2,exist=(..\PriorityIncluded==1),pos=none
    ThreshX, bit,count=5,indent=2,pos=none
    RxLevMinEUTRA, bit,count=7,indent=2,exist=(..\PerEARFCNParamsIncluded==1),pos=none
    PEMax, bit,count=6,indent=2,exist=(..\PerEARFCNParamsIncluded==1),pos=none
    RxLevMinEUTRAOffsetIncl, bit,count=1,indent=2,exist=(..\PerEARFCNParamsIncluded==1),pos=none
    RxLevMinEUTRAOffset, bit,count=3,indent=2,exist=(RxLevMinEUTRAOffsetIncl==1),pos=none
    MeasurementBandwidth, bit,count=3,indent=2,pos=none
    PLMNSameAsPreviousChannel, bit,count=1,indent=2,exist=(..\PLMNIDIncluded==1),pos=none
    NumPLMNIDs, bit,count=3,indent=2,exist=(..\PLMNIDIncluded==1),pos=none
    Rec, record, type=PLMNID Rec, maxsize=7, size=NumPLMNIDs+1, indent=2, exist=(..\PLMNIDIncluded==1)
End

Begin Record, PLMNID Rec, Bitpack
    MCC, bit,count=12,indent=2,pos=none
    MNC, bit,count=12,indent=2,pos=none
End

Begin Message, ATI Rec WiMAX Rsp, Bitpack
    Data, array, type=uint8, maxsize=1024, size=..\RADIO_INTERFACE_LEN, indent = 2
End

Begin Message, Paging Msg Rec PC - General Extension Rsp, BitPack
    ARQ_Rec, record, type = Fcsch Arq Rec, maxsize = 1, indent = 2
    ADDRESS_Rec, record, type = Fcsch Address Rec, maxsize = 1, indent = 2
    MsgRec, record, type = PC - General Extension Msg Rec, maxsize=1
End

Begin Record, PC - General Extension Msg Rec, BitPack
    NUM_GE_REC, bit,count=8,indent=2,pos=none
    GE_Records, record, type = FTC General Extension Rec, maxsize = 7, exist = (NUM_GE_REC != 0), size = (NUM_GE_REC)
    MESSAGE_TYPE, bit,count=8,indent=2,base=enum:GEM Paging Msg Enum,pos=none
    Msg, union, enum=MESSAGE_TYPE
End

Begin Record, FTC General Extension Rec, BitPack, OTTSName=CMsgFtcGeneralExtensionRec
    GE_REC_TYPE, bit,count=8,indent=2,base=enum:FTC General Extension Type Enum,pos=none
    GE_REC_LEN, bit,count=8,indent=2,pos=none
    Record, union, enum=GE_REC_TYPE, ConsumeBytes = GE_REC_LEN
End

Begin Message, FTC General Extension Rec Reverse Channel Information Rsp, BitPack
    BAND_CLASS, bit,count=5,indent=2,pos=none
    REV_CHANNEL, bit,count=11,indent=2,pos=none
End

Begin Message, FTC General Extension Rec Radio Configuration Parameters Rsp, BitPack
    Radio_Config_Params_Rec, record, type = Radio Config Params Rec, maxsize=1
End

Begin Record, Radio Config Params Rec, BitPack, OTTSName=CMsgRcpmRadioConfigParams
    USE_TIME, bit,count=1,indent=2,pos=none
    ACTION_TIME, bit,count=6,indent=2,exist=(USE_TIME == 1),pos=none
    FOR_FCH_ACK_MASK_RL_BLANKING_INC, bit,count=1,indent=2,pos=none
    FOR_FCH_ACK_MASK_RL_BLANKING, bit,count=16,base=16,indent=2,exist=(FOR_FCH_ACK_MASK_RL_BLANKING_INC == 1),pos=none
    FOR_FCH_ACK_MASK_NO_RL_BLANKING_INC, bit,count=1,indent=2,pos=none
    FOR_FCH_ACK_MASK_NO_RL_BLANKING, bit,count=16,base=16,indent=2,exist=(FOR_FCH_ACK_MASK_NO_RL_BLANKING_INC == 1),pos=none
    REV_FCH_ACK_MASK_INC, bit,count=1,indent=2,pos=none
    REV_FCH_ACK_MASK, bit,count=16,base=16,indent=2,exist=(REV_FCH_ACK_MASK_INC == 1),pos=none
    FOR_SCH_ACK_MASK_RL_BLANKING_INC, bit,count=1,indent=2,pos=none
    FOR_SCH_ACK_MASK_RL_BLANKING, bit,count=16,base=16,indent=2,exist=(FOR_SCH_ACK_MASK_RL_BLANKING_INC == 1),pos=none
    FOR_SCH_ACK_MASK_NO_RL_BLANKING_INC, bit,count=1,indent=2,pos=none
    FOR_SCH_ACK_MASK_NO_RL_BLANKING, bit,count=16,base=16,indent=2,exist=(FOR_SCH_ACK_MASK_NO_RL_BLANKING_INC == 1),pos=none
    REV_SCH_ACK_MASK_INC, bit,count=1,indent=2,pos=none
    REV_SCH_ACK_MASK, bit,count=16,base=16,indent=2,exist=(REV_SCH_ACK_MASK_INC == 1),pos=none
    FOR_N2M_IND, bit,count=3,indent=2,pos=none
    FPC_MODE, bit,count=3,indent=2,pos=none
    RPC_MODE, bit,count=2,indent=2,pos=none
    PWR_CNTL_STEP, bit,count=3,indent=2,pos=none
    FOR_FCH_BLANKING_DUTYCYCLE, bit,count=3,indent=2,pos=none
    REV_FCH_BLANKING_DUTYCYCLE, bit,count=3,indent=2,pos=none
    REV_ACKCH_GAIN_ADJ_ACS1_INC, bit,count=1,indent=2,pos=none
    REV_ACKCH_GAIN_ADJ_ACS1, bit,count=7,indent=2,exist=(REV_ACKCH_GAIN_ADJ_ACS1_INC == 1),pos=none
    REV_ACKCH_GAIN_ADJ_ACS2PLUS_INC, bit,count=1,indent=2,pos=none
    REV_ACKCH_GAIN_ADJ_ACS2PLUS, bit,count=7,indent=2,exist=(REV_ACKCH_GAIN_ADJ_ACS2PLUS_INC == 1),pos=none
    NUM_RC_PARAMS_RECORDS, bit,count=3,indent=2,pos=none
    RC_Params_Rec, record, type = RCPM RC Params Rec, maxsize = 7, exist = (NUM_RC_PARAMS_RECORDS != 0), size = (NUM_RC_PARAMS_RECORDS)
End

Begin Record, RCPM RC Params Rec, BitPack, OTTSName=CMsgRcpmRCParams
    PILOT_PN, bit,count=9,indent=2,pos=none
    QOF_SET_IN_USE, bit,count=3,indent=2,pos=none
    REV_SCH0_ACK_BIT_INC, bit,count=1,indent=2,pos=none
    REV_SCH0_ACK_CH_WALSH, bit,count=7,indent=2,exist=(REV_SCH0_ACK_BIT_INC == 1),pos=none
    REV_SCH0_ACK_BIT, bit,count=5,indent=2,exist=(REV_SCH0_ACK_BIT_INC == 1),pos=none
    REV_SCH1_ACK_BIT_INC, bit,count=1,indent=2,pos=none
    REV_SCH1_ACK_CH_WALSH, bit,count=7,indent=2,exist=(REV_SCH1_ACK_BIT_INC == 1),pos=none
    REV_SCH1_ACK_BIT, bit,count=5,indent=2,exist=(REV_SCH1_ACK_BIT_INC == 1),pos=none
    FOR_FCH_CCSH_INTERLEAVER_TYPE, bit,count=1,indent=2,pos=none
End

Begin Message, FTC General Extension Rec Delayed ARQ Rsp, BitPack
    FOR_SCH_DELAYED_ACK_MASK_INCL, bit,count=1,indent=2,pos=none
    FOR_SCH_DELAYED_ACK_MASK, bit,count=3,base=16,indent=2,pos=none
    REV_SCH_DELAYED_ACK_MASK_INCL, bit,count=1,indent=2,pos=none
    REV_SCH_DELAYED_ACK_MASK, bit,count=3,base=16,indent=2,pos=none
End

Begin Message, PC - General Extension Msg Rec PC - Channel Assignment Rsp, BitPack
    Rec, record, type=GEMCAM Rec, maxsize=20, size=end, minbytes=3
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, GEMCAM Rec, BitPack
    ASSIGN_MODE, bit,count=3,indent=2,base=enum:GEMCAM Assign Mode Enum,pos=none
    ADD_RECORD_LEN, bit,count=3,indent=2,pos=none
    Rec, union, enum=ASSIGN_MODE, consumeBytes = ADD_RECORD_LEN, indent = 2
End

Begin Message, GEMCAM Rec 4 [Ext Traffic Ch Assignment] Rsp, BitPack
    FREQ_INCL, bit,count=1,indent=2,pos=none
    RESERVED1, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    BYPASS_ALERT_ANSWER, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    DEFAULT_CONFIG, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    RESERVED2, bit,count=7,indent=2,exist=!(GBL_PREV > 5),pos=none
    GRANTED_MODE, bit,count=2,indent=2,pos=none
    CODE_CHAN, bit,count=8,indent=2,pos=none
    FRAME_OFFSET, bit,count=4,indent=2,pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=(FREQ_INCL == 1),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=(FREQ_INCL == 1),pos=none
    D_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((ENCRYPT_MODE==3)) && ((GBL_PREV > 6)),pos=none
    ENC_KEY_SIZE, bit,count=3,indent=2,exist=((ENCRYPT_MODE==2 || ENCRYPT_MODE==3)) && ((GBL_PREV > 6)),pos=none
    C_SIG_ENCRYPT_MODE_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6),pos=none
    C_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((C_SIG_ENCRYPT_MODE_INCL==1)) && ((GBL_PREV > 6)),pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, PC - General Extension Msg Rec PC - Extended Channel Assignment Rsp, BitPack
    ECAM_Rec, record,type=GEMECAM Rec,maxsize=10,size=end,minbytes=2,indent=2,exist=(GBL_PREV > 5)
    Data, array,type=uint8,maxsize=100,size=end,columns=60,indent=2,exist=!(GBL_PREV > 5)
    PDU_PADDING, bit,count=-2,indent=2,pos=none
End

Begin Record, GEMECAM Rec, BitPack
    ASSIGN_MODE, bit,count=3,base=enum:GEMECAM Assign Mode Enum,indent=2,exist=GBL_PREV > 5,pos=none
    RESERVED2, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    Rec, union,enum=ASSIGN_MODE,indent=2,exist=GBL_PREV > 5
End

Begin Message, GEMECAM Rec 0 [0] Rsp, BitPack
    FREQ_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    DEFAULT_CONFIG, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    BYPASS_ALERT_ANSWER, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    RESERVED, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_PILOTS, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    GRANTED_MODE, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    FRAME_OFFSET, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    BAND_CLASS, bit,count=5,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),indent=2,pos=none
    CDMA_FREQ, bit,count=11,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),indent=2,pos=none
    PILOT_Rec, record,type=ECAM Pilot Rec,size=(NUM_PILOTS + 1),maxsize=20,indent=2,exist=GBL_PREV > 5
    FOR_FCH_RC, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    REV_FCH_RC, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_INIT_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_SUBCHAN_GAIN, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    RLGAIN_ADJ, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_FER, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_MIN_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_MAX_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    REV_FCH_GATING_MODE, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_PWR_CNTL_DELAY_INCL, bit,count=1,exist=((REV_FCH_GATING_MODE == 1)) && (GBL_PREV > 5),indent=2,pos=none
    REV_PWR_CNTL_DELAY, bit,count=2,exist=((REV_FCH_GATING_MODE == 1 && REV_PWR_CNTL_DELAY_INCL!=0)) && (GBL_PREV > 5),indent=2,pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, GEMECAM Rec 1 [1] Rsp, BitPack
    RESPOND, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FREQ_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    NUM_PILOTS, bit,count=6,indent=2,exist=GBL_PREV > 5,pos=none
    Rec, record,maxsize=63,size=NUM_PILOTS+1,type=ECAM Pilot PN Rec,indent=2,exist=GBL_PREV > 5
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, GEMECAM Rec 4 [4] Rsp, BitPack
    FREQ_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    BYPASS_ALERT_ANSWER, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    GRANTED_MODE, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    SR_ID_RESTORE, bit,count=3,indent=2,exist=((GBL_PREV>8 && GRANTED_MODE==3)) && (GBL_PREV > 5),pos=none
    DEFAULT_CONFIG, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_RC, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    REV_RC, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    FRAME_OFFSET, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_SUBCHAN_GAIN, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    RLGAIN_ADJ, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_PILOTS, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    CH_Rec, record,type=ECAM CH Rec,maxsize=1,indent=2,exist=GBL_PREV > 5
    REV_FCH_GATING_MODE, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_PWR_CNTL_DELAY_INCL, bit,count=1,indent=2,exist=((REV_FCH_GATING_MODE == 1)) && (GBL_PREV > 5),pos=none
    REV_PWR_CNTL_DELAY, bit,count=2,indent=2,exist=((REV_FCH_GATING_MODE == 1 && REV_PWR_CNTL_DELAY_INCL==1)) && (GBL_PREV > 5),pos=none
    RESERVED, bit,count=-8,indent=2,pos=none
End

Begin Message, PC - General Extension Msg Rec PC - MEID Extended Channel Assignment Rsp, BitPack
    ECAM_Rec, record,type=GEMMECAM Rec,maxsize=10,size=end,minbytes=2,indent=2,exist=(GBL_PREV > 5)
    Data, array,type=uint8,maxsize=100,size=end,columns=60,indent=2,exist=!(GBL_PREV > 5)
End

Begin Record, GEMMECAM Rec, BitPack
    ASSIGN_MODE, bit,count=3,base=enum:MECAM Assign Mode Enum,indent=2,exist=GBL_PREV > 5,pos=none
    RESERVED2, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    Rec, union,enum=ASSIGN_MODE,indent=2,exist=GBL_PREV > 5
End

Begin Message, GEMMECAM Rec 1 [1] Rsp, BitPack
    RESPOND, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FREQ_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    NUM_PILOTS, bit,count=6,indent=2,exist=GBL_PREV > 5,pos=none
    Rec, record,maxsize=63,size=NUM_PILOTS+1,type=ECAM Pilot PN Rec,indent=2,exist=GBL_PREV > 5
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, GEMMECAM Rec 4 [4] Rsp, BitPack
    FREQ_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=((FREQ_INCL == 1)) && (GBL_PREV > 5),pos=none
    BYPASS_ALERT_ANSWER, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    GRANTED_MODE, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    DEFAULT_CONFIG, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_RC, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    REV_RC, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    FRAME_OFFSET, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_SUBCHAN_GAIN, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    RLGAIN_ADJ, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_PILOTS, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    CH_Rec, record,type=ECAM CH Rec,maxsize=1,indent=2,exist=GBL_PREV > 5
    REV_FCH_GATING_MODE, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_PWR_CNTL_DELAY_INCL, bit,count=1,indent=2,exist=((REV_FCH_GATING_MODE == 1)) && (GBL_PREV > 5),pos=none
    REV_PWR_CNTL_DELAY, bit,count=2,indent=2,exist=((REV_FCH_GATING_MODE == 1)) && (GBL_PREV > 5),pos=none
    RESERVED_BLOB, bit,count=(ENCRYPT_MODE == 2)?6:3,indent=2,exist=GBL_PREV > 5,pos=none
    PLCM_TYPE_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    PLCM_TYPE, bit,count=4,indent=2,exist=((PLCM_TYPE_INCL == 1)) && (GBL_PREV > 5),pos=none
    PLCM_39, bit,count=39,indent=2,exist=((PLCM_TYPE == 1)) && (GBL_PREV > 5),base=16,pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, CP Spy CP PE ENG_LAYER2_TR 13 15 Rsp, PrintOnly, Bitpack, TruncateBits = 30
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Msg Length, bit,count=8,pos=none
    Rec, record,, type=Sync Message Record, maxsize=1
End

Begin Record, Sync Message Record, PrintOnly, Bitpack, OTTSName=CMsgSync
    Msg Type, bit, count=8,indent=1,pos=none
    P Rev, bit, count=8,globalvar=GBL_PREV,indent=1,pos=none
    Min P Rev, bit, count=8,indent=1,pos=none
    Sid, bit, count=15,indent=1,pos=none
    Nid, bit, count=16,indent=1,pos=none
    Pilot PN, bit, count=9,indent=1,pos=none
    LC State, bit, count=42,base=16,indent=1,pos=none
    System Time, bit, count=36,indent=1,base=16,pos=none
    LP Sec, bit, count=8,base=16,indent=1,pos=none
    LTM Off, bit, count=6,indent=1,pos=none
    Daylt, bit, count=1,indent=1,pos=none
    Prat, bit, count=2,indent=1,pos=none
    CDMA Freq, bit, count=11,exist=GBL_PREV>3,indent=1,pos=none
    Ext CDMA Freq, bit, count=11,exist=GBL_PREV>5,indent=1,pos=none
    SR1_BCCH_NON_TD_INCL, bit, count=1,indent=1,exist=(GBL_PREV >6),pos=none
    SR1_NON_TD_FREQ_INCL, bit, count=1,indent=1,exist=((GBL_PREV >6)) && ((SR1_BCCH_NON_TD_INCL == 1)),pos=none
    SR1_CDMA_FREQ_NON_TD, bit, count=11,indent=1,exist=((SR1_NON_TD_FREQ_INCL==1)) && (((GBL_PREV >6)) && ((SR1_BCCH_NON_TD_INCL == 1))),pos=none
    SR1_BRAT_NON_TD, bit, count=2,indent=1,exist=((GBL_PREV >6)) && ((SR1_BCCH_NON_TD_INCL == 1)),pos=none
    SR1_CRAT_NON_TD, bit, count=1,indent=1,exist=((GBL_PREV >6)) && ((SR1_BCCH_NON_TD_INCL == 1)),pos=none
    SR1_BCCH_CODE_CHAN_NON_TD, bit, count=6,indent=1,exist=((GBL_PREV >6)) && ((SR1_BCCH_NON_TD_INCL == 1)),pos=none
    SR1_TD_INCL, bit, count=1,indent=1,exist=(GBL_PREV >6),pos=none
    SR1_CDMA_FREQ_TD, bit, count=11,indent=1,exist=((GBL_PREV >6)) && ((SR1_TD_INCL == 1)),pos=none
    SR1_BRAT_TD, bit, count=2,indent=1,exist=((GBL_PREV >6)) && ((SR1_TD_INCL == 1)),pos=none
    SR1_CRAT_TD, bit, count=1,indent=1,exist=((GBL_PREV >6)) && ((SR1_TD_INCL == 1)),pos=none
    SR1_BCCH_CODE_CHAN_TD, bit, count=6,indent=1,exist=((GBL_PREV >6)) && ((SR1_TD_INCL == 1)),pos=none
    SR1_TD_MODE, bit, count=2,indent=1,base=enum:0 OTD/1 STS,exist=((GBL_PREV >6)) && ((SR1_TD_INCL == 1)),pos=none
    SR1_TD_POWER_LEVEL, bit, count=2,indent=1,base=enum:0 dB9/1 dB6/2 dB3/3 Same,exist=((GBL_PREV >6)) && ((SR1_TD_INCL == 1)),pos=none
    SR3_INCL, bit, count=1,indent=1,exist=(GBL_PREV >6),pos=none
    SR3_CENTER_FREQ_INCL, bit, count=1,indent=1,exist=((GBL_PREV >6)) && ((SR3_INCL == 1)),pos=none
    SR3_CENTER_FREQ, bit, count=11,indent=1,exist=((SR3_CENTER_FREQ_INCL == 1)) && (((GBL_PREV >6)) && ((SR3_INCL == 1))),pos=none
    SR3_BRAT, bit, count=2,indent=1,exist=((GBL_PREV >6)) && ((SR3_INCL == 1)),pos=none
    SR3_BCCH_CODE_CHAN, bit, count=7,indent=1,exist=((GBL_PREV >6)) && ((SR3_INCL == 1)),pos=none
    SR3_PRIMARY_PILOT, bit, count=2,indent=1,exist=((GBL_PREV >6)) && ((SR3_INCL == 1)),pos=none
    SR3_PILOT_POWER1, bit, count=3,indent=1,exist=((GBL_PREV >6)) && ((SR3_INCL == 1)),pos=none
    SR3_PILOT_POWER2, bit, count=3,indent=1,exist=((GBL_PREV >6)) && ((SR3_INCL == 1)),pos=none
    DS_INCL, bit, count=1,indent=1,exist=(GBL_PREV >6),pos=none
    DS_BLOB, bit, count=24,indent=1,exist=((DS_INCL == 1)) && ((GBL_PREV >6)),pos=none
    PDU_PADDING, bit,count=-2,indent=1,pos=none
End

Begin Message, CP Spy CP PE ENG_LAYER2_TR 13 57 Rsp, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PREV, uint8, globalvar=GBL_PREV
    Length, uint8
    Rec, record, type=FOR Traffic Msg Rec, maxsize = 1
End

Begin Record, FOR Traffic Msg Rec, BitPack, TruncateBits=16, OTTSName=CMsgFwdTraffic
    >>> Msg Id, uint8, indent = 1, base=enum:FOR Traffic Msg Enum
    ACK_SEQ, bit, count=3,indent=2,pos=none
    MSG_SEQ, bit, count=3,indent=2,pos=none
    ACK_REQ, bit, count=1,indent=2,pos=none
    ENCRYPTION, bit,count=2,indent=2,pos=none
    Integrity_Rec, record, type = dsch Message Integrity Rec, maxsize=1, exist=(GBL_PREV > 8)
    ExtEncryption_Rec, record,type=f-dsch Ext-Encryption Rec,maxsize=1,exist=((ENCRYPTION == 3)) && ((GBL_PREV > 6))
    Msg, union, enum=>>> Msg Id
    PDU_PADDING, bit, count=-8,indent=2,pos=none
    MACI, bit,count=32,indent=2,exist=(GBL_PREV > 8 && (Integrity_Rec\MACI_INCL == 1)),pos=none
End

Begin record, dsch Message Integrity Rec, BitPack, OTTSName=CMsgRdschIntegrity
    MACI_INCL, bit,count=1,indent=2,pos=none
    RANDC, bit,count=8,indent=2,exist=(MACI_INCL == 1),pos=none
    SDU_KEY_ID, bit,count=2,indent=2,exist=(MACI_INCL == 1),pos=none
    SDU_INTEGRITY_ALGO, bit,count=3,indent=2,exist=(MACI_INCL == 1),pos=none
    SDU_SSEQ_OR_SSEQH, bit,count=1,indent=2,exist=(MACI_INCL == 1),pos=none
    SDU_SSEQ, bit,count=8,indent=2,exist=((SDU_SSEQ_OR_SSEQH == 0)) && ((MACI_INCL == 1)),pos=none
    SDU_SSEQ_H, bit,count=24,indent=2,exist=((SDU_SSEQ_OR_SSEQH == 1)) && ((MACI_INCL == 1)),pos=none
End

Begin record, f-dsch Ext-Encryption Rec, BitPack, OTTSName=CMsgFdschExtEncryption
    SDU_ENCRYPT_MODE, bit, count=3,indent=2,pos=none
    ENC_SEQ, bit,count=8,indent=2,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Order Rsp, BitPack, OTTSName=CMsgFtcOrder
    MsgRec, record, type = ORDRM Rec, maxsize=1
End

Begin Record, ORDRM Rec, BitPack
    USE_TIME, bit,count=1,indent=2,pos=none
    ACTION_TIME, bit,count=6,indent=2,pos=none
    ORDER_Rec, record, type = FOR Order Rec, maxsize = 1
    CON_REF_INCL, bit,count=1,indent=2,exist=((ORDER_Rec\ORDER==25||ORDER_Rec\ORDER==10)) && (GBL_PREV>6),pos=none
    CON_REF, bit,count=8,indent=2,exist=(((ORDER_Rec\ORDER==25||ORDER_Rec\ORDER==10) && CON_REF_INCL == 1)) && (GBL_PREV>6),pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Authentication Challenge Rsp, BitPack, OTTSName=CMsgFtcAuthenticationChallenge
    MsgRec, record, type = AUCM Rec, maxsize=1
End

Begin Record, AUCM Rec, BitPack
    RANDU, bit,count=24,indent=2,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Alert With Information Rsp, BitPack, OTTSName=CMsgFtcAlertWithInformation
    INFO_Rec, record, type=FOR Information Rec, maxsize=10, size=end, minbytes=4
End

Begin Message, FOR Traffic Msg Rec FTC - Data Burst Rsp, BitPack, OTTSName=CMsgFtcDataBurst
    BURST_Rec, record, type = FOR Burst Type Rec, maxsize = 1
End

Begin Message, FOR Traffic Msg Rec FTC - Obsolete Handoff Direction Rsp, BitPack, OTTSName=CMsgFtcObsoleteHandoffDirection
    Data, array, type=uint8, maxsize=100, size=end
End

Begin Message, FOR Traffic Msg Rec FTC - Analog Handoff Direction Rsp, BitPack, OTTSName=CMsgFtcAnalogHandoffDirection
    USE_TIME, bit, count=1,indent=2,pos=none
    ACTION_TIME, bit, count=6,indent=2,pos=none
    SID, bit, count=15,indent=2,exist=GBL_PREV>1,pos=none
    AID, bit, count=15,indent=2,exist=GBL_PREV==1,pos=none
    VMAC, bit, count=3,indent=2,pos=none
    ANALOG_CHAN, bit, count=11,indent=2,pos=none
    SCC, bit, count=2,indent=2,pos=none
    MEM, bit, count=1,indent=2,pos=none
    AN_CHAN_TYPE, bit, count=2,indent=2,pos=none
    DSCC_MSB, bit, count=1,indent=2,pos=none
    BAND_CLASS, bit, count=5,indent=2,pos=none
    CON_REF_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    CON_REF, bit,count=8,indent=2,exist=((CON_REF_INCL == 1)) && (GBL_PREV > 6),pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - In-Traffic System Parameters Rsp, BitPack, OTTSName=CMsgFtcInTrafficSystemParameters
    MsgRec, record, type = ITSPM Rec, maxsize=1
End

Begin Record, ITSPM Rec, BitPack
    SID, bit,count=15,indent=2,pos=none
    NID, bit,count=16,indent=2,pos=none
    SRCH_WIN_A, bit,count=4,indent=2,pos=none
    SRCH_WIN_N, bit,count=4,indent=2,pos=none
    SRCH_WIN_R, bit,count=4,indent=2,pos=none
    T_ADD, bit,count=6,indent=2,pos=none
    T_DROP, bit,count=6,indent=2,pos=none
    T_COMP, bit,count=4,indent=2,pos=none
    T_TDROP, bit,count=4,indent=2,pos=none
    NGHBR_MAX_AGE, bit,count=4,indent=2,pos=none
    P_REV, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    SOFT_SLOPE, bit,count=6,indent=2,exist=GBL_PREV > 5,pos=none
    ADD_INTERCEPT, bit,count=6,indent=2,exist=GBL_PREV > 5,pos=none
    DROP_INTERCEPT, bit,count=6,indent=2,exist=GBL_PREV > 5,pos=none
    PACKET_ZONE_ID, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    EXTENSION, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    T_MULCHAN, bit,count=3,indent=2,exist=((EXTENSION == 1)) && (GBL_PREV > 5),pos=none
    BEGIN_PREAMBLE, bit,count=3,indent=2,exist=((EXTENSION == 1)) && (GBL_PREV > 5),pos=none
    RESUME_PREAMBLE, bit,count=3,indent=2,exist=((EXTENSION == 1)) && (GBL_PREV > 5),pos=none
    T_SLOTTED_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    T_SLOTTED, bit,count=8,indent=2,exist=((T_SLOTTED_INCL == 1)) && (GBL_PREV > 5),pos=none
    ENC_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    SIG_ENCRYPT_SUP, record,type=csch SIG_ENCRYPT_SUP Rec,maxsize=1,exist=((ENC_SUPPORTED == 1)) && ((GBL_PREV > 5) && (GBL_PREV > 6))
    UI_ENCRYPT_SUP, bit,count=8,indent=2,exist=((ENC_SUPPORTED == 1)) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    CS_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    T_TDROP_RANGE_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    T_TDROP_RANGE, bit,count=4,indent=2,exist=((T_TDROP_RANGE_INCL == 1)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),pos=none
    FOR_PDCH_SUPPORTED, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Neighbor List Update Rsp, BitPack, OTTSName=CMsgFtcNeighborListUpdate
    MsgRec, record, type = NLUM Rec, maxsize=1
End

Begin Record, NLUM Rec, BitPack
    PILOT_INC, bit,count=4,indent=2,pos=none
    Rec, record, type=NLUM PN Rec, maxsize=20, size=end, minbytes=4
End

Begin Record, NLUM PN Rec, BitPack, OTTSName=CMsgNlumPn
    NGHBR_PN, bit,count=9,indent=2,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Send Burst DTMF Rsp, BitPack, OTTSName=CMsgFtcSendBurstDTMF
    MsgRec, record, type = BDTMFM Rec, maxsize=1
End

Begin Record, BDTMFM Rec, BitPack
    NUM_DIGITS, bit,count=8,indent=2,pos=none
    DTMF_ON_LENGTH, bit,count=3,indent=2,pos=none
    DTMF_OFF_LENGTH, bit,count=3,indent=2,pos=none
    Rec, record, type= BDTMFM Digit Rec, maxsize=60, size=NUM_DIGITS
    CON_REF_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    CON_REF, bit,count=8,indent=2,exist=((CON_REF_INCL == 1)) && (GBL_PREV > 6),pos=none
End

Begin Record, BDTMFM Digit Rec, BitPack, OTTSName=CMsgDtmfDigit
    GIGITi, bit,count=4,indent=2,base=enum:DTMF Enum,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Power Control Parameters Rsp, BitPack, OTTSName=CMsgFtcPowerControlParameters
    MsgRec, record, type = PCNPM Rec, maxsize=1
End

Begin Record, PCNPM Rec, BitPack
    PWR_REP_THRESH, bit,count=5,indent=2,pos=none
    PWR_REP_FRAMES, bit,count=4,indent=2,pos=none
    PWR_THRESH_ENABLE, bit,count=1,indent=2,pos=none
    PWR_PERIOD_ENABLE, bit,count=1,indent=2,pos=none
    PWR_REP_DELAY, bit,count=5,indent=2,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Retrieve Parameters Rsp, BitPack, OTTSName=CMsgFtcRetrieveParameters
    PARAMETER_ID, array, type=uint16, maxsize=128, size=end, indent=2
End

Begin Message, FOR Traffic Msg Rec FTC - Set Parameters Rsp, BitPack, OTTSName=CMsgFtcSetParameters
    PARAMETER_Rec, record, type = Parameter Rec, maxsize = 100, size = end
End

Begin Record, Parameter Rec, BitPack, OTTSName=CMsgParameter
    PARAMETER_ID, bit,count=16,base=enum:Parameter ID Enum,indent=2,pos=none
    PARAMETER_LEN, bit,count=10,indent=2,pos=none
    PARAMETER, array,type=bit,count=1,maxsize=540,size=(PARAMETER_LEN + 1),indent=2,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - SSD Update Rsp, BitPack, OTTSName=CMsgFtcSSDUpdate
    RANDSSD, bit,count=56,indent=2,base=16,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Flash With Information Rsp, BitPack, OTTSName=CMsgFtcFlashWithInformation
    INFO_Rec, record, type=FOR Information Rec, maxsize=20, size=end, minbytes=4
End

Begin Message, FOR Traffic Msg Rec FTC - Mobile Station Registered Rsp, BitPack, OTTSName=CMsgFtcMobileStationRegistered
    MsgRec, record, type = MSRM Rec, maxsize=1
End

Begin Record, MSRM Rec, BitPack
    SID, bit,count=15,indent=2,pos=none
    NID, bit,count=16,indent=2,pos=none
    REG_ZONE, bit,count=12,indent=2,pos=none
    TOTAL_ZONES, bit,count=3,indent=2,pos=none
    ZONE_TIMER, bit,count=3,indent=2,base=enum:0 [1 sec]/1 [2 sec]/2 [5 sec]/3 [10 sec]/4 [20 sec]/5 [30 sec]/6 [45 sec]/7 [60 sec],pos=none
    MULT_SIDS, bit,count=1,indent=2,pos=none
    MULT_NIDS, bit,count=(GBL_PREV == 1) ? 2:1,indent=2,pos=none
    BASE_LAT, bit,count=22,indent=2,pos=none
    BASE_LONG, bit,count=23,indent=2,pos=none
    REG_DIST, bit,count=11,indent=2,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Status Request Rsp, BitPack, OTTSName=CMsgFtcStatusRequest
    MsgRec, record, type = STRQM Rec, maxsize=1
End

Begin Record, STRQM Rec, BitPack
    QUAL_Rec, record, type= Qual Info Rec, maxsize=1
    NUM_FIELDS, bit,count=4,indent=2,pos=none
    RECORD_TYPE, record, type = STRQM Record Type Rec, size=NUM_FIELDS, maxsize=15
End

Begin Message, FOR Traffic Msg Rec FTC - Extended Handoff Direction Rsp, BitPack, OTTSName=CMsgFtcExtendedHandoffDirection
    MsgRec, record, type = EHDM Rec, maxsize=1
End

Begin Record, EHDM Rec, BitPack
    USE_TIME, bit,count=1,indent=2,pos=none
    ACTION_TIME, bit,count=6,indent=2,pos=none
    HDM_SEQ, bit,count=2,indent=2,pos=none
    SEARCH_INCLUDED, bit,count=1,indent=2,pos=none
    SRCH_WIN_A, bit,count=4,indent=2,exist=(SEARCH_INCLUDED == 1),pos=none
    T_ADD, bit,count=6,indent=2,exist=(SEARCH_INCLUDED == 1),pos=none
    T_DROP, bit,count=6,indent=2,exist=(SEARCH_INCLUDED == 1),pos=none
    T_COMP, bit,count=4,indent=2,exist=(SEARCH_INCLUDED == 1),pos=none
    T_TDROP, bit,count=4,indent=2,exist=(SEARCH_INCLUDED == 1),pos=none
    HARD_INCLUDED, bit,count=1,indent=2,pos=none
    FRAME_OFFSET, bit,count=4,indent=2,exist=(HARD_INCLUDED == 1),pos=none
    PRIVATE_LCM, bit,count=1,indent=2,exist=(HARD_INCLUDED == 1),pos=none
    RESET_L2, bit,count=1,indent=2,exist=(HARD_INCLUDED == 1),pos=none
    RESET_FPC, bit,count=1,indent=2,exist=(HARD_INCLUDED == 1),pos=none
    SERV_NEG_TYPE, bit,count=1,indent=2,exist=(HARD_INCLUDED == 1),pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,exist=(HARD_INCLUDED == 1),pos=none
    NOM_PWR_EXT, bit,count=1,indent=2,exist=(HARD_INCLUDED == 1),pos=none
    NOM_PWR, bit,count=4,indent=2,exist=(HARD_INCLUDED == 1),pos=none
    NUM_PREAMBLE, bit,count=3,indent=2,exist=(HARD_INCLUDED == 1),pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=(HARD_INCLUDED == 1),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=(HARD_INCLUDED == 1),pos=none
    ADD_LENGTH, bit,count=3,indent=2,pos=none
    P_REV, array, type=uint8, maxsize=8, size=ADD_LENGTH, indent = 2, exist = (ADD_LENGTH != 0)
    PILOT_Rec, record, type = EHDM Pilot Rec, maxsize = 100, size = end
End

Begin Record, EHDM Pilot Rec, BitPack, OTTSName=CMsgEhdmPilotRec
    PILOT_PN, bit,count=9,indent=2,pos=none
    PWR_COMB_IND, bit,count=1,indent=2,pos=none
    CODE_CHAN, bit,count=8,indent=2,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Service Request Rsp, BitPack, OTTSName=CMsgFtcServiceRequest
    MsgRec, record, type = SRQM Rec, maxsize=1
End

Begin Record, SRQM Rec, BitPack
    SERV_REQ_SEQ, bit,count=3,indent=2,pos=none
    REQ_PURPOSE, bit,count=4,indent=2,pos=none
    Rec, record,  type=FOR Information Rec, maxsize=1, size=end, minbytes=4, exist=(REQ_PURPOSE==2)
End

Begin Message, FOR Traffic Msg Rec FTC - Service Response Rsp, BitPack, OTTSName=CMsgFtcServiceResponse
    MsgRec, record, type = SRPM Rec, maxsize=1
End

Begin Record, SRPM Rec, BitPack
    SERV_REQ_SEQ, bit,count=3,indent=2,pos=none
    RESP_PURPOSE, bit,count=4,indent=2,pos=none
    Rec, record,  type=FOR Information Rec, maxsize=1, size=end, minbytes=4, exist=(RESP_PURPOSE==2)
End

Begin Message, FOR Traffic Msg Rec FTC - Service Connect Rsp, BitPack, OTTSName=CMsgFtcServiceConnect
    MsgRec, record, type = SCM Rec, maxsize=1
End

Begin Record, SCM Rec, BitPack
    USE_TIME, bit,count=1,indent=2,pos=none
    ACTION_TIME, bit,count=6,indent=2,pos=none
    SERV_CON_SEQ, bit,count=3,indent=2,pos=none
    RESERVED, bit,count=(GBL_PREV < 7)?5:2,indent=2,pos=none
    USE_OLD_SERV_CONFIG, bit,count=2,indent=2,exist=GBL_PREV > 6,pos=none
    SR_ID, bit,count=3,indent=2,exist=((USE_OLD_SERV_CONFIG==3 && GBL_PREV>8)) && (GBL_PREV > 6),pos=none
    SYNC_ID_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    SYNC_ID_LEN, bit,count=4,indent=2,exist=((SYNC_ID_INCL == 1)) && (GBL_PREV > 6),pos=none
    SYNC_ID, array,type=uint8,maxsize=20,size=SYNC_ID_LEN,indent=2,exist=((SYNC_ID_INCL==1)) && (GBL_PREV > 6)
    Ser_Conf, record,type=FOR Information Rec,maxsize=1,exist=((USE_OLD_SERV_CONFIG!=1 && USE_OLD_SERV_CONFIG!=3)) && (GBL_PREV > 6)
    NNSer_Conf, record,type=FOR Information Rec,maxsize=1,exist=((USE_OLD_SERV_CONFIG!=1 && USE_OLD_SERV_CONFIG!=3)) && (GBL_PREV > 6)
    Ser_Config, record,type=FOR Information Rec,maxsize=1,exist=!(GBL_PREV > 6)
    NNSer_Config, record,type=FOR Information Rec,maxsize=1,exist=((GBL_PREV >5)) && (!(GBL_PREV > 6))
    CC_INFO_INCL, bit,count=1,indent=2,exist=((USE_OLD_SERV_CONFIG == 0)) && (GBL_PREV > 6),pos=none
    NUM_CALLS_ASSIGN, bit,count=8,indent=2,exist=((USE_OLD_SERV_CONFIG==0 && CC_INFO_INCL==1)) && (GBL_PREV > 6),pos=none
    Call_Rec, record,type=Call Assign Rec,maxsize=260,size=NUM_CALLS_ASSIGN,exist=((USE_OLD_SERV_CONFIG==0 && CC_INFO_INCL==1)) && (GBL_PREV > 6)
    USE_ESN_BASED_PLCM, bit,count=1,indent=2,exist=(GBL_PREV > 6) && (GBL_PREV > 8),pos=none
End

Begin Record, Call Assign Rec, BitPack, OTTSName = CMsgSCMCallAssignRec
    CON_REF, bit,count=8,indent=2,exist=GBL_PREV > 6,pos=none
    RESPONSE_IND, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    TAG, bit,count=4,indent=2,exist=((RESPONSE_IND!=0)) && (GBL_PREV > 6),pos=none
    BYPASS_ALERT_ANSWER, bit,count=1,indent=2,exist=((RESPONSE_IND!=1)) && (GBL_PREV > 6),pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Service Option Control Rsp, BitPack, OTTSName=CMsgFtcServiceOptionControl
    MsgRec, record, type = SOCM Rec, maxsize=1
End

Begin Record, SOCM Rec, BitPack
    USE_TIME, bit,count=1,indent=2,pos=none
    ACTION_TIME, bit,count=6,indent=2,pos=none
    CON_REF, bit,count=8,indent=2,pos=none
    SERVICE_OPTION, bit,count=16,indent=2,pos=none
    EVRC_CtrlRec, record, type = EVRC Control Rec, maxsize=1, exist = (SERVICE_OPTION==3 || SERVICE_OPTION==68 || SERVICE_OPTION==70 || SERVICE_OPTION==73)
    PacketData_CtrlRec, record, type = HSPD Control Rec, maxsize=1, exist = (SERVICE_OPTION==33)
    Other_CtrlRec, record, type = Generic SO Control Rec, maxsize=1, exist = (SERVICE_OPTION!=3 && SERVICE_OPTION!=68 && SERVICE_OPTION!=70 && SERVICE_OPTION!=73 && SERVICE_OPTION!=33)
End

Begin Record, EVRC Control Rec, BitPack
    CTL_REC_LEN, bit,count=8,indent=2,pos=none
    RATE_REDUC, bit,count=3,indent=2,pos=none
    RESERVED, bit,count=3,indent=2,pos=none
    MOBILE_TO_MOBILE, bit,count=1,indent=2,pos=none
    INIT_CODEC, bit,count=1,indent=2,pos=none
End

Begin Record, HSPD Control Rec, BitPack
    CTL_REC_LEN, bit,count=8,indent=2,pos=none
    DORM_CNTL, bit,count=3,indent=2,pos=none
    RESERVED, bit,count=2,indent=2,pos=none
    FIELD_TYPE, bit,count=3,indent=2,pos=none
    DORM_TIME, bit,count=8,indent=2,exist=(DORM_CNTL == 1 || DORM_CNTL == 2),pos=none
End

Begin Record, Generic SO Control Rec, BitPack
    CTL_REC_LEN, bit,count=8,indent=2,pos=none
    CTL_Rec, array, type=uint8, maxsize=100, size=CTL_REC_LEN
End

Begin Message, FOR Traffic Msg Rec FTC - TMSI Assignment Rsp, BitPack, OTTSName=CMsgFtcTMSIAssignment
    MsgRec, record, type = TASM Rec, maxsize=1
End

Begin record, TASM Rec, BitPack
    TMSI_ZONE_LEN, bit,count=4,indent=2,pos=none
    TMSI_ZONE, array,    type=uint8, maxsize=15, size=TMSI_ZONE_LEN, indent=2
    TMSI_CODE, bit,count=32,indent=2,pos=none
    TMSI_EXP_TIME, bit,count=24,indent=2,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Service Redirection Rsp, BitPack, OTTSName=CMsgFtcServiceRedirection
    MsgRec, record, type = SRDM Rec, maxsize=1
End

Begin Record, SRDM Rec, BitPack
    RETURN_IF_FAIL, bit,count=1,indent=2,pos=none
    DELETE_TMSI, bit,count=1,indent=2,pos=none
    REDIRECT_TYPE, bit,count=1,indent=2,pos=none
    REDIRECT_Rec, record, type = Global Service Redirection Rec, maxsize = 100, size = end
    RESERVED, bit,count=4,indent=2,exist=(GBL_PREV == 5),pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Supplemental Channel Assignment Rsp, BitPack, OTTSName=CMsgFtcSupplementalChannelAssignment
    MsgRec, record, type = SCAM Rec, maxsize=1
End

Begin Record, SCAM Rec, BitPack
    USE_RETRY_DELAY, bit,count=1,indent=2,pos=none
    RETRY_DELAY, bit,count=8,indent=2,exist=(USE_RETRY_DELAY == 1),pos=none
    REV_INCLUDED, bit,count=1,indent=2,pos=none
    REV_Rec, record, type = SCAM Rev Rec, maxsize = 1, exist = (REV_INCLUDED == 1)
    FOR_INCLUDED, bit,count=1,indent=2,pos=none
    FOR_Rec, record, type = SCAM For Rec, maxsize = 1, exist = (FOR_INCLUDED == 1)
End

Begin Record, SCAM Rev Rec, BitPack, OTTSName=CMsgSCAMRev
    REV_DTX_DURATION, bit,count=4,indent=2,pos=none
    EXPL_REV_START_TIME, bit,count=1,indent=2,pos=none
    REV_START_TIME, bit,count=6,indent=2,exist=(EXPL_REV_START_TIME == 1),pos=none
    USE_REV_DURATION, bit,count=1,indent=2,pos=none
    REV_DURATION, bit,count=8,indent=2,exist=(USE_REV_DURATION == 1),pos=none
    USE_REV_HDM_SEQ, bit,count=1,indent=2,pos=none
    REV_LINKED_HDM_SEQ, bit,count=2,indent=2,exist=(USE_REV_HDM_SEQ == 1),pos=none
    NUM_REV_CODES, bit,count=3,indent=2,pos=none
    USE_T_ADD_ABORT, bit,count=1,indent=2,pos=none
    USE_SCRM_SEQ_NUM, bit,count=1,indent=2,pos=none
    SCRM_SEQ_NUM, bit,count=4,indent=2,exist=(USE_SCRM_SEQ_NUM == 1),pos=none
    REV_PARMS_INCLUDED, bit,count=1,indent=2,pos=none
    T_MULCHAN, bit,count=3,indent=2,exist=(REV_PARMS_INCLUDED == 1),pos=none
    BEGIN_PREABMLE, bit,count=3,indent=2,exist=(REV_PARMS_INCLUDED == 1),pos=none
    RESUME_PREAMBLE, bit,count=3,indent=2,exist=(REV_PARMS_INCLUDED == 1),pos=none
End

Begin Record, SCAM For Rec, BitPack, OTTSName=CMsgSCAMFor
    FOR_SUP_CONFIG, bit,count=2,indent=2,pos=none
    EXPL_FOR_START_TIME, bit,count=1,indent=2,exist=(FOR_SUP_CONFIG == 1 || FOR_SUP_CONFIG == 3),pos=none
    FOR_START_TIME, bit,count=6,indent=2,exist=(EXPL_FOR_START_TIME == 1),pos=none
    USE_FOR_DURATION, bit,count=1,indent=2,pos=none
    FOR_DURATION, bit,count=8,indent=2,exist=(USE_FOR_DURATION == 1),pos=none
    USE_FOR_HDM_SEQ, bit,count=1,indent=2,exist=(FOR_SUP_CONFIG == 1 || FOR_SUP_CONFIG == 3),pos=none
    FOR_LINKED_HDM_SEQ, bit,count=2,indent=2,exist=(USE_FOR_HDM_SEQ == 1),pos=none
    NUM_SUP_PILOTS, bit,count=3,indent=2,exist=(FOR_SUP_CONFIG == 2 || FOR_SUP_CONFIG == 3),pos=none
    NUM_FOR_SUP, bit,count=3,indent=2,exist=(FOR_SUP_CONFIG == 2 || FOR_SUP_CONFIG == 3),pos=none
    Rec, record, type = SCAM Pilot Rec, maxsize = 100, size = NUM_SUP_PILOTS, exist = (FOR_SUP_CONFIG == 2 || FOR_SUP_CONFIG == 3)
End

Begin Record, SCAM Pilot Rec, BitPack, OTTSName=CMsgSCAMPilot
    PILOT_PN, bit,count=9,indent=2,pos=none
    EXPL_CODE_CHAN, bit,count=1,indent=2,pos=none
    SUP_CODE_CHAN, array, type = uint8, maxsize = 100, size = ..\NUM_FOR_SUP, exist = (EXPL_CODE_CHAN == 1), indent = 2
    BASE_CODE_CHAN, bit,count=8,exist=(EXPL_CODE_CHAN == 0),indent=2,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Power Control Rsp, BitPack, OTTSName=CMsgFtcPowerControl
    MsgRec, record, type = PCNM Rec, maxsize=1
End

Begin Record, PCNM Rec, BitPack
    PWR_CNTL_STEP, bit,count=3,indent=2,pos=none
    USE_TIME, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    ACTION_TIME, bit,count=6,indent=2,exist=((USE_TIME == 1)) && (GBL_PREV >5),pos=none
    FPC_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    FPC_MODE, bit,count=3,indent=2,exist=((FPC_INCL == 1)) && (GBL_PREV >5),pos=none
    FPC_PRI_CHAN, bit,count=1,indent=2,exist=((FPC_INCL == 1)) && (GBL_PREV >5),pos=none
    FPC_OLPC_FCH_INCL, bit,count=1,indent=2,exist=((FPC_INCL == 1)) && (GBL_PREV >5),pos=none
    FPC_FCH_FER, bit,count=5,indent=2,exist=((FPC_OLPC_FCH_INCL == 1)) && (GBL_PREV >5),pos=none
    FPC_FCH_MIN_SETPT, bit,count=8,indent=2,exist=((FPC_OLPC_FCH_INCL == 1)) && (GBL_PREV >5),pos=none
    FPC_FCH_MAX_SETPT, bit,count=8,indent=2,exist=((FPC_OLPC_FCH_INCL == 1)) && (GBL_PREV >5),pos=none
    FPC_OLPC_DCCH_INCL, bit,count=1,indent=2,exist=((FPC_INCL == 1)) && (GBL_PREV >5),pos=none
    FPC_DCCH_FER, bit,count=5,indent=2,exist=((FPC_OLPC_DCCH_INCL == 1)) && (GBL_PREV >5),pos=none
    FPC_DCCH_MIN_SETPT, bit,count=8,indent=2,exist=((FPC_OLPC_DCCH_INCL == 1)) && (GBL_PREV >5),pos=none
    FPC_DCCH_MAX_SETPT, bit,count=8,indent=2,exist=((FPC_OLPC_DCCH_INCL == 1)) && (GBL_PREV >5),pos=none
    FPC_SEC_CHAN, bit,count=1,indent=2,exist=((FPC_INCL == 1) && (FPC_MODE==1 || FPC_MODE==2 || FPC_MODE==5 || FPC_MODE==6)) && (GBL_PREV >5),pos=none
    NUM_SUP, bit,count=2,indent=2,exist=((FPC_INCL == 1)) && (GBL_PREV >5),pos=none
    Rec1, record,type=PCNM SCH Rec,maxsize=3,size=NUM_SUP,exist=((FPC_INCL == 1)) && (GBL_PREV >5)
    FPC_THRESH_INCL, bit,count=1,indent=2,exist=((FPC_INCL == 1)) && (GBL_PREV >5),pos=none
    FPC_SETPT_THRESH, bit,count=8,indent=2,exist=((FPC_THRESH_INCL == 1)) && (GBL_PREV >5),pos=none
    FPC_THRESH_SCH_INCL, bit,count=1,indent=2,exist=((FPC_THRESH_INCL == 1)) && (GBL_PREV >5),pos=none
    FPC_SETPT_THRESH_SCH, bit,count=8,indent=2,exist=((FPC_THRESH_SCH_INCL == 1)) && (GBL_PREV >5),pos=none
    RPC_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    RPC_NUM_REC, bit,count=2,indent=2,exist=((RPC_INCL == 1)) && (GBL_PREV >5),pos=none
    Rec2, record,type=PCNM RPC Rec,maxsize=3,size=RPC_NUM_REC,exist=((RPC_INCL == 1)) && (GBL_PREV >5)
    Data, array,type=uint8,maxsize=100,size=end,indent=2,exist=GBL_PREV <=5
End

Begin Record, PCNM SCH Rec, BitPack, OTTSName=CMsgPCNMSCH
    SCH_ID, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    FPC_SCH_ER, bit,count=5,indent=2,exist=GBL_PREV >5,pos=none
    FPC_SCH_MIN_SETPT, bit,count=8,indent=2,exist=GBL_PREV >5,pos=none
    FPC_SCH_MAX_SETPT, bit,count=8,indent=2,exist=GBL_PREV >5,pos=none
End

Begin Record, PCNM RPC Rec, BitPack, OTTSName=CMsgPcnmRpc
    RPC_ADJ_REC_TYPE, bit,count=4,base=enum:PCNM RPC Type Enum,indent=2,exist=GBL_PREV >5,pos=none
    RPC_ADJ_REC_LEN, bit,count=5,indent=2,exist=GBL_PREV >5,pos=none
    Rec, union,enum=RPC_ADJ_REC_TYPE,consumebytes=RPC_ADJ_REC_LEN,exist=GBL_PREV >5
End

Begin Message, PCNM RPC Rec Adj Gain [0x0] Rsp, BitPack, OTTSName=CMsgPcnmRpcAdjGain
    FCH_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    FCP_CHAN_ADJ_GAIN, bit,count=8,indent=2,exist=((FCH_INCL == 1)) && (GBL_PREV >5),pos=none
    DCCH_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    DCCH_CHAN_ADJ_GAIN, bit,count=8,indent=2,exist=((DCCH_INCL == 1)) && (GBL_PREV >5),pos=none
    SCH0_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    SCH0_CHAN_ADJ_GAIN, bit,count=8,indent=2,exist=((SCH0_INCL == 1)) && (GBL_PREV >5),pos=none
    SCH1_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    SCH1_CHAN_ADJ_GAIN, bit,count=8,indent=2,exist=((SCH1_INCL == 1)) && (GBL_PREV >5),pos=none
    REV_ACKCH_INCL, bit,count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 8),pos=none
    REV_ACKCH_CHAN_ADJ_GAIN, bit,count=8,indent=2,exist=((REV_ACKCH_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 8)),pos=none
    REV_CQICH_INCL, bit,count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 8),pos=none
    REV_CQICH_CHAN_ADJ_GAIN, bit,count=8,indent=2,exist=((REV_CQICH_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 8)),pos=none
    RESERVED, bit,count=-8,indent=2,exist=((GBL_PREV > 5)) && (GBL_PREV >5),pos=none
End

Begin Message, PCNM RPC Rec Adj Gain For Basic Rates [0x01] Rsp, BitPack, OTTSName=CMsgPcnmRpcAdjGainForBasicRates
    RL_ATT_ADJ_GAIN_TYPE, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    RC3_RC5_20MS_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    RL_ATT_ADJ_GAIN_1500, bit,count=8,indent=2,exist=((RC3_RC5_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_2700, bit,count=8,indent=2,exist=((RC3_RC5_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_4800, bit,count=8,indent=2,exist=((RC3_RC5_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_9600, bit,count=8,indent=2,exist=((RC3_RC5_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RC4_RC6_20MS_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    RL_ATT_ADJ_GAIN_1800, bit,count=8,indent=2,exist=((RC4_RC6_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_3600, bit,count=8,indent=2,exist=((RC4_RC6_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_7200, bit,count=8,indent=2,exist=((RC4_RC6_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_14400, bit,count=8,indent=2,exist=((RC4_RC6_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    _5MS_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    NORM_ATT_GAIN_9600_5MS, bit,count=8,indent=2,exist=((_5MS_INCL == 1)) && ((GBL_PREV >5) && (GBL_PREV < 7)),pos=none
    RL_ATT_GAIN_9600_5MS, bit,count=8,indent=2,exist=((_5MS_INCL == 1)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RC3_RC5_40MS_INCL, bit,count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 6),pos=none
    RL_ATT_ADJ_GAIN_1350_40MS, bit,count=8,indent=2,exist=((RC3_RC5_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_2400_40MS, bit,count=8,indent=2,exist=((RC3_RC5_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_4800_40MS, bit,count=8,indent=2,exist=((RC3_RC5_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_9600_40MS, bit,count=8,indent=2,exist=((RC3_RC5_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RC4_RC6_40MS_INCL, bit,count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 6),pos=none
    RL_ATT_ADJ_GAIN_1800_40MS, bit,count=8,indent=2,exist=((RC4_RC6_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_3600_40MS, bit,count=8,indent=2,exist=((RC4_RC6_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_7200_40MS, bit,count=8,indent=2,exist=((RC4_RC6_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_14400_40MS, bit,count=8,indent=2,exist=((RC4_RC6_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RC3_RC5_80MS_INCL, bit,count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 6),pos=none
    RL_ATT_ADJ_GAIN_1200_80MS, bit,count=8,indent=2,exist=((RC3_RC5_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_2400_80MS, bit,count=8,indent=2,exist=((RC3_RC5_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_4800_80MS, bit,count=8,indent=2,exist=((RC3_RC5_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_9600_80MS, bit,count=8,indent=2,exist=((RC3_RC5_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RC4_RC6_80MS_INCL, bit,count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 6),pos=none
    RL_ATT_ADJ_GAIN_1800_80MS, bit,count=8,indent=2,exist=((RC4_RC6_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_3600_80MS, bit,count=8,indent=2,exist=((RC4_RC6_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_7200_80MS, bit,count=8,indent=2,exist=((RC4_RC6_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_14400_80MS, bit,count=8,indent=2,exist=((RC4_RC6_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV >5,pos=none
End

Begin Message, PCNM RPC Rec Adj Gain For High Rates [0x10] Rsp, BitPack, OTTSName=CMsgPcnmRpcAdjGainForHighRates
    CODE_TYPE, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    RL_ATT_ADJ_GAIN_TYPE, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    RC3_RC5_20MS_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    RL_ATT_ADJ_GAIN_19200, bit,count=8,indent=2,exist=((RC3_RC5_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_38400, bit,count=8,indent=2,exist=((RC3_RC5_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_76800, bit,count=8,indent=2,exist=((RC3_RC5_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_153600, bit,count=8,indent=2,exist=((RC3_RC5_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_307200, bit,count=8,indent=2,exist=((RC3_RC5_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_614400, bit,count=8,indent=2,exist=((RC3_RC5_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RC4_RC6_20MS_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    RL_ATT_ADJ_GAIN_28800, bit,count=8,indent=2,exist=((RC4_RC6_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_57600, bit,count=8,indent=2,exist=((RC4_RC6_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_115200, bit,count=8,indent=2,exist=((RC4_RC6_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_230400, bit,count=8,indent=2,exist=((RC4_RC6_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_460800, bit,count=8,indent=2,exist=((RC4_RC6_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RL_ATT_ADJ_GAIN_1036800, bit,count=8,indent=2,exist=((RC4_RC6_20MS_INCL == 1)) && (GBL_PREV >5),pos=none
    RC3_RC5_40MS_INCL, bit,count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 6),pos=none
    RL_ATT_ADJ_GAIN_19200_40MS, bit,count=8,indent=2,exist=((RC3_RC5_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_38400_40MS, bit,count=8,indent=2,exist=((RC3_RC5_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_76800_40MS, bit,count=8,indent=2,exist=((RC3_RC5_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_153600_40MS, bit,count=8,indent=2,exist=((RC3_RC5_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_307200_40MS, bit,count=8,indent=2,exist=((RC3_RC5_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RC4_RC6_40MS_INCL, bit,count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 6),pos=none
    RL_ATT_ADJ_GAIN_28800_40MS, bit,count=8,indent=2,exist=((RC4_RC6_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_57600_40MS, bit,count=8,indent=2,exist=((RC4_RC6_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_115200_40MS, bit,count=8,indent=2,exist=((RC4_RC6_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_230400_40MS, bit,count=8,indent=2,exist=((RC4_RC6_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_518400_40MS, bit,count=8,indent=2,exist=((RC4_RC6_40MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RC3_RC5_80MS_INCL, bit,count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 6),pos=none
    RL_ATT_ADJ_GAIN_19200_80MS, bit,count=8,indent=2,exist=((RC3_RC5_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_38400_80MS, bit,count=8,indent=2,exist=((RC3_RC5_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_76800_80MS, bit,count=8,indent=2,exist=((RC3_RC5_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_153600_80MS, bit,count=8,indent=2,exist=((RC3_RC5_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RC4_RC6_80MS_INCL, bit,count=1,indent=2,exist=(GBL_PREV >5) && (GBL_PREV > 6),pos=none
    RL_ATT_ADJ_GAIN_28800_80MS, bit,count=8,indent=2,exist=((RC4_RC6_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_57600_80MS, bit,count=8,indent=2,exist=((RC4_RC6_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_115200_80MS, bit,count=8,indent=2,exist=((RC4_RC6_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RL_ATT_ADJ_GAIN_259200_80MS, bit,count=8,indent=2,exist=((RC4_RC6_80MS_INCL!=0)) && ((GBL_PREV >5) && (GBL_PREV > 6)),pos=none
    RESERVED, bit,count=-8,indent=2,exist=((GBL_PREV > 5)) && (GBL_PREV >5),pos=none
End

Begin Message, PCNM RPC Rec Adj Gain For R-CQICH Rsp, BitPack, OTTSName=CMsgPcnmRpcAdjGainForRCQICH
    RL_CQICH_ATT_ADJ_GAIN_TYPE, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    RL_CQICH_ATT_ADJ_GAIN_HIGH_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    RL_CQICH_ATT_ADJ_GAIN_HIGH, bit,count=8,indent=2,exist=((RL_CQICH_ATT_ADJ_GAIN_HIGH_INCL!=0)) && (GBL_PREV > 8),pos=none
    RL_CQICH_ATT_ADJ_GAIN_LOW_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    RL_CQICH_ATT_ADJ_GAIN_LOW, bit,count=8,indent=2,exist=((RL_CQICH_ATT_ADJ_GAIN_LOW_INCL!=0)) && (GBL_PREV > 8),pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 8,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Extended Neighbor List Update Rsp, BitPack, OTTSName=CMsgFtcExtendedNeighborListUpdate
    MsgRec, record, type = ENLUM Rec, maxsize=1
End

Begin Record, ENLUM Rec, BitPack
    PILOT_INC, bit,count=4,indent=2,exist=GBL_PREV >5,pos=none
    NGHBR_SRCH_MODE, bit,count=2,indent=2,exist=GBL_PREV >5,pos=none
    SRCH_WIN_N, bit,count=4,indent=2,exist=GBL_PREV >5,pos=none
    USE_TIMING, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    GLOBAL_TIMING_INCL, bit,count=1,indent=2,exist=((USE_TIMING == 1)) && (GBL_PREV >5),pos=none
    GLOBAL_TX_DURATION, bit,count=4,indent=2,exist=((GLOBAL_TIMING_INCL == 1)) && (GBL_PREV >5),pos=none
    GLOBAL_TX_PERIOD, bit,count=7,indent=2,exist=((GLOBAL_TIMING_INCL == 1)) && (GBL_PREV >5),pos=none
    NUM_NGHBR, bit,count=6,indent=2,exist=GBL_PREV >5,pos=none
    Rec1, record,type=ENLUM Nghbr Pilot Rec,maxsize=63,size=NUM_NGHBR,exist=GBL_PREV >5
    SRCH_OFFSET_INCL, bit,count=1,indent=2,exist=GBL_PREV >5,pos=none
    Rec2, record,type=ENLUM Nghbr Pilot2 Rec,maxsize=63,size=NUM_NGHBR,exist=GBL_PREV >5
    RESQ_ENABLED, bit,count=1,indent=2,exist=(GBL_PREV >5) && ((GBL_PREV > 7)),pos=none
    RESQ_DELAY_TIME, bit,count=6,indent=2,exist=((GBL_PREV >5) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_ALLOWED_TIME, bit,count=6,indent=2,exist=((GBL_PREV >5) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_ATTEMPT_TIME, bit,count=6,indent=2,exist=((GBL_PREV >5) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_CODE_CHAN, bit,count=11,indent=2,exist=((GBL_PREV >5) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_QOF, bit,count=2,indent=2,exist=((GBL_PREV >5) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_MIN_PERIOD_INCL, bit,count=1,indent=2,exist=((GBL_PREV >5) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_MIN_PERIOD, bit,count=5,indent=2,exist=((RESQ_MIN_PERIOD_INCL==1)) && (((GBL_PREV >5) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1))),pos=none
    RESQ_NUM_TOT_TRANS_INCL, bit,count=1,indent=2,exist=((RESQ_MIN_PERIOD_INCL==1)) && (((GBL_PREV >5) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1))),pos=none
    RESQ_NUM_TOT_TRANS_20MS, bit,count=4,indent=2,exist=((RESQ_NUM_TOT_TRANS_INCL==1)) && (((GBL_PREV >5) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1))),pos=none
    RESQ_NUM_TOT_TRANS_5MS, bit,count=4,indent=2,exist=((RESQ_NUM_TOT_TRANS_INCL==1)) && (((GBL_PREV >5) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1))),pos=none
    RESQ_NUM_PREAMBLE, bit,count=3,indent=2,exist=((GBL_PREV >5) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    RESQ_POWER_DELTA, bit,count=3,indent=2,exist=((GBL_PREV >5) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    NGHBR_RESQ_CONFIGURED, array,type=bit,count=1,maxsize=20,size=NUM_NGHBR,indent=2,exist=((GBL_PREV >5) && ((GBL_PREV > 7))) && ((RESQ_ENABLED==1)),pos=none
    Data, array,type=uint8,maxsize=100,size=end,indent=2,exist=GBL_PREV <=5
End

Begin Record, ENLUM Nghbr Pilot Rec, BitPack, OTTSName=CMsgEnlumNghbrPilot
    NGHBR_PN, bit,count=9,indent=2,exist=(GBL_PREV >5 || GBL_PREV == 1),pos=none
    SEARCH_PRIORITY, bit,count=2,indent=2,exist=((..\NGHBR_SRCH_MODE == 1 || ..\NGHBR_SRCH_MODE == 3)) && ((GBL_PREV >5 || GBL_PREV == 1)),pos=none
    SRCH_WIN_NGHBR, bit,count=4,indent=2,exist=((..\NGHBR_SRCH_MODE == 2 || ..\NGHBR_SRCH_MODE == 3)) && ((GBL_PREV >5 || GBL_PREV == 1)),pos=none
    TIMING_INCL, bit,count=1,indent=2,exist=((..\USE_TIMING == 1)) && ((GBL_PREV >5 || GBL_PREV == 1)),pos=none
    NGHBR_TX_OFFSET, bit,count=7,indent=2,exist=((TIMING_INCL == 1)) && ((GBL_PREV >5 || GBL_PREV == 1)),pos=none
    NGHBR_TX_DURATION, bit,count=4,indent=2,exist=((TIMING_INCL == 1)) && ((GBL_PREV >5 || GBL_PREV == 1)),pos=none
    NGHBR_TX_PERIOD, bit,count=7,indent=2,exist=((TIMING_INCL == 1)) && ((GBL_PREV >5 || GBL_PREV == 1)),pos=none
End

Begin Record, ENLUM Nghbr Pilot2 Rec, BitPack, OTTSName=CMsgEnlumNghbrPilot2
    ADD_PILOT_REC_INCL, bit,count=1,indent=2,exist=(GBL_PREV >5 || GBL_PREV == 1),pos=none
    Nghbr_Pilot_Rec, record,exist=((ADD_PILOT_REC_INCL == 1)) && ((GBL_PREV >5 || GBL_PREV == 1)),type=OTD Pilot Rec,maxsize=1
    SRCH_OFFSET_NGHBR, bit,count=3,indent=2,exist=((((..\NGHBR_SRCH_MODE == 1) || (..\NGHBR_SRCH_MODE == 3)) && (..\SRCH_OFFSET_INCL == 1))) && ((GBL_PREV >5 || GBL_PREV == 1)),pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Candidate Frequency Search Request Rsp, BitPack, OTTSName=CMsgFtcCandidateFrequencySearchRequest
    MsgRec, record, type = CFSRQM Rec, maxsize=1
End

Begin Record, CFSRQM Rec, BitPack
    USE_TIME, bit,count=1,indent=2,pos=none
    ACTION_TIME, bit,count=6,indent=2,pos=none
    RESERVED_1, bit,count=4,indent=2,pos=none
    CFSRM_SEQ, bit,count=2,indent=2,pos=none
    SEARCH_TYPE, bit,count=2,indent=2,pos=none
    SEARCH_PERIOD, bit,count=4,indent=2,pos=none
    Rec, record, type = Search Mode Rec, maxsize = 1
    ALIGN_TIMING, bit,count=1,indent=2,pos=none
    SEARCH_OFFSET, bit,count=6,indent=2,exist=(ALIGN_TIMING == 1),pos=none
End

Begin Record, Search Mode Rec, BitPack, OTTSName=CMsgSearchMode
    SEARCH_MODE, bit,count=4,base=enum:Search Mode Type Enum,indent=2,pos=none
    MODE_SPECIFIC_LEN, bit,count=8,indent=2,pos=none
    Rec, union, enum = SEARCH_MODE, consumeBytes = MODE_SPECIFIC_LEN
End

Begin Message, Search Mode Rec Search CDMA Pilot on Cand Freq [0x00] Rsp, BitPack, OTTSName=CMsgSearchModeSearchCDMAPilotOnCandFreq
    BAND_CLASS, bit,count=5,indent=2,pos=none
    CDMA_FREQ, bit,count=11,indent=2,pos=none
    SF_TOTAL_EC_THRESH, bit,count=5,indent=2,pos=none
    SF_TOTAL_EC_IO_THRESH, bit,count=5,indent=2,pos=none
    DIFF_RX_PWR_THRESH, bit,count=5,indent=2,pos=none
    MIN_TOTAL_PILOT_EC_IO, bit,count=5,indent=2,pos=none
    CF_T_ADD, bit,count=6,indent=2,pos=none
    TF_WAIT_TIME, bit,count=4,indent=2,pos=none
    CF_PILOT_INC, bit,count=4,indent=2,pos=none
    CF_SRCH_WIN_N, bit,count=4,indent=2,pos=none
    CF_SRCH_WIN_R, bit,count=4,indent=2,pos=none
    RESERVED_2, bit,count=5,indent=2,pos=none
    PILOT_UPDATE, bit,count=1,indent=2,pos=none
    NUM_PILOTS, bit,count=6,indent=2,exist=(PILOT_UPDATE == 1),pos=none
    CF_NGHBR_SRCH_MODE, bit,count=2,indent=2,exist=(PILOT_UPDATE == 1),pos=none
    Rec1, record, type = Search Mode Nghbr Pilot Rec, maxsize = 100, size = NUM_PILOTS, exist = (PILOT_UPDATE == 1)
    CF_SRCH_OFFSET_INCL, bit,count=1,indent=2,pos=none
    Rec2, record, type = Search Mode Nghbr Pilot2 Rec, maxsize = 100, size = NUM_PILOTS, exist = (PILOT_UPDATE == 1)
    RESERVED_3, bit,count=-8,indent=2,pos=none
End

Begin Record, Search Mode Nghbr Pilot Rec, BitPack, OTTSName=CMsgSearchModeNghbrPilot
    NGHBR_PN, bit,count=9,indent=2,pos=none
    SEARCH_SET, bit,count=1,indent=2,pos=none
    SEARCH_PRIORITY, bit,count=2,indent=2,exist=(..\CF_NGHBR_SRCH_MODE == 1 || ..\CF_NGHBR_SRCH_MODE == 3),pos=none
    SRCH_WIN_NGHBR, bit,count=4,indent=2,exist=(..\CF_NGHBR_SRCH_MODE == 1 || ..\CF_NGHBR_SRCH_MODE == 3),pos=none
End

Begin Record, Search Mode Nghbr Pilot2 Rec, BitPack, OTTSName=CMsgSearchModeNghbrPilot2
    ADD_PILOT_REC_INCL, bit,count=1,indent=2,pos=none
    NGHBR_PILOT_Rec, record, exist = (ADD_PILOT_REC_INCL == 1), type = OTD Pilot Rec, maxsize = 1
    SRCH_OFFSET_NGHBR, bit,count=3,indent=2,exist=(..\CF_NGHBR_SRCH_MODE == 1 || ..\CF_NGHBR_SRCH_MODE == 3) && (..\CF_SRCH_OFFSET_INCL == 1),pos=none
End

Begin Message, Search Mode Rec Search Analog chan [0x01] Rsp, BitPack, OTTSName=CMsgSearchModeSearchAnalogChan
    BAND_CLASS, bit,count=5,indent=2,pos=none
    SF_TOTAL_EC_THRESH, bit,count=5,indent=2,pos=none
    SF_TOTAL_EC_IO_THRESH, bit,count=5,indent=2,pos=none
    RESREVED_4, bit,count=6,indent=2,pos=none
    NUM_ANALOG_FREQS, bit,count=3,indent=2,pos=none
    Rec, record, type = Search Mode Analog Freq Rec, maxsize =100, size = NUM_ANALOG_FREQS
    RESERVED_5, bit,count=-8,indent=2,pos=none
End

Begin Record, Search Mode Analog Freq Rec, BitPack, OTTSName=CMsgSearchModeAnalogFreqRec
    ANALOG_FREQ, bit,count=11,indent=2,pos=none
End

Begin Message, Search Mode Rec Search Direct Spread [0x10] Rsp, BitPack, OTTSName=CMsgSearchDirectSpread
End

Begin Message, FOR Traffic Msg Rec FTC - Candidate Frequency Search Control Rsp, BitPack, OTTSName=CMsgFtcCandidateFrequencySearchControl
    MsgRec, record, type = CFSCNM Rec, maxsize=1
End

Begin Record, CFSCNM Rec, BitPack, OTTSName=CMsgFtcCandidateFrequencySearchControl
    USE_TIME, bit,count=1,indent=2,pos=none
    ACTION_TIME, bit,count=6,indent=2,pos=none
    CFSCM_SEQ, bit,count=2,indent=2,pos=none
    SEARCH_TYPE, bit,count=2,indent=2,pos=none
    ALIGN_TIMING, bit,count=1,indent=2,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Power Up Function Rsp, BitPack, OTTSName=CMsgFtcPowerUpFunction
    MsgRec, record, type = PUFM Rec, maxsize=1
End

Begin Record, PUFM Rec, BitPack
    USE_TIME, bit,count=1,indent=2,pos=none
    ACTION_TIME, bit,count=6,indent=2,pos=none
    ACTION_TIME_FRAME, bit,count=2,indent=2,pos=none
    PUF_SETUP_SIZE, bit,count=6,indent=2,pos=none
    PUF_PULSE_SIZE, bit,count=7,indent=2,pos=none
    PUF_INTERVAL, bit,count=10,indent=2,pos=none
    PUF_INIT_PWR, bit,count=6,indent=2,pos=none
    PUF_PWR_STEP, bit,count=5,indent=2,pos=none
    TOTAL_PUF_PROBES, bit,count=4,indent=2,pos=none
    MAX_PWR_PUF, bit,count=4,indent=2,pos=none
    PUF_FREQ_INCL, bit,count=1,indent=2,pos=none
    PUF_BAND_CLASS, bit,count=5,indent=2,exist=(PUF_FREQ_INCL == 1),pos=none
    PUF_CDMA_FREQ, bit,count=11,indent=2,exist=(PUF_FREQ_INCL == 1),pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Power Up Function Completion Rsp, BitPack, OTTSName=CMsgFtcPowerUpFunctionCompletion
    MsgRec, record, type = PUFCM Rec, maxsize=1
End

Begin Record, PUFCM Rec, BitPack
    RESERVED, bit,count=6,indent=2,pos=none
    LOC_IND, bit,count=1,indent=2,pos=none
    RESERVED_1, bit,count=3,indent=2,exist=(LOC_IND == 1),pos=none
    MS_LAT, bit,count=22,indent=2,exist=(LOC_IND == 1),pos=none
    MS_LONG, bit,count=23,indent=2,exist=(LOC_IND == 1),pos=none
    MS_LOC_TSTAMP, record, type = PUFC TStamp Rec, maxsize = 1, exist = (LOC_IND == 1)
End

Begin Record, PUFC TStamp Rec, BitPack, OTTSName=CMsgPUFCTStampRec
    HOURS, bit,count=8,indent=2,pos=none
    MINUTES, bit,count=8,indent=2,pos=none
    SECONDS, bit,count=8,indent=2,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - General Handoff Direction Rsp, BitPack, OTTSName=CMsgFtcGeneralHandoffDirection
    MsgRec, record, type = GHDM Rec, maxsize=1
End

Begin Record, GHDM Rec, BitPack
    USE_TIME, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    ACTION_TIME, bit,count=6,indent=2,exist=((USE_TIME == 1)) && (GBL_PREV > 5),pos=none
    HDM_SEQ, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    SEARCH_INCLUDED, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    SRCH_WIN_A, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    SRCH_WIN_N, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    SRCH_WIN_R, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    T_ADD, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    T_DROP, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    T_COMP, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    T_TDROP, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    SOFT_SLOP, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    ADD_INTERCEPT, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    DROP_INTERCEPT, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    EXTRA_PARMS, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    P_REV, bit,count=8,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    PACKET_ZONE_ID, bit,count=8,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    FRAME_OFFSET, bit,count=4,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    PRIVATE_LCM, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    RESET_L2, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    RESET_FPC, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    SERV_NEG_TYPE, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    NOM_PWR_EXT, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    NOM_PWR, bit,count=4,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    NUM_PREAMBLE, bit,count=3,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    RETURN_IF_HANDOFF_FAIL, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    COMPLETE_SEARCH, bit,count=1,indent=2,exist=((RETURN_IF_HANDOFF_FAIL == 1)) && (GBL_PREV > 5),pos=none
    PERIODIC_SEARCH, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    SCR_INCLUDED, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    SERV_CON_SEQ, bit,count=3,indent=2,exist=((SCR_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    Service_Config_Rec, record,type=FOR Information Rec,maxsize=1,exist=((EXTRA_PARMS == 1) && (SCR_INCLUDED == 1)) && (GBL_PREV > 5)
    SUP_CHAN_PARMS_INCLUDED, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_INCLUDED, bit,count=1,indent=2,exist=((SUP_CHAN_PARMS_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    FOR_SUP_CONFIG, bit,count=2,indent=2,exist=((FOR_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    NUM_FOR_SUP, bit,count=3,indent=2,exist=(((FOR_SUP_CONFIG == 2) || (FOR_SUP_CONFIG == 3))) && (GBL_PREV > 5),pos=none
    USE_FOR_DURATION, bit,count=1,indent=2,exist=(((FOR_SUP_CONFIG == 1) || (FOR_SUP_CONFIG == 3))) && (GBL_PREV > 5),pos=none
    FOR_DURATION, bit,count=8,indent=2,exist=((USE_FOR_DURATION == 1)) && (GBL_PREV > 5),pos=none
    REV_INCLUDED, bit,count=1,indent=2,exist=((SUP_CHAN_PARMS_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    REV_DTX_DURATION, bit,count=4,indent=2,exist=((REV_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    CLEAR_RETRY_DELAY, bit,count=1,indent=2,exist=((REV_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    USE_REV_DURATION, bit,count=1,indent=2,exist=((REV_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    REV_DURATION, bit,count=8,indent=2,exist=((USE_REV_DURATION == 1)) && (GBL_PREV > 5),pos=none
    NUM_REV_CODES, bit,count=3,indent=2,exist=((REV_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    USE_T_ADD_ABORT, bit,count=1,indent=2,exist=((REV_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    REV_PARMS_INCLUDED, bit,count=1,indent=2,exist=((SUP_CHAN_PARMS_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    T_MULCHAN, bit,count=3,indent=2,exist=((REV_PARMS_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    BEGIN_PREAMBLE, bit,count=3,indent=2,exist=((REV_PARMS_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    RESUME_PREAMBLE, bit,count=3,indent=2,exist=((REV_PARMS_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    USE_PWR_CNTL_STEP, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    PWR_CNTL_STEP, bit,count=3,indent=2,exist=((USE_PWR_CNTL_STEP == 1)) && (GBL_PREV > 5),pos=none
    NUM_PILOTS, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    Pilot_Rec, record,type=GHDM Pilot Rec,maxsize=100,size=NUM_PILOTS,exist=GBL_PREV > 5
    FPC_SUBCHAN_GAIN, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    USE_PC_TIME, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    PC_ACTION_TIME, bit,count=6,indent=2,exist=((USE_PC_TIME == 1)) && (GBL_PREV > 5),pos=none
    RLGAIN_TRAFFIC_PILOT, bit,count=6,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    DEFAULT_RLAG, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    NNSCR_INCLUDED, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    NonNegotiabl_Rec, record,type=FOR Information Rec,maxsize=1,exist=((NNSCR_INCLUDED == 1)) && (GBL_PREV > 5)
    REV_FCH_GATING_MODE, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_PWR_CNTL_DELAY_INCL, bit,count=1,indent=2,exist=((REV_FCH_GATING_MODE != 0)) && (GBL_PREV > 5),pos=none
    REV_PWR_CNTL_DELAY, bit,count=2,indent=2,exist=((REV_PWR_CNTL_DELAY_INCL == 1)) && (GBL_PREV > 5),pos=none
    D_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((EXTRA_PARMS == 1 && ENCRYPT_MODE==3)) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    ENC_KEY_SIZE, bit,count=3,indent=2,exist=((EXTRA_PARMS == 1 && ENCRYPT_MODE>1)) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    SYNC_ID_INCL, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1 &&(SCR_INCLUDED==1 || NNSCR_INCLUDED==1))) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    SYNC_ID_LEN, bit,count=4,indent=2,exist=((EXTRA_PARMS == 1 &&(SCR_INCLUDED==1 || NNSCR_INCLUDED==1)&&SYNC_ID_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    SYNC_ID, array,type=uint8,maxsize=20,size=SYNC_ID_LEN,indent=2,exist=((EXTRA_PARMS == 1 &&(SCR_INCLUDED==1 || NNSCR_INCLUDED==1)&&SYNC_ID_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6))
    CS_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    MSG_INTEGRITY_SUP, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    GEN_2G_KEY, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    REGISTER_IN_IDLE, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    T_TDROP_RANGE_INCL, bit,count=1,indent=2,exist=((SEARCH_INCLUDED!=0)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),pos=none
    T_TDROP_RANGE, bit,count=4,indent=2,exist=((SEARCH_INCLUDED!=0 && T_TDROP_RANGE_INCL!=0 )) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),pos=none
    FOR_PDCH_SUPPORTED, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    Data, array,type=uint8,maxsize=100,size=end,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV <=5)
End

Begin Record, GHDM Pilot Rec, BitPack, OTTSName=CMsgGHDMPilotRec
    PILOT_PN, bit,count=9,indent=2,exist=GBL_PREV > 5,pos=none
    PWR_COMB_IND, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_FUND_CODE_CHAN, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_SUP_INCLUDED, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (((..\FOR_SUP_CONFIG == 2) || (..\FOR_SUP_CONFIG == 3))),pos=none
    EXPL_CODE_CHAN, bit,count=1,indent=2,exist=((FOR_SUP_INCLUDED == 1)) && ((GBL_PREV > 5) && (((..\FOR_SUP_CONFIG == 2) || (..\FOR_SUP_CONFIG == 3)))),pos=none
    BASE_CODE_CHAN, bit,count=8,indent=2,exist=(((FOR_SUP_INCLUDED == 1) && (EXPL_CODE_CHAN == 0))) && ((GBL_PREV > 5) && (((..\FOR_SUP_CONFIG == 2) || (..\FOR_SUP_CONFIG == 3)))),pos=none
    FOR_SUP_CODE_CHAN, array,type=uint8,maxsize=100,size=..\NUM_FOR_SUP,exist=(((FOR_SUP_INCLUDED == 1) && (EXPL_CODE_CHAN == 1))) && ((GBL_PREV > 5) && (((..\FOR_SUP_CONFIG == 2) || (..\FOR_SUP_CONFIG == 3)))),indent=2
End

Begin Message, FOR Traffic Msg Rec FTC - Resource Allocation Rsp, BitPack, OTTSName=CMsgFtcResourceAllocation
    MsgRec, record, type = RAM Rec, maxsize=1
End

Begin Record, RAM Rec, BitPack, OTTSName=CMsgFtcResourceAllocation
    USE_TIME, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    ACTION_TIME, bit,count=6,indent=2,exist=((USE_TIME == 1)) && (GBL_PREV > 5),pos=none
    FPC_PRI_CHAN, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Extended Release Rsp, BitPack, OTTSName=CMsgFtcExtendedRelease
    MsgRec, record, type = ERM Rec, maxsize=1
End

Begin Record, ERM Rec, BitPack
    USE_TIME, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    ACTION_TIME, bit,count=6,indent=2,exist=((USE_TIME == 1)) && (GBL_PREV > 5),pos=none
    CH_IND, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    GATING_RATE_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    PILOT_GATING_RATE, bit,count=2,indent=2,exist=((GATING_RATE_INCL == 1)) && (GBL_PREV > 5),pos=none
    USE_EXT_CH_IND, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 8),pos=none
    EXT_CH_IND, bit,count=5,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 8)) && ((USE_EXT_CH_IND == 1)),pos=none
    PDCH_CONTROL_HOLD, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 8)) && ((USE_EXT_CH_IND == 1)),pos=none
    FOR_CPCCH_INFO_INCL, bit,count=1,indent=2,exist=((EXT_CH_IND==1||EXT_CH_IND==2)) && (((GBL_PREV > 5) && (GBL_PREV > 8)) && ((USE_EXT_CH_IND == 1))),pos=none
    NUM_PILOTS, bit,count=3,indent=2,exist=(((EXT_CH_IND==1||EXT_CH_IND==2)&&FOR_CPCCH_INFO_INCL!=0)) && (((GBL_PREV > 5) && (GBL_PREV > 8)) && ((USE_EXT_CH_IND == 1))),pos=none
    PILOT_Rec, record,type=EAM Pilot Rec,maxsize=10,size=NUM_PILOTS,exist=(((EXT_CH_IND==1||EXT_CH_IND==2)&&FOR_CPCCH_INFO_INCL!=0)) && (((GBL_PREV > 5) && (GBL_PREV > 8)) && ((USE_EXT_CH_IND == 1)))
    SWITCHING_PARAMS_INCL, bit,count=1,indent=2,exist=(((GBL_PREV > 5) && (GBL_PREV > 8)) && ((USE_EXT_CH_IND == 1))) && ((GATING_RATE_INCL==1)),pos=none
    NUM_SOFR_SWITCHING_FRAMES_CHM, bit,count=4,indent=2,exist=((SWITCHING_PARAMS_INCL==1)) && ((((GBL_PREV > 5) && (GBL_PREV > 8)) && ((USE_EXT_CH_IND == 1))) && ((GATING_RATE_INCL==1))),pos=none
    NUM_SOFTER_SWITCHING_FRAMES_CHM, bit,count=4,indent=2,exist=((SWITCHING_PARAMS_INCL==1)) && ((((GBL_PREV > 5) && (GBL_PREV > 8)) && ((USE_EXT_CH_IND == 1))) && ((GATING_RATE_INCL==1))),pos=none
End

Begin Record, EAM Pilot Rec, BitPack, OTTSName = CMsgEAMPilotRec
    PILOT_PN, bit,count=9,indent=2,exist=GBL_PREV > 8,pos=none
    FOR_CPCCH_WALSH, bit,count=7,indent=2,exist=GBL_PREV > 8,pos=none
    FOR_CPCSCH, bit,count=5,indent=2,exist=GBL_PREV > 8,pos=none
    PWR_COMB_IND, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Universal Handoff Direction Rsp, BitPack, OTTSName=CMsgFtcUniversalHandoffDirection
    MsgRec, record, type = UHDM Rec, maxsize=1
End

Begin Record, UHDM Rec, BitPack
    USE_TIME, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    ACTION_TIME, bit,count=6,indent=2,exist=((USE_TIME == 1)) && (GBL_PREV > 5),pos=none
    HDM_SEQ, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    PARMS_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    P_REV, bit,count=8,indent=2,exist=((PARMS_INCL == 1)) && (GBL_PREV > 5),pos=none
    SERV_NEG_TYPE, bit,count=1,indent=2,exist=((PARMS_INCL == 1)) && (GBL_PREV > 5),pos=none
    SEARCH_INCLUDED, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    SRCH_WIN_A, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    SRCH_WIN_N, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    SRCH_WIN_R, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    T_ADD, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    T_DROP, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    T_COMP, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    T_TDROP, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    SOFT_SLOP, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    ADD_INTERCEPT, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    DROP_INTERCEPT, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    EXTRA_PARMS, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    PACKET_ZONE_ID, bit,count=8,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    FRAME_OFFSET, bit,count=4,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    PRIVATE_LCM, bit,count=1,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    RESET_L2, bit,count=1,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    RESET_FPC, bit,count=1,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    NOM_PWR_EXT, bit,count=1,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    NOM_PWR, bit,count=4,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    RLGAIN_TRAFFIC_PILOT, bit,count=6,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    DEFAULT_RLAG, bit,count=1,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    NUM_PREAMBLE, bit,count=3,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    RETURN_IF_HANDOFF_FAIL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    COMPLETE_SEARCH, bit,count=1,indent=2,exist=((RETURN_IF_HANDOFF_FAIL == 1)) && ((GBL_PREV > 5) && ((EXTRA_PARMS == 1))),pos=none
    PERIODIC_SEARCH, bit,count=1,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    SCR_INCLUDED, bit,count=1,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    SERV_CON_SEQ, bit,count=3,indent=2,exist=((SCR_INCLUDED == 1)) && ((GBL_PREV > 5) && ((EXTRA_PARMS == 1))),pos=none
    Service_Config_Rec, record,type=FOR Information Rec,maxsize=1,exist=((SCR_INCLUDED == 1)) && ((GBL_PREV > 5) && ((EXTRA_PARMS == 1)))
    NNSCR_INCLUDED, bit,count=1,indent=2,exist=(GBL_PREV > 5) && ((EXTRA_PARMS == 1)),pos=none
    NonNegotiabl_Rec, record,type=FOR Information Rec,maxsize=1,exist=((NNSCR_INCLUDED == 1)) && ((GBL_PREV > 5) && ((EXTRA_PARMS == 1)))
    USE_PWR_CNTL_STEP, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    PWR_CNTL_STEP, bit,count=3,indent=2,exist=((USE_PWR_CNTL_STEP == 1)) && (GBL_PREV > 5),pos=none
    CLEAR_RETRY_DELAY, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    SCH_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_FOR_ASSIGN, bit,count=2,indent=2,exist=(GBL_PREV > 5) && ((SCH_INCL == 1)),pos=none
    FOR_SCH_Rec, record,type=UHDM FOR SCH Rec,maxsize=5,size=NUM_FOR_ASSIGN,exist=(GBL_PREV > 5) && ((SCH_INCL == 1))
    NUM_REV_ASSIGN, bit,count=2,indent=2,exist=(GBL_PREV > 5) && ((SCH_INCL == 1)),pos=none
    REV_SCH_Rec, record,type=UHDM REV SCH Rec,maxsize=5,size=NUM_REV_ASSIGN,exist=(GBL_PREV > 5) && ((SCH_INCL == 1))
    FPC_SUBCHAN_GAIN, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    USE_PC_TIME, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    PC_ACTION_TIME, bit,count=6,indent=2,exist=((USE_PC_TIME == 1)) && (GBL_PREV > 5),pos=none
    Active_Set_Rec, record,type=UHDM Active Set Rec,maxsize=1,exist=GBL_PREV > 5
    D_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((EXTRA_PARMS==1 && ENCRYPT_MODE==3)) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    ENC_KEY_SIZE, bit,count=3,indent=2,exist=((EXTRA_PARMS==1 && ENCRYPT_MODE>1)) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    _3XFL_1XRL_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    _1XRL_FREQ_OFFSET, bit,count=2,indent=2,exist=((_3XFL_1XRL_INCL!=0)) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    SYNC_ID_INCL, bit,count=1,indent=2,exist=((EXTRA_PARMS==1 && (SCR_INCLUDED==1||NNSCR_INCLUDED==1))) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    SYNC_ID_LEN, bit,count=4,indent=2,exist=((EXTRA_PARMS==1 && (SCR_INCLUDED==1||NNSCR_INCLUDED==1)&& SYNC_ID_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    SYNC_ID, array,type=uint8,maxsize=18,size=SYNC_ID_LEN,indent=2,exist=((EXTRA_PARMS==1 && (SCR_INCLUDED==1||NNSCR_INCLUDED==1)&& SYNC_ID_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6))
    CC_INFO_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && ((EXTRA_PARMS==1 && SCR_INCLUDED==1)),pos=none
    NUM_CALLS_ASSIGN, bit,count=8,indent=2,exist=((CC_INFO_INCL==1)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && ((EXTRA_PARMS==1 && SCR_INCLUDED==1))),pos=none
    CALLS_ASSIGN_Rec, record,type=Call Assign Rec,maxsize=300,size=NUM_CALLS_ASSIGN,exist=((CC_INFO_INCL==1)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && ((EXTRA_PARMS==1 && SCR_INCLUDED==1)))
    CS_SUPPORTED, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    CHM_SUPPORTED, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    CDMA_OFF_TIME_REP_SUP_IND, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    CDMA_OFF_TIME_REP_THRESHOLD_UNIT, bit,count=1,indent=2,exist=((CDMA_OFF_TIME_REP_SUP_IND == 1)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),pos=none
    CDMA_OFF_TIME_REP_THRESHOLD, bit,count=3,indent=2,exist=((CDMA_OFF_TIME_REP_SUP_IND == 1)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),pos=none
    RELEASE_TO_IDLE_IND, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    MSG_INTEGRITY_SUP, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    GEN_2G_KEY, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    REGISTER_IN_IDLE, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    PLCM_TYPE_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    PLCM_TYPE, bit,count=4,indent=2,exist=((PLCM_TYPE_INCL == 1)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),pos=none
    PLCM_39, bit,count=39,indent=2,exist=((PLCM_TYPE == 1)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),base=16,pos=none
    T_TDROP_RANGE_INCL, bit,count=1,indent=2,exist=((SEARCH_INCLUDED != 0)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),pos=none
    T_TDROP_RANGE, bit,count=4,indent=2,exist=((SEARCH_INCLUDED!=0 && T_TDROP_RANGE_INCL!=0)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),pos=none
    FOR_PDCH_SUPPORTED, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    PDCH_CHM_SUPPORTED, bit,count=1,indent=2,exist=((FOR_PDCH_SUPPORTED == 1)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),pos=none
    PILOT_INFO_REQ_SUPPORTED, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    ENC_SUPPORTED, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    SIG_ENCRYPT_SUP, bit,count=8,indent=2,exist=((ENC_SUPPORTED == 1)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),pos=none
    UI_ENCRYPT_SUP, bit,count=8,indent=2,exist=((ENC_SUPPORTED == 1)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),pos=none
    USE_SYNC_ID, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    SID_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    SID, bit,count=15,indent=2,exist=((SID_INCL == 1)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),pos=none
    NID_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    NID, bit,count=16,indent=2,exist=((NID_INCL == 1)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),pos=none
    SDB_SUPPORTED, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
    MOB_QOS, bit,count=1,indent=2,exist=((CS_SUPPORTED == 0)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8)),pos=none
    MS_INIT_POS_LOC_SUP_IND, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 8),pos=none
End

Begin Record, UHDM FOR SCH Rec, BitPack, OTTSName=CMsgUhdmForSch
    FOR_SCH_ID, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_SCH_DURATION, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_SCH_START_TIME_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_SCH_START_TIME, bit,count=5,indent=2,exist=((FOR_SCH_START_TIME_INCL == 1)) && (GBL_PREV > 5),pos=none
    SCCL_INDEX, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, UHDM REV SCH Rec, BitPack, OTTSName=CMsgUhdmRevSch
    REV_SCH_ID, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_SCH_DURATION, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    REV_SCH_START_TIME_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_SCH_START_TIME, bit,count=5,indent=2,exist=((REV_SCH_START_TIME_INCL == 1)) && (GBL_PREV > 5),pos=none
    REV_SCH_RATE, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, UHDM Active Set Rec, BitPack, OTTSName=CMsgUhdmActiveSet
    CH_IND, bit,count=3,indent=2,base=enum:UHDM Active Set Enum,exist=GBL_PREV > 5,pos=none
    ACTIVE_SET_REC_LEN, bit,count=8,indent=2,exist=((CH_IND!=0)) && (GBL_PREV > 5),pos=none
    ACTIVE_SET_REC_FIELDS, union,enum=CH_IND,consumebytes=ACTIVE_SET_REC_LEN,indent=2,exist=((CH_IND!=0)) && (GBL_PREV > 5)
    ACTIVE_SET_REC0_LEN, bit,count=8,indent=2,exist=((CH_IND==0)) && (GBL_PREV > 5),pos=none
    ACTIVE_SET_REC0, record,type=UHDM Active Set0 Rec,maxsize=1,exist=((CH_IND==0)) && (GBL_PREV > 5)
    REV_FCH_GATING_MODE, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (!((CH_IND==2 || CH_IND==6)||(CH_IND==0&&(ACTIVE_SET_REC0\EXT_CH_IND==2||ACTIVE_SET_REC0\EXT_CH_IND==4)))),pos=none
    REV_PWR_CNTL_DELAY_INCL, bit,count=1,indent=2,exist=((REV_FCH_GATING_MODE == 1)) && ((GBL_PREV > 5) && (!((CH_IND==2 || CH_IND==6)||(CH_IND==0&&(ACTIVE_SET_REC0\EXT_CH_IND==2||ACTIVE_SET_REC0\EXT_CH_IND==4))))),pos=none
    REV_PWR_CNTL_DELAY, bit,count=2,indent=2,exist=((REV_FCH_GATING_MODE==1 && REV_PWR_CNTL_DELAY_INCL==1)) && ((GBL_PREV > 5) && (!((CH_IND==2 || CH_IND==6)||(CH_IND==0&&(ACTIVE_SET_REC0\EXT_CH_IND==2||ACTIVE_SET_REC0\EXT_CH_IND==4))))),pos=none
End

Begin Message, UHDM Active Set Rec 0 Rsp, BitPack, OTTSName=CMsgUhdmActiveSet0
    EXT_CH_IND, bit,count=5,indent=2,exist=GBL_PREV > 8,pos=none
    RESERVED, bit,count=3,indent=2,exist=GBL_PREV > 8,pos=none
    ExtFields_Rec, record,type=UHDM Active Set 0 ExtFields Rec,maxsize=1,exist=((EXT_CH_IND>0 && EXT_CH_IND<7)) && (GBL_PREV > 8)
End

Begin Record, UHDM Active Set 0 ExtFields Rec, BitPack, OTTSName=CMsgUhdmActiveSet0ExtFields
    RLGAIN_ACKCQICH_PILOT, bit,count=6,indent=2,exist=GBL_PREV > 8,pos=none
    PDCH_CONTROL_HOLD, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    FULL_CI_FEEDBACK_IND, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    REV_CQICH_FRAME_OFFSET, bit,count=4,indent=2,exist=GBL_PREV > 8,pos=none
    REV_CQICH_REPS, bit,count=2,indent=2,exist=GBL_PREV > 8,pos=none
    REV_ACHCH_REPS, bit,count=2,indent=2,exist=GBL_PREV > 8,pos=none
    NUM_FOR_SCH, bit,count=5,indent=2,exist=((..\EXT_CH_IND > 2 && (..\..\..\SCH_INCL == 1))) && (GBL_PREV > 8),pos=none
    FOR_SCH_Rec, record,type=UHDM Active Set FOR SCH Rec,maxsize=100,size=NUM_FOR_SCH,exist=((..\EXT_CH_IND > 2 && (..\..\..\SCH_INCL == 1))) && (GBL_PREV > 8)
    NUM_REV_SCH, bit,count=5,indent=2,exist=((..\..\..\SCH_INCL == 1)) && (GBL_PREV > 8),pos=none
    REV_SCH_Rec, record,type=UHDM Active Set REV SCH Rec,maxsize=100,size=NUM_REV_SCH,exist=((..\..\..\SCH_INCL == 1)) && (GBL_PREV > 8)
    NUM_PILOTS, bit,count=3,indent=2,exist=GBL_PREV > 8,pos=none
    SRCH_OFFSET_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    PDCH_GROUP_IND_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    FOR_PDCH_PARAMS_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    NUM_SOFT_SWITCHING_FRAMES, bit,count=4,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFTER_SWITCHING_FRAMES, bit,count=4,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFT_SWITCHING_FRAMES_CHM, bit,count=4,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFTER_SWITCHING_FRAMES_CHM, bit,count=4,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFT_SWITCHING_SLOTS, bit,count=2,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFTER_SWITCHING_SLOTS, bit,count=2,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFT_SWITCHING_SLOTS_CHM, bit,count=2,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    NUM_SOFTER_SWITCHING_SLOTS_CHM, bit,count=2,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    PDCH_SOFT_SWITCHING_DELAY, bit,count=8,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    PDCH_SOFTER_SWITCHING_DELAY, bit,count=8,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    FOR_PDCH_COMMON_PARAMS, bit,count=1,indent=2,exist=(GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)),pos=none
    WALSH_TABLE_ID, bit,count=3,indent=2,exist=((FOR_PDCH_COMMON_PARAMS==1)) && ((GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1))),pos=none
    NUM_PDCCH, bit,count=3,indent=2,exist=((FOR_PDCH_COMMON_PARAMS==1)) && ((GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1))),pos=none
    PDCCH_Rec, record,type=UHDM Active Set 0 ExtCh PDCCH Rec,maxsize=10,size=(NUM_PDCCH+1),exist=((FOR_PDCH_COMMON_PARAMS==1)) && ((GBL_PREV > 8) && ((FOR_PDCH_PARAMS_INCL==1)))
    Pilot_Rec, record,type=UHDM Active Set 0 ExtCh Pilot Rec,maxsize=7,size=NUM_PILOTS,exist=((NUM_PILOTS!=0)) && (GBL_PREV > 8)
    CCSH_INCLUDED, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    USE_CCSH_ENCODER_TIME, bit,count=1,indent=2,exist=((CCSH_INCLUDED == 1)) && (GBL_PREV > 8),pos=none
    CCSH_ENCODER_ACTION_TIME, bit,count=6,indent=2,exist=((CCSH_INCLUDED==1 && USE_CCSH_ENCODER_TIME==1)) && (GBL_PREV > 8),pos=none
    CCSH_ENCODER_TYPE, array,type=bit,count=1,maxsize=450,size=count_of({Pilot_Rec[]\SCH_Rec[]} (PILOT_INCL==1)),indent=2,exist=((CCSH_INCLUDED==1)) && (GBL_PREV > 8),pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 8,pos=none
End

Begin Record, UHDM Active Set FOR SCH Rec, BitPack, OTTSName=CMsgUhdmActiveSetForSch
    FOR_SCH_ID, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    SCCL_INDEX, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_SCH_RATE, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, UHDM Active Set REV SCH Rec, BitPack, OTTSName=CMsgUhdmActiveSetRevSch
    REV_SCH_ID, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_WALSH_ID, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_SCH_RATE, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, UHDM Active Set 0 ExtCh PDCCH Rec, BitPack, OTTSName=CMsgUhdmActiveSet0ExtChPDCCH
    FOR_PDCCH_WALSH, bit,count=6,indent=2,pos=none
End

Begin Record, UHDM Active Set 0 ExtCh Pilot Rec, BitPack, OTTSName=CMsgUhdmActiveSet0ExtChPilot
    PILOT_PN, bit,count=9,indent=2,pos=none
    SRCH_OFFSET, bit,count=3,indent=2,exist=(..\SRCH_OFFSET_INCL == 1),pos=none
    ADD_PILOT_REC_INCL, bit,count=1,indent=2,pos=none
    OTD_Pilot_rec, record, type = OTD Pilot Rec, maxsize = 1, exist = (ADD_PILOT_REC_INCL == 1)
    FOR_PDCH_INCL, bit,count=1,indent=2,pos=none
    WALSH_TABLE_ID, bit,count=3,indent=2,exist=(..\FOR_PDCH_PARAMS_INCL==1 && FOR_PDCH_INCL==1 && ..\FOR_PDCH_COMMON_PARAMS==0),pos=none
    NUM_PDCCH, bit,count=3,indent=2,exist=(..\FOR_PDCH_PARAMS_INCL==1 && FOR_PDCH_INCL==1 && ..\FOR_PDCH_COMMON_PARAMS==0),pos=none
    PDCCH_Rec, record, type=UHDM Active Set 0 ExtCh PDCCH Rec, maxsize=10, size=(NUM_PDCCH+1), exist=(..\FOR_PDCH_PARAMS_INCL==1 && FOR_PDCH_INCL==1 && ..\FOR_PDCH_COMMON_PARAMS==0)
    MAC_ID, bit,count=8,indent=2,exist=(FOR_PDCH_INCL!=0),pos=none
    REV_CQICH_COVER, bit,count=3,indent=2,exist=(FOR_PDCH_INCL!=0),pos=none
    FOR_CPCCH_WALSH, bit,count=7,indent=2,exist=(FOR_PDCH_INCL==1 && (..\..\EXT_CH_IND==1||..\..\EXT_CH_IND==2)),pos=none
    FOR_CPCSCH, bit,count=5,indent=2,exist=(FOR_PDCH_INCL==1 && (..\..\EXT_CH_IND==1||..\..\EXT_CH_IND==2)),pos=none
    PWR_COMB_IND, bit,count=1,indent=2,pos=none
    PDCH_GROUP_IND, bit,count=1,indent=2,exist=(..\PDCH_GROUP_IND_INCL == 1),pos=none
    CODE_CHAN_FCH, bit,count=11,indent=2,exist=(..\..\EXT_CH_IND==3 || ..\..\EXT_CH_IND==5 || ..\..\EXT_CH_IND==6),pos=none
    QOF_MASK_ID_FCH, bit,count=2,indent=2,exist=(..\..\EXT_CH_IND==3 || ..\..\EXT_CH_IND==5 || ..\..\EXT_CH_IND==6),pos=none
    CODE_CHAN_DCCH, bit,count=11,indent=2,exist=(..\..\EXT_CH_IND==4 || ..\..\EXT_CH_IND==5 || ..\..\EXT_CH_IND==6),pos=none
    QOF_MASK_ID_DCCH, bit,count=2,indent=2,exist=(..\..\EXT_CH_IND==4 || ..\..\EXT_CH_IND==5 || ..\..\EXT_CH_IND==6),pos=none
    NUM_SCH, bit,count=5,indent=2,exist=(..\..\..\..\SCH_INCL==1),pos=none
    SCH_Rec, record, type=UHDM Active Set SCH Rec, maxsize=34, size=NUM_SCH, exist=(..\..\..\..\SCH_INCL==1)
End

Begin Record, UHDM Active Set SCH Rec, BitPack, OTTSName=CMsgUhdmActiveSetSCH
    FOR_SCH_ID, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    SCCL_INDEX, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    PILOT_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    CODE_CHAN_SCH, bit,count=11,indent=2,exist=((PILOT_INCL == 1)) && (GBL_PREV > 5),pos=none
    QOF_MASK_ID_SCH, bit,count=2,indent=2,exist=((PILOT_INCL == 1)) && (GBL_PREV > 5),pos=none
End

Begin Message, UHDM Active Set Rec 2 Rsp, BitPack, OTTSName=CMsgUhdmActiveSet010
    NUM_FOR_SCH, bit,count=5,indent=2,exist=(GBL_PREV > 5) && ((..\..\SCH_INCL == 1)),pos=none
    FOR_SCH_Rec, record,type=UHDM Active Set FOR SCH Rec,maxsize=40,size=NUM_FOR_SCH,exist=(GBL_PREV > 5) && ((..\..\SCH_INCL == 1))
    NUM_REV_SCH, bit,count=5,indent=2,exist=(GBL_PREV > 5) && ((..\..\SCH_INCL == 1)),pos=none
    REV_SCH_Rec, record,type=UHDM Active Set REV SCH Rec,maxsize=40,size=NUM_REV_SCH,exist=(GBL_PREV > 5) && ((..\..\SCH_INCL == 1))
    NUM_PILOTS, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    SRCH_OFFSET_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    Pilot_Rec, record,type=UHDM Active Set Pilot 010 110 Rec,maxsize=10,size=NUM_PILOTS,exist=GBL_PREV > 5
    _3X_DCCH_INFO_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    _3X_DCCH_Rec, record,type=UHDM Active Set Pilot 010 _3X_DCCH_INFO Rec,maxsize=10,size=NUM_PILOTS,exist=((_3X_DCCH_INFO_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6))
    CCSH_INCLUDED, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 7),pos=none
    USE_CCSH_ENCODER_TIME, bit,count=1,indent=2,exist=((CCSH_INCLUDED==1)) && ((GBL_PREV > 5) && (GBL_PREV > 7)),pos=none
    CCSH_ENCODER_ACTION_TIME, bit,count=6,indent=2,exist=((CCSH_INCLUDED==1 && USE_CCSH_ENCODER_TIME==1)) && ((GBL_PREV > 5) && (GBL_PREV > 7)),pos=none
    CCSH_ENCODER_TYPE, array,type=bit,count=1,maxsize=450,size=count_of({Pilot_Rec[]\SCH_Rec[]}(PILOT_INCL==1)),indent=2,exist=((CCSH_INCLUDED==1)) && ((GBL_PREV > 5) && (GBL_PREV > 7)),pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, UHDM Active Set Pilot 010 110 Rec, BitPack, OTTSName=CMsgUhdmActiveSetPilot010110
    PILOT_PN, bit,count=9,indent=2,exist=GBL_PREV > 5,pos=none
    SRCH_OFFSET, bit,count=3,indent=2,exist=((..\SRCH_OFFSET_INCL == 1)) && (GBL_PREV > 5),pos=none
    ADD_PILOT_REC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    OTD_Pilot_rec, record,type=OTD Pilot Rec,maxsize=1,exist=((ADD_PILOT_REC_INCL == 1)) && (GBL_PREV > 5)
    PWR_COMB_IND, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    CODE_CHAN_DCCH, bit,count=11,indent=2,exist=GBL_PREV > 5,pos=none
    QOF_MASK_ID_DCCH, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_SCH, bit,count=5,indent=2,exist=((..\..\..\SCH_INCL == 1)) && (GBL_PREV > 5),pos=none
    SCH_Rec, record,type=UHDM Active Set SCH Rec,maxsize=34,size=NUM_SCH,exist=((..\..\..\SCH_INCL==1 && NUM_SCH!=0)) && (GBL_PREV > 5)
End

Begin Record, UHDM Active Set Pilot 010 _3X_DCCH_INFO Rec, BitPack, OTTSName = CMsgUhdmActiveSet0103XDcchInfo
    _3X_DCCH_LOW_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    QOF_MASK_ID_DCCH_LOW, bit,count=2,indent=2,exist=((_3X_DCCH_LOW_INCL == 1)) && (GBL_PREV > 6),pos=none
    CODE_CHAN_DCCH_LOW, bit,count=11,indent=2,exist=((_3X_DCCH_LOW_INCL == 1)) && (GBL_PREV > 6),pos=none
    _3X_DCCH_HIGH_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    QOF_MASK_ID_DCCH_HIGH, bit,count=2,indent=2,exist=((_3X_DCCH_HIGH_INCL == 1)) && (GBL_PREV > 6),pos=none
    CODE_CHAN_DCCH_HIGH, bit,count=11,indent=2,exist=((_3X_DCCH_HIGH_INCL == 1)) && (GBL_PREV > 6),pos=none
    _3X_SCH_INFO_INCL, bit,count=1,indent=2,exist=((..\..\..\SCH_INCL !=0)) && (GBL_PREV > 6),pos=none
    SCH_INFO_Rec, record,type=UHDM Active Set Pilot 010 _3X_SCH_INFO Rec,maxsize=63,size=count_of({..\Pilot_Rec[]\SCH_Rec[]} (PILOT_INCL==1)),exist=(((..\..\..\SCH_INCL !=0)&&_3X_SCH_INFO_INCL==1)) && (GBL_PREV > 6)
End

Begin Record, UHDM Active Set Pilot 010 _3X_SCH_INFO Rec, BitPack, OTTSName=CMsgUhdmActiveSet0103XSchInfo
    FOR_SCH_ID, bit,count=1,indent=2,pos=none
    _3X_SCH_LOW_INCL, bit,count=1,indent=2,pos=none
    QOF_MASK_ID_SCH_LOW, bit,count=2,indent=2,exist=(_3X_SCH_LOW_INCL == 1),pos=none
    CODE_CHAN_SCH_LOW, bit,count=11,indent=2,exist=(_3X_SCH_LOW_INCL == 1),pos=none
    _3X_SCH_HIGH_INCL, bit,count=1,indent=2,pos=none
    QOF_MASK_ID_SCH_HIGH, bit,count=2,indent=2,exist=(_3X_SCH_HIGH_INCL == 1),pos=none
    CODE_CHAN_SCH_HIGH, bit,count=11,indent=2,exist=(_3X_SCH_HIGH_INCL == 1),pos=none
End

Begin Message, UHDM Active Set Rec 5 Rsp, BitPack, OTTSName=CMsgUhdmActiveSet101
    NUM_FOR_SCH, bit,count=5,indent=2,exist=((..\..\SCH_INCL == 1)) && (GBL_PREV > 5),pos=none
    FOR_SCH_Rec, record,type=UHDM Active Set FOR SCH Rec,maxsize=34,size=NUM_FOR_SCH,exist=GBL_PREV > 5
    NUM_REV_SCH, bit,count=5,indent=2,exist=((..\..\SCH_INCL == 1)) && (GBL_PREV > 5),pos=none
    REV_SCH_Rec, record,type=UHDM Active Set REV SCH Rec,maxsize=34,size=NUM_REV_SCH,exist=GBL_PREV > 5
    NUM_PILOTS, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    SRCH_OFFSET_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    Pilot_Rec, record,type=UHDM Active Set Pilot 101 Rec,maxsize=10,size=NUM_PILOTS,exist=GBL_PREV > 5
    _3X_FCH_INFO_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    _3X_FCH_Rec, record,type=UHDM Active Set Pilot 101 _3X_FCH_INFO Rec,maxsize=10,size=NUM_PILOTS,exist=((_3X_FCH_INFO_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6))
    CCSH_INCLUDED, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 7),pos=none
    USE_CCSH_ENCODER_TIME, bit,count=1,indent=2,exist=((CCSH_INCLUDED != 0)) && ((GBL_PREV > 5) && (GBL_PREV > 7)),pos=none
    CCSH_ENCODER_ACTION_TIME, bit,count=6,indent=2,exist=((CCSH_INCLUDED!=0 && USE_CCSH_ENCODER_TIME==1)) && ((GBL_PREV > 5) && (GBL_PREV > 7)),pos=none
    CCSH_ENCODER_TYPE, array,type=bit,count=1,maxsize=400,size=count_of({Pilot_Rec[]\SCH_Rec[]} (PILOT_INCL==1)),indent=2,exist=((CCSH_INCLUDED==1)) && ((GBL_PREV > 5) && (GBL_PREV > 7)),pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, UHDM Active Set Pilot 101 Rec, BitPack, OTTSName=CMsgUhdmActiveSetPilot101
    PILOT_PN, bit,count=9,indent=2,exist=GBL_PREV > 5,pos=none
    SRCH_OFFSET, bit,count=3,indent=2,exist=((..\SRCH_OFFSET_INCL == 1)) && (GBL_PREV > 5),pos=none
    ADD_PILOT_REC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    OTD_Pilot_rec, record,type=OTD Pilot Rec,maxsize=1,exist=((ADD_PILOT_REC_INCL == 1)) && (GBL_PREV > 5)
    PWR_COMB_IND, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    CODE_CHAN_FCH, bit,count=11,indent=2,exist=GBL_PREV > 5,pos=none
    QOF_MASK_ID_FCH, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_SCH, bit,count=5,indent=2,exist=((..\..\..\SCH_INCL == 1)) && (GBL_PREV > 5),pos=none
    SCH_Rec, record,type=UHDM Active Set SCH Rec,maxsize=63,size=NUM_SCH,exist=((..\..\..\SCH_INCL==1&&NUM_SCH!=0)) && (GBL_PREV > 5)
End

Begin Record, UHDM Active Set Pilot 101 _3X_FCH_INFO Rec, BitPack, OTTSName = CMsgUhdmActiveSetPilot1013XFchInfo
    _3X_FCH_LOW_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    QOF_MASK_ID_FCH_LOW, bit,count=2,indent=2,exist=((_3X_FCH_LOW_INCL !=0)) && (GBL_PREV > 6),pos=none
    CODE_CHAN_FCH_LOW, bit,count=11,indent=2,exist=((_3X_FCH_LOW_INCL !=0)) && (GBL_PREV > 6),pos=none
    _3X_FCH_HIGH_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    QOF_MASK_ID_FCH_HIGH, bit,count=2,indent=2,exist=((_3X_FCH_HIGH_INCL !=0)) && (GBL_PREV > 6),pos=none
    CODE_CHAN_FCH_HIGH, bit,count=11,indent=2,exist=((_3X_FCH_HIGH_INCL !=0)) && (GBL_PREV > 6),pos=none
    _3X_SCH_INFO_INCL, bit,count=1,indent=2,exist=((..\..\..\SCH_INCL !=0)) && (GBL_PREV > 6),pos=none
    SCH_Rec, record,type=UHDM _3X_SCH_INFO Rec,maxsize=63,size=count_of({..\Pilot_Rec[]\SCH_Rec[]} (PILOT_INCL)),exist=((..\..\..\SCH_INCL !=0 && _3X_SCH_INFO_INCL==1)) && (GBL_PREV > 6)
End

Begin Record, UHDM _3X_SCH_INFO Rec, BitPack, OTTSName = CMsgUhdmActiveSetPilot1013XSchInfo
    FOR_SCH_ID, bit,count=1,indent=2,pos=none
    _3X_SCH_LOW_INCL, bit,count=1,indent=2,pos=none
    QOF_MASK_ID_SCH_LOW, bit,count=2,indent=2,exist=(_3X_SCH_LOW_INCL==1),pos=none
    CODE_CHAN_SCH_LOW, bit,count=11,indent=2,exist=(_3X_SCH_LOW_INCL==1),pos=none
    _3X_SCH_HIGH_INCL, bit,count=1,indent=2,pos=none
    QOF_MASK_ID_SCH_HIGH, bit,count=2,indent=2,exist=(_3X_SCH_HIGH_INCL==1),pos=none
    CODE_CHAN_SCH_HIGH, bit,count=11,indent=2,exist=(_3X_SCH_HIGH_INCL==1),pos=none
End

Begin Message, UHDM Active Set Rec 6 Rsp, BitPack, OTTSName=CMsgUhdmActiveSet110
    NUM_FOR_SCH, bit,count=5,indent=2,exist=((..\..\SCH_INCL == 1)) && (GBL_PREV > 5),pos=none
    FOR_SCH_Rec, record,type=UHDM Active Set FOR SCH Rec,maxsize=34,size=NUM_FOR_SCH,exist=GBL_PREV > 5
    NUM_REV_SCH, bit,count=5,indent=2,exist=((..\..\SCH_INCL == 1)) && (GBL_PREV > 5),pos=none
    REV_SCH_Rec, record,type=UHDM Active Set REV SCH Rec,maxsize=34,size=NUM_REV_SCH,exist=GBL_PREV > 5
    NUM_PILOTS, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    SRCH_OFFSET_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    Pilot_Rec, record,type=UHDM Active Set Pilot 010 110 Rec,maxsize=10,size=NUM_PILOTS,exist=GBL_PREV > 5
    _3X_DCCH_INFO_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    _3X_DCCH_Rec, record,type=UHDM Active Set Pilot 010 _3X_DCCH_INFO Rec,maxsize=10,size=NUM_PILOTS,exist=((_3X_DCCH_INFO_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6))
    CCSH_INCLUDED, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 7),pos=none
    USE_CCSH_ENCODER_TIME, bit,count=1,indent=2,exist=((CCSH_INCLUDED==1)) && ((GBL_PREV > 5) && (GBL_PREV > 7)),pos=none
    CCSH_ENCODER_ACTION_TIME, bit,count=6,indent=2,exist=((CCSH_INCLUDED==1 && USE_CCSH_ENCODER_TIME==1)) && ((GBL_PREV > 5) && (GBL_PREV > 7)),pos=none
    CCSH_ENCODER_TYPE, array,type=bit,count=1,maxsize=400,size=count_of({Pilot_Rec[]\SCH_Rec[]} (PILOT_INCL==1)),indent=2,exist=((CCSH_INCLUDED==1)) && ((GBL_PREV > 5) && (GBL_PREV > 7)),pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, UHDM Active Set Rec 7 Rsp, BitPack, OTTSName=CMsgUhdmActiveSet111
    NUM_FOR_SCH, bit,count=5,indent=2,exist=((..\..\SCH_INCL == 1)) && (GBL_PREV > 5),pos=none
    FOR_SCH_Rec, record,type=UHDM Active Set FOR SCH Rec,maxsize=34,size=NUM_FOR_SCH,exist=GBL_PREV > 5
    NUM_REV_SCH, bit,count=5,indent=2,exist=((..\..\SCH_INCL == 1)) && (GBL_PREV > 5),pos=none
    REV_SCH_Rec, record,type=UHDM Active Set REV SCH Rec,maxsize=34,size=NUM_REV_SCH,exist=GBL_PREV > 5
    NUM_PILOTS, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    SRCH_OFFSET_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    Pilot_Rec, record,type=UHDM Active Set 111 Pilot Rec,maxsize=10,size=NUM_PILOTS,exist=GBL_PREV > 5
    _3X_FCH_INFO_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    _3X_DCCH_INFO_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    INFO_Rec, record,type=UHDM Active Set 111 Info Rec,maxsize=10,size=NUM_PILOTS,exist=((_3X_FCH_INFO_INCL==1||_3X_DCCH_INFO_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6))
    CCSH_INCLUDED, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 7),pos=none
    USE_CCSH_ENCODER_TIME, bit,count=1,indent=2,exist=((CCSH_INCLUDED==1)) && ((GBL_PREV > 5) && (GBL_PREV > 7)),pos=none
    CCSH_ENCODER_ACTION_TIME, bit,count=6,indent=2,exist=((CCSH_INCLUDED==1 && USE_CCSH_ENCODER_TIME==1)) && ((GBL_PREV > 5) && (GBL_PREV > 7)),pos=none
    CCSH_ENCODER_TYPE, array,type=bit,count=1,maxsize=400,size=count_of({Pilot_Rec[]\SCH_Rec[]} (PILOT_INCL==1)),indent=2,exist=((CCSH_INCLUDED==1)) && ((GBL_PREV > 5) && (GBL_PREV > 7)),pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, UHDM Active Set 111 Pilot Rec, BitPack, OTTSName=CMsgUhdmActiveSet111Pilot
    PILOT_PN, bit,count=9,indent=2,exist=GBL_PREV > 5,pos=none
    SRCH_OFFSET, bit,count=3,indent=2,exist=((..\SRCH_OFFSET_INCL == 1)) && (GBL_PREV > 5),pos=none
    ADD_PILOT_REC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    OTD_Pilot_rec, record,type=OTD Pilot Rec,maxsize=1,exist=((ADD_PILOT_REC_INCL == 1)) && (GBL_PREV > 5)
    PWR_COMB_IND, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    CODE_CHAN_FCH, bit,count=11,indent=2,exist=GBL_PREV > 5,pos=none
    QOF_MASK_ID_FCH, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    CODE_CHAN_DCCH, bit,count=11,indent=2,exist=GBL_PREV > 5,pos=none
    QOF_MASK_ID_DCCH, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_SCH, bit,count=5,indent=2,exist=((..\..\..\SCH_INCL == 1)) && (GBL_PREV > 5),pos=none
    SCH_Rec, record,type=UHDM Active Set 111 SCH Rec,maxsize=34,size=NUM_SCH,exist=((..\..\..\SCH_INCL == 1)) && (GBL_PREV > 5)
End

Begin Record, UHDM Active Set 111 SCH Rec, BitPack, OTTSName=CMsgUhdmActiveSet111SCH
    FOR_SCH_ID, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    SCCL_INDEX, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    PILOT_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    CODE_CHAN_SCH, bit,count=11,indent=2,exist=((PILOT_INCL == 1)) && (GBL_PREV > 5),pos=none
    QOF_MASK_ID_SCH, bit,count=2,indent=2,exist=((PILOT_INCL == 1)) && (GBL_PREV > 5),pos=none
End

Begin Record, UHDM Active Set 111 Info Rec, BitPack, OTTSName = CMsgUhdmActiveSet111Info
    _3X_FCH_LOW_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6) && ((..\_3X_FCH_INFO_INCL==1)),pos=none
    QOF_MASK_ID_FCH_LOW, bit,count=2,indent=2,exist=(( _3X_FCH_LOW_INCL==1)) && ((GBL_PREV > 6) && ((..\_3X_FCH_INFO_INCL==1))),pos=none
    CODE_CHAN_FCH_LOW, bit,count=11,indent=2,exist=(( _3X_FCH_LOW_INCL==1)) && ((GBL_PREV > 6) && ((..\_3X_FCH_INFO_INCL==1))),pos=none
    _3X_FCH_HIGH_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6) && ((..\_3X_FCH_INFO_INCL==1)),pos=none
    QOF_MASK_ID_FCH_HIGH, bit,count=2,indent=2,exist=(( _3X_FCH_HIGH_INCL==1)) && ((GBL_PREV > 6) && ((..\_3X_FCH_INFO_INCL==1))),pos=none
    CODE_CHAN_FCH_HIGH, bit,count=11,indent=2,exist=(( _3X_FCH_HIGH_INCL==1)) && ((GBL_PREV > 6) && ((..\_3X_FCH_INFO_INCL==1))),pos=none
    _3X_DCCH_LOW_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6) && ((..\_3X_DCCH_INFO_INCL==1)),pos=none
    QOF_MASK_ID_DCCH_LOW, bit,count=2,indent=2,exist=(( _3X_DCCH_LOW_INCL==1)) && ((GBL_PREV > 6) && ((..\_3X_DCCH_INFO_INCL==1))),pos=none
    CODE_CHAN_DCCH_LOW, bit,count=11,indent=2,exist=(( _3X_DCCH_LOW_INCL==1)) && ((GBL_PREV > 6) && ((..\_3X_DCCH_INFO_INCL==1))),pos=none
    _3X_DCCH_HIGH_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6) && ((..\_3X_DCCH_INFO_INCL==1)),pos=none
    QOF_MASK_ID_DCCH_HIGH, bit,count=2,indent=2,exist=(( _3X_DCCH_HIGH_INCL==1)) && ((GBL_PREV > 6) && ((..\_3X_DCCH_INFO_INCL==1))),pos=none
    CODE_CHAN_DCCH_HIGH, bit,count=11,indent=2,exist=(( _3X_DCCH_HIGH_INCL==1)) && ((GBL_PREV > 6) && ((..\_3X_DCCH_INFO_INCL==1))),pos=none
    _3X_SCH_INFO_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6) && ((..\..\..\SCH_INCL==1)),pos=none
    SCH_INFO_Rec, record,type=UHDM _3X_SCH_INFO Rec,maxsize=63,size=count_of({..\Pilot_Rec[]\SCH_Rec[]}(PILOT_INCL)),exist=((_3X_SCH_INFO_INCL==1)) && ((GBL_PREV > 6) && ((..\..\..\SCH_INCL==1)))
End

Begin Record, UHDM Active Set0 Rec, BitPack, OTTSName=CMsgUhdmActiveSet0Rec
    EXT_CH_IND, bit,count=5,indent=2,exist=GBL_PREV > 8,pos=none
    RESERVED, bit,count=3,indent=2,exist=GBL_PREV > 8,pos=none
    ExtFields_Rec, record,type=UHDM Active Set 0 ExtFields Rec,maxsize=1,exist=((EXT_CH_IND>0 && EXT_CH_IND<7)) && (GBL_PREV > 8)
End

Begin Message, FOR Traffic Msg Rec FTC - Extended Supplemental Channel Assignment Rsp, BitPack, OTTSName=CMsgFtcExtendedSupplementalChannelAssignment
    MsgRec, record, type = ESCAM Rec, maxsize=1
End

Begin Record, ESCAM Rec, BitPack
    START_TIME_UNIT, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    REV_SCH_DTX_DURATION, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    USE_T_ADD_ABORT, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    USE_SCRM_SEQ_NUM, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    SCRM_SEQ_NUM, bit,count=4,indent=2,exist=((USE_SCRM_SEQ_NUM == 1)) && (GBL_PREV > 5),pos=none
    ADD_INFO_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_PRI_CHAN, bit,count=1,indent=2,exist=((ADD_INFO_INCL == 1)) && (GBL_PREV > 5),pos=none
    REV_CFG_INCLUDED, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_REV_CFG_RECS, bit,count=5,indent=2,exist=((REV_CFG_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    REV_SCH_Config_Rec, record,type=ESCAM REV SCH Config Rec,maxsize=32,exist=((REV_CFG_INCLUDED == 1)) && (GBL_PREV > 5),size=(NUM_REV_CFG_RECS + 1)
    NUM_REV_SCH, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    REV_SCH_Rec, record,type=ESCAM REV SCH Rec,maxsize=3,size=NUM_REV_SCH,exist=GBL_PREV > 5
    FOR_CFG_INCLUDED, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_SCH_FER_REP, bit,count=1,indent=2,exist=((FOR_CFG_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    NUM_FOR_CFG_RECS, bit,count=5,indent=2,exist=((FOR_CFG_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    FOR_SCH_Config_Rec, record,type=ESCAM FOR SCH Config Rec,maxsize=32,exist=((FOR_CFG_INCLUDED == 1)) && (GBL_PREV > 5),size=(NUM_FOR_CFG_RECS + 1)
    NUM_FOR_SCH, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_SCH_Rec, record,type=ESCAM FOR SCH Rec,maxsize=3,size=NUM_FOR_SCH,exist=GBL_PREV > 5
    FPC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_MODE_SCH, bit,count=3,indent=2,exist=((FPC_INCL == 1)) && (GBL_PREV > 5),pos=none
    FPC_SCH_INIT_SETPT_OP, bit,count=1,indent=2,exist=((FPC_INCL == 1)) && (GBL_PREV > 5),pos=none
    FPC_SEC_CHAN, bit,count=1,indent=2,exist=((FPC_INCL == 1) && ((FPC_MODE_SCH == 1) || (FPC_MODE_SCH == 2))) && (GBL_PREV > 5),pos=none
    NUM_SUP, bit,count=2,indent=2,exist=((FPC_INCL == 1)) && (GBL_PREV > 5),pos=none
    FPC_SCH_Rec, record,type=ESCAM FPC SCH Rec,maxsize=3,size=NUM_SUP,exist=GBL_PREV > 5
    FPC_THRESH_SCH_INCL, bit,count=1,indent=2,exist=((FPC_INCL == 1)) && (GBL_PREV > 5),pos=none
    FPC_SETPT_THRESH_SCH, bit,count=8,indent=2,exist=((FPC_THRESH_SCH_INCL == 1)) && (GBL_PREV > 5),pos=none
    RPC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    RPC_NUM_SUP, bit,count=1,indent=2,exist=((RPC_INCL == 1)) && (GBL_PREV > 5),pos=none
    Misc_Rec, record,type=ESCAM Misc Rec,maxsize=2,exist=((RPC_INCL == 1)) && (GBL_PREV > 5),size=(RPC_NUM_SUP + 1)
    _3X_SCH_INFO_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    NUM_3X_CFG, bit,count=2,indent=2,exist=((_3X_SCH_INFO_INCL == 1)) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    SCH_INFO_Rec, record,type=ESCAM 3X_SCH_INFO Rec,maxsize=3,size=NUM_3X_CFG,exist=((_3X_SCH_INFO_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6))
    CCSH_INCLUDED, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 7),pos=none
    FOR_SCH_CC_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 7),pos=none
    FOR_SCH_CC_Rec, record,type=FOR Info Rec FOR SCH Rec,maxsize=5,size=NUM_FOR_SCH,exist=((FOR_SCH_CC_INCL==1)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 7))
    REV_SCH_CC_INCL, bit,count=1,indent=2,exist=((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 7),pos=none
    REV_SCH_CC_Rec, record,type=FOR Info Rec REV SCH Rec,maxsize=5,size=NUM_REV_SCH,exist=((REV_SCH_CC_INCL==1)) && (((GBL_PREV > 5) && (GBL_PREV > 6)) && (GBL_PREV > 7))
End

Begin Record, ESCAM REV SCH Config Rec, BitPack, OTTSName=CMsgESCAMRevSchConfig
    REV_SCH_ID, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_WALSH_ID, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_SCH_RATE, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, ESCAM REV SCH Rec, BitPack, OTTSName=CMsgESCAMRevSch
    REV_SCH_ID, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_SCH_DURATION, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    REV_SCH_START_TIME_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    REV_SCH_START_TIME, bit,count=5,indent=2,exist=((REV_SCH_START_TIME_INCL == 1)) && (GBL_PREV > 5),pos=none
    REV_SCH_RATE, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, ESCAM FOR SCH Config Rec, BitPack, OTTSName=CMsgESCAMForSchConfig
    FOR_SCH_ID, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    SCCL_INDEX, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_SCH_RATE, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_SUP_SHO, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    SUP_SHO_Rec, record,type=ESCAM SUP SHO Rec,maxsize=10,size=(NUM_SUP_SHO + 1),exist=GBL_PREV > 5
End

Begin Record, ESCAM SUP SHO Rec, BitPack, OTTSName=CMsgESCAMSupSho
    PILOT_PN, bit,count=9,indent=2,exist=GBL_PREV > 5,pos=none
    ADD_PILOT_REC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    OTD_Pilot_rec, record,type=OTD Pilot Rec,maxsize=1,exist=((ADD_PILOT_REC_INCL == 1)) && (GBL_PREV > 5)
    FOR_SCH_CC_INDEX, bit,count=11,indent=2,exist=GBL_PREV > 5,pos=none
    QOF_MASK_ID_SCH, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, ESCAM FOR SCH Rec, BitPack, OTTSName=CMsgESCAMForSch
    FOR_SCH_ID, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_SCH_DURATION, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_SCH_START_TIME_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FOR_SCH_START_TIME, bit,count=5,indent=2,exist=((FOR_SCH_START_TIME_INCL == 1)) && (GBL_PREV > 5),pos=none
    SCCL_INDEX, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, ESCAM FPC SCH Rec, BitPack, OTTSName=CMsgESCAMFpcSch
    SCH_ID, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_SCH_FER, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_SCH_INIT_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_SCH_MIN_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_SCH_MAX_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, ESCAM Misc Rec, BitPack, OTTSName=CMsgESCAMMisc
    SCH_ID, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    RLGAIN_SCH_PILOT, bit,count=6,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, ESCAM 3X_SCH_INFO Rec, BitPack, OTTSName=CMsgESCAM3XSchInfo
    FOR_SCH_ID, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    NUM_3X_REC, bit,count=5,indent=2,exist=GBL_PREV > 6,pos=none
    SCCL_INDEX, array,type=bit,count=4,maxsize=40,size=(NUM_3X_REC+1),indent=2,exist=GBL_PREV > 6,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Mobile Assited Burst Op Param Rsp, BitPack, OTTSName=CMsgFtcMobileAssistedBurstOpParam
    MsgRec, record, type = MABOPM Rec, maxsize=1
End

Begin Record, MABOPM Rec, BitPack
    ORDER_FLAG, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    PS_MIN_DELTA, bit,count=3,indent=2,exist=((ORDER_FLAG == 1)) && (GBL_PREV > 5),pos=none
    ORDER_INTERVAL, bit,count=3,indent=2,exist=((ORDER_FLAG == 1)) && (GBL_PREV > 5),pos=none
    PERIODIC_FLAG, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_PILOTS, bit,count=3,indent=2,exist=((PERIODIC_FLAG == 1)) && (GBL_PREV > 5),pos=none
    PERIODIC_INTERVAL, bit,count=6,indent=2,exist=((PERIODIC_FLAG == 1)) && (GBL_PREV > 5),pos=none
    THRESHOLD_FLAG, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    PS_FLOOR_HIGH, bit,count=6,indent=2,exist=((THRESHOLD_FLAG == 1)) && (GBL_PREV > 5),pos=none
    PS_FLOOR_LOW, bit,count=6,indent=2,exist=((THRESHOLD_FLAG == 1)) && (GBL_PREV > 5),pos=none
    PS_CEILING_HIGH, bit,count=6,indent=2,exist=((THRESHOLD_FLAG == 1)) && (GBL_PREV > 5),pos=none
    PS_CEILING_LOW, bit,count=6,indent=2,exist=((THRESHOLD_FLAG == 1)) && (GBL_PREV > 5),pos=none
    THRESHOLD_INTERVAL, bit,count=6,indent=2,exist=((THRESHOLD_FLAG == 1)) && (GBL_PREV > 5),pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - User Zone Reject Rsp, BitPack, OTTSName=CMsgFtcUserZoneReject
    MsgRec, record, type = UZRM Rec, maxsize=1
End

Begin Record, UZRM Rec, BitPack
    REJECT_UZID, bit,count=16,indent=2,exist=GBL_PREV > 5,pos=none
    REJECT_ACTION_INDI, bit,count=3,indent=2,exist=GBL_PREV > 5,pos=none
    UZID_ASSIGN_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    ASSIGN_UZID, bit,count=16,indent=2,exist=((UZID_ASSIGN_INCL == 1)) && (GBL_PREV > 5),pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - User Zone Update Rsp, BitPack, OTTSName=CMsgFtcUserZoneUpdate
    UZID, bit,count=16,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Call Assignment Rsp, BitPack, OTTSName=CMsgFtcCallAssignment
    MsgRec, record, type = CLAM Rec, maxsize=1
End

Begin Record, CLAM Rec, BitPack
    RESPONSE_IND, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    TAG, bit,count=4,indent=2,exist=((RESPONSE_IND==1)) && (GBL_PREV > 6),pos=none
    ACCEPT_IND, bit,count=1,indent=2,exist=((RESPONSE_IND==1)) && (GBL_PREV > 6),pos=none
    REJECT_PKDATA_IND, bit,count=1,indent=2,exist=((ACCEPT_IND==0)) && (GBL_PREV > 6),pos=none
    BYPASS_ALERT_ANSWER, bit,count=1,indent=2,exist=((RESPONSE_IND==0)) && (GBL_PREV > 6),pos=none
    SO_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    SO, bit,count=16,indent=2,exist=((SO_INCL==1)) && (GBL_PREV > 6),pos=none
    CON_REF_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    CON_REF, bit,count=8,indent=2,exist=((CON_REF_INCL==1)) && (GBL_PREV > 6),pos=none
    USE_OLD_SERV_CONFIG, bit,count=1,indent=2,exist=((ACCEPT_IND==1)) && ((GBL_PREV > 6) && ((GBL_PREV > 8))),pos=none
    SR_ID, bit,count=3,indent=2,exist=((USE_OLD_SERV_CONFIG==1)) && ((GBL_PREV > 6) && ((GBL_PREV > 8))),pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Extended Alert With Information Rsp, BitPack, OTTSName=CMsgFtcExtAlertWithInfo
    MsgRec, record, type = EAWIM Rec, maxsize=1
End

Begin Record, EAWIM Rec, BitPack, OTTSName=CMsgFtcExtAlertWithInfo
    CON_REF_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    CON_REF, bit,count=8,indent=2,exist=((CON_REF_INCL==1)) && (GBL_PREV > 6),pos=none
    NUM_REC, bit,count=4,indent=8,exist=GBL_PREV > 6,pos=none
    Rec, record,type=FOR Information Rec,maxsize=20,size=NUM_REC,exist=GBL_PREV > 6
End

Begin Message, FOR Traffic Msg Rec FTC - DS-41 Inter-System Transfer Rsp, BitPack, OTTSName=CMsgFtcDS41InterSysTransfer
    Data, array,type=uint8,maxsize=100,size=end,indent=2,exist=GBL_PREV > 6
End

Begin Message, FOR Traffic Msg Rec FTC - Extended Flash With Information Rsp, BitPack, OTTSName=CMsgFtcExtFlashWithInfo
    MsgRec, record, type = EFWIM Rec, maxsize=1
End

Begin Record, EFWIM Rec, BitPack, OTTSName=CMsgFtcExtFlashWithInfo
    CON_REF_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    CON_REF, bit,count=8,indent=2,exist=((CON_REF_INCL==1)) && (GBL_PREV > 6),pos=none
    NUM_REC, bit,count=4,indent=8,exist=GBL_PREV > 6,pos=none
    Rec, record,type=FOR Information Rec,maxsize=15,size=NUM_REC,exist=GBL_PREV > 6
End

Begin Message, FOR Traffic Msg Rec FTC - Security Mode Command Rsp, BitPack, OTTSName=CMsgFtcSecurityModeCmd
    MsgRec, record, type = SMCM Rec, maxsize=1
End

Begin Record, SMCM Rec, BitPack
    USE_TIME, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    ACTION_TIME, bit,count=6,indent=2,exist=((USE_TIME==1)) && (GBL_PREV > 6),pos=none
    D_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=GBL_PREV > 6,pos=none
    NUM_RECS, bit,count=3,indent=2,exist=GBL_PREV > 6,pos=none
    Rec, record,type=User Info Encryption Rec,maxsize=7,size=NUM_RECS,exist=GBL_PREV > 6
    ENC_KEY_SIZE, bit,count=3,indent=2,exist=((D_SIG_ENCRYPT_MODE==1)) && (GBL_PREV > 6),pos=none
    C_SIG_ENCRYPT_MODE_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    C_SIG_ENCRYPT_MODE, bit,count=3,indent=2,exist=((C_SIG_ENCRYPT_MODE_INCL==1)) && (GBL_PREV > 6),pos=none
    MSG_INT_INFO_INCL, bit,count=1,indent=2,exist=(GBL_PREV > 6) && (GBL_PREV > 8),pos=none
    CHANGE_KEYS, bit,count=1,indent=2,exist=((MSG_INT_INFO_INCL==1)) && ((GBL_PREV > 6) && (GBL_PREV > 8)),pos=none
    USE_UAK, bit,count=1,indent=2,exist=((MSG_INT_INFO_INCL==1)) && ((GBL_PREV > 6) && (GBL_PREV > 8)),pos=none
End

Begin Record, User Info Encryption Rec, BitPack, OTTSName=CMsgSMCMRec
    CON_REF, bit,count=8,indent=2,exist=GBL_PREV > 6,pos=none
    UI_ENCRYPT_MODE, bit,count=3,indent=2,exist=GBL_PREV > 6,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - MC-MAP L3 Rsp, BitPack, OTTSName=CMsgFtcMCMapL3
End

Begin Message, FOR Traffic Msg Rec FTC - MC-MAP Inter-Sys HO Command Rsp, BitPack, OTTSName=CMsgFtcMCMapInterSysHOCmd
End

Begin Message, FOR Traffic Msg Rec FTC - MC-MAP Dedicated Mode Paging Rsp, BitPack, OTTSName=CMsgFtcMCMapDedicatedModePaging
End

Begin Message, FOR Traffic Msg Rec FTC - R-TMSI Assignment Rsp, BitPack, OTTSName=CMsgFtcRTMSIAssignment
End

Begin Message, FOR Traffic Msg Rec FTC - MC-MAP Flow Release Rsp, BitPack, OTTSName=CMsgFtcMCMapFlowRelease
End

Begin Message, FOR Traffic Msg Rec FTC - BS Status Response Rsp, BitPack, OTTSName=CMsgFtcBSStatusResponse
    MsgRec, record, type = BSSRSPM Rec, maxsize=1
End

Begin Record, BSSRSPM Rec, BitPack
    Qual_Rec, record,type=Qual Info Rec,maxsize=1,exist=GBL_PREV > 6
    NUM_RECORDS, bit,count=4,indent=2,exist=GBL_PREV > 6,pos=none
    Rec, record,type=BSSRSPM Info Rec,maxsize=20,size=NUM_RECORDS,exist=GBL_PREV > 6
End

Begin Record, BSSRSPM Info Rec, BitPack, OTTSName=CMsgBSSRSPMInfo
    RECORD_TYPE, bit,count=8,base=enum:BSSRSPM Record Type enum,indent=2,exist=GBL_PREV > 6,pos=none
    RECORD_LEN, bit,count=8,indent=2,exist=GBL_PREV > 6,pos=none
    Rec, union,enum=RECORD_TYPE,indent=2,consumebytes=RECORD_LEN,exist=GBL_PREV > 6
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 6,pos=none
End

Begin Message, BSSRSPM Info Rec Pilot Information Rsp, BitPack, OTTSName=CMsgBSSRSPMPilotInfo
    NUM_PILOTS, bit,count=4,indent=2,exist=GBL_PREV > 6,pos=none
    SID_NID_IND, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    Pilot_Rec, record,type=BSSRSPM Pilot Rec,maxsize=20,size=NUM_PILOTS,exist=GBL_PREV > 6
End

Begin Record, BSSRSPM Pilot Rec, BitPack, OTTSName=CMsgBSSRSPMPilotRec
    RECORD_LEN, bit,count=4,indent=2,exist=GBL_PREV > 6,pos=none
    PILOT_PN, bit,count=9,indent=2,exist=GBL_PREV > 6,pos=none
    BASE_ID, bit,count=16,indent=2,exist=GBL_PREV > 6,pos=none
    SID_NID_INCL, bit,count=1,indent=2,exist=((..\SID_NID_IND==1)) && (GBL_PREV > 6),pos=none
    SID, bit,count=15,indent=2,exist=((..\SID_NID_IND==1 &&     SID_NID_INCL==1)) && (GBL_PREV > 6),pos=none
    NID, bit,count=16,indent=2,exist=((..\SID_NID_IND==1 &&     SID_NID_INCL==1)) && (GBL_PREV > 6),pos=none
    RESERVED_1, bit,count=-8,indent=2,exist=GBL_PREV > 6,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Authentication Request Rsp, BitPack, OTTSName=CMsgFtcAuthRequest
    MsgRec, record, type = AUREQM Rec, maxsize=1
End

Begin Record, AUREQM Rec, BitPack, OTTSName=CMsgFtcAuthRequest
    RANDA, array,type=uint8,maxsize=16,size=16,indent=2,exist=GBL_PREV > 8
    CON_SQN, bit,count=48,indent=2,exist=GBL_PREV > 8,base=16,pos=none
    AMF, bit,count=16,indent=2,exist=GBL_PREV > 8,pos=none
    MAC_A, bit,count=64,indent=2,exist=GBL_PREV > 8,base=16,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Rate Change Rsp, BitPack, OTTSName=CMsgFtcRateChange
    MsgRec, record, type = RATCHGM Rec, maxsize=1
End

Begin Record, RATCHGM Rec, BitPack
    USE_TIME, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    ACTION_TIME, bit,count=6,indent=2,exist=GBL_PREV > 8,pos=none
    REV_CQICH_RATE_CHANGE_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    FULL_CI_FEEDBACK_IND, bit,count=1,indent=2,exist=((REV_CQICH_RATE_CHANGE_INCL!=0)) && (GBL_PREV > 8),pos=none
    REV_CQICH_REPS, bit,count=2,indent=2,exist=((REV_CQICH_RATE_CHANGE_INCL!=0)) && (GBL_PREV > 8),pos=none
    SWITCHING_PARAMS_INCL, bit,count=1,indent=2,exist=((REV_CQICH_RATE_CHANGE_INCL!=0)) && (GBL_PREV > 8),pos=none
    NUM_SOFT_SWITCHING_FRAMES, bit,count=4,indent=2,exist=((REV_CQICH_RATE_CHANGE_INCL!=0 && SWITCHING_PARAMS_INCL!=0)) && (GBL_PREV > 8),pos=none
    NUM_SOFTER_SWITCHING_FRAMES, bit,count=4,indent=2,exist=((REV_CQICH_RATE_CHANGE_INCL!=0 && SWITCHING_PARAMS_INCL!=0)) && (GBL_PREV > 8),pos=none
    NUM_SOFT_SWITCHING_FRAMES_CHM, bit,count=4,indent=2,exist=((REV_CQICH_RATE_CHANGE_INCL!=0 && SWITCHING_PARAMS_INCL!=0)) && (GBL_PREV > 8),pos=none
    NUM_SOFTER_SWITCHING_FRAMES_CHM, bit,count=4,indent=2,exist=((REV_CQICH_RATE_CHANGE_INCL!=0 && SWITCHING_PARAMS_INCL!=0)) && (GBL_PREV > 8),pos=none
    RL_CQICH_ATT_ADJ_GAIN_INCL, bit,count=1,indent=2,exist=((REV_CQICH_RATE_CHANGE_INCL!=0 )) && (GBL_PREV > 8),pos=none
    NUM_RECS, bit,count=1,indent=2,exist=((REV_CQICH_RATE_CHANGE_INCL!=0 && RL_CQICH_ATT_ADJ_GAIN_INCL!=0)) && (GBL_PREV > 8),pos=none
    RL_CQICH_Rec, record,type=RATCHGM RL_CQICH Rec,maxsize=2,size=(NUM_RECS+1),exist=((REV_CQICH_RATE_CHANGE_INCL!=0 && RL_CQICH_ATT_ADJ_GAIN_INCL!=0)) && (GBL_PREV > 8)
    REV_ACKCH_RATE_CHANGE_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    REV_ACKCH_REPS, bit,count=2,indent=2,exist=((REV_ACKCH_RATE_CHANGE_INCL==1)) && (GBL_PREV > 8),pos=none
End

Begin Record, RATCHGM RL_CQICH Rec, BitPack, OTTSName=CMsgFtcRATCHGMRLCQICHRec
    RL_CQICH_ATT_ADJ_GAIN_TYPE, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    RL_CQICH_ATT_ADJ_GAIN_HIGH_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    RL_CQICH_ATT_ADJ_GAIN_HIGH, bit,count=8,indent=2,exist=((RL_CQICH_ATT_ADJ_GAIN_HIGH_INCL==1)) && (GBL_PREV > 8),pos=none
    RL_CQICH_ATT_ADJ_GAIN_LOW_INCL, bit,count=1,indent=2,exist=GBL_PREV > 8,pos=none
    RL_CQICH_ATT_ADJ_GAIN_LOW, bit,count=8,indent=2,exist=((RL_CQICH_ATT_ADJ_GAIN_LOW_INCL==1)) && (GBL_PREV > 8),pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - MEID Universal Handoff Direction Rsp, BitPack, OTTSName=CMsgFtcUniversalHandoffDirection
    MsgRec, record, type = MUHDM Rec, maxsize=1
End

Begin Record, MUHDM Rec, BitPack
    USE_TIME, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    ACTION_TIME, bit,count=6,indent=2,exist=((USE_TIME == 1)) && (GBL_PREV > 5),pos=none
    HDM_SEQ, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    PARMS_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    P_REV, bit,count=8,indent=2,exist=((PARMS_INCL == 1)) && (GBL_PREV > 5),pos=none
    SERV_NEG_TYPE, bit,count=1,indent=2,exist=((PARMS_INCL == 1)) && (GBL_PREV > 5),pos=none
    SEARCH_INCLUDED, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    SRCH_WIN_A, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    SRCH_WIN_N, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    SRCH_WIN_R, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    T_ADD, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    T_DROP, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    T_COMP, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    T_TDROP, bit,count=4,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    SOFT_SLOP, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    ADD_INTERCEPT, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    DROP_INTERCEPT, bit,count=6,indent=2,exist=((SEARCH_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    EXTRA_PARMS, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    PACKET_ZONE_ID, bit,count=8,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    FRAME_OFFSET, bit,count=4,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    PRIVATE_LCM, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    RESET_L2, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    RESET_FPC, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    ENCRYPT_MODE, bit,count=2,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    NOM_PWR_EXT, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    NOM_PWR, bit,count=4,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    RLGAIN_TRAFFIC_PILOT, bit,count=6,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    DEFAULT_RLAG, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    NUM_PREAMBLE, bit,count=3,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    BAND_CLASS, bit,count=5,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    CDMA_FREQ, bit,count=11,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    RETURN_IF_HANDOFF_FAIL, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    COMPLETE_SEARCH, bit,count=1,indent=2,exist=((RETURN_IF_HANDOFF_FAIL == 1)) && (GBL_PREV > 5),pos=none
    PERIODIC_SEARCH, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    SCR_INCLUDED, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    SERV_CON_SEQ, bit,count=3,indent=2,exist=((SCR_INCLUDED == 1)) && (GBL_PREV > 5),pos=none
    Service_Config_Rec, record,type=FOR Information Rec,maxsize=1,exist=((SCR_INCLUDED == 1)) && (GBL_PREV > 5)
    NNSCR_INCLUDED, bit,count=1,indent=2,exist=((EXTRA_PARMS == 1)) && (GBL_PREV > 5),pos=none
    NonNegotiabl_Rec, record,type=FOR Information Rec,maxsize=1,exist=((NNSCR_INCLUDED == 1)) && (GBL_PREV > 5)
    USE_PWR_CNTL_STEP, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    PWR_CNTL_STEP, bit,count=3,indent=2,exist=((USE_PWR_CNTL_STEP == 1)) && (GBL_PREV > 5),pos=none
    CLEAR_RETRY_DELAY, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    SCH_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_FOR_ASSIGN, bit,count=2,indent=2,exist=((SCH_INCL == 1)) && (GBL_PREV > 5),pos=none
    FOR_SCH_Rec, record,type=UHDM FOR SCH Rec,maxsize=100,size=NUM_FOR_ASSIGN,exist=GBL_PREV > 5
    NUM_REV_ASSIGN, bit,count=2,indent=2,exist=((SCH_INCL == 1)) && (GBL_PREV > 5),pos=none
    REV_SCH_Rec, record,type=UHDM REV SCH Rec,maxsize=100,size=NUM_REV_ASSIGN,exist=GBL_PREV > 5
    FPC_SUBCHAN_GAIN, bit,count=5,indent=2,exist=GBL_PREV > 5,pos=none
    USE_PC_TIME, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    PC_ACTION_TIME, bit,count=6,indent=2,exist=((USE_PC_TIME == 1)) && (GBL_PREV > 5),pos=none
    Active_Set_Rec, record,type=UHDM Active Set Rec,maxsize=1,exist=GBL_PREV > 5
    RESERVED_BLOB_LENGTH8, bit,count=8,indent=2,exist=(((ENCRYPT_MODE != 2) && (SCR_INCLUDED != 1) && (NNSCR_INCLUDED != 1))) && (GBL_PREV > 5),pos=none
    RESERVED_BLOB_LENGTH9, bit,count=9,indent=2,exist=(((ENCRYPT_MODE != 2) && (SCR_INCLUDED != 1) && (NNSCR_INCLUDED == 1))) && (GBL_PREV > 5),pos=none
    RESERVED_BLOB_LENGTH10, bit,count=10,indent=2,exist=(((ENCRYPT_MODE != 2) && (SCR_INCLUDED == 1))) && (GBL_PREV > 5),pos=none
    RESERVED_BLOB_LENGTH11, bit,count=11,indent=2,exist=(((ENCRYPT_MODE == 2) && (SCR_INCLUDED != 1) && (NNSCR_INCLUDED != 1))) && (GBL_PREV > 5),pos=none
    RESERVED_BLOB_LENGTH12, bit,count=12,indent=2,exist=(((ENCRYPT_MODE == 2) && (SCR_INCLUDED != 1) && (NNSCR_INCLUDED == 1))) && (GBL_PREV > 5),pos=none
    RESERVED_BLOB_LENGTH13, bit,count=13,indent=2,exist=(((ENCRYPT_MODE == 2) && (SCR_INCLUDED == 1))) && (GBL_PREV > 5),pos=none
    PLCM_TYPE_INCL, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
    PLCM_TYPE, bit,count=4,indent=2,exist=((PLCM_TYPE_INCL == 1)) && (GBL_PREV > 5),pos=none
    PLCM_39, bit,count=39,indent=2,exist=((PLCM_TYPE == 1)) && (GBL_PREV > 5),base=16,pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, FOR Traffic Msg Rec FTC - Radio Configuration Parameters Rsp, BitPack, OTTSName=CMsgFtcRadioConfigurationParameter
    MsgRec, record, type = Radio Config Params Rec, maxsize=1
End

Begin Message, FOR Traffic Msg Rec FTC - Alternate Tech Info Rsp, BitPack, OTTSName=CMsgFtcAlternateTechInfo
    MsgRec, record, type = ATIM Rec, maxsize=1
End

Begin Record, ATIM Rec, BitPack
    NUM_RADIO_INTERFACE, bit,count=4,indent=2,pos=none
    Rec, record, type=ATI Rec, maxsize=15, size=NUM_RADIO_INTERFACE
End

Begin Message, FOR Traffic Msg Rec FTC - General Extension Rsp, BitPack, OTTSName=CMsgFtcGeneralExtension
    Msg_record, record, type = FTC - General Extension Msg Rec, maxsize = 1
End

Begin Record, FTC - General Extension Msg Rec, BitPack, OTTSName=CMsgRecFtcGeneralExtension
    NUM_GE_REC, bit,count=8,indent=2,pos=none
    GE_Records, record, type = FTC General Extension Rec, maxsize = 7, exist = (NUM_GE_REC != 0), size = (NUM_GE_REC)
    MESSAGE_TYPE, bit,count=8,indent=2,base=enum:FOR Traffic Msg Enum,pos=none
    Msg, union, enum=MESSAGE_TYPE
End

Begin Message, FTC - General Extension Msg Rec FTC - Order Rsp, BitPack
    MsgRec, record, type = ORDRM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Authentication Challenge Rsp, BitPack
    MsgRec, record, type = AUCM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Alert With Information Rsp, BitPack
    INFO_Rec, record, type=FOR Information Rec, maxsize=10, size=end, minbytes=4
End

Begin Message, FTC - General Extension Msg Rec FTC - Data Burst Rsp, BitPack
    BURST_Rec, record, type = FOR Burst Type Rec, maxsize = 1
End

Begin Message, FTC - General Extension Msg Rec FTC - Obsolete Handoff Direction Rsp, BitPack
    Data, array, type=uint8, maxsize=100, size=end
End

Begin Message, FTC - General Extension Msg Rec FTC - Analog Handoff Direction Rsp, BitPack
    Data, array, type=uint8, maxsize=100, size=end
End

Begin Message, FTC - General Extension Msg Rec FTC - In-Traffic System Parameters Rsp, BitPack
    MsgRec, record, type = ITSPM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Neighbor List Update Rsp, BitPack
    MsgRec, record, type = NLUM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Send Burst DTMF Rsp, BitPack
    MsgRec, record, type = BDTMFM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Power Control Parameters Rsp, BitPack
    MsgRec, record, type = PCNPM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Retrieve Parameters Rsp, BitPack
    PARAMETER_ID, array, type=uint16, maxsize=128, size=end, indent=2
End

Begin Message, FTC - General Extension Msg Rec FTC - Set Parameters Rsp, BitPack
    PARAMETER_Rec, record, type = Parameter Rec, maxsize = 100, size = end
End

Begin Message, FTC - General Extension Msg Rec FTC - SSD Update Rsp, BitPack
    RANDSSD, bit,count=56,indent=2,base=16,pos=none
End

Begin Message, FTC - General Extension Msg Rec FTC - Flash With Information Rsp, BitPack
    INFO_Rec, record, type=FOR Information Rec, maxsize=20, size=end, minbytes=4
End

Begin Message, FTC - General Extension Msg Rec FTC - Mobile Station Registered Rsp, BitPack
    MsgRec, record, type = MSRM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Status Request Rsp, BitPack
    MsgRec, record, type = STRQM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Extended Handoff Direction Rsp, BitPack
    MsgRec, record, type = EHDM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Service Request Rsp, BitPack
    MsgRec, record, type = SRQM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Service Response Rsp, BitPack
    MsgRec, record, type = SRPM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Service Connect Rsp, BitPack
    MsgRec, record, type = SCM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Service Option Control Rsp, BitPack
    MsgRec, record, type = SOCM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - TMSI Assignment Rsp, BitPack
    MsgRec, record, type = TASM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Service Redirection Rsp, BitPack
    MsgRec, record, type = SRDM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Supplemental Channel Assignment Rsp, BitPack
    MsgRec, record, type = SCAM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Power Control Rsp, BitPack
    MsgRec, record, type = PCNM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Extended Neighbor List Update Rsp, BitPack
    MsgRec, record, type = ENLUM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Candidate Frequency Search Request Rsp, BitPack
    MsgRec, record, type = CFSRQM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Candidate Frequency Search Control Rsp, BitPack
    MsgRec, record, type = CFSCNM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Power Up Function Rsp, BitPack
    MsgRec, record, type = PUFM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Power Up Function Completion Rsp, BitPack
    MsgRec, record, type = PUFCM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - General Handoff Direction Rsp, BitPack
    MsgRec, record, type = GHDM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Resource Allocation Rsp, BitPack
    MsgRec, record, type = RAM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Extended Release Rsp, BitPack
    MsgRec, record, type = ERM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Universal Handoff Direction Rsp, BitPack
    MsgRec, record, type = UHDM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Extended Supplemental Channel Assignment Rsp, BitPack
    MsgRec, record, type = ESCAM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Mobile Assited Burst Op Param Rsp, BitPack
    MsgRec, record, type = MABOPM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - User Zone Reject Rsp, BitPack
    MsgRec, record, type = UZRM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - User Zone Update Rsp, BitPack
    UZID, bit,count=16,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, FTC - General Extension Msg Rec FTC - Call Assignment Rsp, BitPack
    MsgRec, record, type = CLAM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Extended Alert With Information Rsp, BitPack
    MsgRec, record, type = EAWIM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - DS-41 Inter-System Transfer Rsp, BitPack
    Data, array, type=uint8, maxsize=100, size=end, indent=2
End

Begin Message, FTC - General Extension Msg Rec FTC - Extended Flash With Information Rsp, BitPack
    MsgRec, record, type = EFWIM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Security Mode Command Rsp, BitPack
    MsgRec, record, type = SMCM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - MC-MAP L3 Rsp, BitPack
End

Begin Message, FTC - General Extension Msg Rec FTC - MC-MAP Inter-Sys HO Command Rsp, BitPack
End

Begin Message, FTC - General Extension Msg Rec FTC - MC-MAP Dedicated Mode Paging Rsp, BitPack
End

Begin Message, FTC - General Extension Msg Rec FTC - R-TMSI Assignment Rsp, BitPack
End

Begin Message, FTC - General Extension Msg Rec FTC - MC-MAP Flow Release Rsp, BitPack
End

Begin Message, FTC - General Extension Msg Rec FTC - BS Status Response Rsp, BitPack
    MsgRec, record, type = BSSRSPM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Authentication Request Rsp, BitPack
    MsgRec, record, type = AUREQM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Rate Change Rsp, BitPack
    MsgRec, record, type = RATCHGM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - MEID Universal Handoff Direction Rsp, BitPack
    MsgRec, record, type = MUHDM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Radio Configuration Parameters Rsp, BitPack
    MsgRec, record, type = Radio Config Params Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - Alternate Tech Info Rsp, BitPack
    MsgRec, record, type = ATIM Rec, maxsize=1
End

Begin Message, FTC - General Extension Msg Rec FTC - General Extension Rsp, BitPack
    Data, array, type=uint8, maxsize=256, size=end, indent=2
End

Begin Message, CP Spy CP PE ENG_PAGE_TR 20 52 Rsp, BitPack, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FORCHTYPE, uint8, globalvar=GBL_FORCHTYPE
    PREV, uint8, globalvar=GBL_PREV
    EXT_MSG_LENGTH, bit, count=1,exist=(PREV >= 7 && FORCHTYPE !=0),pos=none
    Length, bit,count=((PREV<7 ||FORCHTYPE ==0) ? 8 : ((EXT_MSG_LENGTH==0) ? 7 : 15)),pos=none
    Rec, record, type=Paging Msg Rec, maxsize=1
End

Begin Message, CP Spy CP PE ENG_CP_TR 23 3 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PE ENG_CP_TR 23 4 Rsp, BitPack, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FORCHTYPE, uint8, globalvar=GBL_FORCHTYPE
    PREV, uint8, globalvar=GBL_PREV
    EXT_MSG_LENGTH, bit, count=1,exist=(PREV >= 7 && FORCHTYPE !=0),pos=none
    Length, bit,count=((PREV<7 ||FORCHTYPE ==0) ? 8 : ((EXT_MSG_LENGTH==0) ? 7 : 15)),pos=none
    Rec, record, type=Paging Msg Rec, maxsize=1
End

Begin Message, CP Spy CP PE ENG_CP_TR 23 98 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PE ENG_RTC_TR 29 34 Rsp, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PREV, uint8, globalvar=GBL_PREV
    Length, uint8
    Rec, record, type = REV Traffic Msg Rec, maxsize = 1
End

Begin Record, REV Traffic Msg Rec, BitPack, TruncateBits=16, OTTSName=CMsgRtc
    <<< Msg Id, uint8, indent = 1, base=enum:Rev Traffic Msg Enum
    ACK_SEQ, bit, count=3,indent=2,pos=none
    MSG_SEQ, bit, count=3,indent=2,pos=none
    ACK_REQ, bit, count=1,indent=2,pos=none
    ENCRYPTION, bit,count=2,indent=2,pos=none
    Integrity_Rec, record, type = dsch Message Integrity Rec, maxsize=1, indent = 2,exist=(GBL_PREV > 8)
    ExtEncryption_Rec, record,type=r-dsch Ext-Encryption Rec,maxsize=1,exist=((ENCRYPTION == 3)) && ((GBL_PREV > 6))
    Msg, union, enum=<<< Msg Id
    PDU_PADDING, bit, count=-8,indent=2,pos=none
    MACI, bit,count=32,indent=2,exist=(GBL_PREV > 8 && (Integrity_Rec\MACI_INCL == 1)),pos=none
End

Begin record, r-dsch Ext-Encryption Rec, BitPack, OTTSName=CMsgRdschExtEncryption
    SDU_ENCRYPT_MODE, bit, count=3,indent=2,pos=none
    ENC_SEQ, bit,count=8,indent=2,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Order Rsp, BitPack, OTTSName=CMsgRtcOrder
    Order_Rec, record, maxsize=1, type=REV Traffic Order Rec,minbytes=3, indent=2
    CON_REF_INCL, bit, count=1,indent=2,exist=((Order_Rec\ORDER==24||Order_Rec\ORDER==25)) && (GBL_PREV>6),pos=none
    CON_REF, bit,count=8,indent=2,exist=(((Order_Rec\ORDER==24||Order_Rec\ORDER==25) && CON_REF_INCL == 1)) && (GBL_PREV>6),pos=none
End

Begin Record, REV Traffic Order Rec, Bitpack, OTTSName=CMsgRevTrafficOrder
    ORDER, bit, count=6,base=enum:REV Order Code Enum,indent=2,pos=none
    ADD_RECORD_LEN, bit,count=3,indent=2,pos=none
    Rec, array,type=uint8,maxsize=7,size=ADD_RECORD_LEN,indent=2,exist=(GBL_PREV >1 && GBL_PREV < 5)
    Rec2, union,enum=ORDER,consumebytes=ADD_RECORD_LEN,indent=2,exist=(GBL_PREV >= 5)
End

Begin Message, REV Traffic Order Rec BS Challenge Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderBSChallenge
    ORDQ, bit, count=8,indent=2,pos=none
    RANDBS, bit,count=32,indent=2,pos=none
End

Begin Message, REV Traffic Order Rec SSD Update Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderSSDUpdate
    ORDQ, bit,count=8,indent=2,noexist=0 [Confirm Order],base=enum:0 [Confirm Order]/1 [Reject Order],pos=none
End

Begin Message, REV Traffic Order Rec Parameter Update Confirmation Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderParameterUpdateConfirmation
    ORDQ, bit,count=8,indent=2,pos=none
End

Begin Message, REV Traffic Order Rec Request Analog Servive Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderRequestAnalogServive
    ORDQ, bit,count=8,indent=2,noexist=0 [Wide Analog],base=enum:0 [Wide Analog]/1 [Narrow Analog]/2 [Analog],pos=none
End

Begin Message, REV Traffic Order Rec MS Ack Order Rsp, BitPack, OTTSName=CMsgRevOrderMSAck
End

Begin Message, REV Traffic Order Rec Service Option Request Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderServiceOptionRequest
    ORDQ, bit, count=8,indent=2,pos=none
    SERVICE_OPTION, bit,count=16,indent=2,pos=none
End

Begin Message, REV Traffic Order Rec Service Option Response Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderServiceOptionResponse
    ORDQ, bit, count=8,indent=2,pos=none
    SERVICE_OPTION, bit,count=16,indent=2,pos=none
End

Begin Message, REV Traffic Order Rec Release Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderRelease
    ORDQ, bit,count=8,indent=2,noexist=0 [Normal],base=enum:0 [Normal]/1 [Power Down]/2 [Service Inactive],pos=none
End

Begin Message, REV Traffic Order Rec Long Code Transition Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderLongCodeTransitionRequest
    ORDQ, bit,count=8,indent=2,noexist=0 [request public],base=enum:0 [request public]/1 [request private]/2 [response public]/3 [response private],pos=none
End

Begin Message, REV Traffic Order Rec Connect Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderConnect
End

Begin Message, REV Traffic Order Rec Continuous DTMF Tone Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderContinuousDTMFTone
    ORDQ, bit,count=8,indent=2,pos=none
End

Begin Message, REV Traffic Order Rec Service Option Control Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderServiceOptionControl
    ORDQ, bit,count=8,indent=2,pos=none
End

Begin Message, REV Traffic Order Rec Local Control Response Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderLocalControlResponse
    ORDQ, bit,count=8,indent=2,pos=none
End

Begin Message, REV Traffic Order Rec MS Reject Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderMSReject
    ORDQ, bit, count=8,base=enum:MS Reject Type Enum,indent=2,pos=none
    REJECTED_TYPE, bit, count=8,base=enum:FOR Traffic Msg Enum,indent=2,exist=(ORDQ < 20),pos=none
    RESERVED1, bit, count=2,indent=2,exist=((REJECTED_TYPE==1 && GBL_PREV > 6)) && ((ORDQ < 20)),pos=none
    REJECTED_ORDER, bit, count=(GBL_PREV>6)?6:8,indent=2,exist=((REJECTED_TYPE==1)) && ((ORDQ < 20)),pos=none
    REJECTED_ORDQ, bit, count=8,indent=2,exist=((REJECTED_TYPE==1)) && ((ORDQ < 20)),pos=none
    REJECTED_PARAM_ID, bit, count=16,indent=2,exist=((REJECTED_TYPE==12)) && ((ORDQ < 20)),pos=none
    REJECTED_RECORD, bit, count=8,indent=2,exist=((REJECTED_TYPE==3 || REJECTED_TYPE==14 || REJECTED_TYPE==40 || REJECTED_TYPE==42)) && ((ORDQ < 20)),pos=none
    CON_REF, bit, count=8,indent=2,exist=((GBL_PREV>6 &&(ORDQ==16 || ORDQ==17 || ORDQ==18 || ORDQ==19))) && ((ORDQ < 20)),pos=none
    TAG, bit, count=4,indent=2,exist=((ORDQ==19 && GBL_PREV > 6)) && ((ORDQ < 20)),pos=none
    REJECTED_PDU_TYPE, bit, count=2,indent=2,exist=((GBL_PREV > 5)) && ((ORDQ < 20)),pos=none
    RESERVED2, bit, count=-8,indent=2,exist=((GBL_PREV > 6)) && ((ORDQ < 20)),pos=none
    RESERVED, bit,count=6,indent=2,exist=((GBL_PREV == 6)) && ((ORDQ < 20)),pos=none
End

Begin Message, REV Traffic Order Rec Call Rescue Cancel Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderRescueCancel
End

Begin Message, REV Traffic Order Rec Security Mode Completion Order Rsp, BitPack, OTTSName=CMsgRevTrafficOrderSecurityModeCompletion
End

Begin Message, REV Traffic Msg Rec RTC - Authentication Challenge Response Rsp, BitPack, OTTSName=CMsgRtcAuthenticationChallengeResponse
    AUTHU, bit,count=18,indent=2,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Flash With Information Rsp, BitPack, OTTSName=CMsgRtcFlashWithInformation
    RecJstd, record,maxsize=20,size=end,type=Rev Information Rec,minbytes=2,exist=GBL_PREV ==1
    Rec, record,maxsize=20,size=end,type=Rev Information Rec,minbytes=4,exist=!(GBL_PREV ==1)
End

Begin Message, REV Traffic Msg Rec RTC - Data Burst Rsp, BitPack, OTTSName=CMsgRtcDataBurst
    Burst_Rec, record, type = REV Burst Type Rec, maxsize = 1, indent = 2
End

Begin Message, REV Traffic Msg Rec RTC - Pilot Strength measurement Rsp, BitPack, OTTSName=CMsgRtcPilotStrengthMeasurement
    REF_PN, bit, count=9,indent=2,pos=none
    PILOT_STRENGTH, bit, count=6,indent=2,pos=none
    KEEP, bit,count=1,indent=2,pos=none
    Rec, record, maxsize=30, size=end, type=PSMM Pilot Strength Rec, minbytes=2
End

Begin Record, PSMM Pilot Strength Rec, BitPack, OTTSName=CMsgPSMMPilotStrength
    PILOT_PN_PHASE, bit, count=15,indent=2,pos=none
    PILOT_STRENGTH, bit, count=6,indent=2,pos=none
    KEEP, bit,count=1,indent=2,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Power Measurement Report Rsp, BitPack, OTTSName=CMsgRtcPowerMeasurementReport
    ERRORS_DETECTED, bit, count=5,indent=2,pos=none
    PWR_MEAS_FRAMES, bit, count=10,indent=2,pos=none
    LAST_HDM_SEQ, bit, count=2,indent=2,pos=none
    NUM_PILOTS, bit,count=4,indent=2,pos=none
    Rec, record, type = PMRM Pilot Strength Rec, maxsize = 15, size = NUM_PILOTS
    DCCH_PWR_MEAS_INCL, bit, count=1,indent=2,exist=GBL_PREV > 5,pos=none
    DCCH_PWR_MEAS_FRAMES, bit, count=10,indent=2,exist=((DCCH_PWR_MEAS_INCL == 1)) && (GBL_PREV > 5),pos=none
    DCCH_ERRORS_DETECTED, bit, count=5,indent=2,exist=((DCCH_PWR_MEAS_INCL == 1)) && (GBL_PREV > 5),pos=none
    SCH_PWR_MEAS_INCL, bit, count=1,indent=2,exist=GBL_PREV > 5,pos=none
    SCH_ID, bit, count=1,indent=2,exist=((SCH_PWR_MEAS_INCL == 1)) && (GBL_PREV > 5),pos=none
    SCH_PWR_MEAS_FRAMES, bit, count=16,indent=2,exist=((SCH_PWR_MEAS_INCL == 1)) && (GBL_PREV > 5),pos=none
    SCH_ERRORS_DETECTED, bit,count=10,indent=2,exist=((SCH_PWR_MEAS_INCL == 1)) && (GBL_PREV > 5),pos=none
End

Begin Record, PMRM Pilot Strength Rec, BitPack, OTTSName=CMsgPMRMPilotStrength
    PILOT_STRENGTH, bit,count=6,indent=2,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Send Burst DTMF Rsp, BitPack, OTTSName=CMsgRtcSendBurstDTMF
    NUM_DIGITS, bit, count=8,indent=2,pos=none
    DTMF_ON_LENGTH, bit, count=3,indent=2,pos=none
    DTMF_OFF_LENGTH, bit, count=3,indent=2,pos=none
    DIGITi, array,type=bit,count=4,maxsize=60,size=NUM_DIGITS,indent=2,pos=none
    CON_REF_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    CON_REF, bit,count=8,indent=2,exist=((CON_REF_INCL==1)) && (GBL_PREV > 6),pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Status Rsp, BitPack, OTTSName=CMsgRtcStatus
    Rec, record, type = REV Information Rec, maxsize = 1, indent = 2
End

Begin Message, REV Traffic Msg Rec RTC - Origination Continuation Rsp, BitPack, OTTSName=CMsgRtcOriginationContinuation
    DIGIT_MODE, bit, count=1,indent=2,base=enum:0 [DTMF]/1 [ASCII],pos=none
    NUM_FIELDS, bit,count=8,indent=2,pos=none
    CHARi_DTMF, record, type = Char4 List Rec, maxsize = 60, size = NUM_FIELDS, exist = (DIGIT_MODE == 0), indent = 2
    CHARi_ASCII, array, type = uint8, maxsize = 100, size = NUM_FIELDS, exist = (DIGIT_MODE == 1), indent = 2
    Rec, record, type = REV Information Rec, maxsize = 100, size = end, indent = 2
End

Begin Message, REV Traffic Msg Rec RTC - Handoff Completion Rsp, BitPack, OTTSName=CMsgRtcHandoffCompletion
    LAST_HDM_SEQ, bit,count=2,indent=2,pos=none
    Rec, record, type = HOCM Pilot PN Rec, maxsize=100, size=end, indent = 2
End

Begin Record, HOCM Pilot PN Rec, BitPack, OTTSName=CMsgHOCMPilotPN
    PILOT_PN, bit,count=9,indent=2,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Parameters Response Rsp, BitPack, OTTSName=CMsgRtcParametersResponse
    Parameter_Rec, record, type = PRSM Parameter Rec, maxsize = 100, size = end, indent = 2
End

Begin Record, PRSM Parameter Rec, BitPack, OTTSName=CMsgPRSMParameter
    PARAMETER_ID, bit, count=16,indent=2,pos=none
    PARAMETER_LEN, bit, count=10,indent=2,pos=none
    PARAMETER, array,type=bit,count=1,maxsize=540,size=(PARAMETER_LEN + 1),exist=(PARAMETER_LEN != 1023),indent=2,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Service Request Rsp, BitPack, OTTSName=CMsgRtcServiceRequest
    SERV_REQ_SEQ, bit, count=3,indent=2,pos=none
    REQ_PURPOSE, bit,count=4,indent=2,pos=none
    Service_Config_Rec, record, type=Rev Information Rec, maxsize = 1, size=end, indent = 2, exist=(REQ_PURPOSE==2)
End

Begin Message, REV Traffic Msg Rec RTC - Service Response Rsp, BitPack, OTTSName=CMsgRtcServiceResponse
    SERV_REQ_SEQ, bit, count=3,indent=2,pos=none
    RESP_PURPOSE, bit,count=4,indent=2,pos=none
    Service_Config_Rec, record, type=Rev Information Rec, maxsize = 1, size=end, indent = 2, exist=(RESP_PURPOSE==2)
End

Begin Message, REV Traffic Msg Rec RTC - Service Connect Completion Rsp, BitPack, OTTSName=CMsgRtcServiceConnectCompletion
    RESERVED, bit, count=1,indent=2,exist=(GBL_PREV > 5),pos=none
    SERV_CON_SEQ, bit,count=(GBL_PREV>5)?3:4,indent=2,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Service Option Control Rsp, BitPack, OTTSName=CMsgRtcServiceOptionControl
    CON_REF, bit, count=8,indent=2,pos=none
    SERVICE_OPTION, bit, count=16,indent=2,pos=none
    RESERVED, bit, count=7,indent=2,pos=none
    CTL_REC_LEN, bit,count=8,indent=2,pos=none
    Ctl_Rec, array, type=uint8, maxsize=100, size=CTL_REC_LEN, indent=2
End

Begin Message, REV Traffic Msg Rec RTC - Status Response Rsp, BitPack, OTTSName=CMsgRtcStatusResponse
    Qual_Info_Rec, record, type = Qual Info Rec, maxsize = 1, indent = 2
    Rec, record, type = REV Information Rec, maxsize = 100, size = end, minBytes = 2, indent = 2
End

Begin Message, REV Traffic Msg Rec RTC - TMSI Assignment Completion Rsp, BitPack, OTTSName=CMsgRtcTMSIAssignmentCompletion
    Data, array,type=uint8,maxsize=100,size=end,indent=2,exist=GBL_PREV <=5
End

Begin Message, REV Traffic Msg Rec RTC - Supplemental Channel Request Rsp, BitPack, OTTSName=CMsgRtcSupplementalChannelRequest
    SIZE_OF_REQ_BLOB, bit,count=4,indent=2,pos=none
    Rec, record, type = SCRM BLOB Rec, maxsize=1, size=1, exist = (SIZE_OF_REQ_BLOB>0), indent = 2
    USE_SCRM_SEQ_NUM, bit, count=1,indent=2,pos=none
    SCRM_SEQ_NUM, bit, count=4,indent=2,exist=(USE_SCRM_SEQ_NUM == 1),pos=none
    REF_PN, bit, count=9,indent=2,exist=((USE_SCRM_SEQ_NUM != 0) || ( SIZE_OF_REQ_BLOB != 0)),pos=none
    PILOT_STRENGTH, bit, count=6,indent=2,exist=((USE_SCRM_SEQ_NUM != 0) || ( SIZE_OF_REQ_BLOB != 0)),pos=none
    NUM_ACT_PN, bit,count=3,indent=2,exist=((USE_SCRM_SEQ_NUM != 0) || ( SIZE_OF_REQ_BLOB != 0)),pos=none
    ACT_PILOT_Rec, record, type = SCRM Active Pilot Rec, maxsize = 10, size = NUM_ACT_PN, indent = 2, exist = (USE_SCRM_SEQ_NUM!=0 || SIZE_OF_REQ_BLOB!=0)
    NUM_NGHBR_PN, bit,count=3,indent=2,exist=((USE_SCRM_SEQ_NUM != 0) || ( SIZE_OF_REQ_BLOB != 0)),pos=none
    NGHBR_PILOT_Rec, record, type = SCRM Nghbr Pilot Rec, maxsize = 10, size = NUM_NGHBR_PN, indent = 2, exist=(USE_SCRM_SEQ_NUM!=0 || SIZE_OF_REQ_BLOB!=0)
    REF_PILOT_REC_INCL, bit,count=1,indent=2,exist=((SIZE_OF_REQ_BLOB!=0)) && (GBL_PREV > 6),pos=none
    Ref_Pilot_Rec, record,type=SCRM Ref Pilot Rec,maxsize=1,indent=2,exist=((SIZE_OF_REQ_BLOB!=0 && REF_PILOT_REC_INCL==1)) && (GBL_PREV > 6)
    Pilot_ActRec, record,type=SCRM Pilot Rec,maxsize=10,size=NUM_ACT_PN,indent=2,exist=((USE_SCRM_SEQ_NUM!=0 || SIZE_OF_REQ_BLOB!=0)) && (GBL_PREV > 6)
    Pilot_NBRec, record,type=SCRM Pilot Rec,maxsize=10,size=NUM_NGHBR_PN,indent=2,exist=((USE_SCRM_SEQ_NUM!=0 || SIZE_OF_REQ_BLOB!=0)) && (GBL_PREV > 6)
End

Begin Record, SCRM BLOB Rec, BitPack
    DURATION_UNIT, bit, count=3,indent=2,pos=none
    NUM_REQ, bit, count=3,indent=2,pos=none
    RESERVED, bit,count=2,indent=2,pos=none
    Rec, record, type = SCRM BLOB REQ Rec, maxsize = 7, size = NUM_REQ, exist = (NUM_REQ>0), indent = 2
End

Begin Record, SCRM BLOB REQ Rec, BitPack
    SR_ID, bit, count=3,indent=2,pos=none
    PREFERRED_RATE, bit, count=4,indent=2,pos=none
    DURATION, bit,count=9,indent=2,pos=none
End

Begin Record, SCRM Active Pilot Rec, BitPack, OTTSName=CMsgSCRMActivePilot
    ACT_PN_PHASE, bit, count=15,indent=2,pos=none
    ACT_PILOT_STRENGTH, bit,count=6,indent=2,pos=none
End

Begin Record, SCRM Nghbr Pilot Rec, BitPack, OTTSName=CMsgSCRMNghbrPilot
    NGHBR_PN_PHASE, bit, count=15,indent=2,pos=none
    NGHBR_PILOT_STRENGTH, bit,count=6,indent=2,pos=none
End

Begin Record, SCRM Ref Pilot Rec, BitPack, OTTSName=CMsgSCRMRefPilot
    REF_PILOT_REC_TYPE, bit, count=3,base=enum:RTC Ref Pilot Type enum,indent=2,exist=GBL_PREV > 6,pos=none
    REF_RECORD_LEN, bit,count=3,indent=2,exist=GBL_PREV > 6,pos=none
    Ref_Rec, union,enum=REF_PILOT_REC_TYPE,consumebytes=REF_RECORD_LEN,indent=2,exist=GBL_PREV > 6
End

Begin Message, SCRM Ref Pilot Rec Auxiliary Pilot Rsp, BitPack, OTTSName=CMsgSCRMRefPilotAuxiliaryPilot
    QOF, bit, count=2,indent=2,exist=GBL_PREV > 6,pos=none
    WALSH_LENGTH, bit, count=3,indent=2,exist=GBL_PREV > 6,pos=none
    PILOT_WALSH, array,type=bit,count=1,maxsize=16,size=(WALSH_LENGTH+6),indent=2,exist=GBL_PREV > 6,pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 6,pos=none
End

Begin Record, SCRM Pilot Rec, BitPack, OTTSName=CMsgSCRMPilot
    PILOT_REC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    Rec, record,type=OTD Pilot Rec,maxsize=1,indent=2,exist=((PILOT_REC_INCL==1)) && (GBL_PREV > 6)
End

Begin Message, REV Traffic Msg Rec RTC - Candidate Frequency Search Response Rsp, BitPack, OTTSName=CMsgRtcCandidateFrequencySearchResponse
    LAST_CFSRM_SEQ, bit, count=2,indent=2,pos=none
    TOTAL_OFF_TIME_FWD, bit, count=6,indent=2,pos=none
    MAX_OFF_TIME_FWD, bit, count=6,indent=2,pos=none
    TOTAL_OFF_TIME_REV, bit, count=6,indent=2,pos=none
    MAX_OFF_TIME_REV, bit, count=6,indent=2,pos=none
    PCG_OFF_TIMES, bit, count=1,indent=2,pos=none
    ALIGN_TIMING_USED, bit, count=1,indent=2,pos=none
    MAX_NUM_VISITS, bit, count=5,indent=2,exist=(ALIGN_TIMING_USED == 1),pos=none
    INTER_VISIT_TIME, bit,count=6,indent=2,exist=(ALIGN_TIMING_USED == 1),pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Candidate Frequency Search Report Rsp, BitPack, OTTSName=CMsgRtcCandidateFrequencySearchReport
    LAST_SRCH_MSG, bit, count=1,indent=2,pos=none
    LAST_SRCH_MSG_SEQ, bit,count=2,indent=2,pos=none
    SEARCH_Rec, record, type = CFSRPM Search Rec, maxsize = 1, indent = 2
End

Begin Record, CFSRPM Search Rec, BitPack, OTTSName=CMsgCFSRPMSearch
    SEARCH_MODE, bit, count=4,indent=2,base=enum:CFSRPM Search Enum,pos=none
    MODE_SPECIFIC_LEN, bit,count=8,indent=2,pos=none
    Rec, union, enum = SEARCH_MODE, consumeBytes = MODE_SPECIFIC_LEN, indent = 2
End

Begin Message, CFSRPM Search Rec 0 Rsp, BitPack, OTTSName=CMsgCFSRPMSearchRec0
    BAND_CLASS, bit, count=5,indent=2,pos=none
    CDMA_FREQ, bit, count=11,indent=2,pos=none
    SF_TOTAL_RX_PWR, bit, count=5,indent=2,pos=none
    CF_TOTAL_RX_PWR, bit, count=5,indent=2,pos=none
    NUM_PILOTS, bit,count=6,indent=2,pos=none
    Rec, record, type = CFSRPM Pilot Rec, maxsize = 100, size = NUM_PILOTS, indent = 2
    Pilot_Rec, record,type=CFSRPM RefPilot Rec,maxsize=100,size=NUM_PILOTS,indent=2,exist=GBL_PREV > 6
End

Begin Record, CFSRPM Pilot Rec, BitPack, OTTSName=CMsgCFSRPMPilotRec
    PILOT_PN_PHASE, bit, count=15,indent=2,pos=none
    PILOT_STRENGTH, bit, count=6,indent=2,pos=none
    RESERVED, bit,count=3,indent=2,pos=none
End

Begin Record, CFSRPM RefPilot Rec, BitPack, OTTSName=CMsgCFSRPMRefPilotRec
    PILOT_REC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    Rec, record,type=OTD Pilot Rec,maxsize=1,indent=2,exist=((PILOT_REC_INCL==1)) && (GBL_PREV > 6)
End

Begin Message, CFSRPM Search Rec 1 Rsp, BitPack, OTTSName=CMsgCFSRPMSearchRec1
    BAND_CLASS, bit, count=5,indent=2,pos=none
    SF_TOTAL_RX_PWR, bit, count=5,indent=2,pos=none
    NUM_ANALOG_FREQS, bit, count=3,indent=2,pos=none
    RESERVED2, bit,count=5,indent=2,pos=none
    Rec, record, type = CFSRPM Analog Rec, maxsize = 10, size = NUM_ANALOG_FREQS, indent = 2
    RESERVED3, bit,count=-8,indent=2,pos=none
End

Begin Record, CFSRPM Analog Rec, BitPack, OTTSName=CMsgCFSRPMAnalogRec
    ANALOG_FREQ, bit, count=11,indent=2,pos=none
    SIGNAL_STRENGTH, bit,count=6,indent=2,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Periodic Pilot Strength Measurement Rsp, BitPack, OTTSName=CMsgRtcPeriodicPilotStrengthMeasurement
    REF_PN, bit, count=9,indent=2,exist=GBL_PREV > 5,pos=none
    PILOT_STRENGTH, bit, count=6,indent=2,exist=GBL_PREV > 5,pos=none
    KEEP, bit, count=1,indent=2,exist=GBL_PREV > 5,pos=none
    SF_RX_PWR, bit, count=5,indent=2,exist=GBL_PREV > 5,pos=none
    NUM_PILOT, bit,count=4,indent=2,exist=GBL_PREV > 5,pos=none
    Pilot_Rec1, record,maxsize=15,size=NUM_PILOT,type=PPSMM Pilot Rec,indent=2,exist=GBL_PREV > 5
    Pilot_Rec2, record,maxsize=16,size=NUM_PILOT,type=PPSMM RefPilot Rec,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6)
    SETPT_INCL, bit, count=1,indent=2,exist=(GBL_PREV > 5) && (GBL_PREV > 6),pos=none
    FCH_INCL, bit, count=1,indent=2,exist=((SETPT_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    FPC_FCH_CURR_SETPT, bit, count=8,indent=2,exist=((SETPT_INCL==1 && FCH_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    DCCH_INCL, bit, count=1,indent=2,exist=((SETPT_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    FPC_DCCH_CURR_SETPT, bit, count=8,indent=2,exist=((SETPT_INCL==1 && DCCH_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    NUM_SUP, bit,count=2,indent=2,exist=((SETPT_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6)),pos=none
    SCH_rec, record,maxsize=4,size=NUM_SUP,type=PPSMM SCH Rec,indent=2,exist=((SETPT_INCL==1)) && ((GBL_PREV > 5) && (GBL_PREV > 6))
End

Begin Record, PPSMM Pilot Rec, BitPack, OTTSName=CMsgPPSMMPilot
    PILOT_PN_PHASE, bit, count=15,indent=2,exist=GBL_PREV > 5,pos=none
    PILOT_STRENGTH, bit, count=6,indent=2,exist=GBL_PREV > 5,pos=none
    KEEP, bit,count=1,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Record, PPSMM RefPilot Rec, BitPack, OTTSName=CMsgPPSMMRefPilot
    PILOT_REC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    Pilot_Rec, record,type=RTC Pilot Rec,maxsize=1,indent=2,exist=((PILOT_REC_INCL==1)) && (GBL_PREV > 6)
End

Begin Record, RTC Pilot Rec, BitPack, OTTSName=CMsgRTCPilotRec
    PILOT_REC_TYPE, bit,count=3,base=enum:RTC Pilot Type enum,indent=2,exist=GBL_PREV > 6,pos=none
    RECORD_LEN, bit,count=3,indent=2,exist=GBL_PREV > 6,pos=none
    Rec, union,enum=PILOT_REC_TYPE,consumebytes=RECORD_LEN,indent=2,exist=GBL_PREV > 6
End

Begin Message, RTC Pilot Rec Auxiliary Pilot Rsp, BitPack, OTTSName=CMsgRtcPilotAuxiliaryPilot
    QOF, bit,count=2,indent=2,exist=GBL_PREV > 6,pos=none
    WALSH_LENGTH, bit,count=3,indent=2,exist=GBL_PREV > 6,pos=none
    PILOT_WALSH, array,type=bit,count=1,maxsize=16,size=(WALSH_LENGTH+6),indent=2,exist=GBL_PREV > 6,pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 6,pos=none
End

Begin Record, PPSMM SCH Rec, BitPack, OTTSName=CMsgPPSMMSCH
    SCH_ID, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    FPC_SCH_CURR_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 6,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Outer Loop Report Rsp, BitPack, OTTSName=CMsgRtcOuterLoopReport
    FCH_INCL, bit, count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_FCH_CURR_SETPT, bit, count=8,indent=2,exist=((FCH_INCL == 1)) && (GBL_PREV > 5),pos=none
    DCCH_INCL, bit, count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_DCCH_CURR_SETPT, bit, count=8,indent=2,exist=((DCCH_INCL == 1)) && (GBL_PREV > 5),pos=none
    NUM_SUP, bit,count=2,indent=2,exist=GBL_PREV > 5,pos=none
    SCH_Rec, record,maxsize=4,size=NUM_SUP,type=OLRM SCH Rec,indent=2,exist=GBL_PREV > 5
End

Begin Record, OLRM SCH Rec, BitPack, OTTSName=CMsgOlrmSch
    SCH_ID, bit, count=1,indent=2,exist=GBL_PREV > 5,pos=none
    FPC_SCH_CURR_SETPT, bit,count=8,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Resource Request Rsp, BitPack, OTTSName=CMsgRtcResourceRequest
End

Begin Message, REV Traffic Msg Rec RTC - Extended Release Response Rsp, BitPack, OTTSName=CMsgRtcExtendedReleaseResponse
End

Begin Message, REV Traffic Msg Rec RTC - Enhanced Origination Rsp, BitPack, OTTSName=CMsgRtcEnhancedOrigination
    TAG, bit, count=4,indent=2,exist=GBL_PREV > 6,pos=none
    CH_IND, bit, count=3,indent=2,base=enum:CH_IND enum,exist=GBL_PREV > 6,pos=none
    EXT_CH_IND, bit, count=5,indent=2,exist=((CH_IND==7)) && (GBL_PREV > 6),base=enum:EXT_CH_IND enum,pos=none
    SR_ID, bit, count=3,indent=2,exist=GBL_PREV > 6,pos=none
    GLOBAL_EMERGENCY_CALL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    MS_INIT_POS_LOC_IND, bit, count=1,indent=2,exist=((GLOBAL_EMERGENCY_CALL==1)) && (GBL_PREV > 6),pos=none
    NEW_SINFO_INCL, bit, count=1,indent=2,exist=((GBL_PREV>8)) && (GBL_PREV > 6),pos=none
    ENC_INFO_INCL, bit, count=1,indent=2,exist=((GBL_PREV<9)) && (GBL_PREV > 6),pos=none
    UI_ENCRYPT_REQ, bit, count=1,indent=2,exist=((NEW_SINFO_INCL==1)) && (GBL_PREV > 6),pos=none
    UI_ENCRYPT_SUP, bit, count=8,indent=2,exist=((NEW_SINFO_INCL==1)) && (GBL_PREV > 6),pos=none
    SERVICE_OPTION, bit, count=16,indent=2,exist=GBL_PREV > 6,pos=none
    MORE_SO_INFO_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    NUM_ALT_SO, bit,count=3,indent=2,exist=((MORE_SO_INFO_INCL==1)) && (GBL_PREV > 6),pos=none
    ALT_SO_REC, record,maxsize=7,size=NUM_ALT_SO,type=ALT_SO Rec,exist=((MORE_SO_INFO_INCL==1)) && (GBL_PREV > 6)
    SO_BITMAP_IND, bit, count=2,indent=2,exist=((MORE_SO_INFO_INCL==1)) && (GBL_PREV > 6),pos=none
    SO_GROUP_NUM, bit,count=5,indent=2,exist=((MORE_SO_INFO_INCL==1 && SO_BITMAP_IND!=0)) && (GBL_PREV > 6),pos=none
    SO_BITMAP_REC, record,maxsize=31,size=SO_GROUP_NUM,type=SO_BITMAP Rec,exist=((MORE_SO_INFO_INCL==1 && SO_BITMAP_IND!=0)) && (GBL_PREV > 6)
    DRS, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    PREV_SID_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    PREV_SID, bit, count=15,indent=2,exist=((PREV_SID_INCL==1)) && (GBL_PREV > 6),pos=none
    PREV_NID_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    PREV_NID, bit, count=16,indent=2,exist=((PREV_NID_INCL==1)) && (GBL_PREV > 6),pos=none
    PREV_PZID_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    PREV_PZID, bit, count=8,indent=2,exist=((PREV_PZID_INCL==1)) && (GBL_PREV > 6),pos=none
    DIALED_DIGS_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    DIGIT_MODE, bit, count=1,indent=2,base=enum:0 DTMF/1 ASCII,exist=(GBL_PREV > 6) && ((DIALED_DIGS_INCL==1)),pos=none
    NUMBER_TYPE, bit, count=3,indent=2,base=enum:Number Types Enum,exist=((DIGIT_MODE==1)) && ((GBL_PREV > 6) && ((DIALED_DIGS_INCL==1))),pos=none
    NUMBER_PLAN, bit, count=4,indent=2,base=enum:Number Plan Enum,exist=((DIGIT_MODE==1)) && ((GBL_PREV > 6) && ((DIALED_DIGS_INCL==1))),pos=none
    NUM_FIELDS, bit,count=8,indent=2,exist=(GBL_PREV > 6) && ((DIALED_DIGS_INCL==1)),pos=none
    CHARi4, record,type=Char4 List Rec,maxsize=100,size=NUM_FIELDS,exist=((DIGIT_MODE==0)) && ((GBL_PREV > 6) && ((DIALED_DIGS_INCL==1))),indent=2
    CHARi8, string,maxsize=100,exist=((DIGIT_MODE==1)) && ((GBL_PREV > 6) && ((DIALED_DIGS_INCL==1))),size=NUM_FIELDS,columns=20,indent=2
    NUM_RECS, bit,count=5,indent=2,exist=GBL_PREV > 6,pos=none
    RECORD_REC, record,type=REV Information Rec,maxsize=20,size=NUM_RECS,exist=GBL_PREV > 6
    SYNC_ID_INCL, bit, count=1,indent=2,exist=(GBL_PREV > 6) && (GBL_PREV>8),pos=none
    SYNC_ID_LEN, bit,count=4,indent=2,exist=((SYNC_ID_INCL==1)) && ((GBL_PREV > 6) && (GBL_PREV>8)),pos=none
    SYNC_ID_REC, record,type=SYNC_ID Rec,maxsize=15,size=SYNC_ID_LEN,exist=((SYNC_ID_INCL==1)) && ((GBL_PREV > 6) && (GBL_PREV>8))
End

Begin Message, REV Traffic Msg Rec RTC - Extended Flash With Information Rsp, BitPack, OTTSName=CMsgRtcExtFlashWithInfo
    CON_REF_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    CON_REF, bit, count=8,indent=2,exist=((CON_REF_INCL == 1)) && (GBL_PREV > 6),pos=none
    NUM_REC, bit,count=4,indent=2,exist=GBL_PREV > 6,pos=none
    Info_Rec, record,type=REV Information Rec,maxsize=20,size=NUM_REC,indent=2,exist=GBL_PREV > 6
End

Begin Message, REV Traffic Msg Rec RTC - Extended Pilot Strength Measurement Rsp, BitPack, OTTSName=CMsgRtcExtPilotStrMeasure
    REF_PN, bit, count=9,indent=2,exist=GBL_PREV > 6,pos=none
    PILOT_STRENGTH, bit, count=6,indent=2,exist=GBL_PREV > 6,pos=none
    KEEP, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    REF_PILOT_REC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    REF_PILOT_Rec, record,type=RTC EPSMM Ref Pilot Rec,maxsize=1,indent=2,exist=((REF_PILOT_REC_INCL==1)) && (GBL_PREV > 6)
    SF_RX_PWR, bit, count=5,indent=2,exist=GBL_PREV > 6,pos=none
    NUM_PILOTS, bit,count=4,indent=2,exist=GBL_PREV > 6,pos=none
    Pilot_Rec, record,type=RTC EPSMM Pilot Rec,maxsize=20,size=NUM_PILOTS,indent=2,exist=GBL_PREV > 6
    RESQ_IND_INCL, bit, count=1,indent=2,exist=(GBL_PREV > 6) && (GBL_PREV > 7),pos=none
    RESQ_IND, array,type=bit,maxsize=20,size=NUM_PILOTS,count=1,indent=2,exist=((RESQ_IND_INCL==1)) && ((GBL_PREV > 6) && (GBL_PREV > 7)),pos=none
End

Begin Record, RTC EPSMM Ref Pilot Rec, BitPack, OTTSName=CMsgRTCEPSMMRefPilotRec
    REF_PILOT_REC_TYPE, bit, count=3,base=enum:RTC Ref Pilot Type enum,indent=2,exist=GBL_PREV > 6,pos=none
    REF_RECORD_LEN, bit,count=3,indent=2,exist=GBL_PREV > 6,pos=none
    Ref_Rec, union,enum=REF_PILOT_REC_TYPE,consumebytes=REF_RECORD_LEN,indent=2,exist=GBL_PREV > 6
End

Begin Message, RTC EPSMM Ref Pilot Rec Auxiliary Pilot Rsp, BitPack, OTTSName=CMsgRtcEPSMMRefAuxiliaryPilot
    QOF, bit, count=2,indent=2,exist=GBL_PREV > 6,pos=none
    WALSH_LENGTH, bit, count=3,indent=2,exist=GBL_PREV > 6,pos=none
    PILOT_WALSH, array,type=bit,count=1,maxsize=16,size=(WALSH_LENGTH+6),indent=2,exist=GBL_PREV > 6,pos=none
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 6,pos=none
End

Begin Record, RTC EPSMM Pilot Rec, BitPack, OTTSName=CMsgEPSMMPilotRec
    PILOT_PN_PHASE, bit, count=15,indent=2,exist=GBL_PREV > 6,pos=none
    PILOT_STRENGTH, bit, count=6,indent=2,exist=GBL_PREV > 6,pos=none
    KEEP, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    PILOT_REC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    Rec, record,type=RTC Pilot Rec,maxsize=1,indent=2,exist=((PILOT_REC_INCL==1)) && (GBL_PREV > 6)
End

Begin Message, REV Traffic Msg Rec RTC - Extended Handoff Completion Rsp, BitPack, OTTSName=CMsgRtcExtHOCompletion
    LAST_HDM_SEQ, bit, count=2,indent=2,exist=GBL_PREV > 6,pos=none
    NUM_PILOTS, bit,count=4,indent=2,exist=GBL_PREV > 6,pos=none
    Rec, record,type=RTC EHOCM Rec,maxsize=20,size=NUM_PILOTS,indent=2,exist=GBL_PREV > 6
End

Begin Record, RTC EHOCM Rec, BitPack, OTTSName=CMsgRTCEHOCMRec
    PILOT_PN, bit, count=9,indent=2,exist=GBL_PREV > 6,pos=none
    PILOT_REC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    Pilot_Rec, record,type=RTC Pilot Rec,maxsize=1,indent=2,exist=((PILOT_REC_INCL==1)) && (GBL_PREV > 6)
End

Begin Message, REV Traffic Msg Rec RTC - Resource Release Request Rsp, BitPack, OTTSName=CMsgRtcResourceReleaseRequest
    GATING_DISCONNECT_IND, bit, count=1,indent=2,exist=GBL_PREV > 5,pos=none
    CON_REF, bit, count=8,indent=2,exist=((GATING_DISCONNECT_IND!=1)) && (GBL_PREV > 5),pos=none
    PURGE_SERVICE, bit,count=1,indent=2,exist=((GATING_DISCONNECT_IND!=1)) && (GBL_PREV > 5),pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Security Mode Request Rsp, BitPack, OTTSName=CMsgRtcSecurityModeReq
    UI_ENC_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    UI_ENCRYPT_SUP, bit, count=8,indent=2,exist=((UI_ENC_INCL==1)) && (GBL_PREV > 6),pos=none
    NUM_RECS, bit,count=3,indent=2,exist=((UI_ENC_INCL==1)) && (GBL_PREV > 6),pos=none
    Encrypt_Rec, record,type=RTC SMRM Encrypt Rec,maxsize=10,size=(NUM_RECS+1),indent=2,exist=((UI_ENC_INCL==1)) && (GBL_PREV > 6)
    SIG_ENC_INCL, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    SIG_ENCRYPT_SUP, record,type=csch SIG_ENCRYPT_SUP Rec,maxsize=1,indent=2,exist=((SIG_ENC_INCL==1)) && (GBL_PREV > 6)
    D_SIG_ENCRYPT_REQ, bit, count=1,indent=2,exist=((SIG_ENC_INCL==1)) && (GBL_PREV > 6),pos=none
    NEW_SSEQ_H_INCL, bit, count=1,indent=2,exist=GBL_PREV > 6,pos=none
    NEW_SSEQ_H, bit, count=24,indent=2,exist=((NEW_SSEQ_H_INCL==1)) && (GBL_PREV > 6),pos=none
    NEW_SSEQ_H_SIG, bit, count=8,indent=2,exist=((NEW_SSEQ_H_INCL==1)) && (GBL_PREV > 6),pos=none
    MSG_INT_INFO_INCL, bit, count=1,indent=2,exist=(GBL_PREV > 6) && (GBL_PREV > 8),pos=none
    SIG_INTEGRITY_SUP_INCL, bit, count=1,indent=2,exist=((MSG_INT_INFO_INCL==1)) && ((GBL_PREV > 6) && (GBL_PREV > 8)),pos=none
    SIG_INTEGRITY_SUP, bit, count=8,indent=2,exist=((MSG_INT_INFO_INCL==1)) && ((GBL_PREV > 6) && (GBL_PREV > 8)),pos=none
    SIG_INTEGRITY_REQ, bit,count=3,indent=2,exist=((MSG_INT_INFO_INCL==1)) && ((GBL_PREV > 6) && (GBL_PREV > 8)),pos=none
End

Begin Record, RTC SMRM Encrypt Rec, BitPack, OTTSName=CMsgRTCSMRMEncryptRec
    CON_REF, bit, count=8,indent=2,exist=GBL_PREV > 6,pos=none
    UI_ENCRYPT_REQ, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - User Zone Update Request Rsp, BitPack, OTTSName=CMsgRtcUserZoneUpdateRequest
    UZID, bit,count=16,indent=2,exist=GBL_PREV > 5,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Call Cancel Rsp, BitPack, OTTSName=CMsgRtcCallCancel
    TAG, bit,count=4,indent=2,exist=GBL_PREV > 6,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Device Information Rsp, BitPack, OTTSName=CMsgRtcDeviceInfo
    WLL_DEVICE_TYPE, bit, count=3,base=enum:WLL_DEVICE Types Enum,indent=2,exist=GBL_PREV > 6,pos=none
    NUM_INFO_RECORDS, bit,count=5,indent=2,exist=GBL_PREV > 6,pos=none
    Info_Rec, record,type=REV Information Rec,maxsize=40,size=NUM_INFO_RECORDS,indent=2,exist=GBL_PREV > 6
End

Begin Message, REV Traffic Msg Rec RTC - Base Station Status Request Rsp, BitPack, OTTSName=CMsgRtcBSStatusReq
    Qual_Rec, record,type=Qual Info Rec,maxsize=1,indent=2,exist=GBL_PREV > 6
    NUM_RECORD, bit,count=4,indent=2,exist=GBL_PREV > 6,pos=none
    Rec, record,type=BSSREQM Info Rec,maxsize=20,size=NUM_RECORD,indent=2,exist=GBL_PREV > 6
End

Begin Record, BSSREQM Info Rec, BitPack, OTTSName=CMsgBSSREQMInfo
    RECORD_TYPE, bit, count=8,base=enum:BSSREQM Record Type enum,indent=2,exist=GBL_PREV > 6,pos=none
    RECORD_LEN, bit,count=8,indent=2,exist=GBL_PREV > 6,pos=none
    Rec, union,enum=RECORD_TYPE,indent=2,consumebytes=RECORD_LEN,exist=GBL_PREV > 6
    RESERVED, bit,count=-8,indent=2,exist=GBL_PREV > 6,pos=none
End

Begin Message, BSSREQM Info Rec Pilot Information Rsp, BitPack, OTTSName=CMsgBSSREQMPilotInfo
    NUM_PILOTS, bit, count=4,indent=2,exist=GBL_PREV > 6,pos=none
    SID_NID_REQ, bit,count=1,indent=2,exist=GBL_PREV > 6,pos=none
    Pilot_Rec, record,type=BSSREQM Pilot Rec,maxsize=20,size=NUM_PILOTS,indent=2,exist=GBL_PREV > 6
End

Begin Record, BSSREQM Pilot Rec, BitPack, OTTSName=CMsgBSSREQMPilotRec
    PILOT_PN, bit,count=9,indent=2,exist=GBL_PREV > 6,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Authentication Response Rsp, BitPack, OTTSName=CMsgRtcAuthRes
    RES, bit, count=128,indent=2,exist=GBL_PREV > 8,base=16,pos=none
    SIG_INTEGRITY_SUP_INCL, bit, count=1,indent=2,exist=GBL_PREV > 8,pos=none
    SIG_INTEGRITY_SUP, bit, count=8,indent=2,exist=((SIG_INTEGRITY_SUP_INCL==1)) && (GBL_PREV > 8),pos=none
    SIG_INTEGRITY_REQ, bit, count=3,indent=2,exist=GBL_PREV > 8,pos=none
    NEW_KEY_ID, bit, count=2,indent=2,exist=GBL_PREV > 8,pos=none
    NEW_SSEQ_H, bit,count=24,indent=2,exist=GBL_PREV > 8,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - Authentication Resynchronization Rsp, BitPack, OTTSName=CMsgRtcAuthResyn
    CON_MS_SQN, bit, count=48,indent=2,exist=GBL_PREV > 8,base=16,pos=none
    MAC_S, bit,count=64,indent=2,exist=GBL_PREV > 8,base=16,pos=none
End

Begin Message, REV Traffic Msg Rec RTC - CDMA Offtime Report Rsp, BitPack, OTTSName=CMsgRtcCDMAOfftimeReport
    CDMA_OFF_TIME_ENABLE, bit, count=1,indent=2,exist=GBL_PREV > 7,pos=none
    CDMA_OFF_TIME_START, bit, count=6,indent=2,exist=(GBL_PREV > 7) && ((CDMA_OFF_TIME_ENABLE!=0)),pos=none
    CDMA_OFF_TIME_UNIT, bit, count=2,indent=2,exist=(GBL_PREV > 7) && ((CDMA_OFF_TIME_ENABLE!=0)),pos=none
    CDMA_OFF_TIME_MODE, bit, count=1,indent=2,exist=(GBL_PREV > 7) && ((CDMA_OFF_TIME_ENABLE!=0)),pos=none
    CDMA_OFF_TIME, bit, count=4,indent=2,exist=(GBL_PREV > 7) && ((CDMA_OFF_TIME_ENABLE!=0)),pos=none
    CDMA_OFF_TIME_PERIOD, bit,count=6,indent=2,exist=((CDMA_OFF_TIME_MODE==1)) && ((GBL_PREV > 7) && ((CDMA_OFF_TIME_ENABLE!=0))),pos=none
End

Begin Message, CP Spy CP PE ENG_CP_TR 42 4 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PE ENG_CP_TR 42 7 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PE Access Raw Dump Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PE Page Raw Dump Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PE QPCH Meas Dump Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    QpchRate, uint8, base=10
    QpchPilotPn, uint16, base=10
    QpchPilotPwr, int16
    QpchPi1, int16
    QpchPi1Status, int16
    QpchPi1Pos, int16
    QpchPi1BitIEnergy, int16
    QpchPi1BitQEnergy, int16
    QpchPi1PilotIEnergy, int16
    QpchPi1PilotQEnergy, int16
    QpchPi2, int16
    QpchPi2Status, int16
    QpchPi2Pos, int16
    QpchPi2BitIEnergy, int16
    QpchPi2BitQEnergy, int16
    QpchPi2PilotIEnergy, int16
    QpchPi2PilotQEnergy, int16
    QpchSysThi, int16
    QpchSysThb, int16
End

Begin Message, CP Spy CP PE ERI Val Msg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Default Roaming Indicator, uint8
    ERI Version Number, uint16
    Roaming Indicator, uint8
    Icon Image Id, uint8
    Icon Mode, uint8
    Call Prompt Id, uint8
    Alert/Call Counter Id, uint8
    Character Encoding Type, uint8
    Text Length, uint8
    Banner Text, string,size=end, columns= 40
End

Begin Message, CP Spy CP PE ENG_PSWFTD_PARA Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    MOcount, uint16, base=10
    MTcount, uint16, base=10
    total_msg, uint32
    error_msg, uint32
    dpchLoss_count, uint16
    dtchLoss_count, uint16
    idleHO_count, uint32
    hardHO_count, uint16
    softHO_count, uint16
    interFreqIdleHO_count, uint16
    T_ADD, uint16
    T_DROP, uint16
    T_tDROP, uint16
End

Begin Message, CP Spy CP Search Results Remain Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Num Remain, uint8
    Remain Data, record, type=Search Result RemainSet, maxsize=20, indent=1, size = end
End

Begin Record, Search Result RemainSet
    Stale, uint8,  base=10
    Pilot PN, uint16, base=10
    Phase, uint16, base=10
    Strength, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
End

Begin Message, CP Spy CP PPP CAT_PACKET 2 3 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PPP CAT_PACKET 2 16 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PPP CAT_PHASE 3 11 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PPP CAT_PHASE 3 23 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PPP CAT_PHASE 3 31 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PPP CAT_PHASE 12 2 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PPP CAT_PHASE 12 4 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PPP CAT_PACKET 12 8 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PPP CAT_PACKET 12 10 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PPP CAT_API 13 21 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP PPP CAT_API 13 23 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP TCPIP CAT_IP 1 2 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP NSPE CAT_API 2 6 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP NSPE CAT_API 3 11 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SCC CAT_API 1 28 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SCC CAT_API 3 22 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SCC CAT_API 3 27 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SCC CAT_API 4 5 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SCC CAT_API 4 12 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SCC CAT_SCC 5 3 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SCC CAT_API 5 14 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SCC CAT_API 6 15 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SCC CAT_SCC 7 16 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SCC CAT_SCC 8 18 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SCC CAT_API 9 11 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SCC CAT_API 11 21 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP OTA CAT_API 1 4 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP OTA CAT_API 1 7 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP OTA CAT_API 1 11 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP OTA CAT_API 1 13 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP OTA CAT_OTA 2 3 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP OTA CAT_OTA 2 6 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP OTA CAT_OTA 2 7 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP OTA CAT_OTA 2 9 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP OTA CAT_OTA 2 11 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP OTA CAT_OTA 2 13 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP OTA CAT_OTA 2 16 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP OTA CAT_OTA 2 18 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SMS CAT_API 1 9 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SMS CAT_API 1 28 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SMS CAT_API 1 31 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SMS CAT_API 1 39 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SMS CAT_API 1 59 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SMS CAT_API 1 65 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SMS CAT_API 1 76 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SMS CAT_API 1 83 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SMS CAT_API 1 87 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SMS CAT_API 1 91 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SMS CAT_API 1 96 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SMS CAT_SMS 3 3 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SMS CAT_SMS 3 6 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP SMS CAT_SMS 4 8 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP SPY CP PS STATUS Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ESN, uint32, base=10, indent=1
    RFMode, uint8,  base=10, indent=1
    MIN_Digits, uint8,  base=10, indent=1
    Min, array,  type=uint8, maxsize=15
    CPstate, uint8,  base=enum:CPStateType
    CDMAGoodMsg, uint8,  base=enum:Status Rsp CDMA Msg Count Enum
    AMPSGoodFrameCt, uint16, base=10
    AMPSBadFrameCt, uint16, base=10
    CPEnterReason, uint8,  base=enum:Status Rsp CP Enter Reason Enum
    Channel, uint16, base=10
    PilotPn, uint16, base=10
    CurrentSID, uint16, base=10
    CurrentNID, uint16, base=10
    AMPSCurLocAreaId, uint16, base=10
    AMPSRSSI, int16,  base=10
    AMPSPowerLevel, uint8,  base=10
    SlottedModeFlag, uint8,  base=enum:Off/On
End

Begin Message, CP Spy CP GCSNA UL Msg Rsp, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Rec, record, type=GCSNA UL Msg Rec, maxsize = 1
End

Begin Record, GCSNA UL Msg Rec, BitPack
    Message ID, uint8, base=enum:GCSNA Msg ID Enum, indent=1
    Msg, union, enum=Message ID
End

Begin Message, GCSNA UL Msg Rec GCSNA Circuit Service Rsp, BitPack
    GcsnaOption, bit, count=8,indent=2,pos=none
    AltGcsnaOption Inc, bit, count=1,indent=2,pos=none
    NumAltGcsnaOption, bit,count=8,indent=2,exist=(AltGcsnaOption Inc==1),pos=none
    Rec, record, type=Num Alt Gcsna Option Rec, maxsize=6, size=NumAltGcsnaOption, exist=(AltGcsnaOption Inc==1)
    IWSID Inc, bit, count=1,indent=2,pos=none
    IWSID, bit, count=16,indent=2,exist=(IWSID Inc==1),pos=none
    AckRequired, bit, count=1,indent=2,pos=none
    StopDupDetect, bit, count=1,indent=2,pos=none
    MessageSequence, bit, count=6,indent=2,pos=none
    NumTLACEncapPDU, bit, count=2,indent=2,pos=none
    Reserved, bit,count=4,indent=2,pos=none
    PDURec, record, type=L3 UL PDU Rec, maxsize=3, size=NumTLACEncapPDU+1
End

Begin Record, Num Alt Gcsna Option Rec, BitPack
    Alternative GCSNA Option, bit,count=8,indent=2,pos=none
End

Begin Record, L3 UL PDU Rec, BitPack
    Logical Channel, bit, count=1,base=enum:GCSNA Channel Type Enum,indent=2,pos=none
    PRev, bit,count=8,indent=2,pos=none
    MsgType, union, enum=Logical Channel
    NumTLACHeaderRecs, bit,count=4,indent=2,pos=none
    Rec, record, type=TLAC Header Rec, maxsize=3, size=NumTLACHeaderRecs,
    Reserved, bit, count=-8,indent=2,pos=none
    1xPDULength, bit,count=16,indent=2,pos=none
    1xL3PDU, array, type=uint8, maxsize=255, size=1xPDULength, indent=2
End

Begin Message, L3 UL PDU Rec Common Rsp, BitPack
    Msg ID, bit,count=8,base=enum:Access Msg Enum,indent=2,pos=none
End

Begin Message, L3 UL PDU Rec Dedicated Rsp, BitPack
    Msg ID, bit,count=8,base=enum:Rev Traffic Msg Enum,indent=2,pos=none
End

Begin Record, TLAC Header Rec, BitPack
    Header Rec Type, bit,count=4,base=enum:GCSNA TLAC Header Rec Type Enum,indent=2,pos=none
    Header Rec Len, bit,count=8,indent=2,pos=none
    Header Rec, union, enum=Header Rec Type, ConsumeBytes = (Header Rec Len)
End

Begin Message, TLAC Header Rec Addressing Rsp, BitPack
    MSID_Rec, record, type = Rcsch Address Rec, maxsize = 1, indent = 2
End

Begin Message, TLAC Header Rec Auth Rsp, BitPack
    AUTH_Rec, record, type = Access Auth Rec, maxsize = 1, indent = 2
End

Begin Message, GCSNA UL Msg Rec GCSNA L2 Ack Rsp, BitPack
    AckSequence, bit, count=6,indent=2,pos=none
    Reserved, bit,count=2,indent=2,pos=none
End

Begin Message, GCSNA UL Msg Rec GCSNA Service Reject Rsp, BitPack
    RejectSequence, bit, count=6,indent=2,pos=none
    Cause, bit, count=8,base=enum:GCSNA Reject Reason Enum,indent=2,pos=none
    NumFields, bit,count=8,exist=((Cause==0)||(Cause==2)),indent=2,pos=none
    Rec, record, type=GCSNA Rej Rec, maxsize=10, size=NumFields, exist=((Cause==0)||(Cause==2)||(Cause==5))
    1xPRev, bit, count=8,exist=((Cause==1)||(Cause==2)),indent=2,pos=none
    Invalid MsgId, bit, count=8,exist=(Cause==3),indent=2,pos=none
    Reserved, bit,count=2,indent=2,pos=none
End

Begin Record, GCSNA Rej Rec, BitPack
    GCSNAOption, bit,count=8,indent=2,exist=((..\Cause==0)||(..\Cause==2)),pos=none
    RecordType, bit,count=8,indent=2,exist=(..\Cause==5),pos=none
End

Begin Message, GCSNA UL Msg Rec GCSNA 1x Param Request Rsp, BitPack
    Message Sequence, bit, count=6,indent=2,pos=none
    Reserved, bit,count=2,indent=2,pos=none
End

Begin Message, GCSNA UL Msg Rec GCSNA 1x Parameters Rsp, BitPack
    Rec, record, type=1x Parameters Rec, maxsize=1, size =1
End

Begin Record, 1x Parameters Rec, BitPack
    Unsol Msg, bit,count=1,indent=2,pos=none
    Msg Sequence, bit,count=6,indent=2,pos=none
    Reserved, bit,count=1,indent=2,pos=none
    Length, bit,count=16,indent=2,pos=none
    Record Type, bit,count=8,indent=2,pos=none
    Sid Included, bit,count=1,indent=2,pos=none
    Sid, bit,count=15,indent=2,exist=(Sid Included==1),pos=none
    Nid Included, bit,count=1,indent=2,pos=none
    Nid, bit,count=16,indent=2,exist=(Nid Included==1),pos=none
    Mult Sids Inc, bit,count=1,indent=2,pos=none
    Multi Sids, bit,count=1,indent=2,exist=(Mult Sids Inc==1),pos=none
    Mult Nids Inc, bit,count=1,indent=2,pos=none
    Multi Nids, bit,count=1,indent=2,exist=(Mult Nids Inc==1),pos=none
    RegZone Inc, bit,count=1,indent=2,pos=none
    Reg Zone, bit,count=12,indent=2,exist=(RegZone Inc==1),pos=none
    TotalZones Inc, bit,count=1,indent=2,pos=none
    Total Zones, bit,count=3,indent=2,exist=(TotalZones Inc==1),pos=none
    ZoneTimer Inc, bit,count=1,indent=2,pos=none
    Zone Timer, bit,count=3,indent=2,exist=(ZoneTimer Inc==1),pos=none
    Pkt ZoneId Inc, bit,count=1,indent=2,pos=none
    Pkt ZoneId, bit,count=8,indent=2,pos=none
    PZID HystParm Inc, bit,count=1,indent=2,pos=none
    PZ Hyst Enabled, bit,count=1,indent=2,pos=none
    PZ Hyst Info Inc, bit,count=1,indent=2,pos=none
    PZ Hyst List Len, bit,count=1,indent=2,pos=none
    PZ Hyst Act Timer, bit,count=8,indent=2,pos=none
    PZ Hyst Timer Mul, bit,count=3,indent=2,pos=none
    PZ Hyst Timer Exp, bit,count=5,indent=2,pos=none
    PRev Inc, bit,count=1,indent=2,pos=none
    PRev, bit,count=8,indent=2,exist=(PRev Inc==1),pos=none
    Min PRev Inc, bit,count=1,indent=2,pos=none
    Min PRev, bit,count=8,indent=2,pos=none
    NegSlotCycleInd Inc, bit,count=1,indent=2,pos=none
    NegSlotCycleInd Sup, bit,count=1,indent=2,exist=(NegSlotCycleInd Inc==1),pos=none
    Enc Mode Inc, bit,count=1,indent=2,pos=none
    Encrypt Mode, bit,count=2,indent=2,exist=(Enc Mode Inc==1),pos=none
    Enc Supp Inc, bit,count=1,indent=2,pos=none
    Enc Supported, bit,count=1,indent=2,exist=(Enc Supp Inc==1),pos=none
    Sig Enc Sup Inc, bit,count=1,indent=2,pos=none
    Sig Encrypt Sup, bit,count=8,indent=2,exist=(Sig Enc Sup Inc==1),pos=none
    MsgIntg Sup Inc, bit,count=1,indent=2,pos=none
    MsgIntg Sup, bit,count=1,indent=2,exist=(MsgIntg Sup Inc==1),pos=none
    SigIntg Sup Inc Inc, bit,count=1,indent=2,pos=none
    SigIntg Sup Inc, bit,count=1,indent=2,exist=(SigIntg Sup Inc Inc==1),pos=none
    SigIntg Sup Include, bit,count=1,indent=2,pos=none
    SigIntg Sup, bit,count=8,indent=2,exist=(SigIntg Sup Include==1),pos=none
    Auth Inc, bit,count=1,indent=2,pos=none
    Auth, bit,count=2,indent=2,exist=(Auth Inc==1),pos=none
    MaxNumAltSO Inc, bit,count=1,indent=2,pos=none
    MaxNumAltSO, bit,count=3,indent=2,exist=(MaxNumAltSO Inc==1),pos=none
    UseSyncId Inc, bit,count=1,indent=2,pos=none
    UseSyncId, bit,count=1,indent=2,exist=(UseSyncId Inc==1),pos=none
    MsInitPosLoc Inc, bit,count=1,indent=2,pos=none
    MsInitPosLocSupInd, bit,count=1,indent=2,exist=(MsInitPosLoc Inc==1),pos=none
    MobQos Inc, bit,count=1,indent=2,pos=none
    MobQos, bit,count=1,indent=2,exist=(MobQos Inc==1),pos=none
    BC InfoRec Inc, bit,count=1,indent=2,pos=none
    BC InfoRec, bit,count=1,indent=2,exist=(BC InfoRec Inc==1),pos=none
    BandClass Inc, bit,count=1,indent=2,pos=none
    BandClass, bit,count=5,indent=2,exist=(BandClass Inc==1),pos=none
    ByPassRegInd Inc, bit,count=1,indent=2,pos=none
    ByPassRegInd, bit,count=5,indent=2,exist=(ByPassRegInd Inc==1),pos=none
    AltBC Inc, bit,count=1,indent=2,pos=none
    AltBandClass, bit,count=5,indent=2,exist=(AltBC Inc==1),pos=none
    MaxAddServInst Inc, bit,count=1,indent=2,pos=none
    MaxAddServInst, bit,count=3,indent=2,exist=(MaxAddServInst Inc==1),pos=none
    HomeReg Inc, bit,count=1,indent=2,pos=none
    HomeReg, bit,count=1,indent=2,exist=(HomeReg Inc==1),pos=none
    ForSidReg Inc, bit,count=1,indent=2,pos=none
    ForSidReg, bit,count=1,indent=2,exist=(ForSidReg Inc==1),pos=none
    ForNidReg Inc, bit,count=1,indent=2,pos=none
    ForNidReg, bit,count=1,indent=2,exist=(ForNidReg Inc==1),pos=none
    PowerUpReg Inc, bit,count=1,indent=2,pos=none
    PowerUpReg, bit,count=1,indent=2,exist=(PowerUpReg Inc==1),pos=none
    PowerDownReg Inc, bit,count=1,indent=2,pos=none
    PowerDownReg, bit,count=1,indent=2,exist=(PowerDownReg Inc==1),pos=none
    ParmReg Inc, bit,count=1,indent=2,pos=none
    ParameterReg, bit,count=1,indent=2,exist=(ParmReg Inc==1),pos=none
    RegPrd Inc, bit,count=1,indent=2,pos=none
    RegPrd, bit,count=7,indent=2,exist=(RegPrd Inc==1),pos=none
    RegDist Inc, bit,count=1,indent=2,pos=none
    RegDist, bit,count=11,indent=2,exist=(RegDist Inc==1),pos=none
    PrefMSIDType Inc, bit,count=1,indent=2,pos=none
    PrefMSIDType, bit,count=2,indent=2,exist=(PrefMSIDType Inc==1),pos=none
    ExtPrefMSID Inc, bit,count=1,indent=2,pos=none
    ExtPrefMSIDType, bit,count=2,indent=2,exist=(ExtPrefMSID Inc==1),pos=none
    MEIDReqd Inc, bit,count=1,indent=2,pos=none
    MEIDReqd, bit,count=1,indent=2,exist=(MEIDReqd Inc==1),pos=none
    MCC Inc, bit,count=1,indent=2,pos=none
    MCC, bit,count=10,indent=2,exist=(MCC Inc==1),pos=none
    IMSI_11_12 Inc, bit,count=1,indent=2,pos=none
    IMSI_11_12, bit,count=7,indent=2,exist=(IMSI_11_12 Inc==1),pos=none
    IMSI_T Supp Inc, bit,count=1,indent=2,pos=none
    IMSI_T Supp, bit,count=1,indent=2,exist=(IMSI_T Supp Inc==1),pos=none
    ReconnectMsgInd Inc, bit,count=1,indent=2,pos=none
    ReconnectMsgInd, bit,count=1,indent=2,exist=(ReconnectMsgInd Inc==1),pos=none
    RER ModeSupp Inc, bit,count=1,indent=2,pos=none
    RER ModeSupp, bit,count=1,indent=2,exist=(RER ModeSupp Inc==1),pos=none
    TKZ ModeSupp Inc, bit,count=1,indent=2,pos=none
    TKZ ModeZupp, bit,count=1,indent=2,exist=(TKZ ModeSupp Inc==1),pos=none
    TKZ ID Inc, bit,count=1,indent=2,pos=none
    TKZ ID, bit,count=1,indent=2,exist=(TKZ ID Inc==1),pos=none
    PilotReport Inc, bit,count=1,indent=2,pos=none
    PilotReport, bit,count=1,indent=2,exist=(PilotReport Inc==1),pos=none
    SDB Supp Inc, bit,count=1,indent=2,pos=none
    SDB Supp, bit,count=1,indent=2,exist=(SDB Supp Inc==1),pos=none
    AutoFcsoAllow Inc, bit,count=1,indent=2,pos=none
    AutoFcsoAllow, bit,count=1,indent=2,exist=(AutoFcsoAllow Inc==1),pos=none
    SDB In RCNM Ind Inc, bit,count=1,indent=2,pos=none
    SDB In RCNM Ind, bit,count=1,indent=2,exist=(SDB In RCNM Ind Inc==1),pos=none
    FPC Fch Inc, bit,count=1,indent=2,pos=none
    FPC FchInitStPt RC3, bit,count=8,indent=2,exist=(FPC Fch Inc==1),pos=none
    FPC FchInitStPt RC4, bit,count=8,indent=2,exist=(FPC Fch Inc==1),pos=none
    FPC FchInitStPt RC5, bit,count=8,indent=2,exist=(FPC Fch Inc==1),pos=none
    FPC FchInitStPt RC11, bit,count=8,indent=2,exist=(FPC Fch Inc==1),pos=none
    FPC FchInitStPt RC12, bit,count=8,indent=2,exist=(FPC Fch Inc==1),pos=none
    TAdd Inc, bit,count=1,indent=2,pos=none
    TAdd, bit,count=6,indent=2,exist=(TAdd Inc==1),pos=none
    PilotInc Inc, bit,count=1,indent=2,pos=none
    PilotInc, bit,count=4,indent=2,exist=(PilotInc Inc==1),pos=none
    Rand Inc, bit,count=1,indent=2,pos=none
    Rand, bit,count=32,indent=2,exist=(Rand Inc==1),pos=none
    LP Sec Inc, bit,count=1,indent=2,pos=none
    LP Sec, bit,count=8,indent=2,exist=(LP Sec Inc==1),pos=none
    LTM Off Inc, bit,count=1,indent=2,pos=none
    LTM Off, bit,count=6,indent=2,exist=(LTM Off Inc==1),pos=none
    DayLt Inc, bit,count=1,indent=2,pos=none
    DayLt, bit,count=1,indent=2,exist=(DayLt Inc==1),pos=none
    GcsnaL2AckTmr Inc, bit,count=1,indent=2,pos=none
    GcsnaL2AckTmr, bit,count=8,indent=2,exist=(GcsnaL2AckTmr Inc==1),pos=none
    GcsnaSeqCnxtTmr Inc, bit,count=1,indent=2,pos=none
    GcsnaSeqCnxtTmr, bit,count=8,indent=2,exist=(GcsnaSeqCnxtTmr Inc==1),pos=none
End

Begin Message, GCSNA UL Msg Rec GCSNA 1x Param Ack Rsp, BitPack
    Msg Sequence, bit, count=6,indent=2,pos=none
    Reserved, bit,count=2,indent=2,pos=none
End

Begin Message, CP Spy CP GCSNA DL Msg Rsp, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Rec, record, type=GCSNA DL Msg Rec, maxsize = 1
End

Begin Record, GCSNA DL Msg Rec, BitPack
    Message ID, uint8, base=enum:GCSNA Msg ID Enum, indent=1
    Msg, union, enum=Message ID
End

Begin Message, GCSNA DL Msg Rec GCSNA Circuit Service Rsp, BitPack
    GcsnaOption, bit, count=8,indent=2,pos=none
    AltGcsnaOption Inc, bit, count=1,indent=2,pos=none
    NumAltGcsnaOption, bit,count=8,indent=2,exist=(AltGcsnaOption Inc==1),pos=none
    Rec, record, type=Num Alt Gcsna Option Rec, maxsize=6, size=NumAltGcsnaOption, exist=(AltGcsnaOption Inc==1)
    IWSID Inc, bit, count=1,indent=2,pos=none
    IWSID, bit, count=16,indent=2,exist=(IWSID Inc==1),pos=none
    AckRequired, bit, count=1,indent=2,pos=none
    StopDupDetect, bit, count=1,indent=2,pos=none
    MessageSequence, bit, count=6,indent=2,pos=none
    NumTLACEncapPDU, bit, count=2,indent=2,pos=none
    Reserved, bit,count=4,indent=2,pos=none
    PDURec, record, type=L3 DL PDU Rec, maxsize=3, size=NumTLACEncapPDU+1
End

Begin Record, L3 DL PDU Rec, BitPack
    Logical Channel, bit, count=1,base=enum:GCSNA Channel Type Enum,indent=2,pos=none
    PRev, bit,count=8,indent=2,pos=none
    MsgType, union, enum=Logical Channel
    NumTLACHeaderRecs, bit,count=4,indent=2,pos=none
    Rec, record, type=TLAC Header Rec, maxsize=3, size=NumTLACHeaderRecs,
    Reserved, bit, count=-8,indent=2,pos=none
    1xPDULength, bit,count=16,indent=2,pos=none
    1xL3PDU, array, type=uint8, maxsize=255, size=1xPDULength, indent=2
End

Begin Message, L3 DL PDU Rec Common Rsp, BitPack
    Msg ID, bit,count=8,base=enum:Paging Msg Enum,indent=2,pos=none
End

Begin Message, L3 DL PDU Rec Dedicated Rsp, BitPack
    MsgID, bit,count=8,base=enum:FOR Traffic Msg Enum,indent=2,pos=none
End

Begin Message, GCSNA DL Msg Rec GCSNA L2 Ack Rsp, BitPack
    AckSequence, bit, count=6,indent=2,pos=none
    Reserved, bit,count=2,indent=2,pos=none
End

Begin Message, GCSNA DL Msg Rec GCSNA Service Reject Rsp, BitPack
    RejectSequence, bit, count=6,indent=2,pos=none
    Cause, bit, count=8,base=enum:GCSNA Reject Reason Enum,indent=2,pos=none
    NumFields, bit,count=8,exist=((Cause==0)||(Cause==2)),indent=2,pos=none
    Rec, record, type=GCSNA Rej Rec, maxsize=10, size=NumFields, exist=((Cause==0)||(Cause==2)||(Cause==5))
    1xPRev, bit, count=8,exist=((Cause==1)||(Cause==2)),indent=2,pos=none
    Invalid MsgId, bit, count=8,exist=(Cause==3),indent=2,pos=none
    Reserved, bit,count=2,indent=2,pos=none
End

Begin Message, GCSNA DL Msg Rec GCSNA 1x Param Request Rsp, BitPack
    Message Sequence, bit, count=6,indent=2,pos=none
    Reserved, bit,count=2,indent=2,pos=none
End

Begin Message, GCSNA DL Msg Rec GCSNA 1x Parameters Rsp, BitPack
    Rec, record, type=1x Parameters Rec, maxsize=1, size =1
End

Begin Message, GCSNA DL Msg Rec GCSNA 1x Param Ack Rsp, BitPack
    Msg Sequence, bit, count=6,indent=2,pos=none
    Reserved, bit,count=2,indent=2,pos=none
End

Begin Message, CP Spy CP CSFB CDMA2K Parm Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Sid Included, uint8, base=enum:FALSE/TRUE
    Sid, uint16, base=10
    Nid Included, uint8, base=enum:FALSE/TRUE
    Nid, uint16, base=10
    MultiSids Inc, uint8, base=enum:FALSE/TRUE
    MultiSids, uint8, base=enum:FALSE/TRUE
    MultiNids Inc, uint8, base=enum:FALSE/TRUE
    MultiNids, uint8, base=enum:FALSE/TRUE
    Reg Zone Inc, uint8, base=enum:FALSE/TRUE
    Reg Zone, uint16, base=10
    Total Zones Inc, uint8, base=enum:FALSE/TRUE
    Total Zones, uint8, base=10
    Zone Timer Inc, uint8, base=enum:FALSE/TRUE
    Zone Timer, uint8, base=10
    PacketZoneId Inc, uint8, base=enum:FALSE/TRUE
    PacketZoneId, uint8, base=10
    PZIDHystParameters Inc, uint8, base=enum:FALSE/TRUE
    PZ Hyst Enabled, uint8, base=enum:FALSE/TRUE
    PZ Hyst Info Inc, uint8, base=enum:FALSE/TRUE
    PZ Hyst List Len, uint8, base=enum:FALSE/TRUE
    PZ Hyst Act Timer, uint8, base=10
    PZ Hyst Timer Mul, uint8, base=10
    PZ Hyst Timer Exp, uint8, base=10
    PRev Inc, uint8, base=enum:FALSE/TRUE
    PRev, uint8, base=10
    Min PRev Inc, uint8, base=enum:FALSE/TRUE
    Min PRev, uint8, base=10
    NegSlotCycleIndexSup Inc, uint8, base=enum:FALSE/TRUE
    NegSlotCycleIndexSup, uint8, base=enum:FALSE/TRUE
    EncryptMode Inc, uint8, base=enum:FALSE/TRUE
    EncryptMode, uint8, base=10
    EncSupported Inc, uint8, base=enum:FALSE/TRUE
    EncSupported, uint8, base=enum:FALSE/TRUE
    SigEncryptSup Inc, uint8, base=enum:FALSE/TRUE
    SigEncryptSup, uint8, base=10
    MsgIntgSup Inc, uint8, base=enum:FALSE/TRUE
    MsgIntgSupported, uint8, base=enum:FALSE/TRUE
    SigIntgSupIncl Inc, uint8, base=enum:FALSE/TRUE
    SigIntgSupIncl, uint8, base=enum:FALSE/TRUE
    SigIntgSup Inc, uint8, base=enum:FALSE/TRUE
    SigIntgSup, uint8, base=10
    Auth Inc, uint8, base=enum:FALSE/TRUE
    Auth, uint8, base=10
    MaxNumAltSO Inc, uint8, base=enum:FALSE/TRUE
    MaxNumAltSO, uint8, base=10
    UseSyncId Inc, uint8, base=enum:FALSE/TRUE
    UseSyncId, uint8, base=enum:FALSE/TRUE
    MsInitPosLocSupInd Inc, uint8, base=enum:FALSE/TRUE
    MsInitPosLocSupInd, uint8, base=enum:FALSE/TRUE
    MobQos Inc, uint8, base=enum:FALSE/TRUE
    MobQos, uint8, base=enum:FALSE/TRUE
    BC InfoReq Inc, uint8, base=enum:FALSE/TRUE
    BC InfoReq, uint8, base=enum:FALSE/TRUE
    BandClass Inc, uint8, base=enum:FALSE/TRUE
    BandClass, uint8, base=10
    BypassRegInd Inc, uint8, base=enum:FALSE/TRUE
    BypassRegInd, uint8, base=10
    AltBandClass Inc, uint8, base=enum:FALSE/TRUE
    AltBandClass, uint8, base=10
    MaxAddServInst Inc, uint8, base=enum:FALSE/TRUE
    MaxAddServInst, uint8, base=10
    Home Reg Inc, uint8, base=enum:FALSE/TRUE
    Home Reg, uint8, base=enum:FALSE/TRUE
    ForSidReg Inc, uint8, base=enum:FALSE/TRUE
    ForSidReg, uint8, base=enum:FALSE/TRUE
    ForNidReg Inc, uint8, base=enum:FALSE/TRUE
    ForNidReg, uint8, base=enum:FALSE/TRUE
    PowerUpReg Inc, uint8, base=enum:FALSE/TRUE
    PowerUpReg, uint8, base=enum:FALSE/TRUE
    PowerDownReg Inc, uint8, base=enum:FALSE/TRUE
    PowerDownReg, uint8, base=enum:FALSE/TRUE
    ParameterReg Inc, uint8, base=enum:FALSE/TRUE
    ParameterReg, uint8, base=enum:FALSE/TRUE
    RegPrd Inc, uint8, base=enum:FALSE/TRUE
    RegPrd, uint8, base=10
    RegDist Inc, uint8, base=enum:FALSE/TRUE
    RegDist, uint16, base=10
    PrefMsidType Inc, uint8, base=enum:FALSE/TRUE
    PrefMsidType, uint8, base=10
    ExtPrefMsidType Inc, uint8, base=enum:FALSE/TRUE
    ExtPrefMsidType, uint8, base=10
    MeidReq Inc, uint8, base=enum:FALSE/TRUE
    MeidReq, uint8, base=enum:FALSE/TRUE
    MCC Inc, uint8, base=enum:FALSE/TRUE
    MCC, uint16, base=10
    IMSI_11_12 Inc, uint8, base=enum:FALSE/TRUE
    IMSI_11_12, uint8, base=10
    IMSI_T Supp Inc, uint8, base=enum:FALSE/TRUE
    IMSI_T Supp, uint8, base=enum:FALSE/TRUE
    ReconnectMsgInd Inc, uint8, base=enum:FALSE/TRUE
    ReconnectMsgInd, uint8, base=enum:FALSE/TRUE
    RER Mode Supp Inc, uint8, base=enum:FALSE/TRUE
    RER Mode Supp, uint8, base=enum:FALSE/TRUE
    TKZ Mode Supp Inc, uint8, base=enum:FALSE/TRUE
    TKZ Mode Supp, uint8, base=enum:FALSE/TRUE
    TKZ ID Inc, uint8, base=enum:FALSE/TRUE
    TKZ ID, uint8, base=enum:FALSE/TRUE
    PilotReport Inc, uint8, base=enum:FALSE/TRUE
    PilotReport, uint8, base=enum:FALSE/TRUE
    SDB Supp Inc, uint8, base=enum:FALSE/TRUE
    SDB Supp, uint8, base=enum:FALSE/TRUE
    AutoFcso Allowed Inc, uint8, base=enum:FALSE/TRUE
    AutoFcso Allowed, uint8, base=enum:FALSE/TRUE
    SDB In RCNM Ind Inc, uint8, base=enum:FALSE/TRUE
    SDB In RCNM Ind, uint8, base=enum:FALSE/TRUE
    FPC FCH Inc, uint8, base=enum:FALSE/TRUE
    FPC FCH Init Setpt RC3, uint8, base=10
    FPC FCH Init Setpt RC4, uint8, base=10
    FPC FCH Init Setpt RC5, uint8, base=10
    FPC FCH Init Setpt RC11, uint8, base=10
    FPC FCH Init Setpt RC12, uint8, base=10
    TAdd Inc, uint8, base=enum:FALSE/TRUE
    TAdd, uint8, base=10
    PilotInc Inc, uint8, base=enum:FALSE/TRUE
    PilotInc, uint8, base=10
    Rand Inc, uint8, base=enum:FALSE/TRUE
    Rand, uint32, base=10
    LP Sec Inc, uint8, base=enum:FALSE/TRUE
    LP Sec, uint8, base=10
    LTM Off Inc, uint8, base=enum:FALSE/TRUE
    LTM Off, uint8, base=10
    Day LT Inc, uint8, base=enum:FALSE/TRUE
    Day LT, uint8, base=enum:FALSE/TRUE
    Gcsna L2AckTimer Inc, uint8, base=enum:FALSE/TRUE
    Gcsna L2AckTimer, uint8, base=10
    Gcsna SeqContextTimer Inc, uint8, base=enum:FALSE/TRUE
    Gcsna SeqContextTimer, uint8, base=10
End

Begin Message, CP Spy CP CSFB SIB8 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SysTimeInfo Incl, uint8, base=enum:FALSE/TRUE
    SystemTimeInfo, array, type=uint8, maxsize=5
    SrchWinSize Incl, uint8, base=enum:FALSE/TRUE
    SrchWindowSize, uint16, base=10
    CsfbRegParm Incl, uint8, base=enum:FALSE/TRUE
    Sid, uint16, base=10
    Nid, uint16, base=10
    Multi Sid, uint8, base=enum:FALSE/TRUE
    Multi Nid, uint8, base=enum:FALSE/TRUE
    Home Reg, uint8, base=enum:FALSE/TRUE
    Foreign Sid Reg, uint8, base=enum:FALSE/TRUE
    Foreign Nid Reg, uint8, base=enum:FALSE/TRUE
    Parameter Reg, uint8, base=enum:FALSE/TRUE
    Power Up Reg, uint8, base=enum:FALSE/TRUE
    Reg Period, uint8, base=10
    Reg Zone, uint16, base=10
    Total Zone, uint8, base=10
    Zone Timer, uint8, base=10
    Power Down Reg, uint8, base=enum:FALSE/TRUE
    LongCode State Incl, uint8, base=enum:FALSE/TRUE
    LongCode State, array, type=uint8, maxsize=6
    Cell Resel Parm Incl, uint8, base=enum:FALSE/TRUE
    Supp Dual RxUE Incl, uint8, base=enum:FALSE/TRUE
    Supp Dual RxUE, uint8, base=enum:FALSE/TRUE
    AC BarringCfg Incl, uint8, base=enum:FALSE/TRUE
    AC Barr 0to9, uint8, base=10
    AC Barr 10, uint8, base=10
    AC Barr 11, uint8, base=10
    AC Barr 12, uint8, base=10
    AC Barr 13, uint8, base=10
    AC Barr 14, uint8, base=10
    AC Barr 15, uint8, base=10
    AC Barr Msg, uint8, base=10
    AC Barr Reg, uint8, base=10
    AC Barr Emg, uint8, base=10
    Resel List Size, uint8, base=10
    Band, uint8, base=10
    Channel, uint16, base=10
    Cell Resel Pri, uint8, base=10
    Num PN, uint8, base=10
    PN, array, type=uint16, maxsize=16
End

Begin Message, CP Spy CP CSFB REDIRECT Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Redir, uint8, base=enum:FALSE/TRUE
    Type, uint8, base=enum:1xRTT/HRPD
    Band, uint8, base=10
    Channel, uint16, base=10
    Num PN, uint8, base=10
    PN, array, type=uint16, maxsize=16
End

Begin Message, CP Spy CP MMC PKT PDN Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PDN Status Table, record, type=PDN Status Rec, maxsize=4,size=4
End

Begin Record, PDN Status Rec
    Modem, uint32, 	base=enum:Modem Type
    PDN Id, uint8, 	base=10
    Status, uint32, 	base=enum:PDN Status Type
    APN name, string,   length=20, columns=20, rows=1
End

Begin Message, CP Spy CP MMC Default Bearer Response Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Default Bearer, record, type=Default Bearer Status Rec, maxsize=1,size=1
End

Begin Record, Default Bearer Status Rec
    RAT Id, uint8,   base=enum:GmssRatId
    PDN Id, uint8,   base=16
    Bearer Id, uint8,   base=16
    Status, uint8,   base=enum:AP Status Type
    Addr Type, uint8,   base=enum:Address Type
    Padding1, uint8
    Padding2, uint16
    Local IPv6 Addr, array,   type=uint32, maxsize=4, size=4
    Local IPv4 Addr, uint32,  base=16
    PCSCF6 Number, uint8,   base=16
    Padding3, uint8
    Padding4, uint16
    PCSCF IPv6 Addr, array,   type=uint32, maxsize=16, size=16
    DNS6 Number, uint8,   base=16
    Padding5, uint8
    Padding6, uint16
    DNS IPv6 Addr, array,   type=uint32, maxsize=16, size=16
    PCSCF4 Number, uint8,   base=16
    Padding7, uint8
    Padding8, uint16
    PCSCF IPv4 Addr, array,   type=uint32, maxsize=4, size=4
    DNS4 Number, uint8
    Padding9, uint8
    Padding10, uint16
    DNS IPv4 Addr, array,   type=uint32, maxsize=4, size=4
    Route Addr, uint32
    IPv6 IID, array,	  type=uint8, maxsize=8, size=8
    Sel Bearer Ctrl Mode, uint8
    Error Code, uint8,   base=enum:PDN ErrCode Type
End

Begin Message, CP Spy CP MMC Set Modem Data State Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    LTE Data State, uint8,  base=enum:Modem State Type
    CDMA Data State, uint8,  base=enum:Modem State Type
    GSM Data State, uint8,  base=enum:Modem State Type
    UMTS Data State, uint8,  base=enum:Modem State Type
End

Begin Message, CP Spy CP MMC Set Modem Call State Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    LTE Call State, uint8,  base=enum:Modem State Type
    CDMA Call State, uint8,  base=enum:Modem State Type
    GSM Call State, uint8,  base=enum:Modem State Type
    UMTS Call State, uint8,  base=enum:Modem State Type
End

Begin Message, CP Spy CP MMC PKT LTE Default Bearer Req Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Default Bearer, record, type=Default Bearer Request Rec, maxsize=1,size=1
End

Begin Record, Default Bearer Request Rec
    PDN Id, uint8,   base=16
    PDN Type, uint8,   base=enum:Address Type
    Attach Type, uint8,	  base=enum:Attaching Type
    PDN IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    PDN IPv4 Addr, array,   type=uint8, maxsize=4, size=4
    Default Router, array,	  type=uint8, maxsize=4, size=4
    PDP Flag, uint8,   base=enum:PDP Flag Type
    APN Length, uint8,   base=16
    APN Name, string,  length=20, columns=20, rows=1
End

Begin Message, CP Spy CP MMC PKT LTE Default Bearer Response Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Default Bearer, record, type=Default Bearer Status Rec, maxsize=1,size=1
End

Begin Message, CP Spy CP MMC PKT CDMA Default Bearer Req Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Default Bearer, record, type=Default Bearer Request Rec, maxsize=1,size=1
End

Begin Message, CP Spy CP MMC PKT CDMA Default Bearer Response Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Default Bearer, record, type=Default Bearer Status Rec, maxsize=1,size=1
End

Begin Message, CP Spy CP MMC PKT GENERIC BYTE SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ByteContents, array,   type=uint8, maxsize=148, size=148
End

Begin Message, CP Spy CP MMC PKT GENERIC LONGWORD SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    LongWord, array,   type=uint32, maxsize=37, size=37
End

Begin Message, CP Spy CP MMC GMSS State SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    GmssOpMode, uint8, base=enum:GmssopMode
    GmssState, uint8, base=enum:GmssSt
    GmssAction, uint8, base=enum:GmssAct
    CurCsRat, uint8, base=enum:GmssRatId
    CurPsRat, uint8, base=enum:GmssRatId
    CurPsType, uint8, base=enum:GmssPsType
    TargetPsRat, uint8, base=enum:GmssRatId
    PendedAct, uint8, base=enum:GmssAct
    PowerStatus, uint8, base=enum:GmssPowerStatus
    PsMCC, uint16, base=10
End

Begin Message, CP Spy CP MMC GMSS RAT State SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RAT State, record,  type = GMSS Rat Info, maxsize=5
End

Begin Record, GMSS Rat Info
    RatType, uint8, base = enum:GmssRatId, indent = 2
    AcqSt, uint32, base = enum:GmssAcqSt
    PriClass, uint8, base = enum:Gmsspri
    CpSt, uint32, base = enum:GmssRatCpSt
    PsType, uint8, base = enum:GmssPsType
    Blocked, uint8, base = enum:No0/No1/No2/Yes
End

Begin Message, CP Spy CP IRAT RFC State Spy Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CDMA-ANT State, uint8,  base=enum:IratRfcCdmaState
    LTE-ANT State, uint8,  base=enum:IratRfcLteState
End

Begin Message, CP Spy CP CSS PRL Spy Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=16384, size=end, columns=60
End

Begin Message, CP Spy CP CSS MSPL Spy Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=1560, size=end, columns=60
End

Begin Message, CP Spy CP CSS MLPL Spy Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=1560, size=end, columns=60
End

Begin Message, CP Spy CP PDS IS801 Location Serv Tx Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=256, size=end, columns=60
End

Begin Message, CP Spy CP PDS IS801 Location Serv Rx Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=256, size=end, columns=60
End

Begin Message, CP Spy CP PDS IS801 Location Event Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Handset Time, uint32
    Latitude, uint32
    Longitude, uint32
    Heading, uint16
    Height, uint16
    CDMA Time Reference, uint16
    Horizontal Velocity, uint16
    Vertical Velocity, uint16
    Fix Type, uint8
    Location Uncertainty Angle, uint8
    Location Uncertainty A, uint8
    Location Uncertainty P, uint8
    Session Id, uint8
    GPS Session Count, uint32, default=0
    Num Of Positions, uint32, default =0
    GPS Week, uint32, default =0
    GPS Time Of Week, uint32, default =0
    Altitude Above Sea Level, uint8, default =0
    Horizontal Velocity Uncetainty, uint8, default =0
    Vertical Velocity Uncetainty, uint8, default =0
    Horizontal Heading Uncetainty, uint8, default =0
    Altitude Uncetainty, uint8, default =0
    Latitude Uncetainty, uint8, default =0
    Longitude Uncetainty, uint8, default =0
    Horizontal Magnetic Heading, uint8, default =0
    Position Dilution of Precision, uint8, default =0
    Horizontal Dilution of Precision, uint8, default =0
    Vertical Dilution of Precision, uint8, default =0
    Number Of Space Vehicles, uint32, default =0
    Total Space Vehicles Detected, uint32, default =0
    Pseudo Random Noise Of Space Vehicle, uint32, default =0
End

Begin Message, CP Spy CP PDS IS801 Location Almnanac Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=256, size=end, columns=60
End

Begin Message, CP Spy CP PDS IS801 Location Ephemeris Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=256, size=end, columns=60
End

Begin Message, CP Spy CP PDS IS801 Location LocResp Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array,  type=uint8, maxsize=256, size=end, columns=60
End

Begin Message, CP Spy CP PDS IS801 Location IS801 MSG Rsp, BitPack, OTTSName=CMsgPDSIS801MSG
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    IS_801_Message, record, type=PDS IS801 Msg Rec, maxsize=1
End

Begin Record, PDS IS801 Msg Rec, BitPack, OTTSName = CMsgPDSIs801
    <<< MessageId, uint8, indent = 1, base=enum:PDS IS801 Msg Enum
    IS_801_msg, union, enum=<<< MessageId
End

Begin Message, PDS IS801 Msg Rec FOR IP packet Rec LS Rsp, BitPack, OTTSName=CMsgFORBurstTypeLS
    SESS_START, bit, count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    SESS_END, bit, count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    SESS_SOURCE, bit, count=1,indent=2,base=enum:BS Init/MS Orig,pos=none
    SESS_TAG, bit, count=5,indent=2,pos=none
    PD_MSG_TYPE, bit, count=8,indent=2,pos=none
    NUM_REQUESTS, bit, count=4,indent=2,pos=none
    NUM_RESPONSES, bit,count=4,indent=2,pos=none
    REQ_Rec, record, type=LS BS Req Rec, maxsize=15, size=NUM_REQUESTS, indent = 2
    RSP_Rec, record, type=LS BS Rsp Rec, maxsize=15, size=NUM_RESPONSES, indent = 2
End

Begin Message, PDS IS801 Msg Rec REV IP packet Rec LS Rsp, BitPack, OTTSName=CMsgREVBurstTypeLS
    SESS_START, bit, count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    SESS_END, bit, count=1,indent=2,base=enum:FALSE/TRUE,pos=none
    SESS_SOURCE, bit, count=1,indent=2,base=enum:BS Init/MS Orig,pos=none
    SESS_TAG, bit, count=5,indent=2,pos=none
    PD_MSG_TYPE, bit, count=8,indent=2,pos=none
    NUM_REQUESTS, bit, count=4,indent=2,pos=none
    NUM_RESPONSES, bit,count=4,indent=2,pos=none
    REQ_Rec, record, type=LS MS Req Rec, maxsize=15, size=NUM_REQUESTS, indent = 2
    RSP_Rec, record, type=LS MS Rsp Rec, maxsize=15, size=NUM_RESPONSES, indent = 2
End

Begin Message, CP Spy CP PDS GPS Location Update Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    GPS Week, uint32, base=10, default = 0
    GPS Time Of Week(msec), uint32, base=10, default = 0
    Latitude(degree), double
    Longitude(degree), double
    Heading(degree), double
    Height(m), int32, base=10, default = 0
End

Begin Message, CP Spy CP PDS Printf Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, string, size=end, rows=16, columns=40
End

Begin Message, CP Spy CP HSC Generic Spy Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=160, size=end, columns=60
End

Begin Message, CP Spy CP HSC Clk Cal Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CalComplete, int32,  base=enum:FALSE/TRUE
    CalId, int32,  base=10
    CalFrames in 1pt28sec, int32,  base=16
    Owner, int32,  base=enum:1X/DO
    Cal32kHzDelta, int32,  base=16
    Cal9MHzDelta, int32,  base=16
    MiniAcqCorrTc8, int32,  base=16
    Online Cal Adj, int32,  base=16
    Cal Value, int32,  base=16
    Cal Value Quotient, int32,  base=16
    Cal Value Remainder, int32,  base=16
End

Begin Message, CP Spy CP HSC Ssm Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PreemptEnabled, uint32,   base=16
    Owner, uint32,   base=enum:HscCdmaModeT
    ResyncTime1x, uint32,   base=16
    ResyncTimeDO, uint32,   base=16
    Active1xQ, record,   type=QueueT, maxsize=1
    ActiveDOQ, record,   type=QueueT, maxsize=1
    Resync1xQ, record,   type=QueueT, maxsize=1
    ResyncDOQ, record,   type=QueueT, maxsize=1
    Wait_1xQ, record,   type=QueueT, maxsize=1
    Wait_DOQ, record,   type=QueueT, maxsize=1
    SuspendedQ, record,   type=QueueT, maxsize=1
End

Begin Record, QueueT
    Queue Pointer, uint32,   base=16
    Function Pointer, uint32,   base=16
End

Begin Message, CP Spy CP HSC Ssm 1X Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=160, size=end, columns=60
End

Begin Message, CP Spy CP HSC Ssm DO Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=160, size=end, columns=60
End

Begin Message, CP Spy CP HSC Ssm 9MHz Backoff Time Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Pll Settle, uint32,   base=16
    RxAgc Settle Short, uint32,   base=16
    RxAgc Settle Long, uint32,   base=16
    MiniAcq Settle, uint32,   base=16
    Misc Adj, uint32,   base=16
End

Begin Message, CP Spy CP HSC SPage DO Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Slotted Enabled, uint16,  base=enum:FALSE/TRUE
    Slotted State, uint16,  base=enum:HscSpStateT
    Slotted History, uint16,  base=16
    Slot Cycle Index, uint16,  base=16
End

Begin Message, CP Spy CP HSC SPage 1X Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Slotted Enabled, uint16,  base=enum:FALSE/TRUE
    Slotted State, uint16,  base=enum:L1dSPageStateT
    Slotted History, uint16,  base=16
    Slot Cycle Index, uint16,  base=16
    Immediate WakeMode, uint16,  base=enum:WakeModeT
End

Begin Message, CP Spy CP HSC Mpa Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    All Status, uint16,   base=16
    Status, record,   type=MpaStatusT, maxsize=1
    Privilege, record,   type=MpaPrivilegeT, maxsize=1
End

Begin Record, MpaStatusT
    1X Status, uint16,  base=16
    DO Status, uint16,  base=16
    GPS Status, uint16,  base=16
End

Begin Record, MpaPrivilegeT
    1X Privilege, uint16,  base=16
    DO Privilege, uint16,  base=16
    GPS Privilege, uint16,  base=16
End

Begin Message, CP Spy CP HSC Oosa Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Oosa1X, record,   type=HscOosaT, maxsize=1
    OosaDO, record,   type=HscOosaT, maxsize=1
End

Begin Record, HscOosaT
    InOosa, uint32,   base=enum:FALSE/TRUE
    StartTime, uint32
    WakeTime, uint32
    SleepDuration, uint32
End

Begin Message, Cp Spy CP SLC DSCP SESSION STATE INFO Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ConnectionState, uint8,   base = enum:Close/Open, indent=2
    ConfigurationLock, uint8,   base = enum:Unlock/Lock, indent=2
    SessionConfigToken, uint16, indent=2
    SessionId, uint16, indent=2
    PersonalityIndex, uint8,  indent=2
    InUseAttrs, record,  type = DScp Attributes Info, maxsize=1, indent=2
    ATSupportedAppSubtypes, record, type = DScp AT Supported App Subtypes, maxsize=1, indent=2
    PriorSessionInfo, record,  type = DScp PriorSession Info, maxsize=1, indent=2
End

Begin Record, DScp Attributes Info
    ProtocolType, array, type = uint16, maxsize = 26, columns = 8
    SupportGAUPSessionConfigToken, uint16, base = enum:Not Support/Support, indent = 2
    PersonalityCount, uint16, indent = 2
    SupportConfigurationLock, uint16, base = enum:Not Support/Support, indent = 2
End

Begin Record, DScp AT Supported App Subtypes
    ATSupAppSubtypes: numAppSubtypes, uint8
    appSubtypes, array, type = uint16, maxsize = 12, columns = 16, indent = 4
End

Begin Record, DScp PriorSession Info
    PriorSessionInfo: RestorePriorSession, uint8
    ANAccepted, uint8, indent = 4
    SessionConfigToken, uint16, indent = 4
    SessionId, uint16, indent = 4
    UATI, array, type = uint8, maxsize = 16, columns = 8, indent = 4
    SecurityPacketLength, uint8, indent = 4
    SecurityPacket, array, type = uint8, maxsize = 255, size = SecurityPacketLength, columns = 8, indent = 4
End

Begin Message, Cp Spy CP SLC DSCP ATTRIBUTES DATA Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    DScpAttrs, record,  type = DScp Attribute Rec, maxsize=40, size=end, indent=2
End

Begin Record, DScp Attribute Rec
    Length, uint8, indent = 2
    AttributeID, uint16, base = enum:DScp Attribute Type Enum, indent = 2, Byteorder = motorola
    AttributeValue, array,type=uint16,maxsize=10,size=Length/2-1,indent=2,byteorder=motorola,exist=AttributeID < 0x1000
    ValueID, array,type=uint8,maxsize=10,size=Length-2,indent=2,byteorder=motorola,exist=AttributeID >= 0x1000
End

Begin Message, Cp Spy CP SLC DSCP PRIOR SESSION ATTRIBUTE Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Length, uint8, indent = 2
    AttributeID, uint16, base = enum:DScp Attribute Type Enum, indent = 2, default = 0x1000, Byteorder = motorola
    PriorSession, record, type = DScp Prior Session Attribute Rec, maxsize=5, size=end, indent=2
End

Begin Record, DScp Prior Session Attribute Rec
    ValueID, uint8, indent = 3
    Restore, uint8, indent = 3
    UATI, array, type = uint8, maxsize = 16, columns = 8, indent = 3, exist=(Restore==0x80)
    SecurityPacketLength, uint8, indent = 3, exist=(Restore==0x80)
    SecurityPacket, array, type = uint8, maxsize = 255, size = SecurityPacketLength, columns = 8, indent = 3, exist=(Restore==0x80)
End

Begin Message, Cp Spy CP SLC DSCP AT SUPPORTED APP SUBTYPES ATTRIBUTE Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Length, uint8, indent = 2
    AttributeID, uint16, base = enum:DScp Attribute Type Enum, indent = 2, default = 0x1001, Byteorder = motorola
    AtSupportedAppSubtypes, record, type = DScp AT Supported App Subtypes Attribute Rec, maxsize=5, size=end, indent=2
End

Begin Record, DScp AT Supported App Subtypes Attribute Rec
    ValueID, uint8, indent = 4
    numAppSubtypes, uint8, indent = 4
    appSubtypes, array, type = uint16, maxsize = 20, size = numAppSubtypes, columns = 16, Byteorder = motorola, indent = 4
End

Begin Message, Cp Spy CP_SLC_AMP_STATE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    AmpState, uint32, base=enum:Inactive/Setup/Open
    UATIColorCode, uint8
    UATISubnetMask, uint8
    UATI, array, type=uint8, maxsize=16, size=16
    OldUATI, array, type=uint8, maxsize=16, size=16
    ReducedSubnetMask, array, type=uint8, maxsize=16, size=16
    UpperOldUATILen, uint8
    X0, uint32
    Y0, uint32
End

Begin Message, Cp Spy CP_SLC_AMP_ATI_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    NumRecvATIList, uint8
    Rcv ATI List, record, type=ATI, maxsize=10
    Trans ATI, record, type=ATI, maxsize=1
End

Begin Record, ATI
    ATIType, uint8,  base=enum:ATIType
    ATI, uint32
    SysTime, uint32
    use, uint8,  base=enum:FALSE/TRUE
End

Begin Message, Cp Spy CP SLC STATE SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    State, uint32, base=enum:Session State Enum, default=0
End

Begin Message, Cp Spy CP_SEC_DHKEY_HASH_DATA_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    AT Hash Data, array, type=uint8, maxsize=139, size=end, columns=60
End

Begin Message, Cp Spy CP_SEC_DHKEY_HASH_RESULT_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    AT KeySignature, array, type=uint8, maxsize=20, size=end, columns=30
End

Begin Message, Cp Spy CP CLC L3 STATE CHANGE Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ATState, uint32, base = enum:ATState Enum, indent = 2
    AlmpState, uint8, base = enum:Almp State Enum, indent=2
    InspState, uint8, base = enum:Insp State Enum, indent=2
    IdpState, uint8, base = enum:Idp State Enum, indent=2
    CspState, uint8, base = enum:Csp State Enum, indent=2
    RupState, uint8, base = enum:Rup State Enum, indent=2
    OmpState, uint8, base = enum:Omp State Enum, indent=2
    HybridState, uint8, base = enum:Off/On, indent = 2
End

Begin Message, Cp Spy CP CLC L3 STATE UPDATE Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ATState, uint8, base = enum:ATState Enum, indent = 2
    AlmpState, uint8, base = enum:Almp State Enum, indent=2
    InspState, uint8, base = enum:Insp State Enum, indent=2
    IdpState, uint8, base = enum:Idp State Enum, indent=2
    CspState, uint8, base = enum:Csp State Enum, indent=2
    RupState, uint8, base = enum:Rup State Enum, indent=2
    OmpState, uint8, base = enum:Omp State Enum, indent=2
    HybridState, uint8, base = enum:Off/On, indent = 2
End

Begin Message, Cp Spy CP RMC SRCH Initial Acq Sort Result Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Active Data, record, type=RmcSchSortRecords, maxsize=20
End

Begin Record, RmcSchSortRecords
    Metric, uint16, base=10
    PilotPN, uint16, base=10
    OffsetTc2, int16, base=10
End

Begin Message, Cp Spy CP RMC SRCH Usable Paths Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    WinSize, uint16, base=10
    NumUsablePaths, uint8, base=10
    PathInfo, record, type=RmcUsablePathRecords, maxsize=42, size=NumUsablePaths
End

Begin Record, RmcUsablePathRecords
    AssocAnt, uint8, base=10 , indent=1
    PilotPN, uint16, base=10
    OffsetTc16, int16,  base=10
    MacId, uint8, base=10
    StrengthdB, uint16, scale=Q16, format=%2.2f, log10=true, logscale=10
    SOffsetTc16, int16,  base=10
End

Begin Message, Cp Spy CP RMC SRCH Sector Info Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    NumSectors, uint8, base=10
    RefPilotPN, uint16, base=10
    SectorInfo, record, type=RmcSectorRecords, maxsize=6, size=NumSectors
End

Begin Record, RmcSectorRecords
    PilotPN, uint16, base=10
    MacId, uint8 , base=10
    PwrEstdB, uint16, scale=Q16, format=%2.2f, log10=true, logscale=10
    PcgId, int8,   base=10
    RABLength, uint8, base=10
    RABOffset, uint8, base=10
    RACGain, uint8, base=10
    DRCCover, uint8, base=10
    DSC, uint8, base=10
End

Begin Message, Cp Spy CP RMC SRCH Input Buffer Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    IQData, record, type=IQDataRecords, maxsize=7, size=7
End

Begin Record, IQDataRecords
    Row0, uint32, base=16
    Row1, uint32, base=16
    Row2, uint32, base=16
    Row3, uint32, base=16
    Row4, uint32, base=16
    Row5, uint32, base=16
    Row6, uint32, base=16
    Row7, uint32, base=16
    Row8, uint32, base=16
    Row9, uint32, base=16
End

Begin Message, Cp Spy CP RMC RFC Main Rx AGC Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Agc Mode, uint32, base=enum:RFC Rx AGC Type
    DigiGain HwVal, uint16, base=16
    DigiGain (Alog2), int16,  scale=Q7, format=%4.2f
    DigiGain (dB), int16,  scale=Q7, format=%4.2f
    Rx Gain State, uint8,  base=10
    Gain Transitions, uint8,  base=10
    Unadj Pwr (Alog2), int16,  scale=Q7, format=%4.2f
    Temp Adj (Alog2), int16,  scale=Q7, format=%4.2f
    Freq Adj (Alog2), int16,  scale=Q7, format=%4.2f
    Adj Rx Power (Alog2), int16,  scale=Q7, format=%4.2f
    Temp Adj (dB), int16,  scale=Q7, format=%4.2f
    Freq Adj (dB), int16,  scale=Q7, format=%4.2f
    Adj Receive Power (dB), int16,  scale=Q7, format=%4.2f
End

Begin Message, Cp Spy CP RMC RFC Div Rx AGC Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Agc Mode, uint32, base=enum:RFC Rx AGC Type
    DigiGain HwVal, uint16, base=16
    DigiGain (Alog2), int16,  scale=Q7, format=%4.2f
    DigiGain (dB), int16,  scale=Q7, format=%4.2f
    Rx Gain State, uint8,  base=10
    Gain Transitions, uint8,  base=10
    Unadj Pwr (Alog2), int16,  scale=Q7, format=%4.2f
    Temp Adj (Alog2), int16,  scale=Q7, format=%4.2f
    Freq Adj (Alog2), int16,  scale=Q7, format=%4.2f
    Adj Rx Power (Alog2), int16,  scale=Q7, format=%4.2f
    Temp Adj (dB), int16,  scale=Q7, format=%4.2f
    Freq Adj (dB), int16,  scale=Q7, format=%4.2f
    Adj Receive Power (dB), int16,  scale=Q7, format=%4.2f
End

Begin Message, Cp Spy CP RMC RFC Main DC Offset Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    DC Offset Mode, uint32, base=enum:Auto/Manual
    I Channel Offset, int16,  base=10
    Q Channel Offset, int16,  base=10
End

Begin Message, Cp Spy CP RMC RFC Div DC Offset Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    DC Offset Mode, uint32, base=enum:Auto/Manual
    I Channel Offset, int16,  base=10
    Q Channel Offset, int16,  base=10
End

Begin Message, Cp Spy CP RMC RFC AFC Adjustment Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Afc State, uint32, base=enum:RFC AFC Type
    Afc Hz Offset, int16,  base=10
    Afc Ppm Offset, int16,  scale=Q10, format=%2.4f
    Afc DAC Value, uint16, base=16
End

Begin Message, Cp Spy CP RMC RFC AFC Metrics Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Afc State, uint32,  base=enum:RFC AFC Type
    AFC_N_Acc - NA, uint16, base=10
    AFC_SNR_Acc - SA, uint32, scale=Q9
    AFC_Re_Fine_Acc - Re(ZAf), int32,  base=10
    AFC_Im_Fine_Acc - Im(ZAf), int32,  base=10
    AFC_Re_Coarse_Acc - Re(ZAc), int32,  base=10
    AFC_Im_Coarse_Acc - Im(ZAc), int32,  base=10
    RSNR, uint32, base=10
    Angle_Error_fine - Pf, int16,  base=10
    Angle_Error_coarse - Pc, int16,  base=10
    FE_fine, int16,  base=10
    FE_coarse, int16,  base=10
    F_fine, int16,  base=10
    F_coarse, int16,  base=10
    F_est, int16,  base=10
    NyquistRegion - NYG, int8,   base=10
    CTR_persistance, uint8,  base=10
End

Begin Message, Cp Spy CP RMC CSM C2I Sampling Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    STSlots, uint16, scale=Q5, format=%2.0f
    ServingPN, uint16, base=10
    NumberSector, uint8,  base=10
    NumberPCG, uint8,  base=10
    DRCLockDataValid, uint8,  base=enum:Invalid/Valid
    C2ISampleCounter, uint8,  base=10
    SampleData, record, type=CsmSamplingDataT, maxsize=6, size=NumberSector
End

Begin Record, CsmSamplingDataT
    PilotPN, int16, indent = 1, base=10
    PCGId, uint8, base=10
    DRCCover, uint8, base=16
    DSC, uint8, base=16
    DRCLock, uint8, base=16
    C2IEstdB, int32, base=10, scale = Q7, format=%7.2f
    SampleCount, uint8, base=10
    C2IHwCount, uint8, base=10
    C2IDataStable, uint8, base=enum:Unstable/Stable
    PersistTimer, uint8, base=10
End

Begin Message, Cp Spy CP RMC CSM HW Monitor Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    DOTimeFrames, uint32
    CSMState, bit, count=3, offset=8, bytes=4, pos=first, base=enum:variable/Fixed/Preempt/Idle
    RecordCount, bit, count=5, offset=11, bytes=4, pos=last, base=10
    RegisterData, record, type=CsmMonitoredRegT, maxsize=16, size=RecordCount
End

Begin Record, CsmMonitoredRegT
    slot, uint16, indent = 1, base=10, scale = Q5, format=%2.0f
    CsToggle, bit, count=1, offset=3, bytes=1, pos=first, base=10
    CsOn, bit, count=1, offset=7, bytes=1, pos=last,  base=10
    FnDlyStart, bit, count=1, offset=5, bytes=1, pos=first, base=10
    C2ISel, bit, count=1, offset=6, bytes=1, pos=middle,base=10
    FnDlyDone, bit, count=1, offset=7, bytes=1, pos=last,  base=10
    FnDlyCnt, uint8, base=10
    Drc C2I, uint16,base=16
    FngC2I/DrcCReg, uint16,base=16
    MacC2I/MbpInfo, uint16,base=16
    TxResume, bit, count=1, offset=0, bytes=1, pos=first, base=10
    TxFreeze0, bit, count=1, offset=1, bytes=1, pos=middle,base=10
    DscLat, bit, count=3, offset=2, bytes=1, pos=middle,base=10
    DrcCLat, bit, count=3, offset=5, bytes=1, pos=last,  base=10
    DscStart, bit, count=1, offset=7, bytes=1, pos=first, base=10
    DscEnd, bit, count=1, offset=6, bytes=1, pos=last,  base=10
    FixAckCh, bit, count=2, offset=4, bytes=1, pos=first,  base=enum:NF0/NF1/ACK/NAK
    FixAckMd, bit, count=1, offset=6, bytes=1, pos=middle, base=enum:BPSK/OOK
    AckerEn, bit, count=1, offset=7, bytes=1, pos=last,   base=enum:Dis/En
End

Begin Message, Cp Spy CP_RMC_DO_RFC_RXTX_SPY_ID Rsp, BitPack
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    MainRxPwr(dBm), int16,  scale=Q7, format=%3.2f, indent=1
    MainDigiGain(dB), int16,  scale=Q7, format=%2.2f
    MainRxGainState, uint8,  base=10
    MainTransitions, uint8,  base=10
    DivRxPwr(dBm), int16,  scale=Q7, format=%3.2f, indent=1
    DivDigiGain(dB), int16,  scale=Q7, format=%2.2f
    DivRxAgcMode, bit, count=4,base=enum: OFF/ ON,pos=none
    DivRxGainState, bit,count=4,pos=none
    DivTransitions, uint8,  base=10
    TxTotalPwr(dBm), int16,  scale=Q7, format=%3.2f, indent=1
    TxPdmValue, uint16, base=16
    TxAgcMode, bit, count=4,base=enum: OFF/ AC/ RTC,pos=none
    TxGainState, bit,count=4,pos=none
    TxTransitions, uint8,  base=10
    RxPwrFilt(dBm), int16,  scale=Q7, format=%3.2f, indent=1
    CloseLoopAdj(dB), int16,  scale=Q7, format=%3.2f
    TxPilotPwr(dBm), int16,  scale=Q7, format=%3.2f
    DrclockBitMap, uint16, base=16
    Tx32bitHwValue, uint32, base=16, NoExist=0
End

Begin Message, Cp Spy CP_RMC_IRAT_SCH_GENERIC_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint32, maxsize=64, size=end, columns=60
End

Begin Message, Cp Spy CP_RMC_DO_DFS_RESULT_SPY_ID Rsp
    Sys Time, uint32
    NumCandidate, uint8, base=10
    NumNeighbor, uint8, base=10
    Candidate, record, type=RmcRupPilotMeasure, maxsize=10,size=10
    Neighbor, record, type=RmcRupPilotMeasure, maxsize=40, size=40
End

Begin Record, RmcRupPilotMeasure
    PnPhase, int16, base=10, indent=1
    Strength, int16, base=10
End

Begin Message, Cp Spy CP_RMC_FMP_EQ_WWL_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint32, maxsize=64, size=end, columns=64
End

Begin Message, Cp Spy CP_RMC_FMP_GENERIC_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint32, maxsize=64, size=end, columns=60
End

Begin Message, Cp Spy CP_RMC_FMP_FNG_POSITION_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Finger Stats, record, type=FmpFingerRecT, maxsize=6, size=end
End

Begin Record, FmpFingerRecT
    allocStatus, uint32, base=enum:FmpAllocStatT, indent=1
    assocFinger, uint8,  base=10
    assigned, uint8,  base=enum:FALSE/TRUE
    assocAnt, uint8,  base=enum:MAIN/DIV
    fastTTrack, uint8,  base=enum:Normal/Fast
    graceTmr, uint8,  base=enum:NA/Active/Expired
    pilotPN, uint16, base=10
    offsetTc16, int16,  base=10
    fingerPos, uint16, base=16
    snrEstdB, uint16, scale=Q9, format=%2.2f, log10=true, logscale=10
    filtSnrEstdB, uint16, scale=Q9, format=%2.2f, log10=true, logscale=10
    pwrEstdB, uint16, scale=Q16, format=%2.2f, log10=true, logscale=10
    pwrOnTime, uint16
    pwrEarly, uint16
    pwrLate, uint16
End

Begin Message, Cp Spy CP_RMC_FMP_MAC_POSITION_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Leading Finger Index, uint8, base=10
    Trailing Finger Index, uint8, base=10
    Finger Stats, record, type=FmpMacFingerRecT, maxsize=12
End

Begin Record, FmpMacFingerRecT
    allocStatus, uint32, base=enum:FmpMacAllocStatT, indent=1
    assocFinger, uint8,  base=10
    assigned, uint8,  base=enum:FALSE/TRUE
    assocAnt, uint8,  base=enum:MAIN/DIV
    pilotPN, uint16, base=10
    offsetTc16M, int16,  base=10
    offsetTc16D, int16,  base=10
    fingerPosM, uint16, base=16
    fingerPosD, uint16, base=16
    pwrEstMaindB, uint16, scale=Q16, format=%2.2f, log10=true, logscale=10
    pwrEstDivdB, uint16, scale=Q16, format=%2.2f, log10=true, logscale=10
    pwrOnTimeM, uint16
    pwrOnTimeD, uint16
    dropTmr, uint8, base=enum:NA/Active/Expired
    graceTmr, uint8, base=enum:NA/Active/Expired
End

Begin Message, Cp Spy CP_RMC_FMP_FNG_HWCONFIG_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FMPMode, uint32, base=enum:FmpMode
    fnMode, uint16
    fnEn, uint16
    fnIIR, uint16
    stEvFn0Alloc, uint16
    pnOffset, uint16
    fingerPos0, uint16
    fingerPos1, uint16
    fingerPos2, uint16
    fingerPos3, uint16
    fingerPos4, uint16
    fingerPos5, uint16
    fnComb0, uint16
    fnComb1, uint16
    fnComb2, uint16
    fnComb3, uint16
    macId, uint16
    fnMode2, uint16
    fnAnt, uint16
    fnSnrHarqTotal(dB), uint16, scale=Q9, format=%2.2f, log10=true, logscale=10
    fnEnCap, uint16
    fnCmbSnrIIR, uint16
    fnSnrPmbTotal(dB), uint16, scale=Q9, format=%2.2f, log10=true, logscale=10
    fnSTCntOffset, uint16
    fnSnrTotal(dB), uint16, scale=Q9, format=%2.2f, log10=true, logscale=10
    From, uint32, base=enum:RmcFmpSpySenderT
End

Begin Message, Cp Spy CP_RMC_FMP_NEW_ALLOC_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    New Finger Alloc, record, type=New Finger Alloc, maxsize=6, size=end
End

Begin Record, New Finger Alloc
    fingerNum, uint8, base=10, indent=1
    pnOffset, uint16, base=10
    fingerPos, uint16, base=16
    macId, uint16, base=10
    newFlag, uint8, base=enum:FALSE/TRUE
End

Begin Message, Cp Spy CP_RMC_FMP_DEALLOC_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Finger DeAlloc, record, type=Finger DeAlloc, maxsize=6, size=end
End

Begin Record, Finger DeAlloc
    fingerNum, uint8, base=10
End

Begin Message, Cp Spy CP_RMC_FMP_FNGLISTM_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FingerListM, record, type=FmpAllocT, maxsize=3, size=end
End

Begin Record, FmpAllocT
    fngIndex, uint8, base=10, indent=1
    assocAnt, uint8,  base=16
    pilotPN, uint16, base=10
    offsetTc16, int16,  base=16
    macId, uint16, base=10
    pwrEstQ16, uint16, base=10
End

Begin Message, Cp Spy CP_RMC_FMP_FNGLISTD_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FingerListD, record, type=FmpAllocT, maxsize=3, size=end
End

Begin Message, Cp Spy CP_RMC_FMP_SCHLISTM_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SCHListM, record, type=FmpAllocT, maxsize=20, size=end
End

Begin Message, Cp Spy CP_RMC_FMP_SCHLISTD_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SCHListD, record, type=FmpAllocT, maxsize=20, size=end
End

Begin Message, Cp Spy CP_RMC_FMP_DLLSTAT_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Test Status, uint8, base=enum:FAIL/PASS
    Row, uint8, base=10,default=0
    Column, uint8, base=10,default=0
    FMPDllStat, record, type=FmpDllStatT, maxsize=10, size=end
End

Begin Record, FmpDllStatT
    Slot, uint8, base=10, indent=1
    Symb, uint8, base=10
    PE0, uint16, base=16
    PO0, uint16, base=16
    PL0, uint16, base=16
    PE1, uint16, base=16
    PO1, uint16, base=16
    PL1, uint16, base=16
    SNR0, uint16, base=16
    SNR1, uint16, base=16
    SNR, uint16, base=16
    AfcFI, uint32, base=16
    AfcFQ, uint32, base=16
    AfcCI, uint32, base=16
    AfcCQ, uint32, base=16
    AfcSNR, uint16, base=16
End

Begin Message, Cp Spy CP_TST_PPP_DECODER_STAT_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Test Status, uint8, base=enum:FAIL/PASS
    Row, uint8, base=10,default=0
    Column, uint8, base=10,default=0
    PPPDecoderStat, record, type=PPPDecoderStatT, maxsize=10, size=end
End

Begin Record, PPPDecoderStatT
    1, uint8, base=16
    2, uint8, base=16
    3, uint8, base=16
    4, uint8, base=16
    5, uint8, base=16
    6, uint8, base=16
    7, uint8, base=16
    8, uint8, base=16
    9, uint8, base=16
    10, uint8, base=16
    11, uint8, base=16
    12, uint8, base=16
    13, uint8, base=16
    14, uint8, base=16
    15, uint8, base=16
    16, uint8, base=16
End

Begin Message, Cp Spy CP_TST_PPP_ENCODER_STAT_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Test Status, uint8, base=enum:FAIL/PASS
    Row, uint8, base=10,default=0
    Column, uint8, base=10,default=0
    Num of Bytes, uint16,base=10,default=0
    PPPEncoderStat, record, type=PPPDecoderStatT, maxsize=10, size=end
End

Begin Message, Cp Spy CP_RMC_MBP_MAC_BITS_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SpyCount, uint8, base=10
    SubFrameDataPerRow, record, type=SubFrameT, maxsize=4, size=end
End

Begin Record, SubFrameT
    SymbolCount, uint16, base=10, indent=1
    NumSec, uint8, base=10
    NumPcg, uint8, base=10
    RABValid, uint8, base=10
    DRCLockValid, uint8, base=10
    rpcbit, uint8, base=10
    qrab, uint8, base=10
    qrabsSec0, int32, base=10
    qrabsSec1, int32, base=10
    qrabsSec2, int32, base=10
    qrabsSec3, int32, base=10
    qrabsSec4, int32, base=10
    qrabsSec5, int32, base=10
    drcLPcg0, uint8, base=10
    drcLPcg1, uint8, base=10
    drcLPcg2, uint8, base=10
    drcLPcg3, uint8, base=10
    drcLPcg4, uint8, base=10
    drcLPcg5, uint8, base=10
    HLBitPcg0, uint8, base=10
    HLBitPcg1, uint8, base=10
    HLBitPcg2, uint8, base=10
    HLBitPcg3, uint8, base=10
    HLBitPcg4, uint8, base=10
    HLBitPcg5, uint8, base=10
End

Begin Message, Cp Spy CP_RMC_MBP_C2I_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    NumSec, uint8, base=10
    MBPC2I, record, type=C2IT, maxsize=6, size=end
End

Begin Record, C2IT
    C2IRaw21_15_t, uint32, scale=Q5, format=%2.4f
    C2ILog16_9_s, int16, scale=Q7, format=%2.4f
    PilotPN, uint16, base=10
End

Begin Message, Cp Spy CP_RMC_FMP_FINGERSCAN_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Tc16ResRecord, record, type=Tc16RecordT, maxsize=4, size=end
End

Begin Record, Tc16RecordT
    allocStatus, uint32, base=enum:FmpFingerScanAllocStatT, indent=1
    assocFinger, uint8,  base=10
    assigned, uint8,  base=enum:FALSE/TRUE
    fastTimeTrack, uint8,  base=enum:Normal/Fast
    pilotPN, uint16, base=10
    offsetTc16, int16,  base=10
    fingerPos, uint16, base=16
    snrEstdB, uint16, scale=Q9, format=%2.2f, log10=true, logscale=10
    pwrEstdB, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
    pwrOnTime, uint16
    pwrEarly, uint16
    pwrLate, uint16
End

Begin Message, Cp Spy CP RMC Pilot Strength Report Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RptSeq, int16, base=10
    RefPN, uint16, base=10
    NumActive, uint8, base=10
    NumCandidate, uint8, base=10
    NumNeighbor, uint8, base=10
    NumRemaining, uint8, base=10
    Active, record, type=RmcRupPilotMeasure, maxsize=6,size=6
    Candidate, record, type=RmcRupPilotMeasure, maxsize=10,size=10
    Neighbor, record, type=RmcRupPilotMeasure, maxsize=40, size=40
    Remaining, record, type=RmcRupPilotMeasure, maxsize=5, size=5
End

Begin Message, Cp Spy CP RMC Pilot Update Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PilotSeq, int16, base=10
    ConnSetupFlag, uint8, base=10
    TcaFlag, uint8, base=10
    Active, record, type=RmcRupActivePilot, maxsize=1
    Candidate, record, type=RmcRupCandidatePilot, maxsize=1
    Neighbor, record, type=RmcRupNeighborPilot, maxsize=1
    Remaining, record, type=RmcRupRemainPilot, maxsize=1
End

Begin Record, RmcRupActivePilot
    NumPilots, uint8, indent=1
    PilotPN, array, type=uint16, base=10,size=6, maxsize=6
    MacIndex, array, type=uint8,  base=10,size=6, maxsize=6
    PnPhase, array, type=int16,  base=10,size=6, maxsize=6
    SofterHandoff, array, type=uint8,  base=10,size=6, maxsize=6
    RABLength, array, type=uint8,  base=10,size=6, maxsize=6
    RABOffset, array, type=uint8,  base=10,size=6, maxsize=6
    RAChannelGain, array, type=int8,  base=10,size=6, maxsize=6
    DRCCover, array, type=uint8, base=10, size=6, maxsize=6
    DSC, array, type=uint8, base=10, size=6, maxsize=6
End

Begin Record, RmcRupCandidatePilot
    NumPilots, uint8, indent=1
    PilotPN, array, type=uint16, base=10, size=10, maxsize=10
    PnPhase, array, type=int16,  base=10,size=10, maxsize=10
End

Begin Record, RmcRupNeighborPilot
    NumPilots, uint8, indent=1
    PilotPN, array, type=uint16,  base=10,size=40, maxsize=40
    SchWinSize, array, type=uint8,  base=10,size=40, maxsize=40
    SchWinOff, array, type=uint8,  base=10,size=40, maxsize=40
End

Begin Record, RmcRupRemainPilot
    NumPilots, uint8, indent=1
    PilotPN, array, type=uint16,  base=10,size=5, maxsize=5
End

Begin Message, Cp Spy CP RMC PILOT SET STATUS Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PilotType, uint32, base=enum:EEVDO_SYS_PILOT_SET_TYPE Enum
    NumPilots, uint8
    PilotRec, record, type=EEVDO SYS PILOT INFO Rec, size=NumPilots, maxsize=40
End

Begin Record, EEVDO SYS PILOT INFO Rec
    PilotPn, uint16, base=10, indent=1
    PilotStrength, int16 , base=10
    ChannelNum, uint16, base=10
    BandClass, uint8, base=10
    DRCCover, uint8, base=10
End

Begin Message, CP Spy CP RMC RUP SEARCHER STATUS Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    EIA_TIA_BandClass, uint16, base=10
    ChannelNum, uint16, base=10
    RefPilotPN, uint16, base=10
    bRemSearchFinished, uint8
    PilotNum, uint8
    Rec, record,type=RupSearcherInfo Rec, size=PilotNum,maxsize=20
End

Begin Record, RupSearcherInfo Rec
    PilotPn, uint16, base=10,indent=1
    PilotType, uint32, base=enum:EEVDO_SYS_PILOT_SET_TYPE Enum
    SchWinCenter, int32
    SchWinSize, int32
    PilotStrength, int16, base=10, scale = Q3, format=%2.2f
    PilotPosition, int16
    DRCCover, uint8
End

Begin Message, Cp Spy CP_RMC_FMP_EQ_POSITION_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    DRCC2ILongdB, uint16, scale=Q9, format=%2.3f, log10=true, logscale=10
    FnCenterPosM, uint16
    FnCenterPosD, uint16
    FnStrongPosM, uint16
    FnStrongPosD, uint16
    FnStrongPosSnrM, uint16
    FnStrongPosSnrD, uint16
    Eq Stats, record, type=FmpEqRecT, maxsize=4, size=end
End

Begin Record, FmpEqRecT
    EqAssgn, uint32, base=enum:InAct/Alloc/Track/Drop, indent=1
    AssocFng, uint8,  base=10
    LmsMode, uint32, base=enum:Independent/Concatenated/Overlapped/OverlappedAlpha
    TapLen, uint8,  base=10
    TapPos, uint16, base=16
    EqPos, uint16, base=16
    EqFnAssgn, uint32, base=enum:InAct/Alloc/Track/Drop/NoUsed
    EqFnPos, uint16, base=16
    pwrEstdB, uint16, scale=Q16, format=%2.2f, log10=true, logscale=10
    snrEstdB, uint16, scale=Q9, format=%2.2f, log10=true, logscale=10
    pwrOnTime, uint16, base=16
    pwrEarly, uint16, base=16
    pwrLate, uint16, base=16
    dropTmrStatus, uint32, base=enum:Inactive/Active/Expired/Stopped
End

Begin Message, Cp Spy CP_RMC_EQFN_HWCONFIG_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    eqFnMode, uint16
    eqFnMode2, uint16
    eqFnAnt, uint16
    eqFnEn, uint16
    eqFnIIR, uint16
    eqFnPos0, uint16
    eqFnPos1, uint16
    eqFnPos2, uint16
    eqFnPos3, uint16
    eqFnComb0, uint16
    eqFnComb1, uint16
    eqFnComb2, uint16
    eqFnComb3, uint16
    eqFnSnrHarqTotal(dB), uint16, scale=Q9, format=%2.2f, log10=true, logscale=10
    eqFnEnCap, uint16
    eqFnCmbSnrIIR, uint16
    eqFnSnrPmbTotal(dB), uint16, scale=Q9, format=%2.2f, log10=true, logscale=10
    eqFnSTCntOffset, uint16
    eqFnSnrTotal(dB), uint16, scale=Q9, format=%2.2f, log10=true, logscale=10
    From, uint32, base=enum:RmcFmpSpySenderT
End

Begin Message, Cp Spy CP_RMC_EQ_HWCONFIG_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    EqSnrF(dB), uint16, scale=Q9, format=%2.2f, log10=true, logscale=10
    EqSnrE(dB), uint16, scale=Q9, format=%2.2f, log10=true, logscale=10
    EqSwMode, uint16
    EqSwEn, uint16
    EqCombCtl, uint16
    EqDbDly, uint16
    EqDbEn, uint16
    EqDecnSel, uint16
    EqEn0, uint16
    EqEn1, uint16
    EqEn2, uint16
    EqEn3, uint16
    EqCtrl00, uint16
    EqCtrl01, uint16
    EqCtrl02, uint16
    EqCtrl03, uint16
    EqCtrl10, uint16
    EqCtrl11, uint16
    EqCtrl12, uint16
    EqCtrl13, uint16
    EqCombCtl1, uint16
    EqLowPwrEn, uint16
    From, uint32,  base=enum:RmcFmpSpySenderT
End

Begin Message, Cp Spy CP_RMC_L1CD_L1CDE_CDMA_IRAT_CELL_LIST_REQ_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ListSize, uint8, base=10
    CellList, record, type = L1CDMeasCellListT,maxsize=5, size=5
    MeasCmd, record, type = L1CDECdmrIratMeasReqT,maxsize=1, size=1
End

Begin Message, Cp Spy CP_RMC_L1CD_L1CDE_CDMA_IRAT_MEAS_REPORT_IND_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Band, uint8,  base=10
    Channel, uint16, base=10
    NumPn, uint8,  base=10
    IsLastReport, uint32, base=enum:FALSE/TRUE
    PilotPN, record, type = L1CDCdmaPilotMeasResultT, maxsize=7, size=7
End

Begin Message, Cp Spy CP_RMC_L1CD_L1ECD_IRAT_MEAS_REPORT_IND_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Earfcn, uint16, base=10
    Nof, uint8,  base=10
    IsLastReport, uint32, base=enum:FALSE/TRUE
    CellMeasResult, record, type = L1ECDEutraCellMeasResultT, maxsize=32, size=32
End

Begin Record, L1ECDEutraCellMeasResultT
    Rsrp, uint8, base=10, indent=1
    Rsrq, uint8,  base=10
    CellId, uint16, base=10
End

Begin Message, Cp Spy CP_RMC_L1CD_L1ECD_IRAT_CELL_LIST_REQ_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ListSize, uint8,   base=10
    Eutra, record,  type = L1ECDIratEUTRANFreqT, maxsize=8, size=8
    BlackCellList, array,   type = uint16, base=10,maxsize=128,size=128
    MeasCmd, record,  type = L1ECDIratMeasReqT, maxsize=1, size=1
End

Begin Record, L1ECDIratEUTRANFreqT
    Earfcn, uint16, base=10
    EarfcnPri, uint8,  base=10
    MeasBandWith, uint8,  base=10
End

Begin Record, L1ECDIratMeasReqT
    MeasMode, uint32, base=enum:L1ECDIratMeasModeT
    MeasPerCycleMask, uint8,  base=16
    MeasEveryCycleMask, uint8,  base=16
End

Begin Message, Cp Spy CP_RMC_L1CD_CRRR_IRAT_MEAS_CFG_REQ_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ListSize, uint8, base=10
    Eutra, record,type = L1CDIratEUTRANNeighborT, maxsize=8, size=8
End

Begin Message, Cp Spy CP_RMC_L1CD_CDRR_IRAT_MEAS_REQ_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    MeasMode, uint32, base=enum:L1ECDIratMeasModeT
    NumFreq, uint8,  base=10
    Earfcn, array,  type=uint16, base=10,maxsize=8,size=8
End

Begin Message, Cp Spy CP_RMC_L1CD_CDRR_IRAT_MEAS_REPORT_IND_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    NumList, uint8, base=10
    MeasResult, record, type=CDRRMlcLteMeasResRecT, maxsize=8, size=NumList
End

Begin Record, CDRRMlcLteMeasResRecT
    MeasBandWidth, uint8,  base=10, indent=1
    Earfcn, uint16, base=10
    IsValid, uint8,  base=enum:FALSE/TRUE
    NumCell, uint8,  base=10
    CellInfo, record, type=L1ECDEutraCellMeasResultT, maxsize=32, size=32
End

Begin Message, Cp Spy CP_RMC_L1CD_RMC_IRAT_SRCH_CFG_MSG_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    StartTime, uint64, base=16
    Duration, uint32, base=10,
    LteMode, uint32, base=enum:LTE_IDLE_MODE/LTE_CONNECTED_MODE
    MeasMode, uint32, base=enum:DRX Mode/Meas Gap Mode
    CdmaBand, uint8,  base=10
    FreqChan, uint16, base=10
    SchWinSize, uint8,  base=10
    NumOfPN, uint8,  base=10
    PilotPN, array, type=uint16, base=16,maxsize=7,size=NumOfPN
End

Begin Message, Cp Spy CP_RMC_L1CD_IRAT_RMC_MEAS_REPORT_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CdmaBand, uint8,  base=10
    FreqChan, uint16, base=10
    NumPn, uint8,  base=10
    Pilot, record, type=L1CDCdmaPilotMeasResultT, maxsize=7, size=NumPn
End

Begin Message, Cp Spy CP_FCP_OTA_MSG_SPY Rsp, BitPack, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SendTimeInSlot, uint16, indent=2
    Rec, record, type=DO DSA Msg Rec, maxsize=1
End

Begin Record, DO DSA Msg Rec, BitPack, OTTSName=CMsgDoDsa
    SubType, uint16, indent=2
    PhyChan, bit,count=7,globalvar=GBL_DOCHTYPE,base=enum:DO PhyChanType Enum,indent=2,pos=none
    FullHeaderIncluded, bit,count=1,indent=2,pos=none
    AckSequenceValid, bit,count=1,indent=2,exist=(FullHeaderIncluded==1),pos=none
    AckSequenceNumber, bit,count=3,indent=2,exist=(FullHeaderIncluded==1),pos=none
    SequenceValid, bit,count=1,indent=2,exist=(FullHeaderIncluded==1),pos=none
    SequenceNumber, bit,count=3,indent=2,exist=(FullHeaderIncluded==1),pos=none
    InConfigurationProtocol, bit,count=1,indent=2,pos=none
    Type, bit,count=7,indent=1,base=enum:DO Protocol Type Enum,indent=2,pos=none
    Type2, bit,count=8,indent=2,exist=(Type==26),pos=none
    Msg, union, enum=Type
End

Begin Message, DO DSA Msg Rec PHY Rsp
End

Begin Message, DO DSA Msg Rec CCMAC Rsp, BitPack, OTTSName=CMsgCcmacSig
    DCcmMsg, record, type = DCCM OTA Msg Rec, maxsize=1, exist=(..\SubType==0)
    ECcmMsg, record, type = ECCM OTA Msg Rec, maxsize=1, exist=(..\SubType==1)
End

Begin Record, DCCM OTA Msg Rec, BitPack, OTTSName = CMsgDCcm
End

Begin Record, ECCM OTA Msg Rec, BitPack, OTTSName = CMsgECcm
    <<< MessageId, uint8, indent = 1, base=enum:ECCM Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, ECCM OTA Msg Rec Null Rsp, BitPack, OTTSName = CMsgEccmNull
End

Begin Message, ECCM OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName = CMsgECcmConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=ECCM Attribute Rec, maxsize=10, size=end
End

Begin Record, ECCM Attribute Rec, BitPack, OTTSName = CMsgECcmAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8,indent=2,base=enum:ECCM AttributeID Enum,exist=(Length>0)
    AttriRec, union,enum=AttributeID,consumebytes=(Length - 1),exist=(Length>0)
End

Begin Message, ECCM Attribute Rec CCShortPacketsMACIndex Rsp, BitPack, OTTSName=CMsgECcmShortPktIndex
    AttributeValue, array, type=uint8, size=end, maxsize=10, indent=2
End

Begin Message, ECCM OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName = CMsgECcmConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=ECCM Attribute Rec, maxsize=10, size=end
End

Begin Message, DO DSA Msg Rec ACMAC Rsp, BitPack, OTTSName=CMsgAcmacSig
    DAcmMsg, record, type = DACM OTA Msg Rec, maxsize=1, exist=(..\SubType==0)
    EAcmMsg, record, type = EACM OTA Msg Rec, maxsize=1, exist=(..\SubType==1)
End

Begin Record, DACM OTA Msg Rec, BitPack, OTTSName = CMsgDAcm
    <<< MessageId, uint8, indent = 1, base=enum:DACM Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, DACM OTA Msg Rec ACAck Rsp, BitPack, OTTSName = CMsgDAcmACAck, output
End

Begin Message, DACM OTA Msg Rec AccessParameters Rsp, BitPack, OTTSName = CMsgDAcmAccessParameters, output
    AccessCycleDuration, uint8, indent=2
    AccessSignature, bit,count=16,indent=2,pos=none
    OpenLoopAdjust, uint8, indent=2
    ProbeInitialAdjust, bit,count=5,indent=2,pos=none
    ProbeNumStep, bit,count=4,indent=2,pos=none
    PowerStep, bit,count=4,indent=2,pos=none
    PreambleLength, bit,count=3,indent=2,pos=none
    CapsuleLengthMax, bit,count=4,indent=2,pos=none
    APersistence, array,type=bit,count=6,size=4,maxsize=4,indent=2,pos=none
    EnhancedAccessParametersInc, bit,count=1,indent=2,pos=none
    PreambleLengthSlots, bit,count=1,indent=2,exist=(EnhancedAccessParametersInc==1),pos=none
    AccessOffset, bit,count=2,indent=2,exist=(EnhancedAccessParametersInc==1),pos=none
    SectorAccessMaxRate, bit,count=2,indent=2,exist=(EnhancedAccessParametersInc==1),pos=none
    ProbeTimeOutAdjust, bit,count=3,indent=2,exist=(EnhancedAccessParametersInc==1),pos=none
    PilotStrengthNominal, bit,count=3,indent=2,exist=(EnhancedAccessParametersInc==1),pos=none
    PilotStrengthCorrectionMin, bit,count=3,indent=2,exist=(EnhancedAccessParametersInc==1),pos=none
    PilotStrengthCorrectionMax, bit,count=3,indent=2,exist=(EnhancedAccessParametersInc==1),pos=none
    Reserved, bit,count=-8,pos=none
End

Begin Message, DACM OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName = CMsgDAcmConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=DACM ReqAttribute Rec, maxsize=10, size=end
End

Begin Record, DACM ReqAttribute Rec, BitPack, OTTSName = CMsgDAcmReqAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8,indent=2,base=enum:DACM AttributeID Enum,exist=(Length>0)
    AttriRec, union,enum=AttributeID,consumebytes=(Length - 1),exist=(Length>0)
End

Begin Message, DACM ReqAttribute Rec InitialConfiguration Rsp, BitPack, OTTSName=CMsgDAcmInitialConfiguration
    AttrRec, record, type=DACM InitialConfiguration Rec, size=end, maxsize=10
End

Begin Record, DACM InitialConfiguration Rec, BitPack, OTTSName=CMsgDAcmInitialConfigRec
    ValueID, uint8, indent=2
    ProbeSequenceMax, bit,count=4,indent=2,pos=none
    ProbeBackoff, bit,count=4,indent=2,pos=none
    ProbeSequenceBackoff, bit,count=4,indent=2,pos=none
    Reserved, bit,count=4,indent=2,pos=none
End

Begin Message, DACM ReqAttribute Rec PowerParameters Rsp, BitPack, OTTSName=CMsgDAcmPowerParameters
    AttrRec, record, type=DACM PowerParameters Rec, size=end, maxsize=10
End

Begin Record, DACM PowerParameters Rec, BitPack, OTTSName=CMsgDAcmPowerParmsRec
    ValueID, uint8, indent=2
    DataOffsetNom, bit,count=4,indent=2,pos=none
    DataOffset9k6, bit,count=4,indent=2,pos=none
End

Begin Message, DACM OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName = CMsgDAcmConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=DACM RspAttribute Rec, maxsize=10, size=end
End

Begin Record, DACM RspAttribute Rec, BitPack, OTTSName = CMsgDAcmRspAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 2, base = enum:DACM AttributeID Enum
    Value, uint8, indent = 2
End

Begin Record, EACM OTA Msg Rec, BitPack, OTTSName = CMsgEAcm
    <<< MessageId, uint8, indent = 1, base=enum:EACM Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, EACM OTA Msg Rec ACAck Rsp, BitPack, OTTSName = CMsgEAcmACAck
End

Begin Message, EACM OTA Msg Rec AccessParameters Rsp, BitPack, OTTSName = CMsgEAcmAccessParameters
    AccessCycleDuration, uint8, indent=2
    AccessSignature, bit,count=16,indent=2,pos=none
    OpenLoopAdjust, uint8, indent=2
    ProbeInitialAdjustEACMAC, bit,count=5,indent=2,pos=none
    ProbeNumStep, bit,count=4,indent=2,pos=none
    PowerStep, bit,count=4,indent=2,pos=none
    PreambleLength, bit,count=3,indent=2,pos=none
    CapsuleLengthMax, bit,count=4,indent=2,pos=none
    APersistence, array,type=bit,count=6,size=4,maxsize=4,indent=2,pos=none
    EnhancedAccessParametersInc, bit,count=1,indent=2,pos=none
    PreambleLengthSlots, bit,count=1,indent=2,exist=(EnhancedAccessParametersInc==1),pos=none
    AccessOffset, bit,count=2,indent=2,exist=(EnhancedAccessParametersInc==1),pos=none
    SectorAccessMaxRate, bit,count=2,indent=2,exist=(EnhancedAccessParametersInc==1),pos=none
    ProbeTimeOutAdjust, bit,count=3,indent=2,exist=(EnhancedAccessParametersInc==1),pos=none
    PilotStrengthNominal, bit,count=3,indent=2,exist=(EnhancedAccessParametersInc==1),pos=none
    PilotStrengthCorrectionMin, bit,count=3,indent=2,exist=(EnhancedAccessParametersInc==1),pos=none
    PilotStrengthCorrectionMax, bit,count=3,indent=2,exist=(EnhancedAccessParametersInc==1),pos=none
    Reserved, bit,count=-8,pos=none
End

Begin Message, EACM OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName = CMsgEAcmConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=EACM ReqAttribute Rec, maxsize=10, size=end
End

Begin Record, EACM ReqAttribute Rec, BitPack, OTTSName = CMsgEAcmReqAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8,indent=2,base=enum:EACM AttributeID Enum,exist=(Length>0)
    AttriRec, union,enum=AttributeID,consumebytes=(Length - 1),exist=(Length>0)
End

Begin Message, EACM ReqAttribute Rec InitialConfiguration Rsp, BitPack, OTTSName=CMsgEAcmInitialConfiguration
    AttrRec, record, type=EACM InitialConfiguration Rec, size=end, maxsize=10
End

Begin Record, EACM InitialConfiguration Rec, BitPack, OTTSName=CMsgEAcmInitialConfigRec
    ValueID, uint8, indent=2
    ProbeSequenceMax, bit,count=4,indent=2,pos=none
    ProbeBackoff, bit,count=4,indent=2,pos=none
    ProbeSequenceBackoff, bit,count=4,indent=2,pos=none
    Reserved, bit,count=4,indent=2,pos=none
End

Begin Message, EACM ReqAttribute Rec AccessTerminalClassOverride Rsp, BitPack, OTTSName=CMsgEAcmAccTermClassOverride
    AttributeValue, array, type=uint8, size=end, maxsize=10
End

Begin Message, EACM ReqAttribute Rec DataOffset38k4 Rsp, BitPack, OTTSName=CMsgEAcmDataOff38k4
    AttributeValue, array, type=uint8, size=end, maxsize=10
End

Begin Message, EACM ReqAttribute Rec DataOffset19k2 Rsp, BitPack, OTTSName=CMsgEAcmDataOff19k2
    AttributeValue, array, type=uint8, size=end, maxsize=10
End

Begin Message, EACM ReqAttribute Rec DataOffset9k6 Rsp, BitPack, OTTSName=CMsgEAcmDataOff9k6
    AttributeValue, array, type=uint8, size=end, maxsize=10
End

Begin Message, EACM ReqAttribute Rec DataOffsetNom Rsp, BitPack, OTTSName=CMsgEAcmDataOffsetNom
    AttributeValue, array, type=uint8, size=end, maxsize=10
End

Begin Message, EACM ReqAttribute Rec TerminalAccessRateMax Rsp, BitPack, OTTSName=CMsgEAcmTermAccRateMax
    AttributeValue, array, type=uint8, size=end, maxsize=10
End

Begin Message, EACM ReqAttribute Rec APersistenceOverride Rsp, BitPack, OTTSName=CMsgEAcmAPersistenceOverride
    AttributeValue, array, type=uint8, size=end, maxsize=10
End

Begin Message, EACM OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName = CMsgEAcmConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=EACM RspAttribute Rec, maxsize=10, size=end
End

Begin Record, EACM RspAttribute Rec, BitPack, OTTSName = CMsgEAcmRspAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 2, base = enum:EACM AttributeID Enum
    Value, uint8, indent = 2
End

Begin Message, EACM OTA Msg Rec AttributeUpdateRequest Rsp, BitPack, OTTSName = CMsgEAcmAttrUpdReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=EACM ReqAttribute Rec, maxsize=10, size=end
End

Begin Message, EACM OTA Msg Rec AttributeUpdateAccept Rsp, BitPack, OTTSName = CMsgEAcmAttrUpdAccept
    TransactionID, uint8, indent = 2
End

Begin Message, EACM OTA Msg Rec AttributeUpdateReject Rsp, BitPack, OTTSName = CMsgEAcmAttrUpdRej
    TransactionID, uint8, indent = 2
End

Begin Message, DO DSA Msg Rec FTCMAC Rsp, BitPack, OTTSName=CMsgFtcmacSig
    DFtmMsg, record, type = DFTM OTA Msg Rec, maxsize=1, exist=(..\SubType==0)
    EFtmMsg, record, type = EFTM OTA Msg Rec, maxsize=1, exist=(..\SubType==1)
End

Begin Record, DFTM OTA Msg Rec, BitPack, OTTSName = CMsgDFtm
    <<< MessageId, uint8, indent = 1, base=enum:DFTM Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, DFTM OTA Msg Rec FixedModeEnable Rsp, BitPack, OTTSName = CMsgDFtmFixedModeEnable
    TCAMessageSequence, uint8, indent=2
    DRCCover, bit,count=3,indent=2,pos=none
    DRCValue, bit,count=4,indent=2,pos=none
    EndTime, bit,count=16,indent=2,pos=none
    Reserved, bit,count=1,indent=2,pos=none
End

Begin Message, DFTM OTA Msg Rec FixedModeXoff Rsp, BitPack, OTTSName = CMsgDFtmFixedModeXoff
End

Begin Message, DFTM OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName = CMsgDFtmConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=DFTM ReqAttribute Rec, maxsize=10, size=end
End

Begin Record, DFTM ReqAttribute Rec, BitPack, OTTSName = CMsgDFtmReqAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 2, base = enum:DFTM AttributeID Enum
    AttriRec, union, enum = AttributeID, ConsumeBytes = (Length - 1)
End

Begin Message, DFTM ReqAttribute Rec HandoffDelays Rsp, BitPack, OTTSName=CMsgDFtmHandoffDelays
    AttrRec, record, type=DFTM HandoffDelays Rec, size=end, maxsize=10
End

Begin Record, DFTM HandoffDelays Rec, BitPack, OTTSName=CMsgDFtmHODelaysRec
    ValueID, uint8, indent=2
    SofterHandoffDelay, uint8, indent=2
    SoftHandoffDelay, uint8, indent=2
End

Begin Message, DFTM ReqAttribute Rec DRCLock Rsp, BitPack, OTTSName=CMsgDFtmDRCLock
    AttrRec, record, type=DFTM DRCLock Rec, size=end, maxsize=10
End

Begin Record, DFTM DRCLock Rec, BitPack, OTTSName=CMsgDFtmDRCLockRec
    ValueID, uint8, indent=2
    DRCLockPeriod, bit,count=1,indent=2,pos=none
    DRCLockLength, bit,count=2,indent=2,pos=none
    Reserved, bit,count=5,indent=2,pos=none
End

Begin Message, DFTM ReqAttribute Rec NullRateDRC384Enable Rsp, BitPack, OTTSName=CMsgDFtmNullRateDrc384En
    AttributeValue, array, type=uint16, Byteorder = motorola,size=end, maxsize=10, indent=2
End

Begin Message, DFTM ReqAttribute Rec DRCGating Rsp, BitPack, OTTSName=CMsgDFtmDRCGating
    AttributeValue, array, type=uint16, Byteorder = motorola,size=end, maxsize=10, indent=2
End

Begin Message, DFTM OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName = CMsgDFtmConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=DFTM RspAttribute Rec, maxsize=10, size=end
End

Begin Record, DFTM RspAttribute Rec, BitPack, OTTSName = CMsgDFtmRspAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8,indent=2,base=enum:DFTM AttributeID Enum,exist=(Length>0)
    ValueID, uint8,exist=((AttributeID<=1)) && ((Length>0)),indent=2
    Value, uint16,byteorder=motorola,exist=((AttributeID > 1)) && ((Length>0)),indent=2
End

Begin Record, EFTM OTA Msg Rec, BitPack, OTTSName = CMsgEFtm
    <<< MessageId, uint8, indent = 1, base=enum:EFTM Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, EFTM OTA Msg Rec FixedModeEnable Rsp, BitPack, OTTSName = CMsgEFtmFixedModeEnable
    TCAMessageSequence, uint8, indent=2
    DRCCover, bit,count=3,indent=2,pos=none
    DRCValue, bit,count=4,indent=2,pos=none
    EndTime, bit,count=16,indent=2,pos=none
    Reserved, bit,count=1,indent=2,pos=none
End

Begin Message, EFTM OTA Msg Rec FixedModeXoff Rsp, BitPack, OTTSName = CMsgEFtmFixedModeXoff
End

Begin Message, EFTM OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName = CMsgEFtmConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=EFTM ReqAttribute Rec, maxsize=20, size=end
End

Begin Record, EFTM ReqAttribute Rec, BitPack, OTTSName = CMsgEftmaReqAttributeRec
    Length, uint8, indent = 2
    AttributeID, uint8,base=enum:EFTM AttributeID Enum,indent=2,exist=(Length>0)
    Value, array,type=uint8,size=(Length-1),maxsize=10,indent=2,exist=((AttributeID>1)) && ((Length>0))
    HandoffDelays, record,type=EFTM HandoffDelaysAttr Rec,size=(Length-1)/3,maxsize=10,exist=((AttributeID==0)) && ((Length>0))
    DRCTranslationOffSet, record,type=EFTM DRCTransOffAttr Rec,size=(Length-1)/7,maxsize=10,exist=((AttributeID==1)) && ((Length>0))
End

Begin Record, EFTM HandoffDelaysAttr Rec, BitPack, OTTSName=CMsgEFtmHandoffDelaysAttrRec
    ValueID, uint8, indent = 2
    SofterHandoffDelay, uint8, indent = 2
    SoftHandoffDelay, uint8, indent = 2
End

Begin Record, EFTM DRCTransOffAttr Rec, BitPack, OTTSName=CMsgEFtmDraTransOffAttrRec
    ValueID, uint8, indent = 2
    DRCOffset1, bit,count=1,indent=2,pos=none
    DRCOffset2, bit,count=2,indent=2,pos=none
    DRCOffset3, bit,count=2,indent=2,pos=none
    DRCOffset4, bit,count=3,indent=2,pos=none
    DRCOffset5, bit,count=3,indent=2,pos=none
    DRCOffset6, bit,count=3,indent=2,pos=none
    DRCOffset7, bit,count=3,indent=2,pos=none
    DRCOffset8, bit,count=4,indent=2,pos=none
    DRCOffset9, bit,count=4,indent=2,pos=none
    DRCOffsetA, bit,count=4,indent=2,pos=none
    DRCOffsetB, bit,count=4,indent=2,pos=none
    DRCOffsetC, bit,count=4,indent=2,pos=none
    DRCOffsetD, bit,count=4,indent=2,pos=none
    DRCOffsetE, bit,count=4,indent=2,pos=none
    Reserved, bit,count=3,indent=2,pos=none
End

Begin Message, EFTM OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName = CMsgEFtmConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=EFTM RspAttribute Rec, maxsize=20, size=end
End

Begin Record, EFTM RspAttribute Rec, BitPack, OTTSName = CMsgEFtmRspAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 2, base = enum:EFTM AttributeID Enum
    Value, uint8, indent = 2
End

Begin Message, EFTM OTA Msg Rec AttributeUpdateRequest Rsp, BitPack, OTTSName=CMsgEFtmAttrUpdateReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=EFTM ReqAttribute Rec, maxsize=20, size=end
End

Begin Message, EFTM OTA Msg Rec AttributeUpdateAccept Rsp, BitPack, OTTSName=CMsgEFtmAttrUpdateAcc
    TransactionID, uint8, indent = 2
End

Begin Message, EFTM OTA Msg Rec AttributeUpdateReject Rsp, BitPack, OTTSName=CMsgEFtmAttrUpdateRej
    TransactionID, uint8, indent = 2
End

Begin Message, DO DSA Msg Rec RTCMAC Rsp, BitPack, OTTSName=CMsgRtcmacSig
    DRtmMsg, record, type = DRTM OTA Msg Rec, maxsize=1, exist=(..\SubType==0)
    Rtm1Msg, record, type = RTM1 OTA Msg Rec, maxsize=1, exist=(..\SubType==1)
    Rtm2Msg, record, type = RTM2 OTA Msg Rec, maxsize=1, exist=(..\SubType==2)
    Rtm3Msg, record, type = RTM3 OTA Msg Rec, maxsize=1, exist=(..\SubType==3)
End

Begin Record, DRTM OTA Msg Rec, BitPack, OTTSName = CMsgDRtm
    <<< MessageId, uint8, indent = 1, base=enum:DRTM Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, DRTM OTA Msg Rec RTCAck Rsp, BitPack, OTTSName = CMsgDRtmRtcAck
End

Begin Message, DRTM OTA Msg Rec BroadcastReverseRateLimit Rsp, BitPack, OTTSName = CMsgDRtmBroadcastRevRateLimit
    RPCCount, bit,count=6,indent=2,pos=none
    RateLimit, array,type=bit,count=4,size=RPCCount,maxsize=64,indent=2,pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, DRTM OTA Msg Rec UnicastReverseRateLimit Rsp, BitPack, OTTSName = CMsgDRtmUnicastRevRateLimit
    RateLimit, bit,count=4,indent=2,pos=none
    Reserved, bit,count=-8,pos=none
End

Begin Message, DRTM OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName = CMsgDRtmConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=DRTM ReqAttribute Rec, maxsize=10, size=end
End

Begin Record, DRTM ReqAttribute Rec, BitPack, OTTSName = CMsgDRtmReqAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8,indent=2,base=enum:DRTM AttributeID Enum,exist=(Length>0)
    AttriRec, union,enum=AttributeID,consumebytes=(Length - 1),exist=(Length>0)
End

Begin Message, DRTM ReqAttribute Rec PowerParameters Rsp, BitPack, OTTSName = CMsgDRtmPowerParameters
    AttrRec, record, type=DRTM PowerParameters Rec, size=end, maxsize=10
End

Begin Record, DRTM PowerParameters Rec, BitPack, OTTSName = CMsgDRtmPowerParametersRec
    ValueID, uint8, indent=2
    DataOffsetNom, bit,count=4,indent=2,pos=none
    DataOffset9k6, bit,count=4,indent=2,pos=none
    DataOffset19k2, bit,count=4,indent=2,pos=none
    DataOffset38k4, bit,count=4,indent=2,pos=none
    DataOffset76k8, bit,count=4,indent=2,pos=none
    DataOffset153k6, bit,count=4,indent=2,pos=none
    RPCStep, bit,count=2,indent=2,pos=none
    Reserved, bit,count=6,indent=2,pos=none
End

Begin Message, DRTM ReqAttribute Rec RateParameters Rsp, BitPack, OTTSName = CMsgDRtmRateParameters
    AttrRec, record, type=DRTM RateParameters Rec, size=end, maxsize=10
End

Begin Record, DRTM RateParameters Rec, BitPack, OTTSName = CMsgDRtmRateParametersRec
    ValueID, uint8, indent=2
    Transition009k6_019k2, uint8, indent=2
    Transition019k2_038k4, uint8, indent=2
    Transition038k4_076k8, uint8, indent=2
    Transition076k8_153k6, uint8, indent=2
    Transition019k2_009k6, uint8, indent=2
    Transition038k4_019k2, uint8, indent=2
    Transition076k8_038k4, uint8, indent=2
    Transition153k6_076k8, uint8, indent=2
End

Begin Message, DRTM OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName = CMsgDRtmConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=DRTM RspAttribute Rec, maxsize=10, size=end
End

Begin Record, DRTM RspAttribute Rec, BitPack, OTTSName = CMsgDRtmRspAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 2, base = enum:DRTM AttributeID Enum
    Value, uint8, indent = 2
End

Begin Record, RTM1 OTA Msg Rec, BitPack, OTTSName = CMsgRtm1
    <<< MessageId, uint8, indent = 1, base=enum:RTM1 Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, RTM1 OTA Msg Rec RTCAck Rsp, BitPack, OTTSName = CMsgRtm1RtcAck
End

Begin Message, RTM1 OTA Msg Rec BroadcastReverseRateLimit Rsp, BitPack, OTTSName = CMsgRtm1BroadcastRevRateLimit
    RPCCount, bit,count=6,indent=2,pos=none
    RateLimit, array,type=bit,count=4,size=RPCCount,maxsize=64,indent=2,pos=none
    Reserved, bit,count=4,indent=2,pos=none
End

Begin Message, RTM1 OTA Msg Rec UnicastReverseRateLimit Rsp, BitPack, OTTSName = CMsgRtm1UnicastRevRateLimit
    RateLimit, bit,count=4,indent=2,pos=none
    Reserved, bit,count=-8,pos=none
End

Begin Message, RTM1 OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName = CMsgRtm1ConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RTM1 ReqAttribute Rec, maxsize=10, size=end
End

Begin Record, RTM1 ReqAttribute Rec, BitPack, OTTSName = CMsgRtm1ReqAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8,indent=2,base=enum:RTM1 AttributeID Enum,exist=(Length>0)
    AttriRec, union,enum=AttributeID,consumebytes=(Length - 1),exist=(Length>0)
End

Begin Message, RTM1 ReqAttribute Rec PowerParameters Rsp, BitPack, OTTSName = CMsgRtm1PowerParameters
    AttrRec, record, type=RTM1 PowerParameters Rec, size=end, maxsize=10
End

Begin Record, RTM1 PowerParameters Rec, BitPack, OTTSName = CMsgRtm1PowerParametersRec
    ValueID, uint8, indent=2
    DataOffsetNom, bit,count=4,indent=2,pos=none
    DataOffset9k6, bit,count=4,indent=2,pos=none
    DataOffset19k2, bit,count=4,indent=2,pos=none
    DataOffset38k4, bit,count=4,indent=2,pos=none
    DataOffset76k8, bit,count=4,indent=2,pos=none
    DataOffset153k6, bit,count=4,indent=2,pos=none
    RPCStep, bit,count=2,indent=2,pos=none
    Reserved, bit,count=6,indent=2,pos=none
End

Begin Message, RTM1 ReqAttribute Rec RateParameters Rsp, BitPack, OTTSName = CMsgRtm1RateParameters
    AttrRec, record, type=RTM1 RateParameters Rec, size=end, maxsize=10
End

Begin Record, RTM1 RateParameters Rec, BitPack, OTTSName = CMsgRtm1RateParametersRec
    ValueID, uint8, indent=2
    Transition009k6_019k2, uint8, indent=2
    Transition019k2_038k4, uint8, indent=2
    Transition038k4_076k8, uint8, indent=2
    Transition076k8_153k6, uint8, indent=2
    Transition019k2_009k6, uint8, indent=2
    Transition038k4_019k2, uint8, indent=2
    Transition076k8_038k4, uint8, indent=2
    Transition153k6_076k8, uint8, indent=2
End

Begin Message, RTM1 OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName = CMsgRtm1ConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RTM1 RspAttribute Rec, maxsize=10, size=end
End

Begin Record, RTM1 RspAttribute Rec, BitPack, OTTSName = CMsgRtm1RspAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 2, base = enum:RTM1 AttributeID Enum
    ValueID, uint8, indent = 2
End

Begin Message, RTM1 OTA Msg Rec AttributeUpdateRequest Rsp, BitPack, OTTSName = CMsgRtm1AttrUpdReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RTM1 ReqAttribute Rec, maxsize=10, size=end
End

Begin Message, RTM1 OTA Msg Rec AttributeUpdateAccept Rsp, BitPack, OTTSName = CMsgRtm1AttrUpdAcc
    TransactionID, uint8, indent = 2
End

Begin Message, RTM1 OTA Msg Rec AttributeUpdateReject Rsp, BitPack, OTTSName = CMsgRtm1AttrUpdRej
    TransactionID, uint8, indent = 2
End

Begin Record, RTM2 OTA Msg Rec, BitPack, OTTSName = CMsgRtm2
    <<< MessageId, uint8, indent = 1, base=enum:RTM2 Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, RTM2 OTA Msg Rec RTCAck Rsp, BitPack, OTTSName = CMsgRtm2RtcAck
End

Begin Message, RTM2 OTA Msg Rec BroadcastReverseRateLimit_NotUsed Rsp, BitPack, OTTSName = CMsgDRtm2BroadcastReverseRateLimit_NotUsed
    RPCCount, bit,count=6,indent=2,pos=none
    RateLimit, array,type=bit,count=4,size=RPCCount,maxsize=64,indent=2,pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, RTM2 OTA Msg Rec Request Rsp, BitPack, OTTSName = CMsgRtm2Request
    MaxSupportableTxT2P, uint8, indent = 2
    NumMACFlows, bit,count=5,indent=2,pos=none
    MacFlowRec, record, type = RTM2 ReqMACFlowRec, size=NumMACFlows,maxsize=8
    reserved, bit,count=3,indent=2,pos=none
End

Begin Record, RTM2 ReqMACFlowRec, BitPack, OTTSName=CMsgRtm2RequestMacFlowRec
    MACFlowID, bit,count=4,indent=2,pos=none
    QueueLength, bit,count=4,indent=2,pos=none
End

Begin Message, RTM2 OTA Msg Rec Grant Rsp, BitPack, OTTSName = CMsgRtm2Grant
    MaxSupportableTxT2P, uint8, indent = 2
    NumMACFlows, bit,count=5,indent=2,pos=none
    MacFlowRec, record, type = RTM2 GrantMACFlowRec, size=(NumMACFlows+1),maxsize=10
    reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RTM2 GrantMACFlowRec, BitPack, OTTSName=CMsgRtm2GrantMacFlowRec
    MACFlowID, bit,count=4,indent=2,pos=none
    T2PInFlow, uint8, indent = 2
    BucketLevel, uint8, indent = 2
    TT2PHold, bit,count=6,indent=2,pos=none
End

Begin Message, RTM2 OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName = CMsgRtm2ConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RTM2 ReqAttribute Rec, maxsize=20, size=end
End

Begin Record, RTM2 ReqAttribute Rec, BitPack, OTTSName = CMsgRtm2ReqAttrRec
    Length, uint8, indent = 2
    AttributeID, uint16,byteorder=motorola,indent=2,exist=(Length > 0)
    Value, array,type=uint8,size=(Length-2),maxsize=4,exist=(((AttributeID&0xf000)==0xf000)) && ((Length > 0)),indent=2
    CommonPowerParameters, record,type=RTM2 CommonPowerParametersAttr Rec,maxsize=4,size=(Length-2)/3,exist=((AttributeID==0)) && ((Length > 0))
    PermittedPayload, record,type=RTM2 PermittedPayloadAttr Rec,maxsize=4,size=(Length-2)/10,exist=((AttributeID==1)) && ((Length > 0))
    PilotStrength, record,type=RTM2 PilotStrengthAttr Rec,maxsize=1,size=1,exist=((AttributeID==2)) && ((Length > 0))
    PowerParameters, record,type=RTM2 PowerParametersAttr Rec,maxsize=4,size=(Length-2)/6,exist=((AttributeID==3)) && ((Length > 0))
    RequestParameters, record,type=RTM2 RequestParametersAttr Rec,maxsize=4,size=(Length-2)/2,exist=((AttributeID==4)) && ((Length > 0))
    TxT2Pmax, record,type=RTM2 TxT2PmaxAttr Rec,maxsize=4,size=(Length-2)/3,exist=((AttributeID==5)) && ((Length > 0))
    MaxMACFlows, record,type=RTM2 MaxMACFlowAttr Rec,maxsize=4,size=(Length-2)/3,exist=((AttributeID==6)) && ((Length > 0))
    AssociatedFlowsNN, record,type=RTM2 AssociatedFlowsAttr Rec,maxsize=1,size=1,exist=(((AttributeID&0xff00)==0x0100)) && ((Length > 0))
    BucketFactorNN, record,type=RTM2 BucketFactorAttr Rec,maxsize=1,size=1,exist=(((AttributeID&0xff00)==0x0200)) && ((Length > 0))
    T2PInflowRangeNN, record,type=RTM2 T2PInflowRangeAttr Rec,maxsize=1,size=1,exist=(((AttributeID&0xff00)==0x0800)) && ((Length > 0))
    T2PTransitionFunctionNN, record,type=RTM2 T2PTransitionFunctionAttr Rec,maxsize=1,size=1,exist=(((AttributeID&0xff00)==0x0900)) && ((Length > 0))
End

Begin Record, RTM2 CommonPowerParametersAttr Rec, BitPack, OTTSName = CMsgRtm2CommonPwrParmsAttrRec
    ValueID, uint8, indent = 2
    AllocationStagger, bit,count=4,indent=2,pos=none
    TxT2Pmin, uint8, indent = 2
    RPCStep, bit,count=2,indent=2,pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RTM2 PermittedPayloadAttr Rec, BitPack, OTTSName = CMsgRtm2PermitPLAttrRec
    ValueID, uint8, indent = 2
    PermittedPayload0_1, bit,count=4,indent=2,pos=none
    PermittedPayload0_2, bit,count=4,indent=2,pos=none
    PermittedPayload0_3, bit,count=4,indent=2,pos=none
    PermittedPayload256_1, bit,count=4,indent=2,pos=none
    PermittedPayload256_2, bit,count=4,indent=2,pos=none
    PermittedPayload256_3, bit,count=4,indent=2,pos=none
    PermittedPayload512_1, bit,count=4,indent=2,pos=none
    PermittedPayload512_2, bit,count=4,indent=2,pos=none
    PermittedPayload512_3, bit,count=4,indent=2,pos=none
    PermittedPayload1024_1, bit,count=4,indent=2,pos=none
    PermittedPayload1024_2, bit,count=4,indent=2,pos=none
    PermittedPayload1024_3, bit,count=4,indent=2,pos=none
    PermittedPayload2048_1, bit,count=4,indent=2,pos=none
    PermittedPayload2048_2, bit,count=4,indent=2,pos=none
    PermittedPayload2048_3, bit,count=4,indent=2,pos=none
    PermittedPayload4096_1, bit,count=4,indent=2,pos=none
    PermittedPayload4096_2, bit,count=4,indent=2,pos=none
    PermittedPayload4096_3, bit,count=4,indent=2,pos=none
End

Begin Record, RTM2 PilotStrengthAttr Rec, BitPack, OTTSName = CMsgRtm2PilotStrengthAttrRec
    ValueID, uint8, indent = 2
    NumPilotStrengthAxisValues, bit,count=4,indent=2,pos=none
    Rec, record, type = RTM2 PilotStrengthAxis Rec, size=NumPilotStrengthAxisValues, maxsize=15
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RTM2 PilotStrengthAxis Rec, BitPack, OTTSName=CMsgRtm2PilotStrengthAxisRec
    PilotStrengthAxis, bit,count=6,indent=2,pos=none
    PilotStrengthPilotStrengthAxis, bit,count=4,indent=2,pos=none
End

Begin Record, RTM2 PowerParametersAttr Rec, BitPack, OTTSName = CMsgRtm2PowerParmsAttrRec
    ValueID, uint8, indent = 2
    T2P256, uint8, indent = 2
    T2P512, uint8, indent = 2
    T2P1024, uint8, indent = 2
    T2P2048, uint8, indent = 2
    T2P4096, uint8, indent = 2
End

Begin Record, RTM2 RequestParametersAttr Rec, BitPack, OTTSName = CMsgRtm2ReqParmsAttrRec
    ValueID, uint8, indent = 2
    ReqRatio, bit,count=4,indent=2,pos=none
    MaxReqInterval, bit,count=4,indent=2,pos=none
End

Begin Record, RTM2 TxT2PmaxAttr Rec, BitPack, OTTSName = CMsgRtm2TxT2PmaxAttrRec
    ValueID, uint8, indent = 2
    NumPilotStrengthAxisValues, bit,count=3,indent=2,pos=none
    Rec, record, type = RTM2 MaxPilotStrengthAxis Rec, size=NumPilotStrengthAxisValues, maxsize=7
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RTM2 MaxPilotStrengthAxis Rec, BitPack, OTTSName=CMsgRtm2MaxPilotStrengthAxisRec
    PilotStrengthAxis, bit,count=6,indent=2,pos=none
    TxT2PmaxPilotStrengthAxis, bit,count=7,indent=2,pos=none
End

Begin Record, RTM2 MaxMACFlowAttr Rec, BitPack, OTTSName = CMsgRtm2MaxMacFlowAttrRec
    ValueID, uint8, indent = 2
    MaxNumMACFlows, uint8, indent = 2
    MaxNumActiveMACFlows, uint8, indent = 2
End

Begin Record, RTM2 AssociatedFlowsAttr Rec, BitPack, OTTSName = CMsgRtm2AssociatedFlowAttrRec
    ValueID, uint8, indent = 2
    FlowCount, uint8, indent = 2
    FlowRec, record, type=RTM2 AssociatedFlow Rec, size=FlowCount, maxsize=16
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RTM2 AssociatedFlow Rec, BitPack, OTTSName=CMsgRtm2AssociatedFlowRec
    Stream, bit,count=9,indent=2,pos=none
    SubStream, uint8, indent = 2
End

Begin Record, RTM2 BucketFactorAttr Rec, BitPack, OTTSName = CMsgRtm2BucketFactorAttrRec
    ValueID, uint8, indent = 2
    NumT2PAxisValues, bit,count=4,indent=2,pos=none
    NumFRABAxisValues, bit,count=3,indent=2,pos=none
    T2PAxis, array, type=uint8, size=(NumT2PAxisValues+1),maxsize=16, indent = 2
    FRABAxis, array,type=bit,count=4,size=(NumFRABAxisValues+1),maxsize=8,indent=2,pos=none
    BucketFactorT2PAxisFRABAxis, array, type=uint8, size=(NumT2PAxisValues+1)*(NumFRABAxisValues+1),maxsize=128, indent=2
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RTM2 T2PInflowRangeAttr Rec, BitPack, OTTSName = CMsgRtm2T2PInFlowRangeAttrRec
    ValueID, uint8, indent = 2
    T2PInflowmin, uint8, indent = 2
    T2PInflowmax, uint8, indent = 2
End

Begin Record, RTM2 T2PTransitionFunctionAttr Rec, BitPack, OTTSName = CMsgRtm2T2PTransFuncAttrRec
    ValueID, uint8, indent = 2
    NumT2PAxisValues, bit,count=4,indent=2,pos=none
    NumFRABAxisValues, bit,count=3,indent=2,pos=none
    T2PAxis, array, type=uint8, size=(NumT2PAxisValues+1),maxsize=16, indent = 2
    FRABAxis, array,type=bit,count=4,size=(NumFRABAxisValues+1),maxsize=8,indent=2,pos=none
    T2PRec, record, type=RTM2 T2PTransFuncAttr FRABRec, size=(NumT2PAxisValues+1)*(NumFRABAxisValues+1),maxsize=128
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RTM2 T2PTransFuncAttr FRABRec, BitPack, OTTSName = CMsgRtm2T2PTransFuncAttrFrabRec
    T2PUpT2PAxisFRABAxis, uint8, indent = 2
    T2PDnT2PAxisFRABAxis, uint8, indent = 2
End

Begin Message, RTM2 OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName = CMsgRtm2ConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RTM2 RspAttribute Rec, maxsize=20, size=end
End

Begin Record, RTM2 RspAttribute Rec, BitPack, OTTSName = CMsgRtm2RspAttrRec
    Length, uint8, indent = 2
    AttributeID, uint16,Byteorder = motorola, indent = 2
    Value, uint8, indent = 2
End

Begin Message, RTM2 OTA Msg Rec AttributeUpdateRequest Rsp, BitPack, OTTSName = CMsgRtm2AttrUpdReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RTM2 ReqAttribute Rec, maxsize=20, size=end
End

Begin Message, RTM2 OTA Msg Rec AttributeUpdateAccept Rsp, BitPack, OTTSName = CMsgRtm2AttrUpdAcc
    TransactionID, uint8, indent = 2
End

Begin Message, RTM2 OTA Msg Rec AttributeUpdateReject Rsp, BitPack, OTTSName = CMsgRtm2AttrUpdRej
    TransactionID, uint8, indent = 2
End

Begin Record, RTM3 OTA Msg Rec, BitPack, OTTSName = CMsgRtm3
    <<< MessageId, uint8, indent = 1, base=enum:RTM3 Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, RTM3 OTA Msg Rec RTCAck Rsp, BitPack, OTTSName = CMsgRtm3RtcAck
End

Begin Message, RTM3 OTA Msg Rec BroadcastReverseRateLimit_NotUsed Rsp, BitPack, OTTSName = CMsgDRtm3BroadcastReverseRateLimit_NotUsed
    RPCCount, bit,count=6,indent=2,pos=none
    RateLimit, array,type=bit,count=4,size=RPCCount,maxsize=64,indent=2,pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, RTM3 OTA Msg Rec Request Rsp, BitPack, OTTSName = CMsgRtm3Request
    MaxSupportableTxT2P, uint8, indent = 2
    NumMACFlows, bit,count=5,indent=2,pos=none
    MacFlowRec, record, type = RTM3 ReqMACFlowRec, size=NumMACFlows,maxsize=8
    reserved, bit,count=3,indent=2,pos=none
End

Begin Record, RTM3 ReqMACFlowRec, BitPack, OTTSName=CMsgRtm3RequestMacFlowRec
    MACFlowID, bit,count=4,indent=2,pos=none
    QueueLength, bit,count=4,indent=2,pos=none
End

Begin Message, RTM3 OTA Msg Rec Grant Rsp, BitPack, OTTSName = CMsgRtm3Grant
    MaxSupportableTxT2P, uint8, indent = 2
    NumMACFlows, bit,count=5,indent=2,pos=none
    MacFlowRec, record, type = RTM3 GrantMACFlowRec, size=(NumMACFlows+1),maxsize=10
    reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RTM3 GrantMACFlowRec, BitPack, OTTSName=CMsgRtm3GrantMacFlowRec
    MACFlowID, bit,count=4,indent=2,pos=none
    T2PInFlow, uint8, indent = 2
    BucketLevel, uint8, indent = 2
    TT2PHold, bit,count=6,indent=2,pos=none
End

Begin Message, RTM3 OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName = CMsgRtm3ConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RTM3 ReqAttribute Rec, maxsize=50, size=end
End

Begin Record, RTM3 ReqAttribute Rec, BitPack, OTTSName = CMsgRtm3ReqAttrRec
    Length, uint8, indent = 2
    AttributeID, uint16,byteorder=motorola,indent=2,exist=(Length>0)
    Value, array,type=uint8,size=(Length-2),maxsize=4,exist=(((AttributeID&0xf000)==0xf000)) && ((Length>0)),indent=2
    AuxiliaryPilotChannelParameters, record,type=RTM3 AuxiPilotChanParmsAttr Rec,maxsize=4,size=(Length-2)/2,exist=((AttributeID==0)) && ((Length>0))
    CommonPowerParameters, record,type=RTM3 CommonPowerParametersAttr Rec,maxsize=4,size=(Length-2)/3,exist=((AttributeID==1)) && ((Length>0))
    MaxNumSubPackets, record,type=RTM3 MaxNumSubPacketsAttr Rec,maxsize=4,size=(Length-2)/2,exist=((AttributeID==2)) && ((Length>0))
    PermittedPayload, record,type=RTM3 PermittedPayloadAttr Rec,maxsize=4,size=(Length-2)/21,exist=((AttributeID==3)) && ((Length>0))
    PilotStrength, record,type=RTM3 PilotStrengthAttr Rec,maxsize=1,size=1,exist=((AttributeID==4)) && ((Length>0))
    PowerParameters128, record,type=RTM3 PowerParametersAttr Rec,maxsize=4,size=(Length-2)/6,exist=((AttributeID==5)) && ((Length>0))
    PowerParameters256, record,type=RTM3 PowerParametersAttr Rec,maxsize=4,size=(Length-2)/6,exist=((AttributeID==6)) && ((Length>0))
    PowerParameters512, record,type=RTM3 PowerParametersAttr Rec,maxsize=4,size=(Length-2)/6,exist=((AttributeID==7)) && ((Length>0))
    PowerParameters768, record,type=RTM3 PowerParametersAttr Rec,maxsize=4,size=(Length-2)/6,exist=((AttributeID==8)) && ((Length>0))
    PowerParameters1024, record,type=RTM3 PowerParametersAttr Rec,maxsize=4,size=(Length-2)/6,exist=((AttributeID==9)) && ((Length>0))
    PowerParameters1536, record,type=RTM3 PowerParametersAttr Rec,maxsize=4,size=(Length-2)/6,exist=((AttributeID==0x000a)) && ((Length>0))
    PowerParameters2048, record,type=RTM3 PowerParametersAttr Rec,maxsize=4,size=(Length-2)/6,exist=((AttributeID==0x000b)) && ((Length>0))
    PowerParameters3072, record,type=RTM3 PowerParametersAttr Rec,maxsize=4,size=(Length-2)/6,exist=((AttributeID==0x000c)) && ((Length>0))
    PowerParameters4096, record,type=RTM3 PowerParametersAttr Rec,maxsize=4,size=(Length-2)/6,exist=((AttributeID==0x000d)) && ((Length>0))
    PowerParameters6144, record,type=RTM3 PowerParametersAttr Rec,maxsize=4,size=(Length-2)/6,exist=((AttributeID==0x000e)) && ((Length>0))
    PowerParameters8192, record,type=RTM3 PowerParametersAttr Rec,maxsize=4,size=(Length-2)/6,exist=((AttributeID==0x000f)) && ((Length>0))
    PowerParameters12288, record,type=RTM3 PowerParametersAttr Rec,maxsize=4,size=(Length-2)/6,exist=((AttributeID==0x0010)) && ((Length>0))
    RequestParameters, record,type=RTM3 RequestParametersAttr Rec,maxsize=4,size=(Length-2)/2,exist=((AttributeID==0x0011)) && ((Length>0))
    RRIChannelPowerParameters, record,type=RTM3 RRIChannelPowerParametersAttr Rec,maxsize=4,size=(Length-2)/5,exist=((AttributeID==0x0012)) && ((Length>0))
    TxT2Pmax, record,type=RTM2 TxT2PmaxAttr Rec,maxsize=1,size=1,exist=((AttributeID==0x0013)) && ((Length>0))
    MaxMACFlows, record,type=RTM3 MaxMACFlowAttr Rec,maxsize=4,size=(Length-2)/3,exist=((AttributeID==0x0014)) && ((Length>0))
    AssociatedFlowsNN, record,type=RTM2 AssociatedFlowsAttr Rec,maxsize=1,size=1,exist=(((AttributeID&0xff00)==0x0100)) && ((Length>0))
    BucketFactorNN, record,type=RTM3 BucketFactorAttr Rec,maxsize=1,size=1,exist=(((AttributeID&0xff00)==0x0300)) && ((Length>0))
    T2PInflowRangeNN, record,type=RTM3 T2PInflowRangeAttr Rec,maxsize=1,size=1,exist=(((AttributeID&0xff00)==0x1500)) && ((Length>0))
    T2PTransitionFunctionNN, record,type=RTM3 T2PTransitionFunctionAttr Rec,maxsize=1,size=1,exist=(((AttributeID&0xff00)==0x1600)) && ((Length>0))
End

Begin Record, RTM3 AuxiPilotChanParmsAttr Rec, BitPack, OTTSName = CMsgRtm3AuxiPilotChanParmsAttrRec
    ValueID, uint8, indent = 2
    AuxiliaryPilotChannelGain, bit,count=4,indent=2,pos=none
    AuxiliaryPilotChannelMinPayload, bit,count=4,indent=2,pos=none
End

Begin Record, RTM3 CommonPowerParametersAttr Rec, BitPack, OTTSName = CMsgRtm3CommonPwrParmsAttrRec
    ValueID, uint8, indent = 2
    AllocationStagger, bit,count=4,indent=2,pos=none
    TxT2Pmin, uint8, indent = 2
    RPCStep, bit,count=2,indent=2,pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RTM3 MaxNumSubPacketsAttr Rec, BitPack, OTTSName = CMsgRtm3MaxNumSubPktsAttrRec
    ValueID, uint8, indent = 2
    MaxNumSubPackets0, bit,count=2,indent=2,pos=none
    MaxNumSubPackets1, bit,count=2,indent=2,pos=none
    MaxNumSubPackets2, bit,count=2,indent=2,pos=none
    Reserved, bit,count=2,indent=2,pos=none
End

Begin Record, RTM3 PermittedPayloadAttr Rec, BitPack, OTTSName = CMsgRtm3PermitPLAttrRec
    ValueID, uint8, indent = 2
    PermittedPayload0_1, bit,count=4,indent=2,pos=none
    PermittedPayload0_2, bit,count=4,indent=2,pos=none
    PermittedPayload0_3, bit,count=4,indent=2,pos=none
    PermittedPayload128_1, bit,count=4,indent=2,pos=none
    PermittedPayload128_2, bit,count=4,indent=2,pos=none
    PermittedPayload128_3, bit,count=4,indent=2,pos=none
    PermittedPayload256_1, bit,count=4,indent=2,pos=none
    PermittedPayload256_2, bit,count=4,indent=2,pos=none
    PermittedPayload256_3, bit,count=4,indent=2,pos=none
    PermittedPayload512_1, bit,count=4,indent=2,pos=none
    PermittedPayload512_2, bit,count=4,indent=2,pos=none
    PermittedPayload512_3, bit,count=4,indent=2,pos=none
    PermittedPayload768_1, bit,count=4,indent=2,pos=none
    PermittedPayload768_2, bit,count=4,indent=2,pos=none
    PermittedPayload768_3, bit,count=4,indent=2,pos=none
    PermittedPayload1024_1, bit,count=4,indent=2,pos=none
    PermittedPayload1024_2, bit,count=4,indent=2,pos=none
    PermittedPayload1024_3, bit,count=4,indent=2,pos=none
    PermittedPayload1536_1, bit,count=4,indent=2,pos=none
    PermittedPayload1536_2, bit,count=4,indent=2,pos=none
    PermittedPayload1536_3, bit,count=4,indent=2,pos=none
    PermittedPayload2048_1, bit,count=4,indent=2,pos=none
    PermittedPayload2048_2, bit,count=4,indent=2,pos=none
    PermittedPayload2048_3, bit,count=4,indent=2,pos=none
    PermittedPayload3072_1, bit,count=4,indent=2,pos=none
    PermittedPayload3072_2, bit,count=4,indent=2,pos=none
    PermittedPayload3072_3, bit,count=4,indent=2,pos=none
    PermittedPayload4096_1, bit,count=4,indent=2,pos=none
    PermittedPayload4096_2, bit,count=4,indent=2,pos=none
    PermittedPayload4096_3, bit,count=4,indent=2,pos=none
    PermittedPayload6144_1, bit,count=4,indent=2,pos=none
    PermittedPayload6144_2, bit,count=4,indent=2,pos=none
    PermittedPayload6144_3, bit,count=4,indent=2,pos=none
    PermittedPayload8192_1, bit,count=4,indent=2,pos=none
    PermittedPayload8192_2, bit,count=4,indent=2,pos=none
    PermittedPayload8192_3, bit,count=4,indent=2,pos=none
    PermittedPayload12288_1, bit,count=4,indent=2,pos=none
    PermittedPayload12288_2, bit,count=4,indent=2,pos=none
    PermittedPayload12288_3, bit,count=4,indent=2,pos=none
    Reserved, bit,count=4,indent=2,pos=none
End

Begin Record, RTM3 PilotStrengthAttr Rec, BitPack, OTTSName = CMsgRtm3PilotStrengthAttrRec
    ValueID, uint8, indent = 2
    NumPilotStrengthAxisValues, bit,count=4,indent=2,pos=none
    Rec, record, type = RTM3 PilotStrengthAxis Rec, size=NumPilotStrengthAxisValues, maxsize=15
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RTM3 PilotStrengthAxis Rec, BitPack, OTTSName=CMsgRtm3PilotStrengthAxisRec
    PilotStrengthAxis, bit,count=6,indent=2,pos=none
    PilotStrengthPilotStrengthAxis, bit,count=4,indent=2,pos=none
End

Begin Record, RTM3 PowerParametersAttr Rec, BitPack, OTTSName = CMsgRtm3PowerParmsAttrRec
    ValueID, uint8, indent = 2
    LoLatT2PTransition, bit,count=2,indent=2,pos=none
    LoLatTerminationTarget, bit,count=2,indent=2,pos=none
    HiCapT2PTransition, bit,count=2,indent=2,pos=none
    HiCapTerminationTarget, bit,count=2,indent=2,pos=none
    T2PLoLatPreTransition, uint8, indent = 2
    T2PLoLatPostTransition, uint8, indent = 2
    T2PHiCapPreTransition, uint8, indent = 2
    T2PHiCapPostTransition, uint8, indent = 2
End

Begin Record, RTM3 RequestParametersAttr Rec, BitPack, OTTSName = CMsgRtm3ReqParmsAttrRec
    ValueID, uint8, indent = 2
    ReqRatio, bit,count=4,indent=2,pos=none
    MaxReqInterval, bit,count=4,indent=2,pos=none
End

Begin Record, RTM3 RRIChannelPowerParametersAttr Rec, BitPack, OTTSName = CMsgRtm3RRIChanPwrParmsAttrRec
    ValueID, uint8, indent = 2
    RRIChannelGainPreTransition0, bit,count=4,indent=2,pos=none
    RRIChannelGainPostTransition0, bit,count=4,indent=2,pos=none
    RRIChannelGainPreTransition1, bit,count=4,indent=2,pos=none
    RRIChannelGainPostTransition1, bit,count=4,indent=2,pos=none
    RRIChannelGainPreTransition2, bit,count=4,indent=2,pos=none
    RRIChannelGainPostTransition2, bit,count=4,indent=2,pos=none
    RRIChannelGainPreTransition3, bit,count=4,indent=2,pos=none
    Reserved, bit,count=4,indent=2,pos=none
End

Begin Record, RTM3 MaxMACFlowAttr Rec, BitPack, OTTSName = CMsgRtm3MaxMacFlowAttrRec
    ValueID, uint8, indent = 2
    MaxNumMACFlows, uint8, indent = 2
    MaxNumActiveMACFlows, uint8, indent = 2
End

Begin Record, RTM3 BucketFactorAttr Rec, BitPack, OTTSName = CMsgRtm3BucketFactorAttrRec
    ValueID, uint8, indent = 2
    NumT2PAxisValues, bit,count=4,indent=2,pos=none
    NumFRABAxisValues, bit,count=3,indent=2,pos=none
    T2PAxis, array, type=uint8, size=(NumT2PAxisValues+1),maxsize=16, indent = 2
    FRABAxis, array,type=bit,count=4,size=(NumFRABAxisValues+1),maxsize=8,indent=2,pos=none
    BucketFactorT2PAxisFRABAxis, array, type=uint8, size=(NumT2PAxisValues+1)*(NumFRABAxisValues+1),maxsize=128, indent=2
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RTM3 T2PInflowRangeAttr Rec, BitPack, OTTSName = CMsgRtm3T2PInFlowRangeAttrRec
    ValueID, uint8, indent = 2
    T2PInflowmin, uint8, indent = 2
    T2PInflowmax, uint8, indent = 2
End

Begin Record, RTM3 T2PTransitionFunctionAttr Rec, BitPack, OTTSName = CMsgRtm3T2PTransFuncAttrRec
    ValueID, uint8, indent = 2
    NumT2PAxisValues, bit,count=4,indent=2,pos=none
    NumFRABAxisValues, bit,count=3,indent=2,pos=none
    T2PAxis, array, type=uint8, size=(NumT2PAxisValues+1),maxsize=16, indent = 2
    FRABAxis, array,type=bit,count=4,size=(NumFRABAxisValues+1),maxsize=8,indent=2,pos=none
    T2PRec, record, type=RTM2 T2PTransFuncAttr FRABRec, size=(NumT2PAxisValues+1)*(NumFRABAxisValues+1),maxsize=128
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, RTM3 OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName = CMsgRtm3ConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RTM3 RspAttribute Rec, maxsize=50, size=end
End

Begin Record, RTM3 RspAttribute Rec, BitPack, OTTSName = CMsgRtm3RspAttrRec
    Length, uint8, indent = 2
    AttributeID, uint16,Byteorder = motorola, indent = 2
    Value, uint8, indent = 2
End

Begin Message, RTM3 OTA Msg Rec AttributeUpdateRequest Rsp, BitPack, OTTSName = CMsgRtm3AttrUpdReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RTM3 ReqAttribute Rec, maxsize=50, size=end
End

Begin Message, RTM3 OTA Msg Rec AttributeUpdateAccept Rsp, BitPack, OTTSName = CMsgRtm3AttrUpdAcc
    TransactionID, uint8, indent = 2
End

Begin Message, RTM3 OTA Msg Rec AttributeUpdateReject Rsp, BitPack, OTTSName = CMsgRtm3AttrUpdRej
    TransactionID, uint8, indent = 2
End

Begin Message, DO DSA Msg Rec KeyExchange Rsp, BitPack, OTTSName=CMsgKepSig
    DKepMsg, record, type = Default KEP OTA Msg Rec, maxsize=1, exist=(..\SubType==0)
    DHKepMsg, record, type = DH KEP OTA Msg Rec, maxsize=1, exist=(..\SubType==1)
End

Begin Record, Default KEP OTA Msg Rec, BitPack, OTTSName = CMsgDKep
End

Begin Record, DH KEP OTA Msg Rec, BitPack, OTTSName = CMsgDHKep
    <<< MessageId, uint8, indent = 1, base=enum:DHKEP Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, DH KEP OTA Msg Rec KeyRequest Rsp, BitPack, OTTSName=CMsgDHKepKeyReq
    TransactionID, uint8, indent = 2
    TimeOut, uint8, indent = 2
    ANPubKey, array, type=uint8, maxsize=128, size=end
End

Begin Message, DH KEP OTA Msg Rec KeyResponse Rsp, BitPack, OTTSName=CMsgDHKepKeyRsp
    TransactionID, uint8, indent = 2
    TimeOut, uint8, indent = 2
    ATPubKey, array, type=uint8, maxsize=128, size=end
End

Begin Message, DH KEP OTA Msg Rec ANKeyComplete Rsp, BitPack, OTTSName=CMsgDHKepANKeyComp
    TransactionID, uint8, indent = 2
    Nonce, bit,count=16,indent=2,pos=none
    TimeStampShort, bit,count=16,indent=2,pos=none
    KeySignature, array, type=uint8, size=20, maxsize=20
End

Begin Message, DH KEP OTA Msg Rec ATKeyComplete Rsp, BitPack, OTTSName=CMsgDHKepATKeyComp
    TransactionID, uint8, indent = 2
    Result, bit,count=1,indent=2,pos=none
    Reserved, bit,count=-8,pos=none
End

Begin Message, DH KEP OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgDHKepConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=DHKep Attribute Rec, maxsize=8, size=end
End

Begin Record, DHKep Attribute Rec, BitPack, OTTSName=CMsgDHKepAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8,indent=1,base=enum:DHKEP AttributeID Enum,exist=(Length>0)
    AttriRec, union,enum=AttributeID,consumebytes=(Length - 1),exist=(Length>0)
End

Begin Message, DHKEP Attribute Rec SessionKeyLength Rsp, BitPack, OTTSName = CMsgDHKepKeyLenAttr
    AttributeValue, array, type=uint8, maxsize=2, size=end
End

Begin Message, DH KEP OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgDHKepConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=DHKep Attribute Rec, maxsize=8, size=end
End

Begin Message, DO DSA Msg Rec AUTH Rsp, BitPack, OTTSName=CMsgAuthSig
    DAuthMsg, record, type = Default AUTH OTA Msg Rec, maxsize=1, exist=(..\SubType==0)
    SHA1AuthMsg, record, type = SHA1 AUTH OTA Msg Rec, maxsize=1, exist=(..\SubType==1)
End

Begin Record, Default AUTH OTA Msg Rec, BitPack, OTTSName = CMsgDAuth
End

Begin Record, SHA1 AUTH OTA Msg Rec, BitPack, OTTSName = CMsgSHA1Auth
    <<< MessageId, uint8, indent = 1, base=enum:SHA1 AUTH Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, SHA1 AUTH OTA Msg Rec Null Rsp, BitPack, OTTSName=CMsgSHA1Null
End

Begin Message, SHA1 AUTH OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgSHA1ConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=SHA1 Attribute Rec, maxsize=8, size=end
End

Begin Record, SHA1 Attribute Rec, BitPack, OTTSName=CMsgSHA1AttrRec
    Length, uint8, indent = 2
    AttributeID, uint8,indent=1,base=enum:SHA1 AttributeID Enum,exist=(Length>0)
    AttriRec, union,enum=AttributeID,consumebytes=(Length - 1),exist=(Length>0)
End

Begin Message, SHA1 Attribute Rec ACAuthKeyLength Rsp, BitPack, OTTSName = CMsgACKepKeyLenAttr
    AttributeValue, array, type=uint16, Byteorder = motorola,maxsize=2, size=end
End

Begin Message, SHA1 AUTH OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgSHA1ConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=SHA1 Attribute Rec, maxsize=8, size=end
End

Begin Message, DO DSA Msg Rec PCP Rsp, BitPack, OTTSName=CMsgDsaPcpSig
    Bytes, array, type = uint8, maxsize = 10, size = end, indent = 2
End

Begin Message, DO DSA Msg Rec ALMP Rsp, BitPack, OTTSName=CMsgAlmpSig
    AlmpMsg, record, type = ALMP OTA Msg Rec, maxsize=1
End

Begin Record, ALMP OTA Msg Rec, BitPack, OTTSName = CMsgAlmp
    <<< MessageId, uint8, indent = 1, base=enum:ALMP Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, ALMP OTA Msg Rec Redirect Rsp, BitPack, OTTSName = CMsgAlmpRedirect
    NumChannel, uint8, indent = 2
    Channel, record, type=DO Channel Rec, size=NumChannel, maxsize=100
End

Begin Record, DO Channel Rec, BitPack, OTTSName=CMsgDoChanRec
    SystemType, uint8,  indent = 2
    BandClass, bit,count=5,indent=2,pos=none
    ChannelNumber, bit,count=11,indent=2,pos=none
End

Begin Message, ALMP OTA Msg Rec ConnectionFailureReport Rsp, BitPack, OTTSName = CMsgAlmpConnFailRpt
    TransactionID, uint8, indent = 2
    NumRecords, bit,count=4,indent=2,pos=none
    ConnRec, record, type=ALMP ConnectionRpt Rec, size=NumRecords, maxsize=16
    Reserved, bit,count=-8,pos=none
End

Begin Record, ALMP ConnectionRpt Rec, BitPack, OTTSName = CMsgAlmpConnRptRec
    ConnectionFailureReason, bit,count=4,indent=2,base=enum:ALMP ConnFailReason Enum,pos=none
    TimeStamp, uint32, indent = 2
    SectorID, array, type = uint8, size = 16, maxsize=16, indent = 2
    ChannelRecord, record, type = DO Channel Rec, maxsize = 1
    LatLongIncluded, bit,count=1,indent=2,pos=none
    Latitude, bit,count=22,indent=2,exist=(LatLongIncluded == 1),pos=none
    Longitude, bit,count=23,indent=2,exist=(LatLongIncluded == 1),pos=none
End

Begin Message, ALMP OTA Msg Rec ConnectionFailureReportAck Rsp, BitPack, OTTSName = CMsgAlmpConnFailRptAck
    TransactionID, uint8, indent = 2
End

Begin Message, ALMP OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgAlmpConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=ALMP Attribute Rec, maxsize=1, size=end
End

Begin Record, ALMP Attribute Rec, BitPack, OTTSName = CMsgAlmpAttributeRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 1, base = enum:ALMP AttributeID Enum
    Rec, record,type=ALMP ConnFailureRptEnabled Rec, maxsize=1, consumeBytes=(Length-1)
End

Begin Record, ALMP ConnFailureRptEnabled Rec, BitPack, OTTSName=CMsgAlmpConFailRptEnable
    AttributeValue, array, type = uint8, maxsize=2, size=end, indent = 2
End

Begin Message, ALMP OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgAlmpConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=ALMP Attribute Rec, maxsize=1, size=end
End

Begin Message, DO DSA Msg Rec INSP Rsp, BitPack, OTTSName=CMsgInspSig
    InspMsg, record, type = INSP OTA Msg Rec, maxsize=1
End

Begin Record, INSP OTA Msg Rec, BitPack, OTTSName = CMsgInsp
    <<< MessageId, bit,count=2,indent=1,base=enum:INSP Msg Enum,pos=none
    Msg, union, enum=<<< MessageId
End

Begin Message, INSP OTA Msg Rec Sync Rsp, BitPack, OTTSName = CMsgInspSync
    MaximumRevision, uint8, indent = 2
    MinimumRevision, uint8, indent = 2
    PilotPN, bit,count=9,indent=2,pos=none
    SystemTime, bit,count=37,indent=2,base=16,pos=none
End

Begin Message, DO DSA Msg Rec IDP Rsp, BitPack, OTTSName=CMsgIdpSig
    DIdpMsg, record, type = DIDP OTA Msg Rec, maxsize=1, exist=(..\SubType==0)
    EIdpMsg, record, type = EIDP OTA Msg Rec, maxsize=1, exist=(..\SubType==1)
    QIdpMsg, record, type = QIDP OTA Msg Rec, maxsize=1, exist=(..\SubType==2)
End

Begin Record, DIDP OTA Msg Rec, BitPack, OTTSName = CMsgDIdp
    <<< MessageId, uint8, indent = 1, base=enum:DIDP Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, DIDP OTA Msg Rec Page Rsp, BitPack, OTTSName = CMsgDIdpPage
End

Begin Message, DIDP OTA Msg Rec ConnectionRequest Rsp, BitPack, OTTSName = CMsgDIdpConnReq
    TransactionID, uint8, indent = 2
    RequestReason, bit,count=4,indent=2,base=enum:IDP RequestReason Enum,pos=none
    Reserved, bit,count=4,indent=2,pos=none
End

Begin Message, DIDP OTA Msg Rec ConnectionDeny Rsp, BitPack, OTTSName = CMsgDIdpConnDeny
    TransactionID, uint8, indent = 2
    DenyReason, bit,count=4,indent=2,base=enum:IDP DenyReason Enum,pos=none
    Reserved, bit,count=4,indent=2,pos=none
End

Begin Message, DIDP OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgDIdpConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=DIDP ReqAttribute Rec, maxsize=1, size=end
End

Begin Record, DIDP ReqAttribute Rec, BitPack, OTTSName = CMsgDIdpReqAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8,indent=2,base=enum:DIDP AttributeID Enum,exist=(Length>0)
    AttriRec, union,enum=AttributeID,consumebytes=(Length - 1),exist=(Length>0)
End

Begin Message, DIDP ReqAttribute Rec PrefCCCycle Rsp, BitPack, OTTSName = CMsgDIdpPrefCcCycle
    Rec, record, type=DIDP PrefCCCycle Rec, size=end, maxsize=2
End

Begin Record, DIDP PrefCCCycle Rec, BitPack, OTTSName = CMsgDIdpPrefRec
    ValueID, uint8, indent = 2
    PreferredCCCycleEnabled, bit,count=1,indent=2,pos=none
    PreferredCCCycle, bit,count=15,indent=2,exist=(PreferredCCCycleEnabled==1),pos=none
    Reserved, bit,count=7,indent=2,exist=(PreferredCCCycleEnabled==0),pos=none
End

Begin Message, DIDP OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgDIdpConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=DIDP RspAttribute Rec, maxsize=1, size=end
End

Begin Record, DIDP RspAttribute Rec, BitPack, OTTSName = CMsgDIdpRspAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 2, base = enum:DIDP AttributeID Enum
    Value, uint8, indent = 2
End

Begin Record, EIDP OTA Msg Rec, BitPack, OTTSName = CMsgEIdp
    <<< MessageId, uint8, indent = 1, base=enum:EIDP Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, EIDP OTA Msg Rec Page Rsp, BitPack, OTTSName = CMsgEIdpPage
    PageResponseAPersistenceIncluded, bit,count=1,indent=2,noexist=0,default=0,pos=none
    PageResponseAPersistence, bit,count=6,indent=2,exist=(PageResponseAPersistenceIncluded ==1),pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, EIDP OTA Msg Rec ConnectionRequest Rsp, BitPack, OTTSName = CMsgEIdpConnReq
    TransactionID, uint8, indent = 2
    RequestReason, bit,count=4,indent=2,base=enum:IDP RequestReason Enum,pos=none
    PreferredChannelCount, bit,count=5,indent=2,pos=none
    PreferredChannel, record, type=DO Channel Rec, size=PreferredChannelCount, maxsize=32
    EmergencyIndication, bit,count=1,indent=2,noexist=0,default=0,pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, EIDP OTA Msg Rec ConnectionDeny Rsp, BitPack, OTTSName = CMsgEIdpConnDeny
    TransactionID, uint8, indent = 2
    DenyReason, bit,count=4,indent=2,base=enum:IDP DenyReason Enum,pos=none
    Reserved, bit,count=4,indent=2,pos=none
End

Begin Message, EIDP OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgEIdpConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=EIDP ReqAttribute Rec, maxsize=5, size=end
End

Begin Record, EIDP ReqAttribute Rec, BitPack, OTTSName = CMsgEIdpReqAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8,indent=2,base=enum:EIDP AttributeID Enum,exist=(Length>0)
    AttriRec, union,enum=AttributeID,consumebytes=(Length - 1),exist=(Length>0)
End

Begin Message, EIDP ReqAttribute Rec PrefCCCycle Rsp, BitPack, OTTSName = CMsgEIdpPrefCcCycle
    Rec, record, type=EIDP PrefCCCycle Rec, size=end, maxsize=2
End

Begin Record, EIDP PrefCCCycle Rec, BitPack, OTTSName = CMsgEIdpPrefRec
    ValueID, uint8, indent = 2
    PreferredCCCycleEnabled, bit,count=1,indent=2,pos=none
    PreferredCCCycle, bit,count=15,indent=2,exist=(PreferredCCCycleEnabled==1),pos=none
    Reserved, bit,count=7,indent=2,exist=(PreferredCCCycleEnabled==0),pos=none
End

Begin Message, EIDP ReqAttribute Rec SlottedMode Rsp, BitPack, OTTSName = CMsgEIdpSlottedMode
    Rec, record, type=EIDP SlottedMode Rec, size=end, maxsize=2
End

Begin Record, EIDP SlottedMode Rec, BitPack, OTTSName=CMsgEIdpSlottedModeRec
    ValueID, uint8, indent = 2
    SlotCycle1, bit,count=5,indent=2,pos=none
    SlotCycle2, bit,count=5,indent=2,pos=none
    SlotCycle3, bit,count=5,indent=2,pos=none
    WakeCount1, bit,count=4,indent=2,pos=none
    WakeCount2, bit,count=4,indent=2,pos=none
    Reserved, bit,count=1,indent=2,pos=none
End

Begin Message, EIDP ReqAttribute Rec PagingMask Rsp, BitPack, OTTSName = CMsgEIdpPagingMask
    Rec, record, type=EIDP PagingMask AttrRec, maxsize=2, size=end
End

Begin Record, EIDP PagingMask AttrRec, BitPack, OTTSName = CMsgEIdpAttrPagingMaskRec
    ValueID, uint8, indent = 2
    MaskCount, uint8, indent = 2
    MaskRec, record, type=EIDP PagingMask Rec, maxsize=100, size=MaskCount
End

Begin Record, EIDP PagingMask Rec, BitPack, OTTSName = CMsgEIdpPagingMaskRec
    MaskPurpose, uint8, indent = 2
    PreMaskDuration, bit,count=16,indent=2,pos=none
    MaskDuration, bit,count=16,indent=2,pos=none
    PostMaskDuration, bit,count=16,indent=2,pos=none
End

Begin Message, EIDP ReqAttribute Rec PageResponseAPersistence Rsp, BitPack, OTTSName = CMsgEIdpPRAPS
    AttributeValue, array, type=uint8, maxsize=2, size=end
End

Begin Message, EIDP ReqAttribute Rec ConnectionDenyBackoff Rsp, BitPack, OTTSName = CMsgEIdpCDB
    AttributeValue, array, type=uint8, maxsize=2, size=end
End

Begin Message, EIDP ReqAttribute Rec AccessHashingClassMask Rsp, BitPack, OTTSName = CMsgEIdpAcHashClassMask
    AttributeValue, array, type=uint16,Byteorder = motorola, maxsize=2, size=end
End

Begin Message, EIDP ReqAttribute Rec SmallSlotCycleAllowed Rsp, BitPack, OTTSName = CMsgEIdpSmallSlotCycleAllowed
    AttributeValue, array, type=uint8, maxsize=2, size=end
End

Begin Message, EIDP OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgEIdpConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=EIDP RspAttribute Rec, maxsize=5, size=end
End

Begin Record, EIDP RspAttribute Rec, BitPack, OTTSName = CMsgEIdpRspAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 2, base = enum:EIDP AttributeID Enum
    Value8bit, uint8, indent = 2, exist=(AttributeID!=0xfe)
    Value16bit, uint16, Byteorder = motorola,indent = 2, exist=(AttributeID==0xfe)
End

Begin Message, EIDP OTA Msg Rec AttributeUpdateRequest Rsp, BitPack, OTTSName = CMsgEIdpAttrUpdReq
    TransactionID, uint8, indent = 2
    AttributeRec, record, type=EIDP ReqAttribute Rec, maxsize=5, size=end
End

Begin Message, EIDP OTA Msg Rec AttributeUpdateAccept Rsp, BitPack, OTTSName = CMsgEIdpAttrUpdAcc
    TransactionID, uint8, indent = 2
End

Begin Message, EIDP OTA Msg Rec AttributeUpdateReject Rsp, BitPack, OTTSName = CMsgEIdpAttrUpdRej
    TransactionID, uint8, indent = 2
End

Begin Record, QIDP OTA Msg Rec, BitPack, OTTSName = CMsgQIdp
    <<< MessageId, uint8, indent = 1, base=enum:QIDP Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, QIDP OTA Msg Rec Page Rsp, BitPack, OTTSName = CMsgQIdpPage
    PageResponseAPersistenceIncluded, bit,count=1,indent=2,noexist=0,default=0,pos=none
    PageResponseAPersistence, bit,count=6,indent=2,exist=(PageResponseAPersistenceIncluded ==1),pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, QIDP OTA Msg Rec ConnectionRequest Rsp, BitPack, OTTSName = CMsgQIdpConnReq
    TransactionID, uint8, indent = 2
    RequestReason, bit,count=4,indent=2,base=enum:IDP RequestReason Enum,pos=none
    PreferredChannelCount, bit,count=5,indent=2,pos=none
    PreferredChannel, record, type=DO Channel Rec, size=PreferredChannelCount, maxsize=32
    EmergencyIndication, bit,count=1,indent=2,noexist=0,default=0,pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, QIDP OTA Msg Rec ConnectionDeny Rsp, BitPack, OTTSName = CMsgQIdpConnDeny
    TransactionID, uint8, indent = 2
    DenyReason, bit,count=4,indent=2,base=enum:IDP DenyReason Enum,pos=none
    Reserved, bit,count=4,indent=2,pos=none
End

Begin Message, QIDP OTA Msg Rec QuickPage Rsp, BitPack, OTTSName = CMsgQIdpQuickPage
    ConfigurationChange, bit,count=2,indent=2,pos=none
    QuickPIPerGroupCountMinusOne, bit,count=6,indent=2,pos=none
    QuickPageIndicator, array,type=bit,count=1,size=4*(QuickPIPerGroupCountMinusOne+1),maxsize=260,indent=2,pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, QIDP OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgQIdpConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=QIDP ReqAttribute Rec, maxsize=5, size=end
End

Begin Record, QIDP ReqAttribute Rec, BitPack, OTTSName = CMsgQIdpReqAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8,indent=2,base=enum:QIDP AttributeID Enum,exist=(Length>0)
    AttriRec, union,enum=AttributeID,consumebytes=(Length - 1),exist=(Length>0)
End

Begin Message, QIDP ReqAttribute Rec PrefCCCycle Rsp, BitPack, OTTSName = CMsgQIdpPrefCcCycle
    Rec, record, type=QIDP PrefCCCycle Rec, size=end, maxsize=2
End

Begin Record, QIDP PrefCCCycle Rec, BitPack, OTTSName = CMsgQIdpPrefRec
    ValueID, uint8, indent = 2
    PreferredCCCycleEnabled, bit,count=1,indent=2,pos=none
    PreferredCCCycle, bit,count=15,indent=2,exist=(PreferredCCCycleEnabled==1),pos=none
    Reserved, bit,count=7,indent=2,exist=(PreferredCCCycleEnabled==0),pos=none
End

Begin Message, QIDP ReqAttribute Rec SlottedMode Rsp, BitPack, OTTSName = CMsgQIdpSlottedMode
    Rec, record, type=QIDP SlottedMode Rec, size=end, maxsize=2
End

Begin Record, QIDP SlottedMode Rec, BitPack, OTTSName=CMsgQIdpSlottedModeRec
    ValueID, uint8, indent = 2
    SlotCycle1, bit,count=5,indent=2,pos=none
    SlotCycle2, bit,count=5,indent=2,pos=none
    SlotCycle3, bit,count=5,indent=2,pos=none
    WakeCount1, bit,count=4,indent=2,pos=none
    WakeCount2, bit,count=4,indent=2,pos=none
    Reserved, bit,count=1,indent=2,pos=none
End

Begin Message, QIDP ReqAttribute Rec PagingMask Rsp, BitPack, OTTSName = CMsgQIdpPagingMask
    Rec, record, type=QIDP PagingMask AttrRec, maxsize=2, size=end
End

Begin Record, QIDP PagingMask AttrRec, BitPack, OTTSName = CMsgQIdpAttrPagingMaskRec
    ValueID, uint8, indent = 2
    MaskCount, uint8, indent = 2
    MaskRec, record, type=QIDP PagingMask Rec, maxsize=100, size=MaskCount
End

Begin Record, QIDP PagingMask Rec, BitPack, OTTSName = CMsgQIdpPagingMaskRec
    MaskPurpose, uint8, indent = 2
    PreMaskDuration, bit,count=16,indent=2,pos=none
    MaskDuration, bit,count=16,indent=2,pos=none
    PostMaskDuration, bit,count=16,indent=2,pos=none
End

Begin Message, QIDP ReqAttribute Rec QuickPage Rsp, BitPack, OTTSName = CMsgQIdpQuickPaging
    Rec, record, type=QIDP QuickPaging AttrRec, maxsize=2, size=end
End

Begin Record, QIDP QuickPaging AttrRec, BitPack, OTTSName = CMsgQIdpAttrQuickPagingRec
    ValueID, uint8, indent = 2
    QuickPagingEnabled, bit,count=1,indent=2,pos=none
    SubSyncQuickPaging, bit,count=1,indent=2,pos=none
    Reserved, bit,count=6,indent=2,pos=none
End

Begin Message, QIDP ReqAttribute Rec PageResponseAPersistence Rsp, BitPack, OTTSName = CMsgQIdpPRAPS
    AttributeValue, array, type=uint8, maxsize=2, size=end
End

Begin Message, QIDP ReqAttribute Rec ConnectionDenyBackoff Rsp, BitPack, OTTSName = CMsgQIdpCDB
    AttributeValue, array, type=uint8, maxsize=2, size=end
End

Begin Message, QIDP ReqAttribute Rec AccessHashingClassMask Rsp, BitPack, OTTSName = CMsgQIdpAcHashClassMask
    AttributeValue, array, type=uint16,Byteorder = motorola, maxsize=2, size=end
End

Begin Message, QIDP ReqAttribute Rec SmallSlotCycleAllowed Rsp, BitPack, OTTSName = CMsgQIdpSmallSlotCycleAllowed
    AttributeValue, array, type=uint8, maxsize=2, size=end
End

Begin Message, QIDP OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgQIdpConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=QIDP RspAttribute Rec, maxsize=5, size=end
End

Begin Record, QIDP RspAttribute Rec, BitPack, OTTSName = CMsgQIdpRspAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 2, base = enum:QIDP AttributeID Enum
    Value8bit, uint8, indent = 2, exist=(AttributeID!=0xfe)
    Value16bit, uint16, Byteorder = motorola,indent = 2, exist=(AttributeID==0xfe)
End

Begin Message, QIDP OTA Msg Rec AttributeUpdateRequest Rsp, BitPack, OTTSName = CMsgQIdpAttrUpdReq
    TransactionID, uint8, indent = 2
    AttributeRec, record, type=QIDP ReqAttribute Rec, maxsize=5, size=end
End

Begin Message, QIDP OTA Msg Rec AttributeUpdateAccept Rsp, BitPack, OTTSName = CMsgQIdpAttrUpdAcc
    TransactionID, uint8, indent = 2
End

Begin Message, QIDP OTA Msg Rec AttributeUpdateReject Rsp, BitPack, OTTSName = CMsgQIdpAttrUpdRej
    TransactionID, uint8, indent = 2
End

Begin Message, DO DSA Msg Rec CSP Rsp, BitPack, OTTSName = CMsgCspSig
    CspMsg, record, type = CSP OTA Msg Rec, maxsize=1
End

Begin Record, CSP OTA Msg Rec, BitPack, OTTSName = CMsgCsp
    <<< MessageId, uint8, indent = 1, base=enum:CSP Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, CSP OTA Msg Rec ConnectionClose Rsp, BitPack, OTTSName=CMsgCspConnClose
    CloseReason, bit,count=3,indent=2,base=enum:CSP CloseReason Enum,pos=none
    SuspendEnable, bit,count=1,indent=2,pos=none
    SuspendTime, bit,count=36,indent=2,exist=(SuspendEnable==1),base=16,pos=none
    Reserved, bit,count=-8,pos=none
End

Begin Message, CSP OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgCspConfigReq
    TransactionID, uint8, indent = 2
End

Begin Message, CSP OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgCspConfigRsp
    TransactionID, uint8, indent = 2
End

Begin Message, DO DSA Msg Rec RUP Rsp, BitPack, OTTSName=CMsgRupSig
    RupMsg, record, type = RUP OTA Msg Rec, maxsize=1, exist=(..\SubType==0)
    Rup1Msg, record, type = Rup1 OTA Msg Rec, maxsize=1, exist=(..\SubType==1)
End

Begin Record, RUP OTA Msg Rec, BitPack, OTTSName = CMsgRup
    <<< MessageId, uint8, indent = 1, base=enum:RUP Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, RUP OTA Msg Rec RouteUpdate Rsp, BitPack, OTTSName=CMsgRouteUpdate
    MessageSequence, uint8, indent = 2
    ReferencePilotPN, bit,count=9,indent=2,pos=none
    ReferencePilotStrength, bit,count=6,indent=2,pos=none
    ReferenceKeep, bit,count=1,indent=2,pos=none
    NumPilots, bit,count=4,indent=2,pos=none
    PilotRec, record, type = RouteUpdate Pilot Rec, size=NumPilots, maxsize=16
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RouteUpdate Pilot Rec, BitPack, OTTSName = CMsgRouteUpdatePilotRec
    PilotPNPhase, bit,count=15,indent=2,pos=none
    ChannelIncluded, bit,count=1,indent=2,pos=none
    Channel, record, type = DO Channel Rec, maxsize = 1, exist = (ChannelIncluded==1)
    PilotStrength, bit,count=6,indent=2,pos=none
    Keep, bit,count=1,indent=2,pos=none
End

Begin Message, RUP OTA Msg Rec TrafficChannelAssignment Rsp, BitPack, OTTSName=CMsgTchAssign
    MessageSequence, uint8, indent = 2
    ChannelIncluded, bit,count=1,indent=2,pos=none
    Channel, record, type = DO Channel Rec, maxsize = 1, exist = (ChannelIncluded==1)
    FrameOffset, bit,count=4,indent=2,pos=none
    DRCLength, bit,count=2,indent=2,pos=none
    DRCChannelGainBase, bit,count=6,indent=2,pos=none
    ACKChannelGain, bit,count=6,indent=2,pos=none
    NumPilots, bit,count=4,indent=2,pos=none
    PilotRec, record, type = RUP TchAssign Pilot Rec, size = NumPilots, maxsize=16
    RAChannelGainIncluded, bit,count=1,indent=2,noexist=0,default=0,pos=none
    RAChannelGain, array,type=bit,count=2,size=NumPilots,maxsize=16,indent=2,exist=(RAChannelGainIncluded==1),pos=none
    MACIndexMSBsIncluded, bit,count=1,indent=2,default=0,exist=(RAChannelGainIncluded==1),pos=none
    MACIndexMSB, array,type=bit,count=1,size=NumPilots,maxsize=16,indent=2,exist=((RAChannelGainIncluded==1)) && ((MACIndexMSBsIncluded==1)),pos=none
    DSCChannelGainBase, bit,count=5,indent=2,exist=((RAChannelGainIncluded==1)) && ((MACIndexMSBsIncluded==1)),pos=none
    DSC, array,type=bit,count=3,size=NumPilots-count_of({PilotRec[]}(SofterHandoff==1)),maxsize=16,indent=2,exist=((RAChannelGainIncluded==1)) && ((MACIndexMSBsIncluded==1)),pos=none
    DeltaT2PsIncluded, bit,count=1,indent=2,noexist=0,default=0,exist=((RAChannelGainIncluded==1)) && ((MACIndexMSBsIncluded==1)),pos=none
    DeltaT2P, array,type=bit,count=6,size=NumPilots,maxsize=16,indent=2,exist=(((RAChannelGainIncluded==1)) && ((MACIndexMSBsIncluded==1))) && ((DeltaT2PsIncluded==1)),pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RUP TchAssign Pilot Rec, BitPack, OTTSName=CMsgRupTchAssignPilotRec
    PilotPN, bit,count=9,indent=2,pos=none
    SofterHandoff, bit,count=1,indent=2,pos=none
    MACIndexLSBs, bit,count=6,indent=2,pos=none
    DRCCover, bit,count=3,indent=2,pos=none
    RABLength, bit,count=2,indent=2,pos=none
    RABOffset, bit,count=3,indent=2,pos=none
End

Begin Message, RUP OTA Msg Rec TrafficChannelComplete Rsp, BitPack, OTTSName=CMsgTchComplete
    MessageSequence, uint8, indent = 2
End

Begin Message, RUP OTA Msg Rec ResetReport Rsp, BitPack, OTTSName=CMsgResetReport
End

Begin Message, RUP OTA Msg Rec NeighborList Rsp, BitPack, OTTSName=CMsgNghbrList
    Count, bit,count=5,indent=2,pos=none
    PilotPN, array,type=bit,count=9,size=Count,maxsize=32,indent=2,pos=none
    ChanRec, record, type=RUP NghbrList Chan Rec, size=Count, maxsize=32
    SearchWindowSizeIncluded, bit,count=1,indent=2,pos=none
    SearchWindowSize, array,type=bit,count=4,size=Count,maxsize=32,indent=2,exist=(SearchWindowSizeIncluded==1),pos=none
    SearchWindowOffsetIncluded, bit,count=1,indent=2,pos=none
    SearchWindowOffset, array,type=bit,count=3,size=Count,maxsize=32,indent=2,exist=(SearchWindowOffsetIncluded==1),pos=none
    FPDCHSupportedIncluded, bit,count=1,indent=2,pos=none
    FPDCHSupported, array,type=bit,count=1,size=count_of({ChanRec[]\Channel[]}(SystemType==1)),maxsize=32,indent=2,exist=(FPDCHSupportedIncluded==1),pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RUP NghbrList Chan Rec, BitPack, OTTSName = CMsgRupNghbrChanRec
    ChannelIncluded, bit,count=1,indent=2,pos=none
    Channel, record, type=DO Channel Rec, maxsize=1, exist=(ChannelIncluded==1)
End

Begin Message, RUP OTA Msg Rec AttributeOverride Rsp, BitPack, OTTSName=CMsgRupAttrOverride
    MessageSequence, uint8, indent = 2
    AttributeRecord, record, type=RUP ReqAttribute Rec, maxsize=20, size=end
End

Begin Record, RUP ReqAttribute Rec, BitPack, OTTSName = CMsgRupReqAttributeRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 1, base = enum:RUP AttributeID Enum
    Rec, union, enum = AttributeID, consumeBytes=(Length-1)
End

Begin Message, RUP ReqAttribute Rec SearchParameters Rsp, BitPack, OTTSName=CMsgRupSearchParam
    rec, record, type=RUP SearchParamAttri Rec, maxsize=2, size=end
End

Begin Record, RUP SearchParamAttri Rec, BitPack, OTTSName=CMsgSearchParamRec
    ValueID, uint8, indent = 2
    PilotIncrement, bit,count=4,indent=2,pos=none
    SearchWinActive, bit,count=4,indent=2,pos=none
    SearchWinNeighbor, bit,count=4,indent=2,pos=none
    SearchWinRemaining, bit,count=4,indent=2,pos=none
End

Begin Message, RUP ReqAttribute Rec SetManagementSameChannelParameters Rsp, BitPack, OTTSName=CMsgRupSetManSameChParam
    rec, record, type=RUP ChannelParamAttr Rec, maxsize=2, size=end
End

Begin Record, RUP ChannelParamAttr Rec, BitPack, OTTSName=CMsgRupChanParamRec
    ValueID, uint8, indent = 2
    PilotAdd, bit,count=6,indent=2,pos=none
    PilotCompare, bit,count=6,indent=2,pos=none
    PilotDrop, bit,count=6,indent=2,pos=none
    PilotDropTimer, bit,count=4,indent=2,pos=none
    DynamicThresholds, bit,count=1,indent=2,pos=none
    SoftSlop, bit,count=6,indent=2,exist=(DynamicThresholds == 1),pos=none
    AddIntercept, bit,count=6,indent=2,exist=(DynamicThresholds == 1),pos=none
    DropIntercept, bit,count=6,indent=2,exist=(DynamicThresholds == 1),pos=none
    NeighborMaxAge, bit,count=4,indent=2,pos=none
    Reserved, bit,count=-8,pos=none
End

Begin Message, RUP ReqAttribute Rec SetManagementDifferentChannelParameters Rsp, BitPack, OTTSName=CMsgRupSetManDiffChParam
    rec, record, type=RUP ChannelParamAttr Rec, maxsize=2, size=end
End

Begin Message, RUP ReqAttribute Rec SetManagementOverrideAllowed Rsp, BitPack, OTTSName=CMsgRupSetManOverridedAllowed
    AttributeValue, array, type=uint8, maxsize=2, size=end, indent = 2
End

Begin Message, RUP ReqAttribute Rec SupportedCDMAChannels Rsp, BitPack, OTTSName=CMsgRupSupportedCDMAChannels
    rec, record, type=RUP SupportedCDMAChan Rec, maxsize=2, size=end
End

Begin Record, RUP SupportedCDMAChan Rec, BitPack, OTTSName=CMsgRupSupChanRec
    ValueID, uint8, indent = 2
    BandClassCount, uint8, indent = 2
    BandClassRec, record, type = RUP BandClass Rec, maxsize = 100, size = BandClassCount
    Reserved, bit,count=-8,pos=none
End

Begin Record, RUP BandClass Rec, BitPack, OTTSName = CMsgRupBandClassRec
    BandClass, bit,count=5,indent=2,pos=none
    BandSubClassCount, uint8, indent = 2
    BandSubClass, array, type = uint8, size = BandSubClassCount, maxsize = 100, indent = 2, exist=(BandSubClassCount!=0)
End

Begin Message, RUP ReqAttribute Rec SupportRouteUpdateEnhancements Rsp, BitPack, OTTSName=CMsgRupSupportedRupEnhance
    AttributeValue, array, type=uint8, maxsize=2, size=end, indent = 2
End

Begin Message, RUP ReqAttribute Rec RouteUpdateRadiusAdd Rsp, BitPack, OTTSName=CMsgRupRadiusAdd
    AttributeValue, array, type=uint16,Byteorder = motorola, maxsize=2, size=end, indent = 2
End

Begin Message, RUP ReqAttribute Rec RouteUpdateRadiusMultiply Rsp, BitPack, OTTSName=CMsgRuRadiusMultiply
    AttributeValue, array, type=uint8, maxsize=2, size=end, indent = 2
End

Begin Message, RUP OTA Msg Rec AttributeOverrideResponse Rsp, BitPack, OTTSName=CMsgRupAttrOverrideRsp
    MessageSequence, uint8, indent = 2
End

Begin Message, RUP OTA Msg Rec RouteUpdateRequest Rsp, BitPack, OTTSName=CMsgRupReq
    ChannelIncluded, bit,count=1,indent=2,pos=none
    Channel, record,type=DO Channel Rec,maxsize=1,exist=(ChannelIncluded == 1)
    SectorCount, bit,count=4,indent=2,exist=(ChannelIncluded == 1),pos=none
    SectorPilotPN, array,type=bit,count=9,indent=2,size=SectorCount,maxsize=16,exist=((SectorCount>0)) && ((ChannelIncluded == 1)),pos=none
    SectorSearchWinSizeInc, bit,count=1,indent=2,exist=(ChannelIncluded == 1),pos=none
    SectorSearchWinSize, array,type=bit,count=4,indent=2,size=SectorCount,maxsize=16,exist=((SectorSearchWinSizeInc==1)) && ((ChannelIncluded == 1)),pos=none
    SectorSearchWinOffsetInc, bit,count=1,indent=2,exist=(ChannelIncluded == 1),pos=none
    SectorSearchWinOffset, array,type=bit,count=3,indent=2,size=SectorCount,maxsize=16,exist=((SectorSearchWinOffsetInc==1)) && ((ChannelIncluded == 1)),pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, RUP OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgRupConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RUP ReqAttribute Rec, maxsize=8, size=end
End

Begin Message, RUP OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgRupConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RUP RspAttribute Rec, maxsize=8, size=end
End

Begin Record, RUP RspAttribute Rec, BitPack, OTTSName = CMsgRupRspAttributeRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 1, base = enum:RUP AttributeID Enum
    Value8bit, uint8, exist=(AttributeID!=0xfe)
    Value16bit, uint16,Byteorder = motorola, exist=(AttributeID==0xfe)
End

Begin Message, RUP OTA Msg Rec AttributeUpdateRequest Rsp, BitPack, OTTSName=CMsgRupAttrUpdateReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RUP ReqAttribute Rec, maxsize=20, size=end
End

Begin Message, RUP OTA Msg Rec AttributeUpdateAccept Rsp, BitPack, OTTSName=CMsgRupAttrUpdateAcc
    TransactionID, uint8, indent = 2
End

Begin Message, RUP OTA Msg Rec AttributeUpdateReject Rsp, BitPack, OTTSName=CMsgRupAttrUpdateRej
    TransactionID, uint8, indent = 2
End

Begin Record, RUP1 OTA Msg Rec, BitPack, OTTSName = CMsgRup1
    <<< MessageId, uint8, indent = 1, base=enum:RUP Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, RUP1 OTA Msg Rec RouteUpdate Rsp, BitPack, OTTSName=CMsgRup1RouteUpdate
    MessageSequence, uint8, indent = 2
    ReferencePilotPN, bit,count=9,indent=2,pos=none
    ReferencePilotStrength, bit,count=6,indent=2,pos=none
    ReferenceKeep, bit,count=1,indent=2,pos=none
    NumPilots, bit,count=4,indent=2,pos=none
    PilotRec, record, type = RouteUpdate Pilot Rec, size=NumPilots, maxsize=16
    ATTotalPilotTransmissionIncluded, bit,count=1,indent=2,pos=none
    ATTotalPilotTransmission, uint8, exist = (ATTotalPilotTransmissionIncluded==1), indent = 2
    ReferencePilotChannelIncluded, bit,count=1,indent=2,pos=none
    ReferencePilotChannel, record, type = DO Channel Rec, size = 1, maxsize = 1, exist=(ReferencePilotChannelIncluded==1)
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, RUP1 OTA Msg Rec TrafficChannelAssignment Rsp, BitPack, OTTSName=CMsgRup1TchAssign
    MessageSequence, uint8, indent = 2
    DSCChannelGainBase, bit,count=5,indent=2,pos=none
    FrameOffset, bit,count=4,indent=2,pos=none
    NumSectors, bit,count=5,indent=2,pos=none
    NumSubActiveSets, bit,count=4,indent=2,pos=none
    AssignedChannelIncluded, bit,count=1,indent=2,pos=none
    SchedulerTagIncludes, bit,count=1,indent=2,pos=none
    FeedbackMultiplexingEnabled, bit,count=1,indent=2,pos=none
    SectorInfo, record, type = RUP1 TCA SectorInfo Rec, size = NumSectors, maxsize=16
    DSC, array,type=bit,count=3,size=NumSectors-count_of({SectorInfo[]}(SofterHandoff==1)),maxsize=16,indent=2,pos=none
    SubActiveSetInfo, record, type = RUP1 TCA SubActiveSet Rec, size = NumSubActiveSets, maxsize=16
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, RUP1 TCA SectorInfo Rec, BitPack, OTTSName=CMsgRup1TcaSectorInfo
    RACChannelGain, bit,count=2,indent=2,pos=none
    PilotPN, bit,count=9,indent=2,pos=none
    DRCCover, bit,count=3,indent=2,pos=none
    SofterHandoff, bit,count=1,indent=2,pos=none
End

Begin Record, RUP1 TCA SubActiveSet Rec, BitPack, OTTSName=CMsgRup1TcaSubAsetInfo
    NumFwdChannelsThisSubActiveSet, bit,count=4,exist=(..\AssignedChannelIncluded==1),indent=2,pos=none
    AssignedChannel, record, type = DO Channel Rec, size = NumFwdChannelsThisSubActiveSet, maxsize = 16, exist=(NumFwdChannelsThisSubActiveSet!=0), indent = 2
    FeedbackEnabled, bit,count=1,indent=2,pos=none
    FeedbackMultiplexingIndex, bit,count=9,indent=2,exist=((..\FeedbackMultiplexingEnabled==1)) && ((FeedbackEnabled==1)),pos=none
    FeedbackReverseChannelIndeex, bit,count=4,indent=2,exist=(FeedbackEnabled==1),pos=none
    SubActiveSetCarriesControlChannel, bit,count=1,indent=2,pos=none
    ThisSubActiveSetNotReportable, bit,count=1,indent=2,pos=none
    DSCForThisSubActiveSetEnabled, bit,count=1,indent=2,exist=(FeedbackEnabled==1),pos=none
    Next3FieldSameAsBefore, bit,count=1,indent=2,exist=(FeedbackEnabled==1),pos=none
    DRCLength, bit,count=2,indent=2,exist=((FeedbackEnabled==1)) && ((Next3FieldSameAsBefore==0)),pos=none
    DRCChannelGainBase, bit,count=6,indent=2,exist=((FeedbackEnabled==1)) && ((Next3FieldSameAsBefore==0)),pos=none
    ACKChannelGain, bit,count=6,indent=2,exist=((FeedbackEnabled==1)) && ((Next3FieldSameAsBefore==0)),pos=none
    NumReverseChannelsIncluded, bit,count=1,indent=2,pos=none
    NumReverseChannels, bit,count=4,indent=2,exist=(NumReverseChannelsIncluded==1),pos=none
    ReverseChannelInfo, record,type=RUP1 TCA RevChannel Rec,size=NumReverseChannels,maxsize=16,indent=2,exist=((NumReverseChannelsIncluded==1)) && ((NumReverseChannels > 0))
    SubActiveSectorInfo, record, type = RUP1 TCA SubActiveSectorInfo Rec, size=..\NumSectors, maxsize=16, indent = 2
End

Begin Record, RUP1 TCA RevChannel Rec, BitPack, OTTSName=CMsgRup1TcaRevChanInfo
    ReverseChannelConfiguration, bit,count=2,indent=2,pos=none
    ReverseBAndClass, bit,count=5,indent=2,exist=(ReverseChannelConfiguration==2),pos=none
    ReverseChannelNumber, bit,count=11,indent=2,exist=(ReverseChannelConfiguration==2),pos=none
    ReverseChannelDroppingRank, bit,count=3,indent=2,exist=(ReverseChannelConfiguration!=0),pos=none
End

Begin Record, RUP1 TCA SubActiveSectorInfo Rec, BitPack, OTTSName=CMsgRup1TcaSubActiveSectorInfo
    PilotInThisSectorIncluded, bit,count=1,indent=2,pos=none
    ForwardChannelIndexThisPilot, bit,count=4,indent=2,exist=(PilotInThisSectorIncluded==1),pos=none
    PilotGroupID, bit,count=3,indent=2,exist=(PilotInThisSectorIncluded==1),pos=none
    NumUniqueForwardTrafficMACIndices, bit,count=3,indent=2,exist=((PilotInThisSectorIncluded==1)) && ((..\FeedbackEnabled==1)),pos=none
    SchedulerTag, bit,count=7,indent=2,exist=(((NumUniqueForwardTrafficMACIndices!=0)&&(..\..\SchedulerTagIncludes==1))) && (((PilotInThisSectorIncluded==1)) && ((..\FeedbackEnabled==1))),pos=none
    AuxDRCCoverIncluded, bit,count=1,indent=2,exist=((NumUniqueForwardTrafficMACIndices!=0)) && (((PilotInThisSectorIncluded==1)) && ((..\FeedbackEnabled==1))),pos=none
    AuxDRCCover, bit,count=3,indent=2,exist=(((NumUniqueForwardTrafficMACIndices!=0)&&(AuxDRCCoverIncluded==1))) && (((PilotInThisSectorIncluded==1)) && ((..\FeedbackEnabled==1))),pos=none
    ForwardTrafficMACIndexPerInterlaceEnabled, bit,count=1,indent=2,exist=((NumUniqueForwardTrafficMACIndices==1)) && (((PilotInThisSectorIncluded==1)) && ((..\FeedbackEnabled==1))),pos=none
    FwdMacIndexInfo, record,type=RUP1 TCA FwdMacIndexInfo Rec,size=NumUniqueForwardTrafficMACIndices,maxsize=8,exist=((NumUniqueForwardTrafficMACIndices!=0)) && (((PilotInThisSectorIncluded==1)) && ((..\FeedbackEnabled==1))),indent=2
    RevMacIndexInfo, record,type=RUP1 TCA RevMacIndexInfo Rec,size=count_of({..\ReverseChannelInfo[]}(ReverseChannelConfiguration!=0)),exist=((..\NumReverseChannels>0)) && (((PilotInThisSectorIncluded==1)) && ((..\NumReverseChannelsIncluded==1))),maxsize=8,indent=2
End

Begin Record, RUP1 TCA FwdMacIndexInfo Rec, BitPack, OTTSName=CMsgRup1TcaFwdMacIndexInfo
    ForwardTrafficMACIndex, bit,count=10,indent=2,pos=none
    AssignedInterlaces, bit,count=4,indent=2,exist=(((..\NumUniqueForwardTrafficMACIndices==1)&&(..\ForwardTrafficMACIndexPerInterlaceEnabled==1))||(..\NumUniqueForwardTrafficMACIndices>1)),pos=none
End

Begin Record, RUP1 TCA RevMacIndexInfo Rec, BitPack, OTTSName=CMsgRup1TcaRevMacIndexInfo
    ReverseLinkMACIndex, bit,count=9,indent=2,pos=none
    RABMACIndex, bit,count=7,indent=2,pos=none
    DeltaT2P, bit,count=6,indent=2,pos=none
End

Begin Message, RUP1 OTA Msg Rec TrafficChannelComplete Rsp, BitPack, OTTSName=CMsgRup1TchComplete
    MessageSequence, uint8, indent = 2
End

Begin Message, RUP1 OTA Msg Rec ResetReport Rsp, BitPack, OTTSName=CMsgRup1ResetReport
End

Begin Message, RUP1 OTA Msg Rec NeighborList Rsp, BitPack, OTTSName=CMsgRup1NghbrList
    Count, bit,count=5,indent=2,pos=none
    PilotPN, array,type=bit,count=9,size=Count,maxsize=32,indent=2,pos=none
    ChanRec, record, type=RUP NghbrList Chan Rec, size=Count, maxsize=32
    SearchWindowSizeIncluded, bit,count=1,indent=2,pos=none
    SearchWindowSize, array,type=bit,count=4,size=Count,maxsize=32,indent=2,exist=(SearchWindowSizeIncluded==1),pos=none
    SearchWindowOffsetIncluded, bit,count=1,indent=2,pos=none
    SearchWindowOffset, array,type=bit,count=3,size=Count,maxsize=32,indent=2,exist=(SearchWindowOffsetIncluded==1),pos=none
    FPDCHSupportedIncluded, bit,count=1,indent=2,noexist=0,default=0,pos=none
    FPDCHSupported, array,type=bit,count=1,size=count_of({ChanRec[]\Channel[]}(SystemType==1)),maxsize=32,indent=2,exist=(FPDCHSupportedIncluded==1),pos=none
    PilotGroupInfo, record, type=NghbrList PilotGroup Rec, size=Count-count_of({ChanRec[]\Channel[]}(SystemType==1)), maxsize=32, indent=2
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, NghbrList PilotGroup Rec, BitPack, OTTSName = CMsgRup1NghbrPilotGroupRec
    PilotGroupIDIncluded, bit,count=1,indent=2,pos=none
    PilotGroupID, bit,count=3,indent=2,exist=(PilotGroupIDIncluded==1),pos=none
End

Begin Message, RUP1 OTA Msg Rec AttributeOverride Rsp, BitPack, OTTSName=CMsgRup1AttrOverride
    MessageSequence, uint8, indent = 2
    AttributeRecord, record, type=RUP ReqAttribute Rec, maxsize=20, size=end
End

Begin Message, RUP1 OTA Msg Rec AttributeOverrideResponse Rsp, BitPack, OTTSName=CMsgRup1AttrOverrideRsp
    MessageSequence, uint8, indent = 2
End

Begin Message, RUP1 OTA Msg Rec RouteUpdateRequest Rsp, BitPack, OTTSName=CMsgRup1Req
    ChannelIncluded, bit,count=1,indent=2,pos=none
    Channel, record,type=DO Channel Rec,maxsize=1,exist=(ChannelIncluded == 1)
    SectorCount, bit,count=4,indent=2,exist=(ChannelIncluded == 1),pos=none
    SectorPilotPN, array,type=bit,count=9,indent=2,size=SectorCount,maxsize=16,exist=((SectorCount>0)) && ((ChannelIncluded == 1)),pos=none
    SectorSearchWinSizeInc, bit,count=1,indent=2,exist=(ChannelIncluded == 1),pos=none
    SectorSearchWinSize, array,type=bit,count=4,indent=2,size=SectorCount,maxsize=16,exist=((SectorSearchWinSizeInc==1)) && ((ChannelIncluded == 1)),pos=none
    SectorSearchWinOffsetInc, bit,count=1,indent=2,exist=(ChannelIncluded == 1),pos=none
    SectorSearchWinOffset, array,type=bit,count=3,indent=2,size=SectorCount,maxsize=16,exist=((SectorSearchWinOffsetInc==1)) && ((ChannelIncluded == 1)),pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, RUP1 OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgRup1ConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RUP1 ReqAttribute Rec, maxsize=8, size=end
End

Begin Record, RUP1 ReqAttribute Rec, BitPack, OTTSName = CMsgRup1ReqAttributeRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 1, base = enum:RUP1 AttributeID Enum
    Rec, union, enum = AttributeID, consumeBytes=(Length-1)
End

Begin Message, RUP1 ReqAttribute Rec SearchParameters Rsp, BitPack, OTTSName=CMsgRup1SearchParam
    rec, record, type=RUP SearchParamAttri Rec, maxsize=2, size=end
End

Begin Message, RUP1 ReqAttribute Rec SetManagementParameters Rsp, BitPack, OTTSName=CMsgRup1SetManParam
    rec, record, type=RUP ChannelParamAttr Rec, maxsize=2, size=end
End

Begin Message, RUP1 ReqAttribute Rec SupportedCDMAChannels Rsp, BitPack, OTTSName=CMsgRup1SupportedCDMAChannels
    rec, record, type=RUP1 SupportedCDMAChan Rec, maxsize=2, size=end
End

Begin Record, RUP1 SupportedCDMAChan Rec, BitPack, OTTSName=CMsgRup1SupChanRec
    ValueID, uint8, indent = 2
    BandClassCount, uint8, indent = 2
    BandClassRec, record, type = RUP1 BandClass Rec, maxsize = 10, size = BandClassCount
    MultiBandCount, bit,count=4,indent=2,noexist=0,default=0,pos=none
    MultiBandBitMapCount, bit,count=8,indent=2,exist=(MultiBandCount!=0),pos=none
    MultiBandBitMap, array,type=bit,count=1,size=MultiBandBitMapCount,maxsize=3,exist=(MultiBandCount!=0),pos=none
    Reserved, bit,count=-8,pos=none
End

Begin Record, RUP1 BandClass Rec, BitPack, OTTSName = CMsgRup1BandClassRec
    BandClass, bit,count=5,indent=2,pos=none
    InterFlexDuplexTag, uint8, indent = 2
    IntraFlexDuplexFlag, bit,count=1,indent=2,pos=none
    BandSubClassCount, uint8, indent = 2
    BandSubClass, array, type = uint8, size = BandSubClassCount, maxsize = 10, indent = 2, exist=(BandSubClassCount!=0)
End

Begin Message, RUP1 ReqAttribute Rec SupportedDRXPatterns Rsp, BitPack, OTTSName=CMsgRup1SupportedDRXPatterns
    ValueID, uint8, indent = 2
    NumberofDRXPatterns, bit,count=4,indent=2,pos=none
    SupportedDRXPatteren, array, type = uint8, size = NumberofDRXPatterns, maxsize = 8
    Reserved, bit,count=-8,pos=none
End

Begin Message, RUP1 ReqAttribute Rec ForwardFeedbackMultiplexingSupported Rsp, BitPack, OTTSName=CMsgRup1FwdFeedbackMultiSup
    AttributeValue, array, type=uint8, maxsize=2, size=end, indent = 2
End

Begin Message, RUP1 ReqAttribute Rec MaxNumberOfSubActiveSets Rsp, BitPack, OTTSName=CMsgRup1MaxNumberOfSubActiveSets
    AttributeValue, array, type=uint8, maxsize=2, size=end, indent = 2
End

Begin Message, RUP1 ReqAttribute Rec MaxReverseLinkBandwidth Rsp, BitPack, OTTSName=CMsgRup1MaxReverseLinkBandwidth
    AttributeValue, array, type=uint16, Byteorder = motorola,maxsize=2, size=end, indent = 2
End

Begin Message, RUP1 ReqAttribute Rec MaxForwardLinkBandwidthWithJammer Rsp, BitPack, OTTSName=CMsgRup1MaxFwdLinkBandwidWithJammer
    AttributeValue, array, type=uint16, Byteorder = motorola,maxsize=2, size=end, indent = 2
End

Begin Message, RUP1 ReqAttribute Rec MaxForwardLinkBandwidthNoJammer Rsp, BitPack, OTTSName=CMsgRup1MaxFwdLinkBandwidNoJammer
    AttributeValue, array, type=uint16, Byteorder = motorola,maxsize=2, size=end, indent = 2
End

Begin Message, RUP1 ReqAttribute Rec MaxNumberofRLSupported Rsp, BitPack, OTTSName=CMsgRup1MaxNumberofRLSup
    AttributeValue, array, type=uint8, maxsize=2, size=end, indent = 2
End

Begin Message, RUP1 ReqAttribute Rec MaxNumberofFLSupported Rsp, BitPack, OTTSName=CMsgRup1MaxNumberofFLSup
    AttributeValue, array, type=uint8, maxsize=2, size=end, indent = 2
End

Begin Message, RUP1 ReqAttribute Rec SupportRouteUpdateEnhancements Rsp, BitPack, OTTSName=CMsgRup1SupportedRupEnhance
    AttributeValue, array, type=uint8, maxsize=2, size=end, indent = 2
End

Begin Message, RUP1 ReqAttribute Rec RouteUpdateRadiusAdd Rsp, BitPack, OTTSName=CMsgRup1RadiusAdd
    AttributeValue, array, type=uint16,Byteorder = motorola, maxsize=2, size=end, indent = 2
End

Begin Message, RUP1 ReqAttribute Rec RouteUpdateRadiusMultiply Rsp, BitPack, OTTSName=CMsgRup1RadiusMultiply
    AttributeValue, array, type=uint8, maxsize=2, size=end, indent = 2
End

Begin Message, RUP1 OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgRup1ConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RUP1 RspAttribute Rec, maxsize=8, size=end
End

Begin Record, RUP1 RspAttribute Rec, BitPack, OTTSName = CMsgRup1RspAttributeRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 1, base = enum:RUP1 AttributeID Enum
    Value16bit, uint16,byteorder=motorola,indent=2,exist=((AttributeID==0xfe)||((AttributeID>=0xf8)&&(AttributeID<=0xfa)))
    Value8bit, uint8,indent=2,exist=((AttributeID!=0xfe)&&((AttributeID< 0xf8)||(AttributeID>0xfa)))
End

Begin Message, RUP1 OTA Msg Rec AttributeUpdateRequest Rsp, BitPack, OTTSName=CMsgRup1AttrUpdateReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=RUP1 ReqAttribute Rec, maxsize=20, size=end
End

Begin Message, RUP1 OTA Msg Rec AttributeUpdateAccept Rsp, BitPack, OTTSName=CMsgRup1AttrUpdateAcc
    TransactionID, uint8, indent = 2
End

Begin Message, RUP1 OTA Msg Rec AttributeUpdateReject Rsp, BitPack, OTTSName=CMsgRup1AttrUpdateRej
    TransactionID, uint8, indent = 2
End

Begin Message, DO DSA Msg Rec OMP Rsp, BitPack, OTTSName=CMsgOmpSig
    OmpMsg, record, type = OMP OTA Msg Rec, maxsize=1
End

Begin Record, OMP OTA Msg Rec, BitPack, OTTSName = CMsgOmp
    <<< MessageId, uint8, indent = 1, base=enum:OMP Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, OMP OTA Msg Rec QuickConfig Rsp, BitPack, OTTSName = CMsgOmpQuickConfig
    ColorCode, uint8, indent = 2
    SectorID24, array, type = uint8, size = 3, maxsize=3, indent = 2
    SectorSignature, bit,count=16,indent=2,pos=none
    AccessSignature, bit,count=16,indent=2,pos=none
    Redirect, bit,count=1,indent=2,pos=none
    RPCCount63To0, bit,count=6,indent=2,pos=none
    FwdTrafficValid63To0, array,type=bit,count=1,size=RPCCount63To0,maxsize=64,indent=2,exist=(RPCCount63To0>0),pos=none
    RPCCount127To64Inc, bit,count=1,indent=2,noexist=0,default=0,pos=none
    RPCCount127To64, bit,count=6,indent=2,exist=(RPCCount127To64Inc==1),pos=none
    FwdTrafficValid127To64, array,type=bit,count=1,size=RPCCount127To64,maxsize=64,indent=2,exist=((RPCCount127To64Inc==1)) && ((RPCCount127To64>0)),pos=none
    RPCCount130To383Inc, bit,count=1,indent=2,noexist=0,default=0,pos=none
    RPCCount130To383, bit,count=8,indent=2,exist=(RPCCount130To383Inc==1),pos=none
    FwdTrafficValid130To383, array,type=bit,count=1,size=RPCCount130To383,maxsize=256,indent=2,exist=(RPCCount130To383Inc==1),pos=none
    OtherRATAvailable, bit,count=1,indent=2,noexist=0,default=0,pos=none
    OtherRATTXCycle, bit,count=3,indent=2,exist=(OtherRATAvailable==1),pos=none
    OtherRATSignature, bit,count=6,indent=2,exist=(OtherRATAvailable==1),pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, OMP OTA Msg Rec SectorParameters Rsp, BitPack, OTTSName = CMsgOmpSectorParms
    CountryCode, bit,count=12,indent=2,pos=none
    SectorID, array, type = uint8, size = 16, maxsize=16, indent = 2
    SubnetMask, uint8, indent = 2
    SectorSignature, bit,count=16,indent=2,pos=none
    Latitude, bit,count=22,indent=2,pos=none
    Longitude, bit,count=23,indent=2,pos=none
    RouteUpdateRadiusOverhead, bit,count=11,indent=2,pos=none
    LeapSeconds, uint8, indent = 2
    LocalTimeOffset, bit,count=11,indent=2,pos=none
    ReverseLinkSilenceDuration, bit,count=2,indent=2,pos=none
    ReverseLinkSilencePeriod, bit,count=2,indent=2,pos=none
    ChannelCount, bit,count=5,indent=2,pos=none
    Channel, record, type=DO Channel Rec, size=ChannelCount, maxsize=32
    NeighborCount, bit,count=5,indent=2,pos=none
    NeighborPilotPN, array,type=bit,count=9,size=NeighborCount,maxsize=32,indent=2,exist=(NeighborCount>0),pos=none
    NghbrRec, record, type=OMP NghbrPilot Rec, size=NeighborCount, maxsize=32, exist=(NeighborCount>0)
    NeighborSearchWinSizeInc, bit,count=1,indent=2,pos=none
    NeighborSearchWinSize, array,type=bit,count=4,size=NeighborCount,maxsize=32,exist=(NeighborSearchWinSizeInc==1),pos=none
    NeighborSearchWinOffsetInc, bit,count=1,indent=2,pos=none
    NeighborSearchWinOffset, array,type=bit,count=3,size=NeighborCount,maxsize=32,exist=(NeighborSearchWinOffsetInc==1),pos=none
    ExtendedChannelInc, bit,count=1,indent=2,noexist=0,default=0,pos=none
    ExtendedChannelCount, bit,count=5,indent=2,default=0,exist=(ExtendedChannelInc==1),pos=none
    ExtendedChannel, record,type=DO Channel Rec,size=ExtendedChannelCount,maxsize=32,exist=((ExtendedChannelCount>0)) && ((ExtendedChannelInc==1))
    AccessHashingChannelMaskInc, bit,count=1,indent=2,noexist=0,default=0,pos=none
    AccessHashingMaskLength, bit,count=4,indent=2,default=0,exist=(AccessHashingChannelMaskInc==1),pos=none
    AccessHashingRec0, record,type=OMP AccessHashingMask Rec,size=ChannelCount-count_of({Channel[]}(SystemType!=0)),maxsize=32,exist=((ChannelCount!=0)) && ((AccessHashingChannelMaskInc==1))
    AccessHashingRec1, record,type=OMP AccessHashingMask Rec,size=ExtendedChannelCount-count_of({ExtendedChannel[]}(SystemType!=0)),maxsize=32,exist=((ExtendedChannelCount!=0)) && (((AccessHashingChannelMaskInc==1)) && ((ExtendedChannelInc==1)))
    RouteUpdateTriggerCodeInc, bit,count=1,indent=2,noexist=0,default=0,pos=none
    RouteUpdateTriggerCode, bit,count=12,indent=2,exist=(RouteUpdateTriggerCodeInc==1),pos=none
    RouteUpdateTriggerMaxAge, bit,count=4,indent=2,exist=(RouteUpdateTriggerCodeInc==1),pos=none
    PriorSessionGAU, bit,count=1,indent=2,noexist=0,default=0,pos=none
    FPDCHSupportedInc, bit,count=1,indent=2,noexist=0,default=0,pos=none
    FPDCHSupported, array,type=bit,count=1,size=count_of({NghbrRec[]\NeighborChannel[]}(SystemType==1)),maxsize=32,indent=2,exist=(FPDCHSupportedInc==1),pos=none
    SecondaryColorCodeIncluded, bit,count=1,indent=2,noexist=0,default=0,pos=none
    SecondaryColorCodeCount, bit,count=3,indent=2,exist=(SecondaryColorCodeIncluded==1),pos=none
    SecondaryColorCode, array,type=uint8,size=SecondaryColorCodeCount,maxsize=8,exist=((SecondaryColorCodeCount>0)) && ((SecondaryColorCodeIncluded==1))
    PilotGroupIDLoopIncluded, bit,count=1,indent=2,noexist=0,default=0,pos=none
    PilotGroupID, record,type=OMP PilotGroupID Rec,size=NeighborCount+1-count_of({NghbrRec[]\NeighborChannel[]}(SystemType==1)),maxsize=32,indent=2,exist=(PilotGroupIDLoopIncluded==1)
    IsSectorMultipleCarrierCapable, bit,count=1,indent=2,noexist=0,default=0,pos=none
    ReverseChannel, record, type=OMP ReverseChannel Rec, size=count_of({Channel[]}(SystemType==2)), maxsize=32, exist=(ChannelCount!=0)
    ReverseChannel1, record,type=OMP ReverseChannel Rec,size=count_of({ExtendedChannel[]}(SystemType==2)),maxsize=32,exist=((ExtendedChannelCount!=0)) && ((ExtendedChannelInc==1))
    Reserved, bit,count=-8,pos=none
End

Begin Record, OMP NghbrPilot Rec, BitPack, OTTSName = CMsgOmpNghbrPNRec
    NeighborChannelInc, bit,count=1,indent=2,pos=none
    NeighborChannel, record, type=DO Channel Rec, maxsize=1, exist=(NeighborChannelInc==1)
End

Begin Record, OMP AccessHashingMask Rec, BitPack, OTTSName = CMsgOmpAccHashMaskRec
    AccessHashingChannelMaskSameAsPre, bit,count=1,indent=2,pos=none
    AccessHashingChannelMask, array,type=bit,count=1,size=(..\AccessHashingMaskLength+1),maxsize=17,indent=2,exist=(AccessHashingChannelMaskSameAsPre==0),pos=none
End

Begin Record, OMP PilotGroupID Rec, BitPack, OTTSName = CMsgOmpPilotGroupIDRec
    PilotGroupIDInc, bit,count=1,indent=2,pos=none
    PilotGroupID, bit,count=3,indent=2,exist=(PilotGroupIDInc==1),pos=none
End

Begin Record, OMP ReverseChannel Rec, BitPack, OTTSName = CMsgOmpReverseChannelRec
    ReverseBandClass, bit,count=5,indent=2,pos=none
    ReverseChannelNumber, bit,count=11,indent=2,pos=none
End

Begin Message, OMP OTA Msg Rec HRPDSilenceParameters Rsp, BitPack, OTTSName = CHRPDSilenceParameters
    ReverseLinkSilenceDuration, bit,count=2,indent=2,pos=none
    ReverseLinkSilencePeriod, bit,count=2,indent=2,pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, OMP OTA Msg Rec OtherRATNeighborList Rsp, BitPack, OTTSName = COtherRATNeighborList
    OtherRATSignature, bit,count=6,indent=2,pos=none
    NumOtherRAT, bit,count=4,indent=2,pos=none
    OtherRAT, record,  type=OMP OtherRAT Rec, size=NumOtherRAT, maxsize=15, exist=(NumOtherRAT>0)
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, OMP OtherRAT Rec, BitPack, OTTSName = COMPOtherRATRec
    RATType, bit,count=4,indent=2,pos=none
    NeighborRATRecordLength, bit,count=10,indent=2,pos=none
    NeighborRATRecord00, record, type=OMP LTENeighborList Rec, size=1, maxsize=1, exist=(RATType==0 && NeighborRATRecordLength>0)
    NeighborRATRecord01, array, type=uint8, size=NeighborRATRecordLength, maxsize=1024, exist=(RATType!=0 && NeighborRATRecordLength>0)
End

Begin Record, OMP LTENeighborList Rec, BitPack, OTTSName = COMPLTENeighborListRec
    PriorityIncluded, bit,count=1,indent=2,pos=none
    ServingPriority, bit,count=3,indent=2,exist=(PriorityIncluded==1),pos=none
    ThreshServing, bit,count=6,indent=2,pos=none
    PerEARFCNParamsIncluded, bit,count=1,indent=2,pos=none
    RxLevMinEUTRACommon, bit,count=7,indent=2,exist=(PerEARFCNParamsIncluded==0),pos=none
    PEMaxCommon, bit,count=6,indent=2,exist=(PerEARFCNParamsIncluded==0),pos=none
    RxLevMinEUTRAOffsetCommonIncl, bit,count=1,indent=2,exist=(PerEARFCNParamsIncluded==0),pos=none
    RxLevMinEUTRAOffsetCommon, bit,count=3,indent=2,exist=(RxLevMinEUTRAOffsetCommonIncl==1),pos=none
    MaxReselectionTimerIncluded, bit,count=1,indent=2,pos=none
    MaxReselectionTimer, bit,count=4,indent=2,exist=(MaxReselectionTimerIncluded==1),pos=none
    SearchBackOffTimerIncluded, bit,count=1,indent=2,pos=none
    MinMeasurementBackoff, bit,count=4,indent=2,exist=(SearchBackOffTimerIncluded==1),pos=none
    MaxMeasurementBackoff, bit,count=4,indent=2,exist=(SearchBackOffTimerIncluded==1),pos=none
    PLMNIDIncluded, bit,count=1,indent=2,pos=none
    NumEUTRAFrequencies, bit,count=3,indent=2,pos=none
    EUTRAFrequencies, record, type=OMP EUTRAFrequencies Rec, size=NumEUTRAFrequencies, maxsize=7, exist=(NumEUTRAFrequencies>0)
    Reserved0, bit,count=-8,indent=2,pos=none
End

Begin Record, OMP EUTRAFrequencies Rec, BitPack, OTTSName = COMPEUTRAFrequenciesRec
    EARFCN, bit,count=16,indent=2,pos=none
    EARFCNPriority, bit,count=3,indent=2,exist=(..\PriorityIncluded==1),pos=none
    ThreshX, bit,count=5,indent=2,pos=none
    RxLevMinEUTRA, bit,count=7,indent=2,exist=(..\PerEARFCNParamsIncluded==1),pos=none
    PEMax, bit,count=6,indent=2,exist=(..\PerEARFCNParamsIncluded==1),pos=none
    RxLevMinEUTRAOffsetIncl, bit,count=1,indent=2,exist=(..\PerEARFCNParamsIncluded==1),pos=none
    RxLevMinEUTRAOffset, bit,count=3,indent=2,exist=(RxLevMinEUTRAOffsetIncl==1),pos=none
    MeasurementBandwidth, bit,count=3,indent=2,pos=none
    PLMNSameAsPreviousChannel, bit,count=1,indent=2,exist=(..\PLMNIDIncluded==1),pos=none
    NumPLMNIDs, bit,count=3,indent=2,exist=(..\PLMNIDIncluded == 1 && PLMNSameAsPreviousChannel==0),pos=none
    PLMNID, array,type=bit,count=24,size=(NumPLMNIDs + 1),maxsize=8,indent=2,exist=(..\PLMNIDIncluded == 1 && PLMNSameAsPreviousChannel==0),pos=none
End

Begin Message, OMP OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgOmpConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=OMP Attribute Rec, maxsize=2, size=end
End

Begin Record, OMP Attribute Rec, BitPack, OTTSName = CMsgOmpAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 2, base = enum:OMP AttributeID Enum
    AttriRec, record, type=OMP AttributeValue Rec, maxsize=1,size=1,ConsumeBytes = (Length - 1)
End

Begin Record, OMP AttributeValue Rec, BitPack, OTTSName=CMsgOmpAttrValueRec
    AttributeValue, array, type=uint8, maxsize=4, size=(..\Length-1), indent = 2
End

Begin Message, OMP OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgOmpConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=OMP Attribute Rec, maxsize=2, size=end
End

Begin Message, DO DSA Msg Rec SMP Rsp, BitPack, OTTSName=CMsgSmpSig
    SmpMsg, record, type = SMP OTA Msg Rec, maxsize=1
End

Begin Record, SMP OTA Msg Rec, BitPack, OTTSName = CMsgSmp
    <<< MessageId, uint8, indent = 1, base=enum:SMP Msg Enum, NoExist=Null
    Msg, union, enum=<<< MessageId
End

Begin Message, SMP OTA Msg Rec Null Rsp, BitPack, OTTSName = CMsgNull
End

Begin Message, SMP OTA Msg Rec SessionClose Rsp, BitPack, OTTSName = CMsgSmpSessionClose
    CloseReason, uint8, indent=2, base=enum:SMP SessionCloseReason Enum
    MoreInfoLen, uint8, indent=2
    CfgErrorRec, record,type=ProtocolConfigError Rec,maxsize=1,consumebytes=MoreInfoLen,exist=((MoreInfoLen>0)) && ((CloseReason==3))
    NegErrorRec, record,type=ProtocolNegError Rec,maxsize=1,consumebytes=MoreInfoLen,exist=((MoreInfoLen>0)) && ((CloseReason==4))
End

Begin Record, ProtocolConfigError Rec, BitPack, OTTSName=CMsgSmpConfigErr
    TypeLength, bit,count=1,indent=2,pos=none
    Type1, bit,count=7,indent=2,pos=none
    Type2, uint8, indent = 2, exist=(TypeLength==1)
    SubType, bit,count=16,indent=2,pos=none
End

Begin Record, ProtocolNegError Rec, BitPack, OTTSName=CMsgSmpConfigNegErr
    TypeLength, bit,count=1,indent=2,pos=none
    Type1, bit,count=7,indent=2,pos=none
    Type2, uint8, indent = 2, exist=(TypeLength==1)
    SubType, bit,count=16,indent=2,pos=none
    NumAttributeRecords, uint8, indent = 2
    OffendingAttributeRecord, record, type=SMP Attribute Rec, size=NumAttributeRecords, maxsize=256
    Reserved, bit,count=-8,pos=none
End

Begin Record, SMP Attribute Rec, BitPack, OTTSName = CMsgSmpAttributeRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 1, base = enum:SMP AttributeID Enum
    Rec, record, type=SMP TSMPClose Rec, maxsize=1, consumeBytes=(Length-1)
End

Begin Record, SMP TSMPClose Rec, BitPack, OTTSName=CMsgSmpTSmpClose
    AttributeValue, array, type = uint16,Byteorder = motorola, maxsize=10, size=end, indent = 2
End

Begin Message, SMP OTA Msg Rec KeepAliveRequest Rsp, BitPack, OTTSName = CMsgSmpKeepAliveReq
    TrasactionID, uint8, indent = 2
End

Begin Message, SMP OTA Msg Rec KeepAliveResponse Rsp, BitPack, OTTSName = CMsgSmpKeepAliveRsp
    TrasactionID, uint8, indent = 2
End

Begin Message, SMP OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgSmpConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=SMP Attribute Rec, maxsize=10, size=end
End

Begin Message, SMP OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgSmpConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=SMP Attribute Rec, maxsize=10, size=end
End

Begin Message, DO DSA Msg Rec AMP Rsp, BitPack, OTTSName=CMsgAmpSig
    AmpMsg, record, type = AMP OTA Msg Rec, maxsize=1
End

Begin Record, AMP OTA Msg Rec, BitPack, OTTSName = CMsgAmp
    <<< MessageId, uint8, indent = 1, base=enum:AMP Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, AMP OTA Msg Rec UATIRequest Rsp, BitPack, OTTSName = CMsgAmpUATIReq
    TransactionID, uint8, indent=2
End

Begin Message, AMP OTA Msg Rec UATIAssignment Rsp, BitPack, OTTSName = CMsgAmpUATIAssign
    MessageSequence, uint8, indent=2
    Reserved1, bit,count=7,indent=2,pos=none
    SubnetIncluded, bit,count=1,indent=2,pos=none
    UATISubnetMask, uint8,indent=2,exist=(SubnetIncluded==1)
    UATI104, array,type=uint8,size=13,maxsize=13,indent=2,exist=(SubnetIncluded==1)
    UATIColorCode, uint8, indent=2
    UATI024, array, type=uint8, size=3, maxsize=3, indent=2
    UpperOldUATILength, bit,count=4,indent=2,pos=none
    Reserved2, bit,count=4,indent=2,pos=none
End

Begin Message, AMP OTA Msg Rec UATIComplete Rsp, BitPack, OTTSName = CMsgAmpUATIComplete
    MessageSequence, uint8, indent=2
    Reserved, bit,count=4,indent=2,pos=none
    UpperOldUATILength, bit,count=4,indent=2,pos=none
    UpperOldUATI, array, type=uint8, size=UpperOldUATILength, maxsize=16
End

Begin Message, AMP OTA Msg Rec HardwareIDRequest Rsp, BitPack, OTTSName = CMsgAmpHardWareIDReq
    TransactionID, uint8, indent=2
End

Begin Message, AMP OTA Msg Rec HardwareIDResponse Rsp, BitPack, OTTSName = CMsgAmpHardWareIDRsp
    TransactionID, uint8, indent=2
    HardwareIDType, bit,count=24,indent=2,pos=none
    HardwareIDLength, uint8, indent=2
    HardwareIDValue, array, type=uint8, size=HardwareIDLength, maxsize=256, indent=2
End

Begin Message, AMP OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgAmpConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=AMP ReqAttribute Rec, maxsize=10, size=end
End

Begin Record, AMP ReqAttribute Rec, BitPack, OTTSName = CMsgAmpAttrReqRec
    Length, uint8, indent=2
    AttributeID, uint8,indent=1,base=enum:AMP AttributeID Enum,exist=(Length>0)
    Rec, union,enum=AttributeID,consumebytes=(Length-1),exist=(Length>0)
End

Begin Message, AMP ReqAttribute Rec Null Rsp, BitPack, OTTSName=CMsgAmpAttrNull
End

Begin Message, AMP ReqAttribute Rec SupportSecondaryColorCodes Rsp, BitPack, OTTSName=CMsgAmpSuppSecColorCodes
    AttributeValue, array, type=uint8, maxsize=10, size=end
End

Begin Message, AMP ReqAttribute Rec ReducedSubnetMaskOffset Rsp, BitPack, OTTSName=CMsgAmpReducedSubnetMaskOff
    AttributeValue, array, type=uint8, maxsize=10, size=end
End

Begin Message, AMP ReqAttribute Rec SupportGAUPMaxNoMonitorDist Rsp, BitPack, OTTSName=CMsgAmpSupportedGAUPMaxNoMonitorDist
    AttributeValue, array, type=uint8, maxsize=10, size=end
End

Begin Message, AMP ReqAttribute Rec HardwareSeparableFromSession Rsp, BitPack, OTTSName=CMsgAmpHwSeparableFromSession
    AttributeValue, array, type=uint8, maxsize=10, size=end
End

Begin Message, AMP ReqAttribute Rec MaxNoMonitorDistance Rsp, BitPack, OTTSName=CMsgAmpMaxNoMonitorDistance
    AttributeValue, array, type=uint16,Byteorder = motorola, maxsize=10, size=end
End

Begin Message, AMP OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgAmpConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=AMP RspAttribute Rec, maxsize=10, size=end
End

Begin Record, AMP RspAttribute Rec, BitPack, OTTSName = CMsgAmpAttrRspRec
    Length, uint8, indent=2
    AttributeID, uint8, indent = 1, base = enum:AMP AttributeID Enum
    Value8bit, uint8, exist=(AttributeID!=0xff), indent = 2
    Value16bit, uint16, Byteorder = motorola,exist=(AttributeID==0xff), indent=2
End

Begin Message, AMP OTA Msg Rec AttributeUpdateRequest Rsp, BitPack, OTTSName = CMsgAmpAttrUpReq
    TransactionID, uint8, indent=2
    AttributeRec, record, type=AMP ReqAttribute Rec, size=end, maxsize=10
End

Begin Message, AMP OTA Msg Rec AttributeUpdateAccept Rsp, BitPack, OTTSName = CMsgAmpAttrUpAcc
    TransactionID, uint8, indent=2
End

Begin Message, AMP OTA Msg Rec AttributeUpdateReject Rsp, BitPack, OTTSName = CMsgAmpAttrUpRej
    TransactionID, uint8, indent=2
End

Begin Message, DO DSA Msg Rec SCP Rsp, BitPack, OTTSName=CMsgScpSig
    ScpMsg, record, type = SCP OTA Msg Rec, maxsize=1
End

Begin Record, SCP OTA Msg Rec, BitPack, OTTSName = CMsgScp
    <<< MessageId, uint8, indent = 1, base=enum:SCP Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, SCP OTA Msg Rec ConfigurationComplete Rsp, BitPack, OTTSName=CMsgScpConfigComplete
    TransactionID, uint8, indent=2
    SessionConfigurationToken, bit,count=16,indent=2,exist=(GBL_DOCHTYPE!=3),pos=none
End

Begin Message, SCP OTA Msg Rec ConfigurationStart Rsp, BitPack, OTTSName=CMsgScpConfigStart
End

Begin Message, SCP OTA Msg Rec SoftConfigurationComplete Rsp, BitPack, OTTSName=CMsgScpSoftConfigComplete
    TransactionID, uint8, indent=2
    PersonalityIndexStore, bit,count=4,indent=2,pos=none
    Continue, bit,count=1,indent=2,pos=none
    Commit, bit,count=1,indent=2,exist=(Continue==0),pos=none
    SessionConfigurationToken, bit,count=16,indent=2,exist=(Continue==0),pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, SCP OTA Msg Rec LockConfiguration Rsp, BitPack, OTTSName=CMsgScpLockConfig
    TransactionID, uint8, indent=2
End

Begin Message, SCP OTA Msg Rec LockConfigurationAck Rsp, BitPack, OTTSName=CMsgScpLockConfigAck
    TransactionID, uint8, indent=2
End

Begin Message, SCP OTA Msg Rec UnLockConfiguration Rsp, BitPack, OTTSName=CMsgScpUnLockConfig
    TransactionID, uint8, indent=2
End

Begin Message, SCP OTA Msg Rec UnLockConfigurationAck Rsp, BitPack, OTTSName=CMsgScpUnLockConfigAck
    TransactionID, uint8, indent=2
End

Begin Message, SCP OTA Msg Rec DeletePersonality Rsp, BitPack, OTTSName=CMsgScpDelPersonality
    TransactionID, uint8, indent=2
    PersonalityCount, bit,count=4,indent=2,pos=none
    PersonalityIndex, array,type=bit,count=4,size=PersonalityCount,maxsize=16,indent=2,pos=none
    Reserved, bit,count=-8,indent=2,pos=none
End

Begin Message, SCP OTA Msg Rec DeletePersonalityAck Rsp, BitPack, OTTSName=CMsgScpDelPersonalityAck
    TransactionID, uint8, indent=2
End

Begin Message, SCP OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgScpConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=SCP ReqAttribute Rec, maxsize=20, size=end
End

Begin Record, SCP ReqAttribute Rec, BitPack, OTTSName = CMsgScpAttrReqRec
    Length, uint8, indent=2
    AttributeID, uint16,byteorder=motorola,indent=2,exist=(Length>0)
    AttributeValue, array,type=uint16,byteorder=motorola,size=(Length-2)/2,maxsize=4,exist=((Length>0)) && ((AttributeID < 0x1000))
    PriorSession, record,type=SCP PriorSession Rec,size=end,maxsize=4,consumebytes=(Length - 1),exist=((Length>0)) && ((AttributeID == 0x1000))
    ATSupportedApplicationSubtypes, record,type=SCP ATSupAppSubType Rec,size=end,maxsize=4,consumebytes=(Length - 1),exist=((Length>0)) && ((AttributeID == 0x1001))
End

Begin Record, SCP PriorSession Rec, BitPack, OTTSName=CMsgScpPriorSessionRec
    ValueID, uint8, indent=2
    Restore, bit,count=1,indent=2,pos=none
    Reserved, bit,count=7,indent=2,pos=none
    UATI, array,type=uint8,size=16,maxsize=16,indent=2,exist=(Restore == 1)
    SecurityPacketLength, uint8,indent=2,exist=(Restore == 1)
    SecurityPacket, array,type=uint8,size=SecurityPacketLength,maxsize=10,indent=2,exist=(Restore == 1)
End

Begin Record, SCP ATSupAppSubType Rec, BitPack, OTTSName=CMsgScpSupAppSupTypeRec
    ValueID, uint8, indent=2
    NumAppSubTypes, uint8, indent=2
    ApplicationSubtype, array, type=uint16, Byteorder = motorola,size=NumAppSubTypes, maxsize=10, indent=2
End

Begin Message, SCP OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgScpConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=SCP RspAttribute Rec, maxsize=20, size=end
End

Begin Record, SCP RspAttribute Rec, BitPack, OTTSName = CMsgScpAttrRspRec
    Length, uint8, indent=2
    AttributeID, uint16, Byteorder = motorola,indent = 2
    AttributeValue, uint16,byteorder=motorola,indent=2,exist=(AttributeID < 0x1000)
    ValueID, uint8,indent=2,exist=(AttributeID >= 0x1000)
End

Begin Message, SCP OTA Msg Rec AttributeUpdateRequest Rsp, BitPack, OTTSName=CMsgScpAttrUpReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=SCP ReqAttribute Rec, maxsize=10, size=end
End

Begin Message, SCP OTA Msg Rec AttributeUpdateAccept Rsp, BitPack, OTTSName = CMsgScpAttrUpAcc
    TransactionID, uint8, indent=2
End

Begin Message, SCP OTA Msg Rec AttributeUpdateReject Rsp, BitPack, OTTSName = CMsgScpAttrUpRej
    TransactionID, uint8, indent=2
End

Begin Message, DO DSA Msg Rec Stream Rsp, BitPack, OTTSName=CMsgStreamSig
    Msg, record, type = DSP OTA Msg Rec, maxsize=1
End

Begin Record, DSP OTA Msg Rec, BitPack, OTTSName = CMsgDsp
    <<< MessageId, uint8, indent = 1, base=enum:DSP Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, DSP OTA Msg Rec NullMsg Rsp, BitPack, OTTSName = CMsgDSpNullMsg
End

Begin Message, DSP OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgDoCfgReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=DSP ReqAttribute Rec, maxsize=8, size=end
End

Begin Record, DSP ReqAttribute Rec, BitPack, OTTSName = CMsgDspReqAttributeRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 1, base = enum:DSP AttributeID Enum
    Rec, union, enum = AttributeID, ConsumeBytes = (Length - 1)
End

Begin Message, DSP ReqAttribute Rec StreamConfiguration Rsp, BitPack, OTTSName=CMsgDspStrCfg
    AttrRec, record, type=StreamConfiguration Attr Rec, maxsize=4,size=end
End

Begin Record, StreamConfiguration Attr Rec, BitPack, OTTSName=CMsgStrCfgRec
    ValueID, uint8, indent = 2
    Stream0Application, bit,count=16,indent=2,base=enum:StreamApplication Enum,pos=none
    Stream1Application, bit,count=16,indent=2,base=enum:StreamApplication Enum,pos=none
    Stream2Application, bit,count=16,indent=2,base=enum:StreamApplication Enum,pos=none
    Stream3Application, bit,count=16,indent=2,base=enum:StreamApplication Enum,pos=none
End

Begin Message, DSP OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgDoCfgRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=DSP RspAttribute Rec, maxsize=8, size=end
End

Begin Record, DSP RspAttribute Rec, BitPack, OTTSName = CMsgDspRspAttributeRec
    Length, uint8, indent = 2
    AttributeID, uint8,indent=1,base=enum:DSP AttributeID Enum,exist=(Length>0)
    ValueID, uint8,indent=2,exist=(Length>0)
End

Begin Message, DO DSA Msg Rec Stream0 Rsp, BitPack, OTTSName=CMsgStream0Sig
    Msg, record, type = DSA OTA Msg Rec, maxsize=1
End

Begin Record, DSA OTA Msg Rec, BitPack, OTTSName = CMsgDsa
    <<< MessageId, uint8, indent = 1, base=enum:DSA Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, DSA OTA Msg Rec Reset Rsp, BitPack, OTTSName = CMsgDsaReset
    MessageSequence, uint8, indent = 2
End

Begin Message, DSA OTA Msg Rec ResetAck Rsp, BitPack, OTTSName = CMsgDsaResetAck
    MessageSequence, uint8, indent = 2
End

Begin Message, DO DSA Msg Rec Stream1 Rsp, BitPack, OTTSName=CMsgStream1Sig
    DpaANMsg, record, type = DPA OTA Msg Rec, maxsize=1, exist=(..\SubType==1)
    DpaSNMsg, record, type = DPA OTA Msg Rec, maxsize=1, exist=(..\SubType==2)
    MfpaANMsg, record, type = MFPA OTA Msg Rec, maxsize=1, exist=(..\SubType==4)
    MfpaSNMsg, record, type = MFPA OTA Msg Rec, maxsize=1, exist=(..\SubType==5)
    EmpaANMsg, record, type = EMPA OTA Msg Rec, maxsize=1, exist=(..\SubType==8)
    EmpaSNMsg, record, type = EMPA OTA Msg Rec, maxsize=1, exist=(..\SubType==9)
    TapMsg, record, type = TAP OTA Msg Rec, maxsize=1, exist=(..\SubType==3)
    EtapMsg, record, type = ETAP OTA Msg Rec, maxsize=1, exist=(..\SubType==10)
End

Begin Record, DPA OTA Msg Rec, BitPack, OTTSName = CMsgDpa
    <<< MessageId, uint8, indent = 1, base=enum:DPA Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, DPA OTA Msg Rec Reset Rsp, BitPack, OTTSName = CMsgDpaReset
End

Begin Message, DPA OTA Msg Rec ResetAck Rsp, BitPack, OTTSName = CMsgDpaResetAck
End

Begin Message, DPA OTA Msg Rec Nak Rsp, BitPack, OTTSName = CMsgDpaNak
    NakRequests, uint8, indent = 2
    Rec, record, type=DPA Nak Rec, size=NakRequests, maxsize=256
End

Begin Record, DPA Nak Rec, BitPack, OTTSName = CMsgDpaNakRec
    Reserved, bit,count=2,indent=2,pos=none
    FirstErased, bit,count=22,indent=2,pos=none
    WindowLen, bit,count=16,indent=2,pos=none
End

Begin Message, DPA OTA Msg Rec LocationRequest Rsp, BitPack, OTTSName = CMsgDpaLocReq
End

Begin Message, DPA OTA Msg Rec LocationNotification Rsp, BitPack, OTTSName = CMsgDpaLocNot
    LocationType, uint8, indent = 2
    LocationLength, uint8,indent=2,exist=(LocationType==1)
    LocationValue, record,type=DPA LocationType1 Rec,maxsize=1,consumebytes=LocationLength,exist=(LocationType==1)
End

Begin Record, DPA LocationType1 Rec, BitPack, OTTSName=CMsgDpaLocType1
    SID, bit,count=15,indent=2,pos=none
    Reserved, bit,count=1,indent=2,pos=none
    NID, bit,count=16,indent=2,pos=none
    PACKET_ZONE_ID, uint8, indent = 2
End

Begin Message, DPA OTA Msg Rec LocationAssignment Rsp, BitPack, OTTSName = CMsgDpaLocAssign
    TransactionID, uint8, indent = 2
    LocationType, uint8, indent = 2, base = enum:DPA LocationType Enum
    LocationLength, uint8,indent=2,exist=(LocationType==1)
    LocationValue, record,type=DPA LocationType1 Rec,maxsize=1,consumebytes=LocationLength,exist=(LocationType==1)
End

Begin Message, DPA OTA Msg Rec LocationComplete Rsp, BitPack, OTTSName = CMsgDpaLocComp
    TransactionID, uint8, indent = 2
End

Begin Message, DPA OTA Msg Rec XonRequest Rsp, BitPack, OTTSName = CMsgDpaXonReq
End

Begin Message, DPA OTA Msg Rec XonResponse Rsp, BitPack, OTTSName = CMsgDpaXonRsp
End

Begin Message, DPA OTA Msg Rec XoffRequest Rsp, BitPack, OTTSName = CMsgDpaXoffReq
End

Begin Message, DPA OTA Msg Rec XoffResponse Rsp, BitPack, OTTSName = CMsgDpaXoffRsp
End

Begin Message, DPA OTA Msg Rec DataReady Rsp, BitPack, OTTSName = CMsgDpaDataRdy
    TransactionID, uint8, indent = 2
End

Begin Message, DPA OTA Msg Rec DataReadyAck Rsp, BitPack, OTTSName = CMsgDpaDataRdyAck
    TransactionID, uint8, indent = 2
End

Begin Message, DPA OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgDpaConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=DPA Attribute Rec, maxsize=8, size=end
End

Begin Record, DPA Attribute Rec, BitPack, OTTSName = CMsgDpaAttributeRec
    Length, uint8, indent = 2
    AttributeID, uint8,indent=1,base=enum:DPA AttributeID Enum,exist=(Length>0)
    Rec, record,type=DPA  RANHandoff Rec,maxsize=1,consumebytes=(Length-1),exist=(Length>0)
End

Begin Record, DPA  RANHandoff Rec, BitPack, OTTSName=CMsgDpaRanHandoff
    AttributeValue, array, type=uint8, maxsize=2, size=(..\Length-1), indent = 2
End

Begin Message, DPA OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgDpaConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=DPA Attribute Rec, maxsize=8, size=end
End

Begin Record, MFPA OTA Msg Rec, BitPack, OTTSName = CMsgMfpa
    <<< MessageId, uint8, indent = 1, base=enum:MFPA Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, MFPA OTA Msg Rec ResetTxIndication Rsp, BitPack, OTTSName = CMsgMfpaResetTxInd
    RlpFlow, bit,count=5,indent=2,pos=none
    Reserved, bit,count=3,indent=2,pos=none
End

Begin Message, MFPA OTA Msg Rec ResetRxIndication Rsp, BitPack, OTTSName = CMsgMfpaResetRxInd
    RlpFlow, bit,count=5,indent=2,pos=none
    Reserved, bit,count=3,indent=2,pos=none
End

Begin Message, MFPA OTA Msg Rec Nak Rsp, BitPack, OTTSName = CMsgMfpaNak
    RlpFlow, bit,count=5,indent=2,pos=none
    Reserved1, bit,count=3,indent=2,pos=none
    SequenceLength, uint8, indent = 2
    NakRequests, uint8, indent = 2
    Rec, record, type=MFPA Nak Rec, size=NakRequests, maxsize=256
End

Begin Record, MFPA Nak Rec, BitPack, OTTSName = CMsgMfpaNakRec
    FirstErased, bit,count=..\SequenceLength,base=16,indent=2,pos=none
    WindowLen, bit,count=16,indent=2,pos=none
    Reserved2, bit,count=-8,pos=none
End

Begin Message, MFPA OTA Msg Rec LocationRequest Rsp, BitPack, OTTSName = CMsgMfpaLocReq
End

Begin Message, MFPA OTA Msg Rec LocationNotification Rsp, BitPack, OTTSName = CMsgMfpaLocNot
    LocationType, uint8, indent = 2
    LocationLength, uint8,indent=2,exist=(LocationType==1)
    LocationValue, record,type=DPA LocationType1 Rec,maxsize=1,consumebytes=LocationLength,exist=(LocationType==1)
End

Begin Message, MFPA OTA Msg Rec LocationAssignment Rsp, BitPack, OTTSName = CMsgMfpaLocAssign
    TransactionID, uint8, indent = 2
    LocationType, uint8, indent = 2, base = enum:DPA LocationType Enum
    LocationLength, uint8,indent=2,exist=(LocationType==1)
    LocationValue, record,type=DPA LocationType1 Rec,maxsize=1,consumebytes=LocationLength,exist=(LocationType==1)
End

Begin Message, MFPA OTA Msg Rec LocationComplete Rsp, BitPack, OTTSName = CMsgMfpaLocComp
    TransactionID, uint8, indent = 2
End

Begin Message, MFPA OTA Msg Rec XonRequest Rsp, BitPack, OTTSName = CMsgMfpaXonReq
End

Begin Message, MFPA OTA Msg Rec XonResponse Rsp, BitPack, OTTSName = CMsgMfpaXonRsp
End

Begin Message, MFPA OTA Msg Rec XoffRequest Rsp, BitPack, OTTSName = CMsgMfpaXoffReq
End

Begin Message, MFPA OTA Msg Rec XoffResponse Rsp, BitPack, OTTSName = CMsgMfpaXoffRsp
End

Begin Message, MFPA OTA Msg Rec DataReady Rsp, BitPack, OTTSName = CMsgMfpaDataRdy
    TransactionID, uint8, indent = 2
End

Begin Message, MFPA OTA Msg Rec DataReadyAck Rsp, BitPack, OTTSName = CMsgMfpaDataRdyAck
    TransactionID, uint8, indent = 2
End

Begin Message, MFPA OTA Msg Rec ResetTxIndicationAck Rsp, BitPack, OTTSName = CMsgMfpaResetRxIndAck
    RlpFlow, bit,count=5,indent=2,pos=none
    Reserved, bit,count=3,indent=2,pos=none
End

Begin Message, MFPA OTA Msg Rec ResetTxComplete Rsp, BitPack, OTTSName = CMsgMfpaResetTxComp
    RlpFlow, bit,count=5,indent=2,pos=none
    Reserved, bit,count=3,indent=2,pos=none
End

Begin Message, MFPA OTA Msg Rec ResetRxComplete Rsp, BitPack, OTTSName = CMsgMfpaResetRxComp
    RlpFlow, bit,count=5,indent=2,pos=none
    Reserved, bit,count=3,indent=2,pos=none
End

Begin Message, MFPA OTA Msg Rec StorageBLOBRequest Rsp, BitPack, OTTSName = CMsgMfpaStorageBlobReq
End

Begin Message, MFPA OTA Msg Rec StorageBLOBNotification Rsp, BitPack, OTTSName = CMsgMfpaStorageBlobNot
    StorageBLOBType, bit,count=16,indent=2,pos=none
    StorageBLOBLength, uint8, indent = 2
    StorageBLOB, array, type=uint8, size=StorageBLOBLength, maxsize=256, exist=(StorageBLOBLength!=0)
End

Begin Message, MFPA OTA Msg Rec StorageBLOBAssignment Rsp, BitPack, OTTSName = CMsgMfpaStorageBlobAssig
    TransactionID, uint8, indent = 2
    StorageBLOBType, bit,count=16,indent=2,pos=none
    StorageBLOBLength, uint8, indent = 2
    StorageBLOB, array, type=uint8, size=StorageBLOBLength, maxsize=256, exist=(StorageBLOBLength!=0)
End

Begin Message, MFPA OTA Msg Rec StorageBLOBComplete Rsp, BitPack, OTTSName = CMsgMfpaStorageBlobComp
    TransactionID, uint8, indent = 2
End

Begin Message, MFPA OTA Msg Rec DataOverSignaling Rsp, BitPack, OTTSName = CMsgMfpaDataOverSig
    AckRequired, bit,count=1,indent=2,pos=none
    Reset, bit,count=1,indent=2,pos=none
    MessageSequence, bit,count=6,indent=2,pos=none
    HigherLayerPacket, array, type=uint8, size=end, maxsize=2000
End

Begin Message, MFPA OTA Msg Rec DataOverSignalingAck Rsp, BitPack, OTTSName = CMsgMfpaDataOverSigAck
    Reserved, bit,count=2,indent=2,pos=none
    AckSequence, bit,count=6,indent=2,pos=none
End

Begin Message, MFPA OTA Msg Rec ReservationOnRequest Rsp, BitPack, OTTSName = CMsgMfpaReservationOnReq
    TransactionID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationRec, record, type=MFPA Reservation Rec, size=ReservationCount, maxsize=256, exist=(ReservationCount!=0)
    Reserved, bit,count=-8,pos=none
End

Begin Record, MFPA Reservation Rec, BitPack, OTTSName = CMsgMfpaResRec
    Link, bit,count=1,indent=2,pos=none
    ReservationLabel, uint8, indent = 2
End

Begin Message, MFPA OTA Msg Rec ReservationOffRequest Rsp, BitPack, OTTSName = CMsgMfpaReservationOffReq
    TransactionID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationRec, record, type=MFPA Reservation Rec, size=ReservationCount, maxsize=256, exist=(ReservationCount!=0)
    Reserved, bit,count=-8,pos=none
End

Begin Message, MFPA OTA Msg Rec ReservationAccept Rsp, BitPack, OTTSName = CMsgMfpaReservationAccept
    TransactionID, uint8, indent = 2
End

Begin Message, MFPA OTA Msg Rec ReservationReject Rsp, BitPack, OTTSName = CMsgMfpaReservationReject
    TransactionID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationRec, record, type=MFPA Reservation Rec, size=ReservationCount, maxsize=256, exist=(ReservationCount!=0)
    Reserved, bit,count=-8,pos=none
End

Begin Message, MFPA OTA Msg Rec RevReservationOn Rsp, BitPack, OTTSName = CMsgMfpaRevReservationOn
    TransactionID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationLabel, array, type=uint8, size=ReservationCount, maxsize=256, exist=(ReservationCount!=0)
End

Begin Message, MFPA OTA Msg Rec RevReservationOff Rsp, BitPack, OTTSName = CMsgMfpaRevReservationOff
    TransactionID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationLabel, array, type=uint8, size=ReservationCount, maxsize=256, exist=(ReservationCount!=0)
End

Begin Message, MFPA OTA Msg Rec FwdReservationOff Rsp, BitPack, OTTSName = CMsgMfpaFwdReservationOff
    TransactionID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationLabel, array, type=uint8, size=ReservationCount, maxsize=256, exist=(ReservationCount!=0)
End

Begin Message, MFPA OTA Msg Rec FwdReservationOn Rsp, BitPack, OTTSName = CMsgMfpaFwdReservationOn
    TransactionID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationLabel, array, type=uint8, size=ReservationCount, maxsize=256, exist=(ReservationCount!=0)
End

Begin Message, MFPA OTA Msg Rec FwdReservationAck Rsp, BitPack, OTTSName = CMsgMfpaFwdReservationAck
    TransactionID, uint8, indent = 2
End

Begin Message, MFPA OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgMfpaConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=MFPA ReqAttribute Rec, maxsize=40, size=end
End

Begin Record, MFPA ReqAttribute Rec, BitPack, OTTSName = CMsgMfpaReqAttributeRec
    Length, uint8, indent = 2
    AttributeID, uint16,byteorder=motorola,indent=2,exist=(Length>0)
    SupportedHLProtocols, record,type=MFPA SupportedHLProtoRec,maxsize=1,size=1,consumebytes=(Length-2),exist=((AttributeID==0)) && ((Length>0))
    ATSupportedQoSProfile, record,type=MFPA SupportedQoSProfileRec,maxsize=1,size=1,consumebytes=(Length-2),exist=((AttributeID==2)) && ((Length>0))
    ANSupportedQoSProfile, record,type=MFPA SupportedQoSProfileRec,maxsize=1,size=1,consumebytes=(Length-2),exist=((AttributeID==3)) && ((Length>0))
    MaxRLPFlows, record,type=MFPA MaxRLPFlowRec,maxsize=4,size=(Length-2)/5,consumebytes=(Length-2),exist=((AttributeID==4)) && ((Length>0))
    MaxReservations, record,type=MFPA MaxReservationsRec,maxsize=4,size=(Length-2)/5,consumebytes=(Length-2),exist=((AttributeID==5)) && ((Length>0))
    FlowNNIdentification, record,type=MFPA FlowNNIdentificationRec,maxsize=1,size=1,consumebytes=(Length-2),exist=((((AttributeID&0xff00)==0x0100)||((AttributeID&0xff00)==0x0200))) && ((Length>0))
    FlowNNTimers, record,type=MFPA FlowNNTimersRec,maxsize=4,size=(Length-2)/5,consumebytes=(Length-2),exist=((((AttributeID&0xff00)==0x0300)||((AttributeID&0xff00)==0x0400))) && ((Length>0))
    FlowNNReservations, record,type=MFPA FlowNNReservationRec,maxsize=1,size=1,consumebytes=(Length-2),exist=((((AttributeID&0xff00)==0x0500)||((AttributeID&0xff00)==0x0600))) && ((Length>0))
    ReservationKKQoSRequest, record,type=MFPA RsvKKQoSRec,maxsize=1,size=1,consumebytes=(Length-2),exist=((((AttributeID&0xff00)==0x0700)||((AttributeID&0xff00)==0x0800))) && ((Length>0))
    ReservationKKQoSResponse, record,type=MFPA RsvKKQoSRec,maxsize=1,size=1,consumebytes=(Length-2),exist=((((AttributeID&0xff00)==0x0900)||((AttributeID&0xff00)==0x0a00))) && ((Length>0))
    Value, array,type=uint8,size=(Length-2),maxsize=4,exist=(((AttributeID&0xff00)>0xf500)&&((AttributeID&0xff00)!=0xf700)) && ((Length>0))
    TxAbortTmRevValue, array,type=uint16,byteorder=motorola,size=(Length-2)/2,maxsize=4,exist=(((AttributeID&0xff00)==0xf700)) && ((Length>0))
End

Begin Record, MFPA SupportedHLProtoRec, BitPack, OTTSName=CMsgMfpaSuppHLProAttrRec
    ValueID, uint8, indent=2
    ProtocolCount, uint8, indent=2
    ProtocolIdentified, array, type=uint8, size=ProtocolCount, maxsize=4, indent=2
End

Begin Record, MFPA SupportedQoSProfileRec, BitPack, OTTSName=CMsgMfpaSuppQoSProfileAttrRec
    ValueID, uint8, indent=2
    QoSProfileCount, uint8, indent=2
    QoSProfile, record, type=MFPA Support QoSProfileRec, size=QoSProfileCount, maxsize=10
End

Begin Record, MFPA Support QoSProfileRec, BitPack, OTTSName=CMsgMfpaSupQoSProfileRec
    ProfileType, uint8, indent = 2
    ProfileLength, uint8, indent = 2
    ProfileValue, array, type=uint8,size=ProfileLength, maxsize=256, indent=2
End

Begin Record, MFPA MaxRLPFlowRec, BitPack, OTTSName=CMsgMfpaMaxRlpFlowAttrRec
    ValueID, uint8, indent = 2
    MaxNumRLPFlowsFwd, uint8, indent = 2
    MaxNumRlpFlowsRev, uint8, indent = 2
    MaxActivatedRLPFlowsFwd, uint8, indent = 2
    MaxActivatedRLPFlowsRev, uint8, indent = 2
End

Begin Record, MFPA MaxReservationsRec, BitPack, OTTSName=CMsgMfpaMaxReservationsAttrRec
    ValueID, uint8, indent = 2
    MaxNumReservationsFwd, uint8, indent = 2
    MaxNumReservationsRev, uint8, indent = 2
    MaxNumOpenReservationsFwd, uint8, indent = 2
    MaxNumOpenReservationsRev, uint8, indent = 2
End

Begin Record, MFPA FlowNNIdentificationRec, BitPack, OTTSName=CMsgMfpaFlowNNIdAttrRec
    ValueID, uint8, indent = 2
    Active, uint8, indent = 2
    SequenceLength, uint8,indent=2,exist=(Active==1)
    RLPIDLength, uint8,indent=2,exist=(Active==1)
    RLPID, array,type=bit,count=1,size=RLPIDLength,maxsize=8,indent=2,exist=(Active==1),pos=none
    reserved, bit,count=-8,exist=(Active==1),pos=none
End

Begin Record, MFPA FlowNNTimersRec, BitPack, OTTSName=CMsgMfpaFlowNNTmAttrRec
    ValueID, uint8, indent = 2
    AbortTimer, uint16, Byteorder = motorola,indent = 2
    FlushTimer, uint16, Byteorder = motorola,indent = 2
End

Begin Record, MFPA FlowNNReservationRec, BitPack, OTTSName=CMsgMfpaFlowNNRsvAttrRec
    ValueID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationLabel, array, type=uint8, size=ReservationCount, maxsize=10,indent = 2
End

Begin Record, MFPA RsvKKQoSRec, BitPack, OTTSName=CMsgMfpaRsvNNQoSRec
    ValueID, uint8, indent = 2
    QoSRec, record, type=MFPA QoSProfileRec, size=1, maxsize=1
End

Begin Record, MFPA QoSProfileRec, BitPack, OTTSName=CMsgMfpaQoSProfileRec
    ProfileType, uint8, indent = 2
    ProfileLength, uint16, indent = 2, Byteorder = motorola
    ProfileValue, array, type=uint8,size=ProfileLength, maxsize=256, indent=2
End

Begin Message, MFPA OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgMfpaConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=MFPA RspAttribute Rec, maxsize=40, size=end
End

Begin Record, MFPA RspAttribute Rec, BitPack, OTTSName = CMsgMfpaRspAttributeRec
    Length, uint8, indent = 2
    AttributeID, uint16, indent = 2,Byteorder = motorola
    Value16bit, uint16, Byteorder = motorola,exist=((AttributeID&0xff00)==0xf700)
    Value, uint8, exist=((AttributeID&0xff00)!=0xf700)
End

Begin Message, MFPA OTA Msg Rec AttributeUpdateRequest Rsp, BitPack, OTTSName=CMsgMfpaAttrUpdateReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=MFPA ReqAttribute Rec, maxsize=20, size=end
End

Begin Message, MFPA OTA Msg Rec AttributeUpdateAccept Rsp, BitPack, OTTSName=CMsgMfpaAttrUpdateAcc
    TransactionID, uint8, indent = 2
End

Begin Message, MFPA OTA Msg Rec AttributeUpdateReject Rsp, BitPack, OTTSName=CMsgMfpaAttrUpdateRej
    TransactionID, uint8, indent = 2
End

Begin Record, EMPA OTA Msg Rec, BitPack, OTTSName = CMsgEmpa
    <<< MessageId, uint8, indent = 1, base=enum:EMPA Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, EMPA OTA Msg Rec ResetTxIndication Rsp, BitPack, OTTSName = CMsgEmpaResetTxInd
    RlpFlow, bit,count=5,indent=2,pos=none
    Reserved, bit,count=3,indent=2,pos=none
End

Begin Message, EMPA OTA Msg Rec ResetRxIndication Rsp, BitPack, OTTSName = CMsgEmpaResetRxInd
    RlpFlow, bit,count=5,indent=2,pos=none
    Reserved, bit,count=3,indent=2,pos=none
End

Begin Message, EMPA OTA Msg Rec Nak Rsp, BitPack, OTTSName = CMsgEmpaNak
    RlpFlow, bit,count=5,indent=2,pos=none
    Route, bit,count=1,indent=2,pos=none
    Reserved1, bit,count=2,indent=2,pos=none
    SequenceLength, uint8, indent = 2
    ReportCount, uint8, indent = 2
    Rec, record, type=EMPA Nak Rec, size=ReportCount, maxsize=256
    VR, bit,count=SequenceLength,base=16,pos=none
    Reserved2, bit,count=-8,pos=none
End

Begin Record, EMPA Nak Rec, BitPack, OTTSName = CMsgEmpaNakRec
    FirstErasedDataUnit, bit,count=..\SequenceLength,base=16,indent=2,pos=none
    WindowLen, bit,count=..\SequenceLength,base=16,indent=2,pos=none
End

Begin Message, EMPA OTA Msg Rec LocationRequest Rsp, BitPack, OTTSName = CMsgEmpaLocReq
End

Begin Message, EMPA OTA Msg Rec LocationNotification Rsp, BitPack, OTTSName = CMsgEmpaLocNot
    LocationType, uint8, indent = 2
    LocationLength, uint8,indent=2,exist=(LocationType==1)
    LocationValue, record,type=DPA LocationType1 Rec,maxsize=1,consumebytes=LocationLength,exist=(LocationType==1)
End

Begin Message, EMPA OTA Msg Rec LocationAssignment Rsp, BitPack, OTTSName = CMsgEmpaLocAssign
    TransactionID, uint8, indent = 2
    LocationType, uint8, indent = 2, base = enum:DPA LocationType Enum
    LocationLength, uint8,indent=2,exist=(LocationType==1)
    LocationValue, record,type=DPA LocationType1 Rec,maxsize=1,consumebytes=LocationLength,exist=(LocationType==1)
End

Begin Message, EMPA OTA Msg Rec LocationComplete Rsp, BitPack, OTTSName = CMsgEmpaLocComp
    TransactionID, uint8, indent = 2
End

Begin Message, EMPA OTA Msg Rec XonRequest Rsp, BitPack, OTTSName = CMsgEmpaXonReq
End

Begin Message, EMPA OTA Msg Rec XonResponse Rsp, BitPack, OTTSName = CMsgEmpaXonRsp
End

Begin Message, EMPA OTA Msg Rec XoffRequest Rsp, BitPack, OTTSName = CMsgEmpaXoffReq
End

Begin Message, EMPA OTA Msg Rec XoffResponse Rsp, BitPack, OTTSName = CMsgEmpaXoffRsp
End

Begin Message, EMPA OTA Msg Rec DataReady Rsp, BitPack, OTTSName = CMsgEmpaDataRdy
    TransactionID, uint8, indent = 2
End

Begin Message, EMPA OTA Msg Rec DataReadyAck Rsp, BitPack, OTTSName = CMsgEmpaDataRdyAck
    TransactionID, uint8, indent = 2
End

Begin Message, EMPA OTA Msg Rec ResetTxIndicationAck Rsp, BitPack, OTTSName = CMsgEmpaResetRxIndAck
    RlpFlow, bit,count=5,indent=2,pos=none
    Reserved, bit,count=3,indent=2,pos=none
End

Begin Message, EMPA OTA Msg Rec ResetTxComplete Rsp, BitPack, OTTSName = CMsgEmpaResetTxComp
    RlpFlow, bit,count=5,indent=2,pos=none
    Reserved, bit,count=3,indent=2,pos=none
End

Begin Message, EMPA OTA Msg Rec ResetRxComplete Rsp, BitPack, OTTSName = CMsgEmpaResetRxComp
    RlpFlow, bit,count=5,indent=2,pos=none
    Reserved, bit,count=3,indent=2,pos=none
End

Begin Message, EMPA OTA Msg Rec StorageBLOBRequest Rsp, BitPack, OTTSName = CMsgEmpaStorageBlobReq
End

Begin Message, EMPA OTA Msg Rec StorageBLOBNotification Rsp, BitPack, OTTSName = CMsgEmpaStorageBlobNot
    StorageBLOBType, bit,count=16,indent=2,pos=none
    StorageBLOBLength, uint8, indent = 2
    StorageBLOB, array, type=uint8, size=StorageBLOBLength, maxsize=256, exist=(StorageBLOBLength!=0)
End

Begin Message, EMPA OTA Msg Rec StorageBLOBAssignment Rsp, BitPack, OTTSName = CMsgEmpaStorageBlobAssig
    TransactionID, uint8, indent = 2
    StorageBLOBType, bit,count=16,indent=2,pos=none
    StorageBLOBLength, uint8, indent = 2
    StorageBLOB, array, type=uint8, size=StorageBLOBLength, maxsize=256, exist=(StorageBLOBLength!=0)
End

Begin Message, EMPA OTA Msg Rec StorageBLOBComplete Rsp, BitPack, OTTSName = CMsgEmpaStorageBlobComp
    TransactionID, uint8, indent = 2
End

Begin Message, EMPA OTA Msg Rec DataOverSignaling Rsp, BitPack, OTTSName = CMsgEmpaDataOverSig
    AckRequired, bit,count=1,indent=2,pos=none
    Reset, bit,count=1,indent=2,pos=none
    MessageSequence, bit,count=6,indent=2,pos=none
    HigherLayerPacket, array, type=uint8, size=end, maxsize=2000
End

Begin Message, EMPA OTA Msg Rec DataOverSignalingAck Rsp, BitPack, OTTSName = CMsgEmpaDataOverSigAck
    Reserved, bit,count=2,indent=2,pos=none
    AckSequence, bit,count=6,indent=2,pos=none
End

Begin Message, EMPA OTA Msg Rec ReservationOnRequest Rsp, BitPack, OTTSName = CMsgEmpaReservationOnReq
    TransactionID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationRec, record, type=EMPA Reservation Rec, size=ReservationCount, maxsize=256, exist=(ReservationCount!=0)
    Reserved, bit,count=-8,pos=none
End

Begin Record, EMPA Reservation Rec, BitPack, OTTSName = CMsgEmpaResRec
    Link, bit,count=1,indent=2,pos=none
    ReservationLabel, uint8, indent = 2
End

Begin Message, EMPA OTA Msg Rec ReservationOffRequest Rsp, BitPack, OTTSName = CMsgEmpaReservationOffReq
    TransactionID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationRec, record, type=EMPA Reservation Rec, size=ReservationCount, maxsize=256, exist=(ReservationCount!=0)
    Reserved, bit,count=-8,pos=none
End

Begin Message, EMPA OTA Msg Rec ReservationAccept Rsp, BitPack, OTTSName = CMsgEmpaReservationAccept
    TransactionID, uint8, indent = 2
End

Begin Message, EMPA OTA Msg Rec ReservationReject Rsp, BitPack, OTTSName = CMsgEmpaReservationReject
    TransactionID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationRec, record, type=EMPA Reservation Rec, size=ReservationCount, maxsize=256, exist=(ReservationCount!=0)
    Reserved, bit,count=-8,pos=none
End

Begin Message, EMPA OTA Msg Rec RevReservationOn Rsp, BitPack, OTTSName = CMsgEmpaRevReservationOn
    TransactionID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationLabel, array, type=uint8, size=ReservationCount, maxsize=256, exist=(ReservationCount!=0)
End

Begin Message, EMPA OTA Msg Rec RevReservationOff Rsp, BitPack, OTTSName = CMsgEmpaRevReservationOff
    TransactionID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationLabel, array, type=uint8, size=ReservationCount, maxsize=256, exist=(ReservationCount!=0)
End

Begin Message, EMPA OTA Msg Rec FwdReservationOff Rsp, BitPack, OTTSName = CMsgEmpaFwdReservationOff
    TransactionID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationLabel, array, type=uint8, size=ReservationCount, maxsize=256, exist=(ReservationCount!=0)
End

Begin Message, EMPA OTA Msg Rec FwdReservationOn Rsp, BitPack, OTTSName = CMsgEmpaFwdReservationOn
    TransactionID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationLabel, array, type=uint8, size=ReservationCount, maxsize=256, exist=(ReservationCount!=0)
End

Begin Message, EMPA OTA Msg Rec FwdReservationAck Rsp, BitPack, OTTSName = CMsgEmpaFwdReservationAck
    TransactionID, uint8, indent = 2
End

Begin Message, EMPA OTA Msg Rec ConfigurationRequest Rsp, BitPack, OTTSName=CMsgEmpaConfigReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=EMPA ReqAttribute Rec, maxsize=60, size=end
End

Begin Record, EMPA ReqAttribute Rec, BitPack, OTTSName = CMsgEmpaReqAttributeRec
    Length, uint8, indent = 2
    AttributeID, uint16, Byteorder = motorola,indent = 2
    SupportedHLProtocols, record, type=EMPA SupportedHLProtoRec, maxsize=1,size=1,ConsumeBytes=(Length-2),exist=(AttributeID==0)
    ATSupportedQoSProfile, record, type=EMPA SupportedQoSProfileRec, maxsize=1, size=1,ConsumeBytes=(Length-2),exist=(AttributeID==2)
    ANSupportedQoSProfile, record, type=EMPA SupportedQoSProfileRec, maxsize=1, size=1,ConsumeBytes=(Length-2),exist=(AttributeID==3)
    MaxRLPFlows, record, type=EMPA MaxRLPFlowRec, maxsize=4, size=(Length-2)/5,ConsumeBytes=(Length-2),exist=(AttributeID==4)
    MaxReservations, record, type=EMPA MaxReservationsRec, maxsize=4, size=(Length-2)/5,ConsumeBytes=(Length-2),exist=(AttributeID==5)
    FlowNNIdentification, record, type=EMPA FlowNNIdentificationRec, maxsize=1, size=1,ConsumeBytes=(Length-2),exist=(((AttributeID&0xff00)==0x0100)||((AttributeID&0xff00)==0x0200))
    FlowNNTimers, record, type=EMPA FlowNNTimersRec, maxsize=4, size=(Length-2)/5,ConsumeBytes=(Length-2),exist=(((AttributeID&0xff00)==0x0300)||((AttributeID&0xff00)==0x0400))
    FlowNNReservations, record, type=EMPA FlowNNReservationRec, maxsize=1, size=1,ConsumeBytes=(Length-2),exist=(((AttributeID&0xff00)==0x0500)||((AttributeID&0xff00)==0x0600))
    ReservationKKQoSRequest, record, type=EMPA RsvKKQoSRec, maxsize=1,size=1,ConsumeBytes=(Length-2),exist=(((AttributeID&0xff00)==0x0700)||((AttributeID&0xff00)==0x0800))
    ReservationKKQoSResponse, record, type=EMPA RsvKKQoSRec, maxsize=1,size=1,ConsumeBytes=(Length-2),exist=(((AttributeID&0xff00)==0x0900)||((AttributeID&0xff00)==0x0a00))
    FlowNNFwdFlowProtParameters, record, type=EMPA FwdFlowProtParmsRec, maxsize=1,size=1,ConsumeBytes=(Length-2),exist=((AttributeID&0xff00)==0x0b00)
    FlowNNRevFlowProtParameters, record, type=EMPA RevFlowProtParmsRec, maxsize=1,size=1,ConsumeBytes=(Length-2),exist=((AttributeID&0xff00)==0x0c00)
    FlowNNFwdRouteProtParameters, record, type=EMPA FwdRouteProtParmsRec, maxsize=1,size=1,ConsumeBytes=(Length-2),exist=((AttributeID&0xff00)==0x0d00)
    FlowNNRevRouteProtParameters, record, type=EMPA RevRouteProtParmsRec, maxsize=1,size=1,ConsumeBytes=(Length-2),exist=((AttributeID&0xff00)==0x0e00)
    ATSupportedROHCParameters, record, type=EMPA ROHC ProtParmsRec, maxsize=1,size=1,ConsumeBytes=(Length-2),exist=(AttributeID==0x0f04)
    Value, array,  type=uint8, size=(Length-2),maxsize=4,exist=(((AttributeID&0xff00)> 0x0e00)&&((AttributeID&0xff00)!=0xf700)&&(AttributeID!=0x0f04))
    TxAbortTmRevValue, array,  type=uint16,Byteorder = motorola, size=(Length-2)/2,, maxsize=4,exist=((AttributeID&0xff00)==0xf700)
End

Begin Record, EMPA SupportedHLProtoRec, BitPack, OTTSName=CMsgEmpaSuppHLProAttrRec
    ValueID, uint8, indent=2
    ProtocolCount, uint8, indent=2
    ProtocolIdentified, array, type=uint8, size=ProtocolCount, maxsize=4, indent=2
End

Begin Record, EMPA SupportedQoSProfileRec, BitPack, OTTSName=CMsgEmpaSuppQoSProfileAttrRec
    ValueID, uint8, indent=2
    QoSProfileCount, uint8, indent=2
    QoSProfile, record, type=MFPA Support QoSProfileRec, size=QoSProfileCount, maxsize=10
End

Begin Record, EMPA MaxRLPFlowRec, BitPack, OTTSName=CMsgEmpaMaxRlpFlowAttrRec
    ValueID, uint8, indent = 2
    MaxNumRLPFlowsFwd, uint8, indent = 2
    MaxNumRlpFlowsRev, uint8, indent = 2
    MaxActivatedRLPFlowsFwd, uint8, indent = 2
    MaxActivatedRLPFlowsRev, uint8, indent = 2
End

Begin Record, EMPA MaxReservationsRec, BitPack, OTTSName=CMsgEmpaMaxReservationsAttrRec
    ValueID, uint8, indent = 2
    MaxNumReservationsFwd, uint8, indent = 2
    MaxNumReservationsRev, uint8, indent = 2
    MaxNumOpenReservationsFwd, uint8, indent = 2
    MaxNumOpenReservationsRev, uint8, indent = 2
End

Begin Record, EMPA FlowNNIdentificationRec, BitPack, OTTSName=CMsgEmpaFlowNNIdAttrRec
    ValueID, uint8, indent = 2
    Active, uint8, indent = 2
    SequenceLength, uint8,indent=2,exist=(Active==1)
    RLPIDLength, uint8,indent=2,exist=(Active==1)
    RLPID, array,type=bit,count=1,size=RLPIDLength,maxsize=8,indent=2,exist=(Active==1),pos=none
    reserved, bit,count=-8,exist=(Active==1),pos=none
End

Begin Record, EMPA FlowNNTimersRec, BitPack, OTTSName=CMsgEmpaFlowNNTmAttrRec
    ValueID, uint8, indent = 2
    AbortTimer, uint16, Byteorder = motorola,indent = 2
    FlushTimer, uint16, Byteorder = motorola,indent = 2
End

Begin Record, EMPA FlowNNReservationRec, BitPack, OTTSName=CMsgEmpaFlowNNRsvAttrRec
    ValueID, uint8, indent = 2
    ReservationCount, uint8, indent = 2
    ReservationLabel, array, type=uint8, size=ReservationCount, maxsize=10,indent = 2
End

Begin Record, EMPA RsvKKQoSRec, BitPack, OTTSName=CMsgEmpaRsvNNQoSRec
    ValueID, uint8, indent = 2
    QoSRec, record, type=MFPA QoSProfileRec, size=1, maxsize=1
End

Begin Record, EMPA FwdFlowProtParmsRec, BitPack, OTTSName=CMsgEmpaFwdFlowProtParmsRec
    ValueID, uint8, indent = 2
    FlowProtParmsRec, record, type=EMPA FwdFlowProtParmsProfileRec, size=1, maxsize=1
End

Begin Record, EMPA FwdFlowProtParmsProfileRec, BitPack, OTTSName=CMsgEmpaFwdFlowProtParmsAttribRec
    ProtocolId, uint8, indent = 2, base=enum:FlowProtocolID Enum
    ProtocolParmeterLen, uint8, indent = 2
    ProtocolParameters, record,type=EMPA FwdRohcProtParmsRec,size=1,maxsize=1,exist=(ProtocolParmeterLen > 0)
End

Begin Record, EMPA FwdRohcProtParmsRec, BitPack, OTTSName=CMsgEmpaFwdRohcProtParmsAttribRec
    MaxCID, uint16,Byteorder = motorola, indent = 2
    LargeCIDs, bit,count=1,indent=2,pos=none
    FeedbackForIncluded, bit,count=1,indent=2,pos=none
    FeedbackFor, bit,count=5,indent=2,exist=(FeedbackForIncluded==1),pos=none
    MRRU, uint16,Byteorder = motorola, indent = 2
    ProfileCount, uint8,  indent = 2
    Profile, record, type=EMPA ROHCProfileRec, size=ProfileCount, maxsize=3
    reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, EMPA ROHCProfileRec, BitPack, OTTSName=CMsgEmpaROHCProfileAttribRec
    Profile, uint16, Byteorder = motorola, base = enum:ROHCProfile Enum, indent = 2
End

Begin Record, EMPA RevFlowProtParmsRec, BitPack, OTTSName=CMsgEmpaRevFlowProtParmsRec
    ValueID, uint8, indent = 2
    FlowProtParmsRec, record, type=EMPA RevFlowProtParmsProfileRec, size=1, maxsize=1
End

Begin Record, EMPA RevFlowProtParmsProfileRec, BitPack, OTTSName=CMsgEmpaRevFlowProtParmsAttribRec
    ProtocolId, uint8, indent = 2, base=enum:FlowProtocolID Enum
    ProtocolParmeterLen, uint8, indent = 2
    ProtocolParameters, record,type=EMPA RevRohcProtParmsRec,size=1,maxsize=1,exist=(ProtocolParmeterLen > 0)
End

Begin Record, EMPA RevRohcProtParmsRec, BitPack, OTTSName=CMsgEmpaRevRohcProtParmsAttribRec
    MaxCID, uint16,Byteorder = motorola, indent = 2
    LargeCIDs, bit,count=1,indent=2,pos=none
    FeedbackForIncluded, bit,count=1,indent=2,pos=none
    FeedbackFor, bit,count=5,indent=2,exist=(FeedbackForIncluded==1),pos=none
    MRRU, uint16,Byteorder = motorola, indent = 2
    TimerBasedCompression, bit,count=1,indent=2,pos=none
    ProfileCount, uint8,  indent = 2
    Profile, record, type=EMPA ROHCProfileRec, size=ProfileCount, maxsize=3
    reserved, bit,count=-8,indent=2,pos=none
End

Begin Record, EMPA FwdRouteProtParmsRec, BitPack, OTTSName=CMsgFwdEmpaRouteProtParmsRec
    ValueID, uint8, indent = 2
    RouteProtParmsRec, record, type=EMPA FwdRouteProtParmsProfileRec, size=1, maxsize=1
End

Begin Record, EMPA FwdRouteProtParmsProfileRec, BitPack, OTTSName=CMsgEmpaFwdRouteProtParmsAttribRec
    ProtocolId, uint8, indent = 2, base=enum:RouteProtocolID Enum
    ProtocolParmeterLen, uint8, indent = 2
    ProtocolParameters, record,type=EMPA FwdRohcProtParmsRec,size=1,maxsize=1,exist=(ProtocolParmeterLen > 0)
End

Begin Record, EMPA RevRouteProtParmsRec, BitPack, OTTSName=CMsgEmpaRevRouteProtParmsRec
    ValueID, uint8, indent = 2
    RouteProtParmsRec, record, type=EMPA RevRouteProtParmsProfileRec, size=1, maxsize=1
End

Begin Record, EMPA RevRouteProtParmsProfileRec, BitPack, OTTSName=CMsgEmpaRevRouteProtParmsAttribRec
    ProtocolId, uint8, indent = 2, base=enum:RouteProtocolID Enum
    ProtocolParmeterLen, uint8, indent = 2
    ProtocolParameters, record,type=EMPA RevRohcProtParmsRec,size=1,maxsize=1,exist=(ProtocolParmeterLen > 0)
End

Begin Record, EMPA ROHC ProtParmsRec, BitPack, OTTSName=CMsgEmpaSuppRohcRec
    ValueID, uint8, indent=2
    ProtocolSupported, uint8, indent=2
    SupportedValueLength, uint8, indent=2
    MaxSupportedMaxCID, uint16,indent=2,Byteorder = motorola
    LargeCIDSupported, bit,count=1,indent=2,pos=none
    MaxSupportedMRRU, uint16, indent=2,Byteorder = motorola
    TimerBasedCompressionSupported, bit,count=1,indent=2,pos=none
    SupportedProfileCount, uint8, indent=2
    SupportedProfile, array, type=uint16,Byteorder = motorola, maxsize=4, size=SupportedProfileCount,indent=2
    Reserved, bit,count=-8,pos=none
End

Begin Message, EMPA OTA Msg Rec ConfigurationResponse Rsp, BitPack, OTTSName=CMsgEmpaConfigRsp
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=EMPA RspAttribute Rec, maxsize=60, size=end
End

Begin Record, EMPA RspAttribute Rec, BitPack, OTTSName = CMsgEmpaRspAttributeRec
    Length, uint8, indent = 2
    AttributeID, uint16, indent = 2,Byteorder = motorola
    Value16bit, uint16, Byteorder = motorola,exist=((AttributeID&0xff00)==0xf700)
    Value, uint8, exist=((AttributeID&0xff00)!=0xf700)
End

Begin Message, EMPA OTA Msg Rec AttributeUpdateRequest Rsp, BitPack, OTTSName=CMsgEmpaAttrUpdateReq
    TransactionID, uint8, indent = 2
    AttributeRecord, record, type=EMPA ReqAttribute Rec, maxsize=30, size=end
End

Begin Message, EMPA OTA Msg Rec AttributeUpdateAccept Rsp, BitPack, OTTSName=CMsgEmpaAttrUpdateAcc
    TransactionID, uint8, indent = 2
End

Begin Message, EMPA OTA Msg Rec AttributeUpdateReject Rsp, BitPack, OTTSName=CMsgEmpaAttrUpdateRej
    TransactionID, uint8, indent = 2
End

Begin Record, TAP OTA Msg Rec, BitPack, OTTSName = CMsgTap
    <<< MessageId, uint8, indent = 1, base=enum:TAP Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, TAP OTA Msg Rec FTAPParameterAssignment Rsp, BitPack, OTTSName = CMsgFtapParmAssign
    TransactionID, uint8, indent = 2
    AttrRecord, record, type=FTAP Attribute Rec, maxsize=4, size=end
End

Begin Record, FTAP Attribute Rec, BitPack, OTTSName = CMsgFtapAttrRec
    Length, uint8, indent = 2
    AttributeID, uint8, indent = 2, base = enum:FTAP AttributeID Enum
    Rec, union, enum = AttributeID, ConsumeBytes = (Length-1)
End

Begin Message, FTAP Attribute Rec DRCValueFixedMode Rsp, BitPack, OTTSName = CMsgFtapDRCValFixModeAttr
    DRCValue, uint8, indent = 2
End

Begin Message, FTAP Attribute Rec DRCCoverFixedMode Rsp, BitPack, OTTSName = CMsgFtapDRCCovFixModeAttr
    DRCCover, uint8, indent = 2
End

Begin Message, FTAP Attribute Rec ACKChannelBitFixedMode Rsp, BitPack, OTTSName = CMsgFtapACKChBitFixModeAttr
    ACKChannelBit, uint8, indent = 2
End

Begin Message, FTAP Attribute Rec LoopBackMode Rsp, BitPack, OTTSName = CMsgFtapLoopBackModeAttr
    LoopBackPersistence, uint8, indent = 2
End

Begin Message, FTAP Attribute Rec ACKChanModulationTypeFixedMode Rsp, BitPack, OTTSName = CMsgFtapAckChanModFixModeAttr
    ACKChannelModulationType, uint8, indent = 2
End

Begin Message, TAP OTA Msg Rec FTAPParameterComplete Rsp, BitPack, OTTSName = CMsgFtapParmComp
    TransactionID, uint8, indent = 2
End

Begin Message, TAP OTA Msg Rec FTAPStatsClearRequest Rsp, BitPack, OTTSName = CMsgFtapStatsClearReq
    TransactionID, uint8, indent = 2
    Rec, record, type=FTAP StatAttrId Rec, maxsize=3, size=end
End

Begin Record, FTAP StatAttrId Rec, BitPack, OTTSName = CMsgFtapStatAttrIdRec
    StaticsRecordID, uint8, base = enum:FTAP StatsID Enum, indent = 2
End

Begin Message, TAP OTA Msg Rec FTAPStatsClearResponse Rsp, BitPack, OTTSName = CMsgFtapStatsClearRsp
    TransactionID, uint8, indent = 2
End

Begin Message, TAP OTA Msg Rec FTAPStatsGetRequest Rsp, BitPack, OTTSName = CMsgFtapStatsGetReq
    TransactionID, uint8, indent = 2
    Rec, record, type=FTAP StatAttrId Rec, maxsize=3, size=end
End

Begin Message, TAP OTA Msg Rec FTAPStatsGetResponse Rsp, BitPack, OTTSName = CMsgFtapStatsGetRsp
    TransactionID, uint8, indent = 2
    StaticsRecord, record, type=FTAP Statis Rec, maxsize=3, size=end
End

Begin Record, FTAP Statis Rec, BitPack, OTTSName = CMsgFtapStatRec
    Length, uint8, indent = 2
    StatisticsRecID, uint8, indent = 2, base = enum:FTAP StatsID Enum
    Rec, union, enum = StatisticsRecID, ConsumeBytes = (Length-1)
End

Begin Message, FTAP Statis Rec NULL Rsp, BitPack, OTTSName = CMsgFtapNullAttr
End

Begin Message, FTAP Statis Rec IdleASPStats Rsp, BitPack, OTTSName = CMsgFtapIdleASPStatsAttr
    IdleASPChangeOverflow, bit,count=1,indent=2,pos=none
    IdleASPChange, bit,count=15,indent=2,pos=none
    IdleTimeOverflow, bit,count=1,indent=2,pos=none
    IdleTime, bit,count=23,indent=2,pos=none
End

Begin Message, FTAP Statis Rec ConnectedSSStats Rsp, BitPack, OTTSName = CMsgFtapConnSSStatsAttr
    ConnectedSSChangeOverflow, bit,count=1,indent=2,pos=none
    ConnectedSSChange, bit,count=15,indent=2,pos=none
    ConnectedTimeOverflow, bit,count=1,indent=2,pos=none
    ConnectedTime, bit,count=23,indent=2,pos=none
End

Begin Message, FTAP Statis Rec FirstSyncCCPktStats Rsp, BitPack, OTTSName = CMsgFtapFstSyncCCPktStatsAttr
    FirstSyncCCPktOverflow, bit,count=1,indent=2,pos=none
    FirstSyncCCPkt, bit,count=15,indent=2,pos=none
    CCTimeOverflow, bit,count=1,indent=2,pos=none
    CCTime, bit,count=15,indent=2,pos=none
End

Begin Message, TAP OTA Msg Rec RTAPParameterAssignment Rsp, BitPack, OTTSName = CMsgRtapParmAssign
    TransactionID, uint8, indent = 2
    ParameterRecord, record, type=RTAP Parameter Rec, maxsize=2, size=end
End

Begin Record, RTAP Parameter Rec, BitPack, OTTSName = CMsgRtapParmRec
    Length, uint8, indent = 2
    ParameterRecordID, uint8, indent = 2, base = enum:RTAP ParameterID Enum
    Rec, union, enum = ParameterRecordID, ConsumeBytes = (Length-1)
End

Begin Message, RTAP Parameter Rec RTAPTestPktEnable Rsp, BitPack, OTTSName = CMsgRtapTestPktRec
    RTAPTestPktPersistence, uint8, indent = 2
End

Begin Message, RTAP Parameter Rec PacketRateMode Rsp, BitPack, OTTSName = CMsgRtapPktRateModeRec
    MinRateIndex, uint8, indent = 2
    MaxRateIndex, uint8, indent = 2
End

Begin Message, TAP OTA Msg Rec RTAPParameterComplete Rsp, BitPack, OTTSName = CMsgRtapParmComp
    TransactionID, uint8, indent = 2
End

Begin Record, ETAP OTA Msg Rec, BitPack, OTTSName = CMsgEtap
    <<< MessageId, uint8, indent = 1, base=enum:ETAP Msg Enum
    Msg, union, enum=<<< MessageId
End

Begin Message, ETAP OTA Msg Rec FETAPParameterAssignment Rsp, BitPack, OTTSName = CMsgFetapParmAssign
    TransactionID, uint8, indent = 2
    AttrRecord, record, type=FTAP Attribute Rec, maxsize=4, size=end
End

Begin Message, ETAP OTA Msg Rec FETAPParameterComplete Rsp, BitPack, OTTSName = CMsgFetapParmComp
    TransactionID, uint8, indent = 2
End

Begin Message, ETAP OTA Msg Rec FETAPStatsClearRequest Rsp, BitPack, OTTSName = CMsgFetapStatsClearReq
    TransactionID, uint8, indent = 2
    RecordId, record, type=FETAP StatisReqId Rec,maxsize=3,size=end
End

Begin Record, FETAP StatisReqId Rec, BitPack, OTTSName = CMsgFtapStatRecId
    StatisticsID, uint8, base=enum:FETAP StatsID Enum, indent=2
End

Begin Message, ETAP OTA Msg Rec FETAPStatsClearResponse Rsp, BitPack, OTTSName = CMsgFetapStatsClearRsp
    TransactionID, uint8, indent = 2
End

Begin Message, ETAP OTA Msg Rec FETAPStatsGetRequest Rsp, BitPack, OTTSName = CMsgFetapStatsGetReq
    TransactionID, uint8, indent = 2
    RecordId, record, type=FETAP StatisReqId Rec,maxsize=3,size=end
End

Begin Message, ETAP OTA Msg Rec FETAPStatsGetResponse Rsp, BitPack, OTTSName = CMsgFetapStatsGetRsp
    TransactionID, uint8, indent = 2
    StaticsRecord, record, type=FETAP Statis Rec, maxsize=3, size=end
End

Begin Record, FETAP Statis Rec, BitPack, OTTSName = CMsgFetapStatRec
    Length, uint8, indent = 2
    StatisticsRecID, uint8, indent = 2, base = enum:FETAP StatsID Enum
    Rec, union, enum = StatisticsRecID, ConsumeBytes = (Length-1)
End

Begin Message, FETAP Statis Rec NULL Rsp, BitPack, OTTSName = CMsgFetapNullAttr
End

Begin Message, FETAP Statis Rec IdleASPStats Rsp, BitPack, OTTSName = CMsgFetapIdleASPStatsAttr
    IdleASPChangeOverflow, bit,count=1,indent=2,pos=none
    IdleASPChange, bit,count=15,indent=2,pos=none
    IdleTimeOverflow, bit,count=1,indent=2,pos=none
    IdleTime, bit,count=23,indent=2,pos=none
End

Begin Message, FETAP Statis Rec ConnectedSSStats Rsp, BitPack, OTTSName = CMsgFetapConnSSStatsAttr
    ConnectedSSChangeOverflow, bit,count=1,indent=2,pos=none
    ConnectedSSChange, bit,count=15,indent=2,pos=none
    ConnectedTimeOverflow, bit,count=1,indent=2,pos=none
    ConnectedTime, bit,count=23,indent=2,pos=none
End

Begin Message, FETAP Statis Rec FirstSyncCCPktStats Rsp, BitPack, OTTSName = CMsgFetapFstSyncCCPktStatsAttr
    FirstSyncCCPktOverflow, bit,count=1,indent=2,pos=none
    FirstSyncCCPkt, bit,count=15,indent=2,pos=none
    CCTimeOverflow, bit,count=1,indent=2,pos=none
    CCTime, bit,count=15,indent=2,pos=none
End

Begin Message, ETAP OTA Msg Rec RETAPParameterAssignment Rsp, BitPack, OTTSName = CMsgRetapParmAssign
    TransactionID, uint8, indent = 2
    ParameterRecord, record, type=RETAP Parameter Rec, maxsize=6, size=end
End

Begin Record, RETAP Parameter Rec, BitPack, OTTSName = CMsgRetapParmRec
    Length, uint8, indent = 2
    ParameterRecordID, uint8, indent = 2, base = enum:RETAP ParameterID Enum
    Rec, union, enum = ParameterRecordID, consumeBytes = (Length-1)
End

Begin Message, RETAP Parameter Rec RETAPTestPktEnable Rsp, BitPack, OTTSName = CMsgRetapTestPktRec
    RETAPTestPktPersistence, uint8, indent = 2
End

Begin Message, RETAP Parameter Rec PacketRateMode Rsp, BitPack, OTTSName = CMsgRetapPktRateModeRec
    MinRateIndex, uint8, indent = 2
    MaxRateIndex, uint8, indent = 2
End

Begin Message, RETAP Parameter Rec PacketPayloadSizeMode Rsp, BitPack, OTTSName = CMsgRetapPktPayLodaSzRec
    MinPayloadSizeIndex, uint8, indent = 2
    MaxPayloadSizeIndex, uint8, indent = 2
End

Begin Message, RETAP Parameter Rec EnhancedAccessChannelRateMode Rsp, BitPack, OTTSName = CMsgRetapEnAcChanRateModeRec
    EnhancedAccessChannelRateIndex, uint8, indent = 2
End

Begin Message, RETAP Parameter Rec BurstPeriodMode Rsp, BitPack, OTTSName = CMsgRetapBurstPerModeRec
    LinkFlowID, uint8, indent = 2
    BurstPeriod, uint16, indent = 2
End

Begin Message, RETAP Parameter Rec BurstSizeMode Rsp, BitPack, OTTSName = CMsgRetapBurstSizeModeRec
    LinkFlowID, uint8, indent = 2
    BurstSize, uint16, indent = 2
End

Begin Message, ETAP OTA Msg Rec RETAPParameterComplete Rsp, BitPack, OTTSName = CMsgRetapParmComp
    TransactionID, uint8, indent = 2
End

Begin Message, ETAP OTA Msg Rec RETAPStatsClearRequest Rsp, BitPack, OTTSName = CMsgRetapStatClrReq
    TransactionID, uint8, indent = 2
    StatisticsRecordID, array, type=uint8, maxsize=16, size=end
End

Begin Message, ETAP OTA Msg Rec RETAPStatsClearResponse Rsp, BitPack, OTTSName = CMsgRetapStatClrRsp
    TransactionID, uint8, indent = 2
End

Begin Message, ETAP OTA Msg Rec RETAPStatsGetRequest Rsp, BitPack, OTTSName = CMsgRetapStatGetReq
    TransactionID, uint8, indent = 2
    StatisticsRecordID, array, type=uint8, maxsize=16, size=end
End

Begin Message, ETAP OTA Msg Rec RETAPStatsGetResponse Rsp, BitPack, OTTSName = CMsgRetapStatGetRsp
    TransactionID, uint8, indent = 2
    StatisticsRecord, record, type=RETAP Statics Rec, maxsize=16, size=end
End

Begin Record, RETAP Statics Rec, BitPack, OTTSName = CMsgRetapStatRec
    Length, uint8, indent = 2
    StatisticsRecordID, uint8, indent = 2
    LinkFlowID, uint8, indent = 2
    Stats_PL_2RevSysTime, bit,count=39,indent=2,base=16,pos=none
    Reserved, bit,count=1,indent=2,pos=none
    PhysLaySubTyp2Seq_0, uint32, indent = 2
    PhysLaySubTyp2Seq_1, uint32, indent = 2
    PhysLaySubTyp2Seq_2, uint32, indent = 2
    PhysLaySubTyp2Seq_3, uint32, indent = 2
    PhysLaySubTyp2Seq_4, uint32, indent = 2
    PhysLaySubTyp2Seq_5, uint32, indent = 2
    PhysLaySubTyp2Seq_6, uint32, indent = 2
    PhysLaySubTyp2Seq_7, uint32, indent = 2
    PhysLaySubTyp2Seq_8, uint32, indent = 2
    PhysLaySubTyp2Seq_9, uint32, indent = 2
    PhysLaySubTyp2Seq_10, uint32, indent = 2
    PhysLaySubTyp2Seq_11, uint32, indent = 2
    PhysLaySubTyp2Seq_12, uint32, indent = 2
End

Begin Message, DO DSA Msg Rec Stream2 Rsp, BitPack, OTTSName=CMsgStream2Sig
    DpaANMsg, record, type = DPA OTA Msg Rec, maxsize=1, exist=(..\SubType==1)
    DpaSNMsg, record, type = DPA OTA Msg Rec, maxsize=1, exist=(..\SubType==2)
    MfpaANMsg, record, type = MFPA OTA Msg Rec, maxsize=1, exist=(..\SubType==4)
    MfpaSNMsg, record, type = MFPA OTA Msg Rec, maxsize=1, exist=(..\SubType==5)
    EmpaANMsg, record, type = EMPA OTA Msg Rec, maxsize=1, exist=(..\SubType==8)
    EmpaSNMsg, record, type = EMPA OTA Msg Rec, maxsize=1, exist=(..\SubType==9)
    TapMsg, record, type = TAP OTA Msg Rec, maxsize=1, exist=(..\SubType==3)
    EtapMsg, record, type = ETAP OTA Msg Rec, maxsize=1, exist=(..\SubType==10)
End

Begin Message, DO DSA Msg Rec Stream3 Rsp, BitPack, OTTSName=CMsgStream3Sig
    DpaANMsg, record, type = DPA OTA Msg Rec, maxsize=1, exist=(..\SubType==1)
    DpaSNMsg, record, type = DPA OTA Msg Rec, maxsize=1, exist=(..\SubType==2)
    MfpaANMsg, record, type = MFPA OTA Msg Rec, maxsize=1, exist=(..\SubType==4)
    MfpaSNMsg, record, type = MFPA OTA Msg Rec, maxsize=1, exist=(..\SubType==5)
    EmpaANMsg, record, type = EMPA OTA Msg Rec, maxsize=1, exist=(..\SubType==8)
    EmpaSNMsg, record, type = EMPA OTA Msg Rec, maxsize=1, exist=(..\SubType==9)
    TapMsg, record, type = TAP OTA Msg Rec, maxsize=1, exist=(..\SubType==3)
    EtapMsg, record, type = ETAP OTA Msg Rec, maxsize=1, exist=(..\SubType==10)
End

Begin Message, Cp Spy CP_FCP_OHD_MSG_SPY Rsp, BitPack, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SendTimeInSlot, uint16, indent=2
    Rec, record, type=DO DSA Msg Rec, maxsize=1
End

Begin Message, Cp Spy CP_FCP_DSAF_RAW_MSG_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Forward Data, array, type=uint8, maxsize=128, size=end, columns=60
End

Begin Message, Cp Spy CP_FCP_SLPD_ACK_SPY Rsp, BitPack, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SendTimeInSlot, uint16, indent=2
    PhyChan, uint32, base=enum:DO PhyChanType Enum,indent=2
    AckSequenceValid, bit, count=1,indent=2,pos=none
    AckSequenceNumber, bit, count=3,indent=2,pos=none
    SequenceValid, bit, count=1,indent=2,pos=none
    SequenceNumber, bit,count=3,indent=2,pos=none
End

Begin Message, Cp Spy CP_FCP_SNP_RAW_DATA_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ChannelType, uint8, base=enum:DO PhyChanType Enum,indent=2
    Subtype, uint16
    Raw Data, array, type=uint8, maxsize=600, size=end, columns=60, indent=2
End

Begin Message, Cp Spy CP_FCP_DRC_TABLE_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    GlobAdjHW, int16,   scale=Q7, format=%2.3f, indent=1
    CurrDRCVal, uint16
    DRCVal, uint16
    DRCC2I, int16,  scale=Q6, format=%2.3f, indent=1
    C2ILong, uint16, scale=Q9, format=%2.3f, log10=true, logscale=10
    FTMSubType, bit, count=4, offset=0, bytes=1, pos=first, base=enum:Enhanced/Default, indent=1
    CcMacId, bit, count=4, offset=4, bytes=1, pos=last, base=enum:0 NA/1 NA/2 (76.8kbps)/3 (38.4kbps)
    MacJammer, uint8, base=enum:0 InAct/1 Act
    Param_2, uint16
    CCHFalsAlr, uint16, base=10,indent =1
    ReduntFalsAlr, uint16, base=10
    ValidSlots, uint32, base=10
    CRCPassCnt, uint32, base=10
    CRCFailCnt, uint32, base=10
    Active Data, record, type=DrcTableRecords, maxsize=14
End

Begin Record, DrcTableRecords
    BadSlots, uint16, base=10,indent=1
    GoodSlots, uint16, base=10
    C2IThrHW, uint16
    C2IThrSW(dB), int16, scale=Q7, format=%2.3f
    ThrputHW, uint16, base=10
    ThrputSW, uint16
    ThrAWGnHW, int16, scale=Q6, format=%2.3f
End

Begin Message, Cp Spy CP_FCP_DRC_GENERAL_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, Cp Spy CP_FCP_DRC_TEST_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Active Data, record, type=DrcTestParameterRecords, maxsize=40
End

Begin Record, DrcTestParameterRecords
    Data_1, uint16
    Data_2, uint16
    Data_3, uint16
    Data_4, uint16, indent=1
End

Begin Message, Cp Spy MON_CP_FCP_DRC_PARAMETER_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Active Data, record, type=DrcSwParRecords, maxsize=5
End

Begin Record, DrcSwParRecords
    TrafficType, uint8,  base=enum:DRCTrafficType, indent=1
    ChanType, uint8,  base=enum:DRCChanType, indent=1
    DRCInfo, uint8,  indent=1
    LevelCross, uint8,  base=10, indent=1
    SLMSErr, uint16, indent=1
    C2IShort, uint16, scale=Q9, format=%2.3f, log10=true, logscale=10, indent=1
    C2ILong, uint16, scale=Q9, format=%2.3f, log10=true, logscale=10, indent=1
    C2IPred, int16,  scale=Q6, format=%4.3f, indent=1
    Val_V, uint16, indent=1
    R_ccl, uint32, indent=1
    SLMSCoeff, array, type=uint32,size=5, maxsize=5,indent=1
End

Begin Message, CP Spy MON_CP_FCP_DRC_ALG_DEBUG_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Active Data, record, type=DrcAlgDbgRecords, maxsize=5
End

Begin Record, DrcAlgDbgRecords
    DRCval, uint16, indent=1
    GlbAdj, int16, scale=Q7, format=%4.3f,indent=1
    C2I(dB), array, type=uint16, scale=Q9, format=%2.1f, log10=true, logscale=10, size=4, maxsize=4, indent =1
    C2IThr, array, type=int16, scale=Q7, format=%4.3f, size=14, maxsize=14, indent =1
    Thrput, array, type=uint16, base=10, size=14, maxsize=14, indent=1
End

Begin Message, Cp Spy MON_CP_FCP_DRC_IMP_DEBUG_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Active Data, record, type=DrcImpDbgRecords, maxsize=4
End

Begin Record, DrcImpDbgRecords
    DRC_Ch, array, type=uint16, size=4, maxsize=4, columns =2,indent=1
    MacId, array, type=uint16, size=4, maxsize=4,indent=1
    GlbAdj, array, type=int16, scale=Q11, format=%4.3f, size=4, maxsize=4,indent=1
    DRCTxSlot, array, type=uint8, base=10, size=4, maxsize=4,indent=1
    DRCRxBit, array, type=uint32, base=10,size=4, maxsize=4,indent=1
    C2IThr, array, type=int16, scale=Q11, format=%4.3f, size=4, maxsize=4,indent=1
    Thruput, array, type=uint16, base=10,size=4, maxsize=4,indent=1
End

Begin Message, Cp Spy MON_CP_MAC_BIT_DETECT_TEST_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    MacBitDetectData, record, type=MacTestDataT, maxsize=2
End

Begin Record, MacTestDataT
    rabSec0, int16, base=16, indent=1
    harqMetSec0, int32, base=16
    parqMetSec0, int32, base=16
    c2iMetSec0, int32, base=16
    rabSec1, int16, base=16
    harqMetSec1, int32, base=16
    parqMetSec1, int32, base=16
    c2iMetSec1, int32, base=16
    rabSec2, int16, base=16
    harqMetSec2, int32, base=16
    parqMetSec2, int32, base=16
    c2iMetSec2, int32, base=16
    rabSec3, int16, base=16
    harqMetSec3, int32, base=16
    parqMetSec3, int32, base=16
    c2iMetSec3, int32, base=16
    rabSec4, int16, base=16
    harqMetSec4, int32, base=16
    parqMetSec4, int32, base=16
    c2iMetSec4, int32, base=16
    rabSec5, int16, base=16
    harqMetSec5, int32, base=16
    parqMetSec5, int32, base=16
    c2iMetSec5, int32, base=16
    rpcBit, uint8, base=16
    drcLockBitPcg0, uint8, base=16
    drcLockBitPcg1, uint8, base=16
    drcLockBitPcg2, uint8, base=16
    drcLockBitPcg3, uint8, base=16
    drcLockBitPcg4, uint8, base=16
    drcLockBitPcg5, uint8, base=16
    drcLockMetricPcg0, int32, base=16
    drcLockMetricPcg1, int32, base=16
    drcLockMetricPcg2, int32, base=16
    drcLockMetricPcg3, int32, base=16
    drcLockMetricPcg4, int32, base=16
    drcLockMetricPcg5, int32, base=16
    slotQrabFrabSec0, int32, base=16
    slotQrabFrabSec1, int32, base=16
    slotQrabFrabSec2, int32, base=16
    slotQrabFrabSec3, int32, base=16
    slotQrabFrabSec4, int32, base=16
    slotQrabFrabSec5, int32, base=16
    statValid, uint8, base=16
End

Begin Message, Cp Spy MON_CP_MAC_BIT_DETECT_FINAL_TEST_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    MacBitDetectFinalData, record, type=MacTestFinalDataT, maxsize=1
End

Begin Record, MacTestFinalDataT
    pilotPwrPath0, int32, base=16, indent=1
    pilotPwrPath1, int32, base=16
    pilotPwrPath2, int32, base=16
    pilotPwrPath3, int32, base=16
    pilotPwrPath4, int32, base=16
    pilotPwrPath5, int32, base=16
    pilotPwrPath6, int32, base=16
    pilotPwrPath7, int32, base=16
    pilotPwrPath8, int32, base=16
    pilotPwrPath9, int32, base=16
    pilotPwrPath10, int32, base=16
    pilotPwrPath11, int32, base=16
    c2iLogSec0, int32, base=16
    c2iLogSec1, int32, base=16
    c2iLogSec2, int32, base=16
    c2iLogSec3, int32, base=16
    c2iLogSec4, int32, base=16
    c2iLogSec5, int32, base=16
    c2iRawMainSec0, int32, base=16
    c2iRawMainSec1, int32, base=16
    c2iRawMainSec2, int32, base=16
    c2iRawMainSec3, int32, base=16
    c2iRawMainSec4, int32, base=16
    c2iRawMainSec5, int32, base=16
    c2iRawDivSec0, int32, base=16
    c2iRawDivSec1, int32, base=16
    c2iRawDivSec2, int32, base=16
    c2iRawDivSec3, int32, base=16
    c2iRawDivSec4, int32, base=16
    c2iRawDivSec5, int32, base=16
End

Begin Message, Cp Spy CP_FCP_OHD_MSG_SPY1 Rsp, BitPack, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SendTimeInSlot, uint16, indent=2
    Rec, record, type=DO DSA Msg Rec, maxsize=1
End

Begin Message, CP Spy CP_PAF_RLP_FRAME_RECV_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, CP Spy CP_PAF_RLP_FRAME_PASS_TO_UPPER_LAYER_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=64, size=end, columns=60
End

Begin Message, Cp Spy MON_CP_FCP_PACKET_REC_RAW_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    DmaRxStatus0, uint32, indent=1
    PacketInfo0, record, type=DmaMdmRxSlotInfoRawT, maxsize=4
    DmaRxStatus1, uint32, indent=1
    PacketInfo1, record, type=DmaMdmRxSlotInfoRawT, maxsize=4
    DmaRxStatus2, uint32, indent=1
    PacketInfo2, record, type=DmaMdmRxSlotInfoRawT, maxsize=4
    DmaRxStatus3, uint32, indent=1
    PacketInfo3, record, type=DmaMdmRxSlotInfoRawT, maxsize=4
End

Begin Record, DmaMdmRxSlotInfoRawT
    PacketRec, uint32, indent=1
    PacketPayload, array, type=uint8, maxsize=12
End

Begin Message, Cp Spy MON_CP_FCP_PACKET_REC_CDM_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    TimeStampInSlot, uint16
    UserMacIdx, uint8
    control2, uint8
    packetRec, array, type=uint32, size=32, maxsize=32, columns=32, indent=1
    Drc_C2I, array, type=uint16, size=32, maxsize=32, columns=32, indent=1
End

Begin Message, Cp Spy MON_CP_FCP_PREAMBLE_DBG_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PreambleInfo, record, type=PreambleInfoT, maxsize=16
End

Begin Record, PreambleInfoT
    PktRec, uint32, indent=1
    SymbSnr, uint16
    drc, uint16
    DlyLen, uint16
    MacDet, uint16
    max, uint16
    thr, uint16
    llr, uint32
    ref, uint32
End

Begin Message, Cp Spy MON_CP_FCP_GOOD_PACKET_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PacketInfo, record, type=DmaMdmRxInfoT, maxsize=1
    PacketPayload, array, type=uint8, size=end, maxsize=640, indent=1
End

Begin Record, DmaMdmRxInfoT
    vld, bit,   offset=0,   count = 1, bytes=4, pos=first, indent=1
    gd, bit,   offset=1,   count = 1,  bytes=4, pos=middle
    mac, bit,   offset=3,   count = 7,  bytes=4, pos=middle
    drc, bit,   offset=10,   count = 4,  bytes=4, pos=middle
    sz, bit,   offset=14,   count = 3,  bytes=4, pos=middlet
    ct, bit,   offset=17,   count = 1,  bytes=4, pos=middle
    slot, bit,   offset=18,  count = 4,  bytes=4, pos=middle
    st, bit,   offset=22,   count = 6,  bytes=4, pos=middle
    cr, bit,   offset=28,   count = 1,  bytes=4, pos=middle
    sp, bit,   offset=30,   count = 1,  bytes=4, pos=middle
    cpl, bit,   offset=31,   count = 1,  bytes=4, pos=last
End

Begin Message, Cp Spy MON_CP_FCP_FTM_MAC_PACKET_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Forward MAC Data, record, type=FwdChMACDataRecord, maxsize=4
End

Begin Record, FwdChMACDataRecord
    PktRec, uint32, indent=1
    PRvld, bit,   offset=0,  count = 1, bytes=4, pos=first,   indent=1, base=enum:NotValid/Valid
    gdPkt, bit,   offset=1,  count = 1, bytes=4, pos=middle,  base=enum:Bad/Good
    bcmcs, bit,   offset=2,  count = 1, bytes=4, pos=middle,  base=10
    macIDX, bit,   offset=3,  count = 7, bytes=4, pos=middle,  base=10
    drc, bit,   offset=10, count = 4, bytes=4, pos=middle,  base=10
    Macsz, bit,   offset=14, count = 3, bytes=4, pos=middle,  base=enum:128/256/512/1024/2048/3072/4096/5120
    CrtType, bit,   offset=17, count = 1, bytes=4, pos=middle,  base=enum:SubType01/SubType2
    slot, bit,   offset=18, count = 4, bytes=4, pos=middle,  base=10
    timeStmp, bit,   offset=22, count = 6, bytes=4, pos=middle,  base=10
    crc, bit,   offset=28, count = 1, bytes=4, pos=middle,  base=enum:Fail/Pass
    format, bit,   offset=29, count = 1, bytes=4, pos=middle,  base=enum:formatA/formatB
    sop, bit,   offset=30, count = 1, bytes=4, pos=middle
    cpl, bit,   offset=31, count = 1, bytes=4, pos=last
End

Begin Message, Cp Spy MON_CP_FCP_PERF_STAT_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    TotalFwdPhySlot, uint32, base=10
    TotalKBits, uint32, scale=Q3, format=%10.2f
    BadPackets, uint32, base=10
    TotalTxPacket, uint32, base=10
    TotalCCPacket, uint16, base=10
    FwdPER(percent), uint16, scale=Q8, format=%4.2f
    AN_ThrPut(kbps), uint16, scale=Q4, format=%4.2f
    AT_ThrPut(kbps), uint16, scale=Q4, format=%4.2f
End

Begin Message, Cp Spy MON_CP_FTAP_PERF_STAT_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FTAPTotalFwdPhySlot, uint32, base=10
    FTAPTotalKBits, uint32, scale=Q3, format=%10.2f
    FTAPBadPackets, uint32, base=10
    FTAPTotalTxPacket, uint32, base=10
    FTAPTotalCCPacket, uint16, base=10
    FTAPFwdPER(percent), uint16, scale=Q8, format=%4.2f
    FTAP_AN_ThrPut(kbps), uint16, scale=Q4, format=%4.2f
    FTAP_AT_ThrPut(kbps), uint16, scale=Q4, format=%4.2f
End

Begin Message, Cp Spy MON_CP_FCP_PERF_STAT_REDUCED_SIG_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    EVDORevision, uint8, base=enum:Rev0/RevA
    DRC_Value, uint8, base=10
    ControlChannelRate, uint8, base=enum:NA/NA1/76.8kbps/38.4kbps, default=NA
    UserMacIdex, uint8,  base=10
    TotalFwdControlSlot, uint32, base=10
    TotalFwdTrafficSlot, uint32, base=10
    TotalControlGoodPacket, uint32, base=10
    TotalTrafficGoodPacket, uint32, base=10
    TotalTrafficBadPacket, uint32, base=10
    FwdTrafficChanPER(%), uint32, scale=Q7, format=%4.2f
End

Begin Message, Cp Spy MON_CP_FCP_PAF_DPARLP_STAT_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    EVDORLPStatsFlowId, uint32, base=10, indent=1
    EVDORLPStatsResetTime, uint32, indent=1
    EVDORLPStatsNaksReceived, uint32, base=10, indent=1
    EVDORLPStatsReXmitsNotFound, uint32, base=10, indent=1
    EVDORLPStatsANNakBytesRequested, uint64, indent=1
    EVDORLPStatsRxDuplicateBytes, uint64, indent=1
    EVDORLPStatsRxReXmitsBytes, uint64, indent=1
    EVDORLPStatsRxNewDataBytes, uint64, indent=1
    EVDORLPStatsRxTotalBytes, uint64, indent=1
    EVDORLPStatsNaksSent, uint32, base=10, indent=1
    EVDORLPStatsATNakBytesRequested, uint64, indent=1
    EVDORLPStatsTxReXmitsBytes, uint64, indent=1
    EVDORLPStatsTxNewDataBytes, uint64, indent=1
    EVDORLPStatsTxTotalBytes, uint64, indent=1
    EVDORLPStatsNakTimesOuts, uint32, base=10, indent=1
    EVDORLPStatsResetCount, uint32, base=10, indent=1
    EVDORLPStatsATResetRequestCount, uint32, base=10, indent=1
    EVDORLPStatsANResetAckCount, uint32, base=10, indent=1
    EVDORLPStatsANResetRequestCount, uint32, base=10, indent=1
End

Begin Message, Cp Spy MON_CP_FCP_PAF_MFPARLP_STAT_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    EVDORevAFwdMFRLPStatsEvent, record, type=EVDORevAFwdMFRLPStatsMeasRec, maxsize=4, size=4
End

Begin Record, EVDORevAFwdMFRLPStatsMeasRec
    EVDORevAFwdMFRLPStatsFlowId, uint16,base=10, indent=1
    EVDORevAFwdMFRLPStatsResetTime, uint32,indent=1
    EVDORevAFwdMFRLPStatsReXmitsNotFound, uint16,base=10, indent=1
    EVDORevAFwdMFRLPStatsATNakBytesRequested, uint64,base=10, indent=1
    EVDORevAFwdMFRLPStatsRxDuplicateBytes, uint64,base=10, indent=1
    EVDORevAFwdMFRLPStatsRxReXmitsBytes, uint64,base=10, indent=1
    EVDORevAFwdMFRLPStatsRxNewDataBytes, uint64,base=10, indent=1
    EVDORevAFwdMFRLPStatsRxTotalBytes, uint64,base=10, indent=1
    EVDORevAFwdMFRLPStatsNaksSent, uint32, base=10, indent=1
    EVDORevAFwdMFRLPStatsRxNakTimesOuts, uint32,base=10, indent=1
    EVDORevAFwdMFRLPStatsResetCount, uint32,base=10, indent=1
    EVDORevAFwdMFRLPStatsATResetRequestCount, uint16,base=10, indent=1
    EVDORevAFwdMFRLPStatsANResetAckCount, uint16,base=10, indent=1
    EVDORevAFwdMFRLPStatsANResetRequestCount, uint16,base=10, indent=1
End

Begin Message, Cp Spy CP_FCP_PAF_TEST_FWD_PACKET_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Forward Data, array, type=uint8, maxsize=128, size=end, columns=60
End

Begin Message, Cp Spy CP_FCP_PAF_TEST_UPPER_LAYER_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    UpperLayer Received Data, array, type=uint8, maxsize=128, size=end, columns=60
End

Begin Message, Cp Spy CP_FCP_FTAP_STAT_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    IdleASPChange, uint32
    IdleTime, uint32
    ConnectedSSChange, uint32
    ConnectedTime, uint32
    FirstSyncCCPkt, uint32
    CCTime, uint32
End

Begin Message, Cp Spy CP_FCP_FTAP_TEST_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Vs_Test, uint32
    Vr_Test, uint32
    RecNum, uint8
End

Begin Message, Cp Spy CP_FCP_FTAP_TEST_FWD_PACKET_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Forward Data, array, type=uint8, maxsize=128, size=end, columns=60
End

Begin Message, Cp Spy CP_FCP_FTAP_FWD_LINK_DATA_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Forward Data, array, type=uint8, maxsize=128, size=end, columns=60
End

Begin Message, CP Spy CP RCP ACM Mac Layer Header Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Length, uint8,  base=10, indent=1
    SessionConfigurationToken, uint16, base=16, indent=1, Byteorder=motorola
    SecurityLayerFormat, bit, count=1, offset=0, bytes=1, pos=first
    ConnectionLayerFormat, bit, count=1, offset=1, bytes=1, pos=middle, base=enum:FormatA/FormatB, default=FormatA
    Reserved/ProbeNumber, bit, count=4, offset=2, bytes=1, pos=middle
    ATIType, bit, count=2, offset=6, bytes=1, pos=last, base=enum:BATI/MATI/UATI/RATI, default=RATI
    ATI, array,type=uint8,maxsize=4,size=end,byteorder=motorola,exist=ATIType > 0
End

Begin Message, CP Spy CP RCP ACM Capsule Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, CP Spy CP RCP ACM Physical Packet Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint8, maxsize=100, size=end, columns=60
End

Begin Message, Cp Spy CP RCP TXH Tx AGC Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Tx AGC Mode, uint16,  base=enum:RCP Tx AGC Type
    PowerBase (Alog2), int16,  scale=Q7, format=%4.2f
    OpenLoop FiltRxPwr (Alog2), int16,  scale=Q7, format=%4.2f
    PowerBase (dBm), int16,  scale=Q7, format=%4.2f
    OpenLoop FiltRxPwr (dBm), int16,  scale=Q7, format=%4.2f
    CloseLoop Accumulations, uint16,  base=16
    CloseLoopAdj (Alog2), int16,  scale=Q7, format=%4.2f
    CloseLoopAdj (dBm), int16,  scale=Q7, format=%4.2f
    Unadj Tx Pwr (Alog2), int16,  scale=Q7, format=%4.2f
    Total Tx Adj (Alog2), int16,  scale=Q7, format=%4.2f
    Total Tx Slot Pwr (Alog2), int16,  scale=Q7, format=%4.2f
    Total Tx Hslot Pwr (Alog2), int16,  scale=Q7, format=%4.2f
    Unadj Tx Pwr (dBm), int16,  scale=Q7, format=%4.2f
    Total Tx Adj (dBm), int16,  scale=Q7, format=%4.2f
    Total Tx Slot Pwr (dBm), int16,  scale=Q7, format=%4.2f
    Total Tx Hslot Pwr (dBm), int16,  scale=Q7, format=%4.2f
    Slot_Ks (linear), uint16, scale=Q7, format=%4.2f
    Slot_Ks (Alog2), int16,  scale=Q7, format=%4.2f
    Slot_Ks (dBm), int16,  scale=Q7, format=%4.2f
    Slot_Ks (index), uint16,  base=16
    Hslot_Ks (linear), uint16, scale=Q7, format=%4.2f
    Hslot_Ks (Alog2), int16,  scale=Q7, format=%4.2f
    Hslot_Ks (dBm), int16,  scale=Q7, format=%4.2f
    Hslot_Ks (index), uint16,  base=16
    Total Max Pwr (ALog2), int16,  scale=Q7, format=%4.2f
    Total Max Pwr (dBm), int16,  scale=Q7, format=%4.2f
    Total Min Pwr (ALog2), int16,  scale=Q7, format=%4.2f
    Total Min Pwr (dBm), int16,  scale=Q7, format=%4.2f
End

Begin Message, Cp Spy CP RCP TXH DO Slot AGC Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    DO Slot TxAGC Stats, record, type=Slot TxAGC Stats, maxsize=8, size=end
End

Begin Record, Slot TxAGC Stats
    Slot Pwr (ALog2), int16,  scale=Q7, format=%4.2f, indent=1
    Slot Tx Gain State, uint16, base=enum:RCP Tx AGC Gain State
    Halfslot Pwr (ALog2), int16,  scale=Q7, format=%4.2f
    Halfslot Tx Gain State, uint16, base=enum:RCP Tx AGC Gain State
    RPC INFO, uint16, base=16
    tx_ctrl_reg, uint16, base=16
    Ks (Alog2), int16,  scale=Q7, format=%4.2f
    Hslot_Ks (Alog2), int16,  scale=Q7, format=%4.2f
    Total Tx Slot Pwr (Alog2), int16,  scale=Q7, format=%4.2f
    Total Tx Hslot Pwr (Alog2), int16,  scale=Q7, format=%4.2f
End

Begin Message, Cp Spy CP RCP TXH DO Slot2 AGC Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    DO Slot TxAGC Stats, record, type=Slot TxAGC Stats, maxsize=8, size=end
End

Begin Message, Cp Spy CP RCP TXH DO Slot Ks Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    DO Slot Ks Stats, record, type=Slot Ks Stats, maxsize=16, size=end
End

Begin Record, Slot Ks Stats
    Slot Ks (linear), uint16, scale=Q7, format=%4.2f, indent=1
    Slot Ks (Alog2), int16,  scale=Q7, format=%4.2f
    Slot Ks (index), uint16,  base=16
    Halfslot Ks (linear), uint16, scale=Q7, format=%4.2f
    Halfslot Ks (Alog2), int16,  scale=Q7, format=%4.2f
    Halfslot Ks (index), uint16,  base=16
End

Begin Message, Cp Spy CP RCP TXH DO Slot Clipper Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    DO Slot Clipper Stats, record, type=Slot Clipper Stats, maxsize=16, size=end
End

Begin Record, Slot Clipper Stats
    Slot Tx Clip Thresh, uint16, base=16, indent=1
    Halfslot Tx Clip Thresh, uint16, base=16
End

Begin Message, Cp Spy CP RCP TXH DO Slot Get DRC Channel Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    DO Slot Get DRC Channel, record, type=Slot DRC Cahnnel, maxsize=16
End

Begin Record, Slot DRC Cahnnel
    Slot DRC Channel, uint8, indent=1
End

Begin Message, Cp Spy CP RCP TXH DO RTC KS Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    DO KSD READ VALUE, record, type=KSD READ VALUE, maxsize=16, size=end
End

Begin Record, KSD READ VALUE
    Slot No, int16, base=16, indent=1
    Scale 1st, int16, base=16
    Scale 2nd, int16, base=16
    Log2 1st, int16, base=16
    Log2 2nd, int16, base=16
    Index 1st, int16, base=16
    Index 2nd, int16, base=16
End

Begin Message, Cp Spy CP_RCP_PAR_DATA_SEND_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RLP Data Send, array,  type=uint8, maxsize=128, size=end,columns=60
End

Begin Message, Cp Spy CP_RCP_PAR_DATA_RETX_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RLP Data Retransmit, array,  type=uint8, maxsize=128, size=end,columns=60
End

Begin Message, Cp Spy CP_RCP_PAR_RLP_STAT_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    EVDORevARevMFRLPStatsEvent, record, type=EVDORevARevMFRLPStatsMeasRec, maxsize=4, size=4
End

Begin Record, EVDORevARevMFRLPStatsMeasRec
    EVDORevARevMFRLPStatsFlowId, uint32, base=10, indent=1
    EVDORevARevMFRLPStatsResetTime, uint32, indent=1
    EVDORevARevMFRLPStatsNaksReceived, uint32, base=10, indent=1
    EVDORevARevMFRLPStatsReXmitsNotFound, uint32, base=10, indent=1
    EVDORevARevMFRLPStatsANNakBytesRequested, uint64, base=10, indent=1
    EVDORevARevMFRLPStatsTxReXmitsBytes, uint64, base=10, indent=1
    EVDORevARevMFRLPStatsTxNewDataBytes, uint64, base=10, indent=1
    EVDORevARevMFRLPStatsTxTotalBytes, uint64, base=10, indent=1
    EVDORevARevMFRLPStatsResetCount, uint32, base=10, indent=1
    EVDORevARevMFRLPStatsATResetRequestCount, uint32, base=10, indent=1
    EVDORevARevMFRLPStatsANResetAckCount, uint32, base=10, indent=1
    EVDORevARevMFRLPStatsANResetRequestCount, uint32, base=10, indent=1
End

Begin Message, Cp Spy CP_RCP_RTM_STATES_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RtmSubtype, uint8, base=10
    RcpMode, uint32, base=enum:RcpModeT
    RtmState, uint32, base=enum:RtmRmmStateT
    RtmSilentState, uint8, base=enum:Silent/Not_Silent
    currChip, uint8, base=10
    currSlot, uint8, base=10
    currSubframe, uint8, base=10
    RtmCurrSubframeCnt, uint8, base=10
    RtmCurrInterlace, uint8, base=10
    RtmPrevInterlace, uint8, base=10
    RtmPrevPrevInterlace, uint8, base=10
    RtmCurrTxHistSubframe, uint8, base=10
    frameOffset, uint8, base=10
    currRate, uint8, base=10
    prevRate, uint8, base=10
End

Begin Message, Cp Spy CP_RCP_RTM_HARQ_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RevMacPkt Harq Stats, record, type=RtmSpyHarqT, maxsize=4
End

Begin Record, RtmSpyHarqT
    revMacId, uint8,  base=10
    Rate, uint8,  base=10
    PktSz, uint8,  base=10
    sPktId, uint8,  base=10
    maxSPkt, uint8,  base=enum:FALSE/TRUE
    larq, uint8,  base=enum:FALSE/TRUE
    nextHL, uint8,  base=enum:Harq/Larq
    pktHead, uint32, base=10
    pktLen, uint32, base=10
    dataG, uint16, base=10
    dataG1, uint16, base=10
    dataG2, uint16, base=10
    dataG3, uint16, base=10
    rriG, uint16, base=10
    numFlow, uint8,  base=10
    macID0, uint8,  base=10
    grant0, uint16, base=10
End

Begin Message, Cp Spy CP_RCP_RTM_TXHISTORY_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    TxHistory Stats, record, type=RtmSpyTxHistT, maxsize=16
End

Begin Record, RtmSpyTxHistT
    revMacId, uint8,  base=10
    firstSubPkt, uint8,  base=enum:FALSE/TRUE
    hlarqPcomb0, int16,  base=10
    hlarqPcomb1, int16,  base=10
    hlarqPcomb2, int16,  base=10
    hlarqPcomb3, int16,  base=10
    hlarqPcomb4, int16,  base=10
    hlarqPcomb5, int16,  base=10
End

Begin Message, Cp Spy CP_RCP_RTM3_STATES_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RTM3 Subframe Stats, record, type=Rtm3SpyStatesT, maxsize=4, size=end
End

Begin Record, Rtm3SpyStatesT
    maxNumSubPkt, uint8, base=10, indent=1
    RtmCurrInterlace, uint8, base=10
    ArqMode, uint8, base=10
    Arq, uint8, base=10
    SubframeCnt, uint32, base=10
    subPktNum, uint8, base=10
    subPktNumAck, uint8, base=10
    subPktNumNak, uint8, base=10
    pktSzIdxAck, uint8, base=10
    pktSzIdxNak, uint8, base=10
    pktSzIdx, uint8, base=10
    TransmitModeAck, uint8, base=10, base=enum:HICAP/LOLAT
    TransmitModeNak, uint8, base=10, base=enum:HICAP/LOLAT
    TransmitMode, uint8, base=10, base=enum:HICAP/LOLAT
    macFlowIDAck0, uint8, base=10, indent=1
    macFlowIDNak0, uint8, base=10
    macFlowID0, uint8, base=10
    grantByteSizeAck0, uint16, base=10
    grantByteSizeNak0, uint16, base=10
    grantByteSize0, uint16, base=10
    macFlowIDAck1, uint8, base=10, indent=1
    macFlowIDNak1, uint8, base=10
    macFlowID1, uint8, base=10
    grantByteSizeAck1, uint16, base=10
    grantByteSizeNak1, uint16, base=10
    grantByteSize1, uint16, base=10
    macFlowIDAck2, uint8, base=10, indent=1
    macFlowIDNak2, uint8, base=10
    macFlowID2, uint8, base=10
    grantByteSizeAck2, uint16, base=10
    grantByteSizeNak2, uint16, base=10
    grantByteSize2, uint16, base=10
    macFlowIDAck3, uint8, base=10, indent=1
    macFlowIDNak3, uint8, base=10
    macFlowID3, uint8, base=10
    grantByteSizeAck3, uint16, base=10
    grantByteSizeNak3, uint16, base=10
    grantByteSize3, uint16, base=10
End

Begin Message, Cp Spy CP_RCP_RTM3_PACKET_INFO_STATES_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RTM3 Subframe Packet Info Stats, record, type=Rtm3SpyPktInfoStatesT, maxsize=4, size=end
End

Begin Record, Rtm3SpyPktInfoStatesT
    SubframeCnt, uint32, base=10, indent=1
    CandidatePktSzIdxSet, uint16, base=10
    pktSzInBits, uint16, base=10
    TransmitMode, uint8, base=enum:HICAP/LOLAT
    txT2Pmax, uint16,  scale=Q2, format=%10.8f
    smallestDataUnit, uint16, base=10
    activeFlowNo, uint8, base=10
    macFlowID0, uint8, base=10, indent=1
    NonEmpty0, uint8, base=enum:FALSE/TRUE
    Eligible0, uint8, base=enum:FALSE/TRUE
    InitialQueueSize0, uint32, base=10
    potentialT2POutflow0, uint32,  scale=Q8, format=%10.8f
    queueOutflow0, uint32, base=10
    grantByteSize0, uint16, base=10
    grantByteSizeSent0, uint16, base=10
    macFlowID1, uint8, base=10, indent=1
    NonEmpty1, uint8, base=enum:FALSE/TRUE
    Eligible1, uint8, base=enum:FALSE/TRUE
    InitialQueueSize1, uint32, base=10
    potentialT2POutflow1, uint32,  scale=Q8, format=%10.8f
    queueOutflow1, uint32, base=10
    grantByteSize1, uint16, base=10
    grantByteSizeSent1, uint16, base=10
    macFlowID2, uint8, base=10, indent=1
    NonEmpty2, uint8, base=enum:FALSE/TRUE
    Eligible2, uint8, base=enum:FALSE/TRUE
    InitialQueueSize2, uint32, base=10
    potentialT2POutflow2, uint32,  scale=Q8, format=%10.8f
    queueOutflow2, uint32, base=10
    grantByteSize2, uint16, base=10
    grantByteSizeSent2, uint16, base=10
    macFlowID3, uint8, base=10, indent=1
    NonEmpty3, uint8, base=enum:FALSE/TRUE
    Eligible3, uint8, base=enum:FALSE/TRUE
    InitialQueueSize3, uint32, base=10
    potentialT2POutflow3, uint32,  scale=Q8, format=%10.8f
    queueOutflow3, uint32, base=10
    grantByteSize3, uint16, base=10
    grantByteSizeSent3, uint16, base=10
End

Begin Message, Cp Spy CP_RCP_RTM3_T2P_STATES_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RTM3 QoS Stats, record, type=RTM3QoSStatsT, maxsize=3, size=end
End

Begin Record, RTM3QoSStatsT
    txT2P, uint16,  scale=Q7, format=%10.8f, indent=1
    SubpktId, uint8, base=10
    SubframeCnt, uint32, base=10
    pktSzInBits, uint16, base=10
    SumPayload, uint16, base=10
    HRDStatus, uint8, base=enum:FALSE/TRUE
    pilotStrength, int16,  scale=Q2, format=%10.8f
    frab, int8,  scale=Q7, format=%10.8f
    activeFlowNo, uint8, base=10
    macFlowID0, uint8, base=10, indent=1
    grantByteSize0, uint16, base=10
    t2POutflow0, int32,  scale=Q8, format=%10.8f
    bucketLevelSat0, int32,  scale=Q7, format=%10.8f
    qrab0, uint8, base=10
    deltaT2PInflow0, int32,  scale=Q8, format=%10.8f
    t2PInflow0, int32,  scale=Q8, format=%10.8f
    tT2PHold0, int8, base=10
    bucketLevel0, int32,  scale=Q6, format=%10.8f
    bucketFactor0, int32,  scale=Q8, format=%10.8f
    macFlowID1, uint8, base=10, indent=1
    grantByteSize1, uint16, base=10
    t2POutflow1, int32,  scale=Q8, format=%10.8f
    bucketLevelSat1, int32,  scale=Q7, format=%10.8f
    qrab1, uint8, base=10
    deltaT2PInflow1, int32,  scale=Q8, format=%10.8f
    t2PInflow1, int32,  scale=Q8, format=%10.8f
    tT2PHold1, int8, base=10
    bucketLevel1, int32,  scale=Q6, format=%10.8f
    bucketFactor1, int32,  scale=Q8, format=%10.8f
    macFlowID2, uint8, base=10, indent=1
    grantByteSize2, uint16, base=10
    t2POutflow2, int32,  scale=Q8, format=%10.8f
    bucketLevelSat2, int32,  scale=Q7, format=%10.8f
    qrab2, uint8, base=10
    deltaT2PInflow2, int32,  scale=Q8, format=%10.8f
    t2PInflow2, int32,  scale=Q8, format=%10.8f
    tT2PHold2, int8, base=10
    bucketLevel2, int32,  scale=Q6, format=%10.8f
    bucketFactor2, int32,  scale=Q8, format=%10.8f
    macFlowID3, uint8, base=10, indent=1
    grantByteSize3, uint16, base=10
    t2POutflow3, int32,  scale=Q8, format=%10.8f
    bucketLevelSat3, int32,  scale=Q7, format=%10.8f
    qrab3, uint8, base=10
    deltaT2PInflow3, int32,  scale=Q8, format=%10.8f
    t2PInflow3, int32,  scale=Q8, format=%10.8f
    tT2PHold3, int8, base=10
    bucketLevel3, int32,  scale=Q6, format=%10.8f
    bucketFactor3, int32,  scale=Q8, format=%10.8f
End

Begin Message, Cp Spy CP_RCP_RTM3_PACKET_PERF_STATES_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    TotalRevPhySubFrame, uint32, base=10
    TotalAckBits(128bits unit), uint32, base=10
    NakSubPackets, uint32, base=10
    NakPackets, uint32, base=10
    TotalTxSubPacket, uint32, base=10
    TotalTxNewPacket, uint32, base=10
    RevSubPER(percent), uint32, scale=Q4, format=%4.2f
    RevPER(percent), uint32, scale=Q4, format=%4.2f
    PHY_ThrPut(kbps), uint32, scale=Q4, format=%4.2f
    AT_ThrPut(kbps), uint32, scale=Q4, format=%4.2f
End

Begin Message, Cp Spy CP_RCP_TX_DMA_ACK_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    TxDMA_AckData, array, type=uint8, maxsize=20, size=20
End

Begin Message, Cp Spy CP_RCP_OTA_MSG_SPY Rsp, BitPack, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Rec, record, type=DO DSA Msg Rec, maxsize=1
End

Begin Message, Cp Spy CP_RCP_PCP_PKT_SPY Rsp, BitPack, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    NumConPkt, uint8, indent = 2
    Rec, record, type=DO ConnLayer Rec, size=NumConPkt,maxsize=10
End

Begin Record, DO ConnLayer Rec, BitPack
    Length, uint8, indent = 2
    StreamNum, bit, count=2,indent=2,pos=none
    Reserved, bit, count=4,indent=2,exist=(StreamNum==0),pos=none
    Fragmented, bit, count=1,indent=2,exist=(StreamNum==0),pos=none
    Begin, bit, count=1,indent=2,exist=((StreamNum==0)) && ((Fragmented==1)),pos=none
    End, bit, count=1,indent=2,exist=((StreamNum==0)) && ((Fragmented==1)),pos=none
    SLP-F SequenceNumber, bit, count=6,indent=2,exist=((StreamNum==0)) && ((Fragmented==1)),pos=none
    FullHeaderIncluded, bit, count=1,indent=2,exist=(StreamNum==0),pos=none
    AckSequenceValid, bit, count=1,indent=2,exist=((StreamNum==0)) && ((FullHeaderIncluded==1)),pos=none
    AckSequenceNumber, bit, count=3,indent=2,exist=((StreamNum==0)) && ((FullHeaderIncluded==1)),pos=none
    SequenceValid, bit, count=1,indent=2,exist=((StreamNum==0)) && ((FullHeaderIncluded==1)),pos=none
    SLP-D SequenceNumber, bit, count=3,indent=2,exist=((StreamNum==0)) && ((FullHeaderIncluded==1)),pos=none
    InConfigurationProtocol, bit, count=1,indent=2,exist=(StreamNum==0),pos=none
    Type, bit, count=7,indent=1,base=enum:DO Protocol Type Enum,exist=(StreamNum==0),pos=none
    Type2, bit,count=8,indent=2,exist=((Type==26)) && ((StreamNum==0)),pos=none
    data1, array,type=uint8,size=(Length-2),maxsize=254,exist=(((Fragmented==0)&&(FullHeaderIncluded==0))) && ((StreamNum==0))
    data2, array,type=uint8,size=(Length-3),maxsize=254,exist=(((Fragmented==0)&&(FullHeaderIncluded==1))) && ((StreamNum==0))
    data3, array,type=uint8,size=(Length-4),maxsize=254,exist=(((Fragmented==1)&&(FullHeaderIncluded==1))) && ((StreamNum==0))
    data4, array,type=uint8,size=(Length-3),maxsize=254,exist=(((Fragmented==1)&&(FullHeaderIncluded==0))) && ((StreamNum==0))
    PktHdr, bit,count=6,indent=2,exist=(StreamNum!=0),pos=none
    data, array, type=uint8, size=(Length-1), maxsize=256,exist=(StreamNum!=0)
End

Begin Message, Cp Spy CP_RCP_SLPD_ACK_SPY Rsp, BitPack, PrintOnly
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    AckSequenceValid, bit, count=1,indent=2,pos=none
    AckSequenceNumber, bit, count=3,indent=2,pos=none
    SequenceValid, bit, count=1,indent=2,pos=none
    SequenceNumber, bit,count=3,indent=2,pos=none
End

Begin Message, Cp Spy CP_RCP_SNP_RAW_DATA_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ChannelType, uint8, base=enum:DO PhyChanType Enum,indent=2
    Subtype, uint16
    Raw Data, array, type=uint8, maxsize=600, size=end, columns=60, indent=2
End

Begin Message, Cp Spy CP_RCP_RTAP_STATE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RtapStatus, uint32, base=enum:Inactive/Idle/Connected
    AppType, uint16
    bTestPktMode, uint8
    TestPktPersistence, uint8
    CfgPktRateMode, uint8
    bCfgPktPayloadSizeMode, uint8
    bCfgEnACRateMode, uint8
    bCfgBurstMode, uint8
    bTstPktOverWrite, uint8
    TstPktBufNum, uint8
End

Begin Message, Cp Spy CP_RCP_FTAP_STATE_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FwdSysTime, uint16
    FtapAppType, uint16
    byteSent, uint16
    RevMacID, uint8
    RecNum, uint8
    FwdSeq, array, type=uint16, maxsize=16, size=16
End

Begin Message, Cp Spy CP_RCP_FTAP_LB_PKT_SPY_ID Rsp, PrintOnly, BitPack
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Stream, bit, count=2,indent=1,pos=none
    ProtocolID, bit, count=2,pos=none
    PacketType, bit, count=4,pos=none
    FwdSysTime, bit, count=15,base=16,pos=none
    LBPktOverFlow, bit, count=1,pos=none
    RecordCount, bit,count=5,pos=none
    FwdPktRecord, record,type=FTAP Fwd Pkt Rec,size=RecordCount,maxsize=16,exist=(PacketType==1)
    PL2FwdPktRecord, record,type=FETAP Fwd Pkt Rec,size=RecordCount,maxsize=16,exist=(PacketType==2)
    Reserved, bit,count=-8,indent=1,pos=none
End

Begin Record, FTAP Fwd Pkt Rec, BitPack
    TCAMsgSeqIncluded, bit, count=1,indent=2,pos=none
    TCAMsgSeq, bit, count=8,exist=(TCAMsgSeqIncluded==1),pos=none
    DRCCover, bit, count=3,pos=none
    FwdPhysSlots, bit, count=4,pos=none
    FwdMACPkts, bit, count=2,pos=none
    FwdSeqIncluded, bit, count=1,pos=none
    FwdSeq, bit,count=14,exist=(FwdSeqIncluded==1),pos=none
End

Begin Record, FETAP Fwd Pkt Rec, BitPack
    TCAMsgSeqIncluded, bit, count=1,indent=2,pos=none
    TCAMsgSeq, bit, count=8,exist=(TCAMsgSeqIncluded==1),pos=none
    DRCCover, bit, count=3,pos=none
    FwdPhysSlots, bit, count=4,pos=none
    PL2PktSizeIdx, bit, count=4,pos=none
    FwdSeqIncluded, bit, count=1,pos=none
    FwdSeq, bit,count=14,exist=(FwdSeqIncluded==1),pos=none
End

Begin Message, Cp Spy CP_SYS_CPBUF_FWD_STATE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf FWD Stats, record, type=CPBufStatus, maxsize=1
End

Begin Record, CPBufStatus
    NumOfFree, uint16, base=10, indent=1
    NumOfBusy, uint16, base=10, indent=1
    NumOfFreeI, uint16, base=10, indent=1
    NumOfBusyI, uint16, base=10, indent=1
    NumOfFreeS, uint16, base=10, indent=1
    NumOfBusyS, uint16, base=10, indent=1
    NumOfCorrupted, uint16, base=10, indent=1
    HighWaterLevel, uint16, base=10, indent=1
    LowWaterMarkCount, uint16, base=10, indent=1
End

Begin Message, Cp Spy CP_SYS_CPBUF_FWD_IRAM_FREE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf FWD IRAM Free Block, record, type=CPBufRAMFreeList, maxsize=12, size=end
End

Begin Record, CPBufRAMFreeList
    refcount, uint32, base=10
    dataPtr, uint32, base=16
    funcPtr, uint32, base=16
End

Begin Message, Cp Spy CP_SYS_CPBUF_FWD_IRAM_BUSY_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf FWD IRAM Busy Block, record, type=CPBufRAMFreeList, maxsize=12, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_FWD_SRAM_FREE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf FWD SRAM Free Block, record, type=CPBufRAMFreeList, maxsize=30, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_FWD_SRAM_BUSY_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf FWD SRAM Busy Block, record, type=CPBufRAMFreeList, maxsize=30, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_REV_STATE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf REV Stats, record, type=CPBufStatus, maxsize=1
End

Begin Message, Cp Spy CP_SYS_CPBUF_REV_IRAM_FREE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf REV IRAM Free Block, record, type=CPBufRAMFreeList, maxsize=2, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_REV_IRAM_BUSY_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf REV IRAM Busy Block, record, type=CPBufRAMFreeList, maxsize=2, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_REV_SRAM_FREE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf REV SRAM Free Block, record, type=CPBufRAMFreeList, maxsize=30, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_REV_SRAM_BUSY_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf REV SRAM Busy Block, record, type=CPBufRAMFreeList, maxsize=30, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_SIG_STATE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf SIG Stats, record, type=CPBufStatus, maxsize=1
End

Begin Message, Cp Spy CP_SYS_CPBUF_SIG_IRAM_FREE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf SIG IRAM Free Block, record, type=CPBufRAMFreeList, maxsize=15, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_SIG_IRAM_BUSY_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf SIG IRAM Busy Block, record, type=CPBufRAMFreeList, maxsize=15, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_SIG_SRAM_FREE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf SIG SRAM Free Block, record, type=CPBufRAMFreeList, maxsize=30, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_SIG_SRAM_BUSY_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf SIG SRAM Busy Block, record, type=CPBufRAMFreeList, maxsize=30, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_HDR_STATE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf HDR Stats, record, type=CPBufStatus, maxsize=1
End

Begin Message, Cp Spy CP_SYS_CPBUF_HDR_IRAM_FREE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf HDR IRAM Free Block, record, type=CPBufRAMFreeList, maxsize=30, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_HDR_IRAM_BUSY_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf HDR IRAM Busy Block, record, type=CPBufRAMFreeList, maxsize=30, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_HDR_SRAM_FREE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf HDR SRAM Free Block, record, type=CPBufRAMFreeList, maxsize=30, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_HDR_SRAM_BUSY_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf HDR SRAM Busy Block, record, type=CPBufRAMFreeList, maxsize=30, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_FWD1X_STATE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf FWD1X Stats, record, type=CPBufStatus, maxsize=1
End

Begin Message, Cp Spy CP_SYS_CPBUF_FWD1X_SRAM_FREE_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf FWD1X SRAM Free Block, record, type=CPBufRAMFreeList, maxsize=30, size=end
End

Begin Message, Cp Spy CP_SYS_CPBUF_FWD1X_SRAM_BUSY_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    CpBuf FWD1X SRAM Busy Block, record, type=CPBufRAMFreeList, maxsize=30, size=end
End

Begin Message, Cp Spy CP SEC AKA AUTH SPY ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    rand, array, type=uint8, maxsize=16, size=16
    autn, array, type=uint8, maxsize=16, size=16
    rcvdMac, array, type=uint8, maxsize=8, size=8
    AMF, array, type=uint8, maxsize=2, size=2
    SQN, array, type=uint8, maxsize=6, size=6
    xMac, array, type=uint8, maxsize=8, size=8
    ik, array, type=uint8, maxsize=16, size=16
    ck, array, type=uint8, maxsize=16, size=16
    res, array, type=uint8, maxsize=16, size=16
End

Begin Message, Cp Spy CP SEC DERIVE MK SPY ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    identity, array, type=uint8, maxsize=72, size=72
    ck, array, type=uint8, maxsize=16, size=16
    ik, array, type=uint8, maxsize=16, size=16
    mk, array, type=uint8, maxsize=208, size=208
End

Begin Message, Cp Spy CP SEC DERIVE REAUTHXKEY SPY ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    identity, array, type=uint8, maxsize=72, size=72
    counter, array, type=uint8, maxsize=2, size=2
    nonces, array, type=uint8, maxsize=16, size=16
    mk, array, type=uint8, maxsize=20, size=20
    xkey, array, type=uint8, maxsize=20, size=20
End

Begin Message, Cp Spy CP SEC DERIVE MSK SPY ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    mk, array, type=uint8, maxsize=20, size=20
    msk, array, type=uint8, maxsize=20, size=20
End

Begin Message, Cp Spy CP SEC DERIVE MAC SPY ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    K_auth, array, type=uint8, maxsize=32, size=32
    MsgBody, array, type=uint8, maxsize=100, size=100
    MsgBody2, array, type=uint8, maxsize=100, size=100
    Mac, array, type=uint8, maxsize=16, size=16
End

Begin Message, Cp Spy CP SEC DERIVE PMK SPY ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Msk, array, type=uint8, maxsize=16, size=16
    Key, array, type=uint8, maxsize=16, size=16
    Pmk, array, type=uint8, maxsize=64, size=64
End

Begin Message, Cp Spy CP SEC AES CRYPT SPY ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    bEncrypt, uint8, base=enum:FALSE/TRUE
    K_auth, array, type=uint8, maxsize=16, size=16
    Iv, array, type=uint8, maxsize=16, size=16
    Data, array, type=uint8, maxsize=100, size=100
End

Begin Message, CP Spy VOCODER_MPP_ENC_IN_PCM_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, CP Spy VOCODER_MPP_ENC_PCKT_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, CP Spy VOCODER_SPP_DEC_IN_PCKT_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, CP Spy VOCODER_SPP_DEC_OUT_PCM_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, CP Spy VOCODER_STATUS_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, CP Spy VOCODER_CAPS_KPI_SPY Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint32, maxsize=100, size=end, columns=60
End

Begin Message, ETS CP Get Exe Fault Dump Log Rsp
End

Begin Message, ETS CP Clr Exe Fault Dump Log Rsp
End

Begin Message, ETS CP Check New Halt Log Rsp
    New Log, uint8,  base=enum:False/True
    CrashCount, uint16, base=10
End

Begin Message, ETS CP Enable Boot Dump RAM Rsp
    Disable/Enable, uint8, base=enum:False/True
    Save Setting To File, uint8, base=enum:False/True
End

Begin Message, ETS CP Exe Silent Log Setting Rsp
    Result, uint8, base=enum:False/True      ,indent = 1
    Media Type, uint8, base=enum:Exe Silent Log Media Type,indent = 1
    Log Limit Size, uint32, base=16,indent = 1
    Ets Log Freeze, uint8, base=enum:False/True,indent = 1
    Sd Card File Name, string, length=32   ,indent = 1
End

Begin Message, ETS CP Exe Silent Log Ctrl Rsp
    Control Type, uint8, base=enum:Exe Silent Log Crtl Type
    Result, uint8, base=enum:False/True
End

Begin Message, ETS CP BOOT Reset Flag Rsp
    Reset Flag, uint32, base=enum:BOOT Reset Flag
End

Begin Message, ETS CP Get Memory Pool Info Rsp
    Memery Pool Count, uint16, base=10, indent=1
    Pool Rec, record, type=Memery Pool Information, maxsize=16, size=end
End

Begin Record, Memery Pool Information
    Pool Name, string, length=8, indent=1
    Pool Size, uint32, base=16, indent=1
    Free Space, uint32, base=16
    Pool Address, uint32, base=16
    Min Allocation Size, uint16, base=10
    Pool CB Addr, uint32, base=16
End

Begin Message, ETS CP Enable Boot Dog Before Jump Rsp
End

Begin Message, ETS CP CP Buf Busy Trace Ctrl Rsp
End

Begin Message, ETS CP Event History Trace Ctrl Rsp
End

Begin Message, ETS CP Task Event Log Setting Rsp
End

Begin Message, ETS CP Task Event Log Status Rsp
    Events, record, type=Event Log State Rec, maxsize=100, size=end
End

Begin Record, Event Log State Rec
    Event, uint8, base=enum:Thread Event Types, indent=1
    Enable, uint8, base=enum:False/True
End

Begin Message, ETS CP Enable Message Status Rsp
End

Begin Message, ETS CP Version Rsp
    Rec, record, type=CP Version, maxsize=sizeofenum:CP Unit, size=end
End

Begin Record, CP Version
    Unit, uint8, base=enum:CP Unit, indent=1
    Major, uint8, base=10
    Minor, uint8, base=10
    Rev, uint8, base=10
    Month, uint8, base=10
    Day, uint8, base=10
    Year, uint8, base=10
    Hour, uint8, base=10
    Min, uint8, base=10
End

Begin Message, ETS CP Memory Test Rsp
    Result, uint8, base=enum:Fail/Pass
    StopAddr, uint32
    Write, uint32
    Read, uint32
    PatternIdx, uint8
End

Begin Message, ETS CP Peek Rsp
    Address, uint32
    Words (16), uint8
    Data, array, type=uint16, maxsize=123, size=Words (16)
End

Begin Message, ETS CP Poke Rsp
    Address, uint32
    Words (16), uint8
End

Begin Message, ETS CP Vocoder Test Rsp
    Vocoder Test Finished, uint8,  base=enum:Fail/Pass
    DownloadStartAddr, uint32
    DownloadWordsUsed, uint32
    UploadStartAddr, uint32
    UploadWordsCreated, uint32
    MaxCompPackets, uint32
    NumCompPackets, uint32
    MaxPcmWords, uint32
    NumPcmWords, uint32
End

Begin Message, ETS CP Speech Write Rsp
    Sequence Num, uint32
    Ack Type, uint8, base=enum:Ack/Nack
End

Begin Message, ETS CP Speech Read Rsp
    Sequence Num, uint32
    Checksum, uint16
    Num Bytes, uint8
    Data, array, type=uint8, size=Num Bytes, maxsize=240
End

Begin Message, ETS CP DB Block Write Rsp
    Sequence Num, uint32
    DB Id, uint8, base=enum:Block Database List
    Ack Type, uint8, base=enum:Ack/Nack
End

Begin Message, ETS CP DB Block Read Rsp
    Sequence Num, uint32
    DB Id, uint32, base=enum:Block Database List
    DB Size, uint32
    Offset, uint32
    Checksum, uint16
    Num Bytes, uint16
    Data, array, type=uint8, size=Num Bytes, maxsize=256
End

Begin Message, ETS CP CBP Version Rsp
    Asic Type, string, length=14
    Chip Id Hi, uint16
    Chip Id Low, uint16
    DSPM Num Patches, uint16, base=10, indent=1
    DSPM Build Date, string, length=13
    DSPM Build Time, string, length=8
    DSPM Patch Revision, string, length=11
    DSPM Patchset Id, uint8,  base=10, indent=1
    DSPM Patchset Name, string, length=16
    DSPM Patchset Code Size, uint16, base=16
    RecM, record, type=DSPM Patch Match Address, size= DSPM Num Patches, maxsize=18
    DSPV Num Patches, uint16, base=10, indent=1
    DSPV Build Date, string, length=13
    DSPV Build Time, string, length=8
    DSPV Patch Revision, string, length=11
    DSPV Patchset Id, uint8,  base=10, indent=1
    DSPV Patchset Name, string, length=16
    DSPV Patchset Code Size, uint16, base=16
    RecV, record, type=DSPV Patch Match Address, size= DSPV Num Patches, maxsize=16
End

Begin Record, DSPM Patch Match Address
    DSPM Patch Address, int16, base=16, indent=2
    DSPM Match Address, int16, base=16
End

Begin Record, DSPV Patch Match Address
    DSPV Patch Address, int16, base=16, indent=2
    DSPV Match Address, int16, base=16
End

Begin Message, CP Pin Muxing DSP ICE or UIM Rsp
End

Begin Message, ETS CP Read GPIO Rsp
    Data, uint8, base=enum:False/True
End

Begin Message, ETS CP Monitor GPIO Rsp
    Direction, uint8, base=enum:GPIO Data
    Data, uint8
End

Begin Message, ETS CP Boot Version Rsp
    Rec, record, type=CP Version, maxsize=2, size=end
End

Begin Message, ETS CP Boot Compatibility Rsp
    Actual BOOT version, string, length=12, indent=1
    Actual Compat ID, uint32, base=10
    Expected BOOT version, string, length=12, indent=1
    Expected Compat ID, uint32, base=10
End

Begin Message, ETS CP Boot to Loader Rsp
End

Begin Message, ETS CP Configuration Info Rsp
    Asic Type, uint8, base=enum:ASIC Id,       globalvar=GBL_ASIC_TYPE, indent=1
    Asic Version, uint8, base=enum:SysVersion Id, globalvar=GBL_ASIC_VER, indent=1
    DSPM Patch Id, uint8,                          globalvar=GBL_DSPM_PATCH_ID, indent=1
    DSPV Patch Id, uint8,                          globalvar=GBL_DSPV_PATCH_ID, indent=1
    RF Option, uint8, base=enum:RFOption Id,     globalvar=GBL_RF_OPTION, indent=1
    Ref Clock Freq, uint8, base=enum:RefClockFreq Id, globalvar=GBL_REF_FREQ, indent=1
    UIM Enabled, uint8, base=enum:False/True,    globalvar=GBL_UIM_SUPPORTED, indent=1
    FSM Enabled, uint8,  base=enum:False/True,   globalvar=GBL_FSM_SUPPORTED, indent=1
    Data Service Enabled, uint8, base=enum:False/True,    globalvar=GBL_DATA_SERVICE_SUPPORTED, indent=1
    SCH Enabled, uint8, base=enum:False/True,    globalvar=GBL_SCH_SUPPORTED, indent=1
    Diversity Enabled, uint8, base=enum:False/True,    globalvar=GBL_DIVERSITY_SUPPORTED, indent=1
    GPS  Enabled, uint8, base=enum:False/True,    globalvar=GBL_GPS_SUPPORTED, indent=1
    Aux ADC Polling, uint8, base=enum:False/True,    globalvar=GBL_AUX_ADC_POLLING, indent=1
    Digital RxAGC Enabled, uint8, base=enum:False/True,    globalvar=GBL_DIGITAL_RXAGC_SUPPORTED, indent=1
    Manufacturer Id, string, length=20, indent=1
    Model  Id, string, length=20, indent=1
    CP Version Major, uint8, base=10, indent=1
    CP Version Minor, uint8, base=10, indent=1
    CP Version Rev, uint8, base=10, indent=1
    CP MobileID Type, uint8, base=enum:CP Mobile ID Type, indent=1
    CP EPRL Supported, uint8, base=enum:False/True,    globalvar=GBL_EPRL_SUPPORTED, indent=1
End

Begin Message, ETS CP Bitwise Operation Rsp
    OldValue, uint16
    NewValue, uint16
End

Begin Message, ETS CP Test DSPM Boot Code Rsp
    Ack, uint32
End

Begin Message, ETS CP Test DSPV Boot Code Rsp
    Ack, uint32
End

Begin Message, ETS CP Profile Stop Rsp
    Section1, record, type=Profile Section1, maxsize=1
    Section2, record, type=Profile Section2, maxsize=1, size=end, ConsumeBytes=0
End

Begin Record, Profile Section1
    To save profile data to a PC please execute "File/Data Upload..." with Start Address, uint32, indent=1
    Number of words (16), uint32
End

Begin Record, Profile Section2
    A second set of data also needs to be saved with Start Address, uint32, indent=1
    Number of words (16), uint32
End

Begin Message, ETS CP Profile Get Data Size Rsp
    Section1, record, type=Profile Section1, maxsize=1
    Section2, record, type=Profile Section2, maxsize=1, size=end, ConsumeBytes=0
End

Begin Message, ETS CP Profile Get Debug Info Rsp
    Installed SRAM Size, uint32, indent=1
    Available SRAM Size, uint32, indent=1
    Available SRAM Addr, uint32, indent=1
    Max Number Of Entries, uint32, base=10, indent=1
    Start Address1, uint32, indent=1
    Number of words1 (16), uint32, indent=1
    Number Of Entries1, uint32, base=10, indent=1
    Buffer Rolled Over, uint8,  base=enum:No/Yes, indent=1
    Start Address2, uint32, indent=1
    Number of words2 (16), uint32, indent=1
    Number Of Entries2, uint32, base=10, indent=1
End

Begin Message, ETS CP MonPrintf Ctrl Rsp
    Disable Or Enable, uint8
    Save Setting To File, uint8
End

Begin Message, ETS CP Profile Set Mode Rsp, BitPack
    Run Indefinitely, bit, count=6,base=enum:Off/On,pos=none
    Auto Start, bit, count=1,base=enum:Off/On,pos=none
    Statistics Type, bit,count=1,base=enum:Performance Stats and Thread Id History/Thread Id History Only,pos=none
End

Begin Message, ETS CP Profile Get Mode Rsp, BitPack
    Run Indefinitely, bit, count=6,base=enum:Off/On,pos=none
    Auto Start, bit, count=1,base=enum:Off/On,pos=none
    Statistics Type, bit,count=1,base=enum:Performance Stats and Thread Id History/Thread Id History Only,pos=none
End

Begin Message, ETS CP CBP SW Version Rsp
    StrLen, uint8,  base=10, indent=1
    CBP Software Version, string, size=StrLen, columns=1
End

Begin Message, ETS CP Reset Processor Rsp
    Processor Id, uint8, base=enum:Processor Id
End

Begin Message, ETS CP Sleep Veto Ctrl Rsp
    Veto Bit Map, uint64
End

Begin Message, ETS CP MMU Control Rsp
    MMU Bit Map, uint32
End

Begin Message, ETS CP Bitwise 32 Operation Rsp
    OldValue, uint32
    NewValue, uint32
End

Begin Message, ETS CP MON MMU get TLB Entry Rsp
    phisicalAddress, uint32
    entry Address, uint32
    Tlb Entry, uint32
    Second Level Address, uint32
    Second Level Tlb, uint32
    Descriptor Type, uint8, base=enum:TLBDescriptor
    CB bits, uint8, base=enum:CacheBuffer
    Domain Bits, uint8, base=enum:DomainBits
    AP bits, uint8, base=enum:Access Permision
    MMU AP attributes, uint32, base=enum:MMU Access Permision
    tag, string,    length=16
End

Begin Message, ETS CP MON MMU get TLB Config Rsp
    TLB Config Table, record, type=CP MMU get TLB Config Entry, maxsize=84, size=end, indent=1
End

Begin Record, CP MMU get TLB Config Entry
    basePhyAddr, uint32, indent=1
    pageSize, uint32
    firstLevelPageType, uint32
    firstLevelCBbits, uint32
    firstLevelAPbits, uint32
    secondLevelBaseAddr, uint32
    valid, uint32
    tag, string,    length=16
End

Begin Message, ETS CP Get Features Support Rsp
    Carrier, uint8, base=enum:Sys Carrier Id, indent=1
    NumFeatures, uint8, base=10, indent=1
    Features, record, type=CP Sys Feature Support, maxsize=255, size=end, indent=1
End

Begin Record, CP Sys Feature Support
    Feature, uint8,  base=enum:Sys Features, indent=1
    Supported, uint8,  base=enum:FALSE/TRUE
    HW Variant, uint32, base=16
    SW Variant, uint32, base=16
End

Begin Message, ETS CP Get Entire TLB Rsp
    phisicalAddress, uint32
    entry Address, uint32
    Tlb Entry, uint32
    Second Level Address, uint32
    Second Level Tlb, uint32
    Descriptor Type, uint8, base=enum:TLBDescriptor
    CB bits, uint8, base=enum:CacheBuffer
    Domain Bits, uint8, base=enum:DomainBits
    AP bits, uint8, base=enum:Access Permision
    MMU AP attributes, uint32, base=enum:MMU Access Permision
    tag, string,    length=16
End

Begin Message, ETS CP Memory Bandwidth Rsp
    Total Time (ms), uint32, scale=Q5
    Bytes/sec, uint32, base=10
    Start Addr, uint32
    Number of Bytes, uint32,
    Xfer width, uint8, base=enum:XferWidth
    Burst Size, uint8, base=enum:BurstSize
    Read/Write, uint8, base=enum:ReadWrite
End

Begin Message, ETS CP MON Shmem Test By Timer Rsp
    Loop Timermode Iop channel, uint8, base=enum:IopChannelType
    Loop Timermode Schedule Time, uint32, base=10, min=10, max=1000
    Loop Timermode transfer length, uint32, base=10, min=512, max=2048
    Loop Timermode Control, uint8, base=enum:switch,indent=1
End

Begin Message, ETS CP MON Shmem Test By Task Rsp
    Loop Taskmode Iop channel, uint8,base=enum:IopChannelType
    Loop Taskmode interval, uint32,base=10,min=10,max=1000
    Loop Taskmode tranfer length, uint32,base=10,min=512,max=2048
    Loop Task control, uint8,base=enum:switch,indent=1
End

Begin Message, ETS CP MON ESPI Test Rsp
    Status, uint8,  base=enum:ESPI Status
End

Begin Message, ETS CP MON SDIO Test Rsp
    Status, uint8,  base=enum:SDIO Status
    File Offset, uint32
    Block Offset, uint16
    Loopback Cnt, uint32, base=10
    Num Compare Err, uint32, base=10
    Num Len Mismatch, uint32, base=10
    Num Read Failures, uint32, base=10
End

Begin Message, ETS CP MON Get USB IDs Rsp
    Vendor ID, uint16, indent=1
    Product ID, uint16, indent=1
End

Begin Message, ETS CP Get Unit Build Info Rsp
    Unit, uint16, base=enum:CP Full Unit List
    Month, uint8,  base=10
    Day, uint8,  base=10
    Year, uint8,  base=10
    Hour, uint8,  base=10
    Min, uint8,  base=10
    Base Version, string, length=11
    Change List, record, type=ChangeList, maxsize=80, size=end, ConsumeBytes=0
End

Begin Record, ChangeList
    Change, string, length=8
End

Begin Message, ETS CP Memory Addresses Rsp
    NumOfMemSeg, uint32, base=10, indent=1
    MonMemSegAdrAndSizeEntry, record, type=CP MON Memory Segment, maxsize=84, size=end, indent=1
End

Begin Record, CP MON Memory Segment
    SegStartAdr, uint32,    base=16
    SegSize, uint32,    base=16
    SegType, uint32,    base=16
    SegName, string,    length=12
End

Begin Message, ETS CP CP or Boot Mode Rsp
    Mode, uint8, base=enum:Boot/CP, indent=1
End

Begin Message, ETS CP MON Silent Log Info Rsp
    Cmd, uint8,  base=enum:Silent Logging Cmd, indent=1
    State, uint8,  base=enum:Silent Log State,   indent=1
    Count, uint16, base=enum:Silent Log Count, default=0, indent=1
    Continuous, uint8,  base=enum:Parm Chg,     indent=1
    Log Faults, uint8,  base=enum:Parm Chg,     indent=1
    FileName, string, length=128, columns=30, indent=1
End

Begin Message, ETS CP Configuration Update Rsp
    UIM Enabled, uint8, base=enum:False/True,    globalvar=GBL_UIM_SUPPORTED, indent=1
End

Begin Message, ETS CP BB Write Rsp
    Sequence Num, uint32
    Ack Type, uint8, base=enum:Ack/Nack
End

Begin Message, ETS CP BB Read Rsp
    Sequence Num, uint32
    Num Words, uint16
    Data, array, type=uint16, size=Num Words, maxsize=64
End

Begin Message, ETS CP BB Checksum Rsp
    Checksum, uint16
End

Begin Message, ETS CP Boot vRM Update Rsp
    Percent(%), uint8
End

Begin Message, ETS CP Boot Erase UA Flag Rsp
    Return value, uint8
End

Begin Message, ETS CP Boot vRM Start Rsp
    Return value, uint8
End

Begin Message, ETS CP Boot Reboot Rsp
    Return value, uint8
End

Begin Message, ETS CP FOTA Update Rsp
    Return value, uint8
End

Begin Message, ETS CP Flash Id Rsp
    Manf Id, uint16
    Dev Id0, uint16
    Dev Id1, uint16
    Dev Id2, uint16
    Flash size, uint32
End

Begin Message, ETS CP Flash Erase Rsp
    Section Type, uint8, base=enum:Flash Erase Sections
End

Begin Message, ETS CP Flash Program Rsp
    Sequence Num, uint32
    Ack Type, uint8, base=enum:Ack/Nack
End

Begin Message, ETS CP Flash Section Info Rsp
    Sector Rec, record, type=Flash Section Info, maxsize=30, size=end
End

Begin Record, Flash Section Info
    Section, uint8, base=enum:Flash Info Sections, indent=1
    Start Addr, uint32, base=16
    Num Bytes, uint32, base=16
End

Begin Message, ETS CP Flash Addr Erase Rsp
    Start Address, uint32
    Erase size, uint32
End

Begin Message, ETS CP Flash Addr Program Rsp
    Sequence Num, uint32
    Ack Type, uint8, base=enum:Ack/Nack
End

Begin Message, ETS CP Flash Get Status Rsp
    BootSelect, uint32, base=enum:Boot Status Types
    StatusReg1, uint32, base=16
    StatusReg2, uint32, base=16
    StatusReg3, uint32, base=16
End

Begin Message, ETS ASICBOOT_AP_MSGID_ACK Rsp
End

Begin Message, ETS ASICBOOT_AP_MSGID_NACK Rsp
    Status, uint16, base=enum:Boot From AP Errors
    SeqNum, uint16, base=16
    MState, uint8,  base=enum:Handshake/CfgHwdReg/GetHeader/DownloadSW/End
End

Begin Message, ETS ASICBOOT_AP_MSGID_PEEK Rsp
    PeekData, array, type=uint8, size=end, maxsize=127
End

Begin Message, ETS CP DB Clear Rsp
End

Begin Message, ETS CP DB Cache Rsp
End

Begin Message, ETS CP DB Flush Rsp
End

Begin Message, CP DB Read CP Read Rsp
    Segment, uint16,  base=enum:CP DB Segments
    Offset, uint16, base=10
    Bytes, uint16, base=10, max=548
    Data, array,  type=uint8, maxsize=548, size=Bytes
End

Begin Message, CP DB Read RF Read Rsp
    Segment, uint16,  base=enum:RF DB Segments
    Offset, uint16, base=10
    Bytes, uint16, base=10, max=300
    Data, array,  type=uint8, maxsize=300, size=Bytes
End

Begin Message, CP DB Write CP Write Rsp
End

Begin Message, CP DB Write RF Write Rsp
End

Begin Message, ETS CP Pwr Savings Get Mode Rsp
    Pwr Saving Mode, uint8, base=enum:Power Save Modes
    Main Rx, uint8,  base=enum:Ext Rf Ctrl Modes
    Div Rx, uint8,  base=enum:Ext Rf Ctrl Modes
    Sec Rx, uint8,  base=enum:Ext Rf Ctrl Modes
    Main Tx, uint8,  base=enum:Ext Rf Ctrl Modes
    Aux Tx, uint8,  base=enum:Ext Rf Ctrl Modes
End

Begin Message, ETS CP Rf Driver Command Rsp
    Return Code, uint8, base=enum:FALSE/TRUE
End

Begin Message, ETS CP Cal Initialize Rsp
End

Begin Message, ETS CP PLL Channel Config Rsp
End

Begin Message, ETS CP Get PLL Channel Rsp
    Band, uint8,  base=enum:Cdma Band
    Channel, uint16
End

Begin Message, ETS CP Read Current Temperature Rsp
    CurrentTempCelsius, int16
End

Begin Message, ETS CP Read Current Batt Voltage Rsp
    CurrentBattVoltage, int16
End

Begin Message, ETS CP Read Current Tx Power Rsp
    CurrentTxPower, int16, scale=Q6
End

Begin Message, ETS CP Cal Init NVRAM Rsp
End

Begin Message, ETS CP Get RF Constants Rsp
    Tx Mdm Delay, uint16, base=10
    TCXO Settle (ms), uint16, base=10
    SlpOvr to ResyncDly (ticks), uint16, base=10
    Rx Vco Settle (ms), uint16, base=10
    Rx Slotted Backoff (ms), uint16, base=10
    Rx Agc Settle (symb), uint16, base=10
    Mini Acq Time (us), uint16, base=10
    Channel Normalization time (us), uint16, base=10
    Tx Dac Filter Tune Value, uint16, base=16
    Tx Macro Ctrl Delay, int32, base=10
    Tx Off Macro Drv Delay, int32, base=10
    Tx Off Macro 1x Delay, int32, base=10
    Tx Off Macro DO Delay, int32, base=10
    Tx TPC Timing Adjust, int32, base=10
    Tx TPC Timing Adjust Value, int32, base=10
    Tx OFF Trailing Zeros 1x Value, int32, base=10
    Tx OFF Trailing Zeros DO Value, int32, base=10
End

Begin Message, ETS CP Get RxTx IQ Swap Rsp
    RxSwap, uint8, base=enum:No Swap/Swap
    TxSwap, uint8, base=enum:No Swap/Swap
    DivRxSwap, uint8, base=enum:No Swap/Swap
End

Begin Message, ETS CP Get Rx AGC Default Hysteresis Rsp
    Gain States, uint16, base=enum:Hwd Digital Gain States
    Gain State Switch Levels, record, type=Hwd Rx Switch Levels, maxsize=8
    Gain State Transition Delays, record, type=Rx Transition Delays, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Default Parameters, maxsize=1
End

Begin Record, Hwd Rx Switch Levels
    Lower Switch Level dB, int16,  scale=Q6
    Upper Switch Level dB, int16,  scale=Q6
End

Begin Record, Rx Transition Delays
    Low Step Delay Count, uint16, base=10
    High Step Delay Count, uint16, base=10
End

Begin Record, Rx Hyst Default Parameters
    High Gain Hyst Threshold dB, int16,  scale=Q6
    High Gain Hyst Delay Count, uint16, base=10
End

Begin Message, ETS 1x Rx Agc Get Parms Rsp
    Power, int16,  scale=Q6
    HW Value, uint16, base=16
End

Begin Message, ETS 1x Tx Agc Get Parms Rsp
    Power, int16,  scale=Q6
    HW Value, uint32, base=16
End

Begin Message, ETS CP AFC Get Parms Rsp
    Pdm Val, uint16, min=0, max=0xfff, default=0x3ff
End

Begin Message, ETS DSPM TxAGC Closed Loop Status Rsp
    TxAGC Status, uint16, base=enum:Off/On
End

Begin Message, ETS CP_SYS_CPBUF_STATUS_CMD Rsp
    NumOfBusyFwdIram, uint16, base=10, indent=1
    HiWaterMarkFwdIram, uint16, base=10
    NumOfBusyFwdSram, uint16, base=10, indent=1
    HiWaterMarkFwdSram, uint16, base=10
    NumOfBusyRevIram, uint16, base=10, indent=1
    HiWaterMarkRevIram, uint16, base=10
    NumOfBusyRevSram, uint16, base=10, indent=1
    HiWaterMarkRevSram, uint16, base=10
    NumOfBusySigIram, uint16, base=10, indent=1
    HiWaterMarkSigIram, uint16, base=10
    NumOfBusySigSram, uint16, base=10, indent=1
    HiWaterMarkSigSram, uint16, base=10
    NumOfBusyHdrIram, uint16, base=10, indent=1
    HiWaterMarkHdrIram, uint16, base=10
    NumOfBusyHdrSram, uint16, base=10, indent=1
    HiWaterMarkHdrSram, uint16, base=10
    NumOfBusyFwd1xSram, uint16, base=10, indent=1
    HiWaterMarkFwd1xSram, uint16, base=10
End

Begin Message, ETS CP TCP ACK Tag Rate Get Rsp
    pureAckTagRateTD, uint8, base=10
    pureAckTagRate, uint8, base=10
End

Begin Message, ETS CP HLP Throttling Timer Status Get Rsp
    Throttling Timer Type=HSPD  Status, uint32, base=16, indent=1
    SysID1-1, uint32, base=16
    SysID2-1, uint32, base=16
    SysID3-1, uint32, base=16
    SysID4-1, uint32, base=16
    SysID5-1, uint32, base=16
    SysID6-1, uint32, base=16
    SysID7-1, uint32, base=16
    Throttling Timer Type=HRPD  Status, uint32, base=16, indent=1
    SysID1-2, uint32, base=16
    SysID2-2, uint32, base=16
    SysID3-2, uint32, base=16
    SysID4-2, uint32, base=16
    SysID5-2, uint32, base=16
    SysID6-2, uint32, base=16
    SysID7-2, uint32, base=16
    Throttling Timer Type=eHRPD Status, uint32, base=16, indent=1
    SysID1-3, uint32, base=16
    SysID2-3, uint32, base=16
    SysID3-3, uint32, base=16
    SysID4-3, uint32, base=16
    SysID5-3, uint32, base=16
    SysID6-3, uint32, base=16
    SysID7-3, uint32, base=16
End

Begin Message, ETS CP IP6 UDP Connection Open Rsp
    Sap, uint8,  base=10
End

Begin Message, ETS CP IP6 TCP Connection Open Rsp
    Sap, uint8,  base=10
End

Begin Message, ETS CP Get PDN INFO Cmd Rsp
    PdnNum, uint8
    MainPdnId, uint8
    PdnInfo, record, type=PDN Info Rec, maxsize=5
    APN1Len, uint8, indent=1
    APN2Len, uint8
    APN3Len, uint8
    APN4Len, uint8
    APN5Len, uint8
    APN1, string, length = 101, indent=1
    APN2, string, length = 101, indent=1
    APN3, string, length = 101, indent=1
    APN4, string, length = 101, indent=1
    APN5, string, length = 101, indent=1
End

Begin Message, ETS CP L1D Diagnostic Parms Rsp
    Tx Power, int16,  scale=Q6, indent=1
    Rx Power, int16,  scale=Q6, indent=1
    Active Set Num, uint8,  indent=1
    Candidate Set Num, uint8,  indent=1
    Neighbor Set Num, uint8,  indent=1
    Active Set Rec, record, type=Diagnostic Parms1, maxsize=6
    Candidate Set, record, type=Diagnostic Parms2, maxsize=10
    Neighbor Set, record, type=Diagnostic Parms3, maxsize=40
    FCH Walsh Code, array,  type=uint16, maxsize=6, indent=1
    DCCH Walsh Code, array,  type=uint16, maxsize=6, indent=1
    Act Set Srch Win, uint16,  indent=1
    Nghbr Set Srch Win, uint16,  indent=1
    Rem Set Srch Win, uint16,  indent=1
End

Begin Record, Diagnostic Parms1
    Active Set - PN Offset, uint16, base=10, indent=1
    Pilot Ec/Io, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
End

Begin Record, Diagnostic Parms2
    Candidate Set - PN Offset, uint16, base=10, indent=1
    Pilot Ec/Io, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
End

Begin Record, Diagnostic Parms3
    Neighbor Set - PN Offset, uint16, base=10, indent=1
    Pilot Ec/Io, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
End

Begin Message, ETS CP L1D Get Phone State Rsp
    Current Mode, uint8, base=10,  indent=1
    Phone Type, uint8, base=10,  indent=1
    CurrentChannel, uint16, base=10, indent=1
    PARangeVal, uint16, base=10, indent=1
    CurrentAudioPath, uint16, base=10, indent=1
    TxState, uint16, base=10, indent=1
    SynthLock, uint16, base=10, indent=1
    LNARange, uint16, base=10, indent=1
    FmTxMuteState, uint16, base=10, indent=1
    FmRxMuteState, uint16, base=10, indent=1
    CompressorState, uint16, base=10, indent=1
    ExpandorState, uint16, base=10, indent=1
    SatColorCodeState, uint16, base=10, indent=1
    CurrentFmState, uint16, base=10, indent=1
    CurrentVocoderRate, uint16, base=10, indent=1
    CurrentTxPunctureRate, uint16, base=10, indent=1
    CurrentCDMAState, uint16, base=10, indent=1
    Gpio_0, uint32, indent=1
    Gpio_1, uint32, indent=1
    Gpio_i_o_0, uint32, indent=1
    Gpio_i_o_1, uint32, indent=1
End

Begin Message, ETS CP L1D Fpc Cal Factor Rsp
    CalFactors, array, type=int16, maxsize=8, columns=60
End

Begin Message, ETS CP Random Number Calc Rsp
    Rngs, record, type=RngRecord, maxsize=10, size=end
End

Begin Record, RngRecord
    SeqNum, uint8, base=10, indent=1
    Y31, uint32
    Y24, uint32
End

Begin Message, ETS CP MuxPDU Test Mode Rsp
    Result, uint8,  base=enum:MuxPdu Test Results
    NumLoops, uint16, base=10
    CurrLoop, uint16, base=10
    LoopsPassed, uint16, base=10
    LoopsFailed, uint16, base=10
    NumOutPdus, uint8,  base=10
End

Begin Message, ETS CP MuxPDU Buffer Status Rsp
    NumOfFree, uint16, base=10
    NumOfBusy, uint16, base=10
    NumOfCorrupted, uint16, base=10
    HighWaterMark, uint16, base=10
End

Begin Message, ETS CP MuxPDU Set Op Mode Rsp
    Preferred Mode, uint32, base=enum:MpOpModeT, default=ByPass
    Current Mode, uint8, base=enum:Normal/ByPass
    Check Ltu Crc, uint8, base=enum:No/Yes
End

Begin Message, ETS CP MuxPDU Get Op Mode Rsp
    Preferred Mode, uint32, base=enum:MpOpModeT, default=ByPass
    Current Mode, uint8, base=enum:Normal/ByPass
    Check Ltu Crc, uint8, base=enum:No/Yes
End

Begin Message, ETS CP Status Request Rsp
    ESN, uint32
    RFMode, uint8, base=enum:Status Rsp RF Mode Enum
    MinDigits, uint8, base=10
    Min, array, type=uint8, maxsize=15
    CPstate, uint8,  base=enum:CPStateType
    CDMAGoodMsg, uint8, base=enum:Status Rsp CDMA Msg Count Enum
    AMPSGoodFrameCt, uint16, base=10
    AMPSBadFrameCt, uint16, base=10
    CPEnterReason, uint8, base=enum:Status Rsp CP Enter Reason Enum
    Channel, uint16, base=10
    PilotPn, uint16, base=10
    CurrentSID, uint16, base=10
    CurrentNID, uint16, base=10
    AMPSCurLocAreaId, uint16, base=10
    AMPSRSSI, int16, base=10
    AMPSPowerLevel, uint8, base=10
    SlottedModeFlag, uint8, base=enum:Off/On
End

Begin Message, ETS CP Current Time Rsp, Bitpack
    Full System Time, bit,count=36,base=16,pos=none
End

Begin Message, ETS CP Phone State and Event Count Rsp
    State, uint8,  base=enum:Phone State, indent=1
    Total PCH Msgs, uint32, base=10, indent=1
    Bad PCH Msgs, uint32, base=10, indent=1
    Access Requests, uint16, base=10, indent=1
    Access Responses, uint16, base=10, indent=1
    Access Failures, uint16, base=10, indent=1
    Paging Lost Count, uint16, base=10, indent=1
    Traffic Lost Count, uint16, base=10, indent=1
    Idle HO Count, uint32, base=10, indent=1
    Hard HO Count, uint16, base=10, indent=1
    Inter Freq IHO Count, uint16, base=10, indent=1
    MO Count, uint16, base=10, indent=1
    MT Count, uint16, base=10, indent=1
    Power Down Reg Count, uint16, base=10, indent=1
    Timer Based Reg Count, uint16, base=10, indent=1
    Parm Change Reg Count, uint16, base=10, indent=1
    Power Up Reg Count, uint16, base=10, indent=1
    Ordered Reg Count, uint16, base=10, indent=1
    Zone Based Reg Count, uint16, base=10, indent=1
    Dist. Based Reg Count, uint16, base=10, indent=1
    Silentry Retry TO Count, uint16, base=10, indent=1
    T40m Expiration Count, uint16, base=10, indent=1
    T41m Expiration Count, uint16, base=10, indent=1
    T50m Expiration Count, uint16, base=10, indent=1
    T51m Expiration Count, uint16, base=10, indent=1
    T52m Expiration Count, uint16, base=10, indent=1
    T55m Expiration Count, uint16, base=10, indent=1
End

Begin Message, ETS CP Protocol Rev in use Rsp
    P_REV in use, uint8,  base=enum:P_REV
End

Begin Message, ETS CP Get Active NAM Rsp
    Current Active NAM, uint8, base=enum:PSW NAM Select
End

Begin Message, ETS CP Select Active NAM Rsp
    NAM Select Rsp, uint8, base=enum:NAM Select Results
End

Begin Message, ETS CP Enter AKey Rsp
    Result, uint8, base=enum:FAIL/SUCCESS
    Reason, uint8, base=enum:SecureData Update Response
End

Begin Message, ETS CP Set SPC Rsp
    Result, uint8, base=enum:FAIL/SUCCESS
    Reason, uint8, base=enum:SecureData Update Response
End

Begin Message, ETS CP Get Retrievable Statistics Rsp
    Statistics Counter Group, uint32,  base=enum:GroupId, indent=1
    Group ID, union, enum=Statistics Counter Group
End

Begin Message, CP Get Retrievable Statistics MUX1_REV_FCH Rsp
    MUX1 REV FCH  1, uint32, indent=1
    MUX1 REV FCH  2, uint32, indent=1
    MUX1 REV FCH  3, uint32, indent=1
    MUX1 REV FCH  4, uint32, indent=1
    MUX1 REV FCH  5, uint32, indent=1
    MUX1 REV FCH  6, uint32, indent=1
    MUX1 REV FCH  7, uint32, indent=1
    MUX1 REV FCH  8, uint32, indent=1
    MUX1 REV FCH  9, uint32, indent=1     /* Reserved */
    MUX1 REV FCH 10, uint32, indent=1     /* Reserved */
    MUX1 REV FCH 11, uint32, indent=1
    MUX1 REV FCH 12, uint32, indent=1
    MUX1 REV FCH 13, uint32, indent=1
    MUX1 REV FCH 14, uint32, indent=1
End

Begin Message, CP Get Retrievable Statistics MUX1_FOR_FCH Rsp
    MUX1 FOR FCH  1, uint32, indent=1
    MUX1 FOR FCH  2, uint32, indent=1
    MUX1 FOR FCH  3, uint32, indent=1
    MUX1 FOR FCH  4, uint32, indent=1
    MUX1 FOR FCH  5, uint32, indent=1
    MUX1 FOR FCH  6, uint32, indent=1
    MUX1 FOR FCH  7, uint32, indent=1
    MUX1 FOR FCH  8, uint32, indent=1
    MUX1 FOR FCH  9, uint32, indent=1
    MUX1 FOR FCH 10, uint32, indent=1
    MUX1 FOR FCH 11, uint32, indent=1
    MUX1 FOR FCH 12, uint32, indent=1
    MUX1 FOR FCH 13, uint32, indent=1
    MUX1 FOR FCH 14, uint32, indent=1
End

Begin Message, CP Get Retrievable Statistics PAG Rsp
    PAG_1, uint32, indent=1
    PAG_2, uint32, indent=1
    PAG_3, uint32, indent=1
    PAG_4, uint32, indent=1
    PAG_5, uint32, indent=1
    PAG_6, uint32, indent=1
    PAG_7, uint32, indent=1
End

Begin Message, CP Get Retrievable Statistics ACC Rsp
    ACC_1, uint32, indent=1
    ACC_2, uint32, indent=1
    ACC_3, uint32, indent=1
    ACC_4, uint32, indent=1
    ACC_5, uint32, indent=1
    ACC_6, uint32, indent=1
    ACC_7, uint32, indent=1
    ACC_8, uint32, indent=1
End

Begin Message, CP Get Retrievable Statistics LAYER2_RTC Rsp
    LAYER2_RTC1, uint32, indent=1
    LAYER2_RTC2, uint32, indent=1
    LAYER2_RTC3, uint32, indent=1
    LAYER2_RTC4, uint32, indent=1
    LAYER2_RTC5, uint32, indent=1
    OTHER_SYS_TIME1, uint32, indent=1
    OTHER_SYS_TIME2, uint32, indent=1
    OTHER_SYS_TIME3, uint32, indent=1
    OTHER_SYS_TIME4, uint32, indent=1
    OTHER_SYS_TIME5, uint32, indent=1
End

Begin Message, CP Get Retrievable Statistics MUX2_REV_FCH Rsp
    MUX2_REV_FCH_1, uint32, indent=1
    MUX2_REV_FCH_2, uint32, indent=1
    MUX2_REV_FCH_3, uint32, indent=1
    MUX2_REV_FCH_4, uint32, indent=1
    MUX2_REV_FCH_5, uint32, indent=1
    MUX2_REV_FCH_6, uint32, indent=1
    MUX2_REV_FCH_7, uint32, indent=1
    MUX2_REV_FCH_8, uint32, indent=1
    MUX2_REV_FCH_9, uint32, indent=1
    MUX2_REV_FCH_10, uint32, indent=1
    MUX2_REV_FCH_11, uint32, indent=1
    MUX2_REV_FCH_12, uint32, indent=1
    MUX2_REV_FCH_13, uint32, indent=1
    MUX2_REV_FCH_14, uint32, indent=1
    MUX2_REV_FCH_15, uint32, indent=1
    MUX2_REV_FCH_16, uint32, indent=1
    MUX2_REV_FCH_17, uint32, indent=1
    MUX2_REV_FCH_18, uint32, indent=1
    MUX2_REV_FCH_19, uint32, indent=1
    MUX2_REV_FCH_20, uint32, indent=1
    MUX2_REV_FCH_21, uint32, indent=1
    MUX2_REV_FCH_22, uint32, indent=1
    MUX2_REV_FCH_23, uint32, indent=1
    MUX2_REV_FCH_24, uint32, indent=1
    MUX2_REV_FCH_25, uint32, indent=1
    MUX2_REV_FCH_26, uint32, indent=1     /* Reserved */
End

Begin Message, CP Get Retrievable Statistics MUX2_FOR_FCH Rsp
    MUX2_FOR_FCH_1, uint32, indent=1
    MUX2_FOR_FCH_2, uint32, indent=1
    MUX2_FOR_FCH_3, uint32, indent=1
    MUX2_FOR_FCH_4, uint32, indent=1
    MUX2_FOR_FCH_5, uint32, indent=1
    MUX2_FOR_FCH_6, uint32, indent=1
    MUX2_FOR_FCH_7, uint32, indent=1
    MUX2_FOR_FCH_8, uint32, indent=1
    MUX2_FOR_FCH_9, uint32, indent=1
    MUX2_FOR_FCH_10, uint32, indent=1
    MUX2_FOR_FCH_11, uint32, indent=1
    MUX2_FOR_FCH_12, uint32, indent=1
    MUX2_FOR_FCH_13, uint32, indent=1
    MUX2_FOR_FCH_14, uint32, indent=1
    MUX2_FOR_FCH_15, uint32, indent=1
    MUX2_FOR_FCH_16, uint32, indent=1
    MUX2_FOR_FCH_17, uint32, indent=1
    MUX2_FOR_FCH_18, uint32, indent=1
    MUX2_FOR_FCH_19, uint32, indent=1
    MUX2_FOR_FCH_20, uint32, indent=1
    MUX2_FOR_FCH_21, uint32, indent=1
    MUX2_FOR_FCH_22, uint32, indent=1
    MUX2_FOR_FCH_23, uint32, indent=1
    MUX2_FOR_FCH_24, uint32, indent=1
    MUX2_FOR_FCH_25, uint32, indent=1
    MUX2_FOR_FCH_26, uint32, indent=1
End

Begin Message, CP Get Retrievable Statistics SCCH_REV Rsp
    SCCH1_REV_S, uint32, indent=1     /* Not supported */
    SCCH1_REV_P, uint32, indent=1     /* Not supported */
    SCCH2_REV_S, uint32, indent=1     /* Not supported */
    SCCH2_REV_P, uint32, indent=1     /* Not supported */
    SCCH3_REV_S, uint32, indent=1     /* Not supported */
    SCCH3_REV_P, uint32, indent=1     /* Not supported */
    SCCH4_REV_S, uint32, indent=1     /* Not supported */
    SCCH4_REV_P, uint32, indent=1     /* Not supported */
    SCCH5_REV_S, uint32, indent=1     /* Not supported */
    SCCH5_REV_P, uint32, indent=1     /* Not supported */
    SCCH6_REV_S, uint32, indent=1     /* Not supported */
    SCCH6_REV_P, uint32, indent=1     /* Not supported */
    SCCH7_REV_S, uint32, indent=1     /* Not supported */
    SCCH7_REV_P, uint32, indent=1     /* Not supported */
End

Begin Message, CP Get Retrievable Statistics SCCH_FOR Rsp
    SCCH1_FOR_S, uint32, indent=1     /* Not supported */
    SCCH1_FOR_P, uint32, indent=1     /* Not supported */
    SCCH2_FOR_S, uint32, indent=1     /* Not supported */
    SCCH2_FOR_P, uint32, indent=1     /* Not supported */
    SCCH3_FOR_S, uint32, indent=1     /* Not supported */
    SCCH3_FOR_P, uint32, indent=1     /* Not supported */
    SCCH4_FOR_S, uint32, indent=1     /* Not supported */
    SCCH4_FOR_P, uint32, indent=1     /* Not supported */
    SCCH5_FOR_S, uint32, indent=1     /* Not supported */
    SCCH5_FOR_P, uint32, indent=1     /* Not supported */
    SCCH6_FOR_S, uint32, indent=1     /* Not supported */
    SCCH6_FOR_P, uint32, indent=1     /* Not supported */
    SCCH7_FOR_S, uint32, indent=1     /* Not supported */
    SCCH7_FOR_P, uint32, indent=1     /* Not supported */
End

Begin Message, CP Get Retrievable Statistics MUX1_REV_DCCH Rsp
    MUX1_REV_DCCH_1, uint32, indent=1
    MUX1_REV_DCCH_2, uint32, indent=1
    MUX1_REV_DCCH_3, uint32, indent=1
    MUX1_REV_DCCH_4, uint32, indent=1
    MUX1_REV_DCCH_5, uint32, indent=1
    MUX1_REV_DCCH_6, uint32, indent=1  /* Reserved */
    MUX1_REV_DCCH_7, uint32, indent=1  /* Reserved */
    MUX1_REV_DCCH_8, uint32, indent=1  /* Reserved */
    MUX1_REV_DCCH_9, uint32, indent=1  /* Reserved */
    MUX1_REV_DCCH_10, uint32, indent=1  /* Reserved */
    MUX1_REV_DCCH_11, uint32, indent=1
    MUX1_REV_DCCH_12, uint32, indent=1
    MUX1_REV_DCCH_13, uint32, indent=1
    MUX1_REV_DCCH_14, uint32, indent=1
    MUX1_REV_DCCH_15, uint32, indent=1
End

Begin Message, CP Get Retrievable Statistics MUX1_FOR_DCCH Rsp
    MUX1_FOR_DCCH_1, uint32, indent=1
    MUX1_FOR_DCCH_2, uint32, indent=1
    MUX1_FOR_DCCH_3, uint32, indent=1
    MUX1_FOR_DCCH_4, uint32, indent=1
    MUX1_FOR_DCCH_5, uint32, indent=1
    MUX1_FOR_DCCH_6, uint32, indent=1  /* Reserved */
    MUX1_FOR_DCCH_7, uint32, indent=1  /* Reserved */
    MUX1_FOR_DCCH_8, uint32, indent=1  /* Reserved */
    MUX1_FOR_DCCH_9, uint32, indent=1  /* Reserved */
    MUX1_FOR_DCCH_10, uint32, indent=1
    MUX1_FOR_DCCH_11, uint32, indent=1
    MUX1_FOR_DCCH_12, uint32, indent=1
    MUX1_FOR_DCCH_13, uint32, indent=1
    MUX1_FOR_DCCH_14, uint32, indent=1
    MUX1_FOR_DCCH_15, uint32, indent=1
End

Begin Message, CP Get Retrievable Statistics MUX2_REV_DCCH Rsp
    MUX2_REV_DCCH_1, uint32, indent=1
    MUX2_REV_DCCH_2, uint32, indent=1
    MUX2_REV_DCCH_3, uint32, indent=1
    MUX2_REV_DCCH_4, uint32, indent=1
    MUX2_REV_DCCH_5, uint32, indent=1
    MUX2_REV_DCCH_6, uint32, indent=1
    MUX2_REV_DCCH_7, uint32, indent=1
    MUX2_REV_DCCH_8, uint32, indent=1
    MUX2_REV_DCCH_9, uint32, indent=1
    MUX2_REV_DCCH_10, uint32, indent=1
    MUX2_REV_DCCH_11, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_12, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_13, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_14, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_15, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_16, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_17, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_18, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_19, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_20, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_21, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_22, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_23, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_24, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_25, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_26, uint32, indent=1  /* Reserved */
    MUX2_REV_DCCH_27, uint32, indent=1
End

Begin Message, CP Get Retrievable Statistics MUX2_FOR_DCCH Rsp
    MUX2_FOR_DCCH_1, uint32, indent=1
    MUX2_FOR_DCCH_2, uint32, indent=1
    MUX2_FOR_DCCH_3, uint32, indent=1
    MUX2_FOR_DCCH_4, uint32, indent=1
    MUX2_FOR_DCCH_5, uint32, indent=1
    MUX2_FOR_DCCH_6, uint32, indent=1
    MUX2_FOR_DCCH_7, uint32, indent=1
    MUX2_FOR_DCCH_8, uint32, indent=1
    MUX2_FOR_DCCH_9, uint32, indent=1
    MUX2_FOR_DCCH_10, uint32, indent=1
    MUX2_FOR_DCCH_11, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_12, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_13, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_14, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_15, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_16, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_17, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_18, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_19, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_20, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_21, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_22, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_23, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_24, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_25, uint32, indent=1  /* Reserved */
    MUX2_FOR_DCCH_26, uint32, indent=1
    MUX2_FOR_DCCH_27, uint32, indent=1
End

Begin Message, CP Get Retrievable Statistics SCH0_REV Rsp
    SCH0_REV_1X, uint32, indent=1
    SCH0_REV_2X, uint32, indent=1
    SCH0_REV_4X, uint32, indent=1
    SCH0_REV_8X, uint32, indent=1
    SCH0_REV_16X, uint32, indent=1
    SCH0_REV_LTU, uint32, indent=1
    SCH0_REV_LTUOK, uint32, indent=1
End

Begin Message, CP Get Retrievable Statistics SCH1_REV Rsp
    SCH1_REV_1X, uint32, indent=1     /* Not supported */
    SCH1_REV_2X, uint32, indent=1     /* Not supported */
    SCH1_REV_4X, uint32, indent=1     /* Not supported */
    SCH1_REV_8X, uint32, indent=1     /* Not supported */
    SCH1_REV_16X, uint32, indent=1     /* Not supported */
    SCH1_REV_LTU, uint32, indent=1     /* Not supported */
    SCH1_REV_LTUOK, uint32, indent=1     /* Not supported */
End

Begin Message, CP Get Retrievable Statistics SCH0_FOR Rsp
    SCH0_FOR_1X, uint32, indent=1
    SCH0_FOR_2X, uint32, indent=1
    SCH0_FOR_4X, uint32, indent=1
    SCH0_FOR_8X, uint32, indent=1
    SCH0_FOR_16X, uint32, indent=1
    SCH0_FOR_LTU, uint32, indent=1
    SCH0_FOR_LTUOK, uint32, indent=1
End

Begin Message, CP Get Retrievable Statistics SCH1_FOR Rsp
    SCH1_FOR_1X, uint32, indent=1     /* Not supported */
    SCH1_FOR_2X, uint32, indent=1     /* Not supported */
    SCH1_FOR_4X, uint32, indent=1     /* Not supported */
    SCH1_FOR_8X, uint32, indent=1     /* Not supported */
    SCH1_FOR_16X, uint32, indent=1     /* Not supported */
    SCH1_FOR_LTU, uint32, indent=1     /* Not supported */
    SCH1_FOR_LTUOK, uint32, indent=1     /* Not supported */
End

Begin Message, ETS CP Get Silent Retry Status Rsp
    Silent Retry, uint8, base=enum:disabled/enabled
End

Begin Message, ETS CP Get Debug Screen Info Rsp
    Sid, uint16, base=10
    Nid, uint16, base=10
    Bad Frames, uint16, base=10
    Tot Frames, uint16, base=10
    Act Pilots, array,  type=uint16, maxsize=6
    EcI0, array,  type=uint16, scale=Q16, format=%2.4f, log10=true, logscale=10, maxsize=6
    Tx Power, int16,  base=10
    Rx Power, int16,  base=10
    Current Slot Cycle Index, uint8 ,  base=10
    Slotted Enabled, uint8, base=enum:disabled/enabled
    Qpch Enabled, uint8, base=enum:disabled/enabled
    For FCH Rc, uint8,  base=10
    Rev FCH Rc, uint8,  base=10
End

Begin Message, ETS CP ERI Version Number Msg Rsp
    ERI Version Number, uint16, base=10
End

Begin Message, ETS CP Get PRL Id Rsp
    PRL ID, uint16, base = 16
End

Begin Message, ETS CP Get PKZID Hysteresis Timer Rsp
    HAT timer duration (sec), uint8, base=10, indent=1
    HT timer duration (sec), uint8, base=10, indent=1
End

Begin Message, ETS CP Get GPS Debug Info Rsp
    Valid, uint8, base=bool:FALSE\TRUE
    NumAfltPilots, uint32, base=16
    SystemTime, uint32, base=16
    Latitude, uint32, base=16
    Longitude, uint32, base=16
    FixType, uint32, base=16
    SatelliteNumber, array, type=uint8,maxsize=37,size=end
End

Begin Message, ETS CP Set Mobile ID Rsp
    Result, uint8, base=enum:FAIL/SUCCESS
    Reason, uint8, base=enum:SecureData Update Response
End

Begin Message, ETS CP Get Mobile ID Rsp
    Id Type, uint8, base=enum:PS Get Mobile ID Type
    Value, uint64, base=16
End

Begin Message, ETS CP Get SPC Rsp
    Valid, uint8, base=enum:FALSE/TRUE
    SPC, uint32, base=10
End

Begin Message, ETS CP Get SSD Rsp
    Valid, uint8, base=enum:FALSE/TRUE
    SSD_A, array, type=uint8, maxsize = 8
    SSD_B, array, type=uint8, maxsize = 8
End

Begin Message, ETS CP CSFB Get Status Rsp
    csfbState, uint8, base=enum:CSFB State Enum
    antenna, uint8, base=10
End

Begin Message, ETS CP HLP IP DNS Addr Get Rsp
    LocalIPAddr, array, type=uint8, maxsize=4, base=10
    PriDNSAddr, array, type=uint8, maxsize=4, base=10
    SecDNSAddr, array, type=uint8, maxsize=4, base=10
End

Begin Message, ETS CP Emergency Mode Test Rsp
    Emergency Number, uint8, base=enum:EmergencyTest
End

Begin Message, ETS CP Read Raw IMSI Rsp
    ImsiMValid, bit,offset=7,pos=first,base=enum:Not Valid/Valid,count=1,bytes=1
    ImsiTValid, bit,offset=6,pos=last,base=enum:Not Valid/Valid,count=1,bytes=1
    M_MCC, array,  type=uint8, maxsize=3,  base=10
    M_IMSI_11_12, array,  type=uint8, maxsize=2,  base=10
    M_IMSI_S, array,  type=uint8, maxsize=10, base=10
    M_IMSI_Class, uint8,  base=10
    M_AddrNum, uint8,  base=10
    T_MCC, array,  type=uint8, maxsize=3,  base=10
    T_IMSI_11_12, array,  type=uint8, maxsize=2,  base=10
    T_IMSI_S, array,  type=uint8, maxsize=10, base=10
    T_IMSI_Class, uint8,  base=10
    T_AddrNum, uint8,  base=10
    MDN, array,  type=uint8, maxsize=16, base=10
    MDNNumDigits, uint8,  base=10
    ACCOLC, uint8,  base=10
End

Begin Message, ETS CP Write Raw IMSI Rsp
    Result, uint8,base=enum:WriteIMSIResult
End

Begin Message, ETS CP Write Raw MDN Rsp
    Result, uint8,base=enum:WriteMDNResult
End

Begin Message, ETS CP VAL Audio Tuning Init Params Rsp
    Status, uint8,  base=enum:Tuning Status
End

Begin Message, CP VAL Audio Tuning Read Params Spkr Vol Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    Spkr Vol, record, type=Parms Word Array Record, size=end, maxsize=320
End

Begin Record, Parms Word Array Record
    Data, int16, base=10
End

Begin Message, CP VAL Audio Tuning Read Params Mic Vol Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    Mic Vol, record, type=Parms Word Array Record, maxsize=32
End

Begin Message, CP VAL Audio Tuning Read Params Sidetone Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    Multiplier, uint16, base=10
    Sidetone, record, type=Parms Byte Array Record, maxsize=32
End

Begin Record, Parms Byte Array Record
    Data, int8, base=10
End

Begin Message, CP VAL Audio Tuning Read Params Mic BIF Mode Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    Mic BIF, record, type=Parms Word Array Record, maxsize=32
End

Begin Message, CP VAL Audio Tuning Read Params Mic Ans Mode Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    Mic ANS, record, type=Parms Byte Array Record, maxsize=32
End

Begin Message, CP VAL Audio Tuning Read Params Spkr FIF Mode Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    Spkr FIF, record, type=Parms Word Array Record, maxsize=32
End

Begin Message, CP VAL Audio Tuning Read Params Acp Mode Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    ACP, record, type=Parms Word Array Record, maxsize=96
End

Begin Message, CP VAL Audio Tuning Read Params AEC Mode Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    AEC, record, type=Parms Word Array Record, maxsize=32
End

Begin Message, CP VAL Audio Tuning Read Params Acp Params Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    ACP Params, record, type=Parms Word Array Record, maxsize=287
End

Begin Message, CP VAL Audio Tuning Read Params Aec Params Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    AEC Params, record, type=Parms Word Array Record, maxsize=287
End

Begin Message, CP VAL Audio Tuning Read Params Mic ANS Params Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    ANS Params, record, type=Parms Word Array Record, maxsize=7
End

Begin Message, CP VAL Audio Tuning Read Params TTY Params Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    TTY Params, record, type=Parms Word Array Record, maxsize=14
End

Begin Message, CP VAL Audio Tuning Read Params Mic FIF Params Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    FIF Params, record, type=Parms Word Array Record, maxsize=19
End

Begin Message, CP VAL Audio Tuning Read Params Mic BIF Params Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    BIF Params, record, type=Parms Word Array Record, maxsize=133
End

Begin Message, CP VAL Audio Tuning Read Params Spkr FIF Params Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    FIF Params, record, type=Parms Word Array Record, maxsize=133
End

Begin Message, CP VAL Audio Tuning Read Params Ringer Params Rsp
    Status, uint8,  base=enum:Tuning Status
    Version, uint16, base=10, default=1
    Mode, uint8,  base=10
    Data Size, uint16
    Rngr Params, record, type=Parms Word Array Record, maxsize=3
End

Begin Message, CP VAL Audio Tuning Update Params Spkr Vol Rsp
    Status, uint8,  base=enum:Tuning Status
    Mode, uint8,  base=10
End

Begin Message, CP VAL Audio Tuning Update Params Mic Vol Rsp
    Status, uint8,  base=enum:Tuning Status
    Mode, uint8,  base=10
End

Begin Message, CP VAL Audio Tuning Update Params Sidetone Rsp
    Status, uint8,  base=enum:Tuning Status
    Mode, uint8,  base=10
End

Begin Message, CP VAL Audio Tuning Update Params Mic BIF Mode Rsp
    Status, uint8,  base=enum:Tuning Status
    Mode, uint8,  base=10
End

Begin Message, CP VAL Audio Tuning Update Params Mic ANS Mode Rsp
    Status, uint8,  base=enum:Tuning Status
    Mode, uint8,  base=10
End

Begin Message, CP VAL Audio Tuning Update Params Spkr FIF Mode Rsp
    Status, uint8,  base=enum:Tuning Status
    Mode, uint8,  base=10
End

Begin Message, CP VAL Audio Tuning Update Params ACP Mode Rsp
    Status, uint8,  base=enum:Tuning Status
    Mode, uint8,  base=10
End

Begin Message, CP VAL Audio Tuning Update Params AEC Mode Rsp
    Status, uint8,  base=enum:Tuning Status
    Mode, uint8,  base=10
End

Begin Message, CP VAL Audio Tuning Update Params ACP Params Rsp
    Status, uint8,  base=enum:Tuning Status
    Mode, uint8,  base=10
End

Begin Message, CP VAL Audio Tuning Update Params AEC Params Rsp
    Status, uint8,  base=enum:Tuning Status
    Mode, uint8,  base=10
End

Begin Message, CP VAL Audio Tuning Update Params Mic ANS Params Rsp
    Status, uint8,  base=enum:Tuning Status
    Mode, uint8,  base=10
End

Begin Message, CP VAL Audio Tuning Update Params TTY Params Rsp
    Status, uint8,  base=enum:Tuning Status
    Mode, uint8,  base=10
End

Begin Message, CP VAL Audio Tuning Update Params Mic BIF Params Rsp
    Status, uint8,  base=enum:Tuning Status
    Mode, uint8,  base=10
End

Begin Message, CP VAL Audio Tuning Update Params Spkr FIF Params Rsp
    Status, uint8,  base=enum:Tuning Status
    Mode, uint8,  base=10
End

Begin Message, ETS CP VAL Audio Tuning Store Params File Rsp
    Status, uint8,  base=enum:Tuning Status
End

Begin Message, ETS CP VAL Get Network Info Rsp
    Rssi, int32, base=10
    CurrentSvc, uint8, base=enum:VAL WMC Svc Types,default=Service None
    NetworkType, uint8, base=enum:VAL WMC Network Types, default=Network Home
    NetworkTime, record, type=VAL WMC Data Time Rec, maxsize=1
    RssiDbm, int32, base=10
    RssiEvdoDbm, int32, base=10
    PrlRoamInd, uint32,base=10
    RoamNtwk, string, length=35
End

Begin Record, VAL WMC Data Time Rec
    uYear, uint16, base=10
    uMonth, uint16, base=10
    uDay, uint16, base=10
    uHour, uint16, base=10
    uMinute, uint16, base=10
    uSecond, uint16, base=10
    uMillionSec, uint16, base=10
    nMinsFromUTC, int32, base=10
End

Begin Message, ETS CP VAL OTA Activate Rsp
    result, uint8,base=enum:VAL WMC ResultCode
End

Begin Message, ETS CP VAL Get Conn Info Rsp
    connStatus, uint8,base=enum:VAL CONN STATUS
    DisconnectError, uint8,base=enum:VAL Ntwk Err Code
    otaspState, uint8,base=enum:VAL OTASP STATE
    uTotalSessionMS, uint32
    uActiveSessionMS, uint32
    uTotalTxBytes, uint32
    uTotalRxBytes, uint32
End

Begin Message, ETS CP VAL Get Ntwk Err Str Rsp
    ErrStr, string, length=240
End

Begin Message, ETS CP VAL Silent Log Cfg Create Rsp
    Status, uint32, base=enum:Silent Log Status
End

Begin Message, ETS CP VAL Silent Log Parms Set Rsp
    Status, uint32, base=enum:Silent Log Status
End

Begin Message, ETS CP VAL Silent Log Parms Get Rsp
    Curr State, uint32,  base=enum:Silent Log State, indent=1
    Count, uint16, base=enum:Silent Log Count, default=0,   indent=1
    Continuous, uint32,  base=enum:Parm Chg,   indent=1
    Log Faults, uint32,  base=enum:Parm Chg,   indent=1
    FileName, string, length=128, columns=30, indent=1
End

Begin Message, ETS CP VAL Silent Log Data Info Get Rsp
    Buf Ptr, uint32, base=16, indent=1
    Upload Size (words), uint32, base=16, indent=1
    Max Tot Size (bytes), uint32, base=16, indent=1
    Curr Idx, uint32, base=16, indent=1
End

Begin Message, ETS CP HSPD Profile Data Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Profile Data Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode, indent=2
    ProfileId, uint8,  base=10, indent=2
    Valid, uint32,  base=enum:Invalid/Valid, default=Valid, indent=2
    MN Home IP Address, array,  type=uint8, maxsize=4, base=10, indent=2
    HA Primary IP Address, array,  type=uint8, maxsize=4, base=10, indent=2
    HA Secondary IP Address, array,  type=uint8, maxsize=4, base=10, indent=2
    MN NAI, string, length = 72, indent=2
    DUN NAI, string, length = 72, indent=2
    MN Reverse Tunneling, uint8,  base=bool, indent=2
    MN HA SPI Enable, uint32,  base=bool, indent=2
    MN HA SPI, uint32, base=10, indent=2
    MN AAA SPI Enable, uint32,  base=bool, indent=2
    MN AAA SPI, uint32, base=10, indent=2
End

Begin Message, ETS CP HSPD Secure Profile Text Data Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Secure Profile Byte Data Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Secure Profile Data Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode, indent=2
    ProfileId, uint8,  base=10, default=0, indent=2
    Valid, uint32,  base=enum:Invalid/Valid, default=valid, indent=2
    AAA Password Length, uint8,  base=10, indent=2
    MN_AAA_PASSWORD, array,  type=uint8, maxsize=16, indent=2
    HA Password Length, uint8,  base=10, indent=2
    MN_HA_PASSWORD, array,  type=uint8, maxsize=16, indent=2
End

Begin Message, ETS CP Active Profile ID Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP Active Profile ID Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    ActiveProfile, uint32, base=10, base=10
End

Begin Message, ETS CP Number Of Profile Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP Number Of Profile Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    NumProfiles, uint8,  base=10
End

Begin Message, ETS CP Seg Data Init Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP Seg Profile Data Init Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP Secure DB Init Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP MIP Password String Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP MIP Password String Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    Profile ID, uint8,  base=10
    MIP HA PASSWORD, string, length=16
    MIP AAA PASSWORD, string, length=16
End

Begin Message, ETS CP MIP Password Hex Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP MIP Password Hex Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    Profile ID, uint8,  base=10
    AAA Password Length, uint8,  min=0, max=16, base=10
    MIP AAA Password, array,  type=uint8, maxsize=16
    HA Password Length, uint8,  min=0, max=16, base=10
    MIP HA Password, array,  type=uint8, maxsize=16
End

Begin Message, ETS CP Mobile Node HA Authentication Mode Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP Mobile Node HA Authentication Mode Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    MN_HA_AUTH, uint8,  base=enum:HAAuthNumber
End

Begin Message, ETS CP MN HA Auth Algorithm Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP MN HA Auth Algorithm Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    MN_HA_Auth_Algo, uint8,  base=enum:AuthAlgoNumber
End

Begin Message, ETS CP MN AAA Auth Algorithm Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP MN AAA Auth Algorithm Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    MN_AAA_Auth_Algo, uint8,  base=enum:AuthAlgoNumber
End

Begin Message, ETS CP MIP Registration Response Timeout Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP MIP Registration Response Timeout Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    RRPTimeout, uint8,  base=10
End

Begin Message, ETS CP MIP Registration Retries Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP MIP Registration Retries Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    NumRegRetries, uint8,  base=10
End

Begin Message, ETS CP MIP Pre-Reregistration Timeout Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP MIP Pre-Reregistration Timeout Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    RRA(sec), uint16,  base=10
End

Begin Message, ETS CP DMU RSA Public Key or DMU Test RSA Public Key Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP DMU RSA Public Key or DMU Test RSA Public Key Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    ActiveDmuRsaPublicKey, uint8,  base=enum:DmuRsaPublicKeyNumber
End

Begin Message, ETS CP NPKOI Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP NPKOI Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    nPKOI, uint8,  base=10
End

Begin Message, ETS CP MN Authenticator Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP MN Authenticator Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    MN_Authenticator, array,  type=uint8, maxsize=3, base=16
End

Begin Message, ETS CP MIP De_Registration Retries Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP MIP De_Registration Retries Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    NumDeRegRetries, uint8,  base=10
End

Begin Message, ETS CP MIP Re-Reg Only If Traffic Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP MIP Re-Reg Only If Traffic Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    Re-Reg Only If Traffic Enabled, uint32,  base=enum:False/True
End

Begin Message, ETS CP HSPD MIP NAI Enabled Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD MIP NAI Enabled Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    MIP NAI Enabled, uint32,  base=enum:False/True
End

Begin Message, ETS CP SIP NAI Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP SIP NAI Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    SIP_NAI, string, length = 72
End

Begin Message, ETS CP SIP Password String Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP SIP Password String Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    SIP Password, string, length = 16
End

Begin Message, ETS CP SIP Password Hex Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP SIP Password Hex Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    SIP Password Length, uint8,  base=10
    SIP Password, array,  type=uint8, maxsize=16, base=16
End

Begin Message, ETS CP SIP DUN NAI Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP SIP DUN NAI Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    SIP_DUN_NAI, string, length = 72
End

Begin Message, ETS CP VAL PPP-Um Configuration Set Rsp
    ParmOperationId, uint8,    base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,    base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP VAL PPP-Um Configuration Get Rsp
    ParmOperationId, uint8,    base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,    base=enum:HlpParmAccessResultCode, indent=2
    LCP Req Retry, uint8,    base=10, indent=2
    LCP NAK Retry, uint8,    base=10, indent=2
    LCP Restart Timer, uint16,   base=10, indent=2
    LCP Term Retry, uint8,    base=10, indent=2
    LCP Term Timer, uint16,   base=10, indent=2
    PPP Auth Retry, uint8,    base=10, indent=2
    PPP Auth Timer, uint16,   base=10, indent=2
    NCP Req Retry, uint8,    base=10, indent=2
    NCP NAK Retry, uint8,    base=10, indent=2
    NCP Restart Timer, uint16,   base=10, indent=2
    NCP Term Retry, uint8,    base=10, indent=2
    NCP Term Timer, uint16,   base=10, indent=2
End

Begin Message, ETS CP HSPD PPP Rm Config Set Rsp
    ParmOperationId, uint8,    base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,    base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD PPP Rm Config Get Rsp
    ParmOperationId, uint8,    base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,    base=enum:HlpParmAccessResultCode, indent=2
    PPP Keep Alive Mode, uint32,    base=bool, indent=2
    PPP Detect Mode, uint32,    base=bool, indent=2
    LCP Req Retry, uint8,    base=10, indent=2
    LCP NAK Retry, uint8,    base=10, indent=2
End

Begin Message, ETS CP HSPD TCP Config Set Rsp
    ParmOperationId, uint8,    base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,    base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD TCP Config Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode, indent=2
    TCP MTU, uint16, base=10, indent=2
    TCP Win Size for 1XRTT, uint16, base=10, indent=2
    TCP Win Size for EVDO, uint16, base=10, indent=2
End

Begin Message, ETS CP SIP Auth Prefer Set Rsp
    ParmOperationId, uint8,    base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,    base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP SIP Auth Prefer Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode, indent=2
    Auth Prefer, uint8,   base=enum:SIP Auth PreferT, indent=2
End

Begin Message, ETS CP AN NAI Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP AN NAI Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    AN_NAI, string, length = 72
End

Begin Message, ETS CP AN Password Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP AN Password Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    AN Password, array,  type=uint8, maxsize=16, base=16
End

Begin Message, ETS CP AN Password Hex Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP Primary DNS IP Addr Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP Primary DNS IP Addr Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    Primary DNS IP Addr, array,  type=uint8, maxsize=4, base=10
End

Begin Message, ETS CP Secondary DNS IP Addr Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP Secondary DNS IP Addr Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    Secondary DNS IP Addr, array,  type=uint8, maxsize=4, base=10
End

Begin Message, ETS CP HSPD Mn Nai Set Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Mn Nai Get Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
    Profile Id, uint8,base=10,indent = 1
    MN NAI, string, indent=1 , length = 72
End

Begin Message, ETS CP HSPD Mn Dun Nai Set Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Mn Dun Nai Get Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
    Profile Id, uint8,base=10,indent = 1
    MN DUN NAI, string, indent=1, length = 72
End

Begin Message, ETS CP HSPD Mn Ha Spi Enable Set Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Mn Ha Spi Enable Get Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
    Profile Id, uint8,base=10,indent = 1
    MN HA SPI Enable, uint32,base=bool, indent = 1
End

Begin Message, ETS CP HSPD Mn Ha Spi Set Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Mn Ha Spi Get Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
    Profile Id, uint8,base=10,indent = 1
    MN HA SPI, uint32,base=10,indent=1
End

Begin Message, ETS CP HSPD Mn Aaa Spi Enable Set Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Mn Aaa Spi Enable Get Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
    Profile Id, uint8,base=10,indent = 1
    MN AAA SPI Enable, uint32,base=bool,indent = 1
End

Begin Message, ETS CP HSPD Mn Aaa Spi Set Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Mn Aaa Spi Get Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
    Profile Id, uint8,base=10,indent = 1
    MN AAA SPI, uint32,base=10,indent=1
End

Begin Message, ETS CP HSPD Mn Reverse Tunneling Set Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Mn Reverse Tunneling Get Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
    Profile Id, uint8,base=10,indent = 1
    MN Reverse Tunneling, uint8,base=bool, indent =1
End

Begin Message, ETS CP HSPD Mn Home Ip Address Set Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Mn Home Ip Address Get Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
    Profile Id, uint8,base=10,indent = 1
    MN Home IP Address, array, type=uint8,base=10,maxsize=4,indent=1
End

Begin Message, ETS CP HSPD Home Agent Primary Ip Address Set Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Home Agent Primary Ip Address Get Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
    Profile Id, uint8,base=10,indent = 1
    MN HA Pri IP Address, array, type=uint8,base=10,maxsize=4,indent=1
End

Begin Message, ETS CP HSPD Home Agent Secondary Ip Address Set Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Home Agent Secondary Ip Address Get Rsp
    ParmOperationId, uint8, base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
    Profile Id, uint8,base=10,indent = 1
    MN HA Sec IP Address, array, type=uint8,base=10,maxsize=4,indent=1
End

Begin Message, ETS CP Dormant Handoff Optimization Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP Dormant Handoff Optimization Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    DormantHandoffOptSet, uint8,  base=enum:False/True, default=True
End

Begin Message, ETS CP Data SCRM Enable Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP Data SCRM Enable Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    DataScrmEnabled, uint8,  base=enum:False/True, default=True
End

Begin Message, ETS CP Data Throttling Enable Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP Data Throttling Enable Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    DataTrtlEnabled, uint8,  base=enum:False/True
End

Begin Message, ETS CP VJ Compression Enable Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP VJ Compression Enable Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    VJ Compression Enabled, uint8,  base=enum:False/True
End

Begin Message, ETS CP HSPD Data QNC Enabled Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Data QNC Enabled Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Data DDTM Enabled Set Rsp
    ParmOperationId, uint8,  base=enum:PswParmOperationId
    ParmAccessResultCode, uint8,  base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP HSPD Data DDTM Enabled Get Rsp
    ParmOperationId, uint8,  base=enum:PswParmOperationId
    ParmAccessResultCode, uint8,  base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32, base=10
    HSPD Data DDTM Enabled, uint8,  base=enum:False/True
End

Begin Message, ETS CP HSPD Data DO to 1X Enabled Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Data DO to 1X Enabled Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    HSPD Data DO to 1X Enabled, uint8,  base=enum:False/True
End

Begin Message, ETS CP HSPD IS801 IPAddr Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD IS801 IPAddr Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    Is801_IpAddr, array,  type=uint8, maxsize=4, base=10
End

Begin Message, ETS CP HSPD IS801 Port Number Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD IS801 Port Number Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    Is801_PortNum, uint16, base=10
End

Begin Message, ETS CP IS801 UserID Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP IS801 UserID Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    Is801_UserId, string, length = 72
End

Begin Message, ETS CP IS801 PassWord Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP IS801 PassWord Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    Is801_Pswd, string, length = 16
End

Begin Message, ETS CP IS801 Called Number Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP IS801 Called Number Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    Is801_CalledNumber, string, length=33
End

Begin Message, ETS CP HSPD Data All Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Data All Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode, indent=2
    RRPTimeout, uint8,  base=10, indent=2
    NumRegRetries, uint8,  base=10, indent=2
    RRA(sec), uint16, base=10, indent=2
    Is801_IpAddr, array, type=uint8, maxsize=4, base=10, indent=2
    Is801_PortNum, uint16, base=10, indent=2
    Is801_UserId, string, length = 72, indent=2
    Is801_Pswd, string, length = 16, indent=2, hidden=1
    Is801_CalledNumber, string, length = 33, indent=2
    MN_HA_AUTH, uint8,base=enum:HAAuthNumber, indent=2
    MN_HA_Auth_Algo, uint8,base=enum:AuthAlgoNumber, indent=2
    MN_AAA_Auth_Algo, uint8,base=enum:AuthAlgoNumber, indent=2
    MN_Authenticator, array, type=uint8, maxsize=3, base=16, indent=2
    ActiveDmuRsaPublicKey, uint8,base=enum:DmuRsaPublicKeyNumber, indent=2
    nPKOI, uint8,  base=16, indent=2
    SIP_NAI, string, length = 72, indent=2
    SIP_DUN_NAI, string, length = 72, indent=2
    AN_NAI, string, length = 72, indent=2
    DormantHandoffOptSet, uint8,  base=bool, indent=2
    DataScrmEnabled, uint8,  base=bool, indent=2
    DataTrtlEnabled, uint8,  base=bool, indent=2
    PrefRc, uint8,  base=enum:RcNumber, indent=2
    DNS_PRI_IP_ADDR, array,  type=uint8, maxsize=4, base=10, indent=2
    DNS_SEC_IP_ADDR, array,  type=uint8, maxsize=4, base=10, indent=2
    MIPMode, uint8,  base=enum:IP Service Type2, indent=2
    ActiveProfile, uint32, base=10, indent=2
    NumProfiles, uint8,  base=10, indent=2
    VJCompressionEnabled, uint8,  base=bool, indent=2
    SipAuthPref, uint8,  base=enum:SIP Auth PreferT, indent=2
    SIP_PASSWORD, string, length=16, indent=2, hidden=1
    AN_PASSWORD, string, length=16, indent=2, hidden=1
    ConRetryMaxCounter, uint8,  base=10, indent=2
End

Begin Message, ETS CP Mobile IP Mode Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP Mobile IP Mode Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    IP Service Type, uint8,  base=enum:IP Service Type2
End

Begin Message, ETS CP Preferred Radio Config Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP Preferred Radio Config Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    PrefRc, uint8,  base=enum:RcNumber
End

Begin Message, ETS CP Packet Dial String Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP Packet Dial String Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    Packet Dial String, string, length = 11
End

Begin Message, ETS CP HSPD Data MDR Mode Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Data MDR Mode Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    MDR Mode, uint8,  base=10
End

Begin Message, ETS CP AKA Password Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP AKA Password Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
    AKA_PASSWORD, array, type=uint8, maxsize=16, base=16
End

Begin Message, ETS CP AKA Profile Data Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP AKA Profile Data Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
    NAI, string, length = 72
    AccessNetwork Identity, string, length = 72
    OP, array, type=uint8, maxsize=16, base=16
    msSQN1, array, type=uint8, maxsize=6, size=6, base=16
    msSQN2, array, type=uint8, maxsize=6, size=6, base=16
    msSQN3, array, type=uint8, maxsize=6, size=6, base=16
    msSQN4, array, type=uint8, maxsize=6, size=6, base=16
    msSQN5, array, type=uint8, maxsize=6, size=6, base=16
    msSQN6, array, type=uint8, maxsize=6, size=6, base=16
    msSQN7, array, type=uint8, maxsize=6, size=6, base=16
    msSQN8, array, type=uint8, maxsize=6, size=6, base=16
    msSQN9, array, type=uint8, maxsize=6, size=6, base=16
    msSQN10, array, type=uint8, maxsize=6, size=6, base=16
    msSQN11, array, type=uint8, maxsize=6, size=6, base=16
    msSQN12, array, type=uint8, maxsize=6, size=6, base=16
    msSQN13, array, type=uint8, maxsize=6, size=6, base=16
    msSQN14, array, type=uint8, maxsize=6, size=6, base=16
    msSQN15, array, type=uint8, maxsize=6, size=6, base=16
    msSQN16, array, type=uint8, maxsize=6, size=6, base=16
    msSQN17, array, type=uint8, maxsize=6, size=6, base=16
    msSQN18, array, type=uint8, maxsize=6, size=6, base=16
    msSQN19, array, type=uint8, maxsize=6, size=6, base=16
    msSQN20, array, type=uint8, maxsize=6, size=6, base=16
    msSQN21, array, type=uint8, maxsize=6, size=6, base=16
    msSQN22, array, type=uint8, maxsize=6, size=6, base=16
    msSQN23, array, type=uint8, maxsize=6, size=6, base=16
    msSQN24, array, type=uint8, maxsize=6, size=6, base=16
    msSQN25, array, type=uint8, maxsize=6, size=6, base=16
    msSQN26, array, type=uint8, maxsize=6, size=6, base=16
    msSQN27, array, type=uint8, maxsize=6, size=6, base=16
    msSQN28, array, type=uint8, maxsize=6, size=6, base=16
    msSQN29, array, type=uint8, maxsize=6, size=6, base=16
    msSQN30, array, type=uint8, maxsize=6, size=6, base=16
    msSQN31, array, type=uint8, maxsize=6, size=6, base=16
    msSQN32, array, type=uint8, maxsize=6, size=6, base=16
End

Begin Message, ETS CP HSPD Lock Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    Hspd Lock, uint32,  base=enum:FALSE/TRUE
End

Begin Message, ETS CP HSPD Lock Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Lock Code Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Data Auto Packet Detection Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Data Auto Packet Detection Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    Enable, uint32,  base=bool
End

Begin Message, ETS CP HSPD Data SO Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Data SO Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    SO, uint32,  base=enum:HlpDataSOType, Default=IS701
End

Begin Message, ETS CP SMS Get AUTOREG Flag Rsp
    Data, record, type=CP Customized Data Rec, maxsize=1
End

Begin Message, ETS CP DO Parm Init Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8,  base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO Hybrid Mode Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8,  base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO Hybrid Pref Mode Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    HybridMode, uint32,base=enum:HybridModeT, NoExist=Null
    PrefMode, uint32,base=enum:Pref Modes, NoExist=Null
End

Begin Message, ETS CP DO Pref CC Cycle Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO Pref CC Cycle Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode, NoExist=Null
    PrefCCCycleEnable, uint32, base=bool:False/True, default=True, NoExist=Null
    PrefCCCycle, uint32, NoExist=Null
End

Begin Message, ETS CP DO Stream Configuration Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO Stream Configuration Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    Stream0Configuration, uint16, NoExist=Null
    Stream1Configuration, uint16, NoExist=Null
    Stream2Configuration, uint16, NoExist=Null
    Stream3Configuration, uint16, NoExist=Null
End

Begin Message, ETS CP DO Force Release0 Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO Force Release0 Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    ScpForceRel0Config, uint32,base=enum:Disable/Enable, default=Enable, NoExist=Null
End

Begin Message, ETS CP DO Not Disturb Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO Not Disturb Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    NotDisturb, uint8,base=enum:False/True, NoExist=Null
End

Begin Message, ETS CP DO FT MAC DRC Gating Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO FT MAC DRC Gating Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    FtMacDrcGating, uint8, base=enum:DrcGatingT, NoExist=Null
End

Begin Message, ETS CP DO LUP Unsolicited Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO LUP Unsolicited Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode, NoExist=Null
    LUPUnsolicitedEnable, uint32,base=enum:UnsolicitedT, NoExist=Null
End

Begin Message, ETS CP DO Rx Diversity Ctrl Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO Rx Diversity Ctrl Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    RxDiversityCtrl, uint8, NoExist=Null
End

Begin Message, ETS CP DO Subtype Config Data Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO Subtype Config Data Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8,  base=enum:DOParmAccessResultCode
    Protocol Type, uint16,base=enum:DScpProtocolType Enum, NoExist=Null
    numValue, uint8, NoExist=Null
    Protocol Subtypes, array, type=uint16, maxsize=5, base=10, NoExist=Null
End

Begin Message, ETS CP DO Protocol Config Disable Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO Extended Slot Cycle Set Rsp
    ParmOperationId, uint8, base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO Extended Slot Cycle Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8,  base=enum:DOParmAccessResultCode
    T_Dual_Idle(unit:seconds), uint16, base=10, NoExist=Null
    T_HRPD_ExtendedSC, uint8, base=enum:ExtendedSC_Enum, NoExist=Null
    T_1x_ExtendedSC, uint8, base=enum:ExtendedSC_Enum, NoExist=Null
End

Begin Message, ETS CP DO Periodical Search Cycle Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO Periodical Search Cycle Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8,  base=enum:DOParmAccessResultCode
    T_HRPD_Init(unit:seconds), uint16, base=10, NoExist=Null
    T_1x_Init(unit:seconds), uint16, base=10, NoExist=Null
End

Begin Message, ETS CP HSPD Dormant Timer Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Dormant Timer Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode, indent=2
    T_Dormancy(unit:seconds), uint16, base=10, indent=2
    T_HRPD_Search(unit:seconds), uint16, base=10, indent=2
    T_Rapid_Dormancy(unit:seconds), uint16, base=10, indent=2
    T_ResDef_Dormancy(unit:seconds), uint16, base=10, indent=2
End

Begin Message, ETS CP CT DO Default Band Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP CT DO Default Band Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8,  base=enum:DOParmAccessResultCode
    Band(1), uint32, base=enum:Cdma Band, NoExist=Null
    Channel(1), uint16, base=10, NoExist=Null
    Band(2), uint32, base=enum:Cdma Band, NoExist=Null
    Channel(2), uint16, base=10, NoExist=Null
    Band(3), uint32, base=enum:Cdma Band, NoExist=Null
    Channel(3), uint16, base=10, NoExist=Null
    Band(4), uint32, base=enum:Cdma Band, NoExist=Null
    Channel(4), uint16, base=10, NoExist=Null
    Band(5), uint32, base=enum:Cdma Band, NoExist=Null
    Channel(5), uint16, base=10, NoExist=Null
End

Begin Message, ETS CP HSPD Network Or Relay Mode Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD Network Or Relay Mode Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
    ProtocolConfig, uint32,  base=enum:NtwrkRelayMode_Enum
End

Begin Message, ETS CP DO Pref Mode Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8,  base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO Pref Mode Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    PrefMode, uint32,base=enum:Pref Modes, NoExist=Null
End

Begin Message, ETS CP DO Hybrid Mode Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    HybridMode, uint32,base=enum:HybridModeT, NoExist=Null
End

Begin Message, ETS CP KDDI DO Retry Timer Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP KDDI DO Retry Timer Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode
    DO_Retry(unit:seconds), uint16, base=10
End

Begin Message, ETS CP HSPD OMADM Dormant Timer Set Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8, base=enum:HlpParmAccessResultCode
End

Begin Message, ETS CP HSPD OMADM Dormant Timer Get Rsp
    ParmOperationId, uint8,  base=enum:HlpParmOperationId
    ParmAccessResultCode, uint8,  base=enum:HlpParmAccessResultCode, indent=2
    1x_to_LTE_handup_enabled, uint8,  base=enum:False/True
    T_1xps_Active_Duration(unit:seconds), uint16, base=10, default= 2
    T_1xps_Dormancy(unit:seconds), uint16, base=10, default= 2
    T_Max_Scan_Time(unit:seconds), uint16, base=10, default= 2
End

Begin Message, ETS CP DO eHRPD Mode Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8,  base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP DO eHRPD Mode Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    Mode, uint8,base=enum:eHRPD Disable/eHRPD Enable
End

Begin Message, ETS CP SBMG Branded mode Set Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8,  base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP SBMG Branded mode Get Rsp
    ParmOperationId, uint8,  base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    Mode, uint8,base=enum:MODE Disable/MODE Enable
End

Begin Message, ETS CP VAL PSW Parm Set Esn Meid Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Esn Meid Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    MEID, uint64, base=16, indent = 2
    ESN, uint32, base=16, indent = 2
    MobileIDType, uint32,  base=enum:MobileIDType
End

Begin Message, ETS CP VAL PSW Parm Set Spc Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Spc Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    SPC, uint32, base=10
End

Begin Message, ETS CP VAL PSW Parm Set Akey Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Akey Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Set Prev Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Prev Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    PRev, uint8, base=10
End

Begin Message, ETS CP VAL PSW Parm Set Positive Sid Nid List Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Positive Sid Nid List Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    SID, array, type=uint16, maxsize=20, base=10, indent = 2
    NID, array, type=uint16, maxsize=20, base=10, indent = 2
    max_count_in_List, uint32, base=10, indent=2
End

Begin Message, ETS CP VAL PSW Parm Set Negative Sid Nid List Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Negative Sid Nid List Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    SID, array, type=uint16, maxsize=20, base=10, indent = 2
    NID, array, type=uint16, maxsize=20, base=10, indent = 2
    max_count_in_List, uint32, base=10, indent=2
End

Begin Message, ETS CP VAL PSW Parm Set Pri Sec Ch Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Pri Sec Ch Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    setA, uint32, base=bool, indent = 2
    CPC_A, uint16, base=10, indent = 2
    CSC_A, uint16, base=10, indent = 2
    setB, uint32, base=bool, indent = 2
    CPC_B, uint16, base=10, indent = 2
    CSC_B, uint16, base=10, indent = 2
End

Begin Message, ETS CP VAL PSW Parm Set System Select Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get System Select Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    systemSelect, uint32, base=enum:SystemSelectType
End

Begin Message, ETS CP VAL PSW Parm Set Slot Cycle Index Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Slot Cycle Index Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    SlotCycleIndex, uint8, base=10
End

Begin Message, ETS CP VAL PSW Parm Set Mdn Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Mdn Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Mdn_Digits, string, length=15
End

Begin Message, ETS CP VAL PSW Parm Set Prl Enable Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Prl Enable Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Prl_Enable, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Set Home Sys Registration Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Home Sys Registration Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Home_System_Registration, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Set Foreign Sid Registration Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Foreign Sid Registration Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Foreign_Sid_Registration, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Set Foreign Nid Registration Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Foreign Nid Registration Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Foreign_Nid_Registration, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Set Access Overload Class Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Access Overload Class Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Accolc, uint8, base=10
End

Begin Message, ETS CP VAL PSW Parm Set Cdma Pref Band Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Cdma Pref Band Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    prefBand, uint32, base= enum:PswCdmaPrefBand
End

Begin Message, ETS CP VAL PSW Parm Set Cdma Pref Aorb Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Cdma Pref Aorb Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    CDMA A or B, uint32, base=enum:PswCdmaPrefAorB
End

Begin Message, ETS CP VAL PSW Parm Set Scm Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Scm Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    SCM, array, type=uint8, maxsize=5, base=10
End

Begin Message, ETS CP VAL PSW Parm Set Prl Info Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Prl Info Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    pref_only, uint32, base=bool
    prlId, uint16, base=10
    prl_prev, uint8,  base=10
    defaultRoamInd, uint8, base=10
End

Begin Message, ETS CP VAL PSW Parm Set OTAPA Enable Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get OTAPA Enable Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    OTAPA Enable, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Set OTA Powerup Mode Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get OTA Powerup Mode Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    PowerupMode, uint8, base=enum:OTASP Powerup Mode Enum
End

Begin Message, ETS CP VAL PSW Parm Set IMSI S1 Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get IMSI S1 Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Field, uint32, base=enum:PswMsidFieldToUpdate, indent=2
    IMSI_S1, array, type=uint8, maxsize=7, base = 10, indent=2
End

Begin Message, ETS CP VAL PSW Parm Set IMSI S2 Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get IMSI S2 Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Field, uint32, base=enum:PswMsidFieldToUpdate, indent=2
    IMSI_S2, array, type=uint8, maxsize=3,base = 10, indent=2
End

Begin Message, ETS CP VAL PSW Parm Set Spc Change Enable Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Spc Change Enable Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Response Length (bytes), uint32, base=10
    Spc Change Enable, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Set Spasm Enable Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Spasm Enable Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Response Length (bytes), uint32, base=10
    SPASM Enable, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Set Sid Nid List Sp Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Sid Nid List Sp Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    ValidSidNidEntry, uint32, base=bool, indent = 1,
    SID, uint16, base=10, indent = 1,
    NID, uint16, base=10, indent = 1,
    ageTimer (seconds), uint16, base=10, indent = 1,
    timerEnabled, uint32, base=bool, indent = 1,
    block, uint8, base=10, indent = 1,
    bandClass, uint32, base=enum:Cdma Band, indent = 1,
End

Begin Message, ETS CP VAL PSW Parm Set Distance Based Parms Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Distance Based Parms Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    BASE_LAT_REGsp, int32, base=10, indent = 1,
    BASE_LONG_REGsp, int32, base=10, indent = 1,
    REG_DIST_REGsp, uint16, base=10, indent = 1,
End

Begin Message, ETS CP VAL PSW Parm Set Msid Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Msid Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    ValidIMSImap, uint8, base=16, indent = 2
    M_MCC, array, type=uint8, maxsize=3, base = 10, indent=2
    M_IMSI_11_12, array, type=uint8, maxsize=2, base = 10, indent=2
    M_IMSI_S, array, type=uint8, maxsize=10, base = 10, indent=2
    M_IMSI_Class, uint8, base=10, indent = 2
    M_AddrNum, uint8, base=10, indent = 2
    T_MCC, array, type=uint8, maxsize=3, base = 10, indent=2
    T_IMSI_11_12, array, type=uint8, maxsize=2, base = 10, indent=2
    T_IMSI_S, array, type=uint8, maxsize=10, base = 10, indent=2
    T_IMSI_Class, uint8, base=10, indent = 2
    T_AddrNum, uint8, base=10, indent = 2
    Mdn, array, type=uint8, maxsize=16, base = 10, indent=2
    MDN_NUM_DIGITS, uint8, base=10, indent = 2
    ACCOLCp, uint8, base=10, indent =2
End

Begin Message, ETS CP VAL PSW Parm Set Encoded Msid Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Encoded Msid Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    Field, uint32, base=enum:PswMsidFieldToUpdate, indent=2
    MCC, uint16,base=16,   indent=2
    IMSI_11_12, uint8, base=16,   indent=2
    IMSI_S2, uint16,base=16,   indent=2
    IMSI_S1, uint32,base=16,   indent=2
    IMSI Class, uint8, base=16,   indent=2
    Addr Num, uint8, base=16, indent=2
End

Begin Message, ETS CP VAL PSW Parm Set Enable Ota Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Enable Ota Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    Enable OTA, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Set Pref Home MO SO Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Pref Home MO SO Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    PrefHomeMOServiceOption, uint16, base=16
End

Begin Message, ETS CP VAL PSW Parm Set Pref Roam MO SO Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Pref Roam MO SO Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    PrefRoamMOServiceOption, uint16, base=16
End

Begin Message, ETS CP VAL PSW Parm Set Pref Home MT SO Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Pref Home MT SO Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    PrefHomeMTServiceOption, uint16, base=16
End

Begin Message, ETS CP VAL PSW Parm Set A21 MS Subs Info Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get A21 MS Subs Info Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    A21MsSubsLen, uint8, base=10
    A21MsSubsInfo, array, type=uint8, maxsize=35, base=16
End

Begin Message, ETS CP Slotted Mode Allowed Set Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP Slotted Mode Allowed Get Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    Slotted Mode Allowed, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Set Voice Service Allowed Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Voice Service Allowed Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    Voice Service, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP VAL PSW Parm Set Roam Setting Domestic Voice Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Roam Setting Domestic Voice Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Allow Domestic Voice, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Set Roam Setting Domestic Data Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Roam Setting Domestic Data Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Allow Domestic Data, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Set Roam Setting International Voice Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Roam Setting International Voice Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Allow International Voice, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Set Roam Setting International Data Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Roam Setting International Data Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Allow International Data, uint32, base=bool
End

Begin Message, ETS CP VAL PSW Parm Set Service Option Support Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Service Option Support Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    Service Option, uint16,base=enum:Service Options
    Supported, uint8, base=enum:FALSE/TRUE
End

Begin Message, ETS CP VAL PSW Parm Set Simulated QPCH Enabled Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Simulated QPCH Enabled Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    Enabled, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP VAL PSW Parm Set Dynamic QPCH Control Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Dynamic QPCH Control Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    Enabled, uint32, base=enum:FALSE/TRUE
    ThreshLow, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
    ThreshHigh, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
End

Begin Message, ETS CP VAL PSW Parm Set Diversity Support Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Diversity Support Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    Mode, uint32, base=enum:Diversity Mode
End

Begin Message, ETS CP VAL PSW Parm Set QPCH CCI Enabled Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get QPCH CCI Enabled Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    Enabled, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP VAL PSW Parm Set 1xAdv Enabled Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get 1xAdv Enabled Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    Enabled, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP VAL PSW Parm Set SO73 Control Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get SO73 Control Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    SO73Enabled, uint32, base=enum:FALSE/TRUE
    SO73WBEnabled, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP VAL PSW Parm Set DFS EcIo Thresh Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get DFS EcIo Thresh Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    EcIo Thresh (-0.5 dB), uint8, base=10
End

Begin Message, ETS CP VAL PSW Parm Set IC Mode Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get IC Mode Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    IC Mode, uint32, base=enum:IC Mode
End

Begin Message, ETS CP VAL PSW Parm Set Alternate PN Mode Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get Alternate PN Mode Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    Mode, uint32, base=enum:Alternate PN Mode
End

Begin Message, ETS CP VAL PSW Parm Set MOB_FIRM_REV Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get MOB_FIRM_REV Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    MOB_FIRM_REV, uint16, base=16
End

Begin Message, ETS CP VAL PSW Parm Set MOB_MODEL Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
End

Begin Message, ETS CP VAL PSW Parm Get MOB_MODEL Rsp
    PswParmOperationId, uint8, base=enum:PswParmOperationId
    PswParmAccessResultCode, uint8, base=enum:PswParmAccessResultCode
    Rsp Msg Length (bytes), uint32,base=10
    MOB_MODEL, uint8, base=16
End

Begin Message, ETS CP Init UI Misc Database Rsp
    UiParmOperationId, uint8, base=enum:UiParmOperationId
    UiParmAccessResultCode, uint8, base=enum:UiParmAccessResultCode
End

Begin Message, ETS CP VAL SMS Over IMS Get Rsp
    SMS Over IP Networks, uint8, base=enum:SMSOverIMSEnum
    SIP SigComp, uint8, base=enum:SMSOverIMSEnum, default= Disable
    IMS domain, string, length=72
    IMS Password, string, length=72
    SIP T1timer_ims, uint16, base=10
    SIP TFtimer_ims, uint16, base=10
    SIP T2timer_ims, uint16, base=10
    SIP P-CSCF Port #, uint16, base=10
End

Begin Message, ETS CP VAL UICC Parm Set Factory Mode Rsp
    UiParmOperationId, uint8, base=enum:UiccParmOperationId
    UiParmAccessResultCode, uint8, base=enum:UiccParmAccessResultCode
End

Begin Message, ETS CP VAL UICC Parm Get Factory Mode Rsp
    UiccParmOperationId, uint8, base=enum:UiccParmOperationId
    UiccParmAccessResultCode, uint8, base=enum:UiccParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    FactoryMode, uint8, base=enum:FALSE/TRUE
End

Begin Message, ETS CP VAL SYS Parm Set Band Class Rsp
    SysParmAccessResultCode, uint32, base=enum:SysParmAccessResultCode
End

Begin Message, ETS CP VAL SYS Parm Get Band Class Rsp
    NumRec, uint8, base=10, indent=2
    BClass, record, type=BCrec Unused, maxsize=32, size=NumRec
End

Begin Record, BCrec Unused
    Band Class, uint8, base=enum:Val Cdma Band, indent=2
    Status, uint8, base=enum:Disable/Enable/Not Supported, indent=2
End

Begin Message, ETS CP VAL SYS Parm Set Sub Class Rsp
    SysParmAccessResultCode, uint32, base=enum:SysParmAccessResultCode
End

Begin Message, ETS CP VAL SYS Parm Get Sub Class Rsp
    Band Class, uint8, base=enum:Val Cdma Band
    Sub Class 0, uint8, base=enum:Disable/Enable/Not Supported, indent=2
    Sub Class 1, uint8, base=enum:Disable/Enable/Not Supported, indent=2
    Sub Class 2, uint8, base=enum:Disable/Enable/Not Supported, indent=2
    Sub Class 3, uint8, base=enum:Disable/Enable/Not Supported, indent=2
    Sub Class 4, uint8, base=enum:Disable/Enable/Not Supported, indent=2
    Sub Class 5, uint8, base=enum:Disable/Enable/Not Supported, indent=2
    Sub Class 6, uint8, base=enum:Disable/Enable/Not Supported, indent=2
    Sub Class 7, uint8, base=enum:Disable/Enable/Not Supported, indent=2
    Sub Class 8, uint8, base=enum:Disable/Enable/Not Supported, indent=2
    Sub Class 9, uint8, base=enum:Disable/Enable/Not Supported, indent=2
    Sub Class 10, uint8, base=enum:Disable/Enable/Not Supported, indent=2
    Sub Class 11, uint8, base=enum:Disable/Enable/Not Supported, indent=2
End

Begin Message, ETS CP VAL DO Parm Set Dfs Idle Interval Rsp
    ParmOperationId, uint8, base=enum:DOParmOperationId
    ResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP VAL DO Parm Get Dfs Idle Interval Rsp
    ParmOperationId, uint8, base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    Interval (sec), uint8, base=10, NoExist=Null
End

Begin Message, ETS CP VAL DO Parm Set Dfs Conn Interval Rsp
    ParmOperationId, uint8, base=enum:DOParmOperationId
    ResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP VAL DO Parm Get Dfs Conn Interval Rsp
    ParmOperationId, uint8, base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    Interval (sec), uint8, base=10, NoExist=Null
End

Begin Message, ETS CP VAL DO Parm Set Dfs Idle NumChan Rsp
    ParmOperationId, uint8, base=enum:DOParmOperationId
    ResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP VAL DO Parm Get Dfs Idle NumChan Rsp
    ParmOperationId, uint8, base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    NumChan, uint8, base=10, NoExist=Null
End

Begin Message, ETS CP VAL DO Parm Set Dfs Conn NumChan Rsp
    ParmOperationId, uint8, base=enum:DOParmOperationId
    ResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP VAL DO Parm Get Dfs Conn NumChan Rsp
    ParmOperationId, uint8, base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    NumChan, uint8, base=10, NoExist=Null
End

Begin Message, ETS CP VAL DO Parm Set Dfs Idle EcIo Thresh Rsp
    ParmOperationId, uint8, base=enum:DOParmOperationId
    ResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP VAL DO Parm Get Dfs Idle EcIo Thresh Rsp
    ParmOperationId, uint8, base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    EcIo Thresh (dB), uint16, base=10, NoExist=Null
End

Begin Message, ETS CP VAL DO Parm Set Dfs Conn EcIo Thresh Rsp
    ParmOperationId, uint8, base=enum:DOParmOperationId
    ResultCode, uint8, base=enum:DOParmAccessResultCode
End

Begin Message, ETS CP VAL DO Parm Get Dfs Conn EcIo Thresh Rsp
    ParmOperationId, uint8, base=enum:DOParmOperationId
    ParmAccessResultCode, uint8, base=enum:DOParmAccessResultCode
    EcIo Thresh (dB), uint16, base=10, NoExist=Null
End

Begin Message, ETS CP VAL CSS Parm Set DO OOSA Scanning Timer Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
End

Begin Message, ETS CP VAL CSS Parm Get DO OOSA Scanning Timer Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Duration (ms), uint32, base=10
End

Begin Message, ETS CP VAL CSS Parm Set 1X T_BSR Duration Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
End

Begin Message, ETS CP VAL CSS Parm Get 1X T_BSR Duration Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    BSR Type, uint8,  base=enum:Css1xBsrTimerTypeT
    Duration (s), uint32, base=10
End

Begin Message, ETS CP VAL CSS Parm Set 1X Avoidance Duration Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
End

Begin Message, ETS CP VAL CSS Parm Get 1X Avoidance Duration Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Avoidance Type, uint8,  base=enum:Css1xAvoidanceTimerTypeT
    Duration (s), uint32, base=10
End

Begin Message, ETS CP VAL CSS Parm Set DO T_BSR Duration Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
End

Begin Message, ETS CP VAL CSS Parm Get DO T_BSR Duration Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    BSR Type, uint8,  base=enum:CssDOBsrTimerTypeT
    Duration (s), uint32, base=10
End

Begin Message, ETS CP VAL CSS Parm Set Manual Avoid Sid Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
End

Begin Message, ETS CP VAL CSS Parm Get Manual Avoid Sid Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    sid(1), uint16, base=10
    sid(2), uint16, base=10
    sid(3), uint16, base=10
    sid(4), uint16, base=10
    sid(5), uint16, base=10
    sid(6), uint16, base=10
End

Begin Message, ETS CP VAL CSS Parm Set MRU Channel Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
End

Begin Message, ETS CP VAL CSS Parm Get MRU Channel Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    module, uint8, base=enum:CssMruSubModule, indent=1
    index, uint8, base=10, indent=1
    num1X, uint8, base=10, indent=1
    numDO, uint8, base=10, indent=1
    1X MRU, record, type=1X MRU Record, maxsize=10, size=num1X, exist = (num1X > 0),
    DO MRU, record, type=DO MRU Record, maxsize=10, size=numDO, exist = (numDO > 0), indent=1
End

Begin Record, 1X MRU Record
    1X band, uint8,  base=enum:Cdma Band, indent=2
    channel, uint16, base=10
End

Begin Record, DO MRU Record
    DO band, uint8,  base=enum:Cdma Band, indent=2
    channel, uint16, base=10
End

Begin Message, ETS CP VAL GMSS Parm Set OpMode Rsp
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId
    GmssParmAccessResultCode, uint8, base=enum:GmssParmAccessResultCode
End

Begin Message, ETS CP VAL GMSS Parm Get OpMode Rsp
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId
    GmssParmAccessResultCode, uint8, base=enum:GmssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    GmssOpMode, uint8, base=enum:GmssOpModeType, indent=1
End

Begin Message, ETS CP VAL GMSS Parm Set OOS Scan Timeout Rsp
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId
    GmssParmAccessResultCode, uint8, base=enum:GmssParmAccessResultCode
End

Begin Message, ETS CP VAL GMSS Parm Get OOS Scan Timeout Rsp
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId
    GmssParmAccessResultCode, uint8, base=enum:GmssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Timeout (Sec), uint16, base=10, indent=1
End

Begin Message, ETS CP VAL GMSS Parm Set OOS Sleep Time Rsp
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId
    GmssParmAccessResultCode, uint8, base=enum:GmssParmAccessResultCode
End

Begin Message, ETS CP VAL GMSS Parm Get OOS Sleep Time Rsp
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId
    GmssParmAccessResultCode, uint8, base=enum:GmssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Duration (Sec), uint16, base=10, indent=1
End

Begin Message, ETS CP VAL GMSS Parm Set Scan Pref Mode Rsp
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId
    GmssParmAccessResultCode, uint8, base=enum:GmssParmAccessResultCode
End

Begin Message, ETS CP VAL GMSS Parm Get Scan Pref Mode Rsp
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId
    GmssParmAccessResultCode, uint8, base=enum:GmssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    ScanPrefMode, uint8, base=enum:GmssPrefScanModeType, indent=1
End

Begin Message, ETS CP VAL GMSS Parm Set PsRegRsp Timeout Rsp
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId
    GmssParmAccessResultCode, uint8, base=enum:GmssParmAccessResultCode
End

Begin Message, ETS CP VAL GMSS Parm Get PsRegRsp Timeout Rsp
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId
    GmssParmAccessResultCode, uint8, base=enum:GmssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Timeout (Sec), uint16, base=10, indent=1
End

Begin Message, ETS CP VAL GMSS Parm Set PsRegMostPrefRat Wait Timeout Rsp
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId
    GmssParmAccessResultCode, uint8, base=enum:GmssParmAccessResultCode
End

Begin Message, ETS CP VAL GMSS Parm Get PsRegMostPrefRat Wait Timeout Rsp
    GmssParmOperationId, uint8, base=enum:GmssParmOperationId
    GmssParmAccessResultCode, uint8, base=enum:GmssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Timeout (Sec), uint16, base=10, indent=1
End

Begin Message, ETS CP VAL CSS Parm Set 1x MPSS Pilot Thresh High Rssi Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
End

Begin Message, ETS CP VAL CSS Parm Get 1x MPSS Pilot Thresh High Rssi Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Threshold, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
End

Begin Message, ETS CP VAL CSS Parm Set 1x MPSS Pilot Thresh Low Rssi Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
End

Begin Message, ETS CP VAL CSS Parm Get 1x MPSS Pilot Thresh Low Rssi Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Threshold, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
End

Begin Message, ETS CP VAL CSS Parm Set 1x MPSS High-Low Rssi Thresh Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
End

Begin Message, ETS CP VAL CSS Parm Get 1x MPSS High-Low Rssi Thresh Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Threshold, int16, base=10
End

Begin Message, ETS CP VAL CSS Parm Set 1x MPSS Pilot Thresh Slope Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
End

Begin Message, ETS CP VAL CSS Parm Get 1x MPSS Pilot Thresh Slope Rsp
    CssParmOperationId, uint8, base=enum:CssParmOperationId
    CssParmAccessResultCode, uint8, base=enum:CssParmAccessResultCode
    Rsp Msg length (bytes), uint32, base=10
    Slope, uint8, base=10
End

Begin Message, ETS CP_VAL_HTTP_Session_Create Rsp
End

Begin Message, ETS CP_VAL_FTP_Session_Create Rsp
End

Begin Message, ETS CP VAL GPS Open Device HW Init Rsp
    GPS Open Device HW Init Status, uint8, base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL GPS Get Position Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    Instance ID, uint32
    Validity Mask, uint32
    UTC Time, record, type= VAL GPS System Time Rec, maxsize=1
    Latitude, int32
    Longitude, int32
    Speed, double
    Heading, double
    Magnetic Variation, double
    Altitude WRT Sea Level, double
    Altitude WRT Ellipsoid, double
    Fix Quality, uint8, base=enum:VAL GPS Fix Quality
    Fix Type, uint8, base=enum:VAL GPS Fix Type
    Selection Type, uint8, base=enum:VAL GPS Selection Type
    Position Dilution Of Precision, double
    Horizontal Dilution Of Precision, double
    Vertical Dilution Of Precision, double
    Satellite Count, uint32
    Satellites Used PRNs, array, type=uint32, maxsize=12, columns=16
    Satellites In View, uint32
    Satellites In View PRNs, array, type=uint32, maxsize=12, columns=16
    Satellites In View Elevation, array, type=uint32, maxsize=12, columns=16
    Satellites In View Azimuth, array, type=uint32, maxsize=12, columns=16
    Satellites In View SNR, array, type=uint32, maxsize=12, columns=16
    GPS Position Error, record, type= VAL GPS Position Error Rec, maxsize=1
    Fix Mode, uint8, base=enum:VAL GPS Fix Mode
    GPS Session Count, uint32
    Number Of Positions, uint32
    Horizontal Velocity, uint32
    Vertical Velocity, uint32
End

Begin Record, VAL GPS Position Error Rec
    Horizontal Error Along, uint32
    Horizontal Error Angle, uint32
    Horizontal Error Perp, uint32
    Vertical Error, uint32
    Horizontal Confidence, uint32
    Horizontal Velocity Error, uint32
    Vertical Velocity Error, uint32
    Horizontal Heading Error, uint32
    Latitude Uncertainty, uint32
    Longitude Uncertainty, uint32
End

Begin Message, ETS CP VAL GPS Close Device Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    GPS Close Device Status, uint8, base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL GPS Start Fix Rsp
    Instance ID, uint32
    GPS Start Fix Status, uint8, base=enum:VAL GPS Fix Operation Status
End

Begin Message, ETS CP VAL GPS Query Fix Rsp
    Instance ID, uint32
    GPS Query Fix Status, uint8, base=enum:VAL GPS Fix Operation Status
End

Begin Message, ETS CP VAL GPS Stop Fix Rsp
    Instance ID, uint32
    GPS Stop Fix Status, uint8, base=enum:VAL GPS Fix Operation Status
End

Begin Message, ETS CP VAL GPS Configure Fix Mode Rsp
    Instance ID, uint32
    GPS Configure Fix Mode Status, uint8, base=enum:VAL GPS Fix Operation Status
End

Begin Message, ETS CP VAL GPS Configure Fix Rate Rsp
    Instance ID, uint32
    GPS Configure Fix Rate Status, uint8, base=enum:VAL GPS Fix Operation Status
End

Begin Message, ETS CP VAL GPS Configure QOS Rsp
    Instance ID, uint32
    GPS Configure QOS Status, uint8, base=enum:VAL GPS Fix Operation Status
End

Begin Message, ETS CP VAL GPS Write Server Configuration Rsp
    GPS Write Server Config Status, uint8,  base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL GPS Read Server Configuration Rsp
    GPS Server Address Validity Flag, uint8, base=enum:FALSE/TRUE
    IP Type, uint8, base=enum:ipv4/ipv6
    GPS Server ipv4 Address, array,  type=uint8, maxsize=4, base=10, indent=2
    ipv6Ip0, uint32, base=16
    ipv6Ip1, uint32, base=16
    ipv6Ip2, uint32, base=16
    ipv6Ip3, uint32, base=16
    GPS Server Port Number, uint32
    GPS Server URL Validity Flag, uint8, base=enum:FALSE/TRUE
    GPS Server URL, string, length=256
End

Begin Message, ETS CP VAL GPS Enable Security Rsp
    Instance ID, uint32
    GPS Enable Security Status, uint8,  base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL GPS Write Security Configuration Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    Instance ID, uint32
    GPS Write Security Status, uint8, base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL GPS Read Security Configuration Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    Instance ID, uint32
    Security Hash Algorthm, uint32
    Security Data ID, uint8
    Security Data Length, uint8
    Security Data, array, type=uint8, maxsize=20
End

Begin Message, ETS CP VAL GPS Read Encrypt Configuration Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    Instance ID, uint32
    Encrypt Algorithm, uint32
    UTC Time, record, type= VAL GPS System Time Rec, maxsize=1
    Encrypt Data Length, uint8
    Encrypt Data, array, type=uint8, maxsize=20
End

Begin Message, ETS CP VAL GPS Get LBS Privacy Setting Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    LBS Get Privacy Setting Status, uint8,  base=enum:VAL GPS Status
    LBS Privacy Setting, uint8,  base=enum:VAL GPS Privacy Setting
End

Begin Message, ETS CP VAL LBS Set LBS Privacy Setting Rsp
    Privacy Setting Status, uint8, base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL GPS Get Base SSD Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    GetStatus, uint8,  base=enum:VAL GPS Status
    Instance ID, uint32
    Base SSD, array, type=uint8, maxsize=16
    UTC Time, record, type= VAL GPS System Time Rec, maxsize=1
End

Begin Message, ETS CP VAL GPS Set Rand Period Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    Instance ID, uint32
    GPS Set Rand Period Status, uint8, base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL GPS Reset Assist Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    VAL GPS Reset Assist Status, uint8, base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL GPS Nmea Cfg Get Rsp
    Interval, uint32
    GPGGA Enable, uint8  , base=enum:No/Yes
    GPGSV Enable, uint8  , base=enum:No/Yes
    GPGSA Enable, uint8  , base=enum:No/Yes
    GPRMC Enable, uint8  , base=enum:No/Yes
    GPGST Enable, uint8  , base=enum:No/Yes
    GPGLL Enable, uint8  , base=enum:No/Yes
    GPVTG Enable, uint8  , base=enum:No/Yes
End

Begin Message, ETS CP VAL GPS Restart Fix Rsp
    VAL GPS Restart Status, uint8, base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL GPS Set Security Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    GPS Set Security Status, uint8, base=enum:VAL GPS Set Security Status
End

Begin Message, ETS CP VAL GPS Configure Technology Rsp
    Instance ID, uint32
    GPS Set Search Technology Status, uint8, base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL VGPS Cfg Get Rsp
    Vendor ID, string, length = 50
    User Name, string, length = 50
    Pass Word, string, length = 50
    VGPS Server 1, string, length = 72
    VGPS Server 2, string, length = 72
    VGPS Server 3, string, length = 72
    Server 1 Port #, uint16, base=10, default=80
    Server 2 Port #, uint16, base=10, default=80
    Server 3 Port #, uint16, base=10, default=80
End

Begin Message, ETS CP VAL GPS Write Offset Info Rsp
    Instance ID, uint32
    Status, uint8, base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL GPS Read Offset Info Rsp
    Instance ID, uint32
    Status, uint8, base=enum:VAL GPS Status
    NumOffsets, uint32
    GPS_Offset_hash, record, type=ValGpsOffsetHash, maxsize=10,size=NumOffsets
End

Begin Record, ValGpsOffsetHash
    BeginOffset, uint32
    EndOffset, uint32
    Hash, array,  type=uint8, maxsize=20, indent=2, size=20
End

Begin Message, ETS CP VAL GPS Set Base SSD Rsp
    Status, uint8,   base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL GPS Get Fix Mode Rsp
    GPS Configure Fix Mode Status, uint8, base=enum:VAL GPS Fix Operation Status
    GPS Fix Mode, uint32, base=enum:VAL GPS Fix Mode
End

Begin Message, ETS CP VAL GPS Set Start Mode Rsp
    Status, uint8, base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL GPS NMEA Output Settings Rsp
    Nmea Output Setting Status, uint8, base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL GPS Configure Fix Rate Get Rsp
    Status, uint8, base=enum:VAL GPS Status
    GPS Num Fix Mode, uint32
    GPS Time Between Fix, uint32
End

Begin Message, ETS CP VAL GPS Set CT Mpc Setting Rsp
    CT Mpc Ip Config Status, uint8,  base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL MPC PPP UserName PassWord Rsp
    CT Mpc PPP Config Status, uint8,  base=enum:VAL GPS Status
End

Begin Message, ETS CP VAL GPS State Get Rsp
    Instance ID, uint32
    VAL GPS STate, uint8, base=enum:VAL LBS State
End

Begin Message, ETS CP VAL GPS Test Mode Set Rsp
    GPS Configure Fix Mode Status, uint8, base=enum:VAL GPS Fix Operation Status
End

Begin Message, ETS CP VAL GPS RfDelay Set Rsp
    Status, uint8, base=enum:VAL GPS Status
    BAND, uint8,    base=enum:RfBand
    RFDELAY_1X, uint32,  base=10, default=0
    RFDELAY_DO, uint32,  base=10, default=0
End

Begin Message, ETS CP Mass Storage Mode Set Rsp
    ResultCode, int32,  base=enum:MSModeResultCode
End

Begin Message, ETS CP Mass Storage Mode Get Rsp
    Device, uint8,  base=enum:MSDevices
    Mode, uint8,  base=enum:MSModes
    ResultCode, int32,  base=enum:MSModeResultCode
End

Begin Message, ETS CP VAL IP Counters Peek Rsp
    RxBytes, uint32, base=10, indent=3
    RxPackets, uint32, base=10, indent=3
    BadRxPackets, uint32, base=10, indent=3
    TxBytes, uint32, base=10, indent=3
    TxPackets, uint32, base=10, indent=3
    TotalRxBytes, uint64, base=10, indent=3
    TotalRxPackets, uint64, base=10, indent=3
    TotalBadRxPackets, uint64, base=10, indent=3
    TotalTxBytes, uint64, base=10, indent=3
    TotalTxPackets, uint64, base=10, indent=3
End

Begin Message, ETS CP Val RTC Init Rsp
End

Begin Message, ETS CP Val RTC Time Get Rsp
    Year, uint16,     base=10, default=2013, min=0,    max=2199
    Mon, uint8,      base=10, default=1,    min=1,    max=12
    Day, uint8,      base=10, default=1,    min=1,    max=31
    Hour, uint8,      base=10, default=0,    min=0,    max=23
    Min, uint8,      base=10, default=0,    min=0,    max=59
    Sec, uint8,      base=10, default=0,    min=0,    max=59
    Wkday, int8,       base=enum:WeekDays
End

Begin Message, ETS CP Val RTC Time Set Rsp
    Return Code, int8,      base=enum:Failed/Passed
End

Begin Message, ETS CP Val RTC Alarm Get Rsp
    Day, int8,      base=10, default=1,    min=-1,    max=31
    Hour, int8,      base=10, default=0,    min=-1,    max=23
    Min, int8,      base=10, default=0,    min=-1,    max=59
    Wkday, int8,      base=enum:WeekDays
    AlarmId, int8,      base=enum:Alarm1/Alarm2, default=Alarm1
End

Begin Message, ETS CP Val RTC Alarm Set Rsp
    AlarmId, int8,      base=enum:Alarm1/Alarm2, default=Alarm1
    Return Code, int8,      base=enum:Failed/Passed
End

Begin Message, ETS CP Val RTC ASEC Set Rsp
End

Begin Message, ETS CP Peek RLP Frame Stats Rsp
    Forward Missing Frames, uint32, base=10
    Forward Received Frames, uint32, base=10
    Reverse Missing Frames, uint32, base=10
    Reverse Sent Frames, uint32, base=10
    Forward Max Missing Block Size, uint32, base=10
    Foward 8 PDUs frame count, uint32, base=10
    Foward 4 PDUs frame count, uint32, base=10
    Foward 2 PDUs frame count, uint32, base=10
    Foward 1 PDUs frame count, uint32, base=10
End

Begin Message, ETS CP UI Audio Video File Rsp
    AV Command, uint8,  base=enum:Audio Video Cmd, default=AV Play
    Mp4 Result, uint16, base=enum:Val MP4 Result
    App Result, uint16, base=enum:VAL MMApps Return Codes
    Elapsed/PlayTime, uint32, base=10
End

Begin Message, ETS CP UI Get Music Play Time Rsp
    Total Play Time (secs), int32, base=enum:MusicPlayTime
End

Begin Message, ETS CP UI Music Record Rsp
    Result, uint8, base=enum:VAL MMApps Return Codes, default=VAL_APP_OK
End

Begin Message, ETS CP UI TTY Fwd Chan Rsp
    TtyChar, uint8, base=10
End

Begin Message, ETS CP UI TTY Enable Fwd Chan Rsp
End

Begin Message, ETS CP UI VAL Net PPP Open Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net PPP Close Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net PPP Dormant Req Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net Get PPP Status Rsp
    Status, uint8, base=enum:CP UI VAL Net Status
End

Begin Message, ETS CP UI VAL Net Event Select Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net Socket Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
    SockFd, uint16
End

Begin Message, ETS CP UI VAL Net Connect Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net Close Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net Get Sock Status Rsp
    SockState, uint8, base=enum:CP UI VAL Net Sock State
End

Begin Message, ETS CP UI VAL Net Recv Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
    NumBytesRead, int16
End

Begin Message, ETS CP UI VAL Net Send Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
    NumBytesSend, int16
End

Begin Message, ETS CP UI VAL Net Bind Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net Listen Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net Accept Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
    addrlen, int16
    newsock, int16
End

Begin Message, ETS CP UI VAL Net Send To Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
    NumBytesSend, int16
End

Begin Message, ETS CP UI VAL Net Recv From Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
    NumBytesRead, int16
End

Begin Message, ETS CP UI VAL Net Get Host By Name Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net Inet Addr Rsp
    Address, uint32
End

Begin Message, ETS CP UI VAL Net Get PPP Auth Parms Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net Set PPP Auth Parms Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net Get Dial Str Parms Rsp
    LenP, uint8
    DialStrP, string, size=LenP, columns=40
End

Begin Message, ETS CP UI VAL Net Set Dial Str Parms Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net Set RLP Inact TMO Req Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net Get RLP Setting Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net Set RLP Setting Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net Get IP Address Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL Net Get DNS Server IP Addr Rsp
    IpAddrPrimary, array, type=uint8, base=10, size=4, maxsize=4
    IpAddrSecondary, array, type=uint8, base=10, size=4, maxsize=4
End

Begin Message, ETS CP UI VAL Net Get Peer Name Rsp
    Result, uint8, base=enum:CP UI VAL Net Result
End

Begin Message, ETS CP UI VAL SMS Set Storage Rsp
    Result, uint8
End

Begin Message, ETS CP UI VAL SMS Send Text Message Rsp
    Result, uint8
    MsgId, uint16
End

Begin Message, ETS CP UI VAL SMS Send PDU Message Rsp
    Result, uint8
    RecId, uint16
    MsgId, uint16
End

Begin Message, ETS CP UI VAL CHV Get Status Rsp
    status, uint8, base=enum:False/True
End

Begin Message, ETS CP UI VAL CHV Verify Rsp
    status, uint8, base=enum:False/True
End

Begin Message, ETS CP UI VAL CHV Change Rsp
    status, uint8, base=enum:False/True
End

Begin Message, ETS CP UI VAL CHV Disable Rsp
    status, uint8, base=enum:False/True
End

Begin Message, ETS CP UI VAL CHV Enable Rsp
    status, uint8, base=enum:False/True
End

Begin Message, ETS CP UI VAL CHV Unblock Rsp
    status, uint8, base=enum:False/True
End

Begin Message, ETS CP UI VAL Get Max MDN Rec Num Rsp
    result, uint8
End

Begin Message, ETS CP UI VAL Get MDN Rec Rsp
    status, uint8, base=enum:False/True
    MdnLen, uint8
    Mdn, array, type=uint8, size=MdnLen, maxsize=16
End

Begin Message, ETS CP UI VAL Update MDN Rec Rsp
    status, uint8, base=enum:False/True
End

Begin Message, ETS CP UI VAL Del MDN Rec Rsp
    status, uint8, base=enum:False/True
End

Begin Message, ETS CP Get Alert Status Rsp
    Text Msg Status, uint8, base=bool
    Voice Msg Status, uint8, base=bool
    Ring Alert Status, uint8, base=bool
End

Begin Message, ETS DSPM Fault Rsp
    Unit, uint16, base=enum:DSP Unit
    Codes, union,  enum=Unit
End

Begin Message, DSPM Fault Exe Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSP Exe Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPM Fault Ipc Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSP Ipc Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPM Fault Mon Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSP Mon Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPM Fault Mth Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSP Mth Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPM Fault Sys Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSP Sys Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPM Fault Fwd Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSPM Fwd Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPM Fault Msc Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSPM Msc Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPM Fault Rev Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSPM Rev Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPM Fault Rfc Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSPM Rfc Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPM Fault Sch Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSPM Sch Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPM Fault Vap Rsp
End

Begin Message, DSPM Fault V13 Rsp
End

Begin Message, DSPM Fault Ve8 Rsp
End

Begin Message, DSPM Fault Vec Rsp
End

Begin Message, DSPM Fault Amp Rsp
End

Begin Message, DSPM Fault Asg Rsp
End

Begin Message, DSPM Fault App Rsp
End

Begin Message, ETS DSPM Printf Rsp
    Format, string, length=22
    Args, array,  type=uint16, maxsize=5, size=end
End

Begin Message, ETS DSPM Alive Rsp
End

Begin Message, ETS DSPM Loopback Rsp
    Data, array, type=uint16, maxsize=40, size=end
End

Begin Message, ETS DSPM DBuf Loopback Rsp
    Result, uint8, base=enum:Fail/Pass
End

Begin Message, DSPM Trace All Off Rsp
    printformat All Traces
End

Begin Message, DSPM Trace DSPM FWD Chk Stack Usage Rsp
    printformat , 1, 1, DSPM FWD Chk Stack Usage, N=%d, <systime>  DSPM - FWD Chk Stack Usage - UnusedStack: 0x%04x CurrStackP: 0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    UnusedStack, uint16
    CurrStackP, uint16
End

Begin Message, DSPM Trace DSPM FWD Start Viterbi Rsp
    printformat , 1, 1, DSPM FWD Start Viterbi, N=%d, <systime>  DSPM - FWD Start Viterbi -  ChnlNum:%d ChnlTyp:0x%04x RC:%d SmbNumber:0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChnlNum, uint16
    ChnlTyp, uint16
    RC, uint16
    SmbNumber, uint16
End

Begin Message, DSPM Trace DSPM FWD Rda Ctrl Mismatch Rsp
    printformat , 1, 1, DSPM FWD Rda Ctrl Mismatch, N=%d, <systime>  DSPM - FWD Rda Ctrl Mismatch -  Chnl_RC: 0x%04x CrcFinal: 0x%04x RdaCtrl:0x%04x RdaCrc:0x%04x RdaRtHist:0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Chnl_RC, uint16
    CrcFinal, uint16
    RdaCtrl, uint16
    RdaCrc, uint16
    RdaRtHist, uint16
End

Begin Message, DSPM Trace DSPM FWD Dbg1 Rsp
    printformat , 1, 1, DSPM FWD Dbg1, N=%d, <systime>  DSPM - FWD Dbg1 Id:%s 0x%04x 0x%04x 0x%04x 0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Id, uint16, base=enum:FwdIdT
    Args, array, type=uint16, maxsize=4, size=end
End

Begin Message, DSPM Trace DSPM FWD Viterbi Crc Rsp
    printformat , 1, 1, DSPM FWD Viterbi Crc, N=%d, <systime>  DSPM - FWD Viterbi Crc -  ChnlNum:%d RC: %d Crc:0x%04x DtaRate:0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChnlNum, uint16
    RC, uint16
    Crc, uint16
    DtaRate, uint16
End

Begin Message, DSPM Trace DSPM FWD Data Send Rsp
    printformat , 1, 1, DSPM FWD Data Send, N=%d, <systime>  DSPM - FWD Data Send - SmbNum:0x%04x ChnlQlty:0x%04x ChnlTyp:0x%04x D3Bits:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SmbNum, uint16
    ChnlQlty, uint16
    ChnlTyp, uint16
    D3Bits, uint16
End

Begin Message, DSPM Trace DSPM FWD Chnl Cfg Rsp
    printformat , 1, 1, DSPM FWD Chnl Cfg, N=%d, <systime>  DSPM - FWD Chnl Cfg - SmbNum:0x%04x State:%d ChnlNum:%d ChnlTyp:%d SmbLen:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SmbNum, uint16
    State, uint16
    ChnlNum, uint16
    ChnlTyp, uint16
    SmbLen, uint16
End

Begin Message, DSPM Trace DSPM FWD SchDtx TurboDec Parm Rsp
    printformat , 1, 1, DSPM FWD SchDtx TurboDec Parm, N=%d, <systime>  DSPM - FWD SchDtx TurboDec Parm -  EbNt:%d  NumFngr:%d  EsNt:%d  LcEsNt:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    EbNt, uint16
    NumFngr, uint16
    EsNt, int16
    LcEsNt, uint16
End

Begin Message, DSPM Trace DSPM FWD Modem Rsp
    printformat , 1, 1, DSPM FWD Modem, N=%d, <systime>  DSPM - FWD Modem Id:%s 0x%04x 0x%04x 0x%04x 0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Id, uint16, base=enum:FwdIdT
    Args, array, type=uint16, maxsize=4, size=end
End

Begin Message, DSPM Trace DSPM REV Trace1 Rsp
    printformat , 1, 1, DSPM REV Trace1, N=%d, <systime>  DSPM - REV Trace1 Id:%s 0x%04x 0x%04x 0x%04x 0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Id, uint16, base=enum:RevIdT
    Args, array, type=uint16, maxsize=4, size=end
End

Begin Message, DSPM Trace DSPM REV Chnl Cfg Rsp
    printformat , 1, 1, DSPM REV Chnl Cfg, N=%d, <systime>  DSPM - Rev Chnl Cfg - MsgId:0x%04x SmbNum:0x%04x Disable:0x%04x ChnlNum:%d Change:0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MsgId, uint16
    SmbNum, uint16
    Disable, uint16
    ChnlNum, uint16
    Change, uint16
End

Begin Message, DSPM Trace DSPM REV Chnl Data Rsp
    printformat , 1, 1, DSPM REV Chnl Data, N=%d, <systime>  DSPM - Rev Chnl Data - dRdyChnlRdy:0x%04x SmbNum:0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    dRdyChnlRdy, uint16
    SmbNum, uint16
End

Begin Message, DSPM Trace DSPM REV Modem Rsp
    printformat , 1, 1, DSPM REV Modem, N=%d, <systime>  DSPM - REV Modem Id:%s 0x%04x 0x%04x 0x%04x 0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Id, uint16, base=enum:RevIdT
    Args, array, type=uint16, maxsize=4, size=end
End

Begin Message, DSPM Trace DSPM RFC Trace1 Rsp
    printformat , 1, 1, DSPM RFC Trace1, N=%d, <systime>  DSPM - RFC %04x, %04x, %04x, %04x, %04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPM Trace DSPM RFC RxDAgc Gain Rsp
    printformat , 1, 1, DSPM RFC RxDAgc Gain, N=%d, <systime>  DSPM - RFC RxDAgc Gain - Antenna:%s, GainSt:0x%04x, BitSDigiG:0x%04x, RxdBm:%4.2f, RxThresh:%4.2f
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Antenna, uint16, base=enum:Main/Div
    GainSt, uint16
    BitSDigiG, uint16
    Rx(dBm), int16, scale=Q6, format=%4.2f
    RxTh(dBm), int16, scale=Q6, format=%4.2f
End

Begin Message, DSPM Trace DSPM RFC IP2 Rsp
    printformat , 1, 1, DSPM RFC IP2, N=%d, <systime>  DSPM - RFC IP2 - %04x, %04x, %04x, %04x, %04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPM Trace DSPM RFC Alternate Afc Rsp
    printformat , 1, 1, DSPM RFC Alternate Afc, N=%d, <systime>  DSPM - RFC Alternate Afc - Type:%s FreqErrHzQ2:%d ResidualErrHzQ2:%d GNSS_Quality_Indicator:%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Type, uint16, base=enum:RfcAlternateAfcT
    FreqErrHzQ2, int32
    ResidualErrHzQ2, int16
    GNSS_Quality_Indicator, uint16
End

Begin Message, DSPM Trace DSPM RFC Normal Afc Rsp
    printformat , 1, 1, DSPM RFC Normal Afc, N=%d, <systime>  DSPM - RFC IP2 - %04x, %04x, %04x, %04x, %04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPM Trace DSPM RFC Artd Metrics Main Rsp
    printformat , 1, 1, DSPM RFC Artd Metrics Main, N=%d, <systime>  DSPM - Artd Metrics Main - RssiQ6: %d, EcIoQ16: %d, EbNtQ8: %d, TxPwr: %d, PwrReportType: %s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RssiQ6, int16, base=10
    EcIoQ16, uint16, base=10
    EbNtQ8, uint16, base=10
    TxPwrQ6, int16, base=10
    PwrReportType, uint16, base=enum:DspmPwrReportTypeT
End

Begin Message, DSPM Trace DSPM RFC Artd Metrics Div Rsp
    printformat , 1, 1, DSPM RFC Artd Metrics Div, N=%d, <systime>  DSPM - Artd Metrics Div - RssiQ6: %d, EcIoQ16: %d, EbNtQ8: %d, EbNtCombQ8: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RssiQ6, int16, base=10
    EcIoQ16, uint16, base=10
    EbNtQ8, uint16, base=10
    EbNtCombQ8, uint16, base=10
End

Begin Message, DSPM Trace DSPM MSC Trace1 Rsp
    printformat , 1, 1, DSPM MSC Trace1, N=%d, <systime>  DSPM - MSC Trace1 %04x, %d, %d, %d, %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPM Trace DSPM MSC Spage State Rsp
    printformat , 1, 1, DSPM MSC Spage State, N=%d, <systime>  DSPM - MSC SPAGE -  CurrState:%s Cmd:%s NextState: %s SmbNum:0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    CurrState, uint16, base=enum:SpageStates
    Cmd, uint16, base=enum:SpageCmds
    NextState, uint16, base=enum:SpageStates
    SmbNum, uint16
End

Begin Message, DSPM Trace DSPM MSC Trace2 Rsp
    printformat , 1, 1, DSPM MSC Trace2, N=%d, <systime>  DSPM - MSC Trace2 %04x, %d, %d, %d, %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPM Trace DSPM MSC Gps Rsp
    printformat , 1, 1, DSPM MSC Gps, N=%d, <systime>  DSPM - MSC Gps -  SubState: %d Mode: %d Val1: %d Val2: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SubState, uint16
    Mode, uint16
    Val1, uint16
    Val2, uint16
End

Begin Message, DSPM Trace DSPM MSC Spi Write Rsp
    printformat , 1, 1, DSPM MSC Spi Write, N=%d, <systime>  DSPM - MSC Spi Write - Block: %d  Data0: 0x%04x  Data1: 0x%04x Trigger: 0x%04x CTRL: 0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Block, uint16
    Data0, uint16
    Data1, uint16
    Trigger, uint16
    CTRL, uint16
End

Begin Message, DSPM Trace DSPM SCH Qpch Decode State Rsp
    printformat , 1, 1, DSPM SCH Qpch Decode State, N=%d, <systime>  State:%s
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    State, uint16, base=enum:QpchDecodeStateT
    Parms, array,  type=uint16, maxsize=4, size=end, exist=(State<4)
    PilotComb, int16,exist=(State==4)
    EsNtQ8, int16,exist=(State==4)
    NoiseVar, uint32,exist=(State==4)
    QpchNoiseNormComb, int32,exist=(State==5)
    NoiseNormMF, int16,exist=(State==5)
    PNEvenPilot, int16,exist=(State==5)
    CorrLen, uint16,exist=(State==6)
    WinSize, uint16,exist=(State==6)
    PnOffset, uint16,exist=(State==6)
    AuxWalsh, uint16,exist=(State==6)
    QpchInd, int16,exist=(State==7)
    QpchMetric, int16,exist=(State==7)
    PilotEnergy, int16,exist=(State==7)
    NumPath, uint16,exist=(State==7)
    QpchNoiseNorm, int32,exist=(State==8)
    SignalNormMF, int16,exist=(State==8)
    SignalNormShift, int16,exist=(State==8)
    QpchSignalNorm, int32,exist=(State==9)
    EsNt(dB), uint32,scale=Q8,log10=true,logscale=10,exist=(State==9)
    QpchT1, int32,exist=(State==10)
    QpchT2, int32,exist=(State==10)
    QpchT3, int32,exist=(State==11)
    QpchSnrMarginal, int16,exist=(State==11)
    QpchT3LowLimit, int16,exist=(State==11)
End

Begin Message, DSPM Trace DSPM SCH Fngr Alloc Rsp
    printformat , 1, 1, DSPM SCH Fngr Alloc, N=%d, <systime>  DSPM - SCH FngrAlloc - AssignType:%s, FgrNum|AdvRet|WlshCh:0x%04x, OffsetQ3:0x%08x, FiltPwr:%2.4f dB
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AssignType, uint16, base=enum:SchFngrAllocType
    FngrNum, uint16
    OffsetQ3, uint32
    FiltPwr, uint16, scale=Q16, log10=true, logscale=10
End

Begin Message, DSPM Trace DSPM SCH ActPwrRpt Rsp
    printformat , 1, 1, DSPM SCH ActPwrRpt, N=%d, <systime>  DSPM - SCH ActPwrRpt -  ListNum:%d, PwrRptTimer:0x%04x, PnPhase:0x%04x, PwrEst:%2.4f dB, AccNum:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ActListNum, uint16
    PwrRptTimer, uint16
    PnPhase, uint16
    PwrEst, uint16, scale=Q16, log10=true, logscale=10
    AccNum, uint16
End

Begin Message, DSPM Trace DSPM SCH Aflt Coarse Pwr Rsp
    printformat , 1, 1, DSPM SCH Aflt Coarse Pwr, N=%d, <systime>  DSPM - SCH Aflt Coarse Pwr -  Offset:0x%04x Metric:0x%04x AccNum:0x%04x CoarsePwr:0x%04x Thresh2:0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Offset, uint16
    Metric, uint16
    AccNum, uint16
    CoarsePwr, uint16
    Thresh2, uint16
End

Begin Message, DSPM Trace DSPM SCH Aflt Rsp
    printformat , 1, 1, DSPM SCH Aflt, N=%d, <systime>  DSPM - SCH Aflt -  SubState:0x%04x Val_1:0x%04x Val_2:0x%04x Val_3:0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SubState, uint16
    Val_1, uint16
    Val_2, uint16
    Val_3, uint16
End

Begin Message, DSPM Trace DSPM SCH Spage Mode Rsp
    printformat , 1, 1, DSPM SCH Spage Mode, N=%d, <systime> Cmd:%s, SchSpageMode:%d, Parms:%d, %d, %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Cmd, uint16, base=enum:MscSpageSrchMode
    SchSpageMode, uint16, base=enum:SchSpageSrchMode
    Parms, array, type=uint16, maxsize=3, size=end
End

Begin Message, DSPM Trace DSPM SCH MinAcq Rsp
    printformat , 1, 1, DSPM SCH MinAcq, N=%d, <systime>  DSPM - SCH MinAcq -  ActListNum:%d, NeigListNum:%d, SrchTime:0x%04x, PwrEst:%2.4f dB, PnOffset(Tc/2):0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    WinSize, uint16
    CenterPnOffset, uint16
    SrchTime, uint16
    PwrEst, uint16, scale=Q16, log10=true, logscale=10
    PnOffset, uint16
End

Begin Message, DSPM Trace DSPM SCH CoarseAfc Rsp
    printformat , 1, 1, DSPM SCH CoarseAfc, N=%d, <systime>  DSPM - SCH CoarseAfc -  FreqErr(Hz):%d, CenterPnOffset:0x%04x, WinSize:%d, SrchTime:%d, ObfNum:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    FreqErr, int16
    CenterPnOffset, uint16
    WinSize, uint16
    SrchTime, uint16
    ObfNum, uint16
End

Begin Message, DSPM Trace DSPM SCH Stall0 Rsp
    printformat , 1, 1, DSPM SCH Stall0, N=%d, <systime>  DSPM - SCH Stall0 - ListQPtr:0x%04x, CurrentPnOffset:0x%04x, StartPnOffset:0x%04x, EndPnOffset:0x%04x, ActListNum:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ListQPtr, uint16
    CurrentPnOffset, uint16
    StartPnOffset, uint16
    EndPnOffset, uint16
    ActListNum, uint16
End

Begin Message, DSPM Trace DSPM SCH ProgramSearcher Rsp
    printformat , 1, 1, DSPM SCH ProgramSearcher, N=%d, <systime>  DSPM - SCH ProgramSearcher - HwMode:%s, SchMode:%d, CtrlRegValue:0x%04x, WinSiz:%d, SmbNum: %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    HwMode, uint16, base=enum:SchHwMode
    ListStatus, uint16, base=enum:SchListState
    CtrlRegValue, uint16
    WinSize, uint16
    SmbNum, uint16
End

Begin Message, DSPM Trace DSPM SCH NeigPwrRpt Rsp
    printformat , 1, 1, DSPM SCH NeigPwrRpt, N=%d, <systime>  DSPM - SCH NeigPwrRpt -  ListNum:%d, PnPhase:0x%04x, PwrEst:%2.4f dB, AccNum:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NeigListNum, uint16
    PnPhase, uint16
    PwrEst, uint16, scale=Q16, log10=true, logscale=10
    ActAccNum, uint16
End

Begin Message, DSPM Trace DSPM SCH PilotAcq Rdy Rsp
    printformat , 1, 1, DSPM SCH PilotAcq Rdy, N=%d, <systime>  RssiMain:%d, RssiDiv:%d, StrongAntType:%d, StrongAtnRssi:%d, SchIaqRssi:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    RssiM(dBm), int16, scale=Q6
    RssiD(dBm), int16, scale=Q6
    StrongAntType, uint16, base=enum:Main/Div
    StrongAtnRssi(dBm), int16, scale=Q6
    SchIaqRssi(dBm), int16, scale=Q0
End

Begin Message, DSPM Trace DSPM SCH Act AntPilotPwr Rsp
    printformat , 1, 1, DSPM SCH Act AntPilotPwr, N=%d, <systime>  DSPM - SCH Act AntPilotPwr - PilotPN:%d, PnPhaseQ1:%d, PwrEst:%2.4f dB, DivPnPhaseQ1:%d, DivPwrEst:%2.4f dB
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotPN, uint16
    PnPhaseQ1, uint16
    PwrEst, uint16, scale=Q16, log10=true, logscale=10
    DivPnPhaseQ1, uint16
    DivPwrEst, uint16, scale=Q16, log10=true, logscale=10
End

Begin Message, DSPM Trace DSPM SCH ActSetInfo Rsp
    printformat , 1, 1, DSPM SCH ActSetInfo, N=%d, <systime>  DSPM - SCH ActSetInfo - MscParmRxTxOffsetQ3:%d, PilotPN:%d, CenterPnOffset:0x%04x, StartPnOffset:0x%04x, EndPnOffset:0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    MscParmRxTxOffsetQ3, uint16
    PilotPN, uint16
    CenterPnOffset, uint16
    StartPnOffset, uint16
    EndPnOffset, uint16
End

Begin Message, DSPM Trace DSPM SCH IC Control Parm Rsp
    printformat , 1, 1, DSPM SCH IC Control Parm, N=%d, <systime>  DSPM - SCH IC Control Parm -  IC:%s RcType:%s  MscParmRxTxOffsetQ3, Default:%d  Old:%d  New:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    IC, uint16, base=enum:Enable/Disable
    RcType, uint16, base=enum:RcTypeT
    MscParmRxTxOffsetQ3 Default, int16
    Old, int16
    New, int16
End

Begin Message, DSPM Trace DSPM SCH DLL Adjust Rsp
    printformat , 1, 1, DSPM SCH DLL Adjust, N=%d, <systime>  DSPM - SCH DLL Adjust - TYPE:%s SysFrm20msPcgCnt:%d DllAdjustDMCounter:%d Adjust:%d SysDevTmgStatus:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    TYPE, uint16
    SysFrm20msPcgCnt, uint16
    DllAdjustDMCounter, uint16
    Adjust, int16
    SymbNum, uint16
End

Begin Message, DSPM Trace DSPM FPC DTX SNR Rsp
    printformat , 1, 1, DSPM FPC DTX SNR, N=%d, <systime>  DSPM - FPC DTX SNR - Val1:0x%04x Val2:0x%04x Val3:0x%04x Val4:0x%04x Val5:0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Val1, uint16
    Val2, uint16
    Val3, uint16
    Val4, uint16
    Val5, uint16
End

Begin Message, DSPM Trace DSPM FPC DTX VitMetric Rsp
    printformat , 1, 1, DSPM FPC DTX VitMetric, N=%d, <systime>  DSPM - FPC DTX VitMet - ChnlNum:%d VitThres:0x%04x VitMetr:0x%04x Val4:0x%04x Val5:0x%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    ChnlNum, uint16
    VitThres, uint16
    VitMetr, uint16
    Val4, uint16
    Val5, uint16
End

Begin Message, DSPM Trace DSPM SCH Cand AntPilotPwr Rsp
    printformat , 1, 1, DSPM SCH Cand AntPilotPwr, N=%d, <systime>  DSPM - SCH Cand AntPilotPwr - PilotPN:%d, PnPhaseQ1:%d, PwrEst:%2.4f dB, DivPnPhaseQ1:%d, DivPwrEst:%2.4f dB
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotPN, uint16
    PnPhaseQ1, uint16
    PwrEst, uint16, scale=Q16, log10=true, logscale=10
    DivPnPhaseQ1, uint16
    DivPwrEst, uint16, scale=Q16, log10=true, logscale=10
End

Begin Message, DSPM Trace DSPM SCH Ngbr AntPilotPwr Rsp
    printformat , 1, 1, DSPM SCH Ngbr AntPilotPwr, N=%d, <systime>  DSPM - SCH Ngbr AntPilotPwr - PilotPN:%d, PnPhaseQ1:%d, PwrEst:%2.4f dB, DivPnPhaseQ1:%d, DivPwrEst:%2.4f dB
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    PilotPN, uint16
    PnPhaseQ1, uint16
    PwrEst, uint16, scale=Q16, log10=true, logscale=10
    DivPnPhaseQ1, uint16
    DivPwrEst, uint16, scale=Q16, log10=true, logscale=10
End

Begin Message, DSPM Trace DSPM SCH MinAcq Parm Rsp
    printformat , 1, 1, DSPM SCH MinAcq Parm, N=%d, <systime>  DwellLen:%04x, PCnt:%04x, D1Th:%d, OutTh:%d, CtlRegValue:%04x
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    DwellLen, uint16
    PCnt, uint16
    D1Th, uint16
    OutTh, uint16
    CtlRegValue, uint16
End

Begin Message, DSPM Trace DSPM SCH SpageListProc Rsp
    printformat , 1, 1, DSPM SCH SpageListProc, N=%d, <systime>  SchSpageMode:%s, Parms:%d, %d, %d, %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    SchSpageMode, uint16, base=enum:SchSpageSrchMode
    Args, array, type=uint16, maxsize=4, size=end
End

Begin Message, DSPM Trace DSPM SCH DLL Slam Rsp
    printformat , 1, 1, DSPM SCH DLL Slam, N=%d, <systime>  AdjOffsetQ3:%d, StAdjust:%d, WaitCycles:%d, PnOffsetQ1:%d, SumNum:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    AdjOffsetQ3, int16
    StAdjust, uint16
    WaitCycles, uint16
    PnOffsetQ1, uint16
    SmbNum, uint16
End

Begin Message, DSPM Trace DSPM SCH PilotPwr Update Rsp
    printformat , 1, 1, DSPM SCH PilotPwr Update, N=%d, <systime>  NumPath:%d, PnPhase:%d, EarlyOffsetQ1:%d, EarlyPhaseQ1:%d, CenterPhaseQ1:%d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    NumPath, uint16
    PnPhase, uint16
    EarlyOffsetQ1, int16
    EarlyPhaseQ1, uint16
    EarlyPwr, uint16, scale=Q16, log10=true, logscale=10
End

Begin Message, DSPM Spy All Off Rsp
End

Begin Message, DSPM Spy DSPM Msg Buff Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Num Msg Buffs In Use, uint16, base=10
    Max Num Msg Buffs Used, uint16, base=10
    Num Msg Buffs[1] In Use, uint16, base=10
    Max Num Msg Buffs[1] Used, uint16, base=10
    Max Msg Buff[1] Size, uint16, base=10
    Num Msg Buffs[2] In Use, uint16, base=10
    Max Num Msg Buffs[2] Used, uint16, base=10
    Max Msg Buff[2] Size, uint16, base=10
    Num Msg Buffs[3] In Use, uint16, base=10
    Max Num Msg Buffs[3] Used, uint16, base=10
    Max Msg Buff[3] Size, uint16, base=10
    Num Msg Buffs[4] In Use, uint16, base=10
    Max Num Msg Buffs[4] Used, uint16, base=10
    Max Msg Buff[4] Size, uint16, base=10
End

Begin Message, DSPM Spy DSPM Fwv Rda Apost Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ApostRt, uint16
    AprioRt, uint16
    Chnl BitMap, uint16
    Static Bytes Len, uint16
    CRC, uint16
    H Metrics, record, type=FwdDtaRateT, maxsize=1
    P Metrics, record, type=FwdDtaRateT, maxsize=1
    RC, uint16
    RdaCndMtrx, uint16
    Yama Bits, record, type=FwdRdaYamaT, maxsize=1
    SER Cnt, record, type=FwdRdaSerT, maxsize=1
    Test Vector, uint16
    Decode 4 Times, uint16
End

Begin Record, FwdDtaRateT
    Eighth Rate, uint16
    Quarter Rate, uint16
    Half Rate, uint16
    Full Rate, uint16
End

Begin Record, FwdRdaYamaT
    Eighth Rate, uint16
    Quarter Rate, uint16
End

Begin Record, FwdRdaSerT
    Eighth Rate, uint16
    Quarter Rate, uint16
End

Begin Message, DSPM Spy DSPM Fwv Viterbi Outp Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Frm Cntr, array, type=uint16, maxsize=1, columns=40
    CRC, array, type=uint16, maxsize=1, columns=40
    Metric, array, type=uint16, maxsize=1, columns=40
    Outp Bits, array, type=uint16, maxsize=47, size=end, columns=40
End

Begin Message, DSPM Spy DSPM Fwv Rda Aprio Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    H Metrics, record, type=FwdDtaRateT, maxsize=1
End

Begin Message, DSPM Spy DSPM Fwv Generic Dbg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Fwv FER Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Fwm Finger Position Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Finger Stats, record, type=FingerRecT, maxsize=8
End

Begin Record, FingerRecT
    OffsetInt, uint16
    OffsetFrac, uint16
    OnTime, uint16
    Early, uint16
    Late, uint16
End

Begin Message, DSPM Spy DSPM Fwm Finger ModifyQ Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Fwm Smb Dbg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Fwm Generic 20ms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Fwm Fngr D3 Limiter Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SchAlloc, record, type=FngrAllocT, maxsize=1
    FwdAlloc, record, type=FngrAllocT, maxsize=1
    PN List, record, type=PNListT, maxsize=4
    EcIoThres, uint16
End

Begin Record, FngrAllocT
    Alloc Cnt, uint16, base=10
    Alloc Map, uint16, base=10
End

Begin Record, PNListT
    Pilot PN, uint16, base=10
    EcIo, int16, scale=Q16, format=%2.4f, log10=true, logscale=10
End

Begin Message, DSPM Spy DSPM Fwm Finger Usage Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Fwm Rpc Fpc Spy Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Alg Accu, record, type=AlgAcc,    maxsize=1
    RTx Dtx, record, type=RTxDTx,    maxsize=1
    PQ Th Z1, record, type=SChFPCT,   maxsize=1
    nP pP dP, record, type=MaxFngSNR, maxsize=1
    F0 F1 F3 F4, record, type=FngrSNR,   maxsize=1
    PQ Th Z0, record, type=FChFPCT,   maxsize=1
    rP Th Z2, record, type=FChRevT,   maxsize=1
End

Begin Record, AlgAcc
    AlgSw, uint16
    aE, uint16, base=10, format=%05d
    apU, uint16, base=10, format=%05d
End

Begin Record, RTxDTx
    RTx, uint16, base=10, format=%05d
    DTx, uint16, base=10, format=%05d
End

Begin Record, SChFPCT
    PQ, uint16, base=10, format=%05d
    Th, uint16, base=10, format=%05d
    Z1, uint16, base=10, format=%05d
End

Begin Record, MaxFngSNR
    nP, uint16, base=10, format=%05d
    pP, uint16, base=10, format=%05d
    dP, uint16, base=10, format=%05d
End

Begin Record, FngrSNR
    F0, uint16, base=10, format=%05d
    F1, uint16, base=10, format=%05d
    F2, uint16, base=10, format=%05d
    F3, uint16, base=10, format=%05d
End

Begin Record, FChFPCT
    PQ, uint16, base=10, format=%05d
    Th, uint16, base=10, format=%05d
    Z0, uint16, base=10, format=%05d
End

Begin Record, FChRevT
    rP, uint16, base=10, format=%05d
    Th, uint16, base=10, format=%05d
    Z2, uint16, base=10, format=%05d
End

Begin Message, DSPM Spy DSPM Fwm Fpc Average Spy Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    AvgZ0Metric, uint16, base=10, format=%5d
    Z0NumberFinger, uint16, base=10, format=%5d
    PriEbNtScale, uint16, base=10, format=%5d
    AvgZ0Threshold, uint16, base=10, format=%5d
    AvgZ1Metric, uint16, base=10, format=%5d
    Z1NumberFinger, uint16, base=10, format=%5d
    SecEbNtScale, uint16, base=10, format=%5d
    AvgZ1Threshold, uint16, base=10, format=%5d
End

Begin Message, DSPM Spy DSPM Rev Chnl1 Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Rev Chnl2 Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Rfc TxAGC Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Access OL (dB), int16, scale=Q6, format=%4.2f
    RxPwr (dB), int16, scale=Q6, format=%4.2f
    CLAdj (dB), int16, scale=Q6, format=%4.2f
    ChnlAdj (dB), int16, scale=Q6, format=%4.2f
    CalAdj (dB), int16, scale=Q6, format=%4.2f
    MaxCalAdj (dB), int16, scale=Q6, format=%4.2f
    TxPwr (dB), int16, scale=Q6, format=%4.2f
    TxAdjPwr (dB), int16, scale=Q6, format=%4.2f
    TxPdmPwr (dB), int16, scale=Q6, format=%4.2f
    TxPdm, uint16, base=16
    MaxPwr (dB), int16, scale=Q6, format=%4.2f
    MinPwr (dB), int16, scale=Q6, format=%4.2f
    OftPwr (dB), int16, scale=Q6, format=%4.2f
    GainState, int16, base=16
    GainScale (dB), int16, scale=Q6, format=%4.2f
    RevKsErr (dB), int16, scale=Q6, format=%4.2f
    TxSPdm (APT), uint16, base=16
    Tx 32bit HW Val, uint32, base=16, NoExist=0
End

Begin Message, DSPM Spy DSPM Rfc RxTx Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Received Power (dBm), int16, scale=Q6, format=%4.2f
    Receive PDM Value, uint16
    Rx Gain State, int16
    Transmit Power (dBm), int16, scale=Q6, format=%4.2f
    Transmit PDM Value, uint16
    Tx Gain State, int16
    RxDAgc Value, record, type=DAgcRecord, maxsize=1
    Div Rx Power (dBm), int16, scale=Q6, format=%4.2f
    Div Rx Gain State, int16
    DivRxDAgc Value, record, type=DAgcRecord, maxsize=1
    Tx 32bit HW Value, uint32, NoExist=0
End

Begin Record, DAgcRecord
    Bitsel, int16, base=10
    DigiGain, int16, base=10
    HwVal, uint16
End

Begin Message, DSPM Spy DSPM Rfc Afc Freq Error Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Frequency Error (Hz), int16
    AFC PDM Value, uint16
    AFC Enabled, int16
    Coarse Freq Error(Hz), int16
End

Begin Message, DSPM Spy DSPM Rfc RevPwrCntrl Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Pilot Gating Rate, uint16
    Step Size Index, int16
    Power Control Finger Bits, uint16
    Valid PCGs, uint16
    Tx Accum PCB Adj (dB), int16,  scale=Q6, format=%4.2f
    Tx Gain Scaling (dB), int16,  scale=Q6, format=%4.2f
    Received Power (dBm), int16,  scale=Q6, format=%4.2f
    Transmit Power (dBm), int16,  scale=Q6, format=%4.2f
    Rpc Channel Type, uint16
    Ks (PilotPwr/TotalPwr), int16,  scale=Q15, format=%4.2f
    RpcbBsGroup, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Rfc Smart Antenna Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    ValidData, uint16
    ActiveFingerPN0, uint16
    ActiveFingerPN1, uint16
    ActiveFingerPN2, uint16
    ActiveFingerPN3, uint16
    EsNt0 (dB), uint16, scale=Q5, format=%2.4f, log10=true, logscale=10
    EsNt1 (dB), uint16, scale=Q5, format=%2.4f, log10=true, logscale=10
    EsNt2 (dB), uint16, scale=Q5, format=%2.4f, log10=true, logscale=10
    EsNt3 (dB), uint16, scale=Q5, format=%2.4f, log10=true, logscale=10
    BS2MobPwr, uint16
    Mob2BSPwr, uint16
    Izero (dBm), int16,  scale=Q6, format=%4.2f
    EbNtFiltering0 (dB), int16,  scale=Q8, format=%4.2f
    EbNtFiltering1 (dB), int16,  scale=Q8, format=%4.2f
    NtRawFngr1_0, uint16
    NtRawFngr3_2, uint16
    TxPwr (dBm), int16,  scale=Q6, format=%4.2f
    TxGainState, uint16
    PilotDataFingerI0, uint16
    PilotDataFingerI1, uint16
    PilotDataFingerI2, uint16
    PilotDataFingerI3, uint16
    PilotDataFingerQ0, uint16
    PilotDataFingerQ1, uint16
    PilotDataFingerQ2, uint16
    PilotDataFingerQ3, uint16
End

Begin Message, DSPM Spy DSPM Rfc DAgc Spage Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    AgcTargetLog2Q8, int16
    Antenna, uint16, base=enum:Main/Div
    GainSt, int16
    RxDAgc In Symbols, record, type=DAgcSpyRecord, maxsize=6
End

Begin Record, DAgcSpyRecord
    Pwr_I, int16
    Pwr_Q, int16
    IQLog2Q8, int16
End

Begin Message, DSPM Spy DSPM Msc Spy1 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Msc Finger Acq Spy Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Msc Cfs State Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Sch Sort Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Active Data, record, type=SchSortRecords, maxsize=10
End

Begin Record, SchSortRecords
    Metric, uint16
    Offset, uint16
    BinNum, uint16
End

Begin Message, DSPM Spy DSPM Sch UsablePath Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Active Data, record, type=SchUsablePathT, maxsize=8, size=end, columns=60
End

Begin Record, SchUsablePathT
    PilotPN, int16
    1/8TcOffset, int16
    Antenna, uint16, base=enum:Main/Div
    OffsetIntQ3, uint32
    PilotWalsh, uint16
    ChnlWalsh0, uint16
    ChnlWalsh1, uint16
    ChnlWalsh2, uint16
    ChnlWalsh3, uint16
    PwrEst, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
    BsPcIndex, uint16
End

Begin Message, DSPM Spy DSPM Sch Alloc Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Active Data, record, type=AllocT, maxsize=8, size=end, columns=60
End

Begin Record, AllocT
    SortIndex, int16
    AssocFinger, int16
    PilotPN, int16
    OffsetIntQ3, uint32
    Antenna, uint16, base=enum:Main/Div
    PwrEst, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
End

Begin Message, DSPM Spy DSPM Sch Fngr Pwr Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    EarliestFngr, uint16
    FngrAlocMap, uint16
    SysTimeOffsetQ3, uint16
    RxTxOffsetQ3, uint16
    TimeTrkUpdateFrmCnt, uint16
    Null, int16
    Null2, int16
    Data, record, type=FngrPwrSpyT, maxsize=8, size=end, columns=60
End

Begin Record, FngrPwrSpyT
    Assign, uint16
    PilotPN, int16
    OffsetInt, uint16
    PwrOnTime, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
    PwrEarly, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
    PwrLate, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
    SCHWalsh, uint8
    Antenna, uint8,  base=enum:Main/Div
End

Begin Message, DSPM Spy DSPM Sch Fngr Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Active Data, record, type=FingerStatusT, maxsize=8, size=end, columns=60
End

Begin Record, FingerStatusT
    Assigned, uint16
    PilotPN, int16
    1/8TcOffset, int16
    Antenna, uint16, base=enum:Main/Div
    OffsetIntQ3, uint32
    PilotWsh, uint16
    ChWsh0, uint16
    ChWsh1, uint16
    ChWsh2, uint16
    ChWsh3, uint16
    AlocStatus, uint16, base=enum:AllocStatus
    EcIoInst, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
    EcIoFilt, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
    DropTimer, uint16
    AdvRtdDcn, uint16
    BsPcIdx, uint16
    FastTimTrkEn, uint16
End

Begin Message, DSPM Spy DSPM Sch Qpch Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Sch Aflt Fine Sort List0 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Fine Sort List0, record, type=SchSortRecords, maxsize=10
End

Begin Message, DSPM Spy DSPM Sch Aflt Fine Srch Dbg Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Aflt Fine Search Dbg Data, record, type=AlftFineDbgT, maxsize=5
End

Begin Record, AlftFineDbgT
    ListQ Num, uint16
    PilotPN, uint16
    CoarsePwr, uint16
    Thresh2, uint16
    PnOffset, uint16
    Divisor, uint16
    Divident, uint16
    Quotient, uint16
    PwrNormIo, uint16, scale=Q16, format=%2.4f, log10=true, logscale=10
End

Begin Message, DSPM Spy DSPM Sch Aflt Pwr Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PilotPN, uint16
    Coarse Search Power, record, type=AfltCoarseSrchResultsT, maxsize=10
    Fine Search Power, record, type=AfltFineSrchResultsT, maxsize=8
End

Begin Record, AfltCoarseSrchResultsT
    Metric, uint16
    Offset, uint16
    BinNum, uint16
End

Begin Record, AfltFineSrchResultsT
    Metric, uint16
    Offset, uint16
    BinNum, uint16
End

Begin Message, DSPM Spy DSPM Sch Aflt Fine Srch Rpt Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SeqNum, uint16
    ReferencePN, uint16
    TimingCnt, uint16
    NumAflt, uint16
    Alft Measurement, record, type=AlftRecT, maxsize=8
End

Begin Record, AlftRecT
    PilotPN, uint16
    CenterOffset, int16, scale=Q4, format=%3.4f
    Strength, uint16, scale=Q16, format=%2.2f, log10=true, logscale=10
End

Begin Message, DSPM Spy DSPM Sch Query Timing Rsp Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    SysTime OffsetQ3, int16
    FingerTm, record, type=FingerTmT, maxsize=8
    Finger Status, uint16
End

Begin Record, FingerTmT
    PilotPN, uint16
    OffsetQ3, int16, scale=Q3,  format=%3.3f
    OnTime, uint16,
    Early, uint16,
    Late, uint16,
    Long Term Power, uint16, scale=Q16, format=%2.2f, log10=true, logscale=10
End

Begin Message, DSPM Spy DSPM Sch Cfs Rslt Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Sch CAfc Sort Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Active Data, record, type=SchSortRecords, maxsize=10
End

Begin Message, DSPM Spy DSPM Sch Coherent Sort Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Active Data, record, type=SchSortRecords, maxsize=10
End

Begin Message, DSPM Spy DSPM Dbg Spy1 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Dbg Spy2 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Dbg Spy3 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=50, size=end, columns=60
End

Begin Message, DSPM Spy DSPM Fpc Spy1 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    S0, uint16
    S1, uint16
    S2, uint16
    S3, uint16
    N0D, uint16
    N1D, uint16
    N2D, uint16
    N3D, uint16
    Snr0, uint16
    Snr1, uint16
    Snr2, uint16
    Snr3, uint16
    Snr, uint32
    PilotEsNt, uint16
    PcStep, uint16
End

Begin Message, DSPM Spy DSPM Fpc Spy2 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PilotEsNt, int16, scale=Q8, format=%4.2f
    FchSetP, int16, scale=Q3, format=%4.2f
    DcchSetP, int16, scale=Q3, format=%4.2f
    SchSetP, int16, scale=Q3, format=%4.2f
    PcBitBuff, uint16
    EbNt, int16, scale=Q8, format=%4.2f
    ConsecFrmErr, uint16
    ErrFrames, uint16
    SchEbNt, int16, scale=Q8, format=%4.2f
    SchErrFrames, uint16
    SchSmblPwr, uint32
    PilotEs, uint16
    VitMetric, uint16
    SchQIB, uint16
    QIB, uint16
End

Begin Message, DSPM Spy DSPM Fpc Config Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RC, uint16
    Chnl Incl, uint16
    Chnl Changed, uint16
    PriChan, uint16
    FpcMode, uint16
    SchRate, uint16
    Fch Parms, record, type=FwdFpcChParmT, maxsize=1
    Dcch Parms, record, type=FwdFpcChParmT, maxsize=1
    Sch Parms, record, type=FwdFpcChParmT, maxsize=1
    SetPThresh, uint16, scale=Q3, format=%2.3f
    SetPThreshSch, uint16, scale=Q3, format=%2.3f
    FpcSubChnlGain, uint16, scale=Q8, format=%2.3f
    ChCal, record, type=FwdFpcChCalT, maxsize=1
End

Begin Record, FwdFpcChParmT
    ChnlNum, uint16
    InitSetP, uint16, scale=Q3, format=%2.3f
    Fer, uint16
    MinSetP, uint16, scale=Q3, format=%2.3f
    MaxSetP, uint16, scale=Q3, format=%2.3f
End

Begin Record, FwdFpcChCalT
    ChCal_0, uint16,  scale=Q8, format=%2.3f
    ChCal_1, uint16,  scale=Q8, format=%2.3f
    ChCal_2, uint16,  scale=Q8, format=%2.3f
    ChCal_3, uint16,  scale=Q8, format=%2.3f
    ChCal_4, uint16,  scale=Q8, format=%2.3f
    ChCal_5, uint16,  scale=Q8, format=%2.3f
    ChCal_6, uint16,  scale=Q8, format=%2.3f
    ChCal_7, uint16,  scale=Q8, format=%2.3f
End

Begin Message, DSPM Spy DSPM Fpc Spy3 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    EbNt0, uint32
    EbNt1, uint32
    Tpr0, uint32
    Tpr1, uint32
    TprFast0, uint32
    TprFast1, uint32
    TprSlow0, uint32
    TprSlow1, uint32
End

Begin Message, DSPM Spy DSPM Fpc OutLp Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    PcBitBuff, uint16
    PilotEsNt, int16, scale=Q8, format=%4.2f
    DcchEbNt, int16, scale=Q8, format=%4.2f
    DcchSetP, int16, scale=Q3, format=%4.2f
    FchEbNt, int16, scale=Q8, format=%4.2f
    FchSetP, int16, scale=Q3, format=%4.2f
    ConsecFrmErr, uint16, base=10
    PriPwrDnRqt, uint16, base=10
    SchFrmCnt, uint16, base=10
    SchEbNt, int16, scale=Q8, format=%4.2f
    SchSetP, int16, scale=Q3, format=%4.2f
    SchConFrmErr, uint16, base=10
    SchPwrDnRqt, uint16, base=10
    SchOlfAdj, int16, scale=Q14, format=%2.4f
    SchOlcAdj, int16, scale=Q14, format=%2.4f
    SchTotFrmErr, uint16, base=10
End

Begin Message, DSPM Spy DSPM Fpc OuterLoop Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Fch_0, record, type=FwdFpcChOLParm1T, maxsize=1
    Fch_1, record, type=FwdFpcChOLParm2T, maxsize=1
    Dcch_0, record, type=FwdFpcChOLParm1T, maxsize=1
    Dcch_1, record, type=FwdFpcChOLParm2T, maxsize=1
    Sch_0, record, type=FwdFpcChOLParm1T, maxsize=1
    Sch_1, record, type=FwdFpcChOLParm2T, maxsize=1
End

Begin Record, FwdFpcChOLParm1T
    ChnlNum, uint16
    InitSetP, uint16, scale=Q3, format=%2.3f
    Fer, uint16, base=10, format=%5d
    MinSetP, uint16, scale=Q3, format=%2.3f
    MaxSetP, uint16, scale=Q3, format=%2.3f
End

Begin Record, FwdFpcChOLParm2T
    CurrSetP, uint32, scale=Q14, format=%2.3f
    OLdBUp, uint16, scale=Q15, format=%2.3f
    OLdBDown, uint16, scale=Q15, format=%2.3f
    ChnlGain, uint16, scale=Q8, format=%2.3f
    SetPMetric, uint16, base=10, format=%5d
End

Begin Message, ETS DSPM Peek Rsp
    Address, uint16
    Words (16), uint16
    Data, array, type=uint16, maxsize=30, size=Words (16)
End

Begin Message, ETS DSPM Poke Rsp
    Address, uint16
    Words (16), uint16
End

Begin Message, ETS DSPM Memory Test Rsp
    Result, uint16, base=enum:Fail/Pass
    Error Addr, uint16
End

Begin Message, ETS DSPM Version Rsp
    Major, int16
    Minor, int16
    Patch, int16
    Month, int16
    Day, int16
    Year, int16
    Hour, int16
    Min, int16
End

Begin Message, ETS DSPM Heart Beat Ctrl Rsp
End

Begin Message, ETS DSPM Code Peek Rsp
    Address, uint16
    Words (16), uint16
    Data, array, type=uint16, maxsize=30, size=Words (16)
End

Begin Message, ETS DSPM Code Poke Rsp
    Address, uint16
    Words (16), uint16
End

Begin Message, ETS DSPM Code Memory Test Rsp
    Result, uint16, base=enum:Fail/Pass
    Error Addr, uint16
End

Begin Message, ETS DSPM Bitwise Operation Rsp
    OldValue, uint16
    NewValue, uint16
End

Begin Message, ETS DSPM Fwd Chnl Pwr Puncture Rsp
    Enabled, uint16
End

Begin Message, ETS DSPM Fwd Chnl Scramble Rsp
    Enabled, uint16
End

Begin Message, ETS DSPV Fault Rsp
    Unit, uint16, base=enum:DSP Unit
    Codes, union,  enum=Unit
End

Begin Message, DSPV Fault Exe Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSP Exe Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPV Fault Ipc Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSP Ipc Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPV Fault Mon Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSP Mon Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPV Fault Mth Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSP Mth Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPV Fault Sys Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSP Sys Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPV Fault Fwd Rsp
End

Begin Message, DSPV Fault Msc Rsp
End

Begin Message, DSPV Fault Rev Rsp
End

Begin Message, DSPV Fault Rfc Rsp
End

Begin Message, DSPV Fault Sch Rsp
End

Begin Message, DSPV Fault Vap Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSPV Vap Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPV Fault V13 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSPV V13 Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPV Fault Ve8 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSPV Ve8 Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPV Fault Vec Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSPV Vec Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPV Fault Amp Rsp
    SysTime, uint32
    Error Code, uint16, base=enum:DSPV Amp Err Codes
    Data, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPV Fault ASG Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSPV ASG Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, DSPV Fault App Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Code 1, uint16, base=enum:DSPV App Err Codes
    Code 2, uint16
    Fault Type, uint16, base=enum:Continue/Halt
End

Begin Message, ETS DSPV Printf Rsp
    Format, string, length=22
    Args, array,  type=uint16, maxsize=5, size=end
End

Begin Message, ETS DSPV Alive Rsp
End

Begin Message, ETS DSPE Alive Rsp
End

Begin Message, ETS DSPV Loopback Rsp
    Data, array, type=uint16, maxsize=40, size=end
End

Begin Message, DSPV Trace All Off Rsp
    printformat All Traces
End

Begin Message, DSPV Trace DSPV Voice Ctrl Regs Mpp Task Rsp
    printformat , 1, 1, DSPV Voice Ctrl Regs Mpp Task, N=%d, <systime>  DSPV Enc Task Beg - Status Reg = 0x%X V Ctrl Reg = 0x%X Mode Reg = 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Mpp Samp Buf Err Rsp
    printformat , 1, 1, DSPV Mpp Samp Buf Err, N=%d, <systime>  DSPV Mpp Samp Buf Err = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Spch Srvc Opt Ctrl Parms Rsp
    printformat 1, 1, DSPV Spch Srvc Opt Ctrl Parms, N=%d, <systime>  DSPV SSO Ctrl Parms - Spch Srvc Opt = 0x%X Rs1 Rrm Lvl = 0x%X Rs2 Rrm Lvl = 0x%X M2m Mode = 0x%X Init Codec = %X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Mpp Enc Rates Rsp
    printformat , 1, 1, DSPV Mpp Enc Rates, N=%d, <systime>  DSPV Encode Rates - Max Rate = 0x%X Enc Rate = 0x%X Min Rate = 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Voice Loopback Mode Rsp
    printformat 1, 1, DSPV Voice Loopback Mode, N=%d, <systime>  DSPV Voice Loopback Mode = 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Stack Profile Rsp
    printformat 1, 1, DSPV Stack Profile, N=%d, <systime>  XStack Usage = 0x%X YStackUsage = 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Slip and Stuff Check Rsp
    printformat 1, 1, DSPV Slip and Stuff Check, N=%d, <systime>  MppBufErr = 0x%X MppSampBufPGrap = 0x%X SppSampBufPGrap = 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Mpp Tty Enc Info Rsp
    printformat 1, 1, DSPV Mpp Tty Enc Info, N=%d, <systime>  Tty Header = 0x%X Tty Char = 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Voice Ctrl Regs Spp Task Rsp
    printformat , 1, 1, DSPV Voice Ctrl Regs Spp Task, N=%d, <systime>  DSPV Dec Task Beg - Status Reg = 0x%X V Ctrl Reg = 0x%X Mode Reg = 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Spp Samp Buf Err Rsp
    printformat , 1, 1, DSPV Spp Samp Buf Err, N=%d, <systime>  DSPV Spp Samp Buf Err = %d
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=int16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Spp Dec Rates Rsp
    printformat , 1, 1, DSPV Spp Dec Rates, N=%d, <systime>  DSPV Decode Rates - Dec Rate = 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Speech Buffer Address Rsp
    printformat , 1, 1, DSPV Speech Buffer Address, N=%d, <systime>  DSPV Speech Buffer Address - Mic Buffer = 0x%X Spkr Buffer = 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Speech Buffer Location Rsp
    printformat , 1, 1, DSPV Speech Buffer Location, N=%d, <systime>  DSPV Speech Buffer Location - MppTaskBufP = 0x%X  MppSampBufP = 0x%X   SppTaskBufP = 0x%X  SppSampBufP = 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Spp Tty Dec Info Rsp
    printformat 1, 1, DSPV Spp Tty Dec Info, N=%d, <systime>  Tty Header = 0x%X Tty Char = 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Acp Noiselevel Rsp
    printformat , 1, 1, DSPV Acp Noiselevel, N=%d, <systime>  DSPV Acp Noiselevel - NoiseLevel = 0x%X pre_spkrvolume = 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPV Trace DSPV Acp Sppfrmpwr Rsp
    printformat , 1, 1, DSPV Acp Sppfrmpwr, N=%d, <systime>  DSPV Acp Sppfrmpwr - spp_FrmPwrBufP = 0x%X SqrtFrmPwr = 0x%X LTFrmPwr = 0x%X pre_spkrvolume = 0x%X SpkrGain = 0x%X
    N, uint32
    FullSysTime, array, type=uint64, base=date, maxsize=4, size=N
    Args, array, type=uint16, maxsize=5, size=end
End

Begin Message, DSPV Spy All Off Rsp
End

Begin Message, DSPV Spy DSPV Msg Buff Stats Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Num Msg Buffs In Use, uint16, base=10
    Max Num Msg Buffs Used, uint16, base=10
    Num Msg Buffs[1] In Use, uint16, base=10
    Max Num Msg Buffs[1] Used, uint16, base=10
    Max Msg Buff[1] Size, uint16, base=10
    Num Msg Buffs[2] In Use, uint16, base=10
    Max Num Msg Buffs[2] Used, uint16, base=10
    Max Msg Buff[2] Size, uint16, base=10
    Num Msg Buffs[3] In Use, uint16, base=10
    Max Num Msg Buffs[3] Used, uint16, base=10
    Max Msg Buff[3] Size, uint16, base=10
    Num Msg Buffs[4] In Use, uint16, base=10
    Max Num Msg Buffs[4] Used, uint16, base=10
    Max Msg Buff[4] Size, uint16, base=10
End

Begin Message, DSPV Spy DSPV Mpp Task Beg Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Mpp Pre Noise Supr Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Mpp Pre Aec Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Mpp Post Aec Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Mpp Pre Enc Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Mpp Post Enc Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Mpp Task End Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Mpp Pre Tty Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Mpp Enc Pckt Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Mpp Pre Fif Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Mpp Pre Bif Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Mpp Pre Scal Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Mpp Task End Gen Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Mpp Ans OUTPUTPWR Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    OUTPUTPW(dB), uint32, format=%4.2f, log10=true, logscale=10
End

Begin Message, DSPV Spy DSPV Spp Task Beg Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Spp Pre Dec Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Spp Post Dec Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Spp Pre Tone Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Spp Post Mixer Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Spp Post Process Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Spp Task End Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Spp Pre Tty Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Spp Post Tty Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Spp Pre Scal Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Spp Task End Gen Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Spp Dec Pckt Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Voice Apps Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    VapSpchSrvcOption, uint16,    base=enum:Enum SpchSrvcOptions, default = SO3    ,indent = 3
    VapAudioPath, uint16,    base=enum:Enum AudioPaths                        ,indent = 3
    VapNumMic, uint16,    base=enum:Enum NumMics     , default = DUAL MIC  ,indent = 3
    VapSamplingRate, uint16,    base=enum:Enum SamplingRates  , default = 16000  ,indent = 3
    VapMicBifMode, uint16,    base=enum:OFF/ON                                 ,indent = 3
    VapSpkrFifMode, uint16,    base=enum:OFF/ON                                 ,indent = 3
    VapTtyMode, uint16,    base=enum:OFF/ON                                 ,indent = 3
    VapEchoCancelMode, uint16,    base=enum:OFF/ON                                 ,indent = 3
    VapNoiseSupresMode, uint16,    base=enum:OFF/ON                                 ,indent = 3
    VapAudioAcpCompMode, uint16,    base=enum:OFF/ON                                 ,indent = 3
    VapAudioAcpAsvcMppMode, uint16,    base=enum:OFF/ON                                 ,indent = 3
    VapAudioAcpAsvcSppMode, uint16,    base=enum:OFF/ON                                 ,indent = 3
    VapVmemoMode, uint16,    base=enum:Enum VapVmemoType                      ,indent = 3
    VapAudioRecPlaybackMode, uint16,    base=enum:Enum AudioRecPlaybackModes             ,indent = 3
    VapLpbkMode, uint16,    base=enum:Enum VapLoopbackMode                   ,indent = 3
    VapSpkrVolScalFctr(dB), uint16,    scale=Q8, format=%4.2f, log10=true, logscale=20  ,indent = 3
    VapSidetoneScalFctr(dB), uint16,    scale=Q8, format=%4.2f, log10=true, logscale=20  ,indent = 3
    VapMicVolScalFctr(dB), uint16,    scale=Q8, format=%4.2f, log10=true, logscale=20  ,indent = 3
    VapDacPgaVal, uint16,    base=16                                          ,indent = 3
    VapToneVolScalFctr(dB), uint16,    scale=Q8, format=%4.2f, log10=true, logscale=20  ,indent = 3
    VapMppProcCnt, uint16,    base=16                                          ,indent = 3
    VapSppProcCnt, uint16,    base=16                                          ,indent = 3
    VapModeReg, uint16,    base=16                                          ,indent = 3
    VapVCtrlReg, uint16,    base=16                                          ,indent = 3
    VapStatusReg, uint16,    base=16                                          ,indent = 3
    VapPcModeCtrl, uint16,    base=enum:DISABLE/ENABLE/MIC PCM MIX/SPKR PCM MIX/MIC SPKR PCM MIX   ,indent = 3
    VapPcmIfApiModeCtrl, uint16,    base=enum:OFF/ON                                 ,indent = 3
    VapAbeMode, uint16,    base=enum:ABE_OFF/ABE_ON                         ,indent = 3
    VapMixerMode, uint16,    base=enum:OFF/ON                                 ,indent = 3
    VapMixerChCfg, uint16,    base=enum:Enum AppCh                             ,indent = 3
    VapMixerSampleRate, uint16,    base=enum:Enum SampleRateIndex                   ,indent = 3
End

Begin Message, DSPV Spy DSPV Aec Rin Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Aec Sin1 Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Aec Aec Out Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Aec Ref Out Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Aec Ans Out Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Aec Ric Out Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Aec Sin2 Out Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Aec Bss1 Out Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Aec Bss2 Out Spy Parms Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Ringer Apps Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    RngrModeReg, uint16,    base=enum:Enum RngrModeRegEnum  				   ,indent = 3
    RngrSampleRate(KHz), uint16,    base=10            							   ,indent = 3
    RngrReleaseRngrFlg, uint16,    base=enum:OFF/ON								   ,indent = 3
    RngrFastReleaseFlg, uint16,    base=enum:OFF/ON								   ,indent = 3
    RngrVolScalFctr(dB), uint16,    scale=Q8, format=%4.2f, log10=true, logscale=20  ,indent = 3
    AppSbcEncCount, uint16,    base=10            							   ,indent = 3
    RngrMipsErrCnt, uint16,    base=10										   ,indent = 3
    RngrFifoSyncErrCnt, uint16,    base=10										   ,indent = 3
    RngrMixerMode, uint16,    base=enum:OFF/ON                                 ,indent = 3
    RngrMixerChCfg, uint16,    base=enum:Enum AppCh                             ,indent = 3
    RngrMixerSampleRate, uint16,    base=enum:Enum SampleRateIndex                   ,indent = 3
    AsgRngrTaskCnt, uint16,    base=16                                          ,indent = 3
End

Begin Message, DSPV Spy DSPV Ringer Data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Ringer Data FM Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Ringer Data VOICE Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Ringer Shared Mem Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Ringer Synth Out Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Ringer Mixer Out Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Music Apps Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    AppAudioPath, uint16,    base=enum:Enum AppAudioPaths                     ,indent = 3
    AppVolScalFctr(dB), uint16,    scale=Q8, format=%4.2f, log10=true, logscale=20  ,indent = 3
    AppId, uint16,    base=enum:EnumAppId                              ,indent = 3
    AppState, uint16,    base=enum:Enum AppState                          ,indent = 3
    AppSampleRate, uint16,    base=10                                          ,indent = 3
    AppMixerMode, uint16,    base=enum:OFF/ON                                 ,indent = 3
    AppMixerChCfg, uint16,    base=enum:Enum AppCh                             ,indent = 3
    AppMixerSampleRate, uint16,    base=enum:Enum SampleRateIndex                   ,indent = 3
    AppEqMode, uint16,    base=enum:OFF/ON                                 ,indent = 3
    AppEqBandGain[0]_60Hz, int16,     base=10                                          ,indent = 3
    AppEqBandGain[1]_230Hz, int16,     base=10                                          ,indent = 3
    AppEqBandGain[2]_910Hz, int16,     base=10                                          ,indent = 3
    AppEqBandGain[3]_3000Hz, int16,     base=10                                          ,indent = 3
    AppEqBandGain[4]_14000Hz, int16,     base=10                                          ,indent = 3
    g_nTaskCallCntMR, uint16,    base=16                                          ,indent = 3
    g_nTaskCallCntSR, uint16,    base=16                                          ,indent = 3
    AppFifoSyncErrCnt, uint16,    base=16                                          ,indent = 3
    AppSbcEncCnt, uint16,    base=16                                          ,indent = 3
End

Begin Message, DSPV Spy DSPV MP3 Quick Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    File Id, uint16,  base=10
    Status, uint16,  base=enum:Normal/Sync Not Found/Loss of Sync/Out of Sequence/Ramping down/Terminated
    Avg Bytes Per Second, uint16,  base=10
    1st Sync Frame Offset, uint32,  base=16
    Current Frame Bits Per Second, uint32,  base=10
    Sampling Rate(Hz), uint16,  base=10
    NumEqualizerBands, uint16,  base=10
End

Begin Message, DSPV Spy DSPV MP3 Main Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    NeedNumOfWords, uint16,  base=10
    DataAdjustByteOffset, uint32,  base=16
    NumSfm, uint16,  base=10
    Mp3FrameNum, uint32,  base=10
    samplesPerFrame, uint16,  base=10
    SamplesPerFrameFctr, uint16,  base=10
    FrameBits, uint16,  base=10
    GotBits, uint32,  base=10
    AvgBitRate, uint32,  base=10
    CirFrameStart, uint16,  base=16
    NumSb, uint16,  base=10
    NumSbFrq, uint16,  base=10
    WordStreamBufPtr, uint16,  base=16
    TotalBits, uint32,  base=10
    WordIndex, uint16,  base=10
    BitIndex, uint16,  base=10
    CirBufPtr, uint16,  base=16
    ReadBits, uint16,  base=10
    CirWordIndex, uint16,  base=10
    CirBitIndex, uint16,  base=10
    ByteOffset, int16,  base=10
    MPEG Version, uint16,  base=enum:MPEG II/MPEG I
    Layer, int16,  base=10
    Error Protection, int16,  base=10
    Bitrate Index, int16,  base=10
    Sampling Frequency, int16,  base=10
    Padding, int16,  base=10
    Extension, int16,  base=10
    Copyright, int16,  base=10
    Original, int16,  base=10
    Emphasis, int16,  base=10
    Actual_mode, int16,  base=10
    Tab_num, int16,  base=10
    Stereo, int16,  base=10
    Jsbound, int16,  base=10
    Sblimit, int16,  base=10
End

Begin Message, DSPV Spy DSPV App File Read Request Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV App File Received Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV App Fmb Check Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    FMB Cmd Id, uint16, base=enum:FMB Cmd Id
    Fault Unit, uint16, base=16
    Err Type, uint16, base=16
    Rdy Flag Count, uint16, base=16
    C2V FIQ Cmd Pre, uint16, base=16
    C2V FIQ Cmd, uint16, base=16
    D2C FIQ Cmd Pre, uint16, base=16
    D2C FIQ Cmd, uint16, base=16
    Rdy Flag Max Cnt, uint16, base=16
End

Begin Message, DSPV Spy DSPV Resampler Left Channel Output Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Resampler Right Channel Output Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Resampler Left Channel Input Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Resampler Right Channel Input Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV EQ_OUTPUT_L_CHAN_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV EQ_OUTPUT_R_CHAN_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV MIXER1_OUTPUT_L_CHAN_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV MIXER1_OUTPUT_R_CHAN_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV MIXER2_OUTPUT_L_CHAN_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV MIXER2_OUTPUT_R_CHAN_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=100, size=end, columns=60
End

Begin Message, DSPV Spy DSPV AAC Quick Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV AAC Main Status Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV AAC Parser Output Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV APP_MIXER_MSG_BUF_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV APP_MIXER_INPUT_BUF_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV APP_MIXER_SRC_DATA_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV APP_MIXER_OUT_DATA_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV APP_MIXER_WRITE_PTR_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV APP_MIXER_READ_PTR_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV APP_MIXER_DATA_ACC_SPY_ID Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPE HDDEC MSG Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPE DATDEC MSG Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPE ENC MSG Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPE IDC G2E MSG Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPE IDC E2G MSG Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPE UL CHNL INFO Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    TsNum, uint16,  base=10
    HdrTyp, uint16,  base=10
    Mcs, uint16,  base=10
    Ps[0], uint16,  base=10
    Ps[1], uint16,  base=10
    Data, array, type=uint16, maxsize=20, size=end, columns=60
End

Begin Message, DSPV Spy DSPE DL CHNL INFO Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    TsNum, uint16,  base=10
    ModTyp, uint16,  base=10
    BurstModTyp[0], uint16,  base=10
    BurstModTyp[1], uint16,  base=10
    BurstModTyp[2], uint16,  base=10
    BurstModTyp[3], uint16,  base=10
    HdDecResInd, uint16,  base=10
    HdrTyp, uint16,  base=10
    DecUSF, uint16,  base=10
    Mcs[0], uint16,  base=10
    Mcs[1], uint16,  base=10
    Ps[0], uint16,  base=10
    Ps[1], uint16,  base=10
    Bsn[0], uint16,  base=10
    Bsn[1], uint16,  base=10
    DatDecResInd[0], uint16,  base=10
    DatDecResInd[1], uint16,  base=10
    AbsTsNum, uint16,  base=10
    Data, array, type=uint16, maxsize=20, size=end, columns=60
End

Begin Message, DSPV Spy DSPE SPY 0 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPE SPY 1 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPE SPY 2 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPE SPY 3 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPE SPY 4 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPE SPY 5 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPE SPY 6 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPG SPY 0 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPG SPY 1 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPG SPY 2 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPG SPY 3 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPG SPY 4 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPG SPY 5 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPG SPY 6 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPG SPY 7 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPG SPY 8 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPG SPY 9 Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Gen Spy_0 data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Gen Spy_1 data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Gen Spy_2 data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Gen Spy_3 data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, DSPV Spy DSPV Gen Spy_4 data Rsp
    N, uint32, base=10
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=N
    Data, array, type=uint16, maxsize=200, size=end, columns=60
End

Begin Message, ETS DSPV Peek Rsp
    Address, uint16
    Words (16), uint16
    Data, array, type=uint16, maxsize=30, size=Words (16)
End

Begin Message, ETS DSPV Poke Rsp
    Address, uint16
    Words (16), uint16
End

Begin Message, ETS DSPV Memory Test Rsp
    Result, uint16, base=enum:Fail/Pass
    Error Addr, uint16
End

Begin Message, ETS DSPV Version Rsp
    Major, int16
    Minor, int16
    Patch, int16
    Month, int16
    Day, int16
    Year, int16
    Hour, int16
    Min, int16
End

Begin Message, ETS DSPV Heart Beat Ctrl Rsp
End

Begin Message, ETS DSPV Code Peek Rsp
    Address, uint16
    Words (16), uint16
    Data, array, type=uint16, maxsize=30, size=Words (16)
End

Begin Message, ETS DSPV Code Poke Rsp
    Address, uint16
    Words (16), uint16
End

Begin Message, ETS DSPV Code Memory Test Rsp
    Result, uint16, base=enum:Fail/Pass
    Error Addr, uint16
End

Begin Message, ETS DSPV Bitwise Operation Rsp
    OldValue, uint16
    NewValue, uint16
End

Begin Message, ETS DSPV Send Audio Cfg Query Rsp
    Module, uint16, base=enum:Audio Modules
    NumofData, uint16
    VapSpchSrvcOption, uint16,base=enum:Enum SpchSrvcOptions,default=SO3,indent=3,exist=Module == 0
    VapAudioPath, uint16,base=enum:Enum AudioPaths,indent=3,exist=Module == 0
    VapNumMic, uint16,base=enum:Enum NumMics,default=DUAL MIC,indent=3,exist=Module == 0
    VapSamplingRate, uint16,base=enum:Enum SamplingRates,default=16000,indent=3,exist=Module == 0
    VapMicBifMode, uint16,base=enum:OFF/ON,indent=3,exist=Module == 0
    VapSpkrFifMode, uint16,base=enum:OFF/ON,indent=3,exist=Module == 0
    VapTtyMode, uint16,base=enum:OFF/ON,indent=3,exist=Module == 0
    VapEchoCancelMode, uint16,base=enum:OFF/ON,indent=3,exist=Module == 0
    VapNoiseSupresMode, uint16,base=enum:OFF/ON,indent=3,exist=Module == 0
    VapAudioAcpCompMode, uint16,base=enum:OFF/ON,indent=3,exist=Module == 0
    VapAudioAcpAsvcMppMode, uint16,base=enum:OFF/ON,indent=3,exist=Module == 0
    VapAudioAcpAsvcSppMode, uint16,base=enum:OFF/ON,indent=3,exist=Module == 0
    VapVmemoMode, uint16,base=enum:Enum VapVmemoType,indent=3,exist=Module == 0
    VapAudioRecPlaybackMode, uint16,base=enum:Enum AudioRecPlaybackModes,indent=3,exist=Module == 0
    VapLpbkMode, uint16,base=enum:Enum VapLoopbackMode,indent=3,exist=Module == 0
    VapSpkrVolScalFctr(dB), uint16,scale=Q8,format=%4.2f,log10=true,logscale=20,indent=3,exist=Module == 0
    VapSidetoneScalFctr(dB), uint16,scale=Q8,format=%4.2f,log10=true,logscale=20,indent=3,exist=Module == 0
    VapMicVolScalFctr(dB), uint16,scale=Q8,format=%4.2f,log10=true,logscale=20,indent=3,exist=Module == 0
    VapDacPgaVal, uint16,base=16,indent=3,exist=Module == 0
    VapToneVolScalFctr(dB), uint16,scale=Q8,format=%4.2f,log10=true,logscale=20,indent=3,exist=Module == 0
    VapMppProcCnt, uint16,base=16,indent=3,exist=Module == 0
    VapSppProcCnt, uint16,base=16,indent=3,exist=Module == 0
    VapModeReg, uint16,base=16,indent=3,exist=Module == 0
    VapVCtrlReg, uint16,base=16,indent=3,exist=Module == 0
    VapStatusReg, uint16,base=16,indent=3,exist=Module == 0
    VapPcModeCtrl, uint16,base=enum:DISABLE/ENABLE/MIC PCM MIX/SPKR PCM MIX/MIC SPKR PCM MIX,indent=3,exist=Module == 0
    VapPcmIfApiModeCtrl, uint16,base=enum:OFF/ON,indent=3,exist=Module == 0
    VapAbeMode, uint16,base=enum:ABE_OFF/ABE_ON,indent=3,exist=Module == 0
    VapMixerMode, uint16,base=enum:OFF/ON,indent=3,exist=Module == 0
    VapMixerChCfg, uint16,base=enum:Enum AppCh,indent=3,exist=Module == 0
    VapMixerSampleRate, uint16,base=enum:Enum SampleRateIndex,indent=3,exist=Module == 0
    TtyLogicEngyTh, int16,default=8191,indent=3,exist=Module == 1
    TtySilnceEngyTh, int16,default=2,indent=3,exist=Module == 1
    TtyOnsetWin, int16,default=16,indent=3,exist=Module == 1
    TtyEarlyOnsetThres, int16,default=7,indent=3,exist=Module == 1
    TtyDetctThres, int16,default=74,indent=3,exist=Module == 1
    TtyFrmSyncMemTh, int16,default=9,indent=3,exist=Module == 1
    TtyFrmSyncStartTh, int16,default=7,indent=3,exist=Module == 1
    TtyFrmSyncDataTh, int16,default=7,indent=3,exist=Module == 1
    TtyFrmSyncStopTh, int16,default=8,indent=3,exist=Module == 1
    TtyFrmSyncSilnceTh, int16,default=7,indent=3,exist=Module == 1
    TtyXmtTime, int16,default=66,indent=3,exist=Module == 1
    TtyMaxHngOvrTime, int16,default=120,indent=3,exist=Module == 1
    TtySilnceTh, int16,default=2,indent=3,exist=Module == 1
    TtyToneGenGain, int16,default=4096,indent=3,exist=Module == 1
    AnsVmThres, uint16,default=0x0023,indent=3,exist=Module == 2
    AnsTceThres, uint16,default=0x0100,indent=3,exist=Module == 2
    AnsSpecDevThres, uint16,default=0x0380,indent=3,exist=Module == 2
    AnsCntThres, uint16,default=0x0020,indent=3,exist=Module == 2
    AnsHysCntThres, uint16,default=0x0006,indent=3,exist=Module == 2
    AnsStckCntrThres, uint16,default=0x0300,indent=3,exist=Module == 2
    Acp_BlockSize, uint16,default=0x0001,indent=3,exist=Module == 3
    Acp_BlockNum, uint16,default=0x00A0,indent=3,exist=Module == 3
    RmsQ, uint16,default=0x3999,indent=3,exist=Module == 3
    RmsScalFctr, uint16,default=0x0000,indent=3,exist=Module == 3
    GammaHi, uint16,default=0xFD60,indent=3,exist=Module == 3
    GammaLo, uint16,default=0xF880,indent=3,exist=Module == 3
    BetaHi, uint16,default=0x0666,indent=3,exist=Module == 3
    BetaLo, uint16,default=0x7FFF,indent=3,exist=Module == 3
    BetaLoQ, uint16,default=0xFFFF,indent=3,exist=Module == 3
    AttackTime, uint16,default=0x0377,indent=3,exist=Module == 3
    ReleaseTime, uint16,default=0x0059,indent=3,exist=Module == 3
    AsvcMinGain, uint16,default=0x0000,indent=3,exist=Module == 3
    AsvcMaxState, uint16,default=0x0010,indent=3,exist=Module == 3
    AsvcNoiseStep, uint16,default=0x0155,indent=3,exist=Module == 3
    AsvcGainStep, uint16,default=0x0018,indent=3,exist=Module == 3
    AsvcNoiseThres, uint16,default=0x0800,indent=3,exist=Module == 3
    AsvcHysterisis, uint16,default=0x0100,indent=3,exist=Module == 3
    AsvcNoiseScalFctr, uint16,default=0x0CCC,indent=3,exist=Module == 3
    AsvcVmThres, int16,default=35,indent=3,exist=Module == 3
    AsvcTceThres, int16,default=256,indent=3,exist=Module == 3
    AsvcSpecDevThres, int16,default=1792,indent=3,exist=Module == 3
    AsvcCntThres, int16,default=10,indent=3,exist=Module == 3
    AsvcHysCntThres, int16,default=6,indent=3,exist=Module == 3
    AsvcSpkrWeight, uint16,default=0x7FFF,indent=3,exist=Module == 3
    AsvcScalFctrQ, int16,default=-8,indent=3,exist=Module == 3
    AsvcSmoothFctr, int16,default=29491,indent=3,exist=Module == 3
    AsvcMaxSpkrGain, uint16,default=0x400,indent=3,exist=Module == 3
    FramePwrStep, uint16,default=0x0040,indent=3,exist=Module == 3
    FramePwrThres, uint16,default=0x0600,indent=3,exist=Module == 3
    FramePwrHyst, uint16,default=0x0030,indent=3,exist=Module == 3
    SppGainStep, uint16,default=0x0018,indent=3,exist=Module == 3
    SppGainMaxState, uint16,default=0x0010,indent=3,exist=Module == 3
    SppFrmPwrBufLen, int16,default=10,indent=3,exist=Module == 3
    SppFrameCntThres, int16,default=150,indent=3,exist=Module == 3
    GainUpdateThres, int16,default=5,indent=3,exist=Module == 3
    GainUpdateSwch, int16,default=1,indent=3,exist=Module == 3
    AcpToneThres, uint16,default=0x0248,indent=3,exist=Module == 3
    AcpToneSuppress, uint16,default=0x0240,indent=3,exist=Module == 3
    phone_mode, uint16,default=0x0000,indent=3,exist=Module == 4
    NumMic, uint16,default=0x0002,indent=3,exist=Module == 4
    DacPgaVal, uint16,default=0x0000,indent=3,exist=Module == 4
    AecClipSatThres, uint16,default=0x7fff,indent=3,exist=Module == 4
    BNE_base, uint16,default=0xf39a,indent=3,exist=Module == 4
    Mu_max, uint16,default=0x1999,indent=3,exist=Module == 4
    Mu_min, uint16,default=0x0000,indent=3,exist=Module == 4
    Converge_prd, uint16,default=0x0005,indent=3,exist=Module == 4
    Rin2SinDelay, uint16,default=0x015e,indent=3,exist=Module == 4
    Res_spkr_vm_Thres, uint16,default=0x0096,indent=3,exist=Module == 4
    Res_spkr_ch_engy_Thres, uint16,default=0x05a0,indent=3,exist=Module == 4
    Res_mic_vm_Thres, uint16,default=0x002d,indent=3,exist=Module == 4
    Res_mic_ch_engy_Thres, uint16,default=0x05a0,indent=3,exist=Module == 4
    dt_ratio, uint16,default=0x1400,indent=3,exist=Module == 4
    converge_thre, uint16,default=0x3fff,indent=3,exist=Module == 4
    fre_bin_start, uint16,default=0x0003,indent=3,exist=Module == 4
    fre_bin_end, uint16,default=0x0007,indent=3,exist=Module == 4
    MaxCoupling, uint16,default=0x0c04,indent=3,exist=Module == 4
    StepShift, uint16,default=0x0003,indent=3,exist=Module == 4
    BinEnergyAlpha, uint16,default=0x4000,indent=3,exist=Module == 4
    beta, uint16,default=0x3fff,indent=3,exist=Module == 4
    eta, uint16,default=0xd998,indent=3,exist=Module == 4
    eta2, uint16,default=0xd998,indent=3,exist=Module == 4
    Delay, uint16,default=0x0000,indent=3,exist=Module == 4
    MaxHGain, uint16,default=0x0033,indent=3,exist=Module == 4
    MaxHGain_dt, uint16,default=0x0002,indent=3,exist=Module == 4
    BSSDtRatio, uint16,default=0x656f,indent=3,exist=Module == 4
    StepFacMax, uint16,default=0x1999,indent=3,exist=Module == 4
    StepFacMin, uint16,default=0x0041,indent=3,exist=Module == 4
    FilterQ, uint16,default=0x0012,indent=3,exist=Module == 4
    WeightedSIRmax, uint16,default=0x1964,indent=3,exist=Module == 4
    WeightedSIRmin, uint16,default=0x1770,indent=3,exist=Module == 4
    BandGainWeightMax, uint16,default=0x6665,indent=3,exist=Module == 4
    BandGainWeightMin, uint16,default=0x1999,indent=3,exist=Module == 4
    SIR_Thres, uint16,default=0x1770,indent=3,exist=Module == 4
    LPF_cutoff_band, uint16,default=0x0020,indent=3,exist=Module == 4
    P_fe, uint16,default=0x0147,indent=3,exist=Module == 4
    P_dt, uint16,default=0x7eb7,indent=3,exist=Module == 4
    P_dt_high, uint16,default=0x0ccc,indent=3,exist=Module == 4
    dt_th, uint16,default=0x7eb7,indent=3,exist=Module == 4
    Aggressive_Echo_Supr, uint16,default=0x0000,indent=3,exist=Module == 4
    EncDecDelay, uint16,default=0xfff6,indent=3,exist=Module == 5
    FrmPwrScalFctrQ, uint16,default=0xfff8,indent=3,exist=Module == 5
    LngAvgScalFctr, uint16,default=0x0000,indent=3,exist=Module == 5
    DblTlkCorrLen, uint16,default=0x0040,indent=3,exist=Module == 5
    DblTalkCorrIndx, uint16,default=0x0001,indent=3,exist=Module == 5
    DblTlkScalFctr, uint16,default=0x6000,indent=3,exist=Module == 5
    DblTlkWghtUpdThres, uint16,default=0x0000,indent=3,exist=Module == 5
    SysDstnceScalFctr, uint16,default=0x6666,indent=3,exist=Module == 5
    ACFScalFctr, uint16,default=0x7333,indent=3,exist=Module == 5
    MaxModeCount, uint16,default=0x0001,indent=3,exist=Module == 5
    FeMdeHngOvr, uint16,default=0x0005,indent=3,exist=Module == 5
    NeMdeHngOvr, uint16,default=0x000A,indent=3,exist=Module == 5
    ErleScalFctr, uint16,default=0x4000,indent=3,exist=Module == 5
    StepSize, uint16,default=0x0A3D,indent=3,exist=Module == 5
    ChnNgyScalFctr, uint16,default=0x3999,indent=3,exist=Module == 5
    NzeScalFctr, uint16,default=0x7333,indent=3,exist=Module == 5
    CeptScalFctr, uint16,default=0x3999,indent=3,exist=Module == 5
    EstEchScalQ, uint16,default=0x0000,indent=3,exist=Module == 5
    EngyScalFctr, uint16,default=0x7999,indent=3,exist=Module == 5
    MicFifNumBqSects, int16,default=3,indent=3,exist=Module == 6
    MicFifBqCoefs[0], int16,default=8193,indent=3,exist=Module == 6
    MicFifBqCoefs[1], int16,default=-16385,indent=3,exist=Module == 6
    MicFifBqCoefs[2], int16,default=8192,indent=3,exist=Module == 6
    MicFifBqCoefs[3], int16,default=7802,indent=3,exist=Module == 6
    MicFifBqCoefs[4], int16,default=-15923,indent=3,exist=Module == 6
    MicFifBqCoefs[5], int16,default=8192,indent=3,exist=Module == 6
    MicFifBqCoefs[6], int16,default=8191,indent=3,exist=Module == 6
    MicFifBqCoefs[7], int16,default=-16383,indent=3,exist=Module == 6
    MicFifBqCoefs[8], int16,default=8192,indent=3,exist=Module == 6
    MicFifBqCoefs[9], int16,default=7170,indent=3,exist=Module == 6
    MicFifBqCoefs[10], int16,default=-15294,indent=3,exist=Module == 6
    MicFifBqCoefs[11], int16,default=8192,indent=3,exist=Module == 6
    MicFifBqCoefs[12], int16,default=6828,indent=3,exist=Module == 6
    MicFifBqCoefs[13], int16,default=-13656,indent=3,exist=Module == 6
    MicFifBqCoefs[14], int16,default=6828,indent=3,exist=Module == 6
    MicFifBqCoefs[15], int16,default=6827,indent=3,exist=Module == 6
    MicFifBqCoefs[16], int16,default=-14952,indent=3,exist=Module == 6
    MicFifBqCoefs[17], int16,default=8192,indent=3,exist=Module == 6
    MicBifNumBqSects, int16,default=3,indent=3,exist=Module == 7
    MicBifBqCoefs[0], int16,default=8192,indent=3,exist=Module == 7
    MicBifBqCoefs[1], int16,default=2142,indent=3,exist=Module == 7
    MicBifBqCoefs[2], int16,default=-2771,indent=3,exist=Module == 7
    MicBifBqCoefs[3], int16,default=-1944,indent=3,exist=Module == 7
    MicBifBqCoefs[4], int16,default=2025,indent=3,exist=Module == 7
    MicBifBqCoefs[5], int16,default=8192,indent=3,exist=Module == 7
    MicBifBqCoefs[6], int16,default=8192,indent=3,exist=Module == 7
    MicBifBqCoefs[7], int16,default=-6905,indent=3,exist=Module == 7
    MicBifBqCoefs[8], int16,default=3887,indent=3,exist=Module == 7
    MicBifBqCoefs[9], int16,default=3435,indent=3,exist=Module == 7
    MicBifBqCoefs[10], int16,default=-6006,indent=3,exist=Module == 7
    MicBifBqCoefs[11], int16,default=8192,indent=3,exist=Module == 7
    MicBifBqCoefs[12], int16,default=10588,indent=3,exist=Module == 7
    MicBifBqCoefs[13], int16,default=4581,indent=3,exist=Module == 7
    MicBifBqCoefs[14], int16,default=3505,indent=3,exist=Module == 7
    MicBifBqCoefs[15], int16,default=4047,indent=3,exist=Module == 7
    MicBifBqCoefs[16], int16,default=4366,indent=3,exist=Module == 7
    MicBifBqCoefs[17], int16,default=8192,indent=3,exist=Module == 7
    SpkrFifNumBqSects, int16,default=3,indent=3,exist=Module == 8
    SpkrFifBqCoefs[0], int16,default=8192,indent=3,exist=Module == 8
    SpkrFifBqCoefs[1], int16,default=-5452,indent=3,exist=Module == 8
    SpkrFifBqCoefs[2], int16,default=-655,indent=3,exist=Module == 8
    SpkrFifBqCoefs[3], int16,default=-435,indent=3,exist=Module == 8
    SpkrFifBqCoefs[4], int16,default=-1578,indent=3,exist=Module == 8
    SpkrFifBqCoefs[5], int16,default=8192,indent=3,exist=Module == 8
    SpkrFifBqCoefs[6], int16,default=8192,indent=3,exist=Module == 8
    SpkrFifBqCoefs[7], int16,default=9342,indent=3,exist=Module == 8
    SpkrFifBqCoefs[8], int16,default=3554,indent=3,exist=Module == 8
    SpkrFifBqCoefs[9], int16,default=3616,indent=3,exist=Module == 8
    SpkrFifBqCoefs[10], int16,default=9491,indent=3,exist=Module == 8
    SpkrFifBqCoefs[11], int16,default=8192,indent=3,exist=Module == 8
    SpkrFifBqCoefs[12], int16,default=9049,indent=3,exist=Module == 8
    SpkrFifBqCoefs[13], int16,default=-9028,indent=3,exist=Module == 8
    SpkrFifBqCoefs[14], int16,default=5006,indent=3,exist=Module == 8
    SpkrFifBqCoefs[15], int16,default=4703,indent=3,exist=Module == 8
    SpkrFifBqCoefs[16], int16,default=-8438,indent=3,exist=Module == 8
    SpkrFifBqCoefs[17], int16,default=8192,indent=3,exist=Module == 8
    RngrModeReg, uint16,base=enum:Enum RngrModeRegEnum,indent=3,exist=Module == 9
    RngrSampleRate(KHz), uint16,base=10,indent=3,exist=Module == 9
    RngrReleaseRngrFlg, uint16,base=enum:OFF/ON,indent=3,exist=Module == 9
    RngrFastReleaseFlg, uint16,base=enum:OFF/ON,indent=3,exist=Module == 9
    RngrVolScalFctr(dB), uint16,scale=Q8,format=%4.2f,log10=true,logscale=20,indent=3,exist=Module == 9
    AppSbcEncCount, uint16,base=10,indent=3,exist=Module == 9
    RngrMipsErrCnt, uint16,base=10,indent=3,exist=Module == 9
    RngrFifoSyncErrCnt, uint16,base=10,indent=3,exist=Module == 9
    RngrMixerMode, uint16,base=enum:OFF/ON,indent=3,exist=Module == 9
    RngrMixerChCfg, uint16,base=enum:Enum AppCh,indent=3,exist=Module == 9
    RngrMixerSampleRate, uint16,base=enum:Enum SampleRateIndex,indent=3,exist=Module == 9
    AsgRngrTaskCnt, uint16,base=16,indent=3,exist=Module == 9
    AppAudioPath, uint16,base=enum:Enum AppAudioPaths,indent=3,exist=Module == 10
    AppVolScalFctr(dB), uint16,scale=Q8,format=%4.2f,log10=true,logscale=20,indent=3,exist=Module == 10
    AppId, uint16,base=enum:EnumAppId,indent=3,exist=Module == 10
    AppState, uint16,base=enum:Enum AppState,indent=3,exist=Module == 10
    AppSampleRate, uint16,base=10,indent=3,exist=Module == 10
    AppMixerMode, uint16,base=enum:OFF/ON,indent=3,exist=Module == 10
    AppMixerChCfg, uint16,base=enum:Enum AppCh,indent=3,exist=Module == 10
    AppMixerSampleRate, uint16,base=enum:Enum SampleRateIndex,indent=3,exist=Module == 10
    AppEqMode, uint16,base=enum:OFF/ON,indent=3,exist=Module == 10
    AppEqBandGain[0]_60Hz, int16,base=10,indent=3,exist=Module == 10
    AppEqBandGain[1]_230Hz, int16,base=10,indent=3,exist=Module == 10
    AppEqBandGain[2]_910Hz, int16,base=10,indent=3,exist=Module == 10
    AppEqBandGain[3]_3000Hz, int16,base=10,indent=3,exist=Module == 10
    AppEqBandGain[4]_14000Hz, int16,base=10,indent=3,exist=Module == 10
    g_nTaskCallCntMR, uint16,base=16,indent=3,exist=Module == 10
    g_nTaskCallCntSR, uint16,base=16,indent=3,exist=Module == 10
    AppFifoSyncErrCnt, uint16,base=16,indent=3,exist=Module == 10
    AppSbcEncCnt, uint16,base=16,indent=3,exist=Module == 10
End

Begin Message, ETS DSPV Send Audio Path Cfg Rsp
    SpkrPath, uint16, base=enum:SpkrPath
    Status, uint16, base=enum:Status
    Data, array, type=uint16, maxsize=36, size=end
End

Begin Message, ETS DSPV Combo Volume Scal Fctr Rsp
    SpkrVolScalFctr, uint16,  default=0x0100                   ,indent = 3
    SidetoneScalFctr, uint16,  default=0x0100                   ,indent = 3
    RngrVolScalFctr, uint16,  default=0x0100                   ,indent = 3
    AppVolScalFctr, uint16,  default=0x0100                   ,indent = 3
    MicVolScalFctr, uint16,  default=0x0100                   ,indent = 3
    DacPgaVal, uint16,  default=0x0100                   ,indent = 3
    ToneVolScalFctr, uint16,  default=0x0100                   ,indent = 3
End

Begin Message, ETS DSPV Voice Frame Resync Rsp
End

Begin Message, ETS DSPV App Info Query Rsp
    CurrApp, uint16,    base=enum:EnumAppId
End

Begin Message, ETS CP LEC Tst Gps Factory Get Rf CNo Rsp
    CNo, uint8, base=10
End

Begin Message, ETS CP LEC Tst Gps Read Write Cal Parms Rsp
    Action, uint8, base=enum:CalAction
    GroupDelay[-9770], int32, base=10, default=0
    CodePhase [0..10], uint8, base=10
    WholeChips[0..10], uint8, base=10
    FractChips[0..99], uint8, base=10
End

Begin Message, ETS CP LEC Tst Gps Read Write NV Cal Parms Rsp
    Action, uint8, base=enum:CalAction
    GpsCellGrpDelay  [-9770], int32,  base=10, default=0
    GpsCellAACoPhAdj [0..10], uint16, base=10, default=0
    GpsCellWChipAdj  [0..10], uint16, base=10, default=0
    GpsCellFChipAdj  [0..99], uint16, base=10, default=0
    GpsPcsGrpDelay   [-9770], int32,  base=10, default=0
    GpsPcsAACoPhAdj  [0..10], uint16, base=10, default=0
    GpsPcsWChipAdj   [0..10], uint16, base=10, default=0
    GpsPcsFChipAdj   [0..99], uint16, base=10, default=0
    Gps1xDoSysTOffset[34195], int32,  base=10, default=0
    GpsCalStatus     [1..04], uint16, base=10, default=0
End

Begin Message, ETS CP LEC Tst Gps Set 1x DO Delay Rsp
    Action, uint8, base=enum:CalAction
    GpsGroupDelay, int32, base=10
End

Begin Message, ETS CP LEC Tst Gps Pgps On Off Rsp
    PGPSmode, uint8, base=enum:PGPS Modes
    IntervalReqEE(sec), uint8, base=10
End

Begin Message, ETS CP LEC Tst UserMode Time Rsp
    UserModerGuideTime(sec), uint32,  base=10, default=5
End

Begin Message, ETS CP LEC Power Save Time Rsp
    UserModerGuideTime(ms), uint32,  base=10, default=700
End

Begin Message, ETS CP LEC Tst GNS7560 Version Rsp
    GPS Lib Name, string, length=32,  indent=1
    GPS Lib Major Version, uint16, base=10,    indent=1
    GPS Lib Minor Version, uint16, base=10,    indent=1
    GPS Lib Verion Date, string, length=8,   indent=1
    GPS Lib Compiled Date, string, length=16,  indent=1
    GPS Lib Compiled Time, string, length=16,  indent=1
    BaseBand SW Ver ROM, uint16, base=10,    indent=1
    BaseBand SW Patch Cks, uint16, base=16,    indent=1
    System Version, string, length=32,  indent=1
End

Begin Message, ETS CP LEC Tst GNS7560 Get Config Rsp
    SensMode, uint8,    base=enum:Sensitivity Mode, indent=1
    ColdTTFF, uint8,    base=enum:TTFF Mode states, indent=1
    PowerPerf, uint8,    base=enum:Power vs Perf Mode, indent=1
    BGA_Chip, uint8,    base=bool, indent=1
    c32KHz_NotFitted, uint8,    base=bool, indent=1
    SBAS_Enabled, uint8,    base=bool, indent=1
    PosFiltMode, uint8,    base=10,   indent=1
    FixInterval, uint16,   base=10,   indent=1
    H_AccEst_Mask[0], uint16,   base=10,   indent=1
    H_AccEst_Mask[1], uint16,   base=10,   indent=1
    V_AccEst_Mask[0], uint16,   base=10,   indent=1
    V_AccEst_Mask[1], uint16,   base=10,   indent=1
    SleepModeTimeOut, uint16,  base=10,    indent=1
    ComaModeTimeOut, uint32,  base=10,    indent=1
    GPGLL_Rate, uint8,   base=10,    indent=1
    GPGGA_Rate, uint8,   base=10,    indent=1
    GPGSA_Rate, uint8,   base=10,    indent=1
    GPGST_Rate, uint8,   base=10,    indent=1
    GPGSV_Rate, uint8,   base=10,    indent=1
    GPRMC_Rate, uint8,   base=10,    indent=1
    GPVTG_Rate, uint8,   base=10,    indent=1
    GPZCD_Rate, uint8,   base=10,    indent=1
    GPZDA_Rate, uint8,   base=10,    indent=1
    PGNVD_Rate, uint8,   base=10,    indent=1
    ForceCold_Timeout, uint8,   base=10,    indent=1
    NV_Write_Interval, uint16,  base=10,    indent=1
    Enable_Nav_Debug, uint16,  base=10,    indent=1
    Enable_GNB_Debug, uint16,  base=10,    indent=1
    Enable_Event_Log, uint16,  base=10,    indent=1
    Reference_LLH[0], uint64,  base=10,    indent=1
    Reference_LLH[1], uint64,  base=10,    indent=1
    Reference_LLH[2], uint64,  base=10,    indent=1
    Reserved, uint32,  base=16,    indent=1
End

Begin Message, ETS CP LEC Tst GNS7560 Set Config Rsp
    SensMode, uint8,    base=enum:Sensitivity Mode, indent=1
    ColdTTFF, uint8,    base=enum:TTFF Mode states, indent=1
    PowerPerf, uint8,    base=enum:Power vs Perf Mode, indent=1
    BGA_Chip, uint8,    base=bool,     indent=1
    c32KHz_NotFitted, uint8,    base=bool,     indent=1
    SBAS_Enabled, uint8,    base=bool,     indent=1
    PosFiltMode, uint8,    base=10,       indent=1
    FixInterval, uint16,   base=10,       indent=1
    H_AccEst_Mask[0], uint16,   base=10,       indent=1
    H_AccEst_Mask[1], uint16,   base=10,       indent=1
    V_AccEst_Mask[0], uint16,   base=10,       indent=1
    V_AccEst_Mask[1], uint16,   base=10,       indent=1
    SleepModeTimeOut, uint16,   base=10,       indent=1
    ComaModeTimeOut, uint32,   base=10,       indent=1
    GPGLL_Rate, uint8,    base=10,       indent=1
    GPGGA_Rate, uint8,    base=10,       indent=1
    GPGSA_Rate, uint8,    base=10,       indent=1
    GPGST_Rate, uint8,    base=10,       indent=1
    GPGSV_Rate, uint8,    base=10,       indent=1
    GPRMC_Rate, uint8,    base=10,       indent=1
    GPVTG_Rate, uint8,    base=10,       indent=1
    GPZCD_Rate, uint8,    base=10,       indent=1
    GPZDA_Rate, uint8,    base=10,       indent=1
    PGNVD_Rate, uint8,    base=10,       indent=1
    ForceCold_Timeout, uint8,    base=10,       indent=1
    NV_Write_Interval, uint16,   base=10,       indent=1
    Enable_Nav_Debug, uint16,   base=10,       indent=1
    Enable_GNB_Debug, uint16,   base=10,       indent=1
    Enable_Event_Log, uint16,   base=10,       indent=1
    Reference_LLH[0], uint64,   base=10,       indent=1
    Reference_LLH[1], uint64,   base=10,       indent=1
    Reference_LLH[2], uint64,   base=10,       indent=1
    Reserved, uint32,   base=16,       indent=1
End

Begin Message, ETS CP Chan OnOff Rsp
    Channel, uint8, base=enum:IopHalChannelId
    State, uint8, base=enum:Disable/Enable
End

Begin Message, ETS CP Chan Query Rsp
    Channel, uint8, base=enum:IopHalChannelId
    Device, uint8, base=enum:IopHalDeviceId
    State, uint8, base=enum:Disable/Enable
End

Begin Message, ETS CP Chan Switch Rsp
    Channel, uint8, base=enum:IopHalChannelId
    Device, uint8, base=enum:IopHalDeviceId
End

Begin Message, ETS CP Dpram DbgInfo Rsp
    memPtr, array, type=uint16, maxsize=8, size=8
    locPtr, array, type=uint16, maxsize=8, size=8
    ChanState, array, type=uint8,  maxsize=4,size=4
    DmaState, array, type=uint8,  maxsize=4,size=4
    RawFull, uint8
    FmtFull, uint8
End

Begin Message, ETS CP SDIO Slave DbgInfo Rsp
    SdioSlaveInit, uint8, indent = 2
    S2MInProgress, uint8
    SdioOperation, uint8
    S2MChannel, uint8
    M2SChannel, uint8
    RevFrmStatus, uint8
    FwdFrmStatus, uint8
    DMAInProgress, uint8
    GpioAckState, uint8
    ErrCode, uint8
    LocalBufFull, uint8
    RTSFlowCtrl, uint8
    CurrFwdDataInfo, record, type=SDIOTranDataInfo, maxsize=1
    SaveFwdDataInfo, record, type=SDIOTranDataInfo, maxsize=4
    CurrRevDataInfo, record, type=SDIOTranDataInfo, maxsize=1
    SaveRevDataInfo, record, type=SDIOTranDataInfo, maxsize=4
    SaveTCReg, array,  type=uint32, maxsize=8, size=8, indent = 2
    OffsetCnt, array,  type=uint32, maxsize=4, size=4, indent = 2
    WriteDone, uint32, base=10, indent=2
    ReadDone, uint32, base=10
    ReadError, uint32, base=10
    FIFONotEmpty, uint32, base=10
    OverUnderRun, uint32, base=10
    HalfFull, uint32, base=10
    WriteStart, uint32, base=10
    ReadStart, uint32, base=10
    ResetSoft, uint32, base=10
    ResetFunc1, uint32, base=10
    Data, array,  type=uint16, maxsize=64, size=64, indent = 2
End

Begin Record, SDIOTranDataInfo
    buf, uint32, indent = 2, base=16
    idx, uint32, base=10
    len, uint32, base=10
    ofs, uint32, base=10
End

Begin Message, ETS CP LTEDO Uart DbgInfo Rsp
End

Begin Message, ETS CP ESPI DbgInfo Rsp
    ESPI State, uint8,  base=enum:EspiStatus
    CurrRevDataInfo, record, type=ESPIRxDataInfo, maxsize=1
    CurrFwdDataInfo, record, type=ESPITxDataInfo, maxsize=1
End

Begin Record, ESPIRxDataInfo
    HeaderInfo, record, type=ESPIHeaderInfo, maxsize=1
    ESPI Channel, uint8,  base=enum:EspiChannel
    Alloc Addr, uint32, base=16
    Write Addr, uint32, base=16
    RawOffLen, uint16, base=10
    Remain Len, uint16, base=10
    Offset, uint8,  base=10
    Rx len, uint16, base=10
    Rx State, uint8,  base=enum:EspiTxStatus
End

Begin Record, ESPIHeaderInfo
    SOF, uint8,  base=16
    ChanInfo, uint8,  base=16
    TranHi, uint8,  base=16
    TranLow, uint8,  base=16
End

Begin Record, ESPITxDataInfo
    HeaderInfo, record, type=ESPIHeaderInfo, maxsize=1
    ESPI Channel, uint8,  base=enum:EspiChannel
    Src Addr, uint32, base=16
    Raw Len, uint16, base=10
    RawOff Len, uint16, base=10
    Offset, uint8,  base=10
    Remain Len, uint16, base=10
    Tx State, uint8,  base=enum:EspiTxStatus
End

Begin Message, ETS CP Shmem DbgInfo Rsp
    Shmem_header, record, type=Shmem_header_t, maxsize=1
    Shmem_SingleQ, record, type=Shmem_SingleQ_t, maxsize=40
End

Begin Record, Shmem_header_t
    magic, uint32,  base=16
    A2C, uint32,  base=16
    C2A, uint32,  base=16
    rsvd, uint32,  base=16
End

Begin Record, Shmem_SingleQ_t
    head_p, uint32,  base=16
    tail_p, uint32,  base=16
    start_p, uint32,  base=16
    size, uint32,  base=16
    rsvd, uint16,  base=16
    flow_ctrl, uint8,  base=16
    valid, uint8,  base=16
    chan_name, array,  type=uint8,  maxsize=12,size=12
End

Begin Message, ETS CP Tst Hwd Searcher Rsp
    Items, uint16,  base=enum:TstSearcherItems, default=Init_Acq_Compl_Sch
    Results, uint16,  base=enum:TstPassFail, default=Fail
    CtrlRegsReadWrite_Acq, bit,offset=7,count=1,bytes=2,pos=first,base=enum:PASSED/FAILED,indent=2,exist=Items == 2
    TestBuffReadWrite_Acq, bit,offset=6,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=2,exist=Items == 2
    InBuffRead_Acq, bit,offset=5,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=2,exist=Items == 2
    StatusCompare_Acq, bit,offset=3,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=2,exist=Items == 2
    PathInfoCompare_Acq, bit,offset=2,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=2,exist=Items == 2
    PathBuffCompare_Acq, bit,offset=1,count=1,bytes=2,pos=last,base=enum:PASSED/FAILED,indent=2,exist=Items == 2
    CtrlRegsReadWrite_Online, bit,offset=7,count=1,bytes=2,pos=first,base=enum:PASSED/FAILED,indent=2,exist=Items == 3
    TestBuffReadWrite_Online, bit,offset=6,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=2,exist=Items == 3
    InBuffRead_Online, bit,offset=5,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=2,exist=Items == 3
    PilotListWrite_Online, bit,offset=4,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=2,exist=Items == 3
    StatusCompare_Online, bit,offset=3,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=2,exist=Items == 3
    PathInfoCompare_Online, bit,offset=2,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=2,exist=Items == 3
    PathBuffCompare_Online, bit,offset=1,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=2,exist=Items == 3
    PilotInfoCompare_Online, bit,offset=0,count=1,bytes=2,pos=last,base=enum:PASSED/FAILED,indent=2,exist=Items == 3
End

Begin Message, ETS CP Tst Hwd System Time Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd Rx Filter and Rx AGC Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd Tx Data Path Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd Rx Data Path Static Rsp
    Items, uint16,  base=enum:RxStaticItems, default=FingerTst
    Results, uint16,  base=enum:TstPassFail, default=Fail
    Finger_1, bit,offset=7,count=1,bytes=2,pos=first,base=enum:PASSED/FAILED,indent=2,exist=Items == 1
    Finger_2, bit,offset=6,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=2,exist=Items == 1
    Finger_3, bit,offset=5,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=2,exist=Items == 1
    Finger_4, bit,offset=3,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=2,exist=Items == 1
    Finger_5, bit,offset=2,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=2,exist=Items == 1
    Finger_6, bit,offset=1,count=1,bytes=2,pos=last,base=enum:PASSED/FAILED,indent=2,exist=Items == 1
End

Begin Message, ETS CP Tst Hwd Rx Data Path Dynamic Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd MAC path Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd DRC Generator Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd AFC Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd SysTime Ev CpInt Src Rsp
    Results1, uint16
    Results2, uint16
End

Begin Message, ETS CP Tst Hwd SysTime Ev Mdm Status Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd SysTime Ev Init Load Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd SysTime Ev Adj Sync Time Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd SysTime Ev Adj TMTRK Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd SysTime Ev ShortCode Seq Gen Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd SysTime Ev LongCode Seq Gen Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd DMA Module Rsp
    Test_Case, uint16,  base=10, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
    TotalFailCount, uint16,  base=10
    CCR_Reg, uint32,  default=0
    Channel_0, bit,offset=7,count=1,bytes=2,pos=first,base=enum:NOT_TESTED/TESTED,indent=1,exist=CCR_Reg != 0
    Channel_1, bit,offset=6,count=1,bytes=2,pos=middle,base=enum:NOT_TESTED/TESTED,indent=1,exist=CCR_Reg != 0
    Channel_2, bit,offset=5,count=1,bytes=2,pos=middle,base=enum:NOT_TESTED/TESTED,indent=1,exist=CCR_Reg != 0
    Channel_3, bit,offset=4,count=1,bytes=2,pos=middle,base=enum:NOT_TESTED/TESTED,indent=1,exist=CCR_Reg != 0
    Channel_4, bit,offset=3,count=1,bytes=2,pos=middle,base=enum:NOT_TESTED/TESTED,indent=1,exist=CCR_Reg != 0
    Channel_5, bit,offset=2,count=1,bytes=2,pos=middle,base=enum:NOT_TESTED/TESTED,indent=1,exist=CCR_Reg != 0
    Channel_6, bit,offset=1,count=1,bytes=2,pos=middle,base=enum:NOT_TESTED/TESTED,indent=1,exist=CCR_Reg != 0
    Channel_7, bit,offset=0,count=1,bytes=2,pos=middle,base=enum:NOT_TESTED/TESTED,indent=1,exist=CCR_Reg != 0
    Channel_0_Stat, bit,offset=15,count=1,bytes=2,pos=middle,base=enum:NO_ERROR/ERROR,indent=1,exist=CCR_Reg != 0
    Channel_1_Stat, bit,offset=14,count=1,bytes=2,pos=middle,base=enum:NO_ERROR/ERROR,indent=1,exist=CCR_Reg != 0
    Channel_2_Stat, bit,offset=13,count=1,bytes=2,pos=middle,base=enum:NO_ERROR/ERROR,indent=1,exist=CCR_Reg != 0
    Channel_3_Stat, bit,offset=12,count=1,bytes=2,pos=middle,base=enum:NO_ERROR/ERROR,indent=1,exist=CCR_Reg != 0
    Channel_4_Stat, bit,offset=11,count=1,bytes=2,pos=middle,base=enum:NO_ERROR/ERROR,indent=1,exist=CCR_Reg != 0
    Channel_5_Stat, bit,offset=10,count=1,bytes=2,pos=middle,base=enum:NO_ERROR/ERROR,indent=1,exist=CCR_Reg != 0
    Channel_6_Stat, bit,offset=9,count=1,bytes=2,pos=middle,base=enum:NO_ERROR/ERROR,indent=1,exist=CCR_Reg != 0
    Channel_7_Stat, bit,offset=8,count=1,bytes=2,pos=last,base=enum:NO_ERROR/ERROR,indent=1,exist=CCR_Reg != 0
    DataMatchTest, bit,offset=7,count=1,bytes=2,pos=first,base=enum:PASSED/FAILED,indent=1,exist=CCR_Reg != 0
    ReadAbortTest, bit,offset=6,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=1,exist=CCR_Reg != 0
    ReadErrorTest, bit,offset=5,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=1,exist=CCR_Reg != 0
    WriteAbortTest, bit,offset=4,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=1,exist=CCR_Reg != 0
    WriteErrorTest, bit,offset=3,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=1,exist=CCR_Reg != 0
    TcIntErrorTest, bit,offset=2,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=1,exist=CCR_Reg != 0
    AbortIntErrorTest, bit,offset=1,count=1,bytes=2,pos=middle,base=enum:PASSED/FAILED,indent=1,exist=CCR_Reg != 0
    ErrorIntErrorTest, bit,offset=0,count=1,bytes=2,pos=last,base=enum:PASSED/FAILED,indent=1,exist=CCR_Reg != 0
End

Begin Message, ETS CP Tst Hwd DMA MDM TX Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
    Test_Count, uint16,  base=10
    Fail_Count, uint16,  base=10
    Error_Pattern, uint16,  base=16
End

Begin Message, ETS CP Tst Hwd DMA MDM RX Rsp
    Items, uint16, default=0
    Results, uint16,  base=enum:TstPassFail, default=Fail
    Test_Count, uint16,  base=10
    Fail_Count, uint16,  base=10
    Error_Pattern, uint16,  base=16
End

Begin Message, ETS CP Tst Hwd RF SPI Tx Data Rate Test Rsp
    ExternalDevice, uint8,   base=enum:TstRfSpiExternalDevices
    Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd RF SPI Delay Mode Send Test Rsp
    RFSP0Device, uint8,   base=enum:TstRfSpiExternalDevices
    RFSP1Device, uint8,   base=enum:TstRfSpiExternalDevices
    RFSP0Results, uint16,  base=enum:TstPassFail, default=Fail
    RFSP1Results, uint16,  base=enum:TstPassFail, default=Fail
End

Begin Message, ETS CP Tst Hwd RF SPI Imme Mode Send Test Rsp
    RdBufSize, uint16,  base=10
    WtBufSize, uint16,  base=10
    CompDatIndxW, uint16,  base=10
    CompLdSelIndxW, uint16,  base=10
    WordToSend, uint8,   base=10, max=32
    ResultRdBufSize, uint16,  base=enum:TstPassFail, default=Fail
    ResultRdBufData, uint16,  base=enum:TstPassFail, default=Fail
    ResultWtBufCSel, uint16,  base=enum:TstPassFail, default=Fail
    ResultWtBufData, uint16,  base=enum:TstPassFail, default=Fail
    Data, array,   type=uint16, maxsize=96, size=3*WordToSend, base=16
End

Begin Message, ETS CP Tst Hwd RF SPI Imme Mode Receive Test Rsp
    Result, uint16, base=enum:TstPassFail, default=Fail
    WordToSend, uint8,  base=10, max=32
    Data, array,  type=uint8, maxsize=32, size=WordToSend, base=16
End

Begin Message, ETS CP Tst Hwd MMSPI MSP RxTx Test Rsp
    WordTotal, uint8,   base=10, max=32
    RD_DATA, array,   type=uint32, maxsize=8, size=WordTotal, base=16
End

Begin Message, ETS CP Tst NST Power Up Rsp
    Num Bad Frames, uint32, base=10
    Num Total Frames, uint32, base=10
End

Begin Message, ETS CP Tst NST Transmit Traffic Channel Rsp
End

Begin Message, ETS CP Tst NST Exit Test Mode Rsp
End

Begin Message, ETS CP Tst NST List Set Rsp
    Count, uint8,  base=10
    Index, array, type=uint8,  base=10, maxsize=10
    Band, array, type=uint32, base=10, maxsize=10
    Channel, array, type=uint16, base=10, maxsize=10
    Num Bad Frames, array, type=uint16, base=10, maxsize=10
    Num Total Frames, array, type=uint16, base=10, maxsize=10
End

Begin Message, ETS CP Tst NST Powerup Ack Rsp
    Ack, string, length=2, default=OK
End

Begin Message, ETS CP Tst NST Transmit Traffic Channel Ack Rsp
    Ack, string, length=2, default=OK
End

Begin Message, ETS CP Tst NST Exit Test Mode Ack Rsp
    Ack, string, length=2, default=OK
End

Begin Message, ETS CP UIM Raw Command Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM Select Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM Read Binary Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM Update Binary Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM Read Record Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM Update Record Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM BS Challenge Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM Confirm SSD Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM Run Cave Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM Generate Key VPM Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM Get CST Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM 3G AKA AUTH Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM 3G AKA READ EFKeysPS Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM 3G AKA UPDATE EFKeysPS Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM 3G SIP CHAP Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM 3G MIP MNHA AUTH Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM 3G MIP RRQ HASH Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM 3G MIP MNAAA AUTH Rsp
    SW, uint16
    Bytes, uint16, base=10, max=256
    Data, array,  type=uint8, maxsize=256, size=Bytes
End

Begin Message, ETS CP UIM Get Status Rsp
    CardStatus, uint8, base=enum:UimStatusT, indent=2
    CardType, uint16, indent=2
    ValCardStatus, uint16, base=enum:ValCardStatusT, indent=2
    FactoryMode, uint8,  base=enum:ModeT, indent=2
    CarrierExtFlag, uint8,  base=16, indent=2
    Pathlen, uint16, indent=2
    Path, array, type=uint8, maxsize=5
End

Begin Message, ETS CP SLC STATE Get Rsp
    State, uint8, base=enum:Session State Enum
End

Begin Message, ETS CP CLC L3 STATUS Get Rsp
    ATState, uint8, base = enum:ATState Enum
    AlmpState, uint8, base = enum:Almp State Enum
    InspState, uint8, base = enum:Insp State Enum
    IdpState, uint8, base = enum:Idp State Enum
    CspState, uint8, base = enum:Csp State Enum
    RupState, uint8, base = enum:Rup State Enum
    OmpState, uint8, base = enum:Omp State Enum
    HybridState, uint8, base = enum:Off/On
End

Begin Message, ETS CP CLC IDP DO SYS STATUS Get Rsp
    Slotted Mode, uint8, base=enum:Disable/Enable
    Channel, uint16
    FrameUpper6, uint8
    FrameLow32, uint32
End

Begin Message, ETS CP_RMC_FMP_FNALGOPARMS_GET_CMD Rsp
    FGRALLOC_ECIO_ABSTHRESH_SCH (Q16 scalar), uint16, base=10,
    FGRALLOC_ECIO_ABSTHRESH_FNG (Q16 scalar), uint16, base=10,
    FGRALLOC_ECIO_ABSTHRESH (Q16 scalar), uint16, base=10
    FGRALLOC_RELTHRESH (3db unit), uint8, base=10
    FGRALLOC_ECIO_RELTHRESH1 (3db unit), uint8, base=10
    FGRALLOC_ECIO_RELTHRESH2 (3db unit), uint8, base=10
    FGRALLOC_OFFSETDIST1 (Tc16), uint32, base=10
    FGRALLOC_OFFSETDIST2 (Tc16), uint32, base=10
    FGRALLOC_MINPATHDIST (Tc16), uint32, base=10
    FGRALLOC_ANTPAIRDIST (Tc16), uint32, base=10
    FGRALLOC_GRACE_PERIOD (ms), uint32, base=10
    FGRALLOC_DROP_TIMER (ms), uint32, base=10
    FMP_DLL_R1_THRESH_TC16 (Q16 scalar), uint16, base=10
    FMP_RXTXOFFSET (Tc16), uint16, base=10
    FMP_MAX_CCSYNCMSG_DELAY (slots), uint8, base=10
    FMP_FASTTIMETRK_DELAY (slots), uint8, base=10
    FMP_FNGASSIGN_DELAY (slots), uint8, base=10
    FMP_FNGASSIGN_CTS_DELTA (chips), uint8, base=10
    FMP_FNGASSIGN_CTS_CALLBK_TC (chips), uint32, base=10
    FMP_FNGPOS_DELTA_TC16 (Tc16), int16, base=10
    FMP_SCH_PATHS, uint8, base=10
    FMP_SPY_FNGPOS_INTERVAL, uint8, base=10,
    FMPTEST_DLLSTAT_MAX_COUNT, uint32, base=10,
    FMPTEST_DLLSTAT_MAX_DELAY, uint32, base=16,
End

Begin Message, ETS CP RFC AGC ISR ST Match Get Rsp
    Slot ISR ST Match (chips), uint16, base=10
    HalfSlot ISR ST Match (chips), uint16, base=10
End

Begin Message, ETS CP RFC Settle Times Get Rsp
    Slow Rx AGC Settle Time (usec), uint16, base=10
    Fast Rx AGC Settle Time (usec), uint16, base=10
End

Begin Message, ETS CP RFC Rx AGC Get Config Rsp
    Rx AGC Block, uint32, base=enum:RxAGCBlock
    Rx AGC PeriodMask, uint16, base=16
    Rx AGC Window, uint32, base=16
    Rx AGC Target, uint16, base=16
    Rx AGC LoopCoef, uint8,  base=16
    Rx AGC DigiGain Timing, uint16, base=16
    Rx AGC StepGain Timing, uint16, base=16
End

Begin Message, ETS CP RFC Rx AGC Get DigiGain Rsp
    Main DigiGainALog2, uint16, base=16
    Main DigiGainBits, uint16, base=16
    Main Rx AGC Power (dB), int16,  scale=Q7
    Diversity DigiGainALog2, uint16, base=16
    Diversity DigiGainBits, uint16, base=16
    Diversity Rx AGC Power (dB), int16,  scale=Q7
End

Begin Message, ETS CP RFC AFC Metric Config Get Rsp
    Active Fingers, uint32, base=enum:AFCActiveFingers
    Selective Accumulation Length, uint8,  base=10, default=48
    Track Accumulation Length, uint8,  base=10, default=96
    Selective RSNR Threshold, uint8,  base=10, default=128
    Track RSNR Threshold, uint8,  base=10, default=10
    Slow Alpha Filter Gain, uint16, scale=Q4, default=0x0001
    Fast Alpha Filter Gain, uint16, scale=Q4, default=0x0010
    Slow Beta Filter Gain, uint16, scale=Q4, default=0x0010
    Fast Beta Filter Gain, uint16, scale=Q4, default=0x0010
    Nyquist Limit Cap, uint8,  base=10, max=3
    AFC DFlag, uint32, base=enum:FALSE/TRUE
End

Begin Message, ETS CP RMC CMD RUP GET DFS INFO MSG Rsp
    DFS State, uint8, base=enum:DFS State Enum
    IdleCause, uint8, base=enum:DFS Start Code Enum
    Count, uint8, base=10
    ChanIndex, uint8, base=10
    NumChan, uint8, base=10
    Channel, array, type=uint16, maxsize=10
End

Begin Message, ETS CP_RMC_EQ_SELECT_GET_CMD Rsp
    FmpEqSelect, uint32, base=enum:FmpEqSelectT
    FmpEqWWLSelect, uint32, base=enum:FmpEqWWLSelectT
    FmpEqWWLValueFormat, uint32, base=enum:FmpEqWWLValueFormatT
End

Begin Message, ETS CP FCP CMD DPA RLP STATS PEEK Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    EVDORLPStatsFlowId, uint32, base=10
    EVDORLPStatsResetTime, uint32,
    EVDORLPStatsNaksReceived, uint32, base=10
    EVDORLPStatsReXmitsNotFound, uint32, base=10
    EVDORLPStatsANNakBytesRequested, uint64,
    EVDORLPStatsRxDuplicateBytes, uint64,
    EVDORLPStatsRxReXmitsBytes, uint64,
    EVDORLPStatsRxNewDataBytes, uint64,
    EVDORLPStatsRxTotalBytes, uint64,
    EVDORLPStatsNaksSent, uint32, base=10
    EVDORLPStatsATNakBytesRequested, uint64,
    EVDORLPStatsTxReXmitsBytes, uint64,
    EVDORLPStatsTxNewDataBytes, uint64,
    EVDORLPStatsTxTotalBytes, uint64,
    EVDORLPStatsNakTimesOuts, uint32, base=10
    EVDORLPStatsResetCount, uint32, base=10
    EVDORLPStatsATResetRequestCount, uint32, base=10
    EVDORLPStatsANResetAckCount, uint32, base=10
    EVDORLPStatsANResetRequestCount, uint32, base=10
End

Begin Message, ETS CP FCP CMD MFPA RLP STATS PEEK Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    EVDORevAFwdMFRLPStatsEvent, record, type=EVDORevAFwdMFRLPStatsMeasT, maxsize=6,size=6
End

Begin Record, EVDORevAFwdMFRLPStatsMeasT
    EVDORevAFwdMFRLPStatsFlowId, uint32,base=10
    EVDORevAFwdMFRLPStatsResetTime, uint32,
    EVDORevAFwdMFRLPStatsReXmitsNotFound, uint32,base=10
    EVDORevAFwdMFRLPStatsATNakBytesRequested, uint64,
    EVDORevAFwdMFRLPStatsRxReXmitsBytes, uint64,
    EVDORevAFwdMFRLPStatsRxNewDataBytes, uint64,
    EVDORevAFwdMFRLPStatsRxTotalBytes, uint64,
    EVDORevAFwdMFRLPStatsRxNakTimesOuts, uint32,base=10
    EVDORevAFwdMFRLPStatsResetCount, uint32,base=10
    EVDORevAFwdMFRLPStatsATResetRequestCount, uint32,base=10
    EVDORevAFwdMFRLPStatsANResetAckCount, uint32,base=10
    EVDORevAFwdMFRLPStatsANResetRequestCount, uint32,base=10
End

Begin Message, ETS CP_RCP_RTM_TEST_PARM_GET_CMD Rsp
    revlinkSilenceDuration (frames), uint8, base=10
    revlinkSilencePeriod (frames), uint8, base=10
    frameOffset (slots), uint8, base=10
    drcLen (2^x slots), uint8, base=enum:0/1/2/3
    drcChanGainBase (0.5db), int8, base=10
    dscChanGainBase (0.5db), int8, base=10
    ackChanGain (0.5db), int8, base=10
    drcGating, uint8, base=enum:0 cont/1 disc
    dscLen (8 slots), uint8, base=10
    drcBoostLen (2 slots), uint8, base=10
    dscBoostLen (8 slots), uint8, base=10
    drcChanGainBoost (db), uint8, base=10
    dscChanGainBoost (db), uint8, base=10
    deltaAckChanGainMUP (0.5db), uint8, base=10
    rpcStep, uint8, base=enum:0.5db/1.0db
    dataOffNom_01   (0.5db), int8, base=10
    dataOff9k6_01   (0.25db), int8, base=10
    dataOff19k2_01  (0.25db), int8, base=10
    dataOff38k4_01  (0.25db), int8, base=10
    dataOff76k8_01  (0.25db), int8, base=10
    dataOff153k6_01 (0.25db), int8, base=10
    auxPilotChanGain (db), int8, base=10
    auxPilotMinPayload (128bits), uint8, base=16
    rriGainScale_3 (Q7), uint16, base=10
    dataGainScale0_3 (Q7), uint16, base=10
    dataGainScale1_3 (Q7), uint16, base=10
    dataGainScale2_3 (Q7), uint16, base=10
    dataGainScale3_3 (Q7), uint16, base=10
End

Begin Message, ETS CP_RCP_RTM_TEST_TXCHANSTAT_GET_CMD Rsp
    pilotChanGain (Q6), uint16, base=10
    drcChanGain (Q7), uint16, base=10
    ackChanGain (Q6), uint16, base=10
    dataChanGain (Q5), uint16, base=10
    rriChanGain (Q6), uint16, base=10
    drcLockPeriod, uint16, base=10
End

Begin Message, ETS CP RCP TX DMA TEST READ Msg Rsp
    Data, array, type=uint8, size=32, maxsize=32
End

Begin Message, ETS CP RCP MFPA Read QoSProfiles Rsp
    Profilenum, uint8
    ProfileId, array, type=uint16,maxsize=6
    QoSBlobNum, uint8
    QoSBlob, record, type=QoSBlob Rec, maxsize=10
End

Begin Message, ETS CP RCP MFPA RLP STATS PEEK Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    EVDORevARevMFRLPStatsEvent, record, type=EVDORevARevMFRLPStatsMeasT , maxsize=6,size=6
End

Begin Record, EVDORevARevMFRLPStatsMeasT
    EVDORevARevMFRLPStatsFlowId, uint32,base=10
    EVDORevARevMFRLPStatsResetTime, uint32
    EVDORevARevMFRLPStatsReXmitsNotFound, uint32,base=10
    EVDORevARevMFRLPStatsANNakBytesRequested, uint64
    EVDORevARevMFRLPStatsTxReXmitsBytes, uint64
    EVDORevARevMFRLPStatsTxNewDataBytes, uint64
    EVDORevARevMFRLPStatsTxTotalBytes, uint64
    EVDORevARevMFRLPStatsResetCount, uint32,base=10
    EVDORevARevMFRLPStatsATResetRequestCount, uint32,base=10
    EVDORevARevMFRLPStatsANResetAckCount, uint32,base=10
    EVDORevARevMFRLPStatsANResetRequestCount, uint32,base=10
End

Begin Message, ETS CP RCP Get Gain Scale Rsp
    Rev Channel Scale, uint8,  base=enum:Rev Channel Scale
    Mode, uint8,  base=enum:Auto/Manual
    Gain Value (dB), int16,  scale=Q7
    Gain Value (linear), uint16, scale=Q7
    Register Value, uint16, base=16
End

Begin Message, ETS CP RCP Get Tx Gain Delay Vars Rsp
    Delay Control Unit, uint8,  base=enum:Delay Control Unit
    RevProtocol, uint8,  base=enum:Rev0/RevA
    Delay Hardware, uint8,  base=enum:Delay Hardware Unit
    LowToMed Slot Value, uint16, base=16
    MedToLow Slot Value, uint16, base=16
    MedToHigh Slot Value, uint16, base=16
    HighToMed Slot Value, uint16, base=16
    LowToMed Hslot Value, uint16, base=16
    MedToLow Hslot Value, uint16, base=16
    MedToHigh Hslot Value, uint16, base=16
    HighToMed Hslot Value, uint16, base=16
    SlotGainOffset, int16,  base=16
    HslotGainOffset, int16,  base=16
End

Begin Message, ETS CP RCP Get Tx Clip Level Rsp
    Tx Clip Level, uint16, base=16
End

Begin Message, ETS CP RCP Get Tx Delay Load Window Rsp
    Tx Delay Load Window, uint16, base=16
End

Begin Message, ETS CP_RCP_ETS_GET_CL_RANGE_MSG Rsp
    UpLimit, uint8, base=10
    DownLimit, uint8, base=10
End

Begin Message, ETS CP_RCP_ETS_GET_TX_AVAIL_PWR_MSG Rsp
    PwrMarginQ7, int16, base=10
End

Begin Message, ETS CP_RCP_ETS_GET_TXHYST_CHANGE_POINT_MSG Rsp
    UpLimit, int8, base=10
    DownLimit, int8, base=10
End

Begin Message, ETS CP CSS OOSA Set Parms Rsp
    Result, uint32,  base=enum:CssOOSAPhaseRsp, indent=1
    Css Sub-Module, uint32,  base=enum:CssSubModule,  indent=1
    Power Saving Stage, uint32,  base=enum:CpsmOOSAStage,  indent=1
    Phase, uint8,  base=10, indent = 1
End

Begin Message, ETS CP CSS OOSA Set Enable Rsp
    Result, uint32,  base=enum:CssOOSAPhaseRsp, indent=1
    Css Sub-Module, uint32,  base=enum:CssSubModule, indent = 1
    Enable OOSA, uint8, base=bool
End

Begin Message, ETS CP CSS OOSA Get Enable Rsp
    Css Sub-Module, uint32,  base=enum:CssSubModule, indent = 1
    Result, uint32,  base=enum:CssOOSAPhaseRsp, indent=1
    Enable OOSA, uint8, base=bool
End

Begin Message, ETS CP CSS OOSA Get Parms Rsp
    Result, uint32,  base=enum:CssOOSAPhaseRsp, indent=1
    Css Sub-Module, uint32,  base=enum:CssSubModule, indent = 1
    Power Saving Stage, uint32,  base=enum:CpsmOOSAStage, indent = 1
    Phase, uint8,  base=10, indent = 1
    Scan Method, uint32,  base=enum:CpsmOOSAScanMethod, indent = 1
    Scan Time for Timer Method (Secs), uint32, base=10, indent = 1
    Number of Cycles, uint8,  base=10, indent = 1
    Delay between Cycles (Secs), uint32, base=10, indent = 1
End

Begin Message, ETS CP CSS OOSA Set Num Phases Rsp
    Result, uint32,  base=enum:CssOOSAPhaseRsp, indent=1
    Css Sub-Module, uint32,  base=enum:CssSubModule, indent = 1
    Power Saving Stage, uint32,  base=enum:CpsmOOSAStage, indent = 1
    Number of Phases, uint8,  base=10, indent = 1
End

Begin Message, ETS CP CSS OOSA Get Num Phases Rsp
    Result, uint32,  base=enum:CssOOSAPhaseRsp, indent=1
    Css Sub-Module, uint32,  base=enum:CssSubModule, indent = 1
    Power Saving Stage, uint32,  base=enum:CpsmOOSAStage, indent = 1
    Number of Phases, uint8,  base=10, indent = 1
End

Begin Message, ETS CP CSS OOSA Set Current Stage Rsp
    Result, uint32,  base=enum:CssOOSAPhaseRsp, indent=1
    Css Sub-Module, uint32,  base=enum:CssSubModule, indent = 1
    Power Saving Stage, uint32,  base=enum:CpsmOOSAStage, indent = 1
    Power Saving Phase, uint8,  base=10, indent = 1
    Cycle, uint8,  base=10, indent = 1
End

Begin Message, ETS CP CSS OOSA Get Current Stage Rsp
    Result, uint32,  base=enum:CssOOSAPhaseRsp, indent=1
    Css Sub-Module, uint32,  base=enum:CssSubModule, indent = 1
    Power Saving Stage, uint32,  base=enum:CpsmOOSAStage, indent = 1
    Power Saving Phase, uint8,  base=10, indent = 1
    Cycle, uint8,  base=10, indent = 1
End

Begin Message, ETS CP CSS Get MCC Rsp
    MCC, uint16, base=10, indent = 1
    System, uint32,  base=enum:CssSystem, indent = 1
End

Begin Message, ETS CP EAKA TEST AUTH CMD Rsp
    Result, uint8, base=enum:SEC AuthResultT
End

Begin Message, ETS CP EAKA TEST MK DERIVE CMD Rsp
End

Begin Message, ETS CP EAKA TEST REAUTHXKEY DERIVE CMD Rsp
End

Begin Message, ETS CP EAKA TEST MSK DERIVE CMD Rsp
End

Begin Message, ETS CP EAKA TEST MAC DERIVE CMD Rsp
End

Begin Message, ETS CP EAKA TEST PMK DERIVE CMD Rsp
End

Begin Message, ETS CP EAKA TEST AES CRYPT CMD Rsp
    Result, uint8, base=enum:FAIL/SUCCESS
End

Begin Message, ETS RAT_MMC_API_POWERUP_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_POWERDOWN_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_RAT_ONLY_MODE_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_RAT_3GPP_MODE_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_ACQ_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
    Cause, uint8, base=enum:Acq Cause Type
    ListSize, uint16
    Earfcn, array, type=uint16, maxsize=16, size=ListSize
End

Begin Message, ETS RAT_MMC_API_MCC_SEARCH_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_PS_REG_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
    PriClass, uint8, base=enum:IratPriorityClassT
End

Begin Message, ETS RAT_MMC_API_NO_SERVICE_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_CELL_GLOBAL_ID_RSP Rsp
    RatId, uint8, base=enum:GmssRatId
    RatType, uint8, base=enum:Rat Type
    CellId, array, type=uint8, maxsize=16, size=16
End

Begin Message, ETS RAT_MMC_API_DATACONNECTION_CMD_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
    DataCmd, uint8, base=enum:Data Command Type
End

Begin Message, ETS RAT_MMC_API_DEFAULTBEARER_REQ Rsp
    RatId, uint8,   base=enum:GmssRatId
    PDN Id, uint8,   base=16
    PDN Type, uint8,   base=enum:Address Type
    Attach Type, uint8,	  base=enum:Attaching Type
    PDN IPv6 Addr, array,   type=uint8, maxsize=16, size=16
    PDN IPv4 Addr, array,   type=uint8, maxsize=4, size=4
    Default Router, array,	  type=uint8, maxsize=4, size=4
    PDP Flag, uint8,   base=enum:PDP Flag Type
    APN Length, uint8,   base=16
    APN Name, string,  length=20, columns=20, rows=1
End

Begin Message, ETS RAT_MMC_API_DEDICATEDBEARER_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_BEARER_DISCONNECT_REQ Rsp
    RatId, uint8,   base=enum:GmssRatId
    PDN Id, uint8,   base=16
    Bearer Id, uint8,   base=16
    Defaut Bearer, uint8,   base=enum:False/True
End

Begin Message, ETS RAT_MMC_API_BEARER_DETACH_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_IRAT_MEAS_IND Rsp
    RatId, uint8,   base=enum:GmssRatId
    MsgLength, uint16,  base=16
    Num of Meas, uint8,   base=16
    System Type 1, uint8,   base=enum:System Type
    CGI1Valid, uint8,   base=enum:False/True
    CGI1Value, array,   type=uint8, maxsize=16
    Meas Result 1, uint8,   base=enum:Meas Result Type
    CDMA Type 1, uint8,   base=enum:CdmaT
    Channel Num 1, uint16,  base=16
    Band Num 1, uint8,   base=16
    Num of Pn 1, uint8,   base=16
    Pilot Meas 1, record,  type=CdmaPilotMeasResultT, maxsize=7, size=Num of Pn 1
    System Type 2, uint8,   base=enum:System Type
    CGI2Valid, uint8,   base=enum:False/True
    CGI2Value, array,   type=uint8, maxsize=16
    Meas Result 2, uint8,   base=enum:Meas Result Type
    CDMA Type 2, uint8,   base=enum:CdmaT
    Channel Num 2, uint16,  base=16
    Band Num 2, uint8,   base=16
    Num of Pn 2, uint8,   base=16
    Pilot Meas 2, record,  type=CdmaPilotMeasResultT, maxsize=7, size=Num of Pn 2
    System Type 3, uint8,   base=enum:System Type
    CGI3Valid, uint8,   base=enum:False/True
    CGI3Value, array,   type=uint8, maxsize=16
    Meas Result 3, uint8,   base=enum:Meas Result Type
    CDMA Type 3, uint8,   base=enum:CdmaT
    Channel Num 3, uint16,  base=16
    Band Num 3, uint8,   base=16
    Num of Pn 3, uint8,   base=16
    Pilot Meas 3, record,  type=CdmaPilotMeasResultT, maxsize=7, size=Num of Pn 3
End

Begin Record, CdmaPilotMeasResultT
    PN number, uint16,   base=16
    Phase, int16,    base=16
    Strength, int8,     base=16
End

Begin Message, ETS RAT_MMC_API_IRAT_SYSTEM_CHG_RSP Rsp
    RatId, uint8, base=enum:GmssRatId
    System Chg Result, uint8, base=enum:RAT StatusT
End

Begin Message, ETS RAT_MMC_API_IRAT_SIB8_MEAS_IND Rsp
    RatId, uint8, base=enum:GmssRatId
    Meas Result, uint8, base=enum:Cdma Meas ResultT
    CDMA Type, uint8, base=enum:CdmaT
    Num Of Meas, uint8
    SIB8 Meas, record,type=MmcSIB8MeasResultRecT, maxsize=2, size=Num Of Meas
End

Begin Record, MmcSIB8MeasResultRecT
    Band, uint8
    Channel, uint16
    Num of Pn, uint8
    Cdma Pilot Meas, record, type=CdmaPilotMeasResultT, maxsize=7, size=Num of Pn
End

Begin Message, ETS RAT_MMC_API_RAT_MEASCMD Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_RAT_RESELMEASCMD Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_STOP_IRAT_RATMEAS_CMD Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_CELL_INFO_PS_REG_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
    Earfcn, uint16, base=10
    CellId, uint16, base=10
    PlmnId, uint32, base=10
End

Begin Message, ETS RAT_MMC_API_CDMA_TXPWR_RSP Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_IRAT_RESELMEAS_IND Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_IRAT_HANDOVER_RSP Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_RAT_HANDOVER_PS_REG_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_SET_IDLEMODEMOBILITYINFO Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_PACKET_STATISTICS_RSP Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_PDN_TABLE_SETUP_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS RAT_MMC_API_RAT_MODE_REQ Rsp
    RatId, uint8, base=enum:GmssRatId
End

Begin Message, ETS AP_MMC_MBIM_READY_STATUS_RSP Rsp
    Status, record, type=MbimReadyStatusT, maxsize=1
End

Begin Record, MbimReadyStatusT
    ReadyState, uint8, base=enum:MbimSubReadyStateT
    SubIdLen, uint8, base=16
    SubId, array, type=uint8,maxsize=15
    SimIccIdLen, uint8, base=16
    SimIccId, array, type=uint8, maxsize=20
    ReadyInfo, uint8, base=enum:MbimUniqIdFlagsT
    TelNumLen, uint8, base=16
    TelNum, array, type=uint8,maxsize=15
End

Begin Message, ETS AP_MMC_MBIM_READY_STATUS_NOTIF Rsp
    StatusCode, uint8, base=10
    ReadyState, uint8, base=10
End

Begin Message, ETS AP_MMC_MBIM_RADIO_STATE_CNF Rsp
    StatusCode, uint8, base=10
    HwRadioState, uint8, base=10
    SwRadioState, uint8, base=10
End

Begin Message, ETS AP_MMC_MBIM_RADIO_STATE_RSP Rsp
    StatusCode, uint8, base=10
    HwRadioState, uint8, base=10
    SwRadioState, uint8, base=10
End

Begin Message, ETS AP_MMC_MBIM_RADIO_STATE_NOTIF Rsp
    StatusCode, uint8, base=10
    HwRadioState, uint8, base=10
    SwRadioState, uint8, base=10
End

Begin Message, ETS AP_MMC_MBIM_INIT_RSP Rsp
    StatusCode, uint32, base=enum:ApMmcMbimStatusCode
End

Begin Message, ETS AP_MMC_MBIM_CONNECT_STATE_RSP Rsp
    StatusCode, uint32, base=enum:ApMmcMbimStatusCode
    Status, record, type=ApMmcMbimConnectStatusT, maxsize=1
End

Begin Record, ApMmcMbimConnectStatusT
    SessionId, uint32
    Activation, uint32, base=enum:ActivationStateT
    VoiceCall, uint32, base=enum:VCallStateT
    IPType, uint32, base=enum:IPAddrType
    Context, array,  type=uint8, maxsize=16
    ErrorCode, uint32, base=enum:Err Type from PDN
    IPv4Cfg, uint32, base=16
    IPv6Cfg, uint32, base=16
    IPv4AddrCnt, uint32
    IPv4Address1, array,  type=uint8, maxsize=4
    IPv4Address2, array,  type=uint8, maxsize=4
    IPv6AddrCnt, uint32
    IPv6Address1, array,  type=uint8, maxsize=16
    IPv6Address2, array,  type=uint8, maxsize=16
    IPv4GwyAddrCnt, uint32
    IPv4GwyAddr1, array,  type=uint8, maxsize=4
    IPv4GwyAddr2, array,  type=uint8, maxsize=4
    IPv6GwyAddrCnt, uint32
    IPv6GwyAddr1, array,  type=uint8, maxsize=16
    IPv6GwyAddr2, array,  type=uint8, maxsize=16
    IPv4DnsAddrCnt, uint32
    IPv4DnsAddr1, array,  type=uint8, maxsize=4
    IPv4DnsAddr2, array,  type=uint8, maxsize=4
    IPv6DnsAddrCnt, uint32
    IPv6DnsAddr1, array,  type=uint8, maxsize=16
    IPv6DnsAddr2, array,  type=uint8, maxsize=16
    IPv4MTU, uint32
    IPv6MTU, uint32
End

Begin Message, ETS AP_MMC_MBIM_CONNECT_STATE_IND Rsp
    StatusCode, uint32, base=enum:ApMmcMbimStatusCode
    Status, record, type=ApMmcMbimConnectStatusT, maxsize=1
End

Begin Message, ETS AP_MMC_MBIM_CONNECT_RSP Rsp
    StatusCode, uint32, base=enum:ApMmcMbimStatusCode
    Status, record, type=ApMmcMbimConnectStatusT, maxsize=1
End

Begin Message, ETS AP_MMC_MBIM_SET_DATA_PATH_IND Rsp
    DataPath, uint32, base=enum:CL modem type
End

Begin Message, ETS LTE_RFC_DO_RF_REQ Rsp
    requestTx, uint8, base=enum:False/True, default=TRUE
    ReqAnt, uint8, base=enum:AntennaT, default=LTE_Main_Antenna
    Action, uint8, base=enum:RfcActionT
End

Begin Message, ETS LTE_RFC_DO_RELEASERF_IND Rsp
    ReqAnt, uint8, base=enum:AntennaT, default=LTE_Main_Antenna
End

Begin Message, ETS LTE_RFC_LTE_RF_RSP Rsp
    grantTx, uint8, base=enum:Rejected/Granted, default=Granted
    ReqAnt, uint8, base=enum:AntennaT
    ErrCode, uint8, base=enum:rfcErrT
End

Begin Message, ETS LTE_RFC_LTE_BAND_RSP Rsp
    LTE_Band_Main, uint8, base=enum:LTEbandT
    LTE_Band_Div, uint8, base=enum:LTEbandT
    ErrCode, uint8, base=enum:rfcErrT
End

Begin Message, ETS CP MMC_DEBUG_STATUS_GET_CMD Rsp
    GMSS Info Valid, uint8, base=enum:FALSE/TRUE, indent=2
    OpMode, uint8, base=enum:GmssopMode, indent=3
    GmssState, uint8, base=enum:GmssSt, indent=3
    GmssAction, uint8, base=enum:GmssAct, indent=3
    CurrentCsRat, uint8, base=enum:GmssRatId, indent=3
    CurrentPsRat, uint8, base=enum:GmssRatId, indent=3
    CurrentPsType, uint8, base=enum:GmssPsType, indent=3
    TargetPsRat, uint8, base=enum:GmssRatId, indent=3
    TargetPsType, uint8, base=enum:GmssPsType, indent=3
    GmssPendedAction, uint8, base=enum:GmssAct, indent=3
    PowerStatus, uint8, base=enum:GmssPowerStatus, indent=3
    RatCtrlBlock, record, type=GmssRatCtrlBlockT, maxsize=6
    PKT Info Valid, uint8, base=enum:FALSE/TRUE, indent=2
    CmdRspPsReqModule, uint8, base=enum:Module Name Id, indent=3
    CmdRspStateIndModule, uint8, base=enum:Module Name Id, indent=3
    TargetNetwork, uint8, base=enum:PS Type, indent=3
    ServingNetwork, uint8, base=enum:PS Type, indent=3
    PriorServingNetwork, uint8, base=enum:PS Type, indent=3
    PreviousTargetNetwork, uint8, base=enum:PS Type, indent=3
    PendedDisconnectedInd, uint8, base=enum:FALSE/TRUE, indent=3
    FallBackToHrpd, uint8, base=enum:FALSE/TRUE, indent=4
    PktState, uint8, base=enum:MMC Pkt State, indent=3
    PktConditionalState, uint8, base=enum:MMC Pkt State, indent=3
    PktChangeFlag, uint8, base=enum:FALSE/TRUE, indent=3
    PktLastState, uint8, base=enum:MMC Pkt State, indent=3
    PktLastEvent, uint8, base=enum:MMC Pkt Event, indent=3
    PktStateSeq, uint32, indent=4
    LastDefBearerRspModem, uint8, base=enum:Modem Name Id, indent=3
    LastDefBearerRspPdnId, uint8, indent=3
    LastDefBearerRspStatus, uint8, base=enum:Bearer Status Type, indent=3
    LastDefBearerRspErrCode, uint8, base=enum:Bearer Error Code Type, indent=3
    LastDefBearerRspSeq, uint32, indent=4
    LastPsStateIndModule, uint8, base=enum:Module Name Id, indent=3
    LastPsStateIndHOstatus, uint8, base=enum:HO State Ind Type, indent=3
    LastPsStateIndTargetSysToHO, uint8, base=enum:PS Type, indent=3
    LastPsStateIndServingSystem, uint8, base=enum:PS Type, indent=3
    LastPsStateIndTargetSystem, uint8, base=enum:PS Type, indent=3
    LastPsStateIndSeq, uint32, indent=4
    LastPsReqModule, uint8, base=enum:Module Name Id, indent=3
    LastPsReqTargetSysForPktSvc, uint8, base=enum:PS Type, indent=3
    LastPsReqSeq, uint32, indent=4
    LastBearerDiscRspModule, uint8, base=enum:Module Name Id, indent=3
    LastBearerDiscRspPdnId, uint8, indent=3
    LastBearerDiscRspBearerId, uint8, indent=3
    LastBearerDiscRspStatus, uint8, base=enum:success/no prior connection, indent=3
    LastBearerDiscRspSeq, uint32, indent=4
    LastBearerDiscIndModem, uint8, base=enum:Modem Name Id, indent=3
    LastBearerDiscIndPdnId, uint8, indent=3
    LastBearerDiscIndBearerId, uint8, indent=3
    LastBearerDiscIndSeq, uint32, indent=4
    LastRatPktDataRatId, uint8, indent=3
    LastRatPktDataCmd, uint8, base=enum:Data Cmd Type, indent=3
    LastRatPktDataSeq, uint32, indent=4
    LastPktDataCmdRspModem, uint8, base=enum:Modem Name Id, indent=3
    LastPktDataCmdRspCode, uint8, base=enum:Modem Data State Type, indent=3
    LastPktDataCmdRspSeq, uint32, indent=4
    LastApCallSetupPsType, uint8, base=enum:PS Type, indent=3
    LastApCallSetupPsTypePref, uint8, base=enum:ONLY/PREFERRED, indent=3
    LastApCallSetupPdnId, uint8, indent=3
    LastApCallSetuppSeq, uint32, indent=4
    LastIratMsgId, uint32, base=enum:IratMsgId, indent=3
    LastIratMsgDir, uint32, base=enum:MmcToCdma/CdmaToMmc, indent=3
    LastIratMsgResult, uint32, indent=3
    DOSt, uint8, base=enum:IratDOST, indent=3
    1XSt, uint8, base=enum:Irat1XST, indent=3
    CpDO, uint8, base=enum:IratCPST, indent=3
    Cp1X, uint8, base=enum:IratCPST, indent=3
    IratMode, uint8, base=enum:IratMODE, indent=3
    IratAction, uint8, base=enum:IratAct, indent=3
    PsSupported, uint8, base=enum:IratPST, indent=3
    CurPs, uint8, base=enum:IratPST, indent=3
    CurDOPri, uint8, base=enum:IratPri, indent=3
    PriClassDO, uint8, base=enum:IratPri, indent=3
    Cur1XPri, uint8, base=enum:IratPri, indent=3
    PriClass1X, uint8, base=enum:IratPri, indent=3
    LastIratMspSeq, uint32, indent=4
    CdmaCamState, uint8, base=enum:HLP Cam State, indent=3
    CdmaCamLastState, uint8, base=enum:HLP Cam State, indent=3
    CdmaCamLastEvent, uint8, base=enum:HLP Cam Event, indent=3
    CdmaCamSeq, uint32, indent=4
    Meas Info Valid, uint8, base=enum:FALSE/TRUE, indent=2
End

Begin Record, GmssRatCtrlBlockT
    Rat, uint8, base=enum:GmssRatId, indent=2
    AcqStatus, uint8, base=enum:GmssAcqSt
    PriClass, uint8, base=enum:Gmsspri
    CpSt, uint8, base=enum:GmssRatCpSt
    PsType, uint8, base=enum:GmssPsType
End

Begin Message, ETS CP_PDS_AP_SET_PRIVACY_MODE_MSG Rsp
    Privacy Setting Status, uint32,  base=enum:GPS Privacy Setting
End

Begin Message, ETS CP_PDS_AP_GET_PRIVACY_MODE_MSG Rsp
    Privacy Setting Status, uint32,  base=enum:GPS Privacy Setting
End

Begin Message, ETS CP PDS GPS Open Device HW Init Rsp
    GPS Open Device HW Init Status, uint8, base=enum:PDS GPS Status
End

Begin Message, ETS CP PDS GPS Start Fix Rsp
    Instance ID, uint32
    GPS Start Fix Status, uint8, base=enum:PDS GPS Fix Operation Status
End

Begin Message, ETS CP PDS GPS Stop Fix Rsp
    Instance ID, uint32
    GPS Stop Fix Status, uint8, base=enum:PDS GPS Fix Operation Status
End

Begin Message, ETS CP PDS GPS Configure Fix Mode Rsp
    Instance ID, uint32
    GPS Configure Fix Mode Status, uint8, base=enum:PDS GPS Fix Operation Status
End

Begin Message, ETS CP PDS GPS Configure Fix Rate Rsp
    Instance ID, uint32
    GPS Configure Fix Rate Status, uint8, base=enum:PDS GPS Fix Operation Status
End

Begin Message, ETS CP PDS GPS Configure QOS Rsp
    Instance ID, uint32
    GPS Configure QOS Status, uint8, base=enum:PDS GPS Fix Operation Status
End

Begin Message, ETS CP PDS GPS Write Server Configuration Rsp
    GPS Write Server Config Status, uint8,  base=enum:PDS GPS Status
End

Begin Message, ETS CP PDS GPS Enable Security Rsp
    Instance ID, uint32
    GPS Enable Security Status, uint8,  base=enum:PDS GPS Status
End

Begin Message, ETS CP PDS GPS Reset Assist Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    PDS GPS Reset Assist Status, uint8, base=enum:PDS GPS Status
End

Begin Message, ETS CP PDS GPS Set Security Rsp
    NumRecords, uint32
    FullSysTime, record, type=SysTimeRec, maxsize=4, size=NumRecords
    GPS Set Security Status, uint8, base=enum:PDS GPS Set Security Status
End

Begin DbTemplate, Template List
    CP DB NAM1, DB Id=CP, DB Segment=DB PSW NAM1,                Offset=0, Bytes=548, Menu=CP/DB/DB &Templates/Common
    CP DB NAM2, DB Id=CP, DB Segment=DB PSW NAM2,                Offset=0, Bytes=548, Menu=CP/DB/DB &Templates/Common
    CP DB PSW MRU1, DB Id=CP, DB Segment=DB PSW MRU1,                Offset=0, Bytes=30,  Menu=CP/DB/DB &Templates/Common
    CP DB PSW MRU2, DB Id=CP, DB Segment=DB PSW MRU2,                Offset=0, Bytes=30,  Menu=CP/DB/DB &Templates/Common
    CP DB PSW MS CAP DB, DB Id=CP, DB Segment=DB PSW MS CAP DB,           Offset=0, Bytes=130, Menu=CP/DB/DB &Templates/Common
    CP DB EVDO MRU, DB Id=CP, DB Segment=DB EVDO MRU,                Offset=0, Bytes=30,  Menu=CP/DB/DB &Templates/Common
    CP DB MMI, DB Id=CP, DB Segment=DB UI MISC,                 Offset=0, Bytes=128, Menu=CP/DB/DB &Templates/Common
    CP DB PSW MISC, DB Id=CP, DB Segment=DB PSW MISC,                Offset=0, Bytes=29,  Menu=CP/DB/DB &Templates/Common
    CP DB HWD AFC Data, DB Id=RF, DB Segment=DB HWD AFC PARMS,           Offset=0, Bytes=4,   Menu=CP/DB/DB &Templates/Common
    CP DB HWD Temperature Data, DB Id=RF, DB Segment=DB HWD TEMPERATURE PARMS,   Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/Common
    CP DB HWD Battery Data, DB Id=RF, DB Segment=DB HWD BATTERY PARMS,       Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/Common
    CP DB HWD PDM Voltage Data, DB Id=RF, DB Segment=DB HWD BATT PDM PARMS,      Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/Common
    CP DB HWD BandGap Trim Data, DB Id=RF, DB Segment=DB HWD BANDGAP PARMS,       Offset=0, Bytes=2,   Menu=CP/DB/DB &Templates/Common
    CP DB Service History, DB Id=CP, DB Segment=DB SERVICE HISTORY,         Offset=0, Bytes=41,  Menu=CP/DB/DB &Templates/Service History
    CP DB DBM Timestamp, DB Id=CP, DB Segment=DB DBM TIMESTAMP,           Offset=0, Bytes=20,  Menu=CP/DB/DB &Templates/Service History
    CP DB HWD RF Version, DB Id=RF, DB Segment=DB HWD RF VERSION,          Offset=0, Bytes=30,   Menu=CP/DB/DB &Templates/Common
    CP DB PV EVDO REV0 GainGR Data, DB Id=RF, DB Segment=DB HWD EVDO REV0 GAINGR ADJ, Offset=0,Bytes=42,   Menu=CP/DB/DB &Templates/RFSpecific/D2P
    CP DB PV EVDO REVA GainGR Data, DB Id=RF, DB Segment=DB HWD EVDO REVA GAINGR ADJ, Offset=0,Bytes=98,   Menu=CP/DB/DB &Templates/RFSpecific/D2P
    CP DB PV 1x GainGR Data, DB Id=RF, DB Segment=DB HWD 1X GAINGR ADJ,        Offset=0, Bytes=60,   Menu=CP/DB/DB &Templates/RFSpecific/D2P
    CP DB PV Temp Adj Data, DB Id=RF, DB Segment=DB HWD PV TEMP ADJ,         Offset=0, Bytes=40,   Menu=CP/DB/DB &Templates/RFSpecific/D2P
    CP DB HWD BAND A Tx AGC, DB Id=RF, DB Segment=DB HWD BAND A TXAGC,           Offset=0, Bytes=106, Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Tx AGC 32bit, DB Id=RF, DB Segment=DB HWD BAND A TXAGC 32BIT,     Offset=0, Bytes=298, Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Tx AGC Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND A TXAGC FREQ ADJ,  Offset=0, Bytes=192, Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Tx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND A TXAGC TEMP ADJ,  Offset=0, Bytes=72,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Tx AGC Battery Adj, DB Id=RF, DB Segment=DB HWD BAND A TXAGC BATT ADJ,  Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Tx AGC Alt Thresholds, DB Id=RF, DB Segment=DB HWD BAND A TXAGC ALT THRESH,Offset=0, Bytes=8,   Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Tx Limit Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND A TX LIM FREQ ADJ, Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Tx Limit Temp Adj, DB Id=RF, DB Segment=DB HWD BAND A TX LIM TEMP ADJ, Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Tx Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND A TX LIM BATT ADJ, Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Tx Pwr Detect, DB Id=RF, DB Segment=DB HWD BAND A TX HDET,         Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Tx Pwr Det Freq Adj, DB Id=RF, DB Segment=DB HWD BAND A TX HDET FREQ ADJ,Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Tx Pwr Det Temp Adj, DB Id=RF, DB Segment=DB HWD BAND A TX HDET TEMP ADJ,Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Tx Pwr Det Max Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND A TX HDET MAX BATT,Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Tx PA AGC SPDM, DB Id=RF, DB Segment=DB HWD BAND A TX PA AGC SPDM,  Offset=0, Bytes=96,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Aux Tx AGC, DB Id=RF, DB Segment=DB HWD BAND A AUX TX AGC,           Offset=0, Bytes=106, Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Aux Tx AGC Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND A AUX TX AGC FREQ ADJ,  Offset=0, Bytes=192, Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Aux Tx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND A AUX TX AGC TEMP ADJ,  Offset=0, Bytes=72,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Aux Tx AGC Battery Adj, DB Id=RF, DB Segment=DB HWD BAND A AUX TX AGC BATT ADJ,  Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Aux Tx AGC Alt Thresholds, DB Id=RF, DB Segment=DB HWD BAND A AUX TX AGC ALT THRESH,Offset=0, Bytes=8,   Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Aux Tx Limit Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND A AUX TX LIM FREQ ADJ, Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Aux Tx Limit Temp Adj, DB Id=RF, DB Segment=DB HWD BAND A AUX TX LIM TEMP ADJ, Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Aux Tx Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND A AUX TX LIM BATT ADJ, Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Aux Tx Pwr Detect, DB Id=RF, DB Segment=DB HWD BAND A AUX TX HDET,         Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Aux Tx Pwr Det Freq Adj, DB Id=RF, DB Segment=DB HWD BAND A AUX TX HDET FREQ ADJ,Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Aux Tx Pwr Det Temp Adj, DB Id=RF, DB Segment=DB HWD BAND A AUX TX HDET TEMP ADJ,Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Aux Tx Pwr Det Max Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND A AUX TX HDET MAX BATT,Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Aux Tx PA AGC SPDM, DB Id=RF, DB Segment=DB HWD BAND A AUX TX PA AGC SPDM,  Offset=0, Bytes=96,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Rx AGC, DB Id=RF, DB Segment=DB HWD BAND A RXAGC,           Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND A RXAGC NO IMD,    Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND A RXAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND A RXAGC TEMP ADJ,  Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Div Rx AGC, DB Id=RF, DB Segment=DB HWD BAND A DIV RXAGC,       Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Div Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND A DIV RXAGC NO IMD,Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Div Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND A DIV RXAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Div Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND A DIV RXAGC TEMP ADJ,Offset=0,Bytes=24, Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND A RX BANK CAL,   Offset=0, Bytes=16,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Div Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND A DIV RX BANK CAL,   Offset=0, Bytes=16,   Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Sec Rx AGC, DB Id=RF, DB Segment=DB HWD BAND A Sec RxAGC,       Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Sec Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND A Sec RxAGC NO IMD,Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Sec Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND A Sec RxAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Sec Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND A Sec RxAGC TEMP ADJ,Offset=0,Bytes=24, Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND A Sec Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND A Sec Rx BANK CAL,     Offset=0, Bytes=16,  Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD BAND B Tx AGC, DB Id=RF, DB Segment=DB HWD BAND B TXAGC,          Offset=0, Bytes=106, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Tx AGC 32bit, DB Id=RF, DB Segment=DB HWD BAND B TXAGC 32BIT,     Offset=0, Bytes=298, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Tx AGC Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND B TXAGC FREQ ADJ, Offset=0, Bytes=192, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Tx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND B TXAGC TEMP ADJ, Offset=0, Bytes=72,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Tx AGC Battery Adj, DB Id=RF, DB Segment=DB HWD BAND B TXAGC BATT ADJ, Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Tx AGC Alt Thresholds, DB Id=RF, DB Segment=DB HWD BAND B TXAGC ALT THRESH,Offset=0, Bytes=8,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Tx Limit Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND B TX LIM FREQ ADJ,Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Tx Limit Temp Adj, DB Id=RF, DB Segment=DB HWD BAND B TX LIM TEMP ADJ,Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Tx Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND B TX LIM BATT ADJ,Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Tx Pwr Detect, DB Id=RF, DB Segment=DB HWD BAND B TX HDET,        Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Tx Pwr Det Freq Adj, DB Id=RF, DB Segment=DB HWD BAND B TX HDET FREQ ADJ,Offset=0, Bytes=64, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Tx Pwr Det Temp Adj, DB Id=RF, DB Segment=DB HWD BAND B TX HDET TEMP ADJ,Offset=0, Bytes=24, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Tx Pwr Det Max Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND B TX HDET MAX BATT,Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Tx PA AGC SPDM, DB Id=RF, DB Segment=DB HWD BAND B TX PA AGC SPDM,  Offset=0, Bytes=96,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Aux Tx AGC, DB Id=RF, DB Segment=DB HWD BAND B AUX TX AGC,           Offset=0, Bytes=106, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Aux Tx AGC Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND B AUX TX AGC FREQ ADJ,  Offset=0, Bytes=192, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Aux Tx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND B AUX TX AGC TEMP ADJ,  Offset=0, Bytes=72,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Aux Tx AGC Battery Adj, DB Id=RF, DB Segment=DB HWD BAND B AUX TX AGC BATT ADJ,  Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Aux Tx AGC Alt Thresholds, DB Id=RF, DB Segment=DB HWD BAND B AUX TX AGC ALT THRESH,Offset=0, Bytes=8,   Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Aux Tx Limit Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND B AUX TX LIM FREQ ADJ, Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Aux Tx Limit Temp Adj, DB Id=RF, DB Segment=DB HWD BAND B AUX TX LIM TEMP ADJ, Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Aux Tx Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND B AUX TX LIM BATT ADJ, Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Aux Tx Pwr Detect, DB Id=RF, DB Segment=DB HWD BAND B AUX TX HDET,         Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Aux Tx Pwr Det Freq Adj, DB Id=RF, DB Segment=DB HWD BAND B AUX TX HDET FREQ ADJ,Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Aux Tx Pwr Det Temp Adj, DB Id=RF, DB Segment=DB HWD BAND B AUX TX HDET TEMP ADJ,Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Aux Tx Pwr Det Max Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND B AUX TX HDET MAX BATT,Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Aux Tx PA AGC SPDM, DB Id=RF, DB Segment=DB HWD BAND B AUX TX PA AGC SPDM,  Offset=0, Bytes=96,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Rx AGC, DB Id=RF, DB Segment=DB HWD BAND B RXAGC,          Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND B RXAGC NO IMD,   Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND B RXAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND B RXAGC TEMP ADJ, Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Div Rx AGC, DB Id=RF, DB Segment=DB HWD BAND B DIV RXAGC,       Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Div Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND B DIV RXAGC NO IMD,Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Div Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND B DIV RXAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Div Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND B DIV RXAGC TEMP ADJ,Offset=0,Bytes=24, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND B RX BANK CAL,   Offset=0, Bytes=16,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Div Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND B DIV RX BANK CAL,   Offset=0, Bytes=16,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Sec Rx AGC, DB Id=RF, DB Segment=DB HWD BAND B Sec RxAGC,       Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Sec Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND B Sec RxAGC NO IMD,Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Sec Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND B Sec RxAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Sec Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND B Sec RxAGC TEMP ADJ,Offset=0,Bytes=24, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND B Sec Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND B Sec Rx BANK CAL,     Offset=0, Bytes=16,  Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD BAND C Tx AGC, DB Id=RF, DB Segment=DB HWD BAND C TXAGC,          Offset=0, Bytes=106, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Tx AGC 32bit, DB Id=RF, DB Segment=DB HWD BAND C TXAGC 32BIT,     Offset=0, Bytes=298, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Tx AGC Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND C TXAGC FREQ ADJ, Offset=0, Bytes=192, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Tx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND C TXAGC TEMP ADJ, Offset=0, Bytes=72,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Tx AGC Battery Adj, DB Id=RF, DB Segment=DB HWD BAND C TXAGC BATT ADJ, Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Tx AGC Alt Thresholds, DB Id=RF, DB Segment=DB HWD BAND C TXAGC ALT THRESH,Offset=0, Bytes=8,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Tx Limit Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND C TX LIM FREQ ADJ,Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Tx Limit Temp Adj, DB Id=RF, DB Segment=DB HWD BAND C TX LIM TEMP ADJ,Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Tx Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND C TX LIM BATT ADJ,Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Tx Pwr Detect, DB Id=RF, DB Segment=DB HWD BAND C TX HDET,        Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Tx Pwr Det Freq Adj, DB Id=RF, DB Segment=DB HWD BAND C TX HDET FREQ ADJ,Offset=0, Bytes=64, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Tx Pwr Det Temp Adj, DB Id=RF, DB Segment=DB HWD BAND C TX HDET TEMP ADJ,Offset=0, Bytes=24, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Tx Pwr Det Max Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND C TX HDET MAX BATT,Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Tx PA AGC SPDM, DB Id=RF, DB Segment=DB HWD BAND C TX PA AGC SPDM,  Offset=0, Bytes=96,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Aux Tx AGC, DB Id=RF, DB Segment=DB HWD BAND C AUX TX AGC,           Offset=0, Bytes=106, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Aux Tx AGC Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND C AUX TX AGC FREQ ADJ,  Offset=0, Bytes=192, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Aux Tx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND C AUX TX AGC TEMP ADJ,  Offset=0, Bytes=72,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Aux Tx AGC Battery Adj, DB Id=RF, DB Segment=DB HWD BAND C AUX TX AGC BATT ADJ,  Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Aux Tx AGC Alt Thresholds, DB Id=RF, DB Segment=DB HWD BAND C AUX TX AGC ALT THRESH,Offset=0, Bytes=8,   Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Aux Tx Limit Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND C AUX TX LIM FREQ ADJ, Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Aux Tx Limit Temp Adj, DB Id=RF, DB Segment=DB HWD BAND C AUX TX LIM TEMP ADJ, Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Aux Tx Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND C AUX TX LIM BATT ADJ, Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Aux Tx Pwr Detect, DB Id=RF, DB Segment=DB HWD BAND C AUX TX HDET,         Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Aux Tx Pwr Det Freq Adj, DB Id=RF, DB Segment=DB HWD BAND C AUX TX HDET FREQ ADJ,Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Aux Tx Pwr Det Temp Adj, DB Id=RF, DB Segment=DB HWD BAND C AUX TX HDET TEMP ADJ,Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Aux Tx Pwr Det Max Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND C AUX TX HDET MAX BATT,Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Aux Tx PA AGC SPDM, DB Id=RF, DB Segment=DB HWD BAND C AUX TX PA AGC SPDM,  Offset=0, Bytes=96,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Rx AGC, DB Id=RF, DB Segment=DB HWD BAND C RXAGC,          Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND C RXAGC NO IMD,   Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND C RXAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND C RXAGC TEMP ADJ, Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Div Rx AGC, DB Id=RF, DB Segment=DB HWD BAND C DIV RXAGC,       Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Div Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND C DIV RXAGC NO IMD,Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Div Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND C DIV RXAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Div Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND C DIV RXAGC TEMP ADJ,Offset=0,Bytes=24, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND C RX BANK CAL,   Offset=0, Bytes=16,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Div Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND C DIV RX BANK CAL,   Offset=0, Bytes=16,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Sec Rx AGC, DB Id=RF, DB Segment=DB HWD BAND C Sec RxAGC,       Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Sec Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND C Sec RxAGC NO IMD,Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Sec Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND C Sec RxAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Sec Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND C Sec RxAGC TEMP ADJ,Offset=0,Bytes=24, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND C Sec Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND C Sec Rx BANK CAL,     Offset=0, Bytes=16,  Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD BAND D Tx AGC, DB Id=RF, DB Segment=DB HWD BAND D TXAGC,          Offset=0, Bytes=106, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Tx AGC 32bit, DB Id=RF, DB Segment=DB HWD BAND D TXAGC 32BIT,     Offset=0, Bytes=298, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Tx AGC Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND D TXAGC FREQ ADJ, Offset=0, Bytes=192, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Tx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND D TXAGC TEMP ADJ, Offset=0, Bytes=72,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Tx AGC Battery Adj, DB Id=RF, DB Segment=DB HWD BAND D TXAGC BATT ADJ, Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Tx AGC Alt Thresholds, DB Id=RF, DB Segment=DB HWD BAND D TXAGC ALT THRESH,Offset=0, Bytes=8,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Tx Limit Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND D TX LIM FREQ ADJ,Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Tx Limit Temp Adj, DB Id=RF, DB Segment=DB HWD BAND D TX LIM TEMP ADJ,Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Tx Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND D TX LIM BATT ADJ,Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Tx Pwr Detect, DB Id=RF, DB Segment=DB HWD BAND D TX HDET,        Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Tx Pwr Det Freq Adj, DB Id=RF, DB Segment=DB HWD BAND D TX HDET FREQ ADJ,Offset=0, Bytes=64, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Tx Pwr Det Temp Adj, DB Id=RF, DB Segment=DB HWD BAND D TX HDET TEMP ADJ,Offset=0, Bytes=24, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Tx Pwr Det Max Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND D TX HDET MAX BATT,Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Tx PA AGC SPDM, DB Id=RF, DB Segment=DB HWD BAND D TX PA AGC SPDM,  Offset=0, Bytes=96,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Aux Tx AGC, DB Id=RF, DB Segment=DB HWD BAND D AUX TX AGC,           Offset=0, Bytes=106, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Aux Tx AGC Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND D AUX TX AGC FREQ ADJ,  Offset=0, Bytes=192, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Aux Tx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND D AUX TX AGC TEMP ADJ,  Offset=0, Bytes=72,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Aux Tx AGC Battery Adj, DB Id=RF, DB Segment=DB HWD BAND D AUX TX AGC BATT ADJ,  Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Aux Tx AGC Alt Thresholds, DB Id=RF, DB Segment=DB HWD BAND D AUX TX AGC ALT THRESH,Offset=0, Bytes=8,   Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Aux Tx Limit Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND D AUX TX LIM FREQ ADJ, Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Aux Tx Limit Temp Adj, DB Id=RF, DB Segment=DB HWD BAND D AUX TX LIM TEMP ADJ, Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Aux Tx Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND D AUX TX LIM BATT ADJ, Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Aux Tx Pwr Detect, DB Id=RF, DB Segment=DB HWD BAND D AUX TX HDET,         Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Aux Tx Pwr Det Freq Adj, DB Id=RF, DB Segment=DB HWD BAND D AUX TX HDET FREQ ADJ,Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Aux Tx Pwr Det Temp Adj, DB Id=RF, DB Segment=DB HWD BAND D AUX TX HDET TEMP ADJ,Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Aux Tx Pwr Det Max Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND D AUX TX HDET MAX BATT,Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Aux Tx PA AGC SPDM, DB Id=RF, DB Segment=DB HWD BAND D AUX TX PA AGC SPDM,  Offset=0, Bytes=96,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Rx AGC, DB Id=RF, DB Segment=DB HWD BAND D RXAGC,          Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND D RXAGC NO IMD,   Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND D RXAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND D RXAGC TEMP ADJ, Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Div Rx AGC, DB Id=RF, DB Segment=DB HWD BAND D DIV RXAGC,       Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Div Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND D DIV RXAGC NO IMD,Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Div Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND D DIV RXAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Div Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND D DIV RXAGC TEMP ADJ,Offset=0,Bytes=24, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND D RX BANK CAL,   Offset=0, Bytes=16,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Div Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND D DIV RX BANK CAL,   Offset=0, Bytes=16,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Sec Rx AGC, DB Id=RF, DB Segment=DB HWD BAND D Sec RxAGC,       Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Sec Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND D Sec RxAGC NO IMD,Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Sec Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND D Sec RxAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Sec Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND D Sec RxAGC TEMP ADJ,Offset=0,Bytes=24, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND D Sec Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND D Sec Rx BANK CAL,     Offset=0, Bytes=16,  Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD BAND E Tx AGC, DB Id=RF, DB Segment=DB HWD BAND E TX AGC,          Offset=0, Bytes=106, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Tx AGC 32bit, DB Id=RF, DB Segment=DB HWD BAND E TXAGC 32BIT,     Offset=0, Bytes=298, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Tx AGC Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND E TX AGC FREQ ADJ, Offset=0, Bytes=192, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Tx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND E TX AGC TEMP ADJ, Offset=0, Bytes=72,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Tx AGC Battery Adj, DB Id=RF, DB Segment=DB HWD BAND E TX AGC BATT ADJ, Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Tx AGC Alt Thresholds, DB Id=RF, DB Segment=DB HWD BAND E TX AGC ALT THRESH,Offset=0, Bytes=8,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Tx Limit Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND E TX LIM FREQ ADJ,Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Tx Limit Temp Adj, DB Id=RF, DB Segment=DB HWD BAND E TX LIM TEMP ADJ,Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Tx Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND E TX LIM BATT ADJ,Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Tx Pwr Detect, DB Id=RF, DB Segment=DB HWD BAND E TX HDET,        Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Tx Pwr Det Freq Adj, DB Id=RF, DB Segment=DB HWD BAND E TX HDET FREQ ADJ,Offset=0, Bytes=64, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Tx Pwr Det Temp Adj, DB Id=RF, DB Segment=DB HWD BAND E TX HDET TEMP ADJ,Offset=0, Bytes=24, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Tx Pwr Det Max Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND E TX HDET MAX BATT,Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Tx PA AGC SPDM, DB Id=RF, DB Segment=DB HWD BAND E TX PA AGC SPDM,  Offset=0, Bytes=96,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Aux Tx AGC, DB Id=RF, DB Segment=DB HWD BAND E AUX TXAGC,           Offset=0, Bytes=106, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Aux Tx AGC Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND E AUX TXAGC FREQ ADJ,  Offset=0, Bytes=192, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Aux Tx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND E AUX TXAGC TEMP ADJ,  Offset=0, Bytes=72,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Aux Tx AGC Battery Adj, DB Id=RF, DB Segment=DB HWD BAND E AUX TXAGC BATT ADJ,  Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Aux Tx AGC Alt Thresholds, DB Id=RF, DB Segment=DB HWD BAND E AUX TXAGC ALT THRESH,Offset=0, Bytes=8,   Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Aux Tx Limit Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND E AUX TX LIM FREQ ADJ, Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Aux Tx Limit Temp Adj, DB Id=RF, DB Segment=DB HWD BAND E AUX TX LIM TEMP ADJ, Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Aux Tx Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND E AUX TX LIM BATT ADJ, Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Aux Tx Pwr Detect, DB Id=RF, DB Segment=DB HWD BAND E AUX TX HDET,         Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Aux Tx Pwr Det Freq Adj, DB Id=RF, DB Segment=DB HWD BAND E AUX TX HDET FREQ ADJ,Offset=0, Bytes=64,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Aux Tx Pwr Det Temp Adj, DB Id=RF, DB Segment=DB HWD BAND E AUX TX HDET TEMP ADJ,Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Aux Tx Pwr Det Max Limit Battery Adj, DB Id=RF, DB Segment=DB HWD BAND E AUX TX HDET MAX BATT,Offset=0, Bytes=32,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Aux Tx PA AGC SPDM, DB Id=RF, DB Segment=DB HWD BAND E AUX TX PA AGC SPDM,  Offset=0, Bytes=96,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Rx AGC, DB Id=RF, DB Segment=DB HWD BAND E RXAGC,          Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND E RXAGC NO IMD,   Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND E RXAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND E RXAGC TEMP ADJ, Offset=0, Bytes=24,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Div Rx AGC, DB Id=RF, DB Segment=DB HWD BAND E DIV RXAGC,       Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Div Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND E DIV RXAGC NO IMD,Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Div Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND E DIV RXAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Div Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND E DIV RXAGC TEMP ADJ,Offset=0,Bytes=24, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND E RX BANK CAL,   Offset=0, Bytes=16,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Div Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND E DIV RX BANK CAL,   Offset=0, Bytes=16,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Sec Rx AGC, DB Id=RF, DB Segment=DB HWD BAND E Sec RxAGC,       Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Sec Rx AGC NO IMD, DB Id=RF, DB Segment=DB HWD BAND E Sec RxAGC NO IMD,Offset=0, Bytes=110, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Sec Rx AGC Multi-Gain Freq Chan Adj, DB Id=RF, DB Segment=DB HWD BAND E Sec RxAGC MULTIGAIN FREQ ADJ,  Offset=0, Bytes=195,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Sec Rx AGC Temp Adj, DB Id=RF, DB Segment=DB HWD BAND E Sec RxAGC TEMP ADJ,Offset=0,Bytes=24, Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD BAND E Sec Rx Bank Calibration, DB Id=RF, DB Segment=DB HWD BAND E Sec Rx BANK CAL,     Offset=0, Bytes=16,  Menu=CP/DB/DB &Templates/BAND E
    CP DB HWD GPS BAND A Calibration, DB Id=RF, DB Segment=DB HWD GPS BAND A CALIBR, Offset=0, Bytes=16, Menu=CP/DB/DB &Templates/BAND A
    CP DB HWD GPS BAND B Calibration, DB Id=RF, DB Segment=DB HWD GPS BAND B CALIBR, Offset=0, Bytes=16, Menu=CP/DB/DB &Templates/BAND B
    CP DB HWD GPS BAND C Calibration, DB Id=RF, DB Segment=DB HWD GPS BAND C CALIBR, Offset=0, Bytes=16, Menu=CP/DB/DB &Templates/BAND C
    CP DB HWD GPS BAND D Calibration, DB Id=RF, DB Segment=DB HWD GPS BAND D CALIBR, Offset=0, Bytes=16, Menu=CP/DB/DB &Templates/BAND D
    CP DB HWD GPS BAND E Calibration, DB Id=RF, DB Segment=DB HWD GPS BAND E CALIBR, Offset=0, Bytes=16, Menu=CP/DB/DB &Templates/BAND E
End

Begin DbTemplate, CP DB NAM1, Template
    ESN, uint32, readonly=1
    SCM, array, type=uint8,base=16,maxsize=5
    SlotCycleIndex, uint8, base=10
    MobFirmRev, uint16, base=10
    MobModel, uint8, base=10
    MobPRev, array, type=uint8,base=10,maxsize=5
    ValidZoneEntry, uint8,  base=bool
    ZoneList RegZone, uint16, base=10
    ZoneList Sid, uint16, base=10
    ZoneList Nid, uint16, base=10
    ZoneList AgeTimer, uint16, base=10
    ZoneList TimerEnabled, uint8, base=bool
    ZoneList PcsBlock, uint8, base=10
    ZoneList BandClass, uint8, base=enum:Band Class
    ValidSidNidEntry, uint8, base=bool
    SidNidList Sid, uint16, base=10
    SidNidList Nid, uint16, base=10
    SidNidList AgeTimer, uint16, base=10
    SidNidList TimerEnabled, uint8, base=bool
    SidNidList PcsBlock, uint8, base=10
    SidNidList CdmaBand, uint8, base=enum:Band Class
    BaseLat, int32
    BaseLong, int32
    Distance, uint16
    LockCodeReason, uint8
    MaintReason, uint8
    DigitalReg, uint8, base=bool
    PrefBand, uint8, base=enum:Pref Bands, Readonly=1
    Reserved8, uint8, base=10, Hidden=1
    PrefBlockBand1, uint8, base=enum:Block Bands, Readonly=1
    PrefServBand0, uint8, base=enum:Pref System, Readonly=1
    Reserved, uint8, base=10,  Hidden=1
    Reserved1, array, type=uint32,base = 10, maxsize=2, Hidden=1
    Reserved2, array, type=uint8, base = 10, maxsize=7, Hidden=1
    Reserved3, array, type=uint8, base = 10, maxsize=8, Hidden=1
    Count, uint8,  base = 10
    ImsiMValid, bit,offset=7,pos=first,base=enum:Not Valid/Valid,readonly=GBL_UIM_SUPPORTED,count=1,bytes=1
    ImsiTValid, bit,offset=6,pos=last,base=enum:Not Valid/Valid,readonly=GBL_UIM_SUPPORTED,count=1,bytes=1
    M_MCC, uint16, base = 10, Readonly=GBL_UIM_SUPPORTED
    M_IMSI_11_12, uint8,  base = 10, Readonly=GBL_UIM_SUPPORTED
    M_IMSI_S2, uint16, base = 10, Readonly=GBL_UIM_SUPPORTED
    M_IMSI_S1, uint32, base = 10, Readonly=GBL_UIM_SUPPORTED
    M_IMSI_Class, uint8,  base = 10, Readonly=GBL_UIM_SUPPORTED
    M_AddrNum, uint8,  base = 10, Readonly=GBL_UIM_SUPPORTED
    T_MCC, uint16, base = 10, Readonly=GBL_UIM_SUPPORTED
    T_IMSI_11_12, uint8,  base = 10, Readonly=GBL_UIM_SUPPORTED
    T_IMSI_S2, uint16, base = 10, Readonly=GBL_UIM_SUPPORTED
    T_IMSI_S1, uint32, base = 10, Readonly=GBL_UIM_SUPPORTED
    T_IMSI_Class, uint8,  base = 10, Readonly=GBL_UIM_SUPPORTED
    T_AddrNum, uint8,  base = 10, Readonly=GBL_UIM_SUPPORTED
    AssignTmsiZoneLen, uint8
    AssignTmsiZone, array, type=uint8, maxsize=8
    TmsiCode, uint32
    TmsiExpTime, uint32
    Positive Sids, array,  type=uint16, base = 10, maxsize=20
    Positive Nids, array,  type=uint16, base = 10, maxsize=20
    Negative Sids, array,  type=uint16, base = 10, maxsize=10
    Negative Nids, array,  type=uint16, base = 10, maxsize=10
    MaxSidNid, uint8,  base = 10
    StoredPosSidNid, uint8,  base = 10
    StoredNegSidNid, uint8,  base = 10
    Accolc, uint8,  base = 10, Readonly=GBL_UIM_SUPPORTED
    MobTermHome, bit,offset=7,pos=first,base=enum:FALSE/TRUE,count=1,bytes=1
    MobTermSid, bit,offset=6,pos=middle,base=enum:FALSE/TRUE,count=1,bytes=1
    MobTermNid, bit,offset=5,pos=last,base=enum:FALSE/TRUE,count=1,bytes=1
    BcastAddrLen, uint8,  base = 10
    BcastAddr, array,  type = uint8, base = 10, maxsize = 15
    Reserved4, uint32, base = 10, Hidden=1
    Allow Otapa, bit,offset=6,pos=first,base=enum:No/Yes,default=Yes,count=1,bytes=1
    EnableOTA, bit,offset=5,pos=middle,base=enum:FALSE/TRUE,default=TRUE,count=1,bytes=1
    EnableSPASM, bit,offset=4,pos=middle,base=enum:FALSE/TRUE,default=TRUE,count=1,bytes=1
    AllowChangeSPC, bit,offset=3,pos=last,base=enum:No/Yes,default=Yes,count=1,bytes=1
    MdnNumDigits, uint8,  base = 10
    Mdn, array,  type = uint8, maxsize = 16, base = 10
    HomeSid, uint16, base = 10
    Ex, uint8 , base = 10
    Analog FirstChP, uint16, base = 10
    Analog Dtx, uint8 , base = 10
    Analog FccA, uint16, base = 10
    Analog LccA, uint16, base = 10
    Analog FccB, uint16, base = 10
    Analog LccB, uint16, base = 10
    NXTREGsp, uint32, base = 10
    SIDsp, uint16, base = 10
    LOCAIDsp, uint16, base = 10
    PUREGsp, uint8,  base=bool
    CDMA Pri Ch A, uint16, base = 10
    CDMA Sec Ch A, uint16, base = 10
    CDMA Pri Ch B, uint16, base = 10
    CDMA Sec Ch B, uint16, base = 10
    Reserved5, array, type = uint8, maxsize=125, Hidden=1
    ReservedBits0, bit,offset=7,pos=first,hidden=1,count=1,bytes=1
    ReservedBits1, bit,offset=6,pos=last,hidden=1,count=1,bytes=1
    Reserved6, array, type = uint8, maxsize=89, Hidden=1
    Reserved7, uint8,  base = 10, Hidden=1
    UIM ID, uint32, base = 16, Readonly=GBL_UIM_SUPPORTED, Hidden=(GBL_UIM_SUPPORTED==0)
    RoamSet Voice Domestic, bit,offset=7,pos=first,base=enum:FALSE/TRUE,count=1,bytes=1
    RoamSet Data Domestic, bit,offset=6,pos=middle,base=enum:FALSE/TRUE,count=1,bytes=1
    RoamSet Voice International, bit,offset=5,pos=middle,base=enum:FALSE/TRUE,count=1,bytes=1
    RoamSet Data International, bit,offset=4,pos=last,base=enum:FALSE/TRUE,count=1,bytes=1
    SystemSelect, uint8,  base=enum:System Select Type, default=Automatic
    FutureExpandFields, array,  type = uint8, base=10, maxsize=3
    Checksum, uint16, base = 16
End

Begin DbTemplate, CP DB NAM2, Template
    ESN, uint32, readonly=1
    SCM, array, type=uint8,base=16,maxsize=5
    SlotCycleIndex, uint8,  base=10
    MobFirmRev, uint16, base=10
    MobModel, uint8,  base=10
    MobPRev, array, type=uint8,base=10,maxsize=5
    ValidZoneEntry, uint8,  base=bool
    ZoneList RegZone, uint16, base=10
    ZoneList Sid, uint16, base=10
    ZoneList Nid, uint16, base=10
    ZoneList AgeTimer, uint16, base=10
    ZoneList TimerEnabled, uint8,  base=bool
    ZoneList PcsBlock, uint8,  base=10
    ZoneList BandClass, uint8,  base=enum:Band Class
    ValidSidNidEntry, uint8,  base=bool
    SidNidList Sid, uint16, base=10
    SidNidList Nid, uint16, base=10
    SidNidList AgeTimer, uint16, base=10
    SidNidList TimerEnabled, uint8,  base=bool
    SidNidList PcsBlock, uint8,  base=10
    SidNidList CdmaBand, uint8,  base=enum:Band Class
    BaseLat, int32
    BaseLong, int32
    Distance, uint16
    LockCodeReason, uint8
    MaintReason, uint8
    DigitalReg, uint8,  base=bool
    PrefBand, uint8,  base=enum:Pref Bands, Readonly=1
    Reserved8, uint8, base=10, Hidden=1
    PrefBlockBand1, uint8,  base=enum:Block Bands, Readonly=1
    PrefServBand0, uint8,  base=enum:Pref System, Readonly=1
    Reserved, uint8,  base = 10,  Hidden=1
    Reserved1, array,  type=uint32,base = 10, maxsize=2, Hidden=1
    Reserved2, array,  type=uint8, base = 10, maxsize=7, Hidden=1
    Reserved3, array,  type=uint8, base = 10, maxsize=8, Hidden=1
    Count, uint8,  base = 10
    ImsiMValid, bit,offset=7,pos=first,base=enum:Not Valid/Valid,readonly=GBL_UIM_SUPPORTED,count=1,bytes=1
    ImsiTValid, bit,offset=6,pos=last,base=enum:Not Valid/Valid,readonly=GBL_UIM_SUPPORTED,count=1,bytes=1
    M_MCC, uint16, base = 10, Readonly=GBL_UIM_SUPPORTED
    M_IMSI_11_12, uint8,  base = 10, Readonly=GBL_UIM_SUPPORTED
    M_IMSI_S2, uint16, base = 10, Readonly=GBL_UIM_SUPPORTED
    M_IMSI_S1, uint32, base = 10, Readonly=GBL_UIM_SUPPORTED
    M_IMSI_Class, uint8,  base = 10, Readonly=GBL_UIM_SUPPORTED
    M_AddrNum, uint8,  base = 10, Readonly=GBL_UIM_SUPPORTED
    T_MCC, uint16, base = 10, Readonly=GBL_UIM_SUPPORTED
    T_IMSI_11_12, uint8,  base = 10, Readonly=GBL_UIM_SUPPORTED
    T_IMSI_S2, uint16, base = 10, Readonly=GBL_UIM_SUPPORTED
    T_IMSI_S1, uint32, base = 10, Readonly=GBL_UIM_SUPPORTED
    T_IMSI_Class, uint8,  base = 10, Readonly=GBL_UIM_SUPPORTED
    T_AddrNum, uint8,  base = 10, Readonly=GBL_UIM_SUPPORTED
    AssignTmsiZoneLen, uint8
    AssignTmsiZone, array,  type=uint8, maxsize=8
    TmsiCode, uint32
    TmsiExpTime, uint32
    Positive Sids, array,  type=uint16, base = 10, maxsize=20
    Positive Nids, array,  type=uint16, base = 10, maxsize=20
    Negative Sids, array,  type=uint16, base = 10, maxsize=10
    Negative Nids, array,  type=uint16, base = 10, maxsize=10
    MaxSidNid, uint8,  base = 10
    StoredPosSidNid, uint8,  base = 10
    StoredNegSidNid, uint8,  base = 10
    Accolc, uint8,  base = 10, Readonly=GBL_UIM_SUPPORTED
    MobTermHome, bit,offset=7,pos=first,base=enum:FALSE/TRUE,count=1,bytes=1
    MobTermSid, bit,offset=6,pos=middle,base=enum:FALSE/TRUE,count=1,bytes=1
    MobTermNid, bit,offset=5,pos=last,base=enum:FALSE/TRUE,count=1,bytes=1
    BcastAddrLen, uint8,  base=10
    BcastAddr, array,  type=uint8, base=10, maxsize=15
    Reserved4, uint32, base = 10, Hidden=1
    Allow Otapa, bit,offset=6,pos=first,base=enum:No/Yes,default=Yes,count=1,bytes=1
    EnableOTA, bit,offset=5,pos=middle,base=enum:FALSE/TRUE,default=TRUE,count=1,bytes=1
    EnableSPASM, bit,offset=4,pos=middle,base=enum:FALSE/TRUE,default=TRUE,count=1,bytes=1
    AllowChangeSPC, bit,offset=3,pos=last,base=enum:No/Yes,default=Yes,count=1,bytes=1
    MdnNumDigits, uint8,  base = 10
    Mdn, array,  type = uint8, maxsize=16, base = 10
    HomeSid, uint16, base = 10
    Ex, uint8 , base = 10
    Analog FirstChP, uint16, base = 10
    Analog Dtx, uint8 , base = 10
    Analog FccA, uint16, base = 10
    Analog LccA, uint16, base = 10
    Analog FccB, uint16, base = 10
    Analog LccB, uint16, base = 10
    NXTREGsp, uint32, base = 10
    SIDsp, uint16, base = 10
    LOCAIDsp, uint16, base = 10
    PUREGsp, uint8,  base=bool
    CDMA Pri Ch A, uint16, base = 10
    CDMA Sec Ch A, uint16, base = 10
    CDMA Pri Ch B, uint16, base = 10
    CDMA Sec Ch B, uint16, base = 10
    Reserved5, array, type = uint8, maxsize=125, Hidden=1
    ReservedBits0, bit,offset=7,pos=first,hidden=1,count=1,bytes=1
    ReservedBits1, bit,offset=6,pos=last,hidden=1,count=1,bytes=1
    Reserved6, array, type = uint8, maxsize=89, Hidden=1
    Reserved7, uint8,  base = 10, Hidden=1
    UIM ID, uint32, base = 16, Readonly=GBL_UIM_SUPPORTED, Hidden=(GBL_UIM_SUPPORTED==0)
    RoamSet Voice Domestic, bit,offset=7,pos=first,base=enum:FALSE/TRUE,count=1,bytes=1
    RoamSet Data Domestic, bit,offset=6,pos=middle,base=enum:FALSE/TRUE,count=1,bytes=1
    RoamSet Voice International, bit,offset=5,pos=middle,base=enum:FALSE/TRUE,count=1,bytes=1
    RoamSet Data International, bit,offset=4,pos=last,base=enum:FALSE/TRUE,count=1,bytes=1
    SystemSelect, uint8,  base=enum:System Select Type, default=Automatic
    FutureExpandFields, array,  type = uint8, base=10, maxsize=3
    Checksum, uint16, base = 16
End

Begin DbTemplate, CP DB PSW MRU1, Template
    MRU1  Band, uint8,   base = 10
    MRU2  Band, uint8,   base = 10
    MRU3  Band, uint8,   base = 10
    MRU4  Band, uint8,   base = 10
    MRU5  Band, uint8,   base = 10
    MRU6  Band, uint8,   base = 10
    MRU7  Band, uint8,   base = 10
    MRU8  Band, uint8,   base = 10
    MRU9  Band, uint8,   base = 10
    MRU10 Band, uint8,   base = 10
    MRU1  Freq Chan, uint16,  base = 10
    MRU2  Freq Chan, uint16,  base = 10
    MRU3  Freq Chan, uint16,  base = 10
    MRU4  Freq Chan, uint16,  base = 10
    MRU5  Freq Chan, uint16,  base = 10
    MRU6  Freq Chan, uint16,  base = 10
    MRU7  Freq Chan, uint16,  base = 10
    MRU8  Freq Chan, uint16,  base = 10
    MRU9  Freq Chan, uint16,  base = 10
    MRU10 Freq Chan, uint16,  base = 10
End

Begin DbTemplate, CP DB PSW MRU2, Template
    MRU1  Band, uint8,   base = 10
    MRU2  Band, uint8,   base = 10
    MRU3  Band, uint8,   base = 10
    MRU4  Band, uint8,   base = 10
    MRU5  Band, uint8,   base = 10
    MRU6  Band, uint8,   base = 10
    MRU7  Band, uint8,   base = 10
    MRU8  Band, uint8,   base = 10
    MRU9  Band, uint8,   base = 10
    MRU10 Band, uint8,   base = 10
    MRU1  Freq Chan, uint16,  base = 10
    MRU2  Freq Chan, uint16,  base = 10
    MRU3  Freq Chan, uint16,  base = 10
    MRU4  Freq Chan, uint16,  base = 10
    MRU5  Freq Chan, uint16,  base = 10
    MRU6  Freq Chan, uint16,  base = 10
    MRU7  Freq Chan, uint16,  base = 10
    MRU8  Freq Chan, uint16,  base = 10
    MRU9  Freq Chan, uint16,  base = 10
    MRU10 Freq Chan, uint16,  base = 10
End

Begin DbTemplate, CP DB PSW MS CAP DB, Template
    SR1 Supported, uint8,  base=bool
    SR3 Supported, uint8,  base=bool
    RC Class 1 Supported, uint8,  base=bool
    RC Class 2 Supported, uint8,  base=bool
    RC Class 3 Supported, uint8,  base=bool
    Encryption Type, uint8,  base=enum:UI EncryptMode Enum
    Enhanced RC, uint8,  base=bool
    Reserved1, uint16, Hidden=1
    Rev FCH Gating Req, uint8,  base=bool
    STS Supported, uint8,  base=bool, Readonly=1
    3X CCH Supported, uint8,  base=bool, Readonly=1
    WLL Supported, uint8,  base=bool, Readonly=1
    SO Bitmap Ind, uint8,  base=enum:ServOptBitmapInd
    Reserved, uint8,  Hidden=1
    Tiered Services, uint8,  base=bool, Readonly=1
    QPCH Supported, uint8,   base=bool
    Slotted Timer Supported, uint8,   base=bool
    CHS Supported, uint8,   base=bool, Readonly=1
    Gating Rate Set Type, uint8,   base=enum:GatingRateSetType
    Ext Capabilities Included, uint8,   base=bool
    MABO Supported, uint8,   base=bool, Readonly=1
    Short Data Burst Supported, uint8,   base=bool, Readonly=1
    Rlp Cap Blop Len, uint8,   base=16
    Rlp Cap Blop Len Type, uint16,  base=16
    OTD Supported, uint8,   base=bool, Readonly=1
    FCH Supported, uint8,   base=bool
    FCH Frame Size, uint8,   base=enum:FchFrameSizeType
    For FCH Length, bit, offset=5,   count=3,  bytes=1, pos=only, hidden=1
    For FCH RC 12 Map, bit, offset=12,  count=1,  bytes=2, pos=first,  base=enum:Support Type
    For FCH RC 11 Map, bit, offset=13,  count=1,  bytes=2, pos=middle, base=enum:Support Type
    For FCH RC 10 Map, bit, offset=14,  count=1,  bytes=2, pos=middle, base=enum:Support Type
    For FCH RC 1  Map, bit, offset=15,  count=1,  bytes=2, pos=middle, base=enum:Support Type
    For FCH RC 2  Map, bit, offset=0,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For FCH RC 3  Map, bit, offset=1,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For FCH RC 4  Map, bit, offset=2,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For FCH RC 5  Map, bit, offset=3,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For FCH RC 6  Map, bit, offset=4,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For FCH RC 7  Map, bit, offset=5,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For FCH RC 8  Map, bit, offset=6,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For FCH RC 9  Map, bit, offset=7,   count=1,  bytes=2, pos=last,   base=enum:Support Type
    Reverse FCH Length, bit,    offset=5, count=3,  bytes=1, pos=only, default=2, hidden=1
    Rev FCH RC 8 Map, bit, offset=0, count=1,  bytes=1, pos=first,   base=enum:Support Type
    Rev FCH RC 7 Map, bit, offset=1, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev FCH RC 1 Map, bit, offset=2, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev FCH RC 2 Map, bit, offset=3, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev FCH RC 3 Map, bit, offset=4, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev FCH RC 4 Map, bit, offset=5, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev FCH RC 5 Map, bit, offset=6, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev FCH RC 6 Map, bit, offset=7, count=1,  bytes=1, pos=last,    base=enum:Support Type
    DCCH Supported, uint8,   base=bool, Readonly=1
    DCCH Frame Size, uint8,   base=enum:DcchFrameSizeType
    For DCCH Length, bit,   offset=5, count=3,  bytes=1, pos=only, hidden=1
    For DCCH RC 12 Map, bit, offset=12,  count=1,  bytes=2, pos=first,  base=enum:Support Type
    For DCCH RC 11 Map, bit, offset=13,  count=1,  bytes=2, pos=middle, base=enum:Support Type
    For DCCH RC 10 Map, bit, offset=14,  count=1,  bytes=2, pos=middle, base=enum:Support Type
    For DCCH RC 1  Map, bit, offset=15,  count=1,  bytes=2, pos=middle, base=enum:Support Type
    For DCCH RC 2  Map, bit, offset=0,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For DCCH RC 3  Map, bit, offset=1,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For DCCH RC 4  Map, bit, offset=2,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For DCCH RC 5  Map, bit, offset=3,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For DCCH RC 6  Map, bit, offset=4,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For DCCH RC 7  Map, bit, offset=5,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For DCCH RC 8  Map, bit, offset=6,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For DCCH RC 9  Map, bit, offset=7,   count=1,  bytes=2, pos=last,   base=enum:Support Type
    Rev DCCH Length, bit,   offset=5, count=3,  bytes=1, pos=only, hidden=1
    Rev DCCH RC 8 Map, bit, offset=0, count=1,  bytes=1, pos=first,   base=enum:Support Type
    Rev DCCH RC 7 Map, bit, offset=1, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev DCCH RC 1 Map, bit, offset=2, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev DCCH RC 2 Map, bit, offset=3, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev DCCH RC 3 Map, bit, offset=4, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev DCCH RC 4 Map, bit, offset=5, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev DCCH RC 5 Map, bit, offset=6, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev DCCH RC 6 Map, bit, offset=7, count=1,  bytes=1, pos=last,    base=enum:Support Type
    Forward SCH Supported, uint8,   base=bool
    Forward SCH Length, bit,    offset=5, count=3,  bytes=1, pos=only, hidden=1
    For SCH RC 12 Map, bit, offset=12,  count=1,  bytes=2, pos=first,  base=enum:Support Type
    For SCH RC 11 Map, bit, offset=13,  count=1,  bytes=2, pos=middle, base=enum:Support Type
    For SCH RC 10 Map, bit, offset=14,  count=1,  bytes=2, pos=middle, base=enum:Support Type
    For SCH RC 1  Map, bit, offset=15,  count=1,  bytes=2, pos=middle, base=enum:Support Type
    For SCH RC 2  Map, bit, offset=0,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For SCH RC 3  Map, bit, offset=1,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For SCH RC 4  Map, bit, offset=2,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For SCH RC 5  Map, bit, offset=3,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For SCH RC 6  Map, bit, offset=4,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For SCH RC 7  Map, bit, offset=5,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For SCH RC 8  Map, bit, offset=6,   count=1,  bytes=2, pos=middle, base=enum:Support Type
    For SCH RC 9  Map, bit, offset=7,   count=1,  bytes=2, pos=last,   base=enum:Support Type
    Number of Forward SCH, bit,    offset=6, count=2,  bytes=1, pos=only
    For Turbo Supported SCH 1, uint8,   base=bool,
    For Turbo Supported SCH 2, uint8,   base=bool, Readonly=1
    For Max Turbo Block Size, uint8,   base=16
    For Conv Supported SCH 1, uint8,   base=bool
    For Conv Supported SCH 2, uint8,   base=bool, Readonly=1
    For Max Conv Block Size, uint8,   base=16
    Reverse SCH Supported, uint8,  base=bool
    Reverse SCH Length, bit,    offset=5, count=3,  bytes=1, pos=only, hidden=1
    Rev SCH RC 8 Map, bit, offset=0, count=1,  bytes=1, pos=first,   base=enum:Support Type
    Rev SCH RC 7 Map, bit, offset=1, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev SCH RC 1 Map, bit, offset=2, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev SCH RC 2 Map, bit, offset=3, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev SCH RC 3 Map, bit, offset=4, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev SCH RC 4 Map, bit, offset=5, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev SCH RC 5 Map, bit, offset=6, count=1,  bytes=1, pos=middle,  base=enum:Support Type
    Rev SCH RC 6 Map, bit, offset=7, count=1,  bytes=1, pos=last,    base=enum:Support Type
    Number of Reverse SCH, bit,    offset=6, count=2,  bytes=1, pos=only
    Rev Turbo Supported Sch1, uint8,   base=bool,
    Rev Turbo Supported Sch2, uint8,   base=bool, Readonly=1
    Rev Max Turbo  Block Size, bit,     offset=4,     count=4,  bytes=1, pos=only
    Rev Conv Supported Sch1, uint8,   base=bool
    Rev Conv Supported Sch2, uint8,   base=bool, Readonly=1
    Rev Max Conv Block Size, bit,     offset=4,     count=4,  bytes=1, pos=only
    Rev SCH Duration Unit, uint8,   base=16
    Rev SCH Duration, uint16,  base=16
    Non Octet Aligned Data, uint8,  base=bool
    Octet Aligned Data, uint8,  base=bool
    For FCH Mux 0x1 Map, bit, offset=7,  count=1,  bytes=1, pos=first,  base=enum:Support Type
    For FCH Mux 0x2 Map, bit, offset=6,  count=1,  bytes=1, pos=middle, base=enum:Support Type
    For FCH Mux 0x704 Map, bit, offset=5,  count=1,  bytes=1, pos=last,   base=enum:Support Type
    Rev FCH Mux 0x1 Map, bit, offset=7,  count=1,  bytes=1, pos=first,  base=enum:Support Type
    Rev FCH Mux 0x2 Map, bit, offset=6,  count=1,  bytes=1, pos=middle, base=enum:Support Type
    Rev FCH Mux 0x704 Map, bit, offset=5,  count=1,  bytes=1, pos=last,   base=enum:Support Type
    For DCCH Mux 0x1 Map, bit, offset=7,  count=1,  bytes=1, pos=first,  base=enum:Support Type, Readonly=1
    For DCCH Mux 0x2 Map, bit, offset=6,  count=1,  bytes=1, pos=middle, base=enum:Support Type, Readonly=1
    For DCCH Mux 0x704 Map, bit, offset=5,  count=1,  bytes=1, pos=last,   base=enum:Support Type, Readonly=1
    Rev DCCH Mux 0x1 Map, bit, offset=7,  count=1,  bytes=1, pos=first,  base=enum:Support Type, Readonly=1
    Rev DCCH Mux 0x2 Map, bit, offset=6,  count=1,  bytes=1, pos=middle, base=enum:Support Type, Readonly=1
    Rev DCCH Mux 0x704 Map, bit, offset=5,  count=1,  bytes=1, pos=last,   base=enum:Support Type, Readonly=1
    For SCH Max RS 1 Mux options, uint16,     base=enum:ForSchRs1MultiplexOption
    For SCH Max RS 2 Mux options, uint16,     base=enum:ForSchRs2MultiplexOption
    Rev SCH Max RS 1 Mux options, uint16,     base=enum:RevSchRs1MultiplexOption
    Rev SCH Max RS 2 Mux options, uint16,     base=enum:RevSchRs2MultiplexOption
    Geo Location Type, uint8,  base=enum:GeoLocType
    Reserved 2, uint8, Hidden=1
    Reserved 3, uint8, Hidden=1
    Encryption Supported, uint8,  base=enum:Encrypt Mode Enum
    OP Mode 0 (CDMA mode), bit, offset=0, count=1,  bytes=1, pos=first,  base=enum:Support Type
    OP Mode 1 (CDMA mode), bit, offset=1, count=1,  bytes=1, pos=middle, base=enum:Support Type
    OP Mode 2 (analog mode), bit, offset=2, count=1,  bytes=1, pos=middle, base=enum:Support Type, Readonly=1
    OP Mode 3 (wide analog), bit, offset=3, count=1,  bytes=1, pos=middle, base=enum:Support Type, Readonly=1
    OP Mode 4 (narrow analog), bit, offset=4, count=1,  bytes=1, pos=last,   base=enum:Support Type, Readonly=1
    Loc Pilot Phase Cap, uint8,	base = 16
    Loc GPS Acquisition Cap, uint16,	base = 16
    Loc Position Calc Cap, uint16, base = 16
    Loc TCP Cap, uint8,  base=bool
    Loc MS Orig Cap, uint8,	base=bool
    DCCH Only Ping Period, uint16, base = 10
    Data Ready To Send, uint8,  base=bool, default = 1
    Channel Indicator, uint8,  base=enum:Channel Indicator Enum
    PDCH Chm Supported, uint8,  base=bool, default = 1
    Extended Channel Indicator, uint8, base = 16, default = 3
    Wll Incl, uint8,  base = bool, default = 0
    Wll Device Type, uint8,  base = 16, default = 0
    For Pdch Supported, uint8,  base = bool, default = 1
    Ack Delay, uint8,  base = bool, default = 1
    Num Arq Chan, uint8,  base = 16, default = 0
    For Pdch Rc Map, uint8,  base = 16, default = 7
    Ch Config Sup Map, uint8,  base = 16, default = 63
    Sdb Desired Only, uint8,  base = bool, default = 0
    Info Rec Analog 553A, bit, offset=1,  count=1,  bytes=1, pos=first,  base=bool
    Info Rec PUF, bit, offset=2,  count=1,  bytes=1, pos=middle, base=bool
    Info Rec MAHHO, bit, offset=3,  count=1,  bytes=1, pos=middle, base=bool
    Info Rec Hopping Beacon, bit, offset=4,  count=1,  bytes=1, pos=middle, base=bool
    Info Rec Analog Search, bit, offset=5,  count=1,  bytes=1, pos=middle, base=bool, Readonly=1
    Info Rec Access Probe HO, bit, offset=6,  count=1,  bytes=1, pos=middle, base=bool
    Info Rec Access Entry HO, bit, offset=7,  count=1,  bytes=1, pos=last,   base=bool
    Geo Location Incl, uint8,  base=bool, default = 1
    Checksum, uint16,  base=16
End

Begin DbTemplate, CP DB EVDO MRU, Template
    MRU1  Band, uint8,   base = 10
    MRU2  Band, uint8,   base = 10
    MRU3  Band, uint8,   base = 10
    MRU4  Band, uint8,   base = 10
    MRU5  Band, uint8,   base = 10
    MRU6  Band, uint8,   base = 10
    MRU7  Band, uint8,   base = 10
    MRU8  Band, uint8,   base = 10
    MRU9  Band, uint8,   base = 10
    MRU10 Band, uint8,   base = 10
    MRU1  Freq Chan, uint16,  base = 10
    MRU2  Freq Chan, uint16,  base = 10
    MRU3  Freq Chan, uint16,  base = 10
    MRU4  Freq Chan, uint16,  base = 10
    MRU5  Freq Chan, uint16,  base = 10
    MRU6  Freq Chan, uint16,  base = 10
    MRU7  Freq Chan, uint16,  base = 10
    MRU8  Freq Chan, uint16,  base = 10
    MRU9  Freq Chan, uint16,  base = 10
    MRU10 Freq Chan, uint16,  base = 10
End

Begin DbTemplate, CP DB MMI, Template
    DTMFType, bit, offset=7, count=1, bytes=2, pos=first, base=enum:Cont/Burst
    PrivacyMode, bit, offset=6, count=1, bytes=2, pos=middle, base=bool
    AutoAnswer, bit, offset=5, count=1, bytes=2, pos=middle, base=bool
    AutoRedial, bit, offset=4, count=1, bytes=2, pos=middle, base=bool
    VoicePrivacy Alert, bit, offset=3, count=1, bytes=2, pos=middle, base=bool
    AutoPowerUp Enable, bit, offset=2, count=1, bytes=2, pos=last,  base=bool
    Reserved, uint16, Hidden=1
    PhoneNum, string, length=12, columns=12
    LockCode, string, length=7, columns=7
    AutoAnswerRings, uint8, base=10
    AutoRedialInterval, uint8, base=enum:10 sec/30 sec/ 60 sec
    SmsChannel, uint8, base=enum:Default/Traffic
    SmsPrefSO, uint16, base=10
End

Begin DbTemplate, CP DB PSW MISC, Template
    Active NAM, uint8, base=enum:NAM Select, default=NAM1
    Reserved PSW Feature 1, bit,offset=0,pos=firs  ,count=1,base=enum:FALSE/TRUE,bytes=1,hidden=1
    Reserved PSW Feature 2, bit,offset=1,pos=middle,count=1,base=enum:FALSE/TRUE,bytes=1,hidden=1
    Reserved PSW Feature 3, bit,offset=2,pos=middle,count=1,base=enum:FALSE/TRUE,bytes=1,hidden=1
    Alternate PN Feature Mode, bit,offset=3,pos=middle,count=2,base=enum:Alternate PN Mode,bytes=1
    QPCH CCI Enabled, bit,offset=5,pos=middle,count=1,base=enum:FALSE/TRUE,bytes=1
    Dynamic QPCH Ctrl Enabled, bit,offset=6,pos=middle,count=1,base=enum:FALSE/TRUE,bytes=1
    Simulated QPCH Enabled, bit,offset=7,pos=last  ,count=1,base=enum:FALSE/TRUE,bytes=1
    IC Mode, bit,offset=0,pos=first ,count=4,base=enum:IC Mode, bytes=1
    Reserved PHY Feature 1, bit,offset=4,pos=middle,count=1,base=enum:FALSE/TRUE,bytes=1,hidden=1
    Reserved PHY Feature 2, bit,offset=5,pos=middle,count=1,base=enum:FALSE/TRUE,bytes=1,hidden=1
    Diversity Mode, bit,offset=6,pos=last  ,count=2,base=enum:Diversity Mode,bytes=1
    Reserved PSW Enable 1, bit, offset=0, pos=first,  count=1,base=enum:FALSE/TRUE,bytes=1,hidden=1
    Reserved PSW Enable 2, bit, offset=1, pos=middle, count=1,base=enum:FALSE/TRUE,bytes=1,hidden=1
    SO68 Enabled, bit, offset=2, pos=middle, count=1,base=enum:TRUE/FALSE,bytes=1
    PRL Enabled, bit, offset=3, pos=middle, count=1,base=enum:FALSE/TRUE,bytes=1
    DDTM Enabled, bit, offset=4, pos=middle, count=1,base=enum:FALSE/TRUE,bytes=1
    Voice Service Enabled, bit, offset=5, pos=middle, count=1,base=enum:FALSE/TRUE,bytes=1
    SO73 WB Enabled, bit, offset=6, pos=middle, count=1,base=enum:FALSE/TRUE,bytes=1
    SO73 Enabled, bit, offset=7, pos=last,   count=1,base=enum:FALSE/TRUE,bytes=1
    Pending Registration, uint8, base=enum:PendingRegEnum
    Pref Home MO Service Option, uint16, base=enum:Voice Service Options
    Pref Home MT Service Option, uint16, base=enum:Voice Service Options
    Pref Roam MO Service Option, uint16, base=enum:Voice Service Options
    IS683 NamLock, uint8, base=enum:FALSE/TRUE
    DfsEcIoThresh, uint8, base=10
    Dynamic QPCH Ctrl Thresh Low, uint16, base=10
    Dynamic QPCH Ctrl Thresh High, uint16, base=10
    MO SMS On Traffic Channel, uint8,base=enum:TRUE/FALSE
    MO SMS Service Option, uint16,base=10
    Wait For Search Result Enabled, uint8, base=enum:TRUE/FALSE
    Service Option 68 Disabled, uint8, base=enum:TRUE/FALSE
    Service Option 73 Enabled, uint8, base=enum:TRUE/FALSE
    Service Option 73 WB Enabled, uint8, base=enum:TRUE/FALSE
    checksum, uint16, base=16,readonly=1
End

Begin DbTemplate, CP DB HWD AFC Data, Template
    AFC HW Val Interc, uint16
    AFC Slope Step Per Ppm, int16, base=10
End

Begin DbTemplate, CP DB HWD Temperature Data, Template
    Temperature Calibr, record, type=Temp Calibr Pts, maxsize=8
End

Begin Record, Temp Calibr Pts
    Temp Celsius, int8
    Aux Adc Value, uint16
End

Begin DbTemplate, CP DB HWD Battery Data, Template
    Battery Calibr, record, type=Battery Calibr Pts, maxsize=8
End

Begin Record, Battery Calibr Pts
    Batt Voltage, int16, base=10
    Aux Adc Value, uint16
End

Begin DbTemplate, CP DB HWD PDM Voltage Data, Template
    PDM Voltage, record, type=Charger Voltage Pts, maxsize=8
End

Begin Record, Charger Voltage Pts
    PDM Value, uint16
    Voltage, int16, base=10
End

Begin DbTemplate, CP DB HWD BandGap Trim Data, Template
    Coarse Trim Bits, uint8, base=16, max=0x07
    Fine Trim Bits, uint8, base=16, max=0x07
End

Begin DbTemplate, CP DB Service History, Template
    LifetimeTimer, string, length=20
    Reconditioned, uint8, base=enum:No/Yes
    WarrantyDateCode, string, length=20
End

Begin DbTemplate, CP DB DBM Timestamp, Template
    Timestamp, array, type=uint8, maxsize=8
End

Begin DbTemplate, CP DB HWD RF Version, Template
    RF Option, string, length=20, indent=1
    RF Driver Rev, string, length=10, indent=1
End

Begin DbTemplate, CP DB PV EVDO REV0 GainGR Data, Template
    KsCorrection, uint16, base = enum:Disabled/Enabled
    value, record, type = PVGainGR, maxsize=20
End

Begin Record, PVGainGR
    Data, uint16
End

Begin DbTemplate, CP DB PV EVDO REVA GainGR Data, Template
    KsCorrection, uint16, base = enum:Disabled/Enabled
    value, record, type = PVGainGR, maxsize=48
End

Begin DbTemplate, CP DB PV 1X GainGR Data, Template
    KsCorrection, uint16, base=enum:Disabled/Enabled
    Rc1Rc2Index, uint16, base=10
    value, record, type=PVGainGR, maxsize=28
End

Begin DbTemplate, CP DB PV Temp Adj Data, Template
    Calibr Table, record, type=PV Gain Temp Adj Pts, maxsize=10
End

Begin Record, PV Gain Temp Adj Pts
    Tx Power dBm, int16, scale=Q6
    Temp Celsius, int16
End

Begin DbTemplate, CP DB HWD BAND A Tx AGC, Template
    BAND A PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND A TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND A TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND A TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND A TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin Record, Tx Pwr Pts Low
    Low Tx pwr dBm, int16, scale=Q6
    Low DAC val, uint16
End

Begin Record, Tx Pwr Pts Med
    Med Tx pwr dBm, int16, scale=Q6
    Med DAC val, uint16
End

Begin Record, Tx Pwr Pts High
    High Tx pwr dBm, int16, scale=Q6
    High DAC val, uint16
End

Begin DbTemplate, CP DB HWD BAND A Tx AGC 32bit, Template
    BAND A PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND A TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND A TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND A TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND A TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr 32bit Pts Low, maxsize=16
    Med Gain State Coords, record, type=Tx Pwr 32bit Pts Med, maxsize=16
    High Gain State Coords, record, type=Tx Pwr 32bit Pts High, maxsize=16
End

Begin Record, Tx Pwr 32bit Pts Low
    Low Tx pwr dBm, int16, scale=Q6
    Low DAC val, uint32
End

Begin Record, Tx Pwr 32bit Pts Med
    Med Tx pwr dBm, int16, scale=Q6
    Med DAC val, uint32
End

Begin Record, Tx Pwr 32bit Pts High
    High Tx pwr dBm, int16, scale=Q6
    High DAC val, uint32
End

Begin DbTemplate, CP DB HWD BAND A Tx AGC Freq Chan Adj, Template
    Low Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
    Med Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
    High Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin Record, BAND A Gain Freq Adj Pts
    BAND A Channel, int16
    BAND A Adjustment dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND A Tx AGC Temp Adj, Template
    Low Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    Med Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    High Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin Record, Gain Temp Adj Pts
    Temp Celsius, int8
    Adjustment dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND A Tx AGC Battery Adj, Template
    BAND A Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin Record, Gain Battery Adj Pts
    Battery Voltage, uint16, base=10
    Adjustment dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND A Tx AGC Alt Thresholds, Template
    BAND A TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND A TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND A TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND A TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND A Tx Limit Freq Chan Adj, Template
    BAND A Band Coordinates, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND A Tx Limit Temp Adj, Template
    BAND A Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Tx Limit Battery Adj, Template
    BAND A Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Tx Pwr Detect, Template
    BAND A Band Coordinates, record, type=Tx Pwr Det Pts, maxsize=8
End

Begin Record, Tx Pwr Det Pts
    Aux ADC val, uint16
    Tx PwrDetect dBm, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND A Tx Pwr Det Freq Adj, Template
    BAND A Band Coordinates, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND A Tx Pwr Det Temp Adj, Template
    BAND A Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Tx Pwr Det Max Limit Battery Adj, Template
    BAND A Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Tx PA AGC SPDM, Template
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Aux Tx AGC, Template
    BAND A PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND A TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND A TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND A TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND A TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Aux Tx AGC Freq Chan Adj, Template
    Low Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
    Med Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
    High Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND A Aux Tx AGC Temp Adj, Template
    Low Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    Med Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    High Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Aux Tx AGC Battery Adj, Template
    BAND A Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Aux Tx AGC Alt Thresholds, Template
    BAND A TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND A TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND A TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND A TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND A Aux Tx Limit Freq Chan Adj, Template
    BAND A Band Coordinates, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND A Aux Tx Limit Temp Adj, Template
    BAND A Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Aux Tx Limit Battery Adj, Template
    BAND A Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Aux Tx Pwr Detect, Template
    BAND A Band Coordinates, record, type=Tx Pwr Det Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Aux Tx Pwr Det Freq Adj, Template
    BAND A Band Coordinates, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND A Aux Tx Pwr Det Temp Adj, Template
    BAND A Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Aux Tx Pwr Det Max Limit Battery Adj, Template
    BAND A Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Aux Tx PA AGC SPDM, Template
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Rx AGC, Template
    BAND A Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND A Reference Level dB, int16,  scale=Q6
    BAND A Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin Record, Rx Ref DigGain Settings
    Digi BitSel, int8, base=10, max=7
    Digi Gain, uint8, base=10, max=127
End

Begin Record, Rx Switch Levels
    Lower Switch Level dB, int16,  scale=Q6
    Upper Switch Level dB, int16,  scale=Q6
End

Begin Record, Rx Transition Parameters
    Gain Step Delta dB, int16,  scale=Q6
    Low Step Delay Count, uint16, base=10
    High Step Delay Count, uint16, base=10
End

Begin Record, Rx Hyst Parameters
    High Gain Hyst Threshold dB, int16,  scale=Q6
    High Gain Hyst Delay Count, uint16, base=10
End

Begin DbTemplate, CP DB HWD BAND A Rx AGC NO IMD, Template
    BAND A Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND A Reference Level dB, int16,  scale=Q6
    BAND A Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND A Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin Record, Gain Freq Adj Pts
    Channel, int16
    Adjustment dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND A Rx AGC Temp Adj, Template
    BAND A Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Div Rx AGC, Template
    BAND A Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND A Reference Level dB, int16,  scale=Q6
    BAND A Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND A Div Rx AGC NO IMD, Template
    BAND A Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND A Reference Level dB, int16,  scale=Q6
    BAND A Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND A Div Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND A Div Rx AGC Temp Adj, Template
    BAND A Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin Record, Rx Bank Cal
    Data, uint8
End

Begin DbTemplate, CP DB HWD BAND A Div Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND A Sec Rx AGC, Template
    BAND A Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND A Reference Level dB, int16,  scale=Q6
    BAND A Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND A Sec Rx AGC NO IMD, Template
    BAND A Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND A Reference Level dB, int16,  scale=Q6
    BAND A Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND A Sec Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND A Sec Rx AGC Temp Adj, Template
    BAND A Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND A Sec Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND B Tx AGC, Template
    BAND B PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND B TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND B TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND B TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND B TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Tx AGC 32bit, Template
    BAND B PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND B TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND B TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND B TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND B TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr 32bit Pts Low, maxsize=16
    Med Gain State Coords, record, type=Tx Pwr 32bit Pts Med, maxsize=16
    High Gain State Coords, record, type=Tx Pwr 32bit Pts High, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND B Tx AGC Freq Chan Adj, Template
    Low Gain State Coords, record, type=BAND B Gain Freq Adj Pts, maxsize=16
    Med Gain State Coords, record, type=BAND B Gain Freq Adj Pts, maxsize=16
    High Gain State Coords, record, type=BAND B Gain Freq Adj Pts, maxsize=16
End

Begin Record, BAND B Gain Freq Adj Pts
    BAND B Channel, int16
    BAND B Adjustment dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND B Tx AGC Temp Adj, Template
    Low Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    Med Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    High Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Tx AGC Battery Adj, Template
    BAND B Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Tx AGC Alt Thresholds, Template
    BAND B TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND B TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND B TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND B TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND B Tx Limit Freq Chan Adj, Template
    BAND B Band Coordinates, record, type=BAND B Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND B Tx Limit Temp Adj, Template
    BAND B Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Tx Limit Battery Adj, Template
    BAND B Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Tx Pwr Detect, Template
    BAND B Band Coordinates, record, type=Tx Pwr Det Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Tx Pwr Det Freq Adj, Template
    BAND B Band Coordinates, record, type=BAND B Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND B Tx Pwr Det Temp Adj, Template
    BAND B Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Tx Pwr Det Max Limit Battery Adj, Template
    BAND B Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Tx PA AGC SPDM, Template
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Aux Tx AGC, Template
    BAND B PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND B TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND B TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND B TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND B TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Aux Tx AGC Freq Chan Adj, Template
    Low Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
    Med Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
    High Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND B Aux Tx AGC Temp Adj, Template
    Low Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    Med Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    High Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Aux Tx AGC Battery Adj, Template
    BAND B Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Aux Tx AGC Alt Thresholds, Template
    BAND B TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND B TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND B TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND B TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND B Aux Tx Limit Freq Chan Adj, Template
    BAND B Band Coordinates, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND B Aux Tx Limit Temp Adj, Template
    BAND B Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Aux Tx Limit Battery Adj, Template
    BAND B Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Aux Tx Pwr Detect, Template
    BAND B Band Coordinates, record, type=Tx Pwr Det Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Aux Tx Pwr Det Freq Adj, Template
    BAND B Band Coordinates, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND B Aux Tx Pwr Det Temp Adj, Template
    BAND B Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Aux Tx Pwr Det Max Limit Battery Adj, Template
    BAND B Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Aux Tx PA AGC SPDM, Template
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Rx AGC, Template
    BAND B Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND B Reference Level dB, int16,  scale=Q6
    BAND B Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND B Rx AGC NO IMD, Template
    BAND B Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND B Reference Level dB, int16,  scale=Q6
    BAND B Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND B Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND B Rx AGC Temp Adj, Template
    BAND B Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Div Rx AGC, Template
    BAND B Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND B Reference Level dB, int16,  scale=Q6
    BAND B Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND B Div Rx AGC NO IMD, Template
    BAND B Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND B Reference Level dB, int16,  scale=Q6
    BAND B Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND B Div Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND B Div Rx AGC Temp Adj, Template
    BAND B Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND B Div Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND B Sec Rx AGC, Template
    BAND B Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND B Reference Level dB, int16,  scale=Q6
    BAND B Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND B Sec Rx AGC NO IMD, Template
    BAND B Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND B Reference Level dB, int16,  scale=Q6
    BAND B Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND B Sec Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND B Sec Rx AGC Temp Adj, Template
    BAND A Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND B Sec Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND C Tx AGC, Template
    BAND C PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND C TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND C TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND C TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND C TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Tx AGC 32bit, Template
    BAND C PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND C TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND C TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND C TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND C TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr 32bit Pts Low, maxsize=16
    Med Gain State Coords, record, type=Tx Pwr 32bit Pts Med, maxsize=16
    High Gain State Coords, record, type=Tx Pwr 32bit Pts High, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND C Tx AGC Freq Chan Adj, Template
    Low Gain State Coords, record, type=BAND C Gain Freq Adj Pts, maxsize=16
    Med Gain State Coords, record, type=BAND C Gain Freq Adj Pts, maxsize=16
    High Gain State Coords, record, type=BAND C Gain Freq Adj Pts, maxsize=16
End

Begin Record, BAND C Gain Freq Adj Pts
    BAND C Channel, int16
    BAND C Adjustment dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND C Tx AGC Temp Adj, Template
    Low Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    Med Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    High Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Tx AGC Battery Adj, Template
    BAND C Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Tx AGC Alt Thresholds, Template
    BAND C TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND C TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND C TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND C TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND C Tx Limit Freq Chan Adj, Template
    BAND C Band Coordinates, record, type=BAND C Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND C Tx Limit Temp Adj, Template
    BAND C Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Tx Limit Battery Adj, Template
    BAND C Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Tx Pwr Detect, Template
    BAND C Band Coordinates, record, type=Tx Pwr Det Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Tx Pwr Det Freq Adj, Template
    BAND C Band Coordinates, record, type=BAND C Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND C Tx Pwr Det Temp Adj, Template
    BAND C Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Tx Pwr Det Max Limit Battery Adj, Template
    BAND C Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Tx PA AGC SPDM, Template
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Aux Tx AGC, Template
    BAND C PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND C TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND C TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND C TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND C TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Aux Tx AGC Freq Chan Adj, Template
    Low Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
    Med Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
    High Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND C Aux Tx AGC Temp Adj, Template
    Low Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    Med Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    High Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Aux Tx AGC Battery Adj, Template
    BAND C Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Aux Tx AGC Alt Thresholds, Template
    BAND C TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND C TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND C TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND C TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND C Aux Tx Limit Freq Chan Adj, Template
    BAND C Band Coordinates, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND C Aux Tx Limit Temp Adj, Template
    BAND C Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Aux Tx Limit Battery Adj, Template
    BAND C Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Aux Tx Pwr Detect, Template
    BAND C Band Coordinates, record, type=Tx Pwr Det Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Aux Tx Pwr Det Freq Adj, Template
    BAND C Band Coordinates, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND C Aux Tx Pwr Det Temp Adj, Template
    BAND C Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Aux Tx Pwr Det Max Limit Battery Adj, Template
    BAND C Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Aux Tx PA AGC SPDM, Template
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Rx AGC, Template
    BAND C Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND C Reference Level dB, int16,  scale=Q6
    BAND C Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND C Rx AGC NO IMD, Template
    BAND C Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND C Reference Level dB, int16,  scale=Q6
    BAND C Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND C Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND C Rx AGC Temp Adj, Template
    BAND C Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Div Rx AGC, Template
    BAND C Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND C Reference Level dB, int16,  scale=Q6
    BAND C Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND C Div Rx AGC NO IMD, Template
    BAND C Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND C Reference Level dB, int16,  scale=Q6
    BAND C Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND C Div Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND C Div Rx AGC Temp Adj, Template
    BAND C Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND C Div Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND C Sec Rx AGC, Template
    BAND C Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND C Reference Level dB, int16,  scale=Q6
    BAND C Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND C Sec Rx AGC NO IMD, Template
    BAND C Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND C Reference Level dB, int16,  scale=Q6
    BAND C Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND C Sec Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND C Sec Rx AGC Temp Adj, Template
    BAND C Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND C Sec Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND D Tx AGC, Template
    BAND D PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND D TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND D TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND D TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND D TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Tx AGC 32bit, Template
    BAND D PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND D TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND D TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND D TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND D TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr 32bit Pts Low, maxsize=16
    Med Gain State Coords, record, type=Tx Pwr 32bit Pts Med, maxsize=16
    High Gain State Coords, record, type=Tx Pwr 32bit Pts High, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND D Tx AGC Freq Chan Adj, Template
    Low Gain State Coords, record, type=BAND D Gain Freq Adj Pts, maxsize=16
    Med Gain State Coords, record, type=BAND D Gain Freq Adj Pts, maxsize=16
    High Gain State Coords, record, type=BAND D Gain Freq Adj Pts, maxsize=16
End

Begin Record, BAND D Gain Freq Adj Pts
    BAND D Channel, int16
    BAND D Adjustment dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND D Tx AGC Temp Adj, Template
    Low Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    Med Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    High Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Tx AGC Battery Adj, Template
    BAND D Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Tx AGC Alt Thresholds, Template
    BAND D TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND D TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND D TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND D TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND D Tx Limit Freq Chan Adj, Template
    BAND D Band Coordinates, record, type=BAND D Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND D Tx Limit Temp Adj, Template
    BAND D Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Tx Limit Battery Adj, Template
    BAND D Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Tx Pwr Detect, Template
    BAND D Band Coordinates, record, type=Tx Pwr Det Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Tx Pwr Det Freq Adj, Template
    BAND D Band Coordinates, record, type=BAND D Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND D Tx Pwr Det Temp Adj, Template
    BAND D Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Tx Pwr Det Max Limit Battery Adj, Template
    BAND D Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Tx PA AGC SPDM, Template
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Aux Tx AGC, Template
    BAND D PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND D TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND D TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND D TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND D TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Aux Tx AGC Freq Chan Adj, Template
    Low Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
    Med Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
    High Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND D Aux Tx AGC Temp Adj, Template
    Low Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    Med Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    High Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Aux Tx AGC Battery Adj, Template
    BAND D Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Aux Tx AGC Alt Thresholds, Template
    BAND D TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND D TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND D TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND D TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND D Aux Tx Limit Freq Chan Adj, Template
    BAND D Band Coordinates, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND D Aux Tx Limit Temp Adj, Template
    BAND D Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Aux Tx Limit Battery Adj, Template
    BAND D Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Aux Tx Pwr Detect, Template
    BAND D Band Coordinates, record, type=Tx Pwr Det Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Aux Tx Pwr Det Freq Adj, Template
    BAND D Band Coordinates, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND D Aux Tx Pwr Det Temp Adj, Template
    BAND D Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Aux Tx Pwr Det Max Limit Battery Adj, Template
    BAND D Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Aux Tx PA AGC SPDM, Template
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Rx AGC, Template
    BAND D Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND D Reference Level dB, int16,  scale=Q6
    BAND D Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND D Rx AGC NO IMD, Template
    BAND D Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND D Reference Level dB, int16,  scale=Q6
    BAND D Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND D Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND D Rx AGC Temp Adj, Template
    BAND D Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Div Rx AGC, Template
    BAND D Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND D Reference Level dB, int16,  scale=Q6
    BAND D Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND D Div Rx AGC NO IMD, Template
    BAND D Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND D Reference Level dB, int16,  scale=Q6
    BAND D Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND D Div Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND D Div Rx AGC Temp Adj, Template
    BAND D Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND D Div Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND D Sec Rx AGC, Template
    BAND D Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND D Reference Level dB, int16,  scale=Q6
    BAND D Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND D Sec Rx AGC NO IMD, Template
    BAND D Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND D Reference Level dB, int16,  scale=Q6
    BAND D Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND D Sec Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND D Sec Rx AGC Temp Adj, Template
    BAND A Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND D Sec Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND E Tx AGC, Template
    BAND E PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND E TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND E TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND E TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND E TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Tx AGC 32bit, Template
    BAND E PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND E TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND E TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND E TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND E TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr 32bit Pts Low, maxsize=16
    Med Gain State Coords, record, type=Tx Pwr 32bit Pts Med, maxsize=16
    High Gain State Coords, record, type=Tx Pwr 32bit Pts High, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND E Tx AGC Freq Chan Adj, Template
    Low Gain State Coords, record, type=BAND E Gain Freq Adj Pts, maxsize=16
    Med Gain State Coords, record, type=BAND E Gain Freq Adj Pts, maxsize=16
    High Gain State Coords, record, type=BAND E Gain Freq Adj Pts, maxsize=16
End

Begin Record, BAND E Gain Freq Adj Pts
    BAND E Channel, int16
    BAND E Adjustment dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND E Tx AGC Temp Adj, Template
    Low Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    Med Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    High Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Tx AGC Battery Adj, Template
    BAND E Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Tx AGC Alt Thresholds, Template
    BAND E TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND E TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND E TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND E TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND E Tx Limit Freq Chan Adj, Template
    BAND E Band Coordinates, record, type=BAND E Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND E Tx Limit Temp Adj, Template
    BAND E Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Tx Limit Battery Adj, Template
    BAND E Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Tx Pwr Detect, Template
    BAND E Band Coordinates, record, type=Tx Pwr Det Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Tx Pwr Det Freq Adj, Template
    BAND E Band Coordinates, record, type=BAND E Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND E Tx Pwr Det Temp Adj, Template
    BAND E Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Tx Pwr Det Max Limit Battery Adj, Template
    BAND E Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Tx PA AGC SPDM, Template
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Aux Tx AGC, Template
    BAND E PA Gain States, uint16, base=enum:PA Gain States, default=2 PA Gain States
    BAND E TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND E TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND E TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND E TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Aux Tx AGC Freq Chan Adj, Template
    Low Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
    Med Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
    High Gain State Coords, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND E Aux Tx AGC Temp Adj, Template
    Low Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    Med Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
    High Gain State Coords, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Aux Tx AGC Battery Adj, Template
    BAND E Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Aux Tx AGC Alt Thresholds, Template
    BAND E TxAGC Hyst High Thresh1 dB, int16, scale=Q6
    BAND E TxAGC Hyst Low  Thresh1 dB, int16, scale=Q6
    BAND E TxAGC Hyst High Thresh2 dB, int16, scale=Q6
    BAND E TxAGC Hyst Low  Thresh2 dB, int16, scale=Q6
End

Begin DbTemplate, CP DB HWD BAND E Aux Tx Limit Freq Chan Adj, Template
    BAND E Band Coordinates, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND E Aux Tx Limit Temp Adj, Template
    BAND E Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Aux Tx Limit Battery Adj, Template
    BAND E Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Aux Tx Pwr Detect, Template
    BAND E Band Coordinates, record, type=Tx Pwr Det Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Aux Tx Pwr Det Freq Adj, Template
    BAND E Band Coordinates, record, type=BAND A Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND E Aux Tx Pwr Det Temp Adj, Template
    BAND E Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Aux Tx Pwr Det Max Limit Battery Adj, Template
    BAND E Band Coordinates, record, type=Gain Battery Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Aux Tx PA AGC SPDM, Template
    Low Gain State Coords, record, type=Tx Pwr Pts Low, maxsize=8
    Med Gain State Coords, record, type=Tx Pwr Pts Med, maxsize=8
    High Gain State Coords, record, type=Tx Pwr Pts High, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Rx AGC, Template
    BAND E Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND E Reference Level dB, int16,  scale=Q6
    BAND E Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND E Rx AGC NO IMD, Template
    BAND E Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND E Reference Level dB, int16,  scale=Q6
    BAND E Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND E Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND E Rx AGC Temp Adj, Template
    BAND E Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Div Rx AGC, Template
    BAND E Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND E Reference Level dB, int16,  scale=Q6
    BAND E Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND E Div Rx AGC NO IMD, Template
    BAND E Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND E Reference Level dB, int16,  scale=Q6
    BAND E Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND E Div Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND E Div Rx AGC Temp Adj, Template
    BAND E Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND E Div Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND E Sec Rx AGC, Template
    BAND A Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND A Reference Level dB, int16,  scale=Q6
    BAND A Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND E Sec Rx AGC NO IMD, Template
    BAND E Digital Gain States, uint16, base=enum:Digital Gain States, default = 5 Digital Gain States
    BAND E Reference Level dB, int16,  scale=Q6
    BAND E Reference Gain State, uint8,  base=10, max=7
    Reference Digital Gain Settings, record, type=Rx Ref DigGain Settings, maxsize=1
    Gain State Switch Levels, record, type=Rx Switch Levels, maxsize=8
    Gain State Transition Parameters, record, type=Rx Transition Parameters, maxsize=7
    High Gain Hyst Parameters, record, type=Rx Hyst Parameters, maxsize=1
End

Begin DbTemplate, CP DB HWD BAND E Sec Rx AGC Multi-Gain Freq Chan Adj, Template
    Low Range For Gain States, uint8, default=00000000, base=2
    Low Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    Med Range For Gain States, uint8, default=00000000, base=2
    Med Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
    High Range For Gain States, uint8, default=00000000, base=2
    High Range Gain State Coords, record, type=Gain Freq Adj Pts, maxsize=16
End

Begin DbTemplate, CP DB HWD BAND E Sec Rx AGC Temp Adj, Template
    BAND E Band Coordinates, record, type=Gain Temp Adj Pts, maxsize=8
End

Begin DbTemplate, CP DB HWD BAND E Sec Rx Bank Calibration, Template
    Rx Bank, record, type=Rx Bank Cal, maxsize=16
End

Begin DbTemplate, CP DB HWD GPS BAND A Calibration, Template
    rfDelay1X[1000], int32,  base=10
    rfDelayDO[1000], int32,  base=10
    reserv3[1234], int32,  base=10
    reserv4[1234], int32,  base=10
End

Begin DbTemplate, CP DB HWD GPS BAND B Calibration, Template
    rfDelay1X[1000], int32,  base=10
    rfDelayDO[1000], int32,  base=10
    reserv3[1234], int32,  base=10
    reserv4[1234], int32,  base=10
End

Begin DbTemplate, CP DB HWD GPS BAND C Calibration, Template
    rfDelay1X[1000], int32,  base=10
    rfDelayDO[1000], int32,  base=10
    reserv3[1234], int32,  base=10
    reserv4[1234], int32,  base=10
End

Begin DbTemplate, CP DB HWD GPS BAND D Calibration, Template
    rfDelay1X[1000], int32,  base=10
    rfDelayDO[1000], int32,  base=10
    reserv3[1234], int32,  base=10
    reserv4[1234], int32,  base=10
End

Begin DbTemplate, CP DB HWD GPS BAND E Calibration, Template
    rfDelay1X[1000], int32,  base=10
    rfDelayDO[1000], int32,  base=10
    reserv3[1234], int32,  base=10
    reserv4[1234], int32,  base=10
End
