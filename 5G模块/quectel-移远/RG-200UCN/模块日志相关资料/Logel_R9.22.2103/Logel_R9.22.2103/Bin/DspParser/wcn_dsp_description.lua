--[[--------------------------------------------------------------------
lua script to dynamic interpret dsp log and output description strings

NOTE:  To add new log interpreting functions:
step 1:  Add function reference in init_func_list
step 2:  Add function body

Note:
    it is auto generated by program
    Do NOT modify it unless you know what are you doing!!

--]]--------------------------------------------------------------------

-- for bit-wise operations
local bit = require "bit"


-- for fixed description
require "wcn_dsp_description_fixed"
require "wcn_dsp_description_coex_fixed"

-- format string table
format_strs = {}

-- field string table
field_strs = {}

-- common function descript table
func_desc_comm = {}

-- function name table
func_name_array = {}

-- 1 field descript
function func_desc_f1(fmt, address, data)
	return string.format(fmt, data)
end

-- 2 field descript
function func_desc_f2(fmt, address, data)
	return string.format(fmt, bit.rshift(bit.band(data,0xFF00),8), bit.band(data,0xFF))
end

-- 4 field descript
function func_desc_f4(fmt, address, data)
	return string.format(fmt, bit.rshift(bit.band(data,0xF000),12), 
				  bit.rshift(bit.band(data,0x0F00),8), 
				  bit.rshift(bit.band(data,0xF0),4), bit.band(data,0x0F))
end

-- set common descript function table
func_desc_comm[1] = func_desc_f1
func_desc_comm[2] = func_desc_f2
func_desc_comm[4] = func_desc_f4

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/img/utrace_header.txt

UPT_D000 = (0xD000) --/USED

UPT_D001 = (0xD001) --/USED

UPT_D002 = (0xD002) --/USED

UPT_D003 = (0xD003) --/USED

UPT_D004 = (0xD004) --/USED

UPT_D005 = (0xD005) --/USED

UPT_D006 = (0xD006) --/USED

UPT_D007 = (0xD007) --/USED

UPT_D008 = (0xD008)

UPT_D009 = (0xD009)

UPT_D00A = (0xD00A)

UPT_D00B = (0xD00B)

UPT_D00C = (0xD00C)

UPT_D00D = (0xD00D)

UPT_D00E = (0xD00E)

UPT_D00F = (0xD00F)

UPT_D010 = (0xD010)

UPT_D011 = (0xD011)

UPT_D012 = (0xD012)

UPT_D013 = (0xD013)

UPT_D014 = (0xD014)

UPT_D015 = (0xD015)

UPT_D016 = (0xD016)

UPT_D017 = (0xD017)

UPT_D018 = (0xD018)

UPT_D019 = (0xD019)

UPT_D01A = (0xD01A)

UPT_D01B = (0xD01B)

UPT_D01C = (0xD01C)

UPT_D01D = (0xD01D)

UPT_D01E = (0xD01E)

UPT_D01F = (0xD01F)

UPT_D020 = (0xD020)

UPT_D021 = (0xD021)

UPT_D022 = (0xD022)

UPT_D023 = (0xD023)

UPT_D024 = (0xD024)

UPT_D025 = (0xD025)

UPT_D026 = (0xD026)

UPT_D027 = (0xD027)

UPT_D028 = (0xD028)

UPT_D029 = (0xD029)

UPT_D02A = (0xD02A)

UPT_D02B = (0xD02B)

UPT_D02C = (0xD02C)

UPT_D02D = (0xD02D)

UPT_D02E = (0xD02E)

UPT_D02F = (0xD02F)

UPT_D030 = (0xD030)

UPT_D031 = (0xD031)

UPT_D032 = (0xD032)

UPT_D033 = (0xD033)

UPT_D034 = (0xD034)

UPT_D035 = (0xD035)

UPT_D036 = (0xD036)

UPT_D037 = (0xD037)

UPT_D038 = (0xD038)

UPT_D039 = (0xD039)

UPT_D03A = (0xD03A)

UPT_D03B = (0xD03B)

UPT_D03C = (0xD03C)

UPT_D03D = (0xD03D)

UPT_D03E = (0xD03E)

UPT_D03F = (0xD03F)

UPT_D040 = (0xD040)  --/USED

UPT_D041 = (0xD041)  --/USED

UPT_D042 = (0xD042)  --/USED

UPT_D043 = (0xD043)  --/USED

UPT_D044 = (0xD044)  --/USED

UPT_D045 = (0xD045)  --/USED

UPT_D046 = (0xD046)  --/USED

UPT_D047 = (0xD047)

UPT_D048 = (0xD048)

UPT_D049 = (0xD049)

UPT_D04A = (0xD04A)

UPT_D04B = (0xD04B)

UPT_D04C = (0xD04C)

UPT_D04D = (0xD04D)

UPT_D04E = (0xD04E)

UPT_D04F = (0xD04F)

UPT_D050 = (0xD050)

UPT_D051 = (0xD051)

UPT_D052 = (0xD052)

UPT_D053 = (0xD053)

UPT_D054 = (0xD054)

UPT_D055 = (0xD055)

UPT_D056 = (0xD056)

UPT_D057 = (0xD057)

UPT_D058 = (0xD058)

UPT_D059 = (0xD059)

UPT_D05A = (0xD05A)

UPT_D05B = (0xD05B)

UPT_D05C = (0xD05C)

UPT_D05D = (0xD05D)

UPT_D05E = (0xD05E)

UPT_D05F = (0xD05F)

UPT_D060 = (0xD060)

UPT_D061 = (0xD061)

UPT_D062 = (0xD062)

UPT_D063 = (0xD063)

UPT_D064 = (0xD064)

UPT_D065 = (0xD065)

UPT_D066 = (0xD066)

UPT_D067 = (0xD067)

UPT_D068 = (0xD068)

UPT_D069 = (0xD069)

UPT_D06A = (0xD06A)

UPT_D06B = (0xD06B)

UPT_D06C = (0xD06C)

UPT_D06D = (0xD06D)

UPT_D06E = (0xD06E)

UPT_D06F = (0xD06F)

UPT_D070 = (0xD070)

UPT_D071 = (0xD071)

UPT_D072 = (0xD072)

UPT_D073 = (0xD073)

UPT_D074 = (0xD074)

UPT_D075 = (0xD075)

UPT_D076 = (0xD076)

UPT_D077 = (0xD077)

UPT_D078 = (0xD078)

UPT_D079 = (0xD079)

UPT_D07A = (0xD07A)

UPT_D07B = (0xD07B)

UPT_D07C = (0xD07C)

UPT_D07D = (0xD07D)

UPT_D07E = (0xD07E)

UPT_D07F = (0xD07F)

UPT_D080 = (0xD080) --/used

UPT_D081 = (0xD081) --/used

UPT_D082 = (0xD082) --/used

UPT_D083 = (0xD083) --/used

UPT_D084 = (0xD084) --/used

UPT_D085 = (0xD085) --/used

UPT_D086 = (0xD086) --/used

UPT_D087 = (0xD087) --/used

UPT_D088 = (0xD088) --/used

UPT_D089 = (0xD089) --/used

UPT_D08A = (0xD08A) --/used

UPT_D08B = (0xD08B) --/used

UPT_D08C = (0xD08C) --/used

UPT_D08D = (0xD08D) --/used

UPT_D08E = (0xD08E) --/used

UPT_D08F = (0xD08F) --/used

UPT_D090 = (0xD090) --/used

UPT_D091 = (0xD091) --/used

UPT_D092 = (0xD092) --/used

UPT_D093 = (0xD093) --/used

UPT_D094 = (0xD094)

UPT_D095 = (0xD095)

UPT_D096 = (0xD096)

UPT_D097 = (0xD097)

UPT_D098 = (0xD098)

UPT_D099 = (0xD099)

UPT_D09A = (0xD09A)

UPT_D09B = (0xD09B)

UPT_D09C = (0xD09C)

UPT_D09D = (0xD09D)

UPT_D09E = (0xD09E)

UPT_D09F = (0xD09F)

UPT_D0A0 = (0xD0A0)   -- FIXED POINT */

UPT_D0A1 = (0xD0A1)

UPT_D0A2 = (0xD0A2)

UPT_D0A3 = (0xD0A3)

UPT_D0A4 = (0xD0A4)

UPT_D0A5 = (0xD0A5)

UPT_D0A6 = (0xD0A6)

UPT_D0A7 = (0xD0A7)

UPT_D0A8 = (0xD0A8)

UPT_D0A9 = (0xD0A9)

UPT_D0AA = (0xD0AA)

UPT_D0AB = (0xD0AB)

UPT_D0AC = (0xD0AC)

UPT_D0AD = (0xD0AD)

UPT_D0AE = (0xD0AE)

UPT_D0AF = (0xD0AF)

UPT_D0B0 = (0xD0B0)  --/used for super ssp

UPT_D0B1 = (0xD0B1)  --/used for super ssp

UPT_D0B2 = (0xD0B2)  --/used for super ssp

UPT_D0B3 = (0xD0B3)  --/used for super ssp

UPT_D0B4 = (0xD0B4)  --/used for super ssp

UPT_D0B5 = (0xD0B5)

UPT_D0B6 = (0xD0B6)

UPT_D0B7 = (0xD0B7)

UPT_D0B8 = (0xD0B8)

UPT_D0B9 = (0xD0B9)

UPT_D0BA = (0xD0BA)

UPT_D0BB = (0xD0BB)

UPT_D0BC = (0xD0BC)

UPT_D0BD = (0xD0BD)

UPT_D0BE = (0xD0BE)

UPT_D0BF = (0xD0BF)

UPT_D0C0 = (0xD0C0)

UPT_D0C1 = (0xD0C1)

UPT_D0C2 = (0xD0C2)

UPT_D0C3 = (0xD0C3)

UPT_D0C4 = (0xD0C4)

UPT_D0C5 = (0xD0C5)

UPT_D0C6 = (0xD0C6)

UPT_D0C7 = (0xD0C7)

UPT_D0C8 = (0xD0C8)

UPT_D0C9 = (0xD0C9)

UPT_D0CA = (0xD0CA)

UPT_D0CB = (0xD0CB)

UPT_D0CC = (0xD0CC)

UPT_D0CD = (0xD0CD)

UPT_D0CE = (0xD0CE)

UPT_D0CF = (0xD0CF)

UPT_D0D0 = (0xD0D0)

UPT_D0D1 = (0xD0D1)

UPT_D0D2 = (0xD0D2)

UPT_D0D3 = (0xD0D3)

UPT_D0D4 = (0xD0D4)

UPT_D0D5 = (0xD0D5)

UPT_D0D6 = (0xD0D6)

UPT_D0D7 = (0xD0D7)

UPT_D0D8 = (0xD0D8)

UPT_D0D9 = (0xD0D9)

UPT_D0DA = (0xD0DA)

UPT_D0DB = (0xD0DB)

UPT_D0DC = (0xD0DC)

UPT_D0DD = (0xD0DD)

UPT_D0DE = (0xD0DE)

UPT_D0DF = (0xD0DF)

UPT_D0E0 = (0xD0E0)

UPT_D0E1 = (0xD0E1)

UPT_D0E2 = (0xD0E2)

UPT_D0E3 = (0xD0E3)

UPT_D0E4 = (0xD0E4)

UPT_D0E5 = (0xD0E5)

UPT_D0E6 = (0xD0E6)

UPT_D0E7 = (0xD0E7)

UPT_D0E8 = (0xD0E8)

UPT_D0E9 = (0xD0E9)

UPT_D0EA = (0xD0EA)

UPT_D0EB = (0xD0EB)

UPT_D0EC = (0xD0EC)

UPT_D0ED = (0xD0ED)

UPT_D0EE = (0xD0EE)

UPT_D0EF = (0xD0EF)

UPT_D0F0 = (0xD0F0)

UPT_D0F1 = (0xD0F1)

UPT_D0F2 = (0xD0F2)

UPT_D0F3 = (0xD0F3)

UPT_D0F4 = (0xD0F4)

UPT_D0F5 = (0xD0F5)

UPT_D0F6 = (0xD0F6)

UPT_D0F7 = (0xD0F7)

UPT_D0F8 = (0xD0F8)

UPT_D0F9 = (0xD0F9)

UPT_D0FA = (0xD0FA)

UPT_D0FB = (0xD0FB)

UPT_D0FC = (0xD0FC)

UPT_D0FD = (0xD0FD)

UPT_D0FE = (0xD0FE)

UPT_D0FF = (0xD0FF)

UPT_D100 = (0xD100) --use

UPT_D101 = (0xD101) --use

UPT_D102 = (0xD102) --USE

UPT_D103 = (0xD103) --USE

UPT_D104 = (0xD104) --USE

UPT_D105 = (0xD105) --use

UPT_D106 = (0xD106) --use

UPT_D107 = (0xD107) --use

UPT_D108 = (0xD108) --USE

UPT_D109 = (0xD109) --USE

UPT_D10A = (0xD10A) --USE

UPT_D10B = (0xD10B) --USE

UPT_D10C = (0xD10C) --USE

UPT_D10D = (0xD10D) --USE

UPT_D10E = (0xD10E) --use

UPT_D10F = (0xD10F) --use

UPT_D110 = (0xD110) --use

UPT_D111 = (0xD111) --use

UPT_D112 = (0xD112) --use

UPT_D113 = (0xD113) --USE

UPT_D114 = (0xD114) --USE

UPT_D115 = (0xD115) --USE

UPT_D116 = (0xD116) --use

UPT_D117 = (0xD117) --use

UPT_D118 = (0xD118) --use

UPT_D119 = (0xD119) --use

UPT_D11A = (0xD11A) --use

UPT_D11B = (0xD11B)

UPT_D11C = (0xD11C)

UPT_D11D = (0xD11D) --reserved for lslc access.c

UPT_D11E = (0xD11E) --reserved for lslc access.c

UPT_D11F = (0xD11F) --reserved for lslc access.c

UPT_D120 = (0xD120) --use

UPT_D121 = (0xD121) --use

UPT_D122 = (0xD122) --use

UPT_D123 = (0xD123) --use

UPT_D124 = (0xD124) --use

UPT_D125 = (0xD125) --use

UPT_D126 = (0xD126) --use

UPT_D127 = (0xD127) --use

UPT_D128 = (0xD128) --use

UPT_D129 = (0xD129) --use

UPT_D12A = (0xD12A) --use

UPT_D12B = (0xD12B) --use

UPT_D12C = (0xD12C) --use

UPT_D12D = (0xD12D) --use

UPT_D12E = (0xD12E) --use

UPT_D12F = (0xD12F)

UPT_D130 = (0xD130) --use

UPT_D131 = (0xD131) --use

UPT_D132 = (0xD132) --use

UPT_D133 = (0xD133) --use

UPT_D134 = (0xD134) --use

UPT_D135 = (0xD135) --use

UPT_D136 = (0xD136) --use

UPT_D137 = (0xD137) --use

UPT_D138 = (0xD138) --use

UPT_D139 = (0xD139) --use

UPT_D13A = (0xD13A) --use

UPT_D13B = (0xD13B) --use

UPT_D13C = (0xD13C) --use

UPT_D13D = (0xD13D) --use

UPT_D13E = (0xD13E) --use

UPT_D13F = (0xD13F)

UPT_D140 = (0xD140) --use

UPT_D141 = (0xD141) --use

UPT_D142 = (0xD142) --use

UPT_D143 = (0xD143) --use

UPT_D144 = (0xD144) --use

UPT_D145 = (0xD145) --use

UPT_D146 = (0xD146) --use

UPT_D147 = (0xD147) --use

UPT_D148 = (0xD148) --use

UPT_D149 = (0xD149) --use

UPT_D14A = (0xD14A) --use

UPT_D14B = (0xD14B) --use

UPT_D14C = (0xD14C) --use

UPT_D14D = (0xD14D) --use

UPT_D14E = (0xD14E)

UPT_D14F = (0xD14F)

UPT_D150 = (0xD150) --use

UPT_D151 = (0xD151) --use

UPT_D152 = (0xD152) --use

UPT_D153 = (0xD153) --use

UPT_D154 = (0xD154) --use

UPT_D155 = (0xD155) --use

UPT_D156 = (0xD156) --use

UPT_D157 = (0xD157) --use

UPT_D158 = (0xD158) --use

UPT_D159 = (0xD159) --use

UPT_D15A = (0xD15A) --use

UPT_D15B = (0xD15B) --use

UPT_D15C = (0xD15C) --use

UPT_D15D = (0xD15D) --use

UPT_D15E = (0xD15E) --use

UPT_D15F = (0xD15F) --use

UPT_D160 = (0xD160)

UPT_D161 = (0xD161) --use

UPT_D162 = (0xD162) --use

UPT_D163 = (0xD163) --use

UPT_D164 = (0xD164) --use

UPT_D165 = (0xD165) --use

UPT_D166 = (0xD166) --use

UPT_D167 = (0xD167) --use

UPT_D168 = (0xD168) --use

UPT_D169 = (0xD169) --use

UPT_D16A = (0xD16A) --use

UPT_D16B = (0xD16B) --use

UPT_D16C = (0xD16C) --use

UPT_D16D = (0xD16D) --use

UPT_D16E = (0xD16E) --use

UPT_D16F = (0xD16F) --use

UPT_D170 = (0xD170) --use

UPT_D171 = (0xD171) --use

UPT_D172 = (0xD172) --use

UPT_D173 = (0xD173) --use

UPT_D174 = (0xD174) --use

UPT_D175 = (0xD175) --use

UPT_D176 = (0xD176) --use

UPT_D177 = (0xD177) --use

UPT_D178 = (0xD178) --use

UPT_D179 = (0xD179) --use

UPT_D17A = (0xD17A) --use

UPT_D17B = (0xD17B) --use

UPT_D17C = (0xD17C) --use

UPT_D17D = (0xD17D) --use

UPT_D17E = (0xD17E) --use

UPT_D17F = (0xD17F) --use

UPT_D180 = (0xD180)

UPT_D181 = (0xD181) --use

UPT_D182 = (0xD182) --use

UPT_D183 = (0xD183) --use

UPT_D184 = (0xD184) --use

UPT_D185 = (0xD185) --use

UPT_D186 = (0xD186) --use

UPT_D187 = (0xD187) --use

UPT_D188 = (0xD188) --use

UPT_D189 = (0xD189) --use

UPT_D18A = (0xD18A) --use

UPT_D18B = (0xD18B) --use

UPT_D18C = (0xD18C) --use

UPT_D18D = (0xD18D)

UPT_D18E = (0xD18E)

UPT_D18F = (0xD18F)

UPT_D190 = (0xD190)  --used

UPT_D191 = (0xD191)  --used

UPT_D192 = (0xD192)  --used

UPT_D193 = (0xD193)  --used

UPT_D194 = (0xD194)  --used

UPT_D195 = (0xD195)  --used

UPT_D196 = (0xD196)  --used

UPT_D197 = (0xD197)  --used

UPT_D198 = (0xD198)  --used

UPT_D199 = (0xD199)  --used

UPT_D19A = (0xD19A)  --used

UPT_D19B = (0xD19B)  --used

UPT_D19C = (0xD19C)  --used

UPT_D19D = (0xD19D)  --used

UPT_D19E = (0xD19E)  --used

UPT_D19F = (0xD19F)  --used

UPT_D1A0 = (0xD1A0)  --used

UPT_D1A1 = (0xD1A1)  --used

UPT_D1A2 = (0xD1A2)  --used

UPT_D1A3 = (0xD1A3)  --used

UPT_D1A4 = (0xD1A4)  --used

UPT_D1A5 = (0xD1A5)  --used

UPT_D1A6 = (0xD1A6)  --used

UPT_D1A7 = (0xD1A7)  --used

UPT_D1A8 = (0xD1A8)  --used

UPT_D1A9 = (0xD1A9)  --used

UPT_D1AA = (0xD1AA)

UPT_D1AB = (0xD1AB)

UPT_D1AC = (0xD1AC)

UPT_D1AD = (0xD1AD)

UPT_D1AE = (0xD1AE)

UPT_D1AF = (0xD1AF)

UPT_D1B0 = (0xD1B0)

UPT_D1B1 = (0xD1B1)

UPT_D1B2 = (0xD1B2)

UPT_D1B3 = (0xD1B3)

UPT_D1B4 = (0xD1B4)

UPT_D1B5 = (0xD1B5)

UPT_D1B6 = (0xD1B6)

UPT_D1B7 = (0xD1B7)

UPT_D1B8 = (0xD1B8)

UPT_D1B9 = (0xD1B9)

UPT_D1BA = (0xD1BA)

UPT_D1BB = (0xD1BB)

UPT_D1BC = (0xD1BC)

UPT_D1BD = (0xD1BD)

UPT_D1BE = (0xD1BE)

UPT_D1BF = (0xD1BF)

UPT_D1C0 = (0xD1C0)

UPT_D1C1 = (0xD1C1)

UPT_D1C2 = (0xD1C2)

UPT_D1C3 = (0xD1C3)

UPT_D1C4 = (0xD1C4)

UPT_D1C5 = (0xD1C5)

UPT_D1C6 = (0xD1C6)

UPT_D1C7 = (0xD1C7)

UPT_D1C8 = (0xD1C8)

UPT_D1C9 = (0xD1C9)

UPT_D1CA = (0xD1CA)

UPT_D1CB = (0xD1CB)

UPT_D1CC = (0xD1CC)

UPT_D1CD = (0xD1CD)

UPT_D1CE = (0xD1CE)

UPT_D1CF = (0xD1CF)

UPT_D1D0 = (0xD1D0)

UPT_D1D1 = (0xD1D1)

UPT_D1D2 = (0xD1D2)

UPT_D1D3 = (0xD1D3)

UPT_D1D4 = (0xD1D4)

UPT_D1D5 = (0xD1D5)

UPT_D1D6 = (0xD1D6)

UPT_D1D7 = (0xD1D7)

UPT_D1D8 = (0xD1D8)

UPT_D1D9 = (0xD1D9)

UPT_D1DA = (0xD1DA)

UPT_D1DB = (0xD1DB)

UPT_D1DC = (0xD1DC)

UPT_D1DD = (0xD1DD)

UPT_D1DE = (0xD1DE)

UPT_D1DF = (0xD1DF)

UPT_D1E0 = (0xD1E0)

UPT_D1E1 = (0xD1E1)

UPT_D1E2 = (0xD1E2)

UPT_D1E3 = (0xD1E3)

UPT_D1E4 = (0xD1E4)

UPT_D1E5 = (0xD1E5)

UPT_D1E6 = (0xD1E6)

UPT_D1E7 = (0xD1E7)

UPT_D1E8 = (0xD1E8)

UPT_D1E9 = (0xD1E9)

UPT_D1EA = (0xD1EA)

UPT_D1EB = (0xD1EB)

UPT_D1EC = (0xD1EC)

UPT_D1ED = (0xD1ED)

UPT_D1EE = (0xD1EE)

UPT_D1EF = (0xD1EF)

UPT_D1F0 = (0xD1F0)

UPT_D1F1 = (0xD1F1)

UPT_D1F2 = (0xD1F2)

UPT_D1F3 = (0xD1F3)

UPT_D1F4 = (0xD1F4)

UPT_D1F5 = (0xD1F5)

UPT_D1F6 = (0xD1F6)

UPT_D1F7 = (0xD1F7)

UPT_D1F8 = (0xD1F8)

UPT_D1F9 = (0xD1F9)

UPT_D1FA = (0xD1FA)

UPT_D1FB = (0xD1FB)

UPT_D1FC = (0xD1FC)

UPT_D1FD = (0xD1FD)

UPT_D1FE = (0xD1FE)

UPT_D1FF = (0xD1FF)

UPT_D200 = (0xD200) --used bt_can_not_sleep_style

UPT_D201 = (0xD201) --used data_patch_can sleep style

UPT_D202 = (0xD202) --used bt_modules_sleep_wakeup

UPT_D203 = (0xD203) --used bt_modules_sleep_wakeup

UPT_D204 = (0xD204) --used bt_modules_sleep_wakeup flag

UPT_D205 = (0xD205)

UPT_D206 = (0xD206) --used

UPT_D207 = (0xD207) --used sleep_frame num

UPT_D208 = (0xD208) --used bt_to_sys_sleep flag

UPT_D209 = (0xD209) --used

UPT_D20A = (0xD20A) --used

UPT_D20B = (0xD20B)

UPT_D20C = (0xD20C)

UPT_D20D = (0xD20D)

UPT_D20E = (0xD20E)

UPT_D20F = (0xD20F)

UPT_D210 = (0xD210)

UPT_D211 = (0xD211)

UPT_D212 = (0xD212)

UPT_D213 = (0xD213) --used

UPT_D214 = (0xD214) --used

UPT_D215 = (0xD215) --used

UPT_D216 = (0xD216) --used

UPT_D217 = (0xD217) --used

UPT_D218 = (0xD218) --used

UPT_D219 = (0xD219) --used

UPT_D21A = (0xD21A) --used

UPT_D21B = (0xD21B)

UPT_D21C = (0xD21C)

UPT_D21D = (0xD21D)

UPT_D21E = (0xD21E)

UPT_D21F = (0xD21F)

UPT_D220 = (0xD220)

UPT_D221 = (0xD221)

UPT_D222 = (0xD222)

UPT_D223 = (0xD223)

UPT_D224 = (0xD224)

UPT_D225 = (0xD225)

UPT_D226 = (0xD226)

UPT_D227 = (0xD227)

UPT_D228 = (0xD228)

UPT_D229 = (0xD229)

UPT_D22A = (0xD22A)

UPT_D22B = (0xD22B)

UPT_D22C = (0xD22C)

UPT_D22D = (0xD22D)

UPT_D22E = (0xD22E)

UPT_D22F = (0xD22F)

UPT_D230 = (0xD230)

UPT_D231 = (0xD231)

UPT_D232 = (0xD232)

UPT_D233 = (0xD233)

UPT_D234 = (0xD234)

UPT_D235 = (0xD235)

UPT_D236 = (0xD236)

UPT_D237 = (0xD237)

UPT_D238 = (0xD238)

UPT_D239 = (0xD239)

UPT_D23A = (0xD23A)

UPT_D23B = (0xD23B)

UPT_D23C = (0xD23C)

UPT_D23D = (0xD23D)

UPT_D23E = (0xD23E)

UPT_D23F = (0xD23F)

UPT_D240 = (0xD240)

UPT_D241 = (0xD241)

UPT_D242 = (0xD242)

UPT_D243 = (0xD243)

UPT_D244 = (0xD244)

UPT_D245 = (0xD245)

UPT_D246 = (0xD246)

UPT_D247 = (0xD247)

UPT_D248 = (0xD248)

UPT_D249 = (0xD249)

UPT_D24A = (0xD24A)

UPT_D24B = (0xD24B)

UPT_D24C = (0xD24C)

UPT_D24D = (0xD24D)

UPT_D24E = (0xD24E)

UPT_D24F = (0xD24F)

UPT_D250 = (0xD250)

UPT_D251 = (0xD251)

UPT_D252 = (0xD252)

UPT_D253 = (0xD253)

UPT_D254 = (0xD254)

UPT_D255 = (0xD255)

UPT_D256 = (0xD256)

UPT_D257 = (0xD257)

UPT_D258 = (0xD258)

UPT_D259 = (0xD259)

UPT_D25A = (0xD25A)

UPT_D25B = (0xD25B)

UPT_D25C = (0xD25C)

UPT_D25D = (0xD25D)

UPT_D25E = (0xD25E)

UPT_D25F = (0xD25F)

UPT_D260 = (0xD260)

UPT_D261 = (0xD261)

UPT_D262 = (0xD262)

UPT_D263 = (0xD263)

UPT_D264 = (0xD264)

UPT_D265 = (0xD265)

UPT_D266 = (0xD266)

UPT_D267 = (0xD267)

UPT_D268 = (0xD268)

UPT_D269 = (0xD269)

UPT_D26A = (0xD26A)

UPT_D26B = (0xD26B)

UPT_D26C = (0xD26C)

UPT_D26D = (0xD26D)

UPT_D26E = (0xD26E)

UPT_D26F = (0xD26F)

UPT_D270 = (0xD270)

UPT_D271 = (0xD271)

UPT_D272 = (0xD272)

UPT_D273 = (0xD273)

UPT_D274 = (0xD274)

UPT_D275 = (0xD275)

UPT_D276 = (0xD276)

UPT_D277 = (0xD277)

UPT_D278 = (0xD278)

UPT_D279 = (0xD279)

UPT_D27A = (0xD27A)

UPT_D27B = (0xD27B)

UPT_D27C = (0xD27C)

UPT_D27D = (0xD27D)

UPT_D27E = (0xD27E)

UPT_D27F = (0xD27F)

UPT_D280 = (0xD280)

UPT_D281 = (0xD281)

UPT_D282 = (0xD282)

UPT_D283 = (0xD283)

UPT_D284 = (0xD284)

UPT_D285 = (0xD285)

UPT_D286 = (0xD286)

UPT_D287 = (0xD287)

UPT_D288 = (0xD288)

UPT_D289 = (0xD289)

UPT_D28A = (0xD28A)

UPT_D28B = (0xD28B)

UPT_D28C = (0xD28C)

UPT_D28D = (0xD28D)

UPT_D28E = (0xD28E)

UPT_D28F = (0xD28F)

UPT_D290 = (0xD290)

UPT_D291 = (0xD291)

UPT_D292 = (0xD292)

UPT_D293 = (0xD293)

UPT_D294 = (0xD294)

UPT_D295 = (0xD295)

UPT_D296 = (0xD296)

UPT_D297 = (0xD297)

UPT_D298 = (0xD298)

UPT_D299 = (0xD299)

UPT_D29A = (0xD29A)

UPT_D29B = (0xD29B)

UPT_D29C = (0xD29C)

UPT_D29D = (0xD29D)

UPT_D29E = (0xD29E)

UPT_D29F = (0xD29F)

UPT_D2A0 = (0xD2A0)

UPT_D2A1 = (0xD2A1)

UPT_D2A2 = (0xD2A2)

UPT_D2A3 = (0xD2A3)

UPT_D2A4 = (0xD2A4)

UPT_D2A5 = (0xD2A5)

UPT_D2A6 = (0xD2A6)

UPT_D2A7 = (0xD2A7)

UPT_D2A8 = (0xD2A8)

UPT_D2A9 = (0xD2A9)

UPT_D2AA = (0xD2AA)

UPT_D2AB = (0xD2AB)

UPT_D2AC = (0xD2AC)

UPT_D2AD = (0xD2AD)

UPT_D2AE = (0xD2AE)

UPT_D2AF = (0xD2AF)

UPT_D2B0 = (0xD2B0)

UPT_D2B1 = (0xD2B1)

UPT_D2B2 = (0xD2B2)

UPT_D2B3 = (0xD2B3)

UPT_D2B4 = (0xD2B4)

UPT_D2B5 = (0xD2B5)

UPT_D2B6 = (0xD2B6)

UPT_D2B7 = (0xD2B7)

UPT_D2B8 = (0xD2B8)

UPT_D2B9 = (0xD2B9)

UPT_D2BA = (0xD2BA)

UPT_D2BB = (0xD2BB)

UPT_D2BC = (0xD2BC)

UPT_D2BD = (0xD2BD)

UPT_D2BE = (0xD2BE)

UPT_D2BF = (0xD2BF)

UPT_D2C0 = (0xD2C0)

UPT_D2C1 = (0xD2C1)

UPT_D2C2 = (0xD2C2)

UPT_D2C3 = (0xD2C3)

UPT_D2C4 = (0xD2C4)

UPT_D2C5 = (0xD2C5)

UPT_D2C6 = (0xD2C6)

UPT_D2C7 = (0xD2C7)

UPT_D2C8 = (0xD2C8)

UPT_D2C9 = (0xD2C9)

UPT_D2CA = (0xD2CA)

UPT_D2CB = (0xD2CB)

UPT_D2CC = (0xD2CC)

UPT_D2CD = (0xD2CD)

UPT_D2CE = (0xD2CE)

UPT_D2CF = (0xD2CF)

UPT_D2D0 = (0xD2D0)

UPT_D2D1 = (0xD2D1)

UPT_D2D2 = (0xD2D2)

UPT_D2D3 = (0xD2D3)

UPT_D2D4 = (0xD2D4)

UPT_D2D5 = (0xD2D5)

UPT_D2D6 = (0xD2D6)

UPT_D2D7 = (0xD2D7)

UPT_D2D8 = (0xD2D8)

UPT_D2D9 = (0xD2D9)

UPT_D2DA = (0xD2DA)

UPT_D2DB = (0xD2DB)

UPT_D2DC = (0xD2DC)

UPT_D2DD = (0xD2DD)

UPT_D2DE = (0xD2DE)

UPT_D2DF = (0xD2DF)

UPT_D2E0 = (0xD2E0)

UPT_D2E1 = (0xD2E1)

UPT_D2E2 = (0xD2E2)

UPT_D2E3 = (0xD2E3)

UPT_D2E4 = (0xD2E4)

UPT_D2E5 = (0xD2E5)

UPT_D2E6 = (0xD2E6)

UPT_D2E7 = (0xD2E7)

UPT_D2E8 = (0xD2E8)

UPT_D2E9 = (0xD2E9)

UPT_D2EA = (0xD2EA)

UPT_D2EB = (0xD2EB)

UPT_D2EC = (0xD2EC)

UPT_D2ED = (0xD2ED)

UPT_D2EE = (0xD2EE)

UPT_D2EF = (0xD2EF)

UPT_D2F0 = (0xD2F0)

UPT_D2F1 = (0xD2F1)

UPT_D2F2 = (0xD2F2)

UPT_D2F3 = (0xD2F3)

UPT_D2F4 = (0xD2F4)

UPT_D2F5 = (0xD2F5)

UPT_D2F6 = (0xD2F6)

UPT_D2F7 = (0xD2F7)

UPT_D2F8 = (0xD2F8)

UPT_D2F9 = (0xD2F9)

UPT_D2FA = (0xD2FA)

UPT_D2FB = (0xD2FB)

UPT_D2FC = (0xD2FC)

UPT_D2FD = (0xD2FD)

UPT_D2FE = (0xD2FE)

UPT_D2FF = (0xD2FF)

UPT_D300 = (0xD300)  --used LMP_IN_Q opcode

UPT_D301 = (0xD301)  --used LMP_OUT_Q opcode

UPT_D302 = (0xD302)  --used LMP_OUT_Q device index

UPT_D303 = (0xD303)  --used LMP_IN_Q device index

UPT_D304 = (0xD304)  --used lmp_acl_container.c

UPT_D305 = (0xD305)  --used LMP_OUT_Q detail

UPT_D306 = (0xD306)  --used LMP_IN_Q detail

UPT_D307 = (0xD307)  --used lmp_afh.c

UPT_D308 = (0xD308)  --used

UPT_D309 = (0xD309)  --used

UPT_D30A = (0xD30A)  --used

UPT_D30B = (0xD30B)  --used

UPT_D30C = (0xD30C)  --used

UPT_D30D = (0xD30D)

UPT_D30E = (0xD30E)  --used

UPT_D30F = (0xD30F)

UPT_D310 = (0xD310)

UPT_D311 = (0xD311)

UPT_D312 = (0xD312)  --used lmp_ch.c

UPT_D313 = (0xD313)  --used

UPT_D314 = (0xD314)  --used

UPT_D315 = (0xD315)  --used

UPT_D316 = (0xD316)  --used

UPT_D317 = (0xD317)  --used

UPT_D318 = (0xD318)  --used

UPT_D319 = (0xD319)  --used

UPT_D31A = (0xD31A)  --used

UPT_D31B = (0xD31B)  --used

UPT_D31C = (0xD31C)  --used

UPT_D31D = (0xD31D)  --used

UPT_D31E = (0xD31E)  --used

UPT_D31F = (0xD31F)  --used

UPT_D320 = (0xD320)  --used

UPT_D321 = (0xD321)  --used

UPT_D322 = (0xD322)  --used

UPT_D323 = (0xD323)  --used

UPT_D324 = (0xD324)  --used

UPT_D325 = (0xD325)  --used

UPT_D326 = (0xD326)  --used

UPT_D327 = (0xD327)  --used

UPT_D328 = (0xD328)  --used

UPT_D329 = (0xD329)

UPT_D32A = (0xD32A)

UPT_D32B = (0xD32B)

UPT_D32C = (0xD32C)

UPT_D32D = (0xD32D)

UPT_D32E = (0xD32E)

UPT_D32F = (0xD32F)  --used lmp_cmd_dispatcher.c

UPT_D330 = (0xD330)  --used

UPT_D331 = (0xD331)  --used

UPT_D332 = (0xD332)

UPT_D333 = (0xD333)

UPT_D334 = (0xD334)

UPT_D335 = (0xD335)

UPT_D336 = (0xD336)

UPT_D337 = (0xD337)

UPT_D338 = (0xD338)

UPT_D339 = (0xD339)  --used lmp_ecc_256.c

UPT_D33A = (0xD33A)  --used

UPT_D33B = (0xD33B)  --used

UPT_D33C = (0xD33C)  --used

UPT_D33D = (0xD33D)

UPT_D33E = (0xD33E)

UPT_D33F = (0xD33F)

UPT_D340 = (0xD340)  --used lmp_encoded_pdu.c

UPT_D341 = (0xD341)

UPT_D342 = (0xD342)

UPT_D343 = (0xD343)  --used

UPT_D344 = (0xD344)

UPT_D345 = (0xD345)

UPT_D346 = (0xD346)

UPT_D347 = (0xD347)

UPT_D348 = (0xD348)

UPT_D349 = (0xD349)  --used lmp_inquiry.c

UPT_D34A = (0xD34A)

UPT_D34B = (0xD34B)

UPT_D34C = (0xD34C)

UPT_D34D = (0xD34D)

UPT_D34E = (0xD34E)  --used lmp_link_policy.c

UPT_D34F = (0xD34F)  --used

UPT_D350 = (0xD350)  --used

UPT_D351 = (0xD351)  --used

UPT_D352 = (0xD352)  --used

UPT_D353 = (0xD353)  --used

UPT_D354 = (0xD354)  --used

UPT_D355 = (0xD355)  --used

UPT_D356 = (0xD356)  --used

UPT_D357 = (0xD357)  --used

UPT_D358 = (0xD358)  --used

UPT_D359 = (0xD359)  --used

UPT_D35A = (0xD35A)  --used

UPT_D35B = (0xD35B)  --used

UPT_D35C = (0xD35C)  --used

UPT_D35D = (0xD35D)  --used

UPT_D35E = (0xD35E)  --used

UPT_D35F = (0xD35F)  --used

UPT_D360 = (0xD360)

UPT_D361 = (0xD361)  --used lmp_link_policy_protocol

UPT_D362 = (0xD362)  --used

UPT_D363 = (0xD363)  --used

UPT_D364 = (0xD364)  --used

UPT_D365 = (0xD365)  --used

UPT_D366 = (0xD366)  --used

UPT_D367 = (0xD367)

UPT_D368 = (0xD368)

UPT_D369 = (0xD369)

UPT_D36A = (0xD36A)  --used lmp_link_qos.c

UPT_D36B = (0xD36B)  --used

UPT_D36C = (0xD36C)  --used

UPT_D36D = (0xD36D)  --used

UPT_D36E = (0xD36E)  --used

UPT_D36F = (0xD36F)  --used

UPT_D370 = (0xD370)  --used

UPT_D371 = (0xD371)  --used

UPT_D372 = (0xD372)  --used

UPT_D373 = (0xD373)

UPT_D374 = (0xD374)

UPT_D375 = (0xD375)

UPT_D376 = (0xD376)

UPT_D377 = (0xD377)

UPT_D378 = (0xD378)

UPT_D379 = (0xD379)

UPT_D37A = (0xD37A)  --used lmp_scan.c

UPT_D37B = (0xD37B)  --used

UPT_D37C = (0xD37C)  --used

UPT_D37D = (0xD37D)  --used

UPT_D37E = (0xD37E)

UPT_D37F = (0xD37F)

UPT_D380 = (0xD380)

UPT_D381 = (0xD381)

UPT_D382 = (0xD382)

UPT_D383 = (0xD383)  --used lmp_sco_container.c

UPT_D384 = (0xD384)  --used

UPT_D385 = (0xD385)  --used

UPT_D386 = (0xD386)

UPT_D387 = (0xD387)

UPT_D388 = (0xD388)

UPT_D389 = (0xD389)

UPT_D38A = (0xD38A)  --used lmp_sec_core.c

UPT_D38B = (0xD38B)

UPT_D38C = (0xD38C)

UPT_D38D = (0xD38D)

UPT_D38E = (0xD38E)  --used lmp_sec_peer.c

UPT_D38F = (0xD38F)  --used

UPT_D390 = (0xD390)  --used

UPT_D391 = (0xD391)  --used

UPT_D392 = (0xD392)  --used

UPT_D393 = (0xD393)  --used

UPT_D394 = (0xD394)  --used

UPT_D395 = (0xD395)  --used

UPT_D396 = (0xD396)  --used

UPT_D397 = (0xD397)  --used

UPT_D398 = (0xD398)  --used

UPT_D399 = (0xD399)  --used

UPT_D39A = (0xD39A)

UPT_D39B = (0xD39B)

UPT_D39C = (0xD39C)

UPT_D39D = (0xD39D)

UPT_D39E = (0xD39E)

UPT_D39F = (0xD39F)

UPT_D3A0 = (0xD3A0)  --used lmp_ssp.c

UPT_D3A1 = (0xD3A1)

UPT_D3A2 = (0xD3A2)

UPT_D3A3 = (0xD3A3)

UPT_D3A4 = (0xD3A4)  --used lmp_timer.c

UPT_D3A5 = (0xD3A5)  --used

UPT_D3A6 = (0xD3A6)

UPT_D3A7 = (0xD3A7)

UPT_D3A8 = (0xD3A8)  --used lmp_ecc.c

UPT_D3A9 = (0xD3A9)  --used

UPT_D3AA = (0xD3AA)  --used

UPT_D3AB = (0xD3AB)

UPT_D3AC = (0xD3AC)

UPT_D3AD = (0xD3AD)  --

UPT_D3AE = (0xD3AE)

UPT_D3AF = (0xD3AF)

UPT_D3B0 = (0xD3B0)  --used lmp_pca.c

UPT_D3B1 = (0xD3B1)  --used

UPT_D3B2 = (0xD3B2)  --used

UPT_D3B3 = (0xD3B3)

UPT_D3B4 = (0xD3B4)

UPT_D3B5 = (0xD3B5)

UPT_D3B6 = (0xD3B6)

UPT_D3B7 = (0xD3B7)

UPT_D3B8 = (0xD3B8)

UPT_D3B9 = (0xD3B9)

UPT_D3BA = (0xD3BA)

UPT_D3BB = (0xD3BB)

UPT_D3BC = (0xD3BC)

UPT_D3BD = (0xD3BD)

UPT_D3BE = (0xD3BE)

UPT_D3BF = (0xD3BF)

UPT_D3C0 = (0xD3C0)

UPT_D3C1 = (0xD3C1)

UPT_D3C2 = (0xD3C2)

UPT_D3C3 = (0xD3C3)

UPT_D3C4 = (0xD3C4)

UPT_D3C5 = (0xD3C5)

UPT_D3C6 = (0xD3C6)

UPT_D3C7 = (0xD3C7)

UPT_D3C8 = (0xD3C8)

UPT_D3C9 = (0xD3C9)

UPT_D3CA = (0xD3CA)

UPT_D3CB = (0xD3CB)

UPT_D3CC = (0xD3CC)

UPT_D3CD = (0xD3CD)

UPT_D3CE = (0xD3CE)

UPT_D3CF = (0xD3CF)

UPT_D3D0 = (0xD3D0)

UPT_D3D1 = (0xD3D1)

UPT_D3D2 = (0xD3D2)

UPT_D3D3 = (0xD3D3)

UPT_D3D4 = (0xD3D4)

UPT_D3D5 = (0xD3D5)

UPT_D3D6 = (0xD3D6)

UPT_D3D7 = (0xD3D7)

UPT_D3D8 = (0xD3D8)

UPT_D3D9 = (0xD3D9)

UPT_D3DA = (0xD3DA)

UPT_D3DB = (0xD3DB)

UPT_D3DC = (0xD3DC)

UPT_D3DD = (0xD3DD)

UPT_D3DE = (0xD3DE)

UPT_D3DF = (0xD3DF)

UPT_D3E0 = (0xD3E0)

UPT_D3E1 = (0xD3E1)

UPT_D3E2 = (0xD3E2)

UPT_D3E3 = (0xD3E3)

UPT_D3E4 = (0xD3E4)

UPT_D3E5 = (0xD3E5)

UPT_D3E6 = (0xD3E6)

UPT_D3E7 = (0xD3E7)

UPT_D3E8 = (0xD3E8)

UPT_D3E9 = (0xD3E9)

UPT_D3EA = (0xD3EA)

UPT_D3EB = (0xD3EB)

UPT_D3EC = (0xD3EC)

UPT_D3ED = (0xD3ED)

UPT_D3EE = (0xD3EE)

UPT_D3EF = (0xD3EF)

UPT_D3F0 = (0xD3F0)

UPT_D3F1 = (0xD3F1)

UPT_D3F2 = (0xD3F2)

UPT_D3F3 = (0xD3F3)

UPT_D3F4 = (0xD3F4)

UPT_D3F5 = (0xD3F5)

UPT_D3F6 = (0xD3F6)

UPT_D3F7 = (0xD3F7)

UPT_D3F8 = (0xD3F8)

UPT_D3F9 = (0xD3F9)

UPT_D3FA = (0xD3FA)

UPT_D3FB = (0xD3FB)

UPT_D3FC = (0xD3FC)

UPT_D3FD = (0xD3FD)

UPT_D3FE = (0xD3FE)

UPT_D3FF = (0xD3FF)

UPT_D400 = (0xD400)

UPT_D401 = (0xD401)

UPT_D402 = (0xD402)

UPT_D403 = (0xD403)

UPT_D404 = (0xD404)

UPT_D405 = (0xD405)

UPT_D406 = (0xD406)

UPT_D407 = (0xD407)

UPT_D408 = (0xD408)

UPT_D409 = (0xD409)

UPT_D40A = (0xD40A)

UPT_D40B = (0xD40B)

UPT_D40C = (0xD40C)

UPT_D40D = (0xD40D)

UPT_D40E = (0xD40E)

UPT_D40F = (0xD40F)

UPT_D410 = (0xD410)

UPT_D411 = (0xD411)

UPT_D412 = (0xD412)

UPT_D413 = (0xD413)

UPT_D414 = (0xD414)

UPT_D415 = (0xD415)

UPT_D416 = (0xD416)

UPT_D417 = (0xD417)

UPT_D418 = (0xD418)

UPT_D419 = (0xD419)

UPT_D41A = (0xD41A)

UPT_D41B = (0xD41B)

UPT_D41C = (0xD41C)

UPT_D41D = (0xD41D)

UPT_D41E = (0xD41E)

UPT_D41F = (0xD41F)

UPT_D420 = (0xD420)

UPT_D421 = (0xD421)

UPT_D422 = (0xD422)

UPT_D423 = (0xD423)

UPT_D424 = (0xD424)

UPT_D425 = (0xD425)

UPT_D426 = (0xD426)

UPT_D427 = (0xD427)

UPT_D428 = (0xD428)

UPT_D429 = (0xD429)

UPT_D42A = (0xD42A)

UPT_D42B = (0xD42B)

UPT_D42C = (0xD42C)

UPT_D42D = (0xD42D)

UPT_D42E = (0xD42E)

UPT_D42F = (0xD42F)

UPT_D430 = (0xD430)

UPT_D431 = (0xD431)

UPT_D432 = (0xD432)

UPT_D433 = (0xD433)

UPT_D434 = (0xD434)

UPT_D435 = (0xD435)

UPT_D436 = (0xD436)

UPT_D437 = (0xD437)

UPT_D438 = (0xD438)

UPT_D439 = (0xD439)

UPT_D43A = (0xD43A)

UPT_D43B = (0xD43B)

UPT_D43C = (0xD43C)

UPT_D43D = (0xD43D)

UPT_D43E = (0xD43E)

UPT_D43F = (0xD43F)

UPT_D440 = (0xD440)

UPT_D441 = (0xD441)

UPT_D442 = (0xD442)

UPT_D443 = (0xD443)

UPT_D444 = (0xD444)

UPT_D445 = (0xD445)

UPT_D446 = (0xD446)

UPT_D447 = (0xD447)

UPT_D448 = (0xD448)

UPT_D449 = (0xD449)

UPT_D44A = (0xD44A)

UPT_D44B = (0xD44B)

UPT_D44C = (0xD44C)

UPT_D44D = (0xD44D)

UPT_D44E = (0xD44E)

UPT_D44F = (0xD44F)

UPT_D450 = (0xD450)

UPT_D451 = (0xD451)

UPT_D452 = (0xD452)

UPT_D453 = (0xD453)

UPT_D454 = (0xD454)

UPT_D455 = (0xD455)

UPT_D456 = (0xD456)

UPT_D457 = (0xD457)

UPT_D458 = (0xD458)

UPT_D459 = (0xD459)

UPT_D45A = (0xD45A)

UPT_D45B = (0xD45B)

UPT_D45C = (0xD45C)

UPT_D45D = (0xD45D)

UPT_D45E = (0xD45E)

UPT_D45F = (0xD45F)

UPT_D460 = (0xD460)  --used, if_bt_to_coex.c

UPT_D461 = (0xD461)

UPT_D462 = (0xD462)

UPT_D463 = (0xD463)

UPT_D464 = (0xD464)

UPT_D465 = (0xD465)

UPT_D466 = (0xD466)

UPT_D467 = (0xD467)

UPT_D468 = (0xD468)

UPT_D469 = (0xD469)

UPT_D46A = (0xD46A)

UPT_D46B = (0xD46B)

UPT_D46C = (0xD46C)

UPT_D46D = (0xD46D)

UPT_D46E = (0xD46E)

UPT_D46F = (0xD46F)

UPT_D470 = (0xD470)

UPT_D471 = (0xD471)

UPT_D472 = (0xD472)

UPT_D473 = (0xD473)

UPT_D474 = (0xD474)

UPT_D475 = (0xD475)

UPT_D476 = (0xD476)

UPT_D477 = (0xD477)

UPT_D478 = (0xD478)

UPT_D479 = (0xD479)

UPT_D47A = (0xD47A)

UPT_D47B = (0xD47B)

UPT_D47C = (0xD47C)

UPT_D47D = (0xD47D)

UPT_D47E = (0xD47E)

UPT_D47F = (0xD47F)

UPT_D480 = (0xD480)

UPT_D481 = (0xD481)

UPT_D482 = (0xD482)

UPT_D483 = (0xD483)

UPT_D484 = (0xD484)

UPT_D485 = (0xD485)

UPT_D486 = (0xD486)

UPT_D487 = (0xD487)

UPT_D488 = (0xD488)

UPT_D489 = (0xD489)

UPT_D48A = (0xD48A)

UPT_D48B = (0xD48B)

UPT_D48C = (0xD48C)

UPT_D48D = (0xD48D)

UPT_D48E = (0xD48E)

UPT_D48F = (0xD48F)

UPT_D490 = (0xD490)

UPT_D491 = (0xD491)

UPT_D492 = (0xD492)

UPT_D493 = (0xD493)

UPT_D494 = (0xD494)

UPT_D495 = (0xD495)

UPT_D496 = (0xD496)

UPT_D497 = (0xD497)

UPT_D498 = (0xD498)

UPT_D499 = (0xD499)

UPT_D49A = (0xD49A)

UPT_D49B = (0xD49B)

UPT_D49C = (0xD49C)

UPT_D49D = (0xD49D)

UPT_D49E = (0xD49E)

UPT_D49F = (0xD49F)

UPT_D4A0 = (0xD4A0)

UPT_D4A1 = (0xD4A1)

UPT_D4A2 = (0xD4A2)

UPT_D4A3 = (0xD4A3)

UPT_D4A4 = (0xD4A4)

UPT_D4A5 = (0xD4A5)

UPT_D4A6 = (0xD4A6)

UPT_D4A7 = (0xD4A7)

UPT_D4A8 = (0xD4A8)

UPT_D4A9 = (0xD4A9)

UPT_D4AA = (0xD4AA)

UPT_D4AB = (0xD4AB)

UPT_D4AC = (0xD4AC)

UPT_D4AD = (0xD4AD)

UPT_D4AE = (0xD4AE)

UPT_D4AF = (0xD4AF)

UPT_D4B0 = (0xD4B0)

UPT_D4B1 = (0xD4B1)

UPT_D4B2 = (0xD4B2)

UPT_D4B3 = (0xD4B3)

UPT_D4B4 = (0xD4B4)

UPT_D4B5 = (0xD4B5)

UPT_D4B6 = (0xD4B6)  --used

UPT_D4B7 = (0xD4B7)  --used

UPT_D4B8 = (0xD4B8)  --used

UPT_D4B9 = (0xD4B9)  --used

UPT_D4BA = (0xD4BA)

UPT_D4BB = (0xD4BB)

UPT_D4BC = (0xD4BC)

UPT_D4BD = (0xD4BD)

UPT_D4BE = (0xD4BE)

UPT_D4BF = (0xD4BF)

UPT_D4C0 = (0xD4C0)

UPT_D4C1 = (0xD4C1)

UPT_D4C2 = (0xD4C2)

UPT_D4C3 = (0xD4C3)

UPT_D4C4 = (0xD4C4)

UPT_D4C5 = (0xD4C5)

UPT_D4C6 = (0xD4C6)

UPT_D4C7 = (0xD4C7)

UPT_D4C8 = (0xD4C8)

UPT_D4C9 = (0xD4C9)

UPT_D4CA = (0xD4CA)

UPT_D4CB = (0xD4CB)

UPT_D4CC = (0xD4CC)

UPT_D4CD = (0xD4CD)

UPT_D4CE = (0xD4CE)

UPT_D4CF = (0xD4CF)

UPT_D4D0 = (0xD4D0)

UPT_D4D1 = (0xD4D1)

UPT_D4D2 = (0xD4D2)

UPT_D4D3 = (0xD4D3)

UPT_D4D4 = (0xD4D4)

UPT_D4D5 = (0xD4D5)

UPT_D4D6 = (0xD4D6)

UPT_D4D7 = (0xD4D7)

UPT_D4D8 = (0xD4D8)

UPT_D4D9 = (0xD4D9)

UPT_D4DA = (0xD4DA)

UPT_D4DB = (0xD4DB)

UPT_D4DC = (0xD4DC)

UPT_D4DD = (0xD4DD)

UPT_D4DE = (0xD4DE)

UPT_D4DF = (0xD4DF)

UPT_D4E0 = (0xD4E0)

UPT_D4E1 = (0xD4E1)

UPT_D4E2 = (0xD4E2)

UPT_D4E3 = (0xD4E3)

UPT_D4E4 = (0xD4E4)

UPT_D4E5 = (0xD4E5)

UPT_D4E6 = (0xD4E6)

UPT_D4E7 = (0xD4E7)

UPT_D4E8 = (0xD4E8)

UPT_D4E9 = (0xD4E9)

UPT_D4EA = (0xD4EA)

UPT_D4EB = (0xD4EB)

UPT_D4EC = (0xD4EC)

UPT_D4ED = (0xD4ED)

UPT_D4EE = (0xD4EE)

UPT_D4EF = (0xD4EF)

UPT_D4F0 = (0xD4F0)

UPT_D4F1 = (0xD4F1)

UPT_D4F2 = (0xD4F2)

UPT_D4F3 = (0xD4F3)

UPT_D4F4 = (0xD4F4)

UPT_D4F5 = (0xD4F5)

UPT_D4F6 = (0xD4F6)

UPT_D4F7 = (0xD4F7)

UPT_D4F8 = (0xD4F8)

UPT_D4F9 = (0xD4F9)

UPT_D4FA = (0xD4FA)

UPT_D4FB = (0xD4FB)

UPT_D4FC = (0xD4FC)

UPT_D4FD = (0xD4FD)

UPT_D4FE = (0xD4FE)

UPT_D4FF = (0xD4FF)

UPT_D500 = (0xD500)  --used

UPT_D501 = (0xD501)  --used

UPT_D502 = (0xD502)  --used

UPT_D503 = (0xD503)  --used

UPT_D504 = (0xD504)  --used

UPT_D505 = (0xD505)  --used

UPT_D506 = (0xD506)  --used

UPT_D507 = (0xD507)  --used

UPT_D508 = (0xD508)

UPT_D509 = (0xD509)  --used

UPT_D50A = (0xD50A)  --used

UPT_D50B = (0xD50B)

UPT_D50C = (0xD50C)

UPT_D50D = (0xD50D)

UPT_D50E = (0xD50E)

UPT_D50F = (0xD50F)

UPT_D510 = (0xD510)

UPT_D511 = (0xD511)

UPT_D512 = (0xD512)

UPT_D513 = (0xD513)

UPT_D514 = (0xD514)

UPT_D515 = (0xD515)

UPT_D516 = (0xD516)

UPT_D517 = (0xD517)

UPT_D518 = (0xD518)

UPT_D519 = (0xD519)

UPT_D51A = (0xD51A)

UPT_D51B = (0xD51B)

UPT_D51C = (0xD51C)  --used

UPT_D51D = (0xD51D)  --used

UPT_D51E = (0xD51E)

UPT_D51F = (0xD51F)  --used

UPT_D520 = (0xD520)  --used

UPT_D521 = (0xD521)  --used

UPT_D522 = (0xD522)  --used

UPT_D523 = (0xD523)  --used

UPT_D524 = (0xD524)  --used

UPT_D525 = (0xD525)  --used

UPT_D526 = (0xD526)  --used

UPT_D527 = (0xD527)  --used

UPT_D528 = (0xD528)  --used

UPT_D529 = (0xD529)  --used

UPT_D52A = (0xD52A)  --used

UPT_D52B = (0xD52B)  --used

UPT_D52C = (0xD52C)  --used

UPT_D52D = (0xD52D)  --used

UPT_D52E = (0xD52E)  --used

UPT_D52F = (0xD52F)  --used

UPT_D530 = (0xD530)  --used in es_sync_mgr.c

UPT_D531 = (0xD531)  --used in es_sync_mgr.c

UPT_D532 = (0xD532)  --used in es_sync_mgr.c

UPT_D533 = (0xD533)  --used 

UPT_D534 = (0xD534)  --used

UPT_D535 = (0xD535)

UPT_D536 = (0xD536)  --used in es_sync_mgr.c

UPT_D537 = (0xD537)  --used in es_sync_mgr.c

UPT_D538 = (0xD538)  --used in es_sync_mgr.c

UPT_D539 = (0xD539)  --used in es_sync_mgr.c

UPT_D53A = (0xD53A)  --used in es_sync_mgr.c

UPT_D53B = (0xD53B)  --used in es_sync_mgr.c

UPT_D53C = (0xD53C)

UPT_D53D = (0xD53D)

UPT_D53E = (0xD53E)

UPT_D53F = (0xD53F)

UPT_D540 = (0xD540)  --used

UPT_D541 = (0xD541)  --used

UPT_D542 = (0xD542)  --used

UPT_D543 = (0xD543)  --used

UPT_D544 = (0xD544)  --used

UPT_D545 = (0xD545)  --used

UPT_D546 = (0xD546)  --used

UPT_D547 = (0xD547)  --used

UPT_D548 = (0xD548)  --used

UPT_D549 = (0xD549)  --used

UPT_D54A = (0xD54A)  --used

UPT_D54B = (0xD54B)  --used

UPT_D54C = (0xD54C)

UPT_D54D = (0xD54D)

UPT_D54E = (0xD54E)

UPT_D54F = (0xD54F)  --used

UPT_D550 = (0xD550)  --used

UPT_D551 = (0xD551)  --used

UPT_D552 = (0xD552)

UPT_D553 = (0xD553)

UPT_D554 = (0xD554)

UPT_D555 = (0xD555)

UPT_D556 = (0xD556)

UPT_D557 = (0xD557)

UPT_D558 = (0xD558)

UPT_D559 = (0xD559)

UPT_D55A = (0xD55A)

UPT_D55B = (0xD55B)

UPT_D55C = (0xD55C)

UPT_D55D = (0xD55D)

UPT_D55E = (0xD55E)

UPT_D55F = (0xD55F)

UPT_D560 = (0xD560)  --used

UPT_D561 = (0xD561)  --used

UPT_D562 = (0xD562)  --used

UPT_D563 = (0xD563)  --used

UPT_D564 = (0xD564)  --used

UPT_D565 = (0xD565)  --used

UPT_D566 = (0xD566)

UPT_D567 = (0xD567)

UPT_D568 = (0xD568)

UPT_D569 = (0xD569)

UPT_D56A = (0xD56A)

UPT_D56B = (0xD56B)

UPT_D56C = (0xD56C)

UPT_D56D = (0xD56D)

UPT_D56E = (0xD56E)

UPT_D56F = (0xD56F)

UPT_D570 = (0xD570)  --used

UPT_D571 = (0xD571)  --used

UPT_D572 = (0xD572)  --used

UPT_D573 = (0xD573)  --used

UPT_D574 = (0xD574)  --used

UPT_D575 = (0xD575)  --used

UPT_D576 = (0xD576)  --used

UPT_D577 = (0xD577)  --used

UPT_D578 = (0xD578)  --used

UPT_D579 = (0xD579)  --used

UPT_D57A = (0xD57A)  --used

UPT_D57B = (0xD57B)  --used

UPT_D57C = (0xD57C)  --used

UPT_D57D = (0xD57D)  --used

UPT_D57E = (0xD57E)  --used

UPT_D57F = (0xD57F)  --used

UPT_D580 = (0xD580)  --used

UPT_D581 = (0xD581)  --used

UPT_D582 = (0xD582)  --used

UPT_D583 = (0xD583)  --used

UPT_D584 = (0xD584)  --used

UPT_D585 = (0xD585)  --used

UPT_D586 = (0xD586)  --used

UPT_D587 = (0xD587)  --used

UPT_D588 = (0xD588)  --used

UPT_D589 = (0xD589)  --used

UPT_D58A = (0xD58A)  --used

UPT_D58B = (0xD58B)  --used

UPT_D58C = (0xD58C)  --used

UPT_D58D = (0xD58D)  --used

UPT_D58E = (0xD58E)  --used

UPT_D58F = (0xD58F)  --used

UPT_D590 = (0xD590)  --used

UPT_D591 = (0xD591)

UPT_D592 = (0xD592)

UPT_D593 = (0xD593)

UPT_D594 = (0xD594)

UPT_D595 = (0xD595)

UPT_D596 = (0xD596)

UPT_D597 = (0xD597)

UPT_D598 = (0xD598)

UPT_D599 = (0xD599)

UPT_D59A = (0xD59A)

UPT_D59B = (0xD59B)

UPT_D59C = (0xD59C)

UPT_D59D = (0xD59D)

UPT_D59E = (0xD59E)

UPT_D59F = (0xD59F)

UPT_D5A0 = (0xD5A0)

UPT_D5A1 = (0xD5A1)

UPT_D5A2 = (0xD5A2)

UPT_D5A3 = (0xD5A3)

UPT_D5A4 = (0xD5A4)

UPT_D5A5 = (0xD5A5)

UPT_D5A6 = (0xD5A6)

UPT_D5A7 = (0xD5A7)

UPT_D5A8 = (0xD5A8)

UPT_D5A9 = (0xD5A9)

UPT_D5AA = (0xD5AA)

UPT_D5AB = (0xD5AB)

UPT_D5AC = (0xD5AC)

UPT_D5AD = (0xD5AD)

UPT_D5AE = (0xD5AE)

UPT_D5AF = (0xD5AF)

UPT_D5B0 = (0xD5B0)

UPT_D5B1 = (0xD5B1)

UPT_D5B2 = (0xD5B2)

UPT_D5B3 = (0xD5B3)

UPT_D5B4 = (0xD5B4)

UPT_D5B5 = (0xD5B5)

UPT_D5B6 = (0xD5B6)

UPT_D5B7 = (0xD5B7)

UPT_D5B8 = (0xD5B8)

UPT_D5B9 = (0xD5B9)

UPT_D5BA = (0xD5BA)

UPT_D5BB = (0xD5BB)

UPT_D5BC = (0xD5BC)

UPT_D5BD = (0xD5BD)

UPT_D5BE = (0xD5BE)

UPT_D5BF = (0xD5BF)

UPT_D5C0 = (0xD5C0)

UPT_D5C1 = (0xD5C1)

UPT_D5C2 = (0xD5C2)

UPT_D5C3 = (0xD5C3)

UPT_D5C4 = (0xD5C4)

UPT_D5C5 = (0xD5C5)

UPT_D5C6 = (0xD5C6)

UPT_D5C7 = (0xD5C7)

UPT_D5C8 = (0xD5C8)

UPT_D5C9 = (0xD5C9)

UPT_D5CA = (0xD5CA)

UPT_D5CB = (0xD5CB)

UPT_D5CC = (0xD5CC)

UPT_D5CD = (0xD5CD)

UPT_D5CE = (0xD5CE)

UPT_D5CF = (0xD5CF)

UPT_D5D0 = (0xD5D0)

UPT_D5D1 = (0xD5D1)

UPT_D5D2 = (0xD5D2)

UPT_D5D3 = (0xD5D3)

UPT_D5D4 = (0xD5D4)

UPT_D5D5 = (0xD5D5)

UPT_D5D6 = (0xD5D6)

UPT_D5D7 = (0xD5D7)

UPT_D5D8 = (0xD5D8)

UPT_D5D9 = (0xD5D9)

UPT_D5DA = (0xD5DA)

UPT_D5DB = (0xD5DB)

UPT_D5DC = (0xD5DC)

UPT_D5DD = (0xD5DD)

UPT_D5DE = (0xD5DE)

UPT_D5DF = (0xD5DF)

UPT_D5E0 = (0xD5E0)

UPT_D5E1 = (0xD5E1)

UPT_D5E2 = (0xD5E2)

UPT_D5E3 = (0xD5E3)

UPT_D5E4 = (0xD5E4)

UPT_D5E5 = (0xD5E5)

UPT_D5E6 = (0xD5E6)

UPT_D5E7 = (0xD5E7)

UPT_D5E8 = (0xD5E8)

UPT_D5E9 = (0xD5E9)

UPT_D5EA = (0xD5EA)

UPT_D5EB = (0xD5EB)

UPT_D5EC = (0xD5EC)

UPT_D5ED = (0xD5ED)

UPT_D5EE = (0xD5EE)

UPT_D5EF = (0xD5EF)

UPT_D5F0 = (0xD5F0)

UPT_D5F1 = (0xD5F1)

UPT_D5F2 = (0xD5F2)

UPT_D5F3 = (0xD5F3)

UPT_D5F4 = (0xD5F4)

UPT_D5F5 = (0xD5F5)

UPT_D5F6 = (0xD5F6)

UPT_D5F7 = (0xD5F7)

UPT_D5F8 = (0xD5F8)

UPT_D5F9 = (0xD5F9)

UPT_D5FA = (0xD5FA)

UPT_D5FB = (0xD5FB)

UPT_D5FC = (0xD5FC)

UPT_D5FD = (0xD5FD)

UPT_D5FE = (0xD5FE)

UPT_D5FF = (0xD5FF)

UPT_D600 = (0xD600) --pcm_drv.c

UPT_D601 = (0xD601) --pcm_drv.c

UPT_D602 = (0xD602) --pcm_drv.c

UPT_D603 = (0xD603) --pcm_drv.c

UPT_D604 = (0xD604) --pcm_drv.c

UPT_D605 = (0xD605) --pcm_drv.c

UPT_D606 = (0xD606) --pcm_drv.c

UPT_D607 = (0xD607)

UPT_D608 = (0xD608)

UPT_D609 = (0xD609)

UPT_D60A = (0xD60A)

UPT_D60B = (0xD60B)

UPT_D60C = (0xD60C)

UPT_D60D = (0xD60D)

UPT_D60E = (0xD60E)

UPT_D60F = (0xD60F)

UPT_D610 = (0xD610)

UPT_D611 = (0xD611) --pcm_drv.c

UPT_D612 = (0xD612) --pcm_drv.c

UPT_D613 = (0xD613) --pcm_drv.cs

UPT_D614 = (0xD614)

UPT_D615 = (0xD615)

UPT_D616 = (0xD616)

UPT_D617 = (0xD617)

UPT_D618 = (0xD618)

UPT_D619 = (0xD619)

UPT_D61A = (0xD61A)

UPT_D61B = (0xD61B)

UPT_D61C = (0xD61C)

UPT_D61D = (0xD61D)

UPT_D61E = (0xD61E)

UPT_D61F = (0xD61F)

UPT_D620 = (0xD620)

UPT_D621 = (0xD621)

UPT_D622 = (0xD622)

UPT_D623 = (0xD623)

UPT_D624 = (0xD624)

UPT_D625 = (0xD625)

UPT_D626 = (0xD626)

UPT_D627 = (0xD627)

UPT_D628 = (0xD628)

UPT_D629 = (0xD629)

UPT_D62A = (0xD62A)

UPT_D62B = (0xD62B)

UPT_D62C = (0xD62C)

UPT_D62D = (0xD62D)

UPT_D62E = (0xD62E)

UPT_D62F = (0xD62F)

UPT_D630 = (0xD630)

UPT_D631 = (0xD631)

UPT_D632 = (0xD632)

UPT_D633 = (0xD633)

UPT_D634 = (0xD634)

UPT_D635 = (0xD635)

UPT_D636 = (0xD636)

UPT_D637 = (0xD637)

UPT_D638 = (0xD638)

UPT_D639 = (0xD639)

UPT_D63A = (0xD63A)

UPT_D63B = (0xD63B)

UPT_D63C = (0xD63C)

UPT_D63D = (0xD63D)

UPT_D63E = (0xD63E)

UPT_D63F = (0xD63F)

UPT_D640 = (0xD640)

UPT_D641 = (0xD641)

UPT_D642 = (0xD642)

UPT_D643 = (0xD643)

UPT_D644 = (0xD644)

UPT_D645 = (0xD645)

UPT_D646 = (0xD646)

UPT_D647 = (0xD647)

UPT_D648 = (0xD648)

UPT_D649 = (0xD649)

UPT_D64A = (0xD64A)

UPT_D64B = (0xD64B)

UPT_D64C = (0xD64C)

UPT_D64D = (0xD64D)

UPT_D64E = (0xD64E)

UPT_D64F = (0xD64F)

UPT_D650 = (0xD650)

UPT_D651 = (0xD651)

UPT_D652 = (0xD652)

UPT_D653 = (0xD653)

UPT_D654 = (0xD654)

UPT_D655 = (0xD655)

UPT_D656 = (0xD656)

UPT_D657 = (0xD657)

UPT_D658 = (0xD658)

UPT_D659 = (0xD659)

UPT_D65A = (0xD65A)

UPT_D65B = (0xD65B)

UPT_D65C = (0xD65C)

UPT_D65D = (0xD65D)

UPT_D65E = (0xD65E)

UPT_D65F = (0xD65F)

UPT_D660 = (0xD660)

UPT_D661 = (0xD661)

UPT_D662 = (0xD662)

UPT_D663 = (0xD663)

UPT_D664 = (0xD664)

UPT_D665 = (0xD665)

UPT_D666 = (0xD666)

UPT_D667 = (0xD667)

UPT_D668 = (0xD668)

UPT_D669 = (0xD669)

UPT_D66A = (0xD66A)

UPT_D66B = (0xD66B)

UPT_D66C = (0xD66C)

UPT_D66D = (0xD66D)

UPT_D66E = (0xD66E)

UPT_D66F = (0xD66F)

UPT_D670 = (0xD670)

UPT_D671 = (0xD671)

UPT_D672 = (0xD672)

UPT_D673 = (0xD673)

UPT_D674 = (0xD674)

UPT_D675 = (0xD675)

UPT_D676 = (0xD676)

UPT_D677 = (0xD677)

UPT_D678 = (0xD678)

UPT_D679 = (0xD679)

UPT_D67A = (0xD67A)

UPT_D67B = (0xD67B)

UPT_D67C = (0xD67C)

UPT_D67D = (0xD67D)

UPT_D67E = (0xD67E)

UPT_D67F = (0xD67F)

UPT_D680 = (0xD680)  --used

UPT_D681 = (0xD681)  --used

UPT_D682 = (0xD682)  --used

UPT_D683 = (0xD683)  --used

UPT_D684 = (0xD684)

UPT_D685 = (0xD685)

UPT_D686 = (0xD686)

UPT_D687 = (0xD687)

UPT_D688 = (0xD688)

UPT_D689 = (0xD689)

UPT_D68A = (0xD68A)

UPT_D68B = (0xD68B)

UPT_D68C = (0xD68C)

UPT_D68D = (0xD68D)

UPT_D68E = (0xD68E)

UPT_D68F = (0xD68F)

UPT_D690 = (0xD690)

UPT_D691 = (0xD691)

UPT_D692 = (0xD692)

UPT_D693 = (0xD693)

UPT_D694 = (0xD694)

UPT_D695 = (0xD695)

UPT_D696 = (0xD696)

UPT_D697 = (0xD697)

UPT_D698 = (0xD698)

UPT_D699 = (0xD699)

UPT_D69A = (0xD69A)

UPT_D69B = (0xD69B)

UPT_D69C = (0xD69C)

UPT_D69D = (0xD69D)

UPT_D69E = (0xD69E)

UPT_D69F = (0xD69F)

UPT_D6A0 = (0xD6A0)

UPT_D6A1 = (0xD6A1)

UPT_D6A2 = (0xD6A2)

UPT_D6A3 = (0xD6A3)

UPT_D6A4 = (0xD6A4)

UPT_D6A5 = (0xD6A5)

UPT_D6A6 = (0xD6A6)

UPT_D6A7 = (0xD6A7)

UPT_D6A8 = (0xD6A8)

UPT_D6A9 = (0xD6A9)

UPT_D6AA = (0xD6AA)

UPT_D6AB = (0xD6AB)

UPT_D6AC = (0xD6AC)

UPT_D6AD = (0xD6AD)

UPT_D6AE = (0xD6AE)

UPT_D6AF = (0xD6AF)

UPT_D6B0 = (0xD6B0)

UPT_D6B1 = (0xD6B1)

UPT_D6B2 = (0xD6B2)

UPT_D6B3 = (0xD6B3)

UPT_D6B4 = (0xD6B4)

UPT_D6B5 = (0xD6B5)

UPT_D6B6 = (0xD6B6)

UPT_D6B7 = (0xD6B7)

UPT_D6B8 = (0xD6B8)

UPT_D6B9 = (0xD6B9)

UPT_D6BA = (0xD6BA)

UPT_D6BB = (0xD6BB)

UPT_D6BC = (0xD6BC)

UPT_D6BD = (0xD6BD)

UPT_D6BE = (0xD6BE)

UPT_D6BF = (0xD6BF)

UPT_D6C0 = (0xD6C0)

UPT_D6C1 = (0xD6C1)

UPT_D6C2 = (0xD6C2)

UPT_D6C3 = (0xD6C3)

UPT_D6C4 = (0xD6C4)

UPT_D6C5 = (0xD6C5)

UPT_D6C6 = (0xD6C6)

UPT_D6C7 = (0xD6C7)

UPT_D6C8 = (0xD6C8)

UPT_D6C9 = (0xD6C9)

UPT_D6CA = (0xD6CA)

UPT_D6CB = (0xD6CB)

UPT_D6CC = (0xD6CC)

UPT_D6CD = (0xD6CD)

UPT_D6CE = (0xD6CE)

UPT_D6CF = (0xD6CF)

UPT_D6D0 = (0xD6D0)

UPT_D6D1 = (0xD6D1)

UPT_D6D2 = (0xD6D2)

UPT_D6D3 = (0xD6D3)

UPT_D6D4 = (0xD6D4)

UPT_D6D5 = (0xD6D5)

UPT_D6D6 = (0xD6D6)

UPT_D6D7 = (0xD6D7)

UPT_D6D8 = (0xD6D8)

UPT_D6D9 = (0xD6D9)

UPT_D6DA = (0xD6DA)

UPT_D6DB = (0xD6DB)

UPT_D6DC = (0xD6DC)

UPT_D6DD = (0xD6DD)

UPT_D6DE = (0xD6DE)

UPT_D6DF = (0xD6DF)

UPT_D6E0 = (0xD6E0)

UPT_D6E1 = (0xD6E1)

UPT_D6E2 = (0xD6E2)

UPT_D6E3 = (0xD6E3)

UPT_D6E4 = (0xD6E4)

UPT_D6E5 = (0xD6E5)

UPT_D6E6 = (0xD6E6)

UPT_D6E7 = (0xD6E7)

UPT_D6E8 = (0xD6E8)

UPT_D6E9 = (0xD6E9)

UPT_D6EA = (0xD6EA)

UPT_D6EB = (0xD6EB)

UPT_D6EC = (0xD6EC)

UPT_D6ED = (0xD6ED)

UPT_D6EE = (0xD6EE)

UPT_D6EF = (0xD6EF)

UPT_D6F0 = (0xD6F0)

UPT_D6F1 = (0xD6F1)

UPT_D6F2 = (0xD6F2)

UPT_D6F3 = (0xD6F3)

UPT_D6F4 = (0xD6F4)

UPT_D6F5 = (0xD6F5)

UPT_D6F6 = (0xD6F6)

UPT_D6F7 = (0xD6F7)

UPT_D6F8 = (0xD6F8)

UPT_D6F9 = (0xD6F9)

UPT_D6FA = (0xD6FA)

UPT_D6FB = (0xD6FB)

UPT_D6FC = (0xD6FC)

UPT_D6FD = (0xD6FD)

UPT_D6FE = (0xD6FE)

UPT_D6FF = (0xD6FF)

UPT_D700 = (0xD700)    --used

UPT_D701 = (0xD701)    --used

UPT_D702 = (0xD702)    --used

UPT_D703 = (0xD703)    --used

UPT_D704 = (0xD704)    --used  

UPT_D705 = (0xD705)    --used

UPT_D706 = (0xD706)    --used

UPT_D707 = (0xD707)    --used

UPT_D708 = (0xD708)    --used

UPT_D709 = (0xD709)    --used

UPT_D70A = (0xD70A)    --used

UPT_D70B = (0xD70B)    --used

UPT_D70C = (0xD70C)    --used

UPT_D70D = (0xD70D)    --used

UPT_D70E = (0xD70E)    --used

UPT_D70F = (0xD70F)    --used

UPT_D710 = (0xD710)    --used

UPT_D711 = (0xD711)    --used

UPT_D712 = (0xD712)    --used

UPT_D713 = (0xD713)    --used

UPT_D714 = (0xD714)    --used

UPT_D715 = (0xD715)    --used

UPT_D716 = (0xD716)    --used

UPT_D717 = (0xD717)    --used

UPT_D718 = (0xD718)    --used

UPT_D719 = (0xD719)    --used

UPT_D71A = (0xD71A)    --used

UPT_D71B = (0xD71B)    --used

UPT_D71C = (0xD71C)    --used

UPT_D71D = (0xD71D)    --used

UPT_D71E = (0xD71E)    --used

UPT_D71F = (0xD71F)    --used

UPT_D720 = (0xD720)   --used

UPT_D721 = (0xD721)   --used

UPT_D722 = (0xD722)   --used

UPT_D723 = (0xD723)   --used

UPT_D724 = (0xD724)    --used

UPT_D725 = (0xD725)   --used

UPT_D726 = (0xD726)   --used

UPT_D727 = (0xD727)   --used

UPT_D728 = (0xD728)   --used

UPT_D729 = (0xD729)   --used

UPT_D72A = (0xD72A)   --used

UPT_D72B = (0xD72B)   --used

UPT_D72C = (0xD72C)   --used

UPT_D72D = (0xD72D)   --used

UPT_D72E = (0xD72E)   --used

UPT_D72F = (0xD72F)   --used

UPT_D730 = (0xD730)   --used

UPT_D731 = (0xD731)   --used

UPT_D732 = (0xD732)   --used

UPT_D733 = (0xD733)   --used

UPT_D734 = (0xD734)   --used

UPT_D735 = (0xD735)   --used

UPT_D736 = (0xD736)   --used

UPT_D737 = (0xD737)   --used

UPT_D738 = (0xD738)   --used

UPT_D739 = (0xD739)   --used

UPT_D73A = (0xD73A)   --used

UPT_D73B = (0xD73B)   --used

UPT_D73C = (0xD73C)   --used

UPT_D73D = (0xD73D)   --used

UPT_D73E = (0xD73E)   --used

UPT_D73F = (0xD73F)   --used

UPT_D740 = (0xD740)     --used

UPT_D741 = (0xD741)     --used

UPT_D742 = (0xD742)     --used

UPT_D743 = (0xD743)     --used

UPT_D744 = (0xD744)     --used

UPT_D745 = (0xD745)     --used

UPT_D746 = (0xD746)     --used

UPT_D747 = (0xD747)     --used

UPT_D748 = (0xD748)     --used

UPT_D749 = (0xD749)     --used

UPT_D74A = (0xD74A)     --used

UPT_D74B = (0xD74B)     --used

UPT_D74C = (0xD74C)     --used

UPT_D74D = (0xD74D)     --used

UPT_D74E = (0xD74E)     --used

UPT_D74F = (0xD74F)     --used

UPT_D750 = (0xD750)     --used

UPT_D751 = (0xD751)     --used

UPT_D752 = (0xD752)     --used 

UPT_D753 = (0xD753)     --used

UPT_D754 = (0xD754)     --used

UPT_D755 = (0xD755)     --used

UPT_D756 = (0xD756)     --used

UPT_D757 = (0xD757)     --used

UPT_D758 = (0xD758)     --used

UPT_D759 = (0xD759)     --used

UPT_D75A = (0xD75A)     --used

UPT_D75B = (0xD75B)     --used

UPT_D75C = (0xD75C)     --used

UPT_D75D = (0xD75D)     --used

UPT_D75E = (0xD75E)     --used

UPT_D75F = (0xD75F)     --used

UPT_D760 = (0xD760)     --used

UPT_D761 = (0xD761)     --used  

UPT_D762 = (0xD762)     --used

UPT_D763 = (0xD763)     --used

UPT_D764 = (0xD764)     --used

UPT_D765 = (0xD765)     --used

UPT_D766 = (0xD766)     --used

UPT_D767 = (0xD767)     --used

UPT_D768 = (0xD768)     --used

UPT_D769 = (0xD769)     --used

UPT_D76A = (0xD76A)     --used

UPT_D76B = (0xD76B)     --used

UPT_D76C = (0xD76C)     --used

UPT_D76D = (0xD76D)     --used

UPT_D76E = (0xD76E)     --used

UPT_D76F = (0xD76F)     --used

UPT_D770 = (0xD770)     --used

UPT_D771 = (0xD771)     --used

UPT_D772 = (0xD772)     --used

UPT_D773 = (0xD773)     --used

UPT_D774 = (0xD774)     --used

UPT_D775 = (0xD775)     --used

UPT_D776 = (0xD776)     --used

UPT_D777 = (0xD777)     --used

UPT_D778 = (0xD778)     --used ll_in detail

UPT_D779 = (0xD779)     --used ll_out detail

UPT_D77A = (0xD77A)     --used le_ll_in opcode

UPT_D77B = (0xD77B)     --used le_ll_out opcode

UPT_D77C = (0xD77C)      --used

UPT_D77D = (0xD77D)      --used

UPT_D77E = (0xD77E)     --used

UPT_D77F = (0xD77F)

UPT_D780 = (0xD780)     --used

UPT_D781 = (0xD781)     --used

UPT_D782 = (0xD782)     --used

UPT_D783 = (0xD783)     --used

UPT_D784 = (0xD784)     --used

UPT_D785 = (0xD785)     --used

UPT_D786 = (0xD786)     --used

UPT_D787 = (0xD787)     --used

UPT_D788 = (0xD788)     --used

UPT_D789 = (0xD789)

UPT_D78A = (0xD78A)

UPT_D78B = (0xD78B)

UPT_D78C = (0xD78C)

UPT_D78D = (0xD78D)

UPT_D78E = (0xD78E)

UPT_D78F = (0xD78F)

UPT_D790 = (0xD790)         --detail log index

UPT_D791 = (0xD791)         --detail log output

UPT_D792 = (0xD792)         --detail log output

UPT_D793 = (0xD793)         --detail log output

UPT_D794 = (0xD794)

UPT_D795 = (0xD795)

UPT_D796 = (0xD796)

UPT_D797 = (0xD797)

UPT_D798 = (0xD798)

UPT_D799 = (0xD799)

UPT_D79A = (0xD79A)

UPT_D79B = (0xD79B)

UPT_D79C = (0xD79C)

UPT_D79D = (0xD79D)

UPT_D79E = (0xD79E)

UPT_D79F = (0xD79F)

UPT_D7A0 = (0xD7A0)     --le slave latency

UPT_D7A1 = (0xD7A1)     --le slave latency

UPT_D7A2 = (0xD7A2)     --le slave latency

UPT_D7A3 = (0xD7A3)     --le slave latency

UPT_D7A4 = (0xD7A4)     --le slave latency

UPT_D7A5 = (0xD7A5)

UPT_D7A6 = (0xD7A6)

UPT_D7A7 = (0xD7A7)

UPT_D7A8 = (0xD7A8)

UPT_D7A9 = (0xD7A9)

UPT_D7AA = (0xD7AA)     --used

UPT_D7AB = (0xD7AB)     --used

UPT_D7AC = (0xD7AC)     --used

UPT_D7AD = (0xD7AD)     --used

UPT_D7AE = (0xD7AE)     --used

UPT_D7AF = (0xD7AF)

UPT_D7B0 = (0xD7B0)

UPT_D7B1 = (0xD7B1)

UPT_D7B2 = (0xD7B2)

UPT_D7B3 = (0xD7B3)

UPT_D7B4 = (0xD7B4)

UPT_D7B5 = (0xD7B5)

UPT_D7B6 = (0xD7B6)

UPT_D7B7 = (0xD7B7)

UPT_D7B8 = (0xD7B8)

UPT_D7B9 = (0xD7B9)

UPT_D7BA = (0xD7BA)

UPT_D7BB = (0xD7BB)

UPT_D7BC = (0xD7BC)

UPT_D7BD = (0xD7BD)

UPT_D7BE = (0xD7BE)

UPT_D7BF = (0xD7BF)

UPT_D7C0 = (0xD7C0)     --used

UPT_D7C1 = (0xD7C1)     --used

UPT_D7C2 = (0xD7C2)     --used

UPT_D7C3 = (0xD7C3)     --used

UPT_D7C4 = (0xD7C4)     --used

UPT_D7C5 = (0xD7C5)     --used

UPT_D7C6 = (0xD7C6)     --used

UPT_D7C7 = (0xD7C7)     --used

UPT_D7C8 = (0xD7C8)     --used

UPT_D7C9 = (0xD7C9)     --used

UPT_D7CA = (0xD7CA)     --used

UPT_D7CB = (0xD7CB)     --used

UPT_D7CC = (0xD7CC)     --used

UPT_D7CD = (0xD7CD)

UPT_D7CE = (0xD7CE)     --used

UPT_D7CF = (0xD7CF)

UPT_D7D0 = (0xD7D0)

UPT_D7D1 = (0xD7D1)     --used

UPT_D7D2 = (0xD7D2)     --used

UPT_D7D3 = (0xD7D3)     --used

UPT_D7D4 = (0xD7D4)     --used

UPT_D7D5 = (0xD7D5)

UPT_D7D6 = (0xD7D6)

UPT_D7D7 = (0xD7D7)

UPT_D7D8 = (0xD7D8)

UPT_D7D9 = (0xD7D9)

UPT_D7DA = (0xD7DA)

UPT_D7DB = (0xD7DB)

UPT_D7DC = (0xD7DC)

UPT_D7DD = (0xD7DD)     --used

UPT_D7DE = (0xD7DE)

UPT_D7DF = (0xD7DF)

UPT_D7E0 = (0xD7E0)

UPT_D7E1 = (0xD7E1)

UPT_D7E2 = (0xD7E2)

UPT_D7E3 = (0xD7E3)

UPT_D7E4 = (0xD7E4)

UPT_D7E5 = (0xD7E5)

UPT_D7E6 = (0xD7E6)

UPT_D7E7 = (0xD7E7)

UPT_D7E8 = (0xD7E8)

UPT_D7E9 = (0xD7E9)

UPT_D7EA = (0xD7EA)

UPT_D7EB = (0xD7EB)

UPT_D7EC = (0xD7EC)

UPT_D7ED = (0xD7ED)

UPT_D7EE = (0xD7EE)

UPT_D7EF = (0xD7EF)

UPT_D7F0 = (0xD7F0)

UPT_D7F1 = (0xD7F1)

UPT_D7F2 = (0xD7F2)

UPT_D7F3 = (0xD7F3)

UPT_D7F4 = (0xD7F4)

UPT_D7F5 = (0xD7F5)

UPT_D7F6 = (0xD7F6)

UPT_D7F7 = (0xD7F7)

UPT_D7F8 = (0xD7F8)

UPT_D7F9 = (0xD7F9)

UPT_D7FA = (0xD7FA)   --used

UPT_D7FB = (0xD7FB)   --used

UPT_D7FC = (0xD7FC)   --BLE error trace -error value

UPT_D7FD = (0xD7FD)   --BLE error trace -error value

UPT_D7FE = (0xD7FE)   --BLE error trace -error value

UPT_D7FF = (0xD7FF)   --BLE error trace -error testponit

UPT_D800 = (0xD800)   -- used */

UPT_D801 = (0xD801)   -- used */

UPT_D802 = (0xD802)   -- used */

UPT_D803 = (0xD803)   -- used */

UPT_D804 = (0xD804)   -- used */

UPT_D805 = (0xD805)   -- used */

UPT_D806 = (0xD806)   -- used */

UPT_D807 = (0xD807)   -- used */

UPT_D808 = (0xD808)   -- used */

UPT_D809 = (0xD809)   -- used */

UPT_D80A = (0xD80A)   -- used */

UPT_D80B = (0xD80B)

UPT_D80C = (0xD80C)

UPT_D80D = (0xD80D)   -- used */

UPT_D80E = (0xD80E)   -- used */

UPT_D80F = (0xD80F)   -- used */

UPT_D810 = (0xD810)   -- used */

UPT_D811 = (0xD811)   -- used */

UPT_D812 = (0xD812)   -- used */

UPT_D813 = (0xD813)   -- used */

UPT_D814 = (0xD814)   -- used */

UPT_D815 = (0xD815)   -- used */

UPT_D816 = (0xD816)   -- used */

UPT_D817 = (0xD817)   -- used */

UPT_D818 = (0xD818)   -- used */

UPT_D819 = (0xD819)   -- used */

UPT_D81A = (0xD81A)   -- used */

UPT_D81B = (0xD81B)   -- used */

UPT_D81C = (0xD81C)   -- used */

UPT_D81D = (0xD81D)   -- used */

UPT_D81E = (0xD81E)   -- used */

UPT_D81F = (0xD81F)   -- used */

UPT_D820 = (0xD820)   -- used */

UPT_D821 = (0xD821)   -- used */

UPT_D822 = (0xD822)   -- used */

UPT_D823 = (0xD823)   -- used */

UPT_D824 = (0xD824)   -- used */

UPT_D825 = (0xD825)   -- used */

UPT_D826 = (0xD826)   -- used */

UPT_D827 = (0xD827)   -- used */

UPT_D828 = (0xD828)   -- used */

UPT_D829 = (0xD829)   -- used */

UPT_D82A = (0xD82A)   -- used */

UPT_D82B = (0xD82B)   -- used */

UPT_D82C = (0xD82C)   -- used */

UPT_D82D = (0xD82D)   -- used */

UPT_D82E = (0xD82E)   -- used */

UPT_D82F = (0xD82F)   -- used */

UPT_D830 = (0xD830)   -- used */

UPT_D831 = (0xD831)   -- used */

UPT_D832 = (0xD832)   -- used */

UPT_D833 = (0xD833)   -- used */

UPT_D834 = (0xD834)   -- used */

UPT_D835 = (0xD835)   -- used */

UPT_D836 = (0xD836)   -- used */

UPT_D837 = (0xD837)   --used*/

UPT_D838 = (0xD838)   --used*/

UPT_D839 = (0xD839)   --used*/

UPT_D83A = (0xD83A)

UPT_D83B = (0xD83B)

UPT_D83C = (0xD83C)

UPT_D83D = (0xD83D)

UPT_D83E = (0xD83E)

UPT_D83F = (0xD83F)

UPT_D840 = (0xD840)

UPT_D841 = (0xD841)

UPT_D842 = (0xD842)

UPT_D843 = (0xD843)

UPT_D844 = (0xD844)

UPT_D845 = (0xD845)

UPT_D846 = (0xD846)

UPT_D847 = (0xD847)

UPT_D848 = (0xD848)

UPT_D849 = (0xD849)

UPT_D84A = (0xD84A)

UPT_D84B = (0xD84B)

UPT_D84C = (0xD84C)

UPT_D84D = (0xD84D)

UPT_D84E = (0xD84E)

UPT_D84F = (0xD84F)

UPT_D850 = (0xD850)

UPT_D851 = (0xD851)

UPT_D852 = (0xD852)

UPT_D853 = (0xD853)

UPT_D854 = (0xD854)

UPT_D855 = (0xD855)

UPT_D856 = (0xD856)

UPT_D857 = (0xD857)

UPT_D858 = (0xD858)

UPT_D859 = (0xD859)

UPT_D85A = (0xD85A)

UPT_D85B = (0xD85B)

UPT_D85C = (0xD85C)

UPT_D85D = (0xD85D)

UPT_D85E = (0xD85E)

UPT_D85F = (0xD85F)

UPT_D860 = (0xD860)

UPT_D861 = (0xD861)

UPT_D862 = (0xD862)

UPT_D863 = (0xD863)

UPT_D864 = (0xD864)

UPT_D865 = (0xD865)

UPT_D866 = (0xD866)

UPT_D867 = (0xD867)

UPT_D868 = (0xD868)

UPT_D869 = (0xD869)

UPT_D86A = (0xD86A)

UPT_D86B = (0xD86B)

UPT_D86C = (0xD86C)

UPT_D86D = (0xD86D)

UPT_D86E = (0xD86E)

UPT_D86F = (0xD86F)

UPT_D870 = (0xD870)

UPT_D871 = (0xD871)

UPT_D872 = (0xD872)

UPT_D873 = (0xD873)

UPT_D874 = (0xD874)

UPT_D875 = (0xD875)

UPT_D876 = (0xD876)

UPT_D877 = (0xD877)

UPT_D878 = (0xD878)

UPT_D879 = (0xD879)

UPT_D87A = (0xD87A)

UPT_D87B = (0xD87B)

UPT_D87C = (0xD87C)

UPT_D87D = (0xD87D)

UPT_D87E = (0xD87E)

UPT_D87F = (0xD87F)

UPT_D880 = (0xD880)

UPT_D881 = (0xD881)

UPT_D882 = (0xD882)

UPT_D883 = (0xD883)

UPT_D884 = (0xD884)

UPT_D885 = (0xD885)

UPT_D886 = (0xD886)

UPT_D887 = (0xD887)

UPT_D888 = (0xD888)

UPT_D889 = (0xD889)

UPT_D88A = (0xD88A)

UPT_D88B = (0xD88B)

UPT_D88C = (0xD88C)

UPT_D88D = (0xD88D)

UPT_D88E = (0xD88E)

UPT_D88F = (0xD88F)

UPT_D890 = (0xD890)

UPT_D891 = (0xD891)

UPT_D892 = (0xD892)

UPT_D893 = (0xD893)

UPT_D894 = (0xD894)

UPT_D895 = (0xD895)

UPT_D896 = (0xD896)

UPT_D897 = (0xD897)

UPT_D898 = (0xD898)

UPT_D899 = (0xD899)

UPT_D89A = (0xD89A)

UPT_D89B = (0xD89B)

UPT_D89C = (0xD89C)

UPT_D89D = (0xD89D)

UPT_D89E = (0xD89E)

UPT_D89F = (0xD89F)

UPT_D8A0 = (0xD8A0)   -- used */

UPT_D8A1 = (0xD8A1)

UPT_D8A2 = (0xD8A2)   -- used */

UPT_D8A3 = (0xD8A3)   -- used */

UPT_D8A4 = (0xD8A4)   --used

UPT_D8A5 = (0xD8A5)   --used

UPT_D8A6 = (0xD8A6)

UPT_D8A7 = (0xD8A7)

UPT_D8A8 = (0xD8A8)

UPT_D8A9 = (0xD8A9)

UPT_D8AA = (0xD8AA)

UPT_D8AB = (0xD8AB)

UPT_D8AC = (0xD8AC)

UPT_D8AD = (0xD8AD)

UPT_D8AE = (0xD8AE)

UPT_D8AF = (0xD8AF)

UPT_D8B0 = (0xD8B0)  --used

UPT_D8B1 = (0xD8B1)  --used

UPT_D8B2 = (0xD8B2)  --used

UPT_D8B3 = (0xD8B3)  --used

UPT_D8B4 = (0xD8B4)  --used

UPT_D8B5 = (0xD8B5)  --used

UPT_D8B6 = (0xD8B6)

UPT_D8B7 = (0xD8B7)

UPT_D8B8 = (0xD8B8)

UPT_D8B9 = (0xD8B9)

UPT_D8BA = (0xD8BA)

UPT_D8BB = (0xD8BB)

UPT_D8BC = (0xD8BC)

UPT_D8BD = (0xD8BD)

UPT_D8BE = (0xD8BE)

UPT_D8BF = (0xD8BF)

UPT_D8C0 = (0xD8C0)

UPT_D8C1 = (0xD8C1)

UPT_D8C2 = (0xD8C2)

UPT_D8C3 = (0xD8C3)

UPT_D8C4 = (0xD8C4)

UPT_D8C5 = (0xD8C5)

UPT_D8C6 = (0xD8C6)

UPT_D8C7 = (0xD8C7)

UPT_D8C8 = (0xD8C8)

UPT_D8C9 = (0xD8C9)

UPT_D8CA = (0xD8CA)

UPT_D8CB = (0xD8CB)

UPT_D8CC = (0xD8CC)

UPT_D8CD = (0xD8CD)

UPT_D8CE = (0xD8CE)

UPT_D8CF = (0xD8CF)

UPT_D8D0 = (0xD8D0)

UPT_D8D1 = (0xD8D1)

UPT_D8D2 = (0xD8D2)

UPT_D8D3 = (0xD8D3)

UPT_D8D4 = (0xD8D4)

UPT_D8D5 = (0xD8D5)

UPT_D8D6 = (0xD8D6)

UPT_D8D7 = (0xD8D7)

UPT_D8D8 = (0xD8D8)

UPT_D8D9 = (0xD8D9)

UPT_D8DA = (0xD8DA)

UPT_D8DB = (0xD8DB)

UPT_D8DC = (0xD8DC)

UPT_D8DD = (0xD8DD)

UPT_D8DE = (0xD8DE)

UPT_D8DF = (0xD8DF)

UPT_D8E0 = (0xD8E0)

UPT_D8E1 = (0xD8E1)

UPT_D8E2 = (0xD8E2)

UPT_D8E3 = (0xD8E3)

UPT_D8E4 = (0xD8E4)

UPT_D8E5 = (0xD8E5)

UPT_D8E6 = (0xD8E6)

UPT_D8E7 = (0xD8E7)

UPT_D8E8 = (0xD8E8)

UPT_D8E9 = (0xD8E9)

UPT_D8EA = (0xD8EA)

UPT_D8EB = (0xD8EB)

UPT_D8EC = (0xD8EC)

UPT_D8ED = (0xD8ED)

UPT_D8EE = (0xD8EE)

UPT_D8EF = (0xD8EF)

UPT_D8F0 = (0xD8F0)

UPT_D8F1 = (0xD8F1)

UPT_D8F2 = (0xD8F2)

UPT_D8F3 = (0xD8F3)

UPT_D8F4 = (0xD8F4)

UPT_D8F5 = (0xD8F5)

UPT_D8F6 = (0xD8F6)

UPT_D8F7 = (0xD8F7)

UPT_D8F8 = (0xD8F8)

UPT_D8F9 = (0xD8F9)

UPT_D8FA = (0xD8FA)

UPT_D8FB = (0xD8FB)

UPT_D8FC = (0xD8FC)

UPT_D8FD = (0xD8FD)

UPT_D8FE = (0xD8FE)

UPT_D8FF = (0xD8FF)

UPT_D900 = (0xD900)

UPT_D901 = (0xD901)

UPT_D902 = (0xD902)

UPT_D903 = (0xD903)

UPT_D904 = (0xD904)

UPT_D905 = (0xD905)

UPT_D906 = (0xD906)

UPT_D907 = (0xD907)

UPT_D908 = (0xD908)

UPT_D909 = (0xD909)

UPT_D90A = (0xD90A)

UPT_D90B = (0xD90B)

UPT_D90C = (0xD90C)

UPT_D90D = (0xD90D)   -- used

UPT_D90E = (0xD90E)

UPT_D90F = (0xD90F)

UPT_D910 = (0xD910)

UPT_D911 = (0xD911)

UPT_D912 = (0xD912)

UPT_D913 = (0xD913)

UPT_D914 = (0xD914)

UPT_D915 = (0xD915)

UPT_D916 = (0xD916)

UPT_D917 = (0xD917)  -- used

UPT_D918 = (0xD918)  -- used

UPT_D919 = (0xD919)

UPT_D91A = (0xD91A)

UPT_D91B = (0xD91B)

UPT_D91C = (0xD91C)

UPT_D91D = (0xD91D)

UPT_D91E = (0xD91E)

UPT_D91F = (0xD91F)

UPT_D920 = (0xD920)

UPT_D921 = (0xD921)

UPT_D922 = (0xD922)

UPT_D923 = (0xD923)

UPT_D924 = (0xD924)

UPT_D925 = (0xD925)

UPT_D926 = (0xD926)

UPT_D927 = (0xD927)

UPT_D928 = (0xD928)

UPT_D929 = (0xD929)

UPT_D92A = (0xD92A)

UPT_D92B = (0xD92B)

UPT_D92C = (0xD92C)

UPT_D92D = (0xD92D)

UPT_D92E = (0xD92E)

UPT_D92F = (0xD92F)

UPT_D930 = (0xD930)

UPT_D931 = (0xD931)

UPT_D932 = (0xD932)

UPT_D933 = (0xD933)

UPT_D934 = (0xD934)

UPT_D935 = (0xD935)

UPT_D936 = (0xD936)

UPT_D937 = (0xD937)

UPT_D938 = (0xD938)

UPT_D939 = (0xD939)

UPT_D93A = (0xD93A)

UPT_D93B = (0xD93B)

UPT_D93C = (0xD93C)

UPT_D93D = (0xD93D)

UPT_D93E = (0xD93E)

UPT_D93F = (0xD93F)

UPT_D940 = (0xD940)

UPT_D941 = (0xD941)

UPT_D942 = (0xD942)

UPT_D943 = (0xD943)

UPT_D944 = (0xD944)

UPT_D945 = (0xD945)

UPT_D946 = (0xD946)

UPT_D947 = (0xD947)

UPT_D948 = (0xD948)

UPT_D949 = (0xD949)

UPT_D94A = (0xD94A)

UPT_D94B = (0xD94B)

UPT_D94C = (0xD94C)

UPT_D94D = (0xD94D)

UPT_D94E = (0xD94E)

UPT_D94F = (0xD94F)

UPT_D950 = (0xD950)

UPT_D951 = (0xD951)

UPT_D952 = (0xD952)

UPT_D953 = (0xD953)

UPT_D954 = (0xD954)

UPT_D955 = (0xD955)

UPT_D956 = (0xD956)

UPT_D957 = (0xD957)

UPT_D958 = (0xD958)

UPT_D959 = (0xD959)

UPT_D95A = (0xD95A)

UPT_D95B = (0xD95B)

UPT_D95C = (0xD95C)

UPT_D95D = (0xD95D)

UPT_D95E = (0xD95E)

UPT_D95F = (0xD95F)

UPT_D960 = (0xD960)

UPT_D961 = (0xD961)

UPT_D962 = (0xD962)

UPT_D963 = (0xD963)

UPT_D964 = (0xD964)

UPT_D965 = (0xD965)

UPT_D966 = (0xD966)

UPT_D967 = (0xD967)

UPT_D968 = (0xD968)

UPT_D969 = (0xD969)

UPT_D96A = (0xD96A)

UPT_D96B = (0xD96B)

UPT_D96C = (0xD96C)

UPT_D96D = (0xD96D)

UPT_D96E = (0xD96E)

UPT_D96F = (0xD96F)

UPT_D970 = (0xD970)

UPT_D971 = (0xD971)

UPT_D972 = (0xD972)

UPT_D973 = (0xD973)

UPT_D974 = (0xD974)

UPT_D975 = (0xD975)

UPT_D976 = (0xD976)

UPT_D977 = (0xD977)

UPT_D978 = (0xD978)

UPT_D979 = (0xD979)

UPT_D97A = (0xD97A)

UPT_D97B = (0xD97B)

UPT_D97C = (0xD97C)

UPT_D97D = (0xD97D)

UPT_D97E = (0xD97E)

UPT_D97F = (0xD97F)

UPT_D980 = (0xD980)

UPT_D981 = (0xD981)

UPT_D982 = (0xD982)

UPT_D983 = (0xD983)

UPT_D984 = (0xD984)

UPT_D985 = (0xD985)

UPT_D986 = (0xD986)

UPT_D987 = (0xD987)

UPT_D988 = (0xD988)

UPT_D989 = (0xD989)

UPT_D98A = (0xD98A)

UPT_D98B = (0xD98B)

UPT_D98C = (0xD98C)

UPT_D98D = (0xD98D)

UPT_D98E = (0xD98E)

UPT_D98F = (0xD98F)

UPT_D990 = (0xD990)

UPT_D991 = (0xD991)

UPT_D992 = (0xD992)

UPT_D993 = (0xD993)

UPT_D994 = (0xD994)

UPT_D995 = (0xD995)

UPT_D996 = (0xD996)

UPT_D997 = (0xD997)

UPT_D998 = (0xD998)

UPT_D999 = (0xD999)

UPT_D99A = (0xD99A)

UPT_D99B = (0xD99B)

UPT_D99C = (0xD99C)

UPT_D99D = (0xD99D)

UPT_D99E = (0xD99E)

UPT_D99F = (0xD99F)

UPT_D9A0 = (0xD9A0)

UPT_D9A1 = (0xD9A1)

UPT_D9A2 = (0xD9A2)

UPT_D9A3 = (0xD9A3)

UPT_D9A4 = (0xD9A4)

UPT_D9A5 = (0xD9A5)

UPT_D9A6 = (0xD9A6)

UPT_D9A7 = (0xD9A7)

UPT_D9A8 = (0xD9A8)

UPT_D9A9 = (0xD9A9)

UPT_D9AA = (0xD9AA)

UPT_D9AB = (0xD9AB)

UPT_D9AC = (0xD9AC)

UPT_D9AD = (0xD9AD)

UPT_D9AE = (0xD9AE)

UPT_D9AF = (0xD9AF)

UPT_D9B0 = (0xD9B0)

UPT_D9B1 = (0xD9B1)

UPT_D9B2 = (0xD9B2)

UPT_D9B3 = (0xD9B3)

UPT_D9B4 = (0xD9B4)

UPT_D9B5 = (0xD9B5)

UPT_D9B6 = (0xD9B6)

UPT_D9B7 = (0xD9B7)

UPT_D9B8 = (0xD9B8)

UPT_D9B9 = (0xD9B9)

UPT_D9BA = (0xD9BA)

UPT_D9BB = (0xD9BB)

UPT_D9BC = (0xD9BC)

UPT_D9BD = (0xD9BD)

UPT_D9BE = (0xD9BE)

UPT_D9BF = (0xD9BF)

UPT_D9C0 = (0xD9C0)

UPT_D9C1 = (0xD9C1)

UPT_D9C2 = (0xD9C2)

UPT_D9C3 = (0xD9C3)

UPT_D9C4 = (0xD9C4)

UPT_D9C5 = (0xD9C5)

UPT_D9C6 = (0xD9C6)

UPT_D9C7 = (0xD9C7)

UPT_D9C8 = (0xD9C8)

UPT_D9C9 = (0xD9C9)

UPT_D9CA = (0xD9CA)

UPT_D9CB = (0xD9CB)

UPT_D9CC = (0xD9CC)

UPT_D9CD = (0xD9CD)

UPT_D9CE = (0xD9CE)

UPT_D9CF = (0xD9CF)

UPT_D9D0 = (0xD9D0)

UPT_D9D1 = (0xD9D1)

UPT_D9D2 = (0xD9D2)

UPT_D9D3 = (0xD9D3)

UPT_D9D4 = (0xD9D4)

UPT_D9D5 = (0xD9D5)

UPT_D9D6 = (0xD9D6)

UPT_D9D7 = (0xD9D7)

UPT_D9D8 = (0xD9D8)

UPT_D9D9 = (0xD9D9)

UPT_D9DA = (0xD9DA)

UPT_D9DB = (0xD9DB)

UPT_D9DC = (0xD9DC)

UPT_D9DD = (0xD9DD)

UPT_D9DE = (0xD9DE)

UPT_D9DF = (0xD9DF)

UPT_D9E0 = (0xD9E0)

UPT_D9E1 = (0xD9E1)

UPT_D9E2 = (0xD9E2)

UPT_D9E3 = (0xD9E3)

UPT_D9E4 = (0xD9E4)

UPT_D9E5 = (0xD9E5)

UPT_D9E6 = (0xD9E6)

UPT_D9E7 = (0xD9E7)

UPT_D9E8 = (0xD9E8)

UPT_D9E9 = (0xD9E9)

UPT_D9EA = (0xD9EA)

UPT_D9EB = (0xD9EB)

UPT_D9EC = (0xD9EC)

UPT_D9ED = (0xD9ED)

UPT_D9EE = (0xD9EE)

UPT_D9EF = (0xD9EF)

UPT_D9F0 = (0xD9F0)  --used

UPT_D9F1 = (0xD9F1)  --used

UPT_D9F2 = (0xD9F2)

UPT_D9F3 = (0xD9F3)

UPT_D9F4 = (0xD9F4)

UPT_D9F5 = (0xD9F5)

UPT_D9F6 = (0xD9F6)

UPT_D9F7 = (0xD9F7)

UPT_D9F8 = (0xD9F8)

UPT_D9F9 = (0xD9F9)

UPT_D9FA = (0xD9FA)

UPT_D9FB = (0xD9FB)

UPT_D9FC = (0xD9FC)

UPT_D9FD = (0xD9FD)

UPT_D9FE = (0xD9FE)

UPT_D9FF = (0xD9FF)

UPT_DA00 = (0xDA00)

UPT_DA01 = (0xDA01)

UPT_DA02 = (0xDA02)

UPT_DA03 = (0xDA03)

UPT_DA04 = (0xDA04)

UPT_DA05 = (0xDA05)

UPT_DA06 = (0xDA06)

UPT_DA07 = (0xDA07)

UPT_DA08 = (0xDA08)

UPT_DA09 = (0xDA09)

UPT_DA0A = (0xDA0A)

UPT_DA0B = (0xDA0B)

UPT_DA0C = (0xDA0C)

UPT_DA0D = (0xDA0D)

UPT_DA0E = (0xDA0E)

UPT_DA0F = (0xDA0F)

UPT_DA10 = (0xDA10)

UPT_DA11 = (0xDA11)

UPT_DA12 = (0xDA12)

UPT_DA13 = (0xDA13)

UPT_DA14 = (0xDA14)

UPT_DA15 = (0xDA15)

UPT_DA16 = (0xDA16)

UPT_DA17 = (0xDA17)

UPT_DA18 = (0xDA18)

UPT_DA19 = (0xDA19)

UPT_DA1A = (0xDA1A)

UPT_DA1B = (0xDA1B)

UPT_DA1C = (0xDA1C)

UPT_DA1D = (0xDA1D)

UPT_DA1E = (0xDA1E)

UPT_DA1F = (0xDA1F)

UPT_DA20 = (0xDA20)

UPT_DA21 = (0xDA21)

UPT_DA22 = (0xDA22)

UPT_DA23 = (0xDA23)

UPT_DA24 = (0xDA24)

UPT_DA25 = (0xDA25)

UPT_DA26 = (0xDA26)

UPT_DA27 = (0xDA27)

UPT_DA28 = (0xDA28)

UPT_DA29 = (0xDA29)

UPT_DA2A = (0xDA2A)

UPT_DA2B = (0xDA2B)

UPT_DA2C = (0xDA2C)

UPT_DA2D = (0xDA2D)

UPT_DA2E = (0xDA2E)

UPT_DA2F = (0xDA2F)

UPT_DA30 = (0xDA30)

UPT_DA31 = (0xDA31)

UPT_DA32 = (0xDA32)

UPT_DA33 = (0xDA33)

UPT_DA34 = (0xDA34)

UPT_DA35 = (0xDA35)

UPT_DA36 = (0xDA36)

UPT_DA37 = (0xDA37)

UPT_DA38 = (0xDA38)

UPT_DA39 = (0xDA39)

UPT_DA3A = (0xDA3A)

UPT_DA3B = (0xDA3B)

UPT_DA3C = (0xDA3C)

UPT_DA3D = (0xDA3D)

UPT_DA3E = (0xDA3E)

UPT_DA3F = (0xDA3F)

UPT_DA40 = (0xDA40)

UPT_DA41 = (0xDA41)

UPT_DA42 = (0xDA42)

UPT_DA43 = (0xDA43)

UPT_DA44 = (0xDA44)

UPT_DA45 = (0xDA45)

UPT_DA46 = (0xDA46)

UPT_DA47 = (0xDA47)

UPT_DA48 = (0xDA48)

UPT_DA49 = (0xDA49)

UPT_DA4A = (0xDA4A)

UPT_DA4B = (0xDA4B)

UPT_DA4C = (0xDA4C)

UPT_DA4D = (0xDA4D)

UPT_DA4E = (0xDA4E)

UPT_DA4F = (0xDA4F)

UPT_DA50 = (0xDA50)

UPT_DA51 = (0xDA51)

UPT_DA52 = (0xDA52)

UPT_DA53 = (0xDA53)

UPT_DA54 = (0xDA54)

UPT_DA55 = (0xDA55)

UPT_DA56 = (0xDA56)

UPT_DA57 = (0xDA57)

UPT_DA58 = (0xDA58)

UPT_DA59 = (0xDA59)

UPT_DA5A = (0xDA5A)

UPT_DA5B = (0xDA5B)

UPT_DA5C = (0xDA5C)

UPT_DA5D = (0xDA5D)

UPT_DA5E = (0xDA5E)

UPT_DA5F = (0xDA5F)

UPT_DA60 = (0xDA60)

UPT_DA61 = (0xDA61)

UPT_DA62 = (0xDA62)

UPT_DA63 = (0xDA63)

UPT_DA64 = (0xDA64)

UPT_DA65 = (0xDA65)

UPT_DA66 = (0xDA66)

UPT_DA67 = (0xDA67)

UPT_DA68 = (0xDA68)

UPT_DA69 = (0xDA69)

UPT_DA6A = (0xDA6A)

UPT_DA6B = (0xDA6B)

UPT_DA6C = (0xDA6C)

UPT_DA6D = (0xDA6D)

UPT_DA6E = (0xDA6E)

UPT_DA6F = (0xDA6F)

UPT_DA70 = (0xDA70)

UPT_DA71 = (0xDA71)

UPT_DA72 = (0xDA72)

UPT_DA73 = (0xDA73)

UPT_DA74 = (0xDA74)

UPT_DA75 = (0xDA75)

UPT_DA76 = (0xDA76)

UPT_DA77 = (0xDA77)

UPT_DA78 = (0xDA78)

UPT_DA79 = (0xDA79)

UPT_DA7A = (0xDA7A)

UPT_DA7B = (0xDA7B)

UPT_DA7C = (0xDA7C)

UPT_DA7D = (0xDA7D)

UPT_DA7E = (0xDA7E)

UPT_DA7F = (0xDA7F)

UPT_DA80 = (0xDA80)

UPT_DA81 = (0xDA81)

UPT_DA82 = (0xDA82)

UPT_DA83 = (0xDA83)

UPT_DA84 = (0xDA84)

UPT_DA85 = (0xDA85)

UPT_DA86 = (0xDA86)

UPT_DA87 = (0xDA87)

UPT_DA88 = (0xDA88)

UPT_DA89 = (0xDA89)

UPT_DA8A = (0xDA8A)

UPT_DA8B = (0xDA8B)

UPT_DA8C = (0xDA8C)

UPT_DA8D = (0xDA8D)

UPT_DA8E = (0xDA8E)

UPT_DA8F = (0xDA8F)

UPT_DA90 = (0xDA90)

UPT_DA91 = (0xDA91)

UPT_DA92 = (0xDA92)

UPT_DA93 = (0xDA93)

UPT_DA94 = (0xDA94)

UPT_DA95 = (0xDA95)

UPT_DA96 = (0xDA96)

UPT_DA97 = (0xDA97)

UPT_DA98 = (0xDA98)

UPT_DA99 = (0xDA99)

UPT_DA9A = (0xDA9A)

UPT_DA9B = (0xDA9B)

UPT_DA9C = (0xDA9C)

UPT_DA9D = (0xDA9D)

UPT_DA9E = (0xDA9E)

UPT_DA9F = (0xDA9F)

UPT_DAA0 = (0xDAA0)

UPT_DAA1 = (0xDAA1)

UPT_DAA2 = (0xDAA2)

UPT_DAA3 = (0xDAA3)

UPT_DAA4 = (0xDAA4)

UPT_DAA5 = (0xDAA5)

UPT_DAA6 = (0xDAA6)

UPT_DAA7 = (0xDAA7)

UPT_DAA8 = (0xDAA8)

UPT_DAA9 = (0xDAA9)

UPT_DAAA = (0xDAAA)

UPT_DAAB = (0xDAAB)

UPT_DAAC = (0xDAAC)

UPT_DAAD = (0xDAAD)

UPT_DAAE = (0xDAAE)

UPT_DAAF = (0xDAAF)

UPT_DAB0 = (0xDAB0)

UPT_DAB1 = (0xDAB1)

UPT_DAB2 = (0xDAB2)

UPT_DAB3 = (0xDAB3)

UPT_DAB4 = (0xDAB4)

UPT_DAB5 = (0xDAB5)

UPT_DAB6 = (0xDAB6)

UPT_DAB7 = (0xDAB7)

UPT_DAB8 = (0xDAB8)

UPT_DAB9 = (0xDAB9)

UPT_DABA = (0xDABA)

UPT_DABB = (0xDABB)

UPT_DABC = (0xDABC)

UPT_DABD = (0xDABD)

UPT_DABE = (0xDABE)

UPT_DABF = (0xDABF)

UPT_DAC0 = (0xDAC0)

UPT_DAC1 = (0xDAC1)

UPT_DAC2 = (0xDAC2)

UPT_DAC3 = (0xDAC3)

UPT_DAC4 = (0xDAC4)

UPT_DAC5 = (0xDAC5)

UPT_DAC6 = (0xDAC6)

UPT_DAC7 = (0xDAC7)

UPT_DAC8 = (0xDAC8)

UPT_DAC9 = (0xDAC9)

UPT_DACA = (0xDACA)

UPT_DACB = (0xDACB)

UPT_DACC = (0xDACC)

UPT_DACD = (0xDACD)

UPT_DACE = (0xDACE)

UPT_DACF = (0xDACF)

UPT_DAD0 = (0xDAD0)

UPT_DAD1 = (0xDAD1)

UPT_DAD2 = (0xDAD2)

UPT_DAD3 = (0xDAD3)

UPT_DAD4 = (0xDAD4)

UPT_DAD5 = (0xDAD5)

UPT_DAD6 = (0xDAD6)

UPT_DAD7 = (0xDAD7)

UPT_DAD8 = (0xDAD8)

UPT_DAD9 = (0xDAD9)

UPT_DADA = (0xDADA)

UPT_DADB = (0xDADB)

UPT_DADC = (0xDADC)

UPT_DADD = (0xDADD)

UPT_DADE = (0xDADE)

UPT_DADF = (0xDADF)

UPT_DAE0 = (0xDAE0)

UPT_DAE1 = (0xDAE1)

UPT_DAE2 = (0xDAE2)

UPT_DAE3 = (0xDAE3)

UPT_DAE4 = (0xDAE4)

UPT_DAE5 = (0xDAE5)

UPT_DAE6 = (0xDAE6)

UPT_DAE7 = (0xDAE7)

UPT_DAE8 = (0xDAE8)

UPT_DAE9 = (0xDAE9)

UPT_DAEA = (0xDAEA)

UPT_DAEB = (0xDAEB)

UPT_DAEC = (0xDAEC)

UPT_DAED = (0xDAED)

UPT_DAEE = (0xDAEE)

UPT_DAEF = (0xDAEF)

UPT_DAF0 = (0xDAF0)

UPT_DAF1 = (0xDAF1)

UPT_DAF2 = (0xDAF2)

UPT_DAF3 = (0xDAF3)

UPT_DAF4 = (0xDAF4)

UPT_DAF5 = (0xDAF5)

UPT_DAF6 = (0xDAF6)

UPT_DAF7 = (0xDAF7)

UPT_DAF8 = (0xDAF8)

UPT_DAF9 = (0xDAF9)

UPT_DAFA = (0xDAFA)

UPT_DAFB = (0xDAFB)

UPT_DAFC = (0xDAFC)

UPT_DAFD = (0xDAFD)

UPT_DAFE = (0xDAFE)

UPT_DAFF = (0xDAFF)

UPT_DB00 = (0xDB00)

UPT_DB01 = (0xDB01)

UPT_DB02 = (0xDB02)

UPT_DB03 = (0xDB03)

UPT_DB04 = (0xDB04)

UPT_DB05 = (0xDB05)

UPT_DB06 = (0xDB06)

UPT_DB07 = (0xDB07)

UPT_DB08 = (0xDB08)

UPT_DB09 = (0xDB09)

UPT_DB0A = (0xDB0A)

UPT_DB0B = (0xDB0B)

UPT_DB0C = (0xDB0C)

UPT_DB0D = (0xDB0D)

UPT_DB0E = (0xDB0E)

UPT_DB0F = (0xDB0F)

UPT_DB10 = (0xDB10)

UPT_DB11 = (0xDB11)

UPT_DB12 = (0xDB12)

UPT_DB13 = (0xDB13)

UPT_DB14 = (0xDB14)

UPT_DB15 = (0xDB15)

UPT_DB16 = (0xDB16)

UPT_DB17 = (0xDB17)

UPT_DB18 = (0xDB18)

UPT_DB19 = (0xDB19)

UPT_DB1A = (0xDB1A)

UPT_DB1B = (0xDB1B)

UPT_DB1C = (0xDB1C)

UPT_DB1D = (0xDB1D)

UPT_DB1E = (0xDB1E)

UPT_DB1F = (0xDB1F)

UPT_DB20 = (0xDB20)

UPT_DB21 = (0xDB21)

UPT_DB22 = (0xDB22)

UPT_DB23 = (0xDB23)

UPT_DB24 = (0xDB24)

UPT_DB25 = (0xDB25)

UPT_DB26 = (0xDB26)

UPT_DB27 = (0xDB27)

UPT_DB28 = (0xDB28)

UPT_DB29 = (0xDB29)

UPT_DB2A = (0xDB2A)

UPT_DB2B = (0xDB2B)

UPT_DB2C = (0xDB2C)

UPT_DB2D = (0xDB2D)

UPT_DB2E = (0xDB2E)

UPT_DB2F = (0xDB2F)

UPT_DB30 = (0xDB30)

UPT_DB31 = (0xDB31)

UPT_DB32 = (0xDB32)

UPT_DB33 = (0xDB33)

UPT_DB34 = (0xDB34)

UPT_DB35 = (0xDB35)

UPT_DB36 = (0xDB36)

UPT_DB37 = (0xDB37)

UPT_DB38 = (0xDB38)

UPT_DB39 = (0xDB39)

UPT_DB3A = (0xDB3A)

UPT_DB3B = (0xDB3B)

UPT_DB3C = (0xDB3C)

UPT_DB3D = (0xDB3D)

UPT_DB3E = (0xDB3E)

UPT_DB3F = (0xDB3F)

UPT_DB40 = (0xDB40)

UPT_DB41 = (0xDB41)

UPT_DB42 = (0xDB42)

UPT_DB43 = (0xDB43)

UPT_DB44 = (0xDB44)

UPT_DB45 = (0xDB45)

UPT_DB46 = (0xDB46)

UPT_DB47 = (0xDB47)

UPT_DB48 = (0xDB48)

UPT_DB49 = (0xDB49)

UPT_DB4A = (0xDB4A)

UPT_DB4B = (0xDB4B)

UPT_DB4C = (0xDB4C)

UPT_DB4D = (0xDB4D)

UPT_DB4E = (0xDB4E)

UPT_DB4F = (0xDB4F)

UPT_DB50 = (0xDB50)

UPT_DB51 = (0xDB51)

UPT_DB52 = (0xDB52)

UPT_DB53 = (0xDB53)

UPT_DB54 = (0xDB54)

UPT_DB55 = (0xDB55)

UPT_DB56 = (0xDB56)

UPT_DB57 = (0xDB57)

UPT_DB58 = (0xDB58)

UPT_DB59 = (0xDB59)

UPT_DB5A = (0xDB5A)

UPT_DB5B = (0xDB5B)

UPT_DB5C = (0xDB5C)

UPT_DB5D = (0xDB5D)

UPT_DB5E = (0xDB5E)

UPT_DB5F = (0xDB5F)

UPT_DB60 = (0xDB60)

UPT_DB61 = (0xDB61)

UPT_DB62 = (0xDB62)

UPT_DB63 = (0xDB63)

UPT_DB64 = (0xDB64)

UPT_DB65 = (0xDB65)

UPT_DB66 = (0xDB66)

UPT_DB67 = (0xDB67)

UPT_DB68 = (0xDB68)

UPT_DB69 = (0xDB69)

UPT_DB6A = (0xDB6A)

UPT_DB6B = (0xDB6B)

UPT_DB6C = (0xDB6C)

UPT_DB6D = (0xDB6D)

UPT_DB6E = (0xDB6E)

UPT_DB6F = (0xDB6F)

UPT_DB70 = (0xDB70)

UPT_DB71 = (0xDB71)

UPT_DB72 = (0xDB72)

UPT_DB73 = (0xDB73)

UPT_DB74 = (0xDB74)

UPT_DB75 = (0xDB75)

UPT_DB76 = (0xDB76)

UPT_DB77 = (0xDB77)

UPT_DB78 = (0xDB78)

UPT_DB79 = (0xDB79)

UPT_DB7A = (0xDB7A)

UPT_DB7B = (0xDB7B)

UPT_DB7C = (0xDB7C)

UPT_DB7D = (0xDB7D)

UPT_DB7E = (0xDB7E)

UPT_DB7F = (0xDB7F)

UPT_DB80 = (0xDB80)

UPT_DB81 = (0xDB81)

UPT_DB82 = (0xDB82)

UPT_DB83 = (0xDB83)

UPT_DB84 = (0xDB84)

UPT_DB85 = (0xDB85)

UPT_DB86 = (0xDB86)

UPT_DB87 = (0xDB87)

UPT_DB88 = (0xDB88)

UPT_DB89 = (0xDB89)

UPT_DB8A = (0xDB8A)

UPT_DB8B = (0xDB8B)

UPT_DB8C = (0xDB8C)

UPT_DB8D = (0xDB8D)

UPT_DB8E = (0xDB8E)

UPT_DB8F = (0xDB8F)

UPT_DB90 = (0xDB90)

UPT_DB91 = (0xDB91)

UPT_DB92 = (0xDB92)

UPT_DB93 = (0xDB93)

UPT_DB94 = (0xDB94)

UPT_DB95 = (0xDB95)

UPT_DB96 = (0xDB96)

UPT_DB97 = (0xDB97)

UPT_DB98 = (0xDB98)

UPT_DB99 = (0xDB99)

UPT_DB9A = (0xDB9A)

UPT_DB9B = (0xDB9B)

UPT_DB9C = (0xDB9C)

UPT_DB9D = (0xDB9D)

UPT_DB9E = (0xDB9E)

UPT_DB9F = (0xDB9F)

UPT_DBA0 = (0xDBA0)

UPT_DBA1 = (0xDBA1)

UPT_DBA2 = (0xDBA2)

UPT_DBA3 = (0xDBA3)

UPT_DBA4 = (0xDBA4)

UPT_DBA5 = (0xDBA5)

UPT_DBA6 = (0xDBA6)

UPT_DBA7 = (0xDBA7)

UPT_DBA8 = (0xDBA8)

UPT_DBA9 = (0xDBA9)

UPT_DBAA = (0xDBAA)

UPT_DBAB = (0xDBAB)

UPT_DBAC = (0xDBAC)

UPT_DBAD = (0xDBAD)

UPT_DBAE = (0xDBAE)

UPT_DBAF = (0xDBAF)

UPT_DBB0 = (0xDBB0)

UPT_DBB1 = (0xDBB1)

UPT_DBB2 = (0xDBB2)

UPT_DBB3 = (0xDBB3)

UPT_DBB4 = (0xDBB4)

UPT_DBB5 = (0xDBB5)

UPT_DBB6 = (0xDBB6)

UPT_DBB7 = (0xDBB7)

UPT_DBB8 = (0xDBB8)

UPT_DBB9 = (0xDBB9)

UPT_DBBA = (0xDBBA)

UPT_DBBB = (0xDBBB)

UPT_DBBC = (0xDBBC)

UPT_DBBD = (0xDBBD)

UPT_DBBE = (0xDBBE)

UPT_DBBF = (0xDBBF)

UPT_DBC0 = (0xDBC0)

UPT_DBC1 = (0xDBC1)

UPT_DBC2 = (0xDBC2)

UPT_DBC3 = (0xDBC3)

UPT_DBC4 = (0xDBC4)

UPT_DBC5 = (0xDBC5)

UPT_DBC6 = (0xDBC6)

UPT_DBC7 = (0xDBC7)

UPT_DBC8 = (0xDBC8)

UPT_DBC9 = (0xDBC9)

UPT_DBCA = (0xDBCA)

UPT_DBCB = (0xDBCB)

UPT_DBCC = (0xDBCC)

UPT_DBCD = (0xDBCD)

UPT_DBCE = (0xDBCE)

UPT_DBCF = (0xDBCF)

UPT_DBD0 = (0xDBD0)

UPT_DBD1 = (0xDBD1)

UPT_DBD2 = (0xDBD2)

UPT_DBD3 = (0xDBD3)

UPT_DBD4 = (0xDBD4)

UPT_DBD5 = (0xDBD5)

UPT_DBD6 = (0xDBD6)

UPT_DBD7 = (0xDBD7)

UPT_DBD8 = (0xDBD8)

UPT_DBD9 = (0xDBD9)

UPT_DBDA = (0xDBDA)

UPT_DBDB = (0xDBDB)

UPT_DBDC = (0xDBDC)

UPT_DBDD = (0xDBDD)

UPT_DBDE = (0xDBDE)

UPT_DBDF = (0xDBDF)

UPT_DBE0 = (0xDBE0)

UPT_DBE1 = (0xDBE1)

UPT_DBE2 = (0xDBE2)

UPT_DBE3 = (0xDBE3)

UPT_DBE4 = (0xDBE4)

UPT_DBE5 = (0xDBE5)

UPT_DBE6 = (0xDBE6)

UPT_DBE7 = (0xDBE7)

UPT_DBE8 = (0xDBE8)

UPT_DBE9 = (0xDBE9)

UPT_DBEA = (0xDBEA)

UPT_DBEB = (0xDBEB)

UPT_DBEC = (0xDBEC)

UPT_DBED = (0xDBED)

UPT_DBEE = (0xDBEE)

UPT_DBEF = (0xDBEF)

UPT_DBF0 = (0xDBF0)

UPT_DBF1 = (0xDBF1)

UPT_DBF2 = (0xDBF2)

UPT_DBF3 = (0xDBF3)

UPT_DBF4 = (0xDBF4)

UPT_DBF5 = (0xDBF5)

UPT_DBF6 = (0xDBF6)

UPT_DBF7 = (0xDBF7)

UPT_DBF8 = (0xDBF8)

UPT_DBF9 = (0xDBF9)

UPT_DBFA = (0xDBFA)

UPT_DBFB = (0xDBFB)

UPT_DBFC = (0xDBFC)

UPT_DBFD = (0xDBFD)

UPT_DBFE = (0xDBFE)

UPT_DBFF = (0xDBFF)

UPT_DC00 = (0xDC00) --used

UPT_DC01 = (0xDC01) --used

UPT_DC02 = (0xDC02) --used

UPT_DC03 = (0xDC03) --used

UPT_DC04 = (0xDC04) --used

UPT_DC05 = (0xDC05) --used

UPT_DC06 = (0xDC06) --used

UPT_DC07 = (0xDC07) --used

UPT_DC08 = (0xDC08) --used

UPT_DC09 = (0xDC09) --used

UPT_DC0A = (0xDC0A) --used

UPT_DC0B = (0xDC0B) --used

UPT_DC0C = (0xDC0C) --used

UPT_DC0D = (0xDC0D) --used

UPT_DC0E = (0xDC0E) --used

UPT_DC0F = (0xDC0F) --used

UPT_DC10 = (0xDC10) --used

UPT_DC11 = (0xDC11) --used

UPT_DC12 = (0xDC12) --used

UPT_DC13 = (0xDC13) --used

UPT_DC14 = (0xDC14) --used

UPT_DC15 = (0xDC15) --used

UPT_DC16 = (0xDC16) --used

UPT_DC17 = (0xDC17) --used

UPT_DC18 = (0xDC18) --used

UPT_DC19 = (0xDC19) --used

UPT_DC1A = (0xDC1A) --used

UPT_DC1B = (0xDC1B) --used

UPT_DC1C = (0xDC1C) --used

UPT_DC1D = (0xDC1D) --used

UPT_DC1E = (0xDC1E) --used

UPT_DC1F = (0xDC1F) --used

UPT_DC20 = (0xDC20) --used

UPT_DC21 = (0xDC21) --used

UPT_DC22 = (0xDC22) --used

UPT_DC23 = (0xDC23) --used

UPT_DC24 = (0xDC24) --used

UPT_DC25 = (0xDC25) --used

UPT_DC26 = (0xDC26) --used

UPT_DC27 = (0xDC27) --used

UPT_DC28 = (0xDC28) --used

UPT_DC29 = (0xDC29) --used

UPT_DC2A = (0xDC2A) --used

UPT_DC2B = (0xDC2B) --used

UPT_DC2C = (0xDC2C) --used

UPT_DC2D = (0xDC2D) --used

UPT_DC2E = (0xDC2E) --used

UPT_DC2F = (0xDC2F) --used

UPT_DC30 = (0xDC30) --used

UPT_DC31 = (0xDC31) --used

UPT_DC32 = (0xDC32) --used

UPT_DC33 = (0xDC33) --used

UPT_DC34 = (0xDC34) --used

UPT_DC35 = (0xDC35) --used

UPT_DC36 = (0xDC36) --used

UPT_DC37 = (0xDC37) --used

UPT_DC38 = (0xDC38) --used

UPT_DC39 = (0xDC39) --used

UPT_DC3A = (0xDC3A) --used

UPT_DC3B = (0xDC3B) --used

UPT_DC3C = (0xDC3C) --used

UPT_DC3D = (0xDC3D)

UPT_DC3E = (0xDC3E)

UPT_DC3F = (0xDC3F)

UPT_DC40 = (0xDC40)

UPT_DC41 = (0xDC41)

UPT_DC42 = (0xDC42)

UPT_DC43 = (0xDC43)

UPT_DC44 = (0xDC44)

UPT_DC45 = (0xDC45)

UPT_DC46 = (0xDC46)

UPT_DC47 = (0xDC47)

UPT_DC48 = (0xDC48)

UPT_DC49 = (0xDC49)

UPT_DC4A = (0xDC4A)

UPT_DC4B = (0xDC4B)

UPT_DC4C = (0xDC4C)

UPT_DC4D = (0xDC4D)

UPT_DC4E = (0xDC4E)

UPT_DC4F = (0xDC4F)

UPT_DC50 = (0xDC50)

UPT_DC51 = (0xDC51)

UPT_DC52 = (0xDC52)

UPT_DC53 = (0xDC53)

UPT_DC54 = (0xDC54)

UPT_DC55 = (0xDC55)

UPT_DC56 = (0xDC56)

UPT_DC57 = (0xDC57)

UPT_DC58 = (0xDC58)

UPT_DC59 = (0xDC59)

UPT_DC5A = (0xDC5A)

UPT_DC5B = (0xDC5B)

UPT_DC5C = (0xDC5C)

UPT_DC5D = (0xDC5D)

UPT_DC5E = (0xDC5E)

UPT_DC5F = (0xDC5F)

UPT_DC60 = (0xDC60)

UPT_DC61 = (0xDC61)

UPT_DC62 = (0xDC62)

UPT_DC63 = (0xDC63)

UPT_DC64 = (0xDC64)

UPT_DC65 = (0xDC65)

UPT_DC66 = (0xDC66)

UPT_DC67 = (0xDC67)

UPT_DC68 = (0xDC68)

UPT_DC69 = (0xDC69)

UPT_DC6A = (0xDC6A)

UPT_DC6B = (0xDC6B)

UPT_DC6C = (0xDC6C)

UPT_DC6D = (0xDC6D)

UPT_DC6E = (0xDC6E)

UPT_DC6F = (0xDC6F)

UPT_DC70 = (0xDC70)

UPT_DC71 = (0xDC71)

UPT_DC72 = (0xDC72)

UPT_DC73 = (0xDC73)

UPT_DC74 = (0xDC74)

UPT_DC75 = (0xDC75)

UPT_DC76 = (0xDC76)

UPT_DC77 = (0xDC77)

UPT_DC78 = (0xDC78)

UPT_DC79 = (0xDC79)

UPT_DC7A = (0xDC7A)

UPT_DC7B = (0xDC7B)

UPT_DC7C = (0xDC7C)

UPT_DC7D = (0xDC7D)

UPT_DC7E = (0xDC7E)

UPT_DC7F = (0xDC7F)

UPT_DC80 = (0xDC80)

UPT_DC81 = (0xDC81)

UPT_DC82 = (0xDC82)

UPT_DC83 = (0xDC83)

UPT_DC84 = (0xDC84)

UPT_DC85 = (0xDC85)

UPT_DC86 = (0xDC86)

UPT_DC87 = (0xDC87)

UPT_DC88 = (0xDC88)

UPT_DC89 = (0xDC89)

UPT_DC8A = (0xDC8A)

UPT_DC8B = (0xDC8B)

UPT_DC8C = (0xDC8C)

UPT_DC8D = (0xDC8D)

UPT_DC8E = (0xDC8E)

UPT_DC8F = (0xDC8F)

UPT_DC90 = (0xDC90)

UPT_DC91 = (0xDC91)

UPT_DC92 = (0xDC92)

UPT_DC93 = (0xDC93)

UPT_DC94 = (0xDC94)

UPT_DC95 = (0xDC95)

UPT_DC96 = (0xDC96)

UPT_DC97 = (0xDC97)

UPT_DC98 = (0xDC98)

UPT_DC99 = (0xDC99)

UPT_DC9A = (0xDC9A)

UPT_DC9B = (0xDC9B)

UPT_DC9C = (0xDC9C)

UPT_DC9D = (0xDC9D)

UPT_DC9E = (0xDC9E)

UPT_DC9F = (0xDC9F)

UPT_DCA0 = (0xDCA0)

UPT_DCA1 = (0xDCA1)

UPT_DCA2 = (0xDCA2)

UPT_DCA3 = (0xDCA3)

UPT_DCA4 = (0xDCA4)

UPT_DCA5 = (0xDCA5)

UPT_DCA6 = (0xDCA6)

UPT_DCA7 = (0xDCA7)

UPT_DCA8 = (0xDCA8)

UPT_DCA9 = (0xDCA9)

UPT_DCAA = (0xDCAA)   -- FIXED POINT */

UPT_DCAB = (0xDCAB)

UPT_DCAC = (0xDCAC)

UPT_DCAD = (0xDCAD)

UPT_DCAE = (0xDCAE)

UPT_DCAF = (0xDCAF)

UPT_DCB0 = (0xDCB0)

UPT_DCB1 = (0xDCB1)

UPT_DCB2 = (0xDCB2)

UPT_DCB3 = (0xDCB3)

UPT_DCB4 = (0xDCB4)

UPT_DCB5 = (0xDCB5)

UPT_DCB6 = (0xDCB6)

UPT_DCB7 = (0xDCB7)

UPT_DCB8 = (0xDCB8)

UPT_DCB9 = (0xDCB9)

UPT_DCBA = (0xDCBA)

UPT_DCBB = (0xDCBB)

UPT_DCBC = (0xDCBC)

UPT_DCBD = (0xDCBD)

UPT_DCBE = (0xDCBE)

UPT_DCBF = (0xDCBF)

UPT_DCC0 = (0xDCC0)

UPT_DCC1 = (0xDCC1)

UPT_DCC2 = (0xDCC2)

UPT_DCC3 = (0xDCC3)

UPT_DCC4 = (0xDCC4)

UPT_DCC5 = (0xDCC5)

UPT_DCC6 = (0xDCC6)

UPT_DCC7 = (0xDCC7)

UPT_DCC8 = (0xDCC8)

UPT_DCC9 = (0xDCC9)

UPT_DCCA = (0xDCCA)

UPT_DCCB = (0xDCCB)

UPT_DCCC = (0xDCCC)

UPT_DCCD = (0xDCCD)

UPT_DCCE = (0xDCCE)

UPT_DCCF = (0xDCCF)

UPT_DCD0 = (0xDCD0)

UPT_DCD1 = (0xDCD1)

UPT_DCD2 = (0xDCD2)

UPT_DCD3 = (0xDCD3)

UPT_DCD4 = (0xDCD4)

UPT_DCD5 = (0xDCD5)

UPT_DCD6 = (0xDCD6)

UPT_DCD7 = (0xDCD7)

UPT_DCD8 = (0xDCD8)

UPT_DCD9 = (0xDCD9)

UPT_DCDA = (0xDCDA)

UPT_DCDB = (0xDCDB)

UPT_DCDC = (0xDCDC)

UPT_DCDD = (0xDCDD)

UPT_DCDE = (0xDCDE)

UPT_DCDF = (0xDCDF)

UPT_DCE0 = (0xDCE0)

UPT_DCE1 = (0xDCE1)

UPT_DCE2 = (0xDCE2)

UPT_DCE3 = (0xDCE3)

UPT_DCE4 = (0xDCE4)

UPT_DCE5 = (0xDCE5)

UPT_DCE6 = (0xDCE6)

UPT_DCE7 = (0xDCE7)

UPT_DCE8 = (0xDCE8)

UPT_DCE9 = (0xDCE9)

UPT_DCEA = (0xDCEA)

UPT_DCEB = (0xDCEB)

UPT_DCEC = (0xDCEC)

UPT_DCED = (0xDCED)

UPT_DCEE = (0xDCEE)

UPT_DCEF = (0xDCEF)

UPT_DCF0 = (0xDCF0)

UPT_DCF1 = (0xDCF1)

UPT_DCF2 = (0xDCF2)

UPT_DCF3 = (0xDCF3)

UPT_DCF4 = (0xDCF4)

UPT_DCF5 = (0xDCF5)

UPT_DCF6 = (0xDCF6)

UPT_DCF7 = (0xDCF7)

UPT_DCF8 = (0xDCF8)

UPT_DCF9 = (0xDCF9)

UPT_DCFA = (0xDCFA)

UPT_DCFB = (0xDCFB)

UPT_DCFC = (0xDCFC)

UPT_DCFD = (0xDCFD)

UPT_DCFE = (0xDCFE)

UPT_DCFF = (0xDCFF)

UPT_DD00 = (0xDD00)  --used HC_CMD body

UPT_DD01 = (0xDD01)  --used Event body

UPT_DD02 = (0xDD02)  --used HC_CMD: opcode

UPT_DD03 = (0xDD03)  --used Event Code

UPT_DD04 = (0xDD04)  --used Event error Status

UPT_DD05 = (0xDD05)  --used HCeg_Hardware_Error_Event reason

UPT_DD06 = (0xDD06)  --used LE Subevent_code

UPT_DD07 = (0xDD07)  --used HCI_DATA_BUFFER_OVERFLOW_EVENT

UPT_DD08 = (0xDD08)  --used

UPT_DD09 = (0xDD09)  --used

UPT_DD0A = (0xDD0A)  --used

UPT_DD0B = (0xDD0B)

UPT_DD0C = (0xDD0C)  --used

UPT_DD0D = (0xDD0D)  --used

UPT_DD0E = (0xDD0E)  --used

UPT_DD0F = (0xDD0F)  --used

UPT_DD10 = (0xDD10)  --used

UPT_DD11 = (0xDD11)  --used

UPT_DD12 = (0xDD12)  --used

UPT_DD13 = (0xDD13)  --used

UPT_DD14 = (0xDD14)  --used

UPT_DD15 = (0xDD15)  --used

UPT_DD16 = (0xDD16)  --used

UPT_DD17 = (0xDD17)  --used

UPT_DD18 = (0xDD18)  --used

UPT_DD19 = (0xDD19)  --used

UPT_DD1A = (0xDD1A)  --used

UPT_DD1B = (0xDD1B)  --used

UPT_DD1C = (0xDD1C)  --used

UPT_DD1D = (0xDD1D)  --used

UPT_DD1E = (0xDD1E)  --used

UPT_DD1F = (0xDD1F)  --used

UPT_DD20 = (0xDD20)  --used

UPT_DD21 = (0xDD21)  --used for sdio

UPT_DD22 = (0xDD22)  --used for sdio

UPT_DD23 = (0xDD23)  --used for sdio

UPT_DD24 = (0xDD24)  --used for sdio

UPT_DD25 = (0xDD25)  --used for sdio

UPT_DD26 = (0xDD26)  --used for sdio

UPT_DD27 = (0xDD27)

UPT_DD28 = (0xDD28)

UPT_DD29 = (0xDD29)

UPT_DD2A = (0xDD2A)

UPT_DD2B = (0xDD2B)

UPT_DD2C = (0xDD2C)

UPT_DD2D = (0xDD2D)

UPT_DD2E = (0xDD2E)

UPT_DD2F = (0xDD2F)

UPT_DD30 = (0xDD30)

UPT_DD31 = (0xDD31)

UPT_DD32 = (0xDD32)

UPT_DD33 = (0xDD33)

UPT_DD34 = (0xDD34)

UPT_DD35 = (0xDD35)

UPT_DD36 = (0xDD36)

UPT_DD37 = (0xDD37)

UPT_DD38 = (0xDD38)

UPT_DD39 = (0xDD39)

UPT_DD3A = (0xDD3A)

UPT_DD3B = (0xDD3B)

UPT_DD3C = (0xDD3C)

UPT_DD3D = (0xDD3D)

UPT_DD3E = (0xDD3E)

UPT_DD3F = (0xDD3F)

UPT_DD40 = (0xDD40)

UPT_DD41 = (0xDD41)

UPT_DD42 = (0xDD42)

UPT_DD43 = (0xDD43)

UPT_DD44 = (0xDD44)

UPT_DD45 = (0xDD45)

UPT_DD46 = (0xDD46)

UPT_DD47 = (0xDD47)

UPT_DD48 = (0xDD48)

UPT_DD49 = (0xDD49)

UPT_DD4A = (0xDD4A)

UPT_DD4B = (0xDD4B)

UPT_DD4C = (0xDD4C)

UPT_DD4D = (0xDD4D)

UPT_DD4E = (0xDD4E)

UPT_DD4F = (0xDD4F)

UPT_DD50 = (0xDD50)

UPT_DD51 = (0xDD51)

UPT_DD52 = (0xDD52)

UPT_DD53 = (0xDD53)

UPT_DD54 = (0xDD54)

UPT_DD55 = (0xDD55)

UPT_DD56 = (0xDD56)

UPT_DD57 = (0xDD57)

UPT_DD58 = (0xDD58)

UPT_DD59 = (0xDD59)

UPT_DD5A = (0xDD5A)

UPT_DD5B = (0xDD5B)

UPT_DD5C = (0xDD5C)

UPT_DD5D = (0xDD5D)

UPT_DD5E = (0xDD5E)

UPT_DD5F = (0xDD5F)

UPT_DD60 = (0xDD60)

UPT_DD61 = (0xDD61)

UPT_DD62 = (0xDD62)

UPT_DD63 = (0xDD63)

UPT_DD64 = (0xDD64)

UPT_DD65 = (0xDD65)

UPT_DD66 = (0xDD66)

UPT_DD67 = (0xDD67)

UPT_DD68 = (0xDD68)

UPT_DD69 = (0xDD69)

UPT_DD6A = (0xDD6A)

UPT_DD6B = (0xDD6B)

UPT_DD6C = (0xDD6C)

UPT_DD6D = (0xDD6D)

UPT_DD6E = (0xDD6E)

UPT_DD6F = (0xDD6F)

UPT_DD70 = (0xDD70)

UPT_DD71 = (0xDD71)

UPT_DD72 = (0xDD72)

UPT_DD73 = (0xDD73)

UPT_DD74 = (0xDD74)

UPT_DD75 = (0xDD75)

UPT_DD76 = (0xDD76)

UPT_DD77 = (0xDD77)

UPT_DD78 = (0xDD78)

UPT_DD79 = (0xDD79)

UPT_DD7A = (0xDD7A)

UPT_DD7B = (0xDD7B)

UPT_DD7C = (0xDD7C)

UPT_DD7D = (0xDD7D)

UPT_DD7E = (0xDD7E)

UPT_DD7F = (0xDD7F)

UPT_DD80 = (0xDD80)

UPT_DD81 = (0xDD81)

UPT_DD82 = (0xDD82)

UPT_DD83 = (0xDD83)

UPT_DD84 = (0xDD84)

UPT_DD85 = (0xDD85)

UPT_DD86 = (0xDD86)

UPT_DD87 = (0xDD87)

UPT_DD88 = (0xDD88)

UPT_DD89 = (0xDD89)

UPT_DD8A = (0xDD8A)

UPT_DD8B = (0xDD8B)

UPT_DD8C = (0xDD8C)

UPT_DD8D = (0xDD8D)

UPT_DD8E = (0xDD8E)

UPT_DD8F = (0xDD8F)

UPT_DD90 = (0xDD90)

UPT_DD91 = (0xDD91)

UPT_DD92 = (0xDD92)

UPT_DD93 = (0xDD93)

UPT_DD94 = (0xDD94)

UPT_DD95 = (0xDD95)

UPT_DD96 = (0xDD96)

UPT_DD97 = (0xDD97)

UPT_DD98 = (0xDD98)

UPT_DD99 = (0xDD99)

UPT_DD9A = (0xDD9A)

UPT_DD9B = (0xDD9B)

UPT_DD9C = (0xDD9C)

UPT_DD9D = (0xDD9D)

UPT_DD9E = (0xDD9E)

UPT_DD9F = (0xDD9F)

UPT_DDA0 = (0xDDA0)

UPT_DDA1 = (0xDDA1)

UPT_DDA2 = (0xDDA2)

UPT_DDA3 = (0xDDA3)

UPT_DDA4 = (0xDDA4)

UPT_DDA5 = (0xDDA5)

UPT_DDA6 = (0xDDA6)

UPT_DDA7 = (0xDDA7)

UPT_DDA8 = (0xDDA8)

UPT_DDA9 = (0xDDA9)

UPT_DDAA = (0xDDAA)

UPT_DDAB = (0xDDAB)

UPT_DDAC = (0xDDAC)

UPT_DDAD = (0xDDAD)

UPT_DDAE = (0xDDAE)

UPT_DDAF = (0xDDAF)

UPT_DDB0 = (0xDDB0)  --used

UPT_DDB1 = (0xDDB1)  --used

UPT_DDB2 = (0xDDB2)  --used

UPT_DDB3 = (0xDDB3)  --used

UPT_DDB4 = (0xDDB4)  --used

UPT_DDB5 = (0xDDB5)  --used

UPT_DDB6 = (0xDDB6)  --used

UPT_DDB7 = (0xDDB7)  --used

UPT_DDB8 = (0xDDB8)  --used

UPT_DDB9 = (0xDDB9)  --used

UPT_DDBA = (0xDDBA)  --used

UPT_DDBB = (0xDDBB)  --used

UPT_DDBC = (0xDDBC)  --used

UPT_DDBD = (0xDDBD)  --used

UPT_DDBE = (0xDDBE)  --used

UPT_DDBF = (0xDDBF)  --used

UPT_DDC0 = (0xDDC0)  --used

UPT_DDC1 = (0xDDC1)  --used

UPT_DDC2 = (0xDDC2)  --used

UPT_DDC3 = (0xDDC3)  --used

UPT_DDC4 = (0xDDC4)  --used

UPT_DDC5 = (0xDDC5)  --used

UPT_DDC6 = (0xDDC6)  --used

UPT_DDC7 = (0xDDC7)  --used

UPT_DDC8 = (0xDDC8)  --used

UPT_DDC9 = (0xDDC9)  --used

UPT_DDCA = (0xDDCA)  --used

UPT_DDCB = (0xDDCB)  --used

UPT_DDCC = (0xDDCC)  --used

UPT_DDCD = (0xDDCD)  --used

UPT_DDCE = (0xDDCE)  --used

UPT_DDCF = (0xDDCF)

UPT_DDD0 = (0xDDD0)  --used

UPT_DDD1 = (0xDDD1)  --used

UPT_DDD2 = (0xDDD2)  --used

UPT_DDD3 = (0xDDD3)  --used

UPT_DDD4 = (0xDDD4)  --used

UPT_DDD5 = (0xDDD5)

UPT_DDD6 = (0xDDD6)

UPT_DDD7 = (0xDDD7)  --used

UPT_DDD8 = (0xDDD8)

UPT_DDD9 = (0xDDD9)

UPT_DDDA = (0xDDDA)

UPT_DDDB = (0xDDDB)

UPT_DDDC = (0xDDDC)

UPT_DDDD = (0xDDDD)

UPT_DDDE = (0xDDDE)

UPT_DDDF = (0xDDDF)

UPT_DDE0 = (0xDDE0) --debug rx data path

UPT_DDE1 = (0xDDE1) --used

UPT_DDE2 = (0xDDE2) --used

UPT_DDE3 = (0xDDE3) --used

UPT_DDE4 = (0xDDE4) --used

UPT_DDE5 = (0xDDE5) --used

UPT_DDE6 = (0xDDE6) --used

UPT_DDE7 = (0xDDE7) --used

UPT_DDE8 = (0xDDE8) --used

UPT_DDE9 = (0xDDE9) --used

UPT_DDEA = (0xDDEA) --used

UPT_DDEB = (0xDDEB) --used

UPT_DDEC = (0xDDEC) --debug rx data path

UPT_DDED = (0xDDED) --used for debug sdio

UPT_DDEE = (0xDDEE) --used

UPT_DDEF = (0xDDEF) --used

UPT_DDF0 = (0xDDF0) --used

UPT_DDF1 = (0xDDF1) --used

UPT_DDF2 = (0xDDF2) --used

UPT_DDF3 = (0xDDF3) --used

UPT_DDF4 = (0xDDF4) --used

UPT_DDF5 = (0xDDF5) --used

UPT_DDF6 = (0xDDF6) --used

UPT_DDF7 = (0xDDF7) --used

UPT_DDF8 = (0xDDF8) --used for debug sdio

UPT_DDF9 = (0xDDF9)

UPT_DDFA = (0xDDFA)

UPT_DDFB = (0xDDFB)

UPT_DDFC = (0xDDFC)

UPT_DDFD = (0xDDFD)

UPT_DDFE = (0xDDFE)

UPT_DDFF = (0xDDFF)

UPT_DE00 = (0xDE00)

UPT_DE01 = (0xDE01)

UPT_DE02 = (0xDE02)

UPT_DE03 = (0xDE03)

UPT_DE04 = (0xDE04)

UPT_DE05 = (0xDE05)

UPT_DE06 = (0xDE06)

UPT_DE07 = (0xDE07)

UPT_DE08 = (0xDE08)

UPT_DE09 = (0xDE09)

UPT_DE0A = (0xDE0A)

UPT_DE0B = (0xDE0B)

UPT_DE0C = (0xDE0C)

UPT_DE0D = (0xDE0D)

UPT_DE0E = (0xDE0E)

UPT_DE0F = (0xDE0F)

UPT_DE10 = (0xDE10)

UPT_DE11 = (0xDE11)

UPT_DE12 = (0xDE12)

UPT_DE13 = (0xDE13)

UPT_DE14 = (0xDE14)

UPT_DE15 = (0xDE15)

UPT_DE16 = (0xDE16)

UPT_DE17 = (0xDE17)

UPT_DE18 = (0xDE18)

UPT_DE19 = (0xDE19)

UPT_DE1A = (0xDE1A)

UPT_DE1B = (0xDE1B)

UPT_DE1C = (0xDE1C)

UPT_DE1D = (0xDE1D)

UPT_DE1E = (0xDE1E)

UPT_DE1F = (0xDE1F)

UPT_DE20 = (0xDE20)

UPT_DE21 = (0xDE21)

UPT_DE22 = (0xDE22)

UPT_DE23 = (0xDE23)

UPT_DE24 = (0xDE24)

UPT_DE25 = (0xDE25)

UPT_DE26 = (0xDE26)

UPT_DE27 = (0xDE27)

UPT_DE28 = (0xDE28)

UPT_DE29 = (0xDE29)

UPT_DE2A = (0xDE2A)

UPT_DE2B = (0xDE2B)

UPT_DE2C = (0xDE2C)

UPT_DE2D = (0xDE2D)

UPT_DE2E = (0xDE2E)

UPT_DE2F = (0xDE2F)

UPT_DE30 = (0xDE30)

UPT_DE31 = (0xDE31)

UPT_DE32 = (0xDE32)

UPT_DE33 = (0xDE33)

UPT_DE34 = (0xDE34)

UPT_DE35 = (0xDE35)

UPT_DE36 = (0xDE36)

UPT_DE37 = (0xDE37)

UPT_DE38 = (0xDE38)

UPT_DE39 = (0xDE39)

UPT_DE3A = (0xDE3A)

UPT_DE3B = (0xDE3B)

UPT_DE3C = (0xDE3C)

UPT_DE3D = (0xDE3D)

UPT_DE3E = (0xDE3E)

UPT_DE3F = (0xDE3F)

UPT_DE40 = (0xDE40)

UPT_DE41 = (0xDE41)

UPT_DE42 = (0xDE42)

UPT_DE43 = (0xDE43)

UPT_DE44 = (0xDE44)

UPT_DE45 = (0xDE45)

UPT_DE46 = (0xDE46)

UPT_DE47 = (0xDE47)

UPT_DE48 = (0xDE48)

UPT_DE49 = (0xDE49)

UPT_DE4A = (0xDE4A)

UPT_DE4B = (0xDE4B)

UPT_DE4C = (0xDE4C)

UPT_DE4D = (0xDE4D)

UPT_DE4E = (0xDE4E)

UPT_DE4F = (0xDE4F)

UPT_DE50 = (0xDE50)

UPT_DE51 = (0xDE51)

UPT_DE52 = (0xDE52)

UPT_DE53 = (0xDE53)

UPT_DE54 = (0xDE54)

UPT_DE55 = (0xDE55)

UPT_DE56 = (0xDE56)

UPT_DE57 = (0xDE57)

UPT_DE58 = (0xDE58)

UPT_DE59 = (0xDE59)

UPT_DE5A = (0xDE5A)

UPT_DE5B = (0xDE5B)

UPT_DE5C = (0xDE5C)

UPT_DE5D = (0xDE5D)

UPT_DE5E = (0xDE5E)

UPT_DE5F = (0xDE5F)

UPT_DE60 = (0xDE60)

UPT_DE61 = (0xDE61)

UPT_DE62 = (0xDE62)

UPT_DE63 = (0xDE63)

UPT_DE64 = (0xDE64)

UPT_DE65 = (0xDE65)

UPT_DE66 = (0xDE66)

UPT_DE67 = (0xDE67)

UPT_DE68 = (0xDE68)

UPT_DE69 = (0xDE69)

UPT_DE6A = (0xDE6A)

UPT_DE6B = (0xDE6B)

UPT_DE6C = (0xDE6C)

UPT_DE6D = (0xDE6D)

UPT_DE6E = (0xDE6E)

UPT_DE6F = (0xDE6F)

UPT_DE70 = (0xDE70)

UPT_DE71 = (0xDE71)

UPT_DE72 = (0xDE72)

UPT_DE73 = (0xDE73)

UPT_DE74 = (0xDE74)

UPT_DE75 = (0xDE75)

UPT_DE76 = (0xDE76)

UPT_DE77 = (0xDE77)

UPT_DE78 = (0xDE78)

UPT_DE79 = (0xDE79)

UPT_DE7A = (0xDE7A)

UPT_DE7B = (0xDE7B)

UPT_DE7C = (0xDE7C)

UPT_DE7D = (0xDE7D)

UPT_DE7E = (0xDE7E)

UPT_DE7F = (0xDE7F)

UPT_DE80 = (0xDE80)

UPT_DE81 = (0xDE81)

UPT_DE82 = (0xDE82)

UPT_DE83 = (0xDE83)

UPT_DE84 = (0xDE84)

UPT_DE85 = (0xDE85)

UPT_DE86 = (0xDE86)

UPT_DE87 = (0xDE87)

UPT_DE88 = (0xDE88)

UPT_DE89 = (0xDE89)

UPT_DE8A = (0xDE8A)

UPT_DE8B = (0xDE8B)

UPT_DE8C = (0xDE8C)

UPT_DE8D = (0xDE8D)

UPT_DE8E = (0xDE8E)

UPT_DE8F = (0xDE8F)

UPT_DE90 = (0xDE90)

UPT_DE91 = (0xDE91)

UPT_DE92 = (0xDE92)

UPT_DE93 = (0xDE93)

UPT_DE94 = (0xDE94)

UPT_DE95 = (0xDE95)

UPT_DE96 = (0xDE96)

UPT_DE97 = (0xDE97)

UPT_DE98 = (0xDE98)

UPT_DE99 = (0xDE99)

UPT_DE9A = (0xDE9A)

UPT_DE9B = (0xDE9B)

UPT_DE9C = (0xDE9C)

UPT_DE9D = (0xDE9D)

UPT_DE9E = (0xDE9E)

UPT_DE9F = (0xDE9F)

UPT_DEA0 = (0xDEA0)

UPT_DEA1 = (0xDEA1)

UPT_DEA2 = (0xDEA2)

UPT_DEA3 = (0xDEA3)

UPT_DEA4 = (0xDEA4)

UPT_DEA5 = (0xDEA5)

UPT_DEA6 = (0xDEA6)

UPT_DEA7 = (0xDEA7)

UPT_DEA8 = (0xDEA8)

UPT_DEA9 = (0xDEA9)

UPT_DEAA = (0xDEAA)

UPT_DEAB = (0xDEAB)

UPT_DEAC = (0xDEAC)

UPT_DEAD = (0xDEAD)

UPT_DEAE = (0xDEAE)

UPT_DEAF = (0xDEAF)

UPT_DEB0 = (0xDEB0)

UPT_DEB1 = (0xDEB1)

UPT_DEB2 = (0xDEB2)

UPT_DEB3 = (0xDEB3)

UPT_DEB4 = (0xDEB4)

UPT_DEB5 = (0xDEB5)

UPT_DEB6 = (0xDEB6)

UPT_DEB7 = (0xDEB7)

UPT_DEB8 = (0xDEB8)

UPT_DEB9 = (0xDEB9)

UPT_DEBA = (0xDEBA)

UPT_DEBB = (0xDEBB)

UPT_DEBC = (0xDEBC)

UPT_DEBD = (0xDEBD)

UPT_DEBE = (0xDEBE)

UPT_DEBF = (0xDEBF)

UPT_DEC0 = (0xDEC0)

UPT_DEC1 = (0xDEC1)

UPT_DEC2 = (0xDEC2)

UPT_DEC3 = (0xDEC3)

UPT_DEC4 = (0xDEC4)

UPT_DEC5 = (0xDEC5)

UPT_DEC6 = (0xDEC6)

UPT_DEC7 = (0xDEC7)

UPT_DEC8 = (0xDEC8)

UPT_DEC9 = (0xDEC9)

UPT_DECA = (0xDECA)

UPT_DECB = (0xDECB)

UPT_DECC = (0xDECC)

UPT_DECD = (0xDECD)

UPT_DECE = (0xDECE)

UPT_DECF = (0xDECF)

UPT_DED0 = (0xDED0)

UPT_DED1 = (0xDED1)

UPT_DED2 = (0xDED2)

UPT_DED3 = (0xDED3)

UPT_DED4 = (0xDED4)

UPT_DED5 = (0xDED5)

UPT_DED6 = (0xDED6)

UPT_DED7 = (0xDED7)

UPT_DED8 = (0xDED8)

UPT_DED9 = (0xDED9)

UPT_DEDA = (0xDEDA)

UPT_DEDB = (0xDEDB)

UPT_DEDC = (0xDEDC)

UPT_DEDD = (0xDEDD)

UPT_DEDE = (0xDEDE)

UPT_DEDF = (0xDEDF)

UPT_DEE0 = (0xDEE0)

UPT_DEE1 = (0xDEE1)

UPT_DEE2 = (0xDEE2)

UPT_DEE3 = (0xDEE3)

UPT_DEE4 = (0xDEE4)

UPT_DEE5 = (0xDEE5)

UPT_DEE6 = (0xDEE6)

UPT_DEE7 = (0xDEE7)

UPT_DEE8 = (0xDEE8)

UPT_DEE9 = (0xDEE9)

UPT_DEEA = (0xDEEA)

UPT_DEEB = (0xDEEB)

UPT_DEEC = (0xDEEC)

UPT_DEED = (0xDEED)

UPT_DEEE = (0xDEEE)

UPT_DEEF = (0xDEEF)

UPT_DEF0 = (0xDEF0)

UPT_DEF1 = (0xDEF1)

UPT_DEF2 = (0xDEF2)

UPT_DEF3 = (0xDEF3)

UPT_DEF4 = (0xDEF4)

UPT_DEF5 = (0xDEF5)

UPT_DEF6 = (0xDEF6)

UPT_DEF7 = (0xDEF7)

UPT_DEF8 = (0xDEF8)

UPT_DEF9 = (0xDEF9)

UPT_DEFA = (0xDEFA)

UPT_DEFB = (0xDEFB)

UPT_DEFC = (0xDEFC)

UPT_DEFD = (0xDEFD)

UPT_DEFE = (0xDEFE)

UPT_DEFF = (0xDEFF)

UPT_DF00 = (0xDF00)

UPT_DF01 = (0xDF01)

UPT_DF02 = (0xDF02)

UPT_DF03 = (0xDF03)

UPT_DF04 = (0xDF04)

UPT_DF05 = (0xDF05)

UPT_DF06 = (0xDF06)

UPT_DF07 = (0xDF07)

UPT_DF08 = (0xDF08)

UPT_DF09 = (0xDF09)

UPT_DF0A = (0xDF0A)

UPT_DF0B = (0xDF0B)

UPT_DF0C = (0xDF0C)

UPT_DF0D = (0xDF0D)

UPT_DF0E = (0xDF0E)

UPT_DF0F = (0xDF0F)

UPT_DF10 = (0xDF10)

UPT_DF11 = (0xDF11)

UPT_DF12 = (0xDF12)

UPT_DF13 = (0xDF13)

UPT_DF14 = (0xDF14)

UPT_DF15 = (0xDF15)

UPT_DF16 = (0xDF16)

UPT_DF17 = (0xDF17)

UPT_DF18 = (0xDF18)

UPT_DF19 = (0xDF19)

UPT_DF1A = (0xDF1A)

UPT_DF1B = (0xDF1B)

UPT_DF1C = (0xDF1C)

UPT_DF1D = (0xDF1D)

UPT_DF1E = (0xDF1E)

UPT_DF1F = (0xDF1F)

UPT_DF20 = (0xDF20)

UPT_DF21 = (0xDF21)

UPT_DF22 = (0xDF22)

UPT_DF23 = (0xDF23)

UPT_DF24 = (0xDF24)

UPT_DF25 = (0xDF25)

UPT_DF26 = (0xDF26)

UPT_DF27 = (0xDF27)

UPT_DF28 = (0xDF28)

UPT_DF29 = (0xDF29)

UPT_DF2A = (0xDF2A)

UPT_DF2B = (0xDF2B)

UPT_DF2C = (0xDF2C)

UPT_DF2D = (0xDF2D)

UPT_DF2E = (0xDF2E)

UPT_DF2F = (0xDF2F)

UPT_DF30 = (0xDF30)

UPT_DF31 = (0xDF31)

UPT_DF32 = (0xDF32)

UPT_DF33 = (0xDF33)

UPT_DF34 = (0xDF34)

UPT_DF35 = (0xDF35)

UPT_DF36 = (0xDF36)

UPT_DF37 = (0xDF37)

UPT_DF38 = (0xDF38)

UPT_DF39 = (0xDF39)

UPT_DF3A = (0xDF3A)

UPT_DF3B = (0xDF3B)

UPT_DF3C = (0xDF3C)

UPT_DF3D = (0xDF3D)

UPT_DF3E = (0xDF3E)

UPT_DF3F = (0xDF3F)

UPT_DF40 = (0xDF40)

UPT_DF41 = (0xDF41)

UPT_DF42 = (0xDF42)

UPT_DF43 = (0xDF43)

UPT_DF44 = (0xDF44)

UPT_DF45 = (0xDF45)

UPT_DF46 = (0xDF46)

UPT_DF47 = (0xDF47)

UPT_DF48 = (0xDF48)

UPT_DF49 = (0xDF49)

UPT_DF4A = (0xDF4A)

UPT_DF4B = (0xDF4B)

UPT_DF4C = (0xDF4C)

UPT_DF4D = (0xDF4D)

UPT_DF4E = (0xDF4E)

UPT_DF4F = (0xDF4F)

UPT_DF50 = (0xDF50)

UPT_DF51 = (0xDF51)

UPT_DF52 = (0xDF52)

UPT_DF53 = (0xDF53)

UPT_DF54 = (0xDF54)

UPT_DF55 = (0xDF55)

UPT_DF56 = (0xDF56)

UPT_DF57 = (0xDF57)

UPT_DF58 = (0xDF58)

UPT_DF59 = (0xDF59)

UPT_DF5A = (0xDF5A)

UPT_DF5B = (0xDF5B)

UPT_DF5C = (0xDF5C)

UPT_DF5D = (0xDF5D)

UPT_DF5E = (0xDF5E)

UPT_DF5F = (0xDF5F)

UPT_DF60 = (0xDF60)

UPT_DF61 = (0xDF61)

UPT_DF62 = (0xDF62)

UPT_DF63 = (0xDF63)

UPT_DF64 = (0xDF64)

UPT_DF65 = (0xDF65)

UPT_DF66 = (0xDF66)

UPT_DF67 = (0xDF67)

UPT_DF68 = (0xDF68)

UPT_DF69 = (0xDF69)

UPT_DF6A = (0xDF6A)

UPT_DF6B = (0xDF6B)

UPT_DF6C = (0xDF6C)

UPT_DF6D = (0xDF6D)

UPT_DF6E = (0xDF6E)

UPT_DF6F = (0xDF6F)

UPT_DF70 = (0xDF70)

UPT_DF71 = (0xDF71)

UPT_DF72 = (0xDF72)

UPT_DF73 = (0xDF73)

UPT_DF74 = (0xDF74)

UPT_DF75 = (0xDF75)

UPT_DF76 = (0xDF76)

UPT_DF77 = (0xDF77)

UPT_DF78 = (0xDF78)

UPT_DF79 = (0xDF79)

UPT_DF7A = (0xDF7A)

UPT_DF7B = (0xDF7B)

UPT_DF7C = (0xDF7C)

UPT_DF7D = (0xDF7D)

UPT_DF7E = (0xDF7E)

UPT_DF7F = (0xDF7F)

UPT_DF80 = (0xDF80)

UPT_DF81 = (0xDF81)

UPT_DF82 = (0xDF82)

UPT_DF83 = (0xDF83)

UPT_DF84 = (0xDF84)

UPT_DF85 = (0xDF85)

UPT_DF86 = (0xDF86)

UPT_DF87 = (0xDF87)

UPT_DF88 = (0xDF88)

UPT_DF89 = (0xDF89)

UPT_DF8A = (0xDF8A)

UPT_DF8B = (0xDF8B)

UPT_DF8C = (0xDF8C)

UPT_DF8D = (0xDF8D)

UPT_DF8E = (0xDF8E)

UPT_DF8F = (0xDF8F)

UPT_DF90 = (0xDF90)

UPT_DF91 = (0xDF91)

UPT_DF92 = (0xDF92)

UPT_DF93 = (0xDF93)

UPT_DF94 = (0xDF94)

UPT_DF95 = (0xDF95)

UPT_DF96 = (0xDF96)

UPT_DF97 = (0xDF97)

UPT_DF98 = (0xDF98)

UPT_DF99 = (0xDF99)

UPT_DF9A = (0xDF9A)

UPT_DF9B = (0xDF9B)

UPT_DF9C = (0xDF9C)

UPT_DF9D = (0xDF9D)

UPT_DF9E = (0xDF9E)

UPT_DF9F = (0xDF9F)

UPT_DFA0 = (0xDFA0)

UPT_DFA1 = (0xDFA1)

UPT_DFA2 = (0xDFA2)

UPT_DFA3 = (0xDFA3)

UPT_DFA4 = (0xDFA4)

UPT_DFA5 = (0xDFA5)

UPT_DFA6 = (0xDFA6)

UPT_DFA7 = (0xDFA7)

UPT_DFA8 = (0xDFA8)

UPT_DFA9 = (0xDFA9)

UPT_DFAA = (0xDFAA)

UPT_DFAB = (0xDFAB)

UPT_DFAC = (0xDFAC)

UPT_DFAD = (0xDFAD)

UPT_DFAE = (0xDFAE)

UPT_DFAF = (0xDFAF)

UPT_DFB0 = (0xDFB0)

UPT_DFB1 = (0xDFB1)

UPT_DFB2 = (0xDFB2)

UPT_DFB3 = (0xDFB3)

UPT_DFB4 = (0xDFB4)

UPT_DFB5 = (0xDFB5)

UPT_DFB6 = (0xDFB6)

UPT_DFB7 = (0xDFB7)

UPT_DFB8 = (0xDFB8)

UPT_DFB9 = (0xDFB9)

UPT_DFBA = (0xDFBA)

UPT_DFBB = (0xDFBB)

UPT_DFBC = (0xDFBC)

UPT_DFBD = (0xDFBD)

UPT_DFBE = (0xDFBE)

UPT_DFBF = (0xDFBF)

UPT_DFC0 = (0xDFC0)

UPT_DFC1 = (0xDFC1)

UPT_DFC2 = (0xDFC2)

UPT_DFC3 = (0xDFC3)

UPT_DFC4 = (0xDFC4)

UPT_DFC5 = (0xDFC5)

UPT_DFC6 = (0xDFC6)

UPT_DFC7 = (0xDFC7)

UPT_DFC8 = (0xDFC8)

UPT_DFC9 = (0xDFC9)

UPT_DFCA = (0xDFCA)

UPT_DFCB = (0xDFCB)

UPT_DFCC = (0xDFCC)

UPT_DFCD = (0xDFCD)

UPT_DFCE = (0xDFCE)

UPT_DFCF = (0xDFCF)

UPT_DFD0 = (0xDFD0)

UPT_DFD1 = (0xDFD1)

UPT_DFD2 = (0xDFD2)

UPT_DFD3 = (0xDFD3)

UPT_DFD4 = (0xDFD4)

UPT_DFD5 = (0xDFD5)

UPT_DFD6 = (0xDFD6)

UPT_DFD7 = (0xDFD7)

UPT_DFD8 = (0xDFD8)

UPT_DFD9 = (0xDFD9)

UPT_DFDA = (0xDFDA)

UPT_DFDB = (0xDFDB)

UPT_DFDC = (0xDFDC)

UPT_DFDD = (0xDFDD)

UPT_DFDE = (0xDFDE)

UPT_DFDF = (0xDFDF)

UPT_DFE0 = (0xDFE0)

UPT_DFE1 = (0xDFE1)

UPT_DFE2 = (0xDFE2)

UPT_DFE3 = (0xDFE3)

UPT_DFE4 = (0xDFE4)

UPT_DFE5 = (0xDFE5)

UPT_DFE6 = (0xDFE6)

UPT_DFE7 = (0xDFE7)

UPT_DFE8 = (0xDFE8)

UPT_DFE9 = (0xDFE9)

UPT_DFEA = (0xDFEA)

UPT_DFEB = (0xDFEB)

UPT_DFEC = (0xDFEC)

UPT_DFED = (0xDFED)

UPT_DFEE = (0xDFEE)

UPT_DFEF = (0xDFEF)

UPT_DFF0 = (0xDFF0)

UPT_DFF1 = (0xDFF1)

UPT_DFF2 = (0xDFF2)

UPT_DFF3 = (0xDFF3)

UPT_DFF4 = (0xDFF4)

UPT_DFF5 = (0xDFF5)

UPT_DFF6 = (0xDFF6)

UPT_DFF7 = (0xDFF7)

UPT_DFF8 = (0xDFF8)

UPT_DFF9 = (0xDFF9)

UPT_DFFA = (0xDFFA)

UPT_DFFB = (0xDFFB)

UPT_DFFC = (0xDFFC)

UPT_DFFD = (0xDFFD)

UPT_DFFE = (0xDFFE)

UPT_DFFF = (0xDFFF)   -- FIXED POINT */

COEX_TP_D400 = 0xD400  --used

COEX_TP_D401 = 0xD401  --used

COEX_TP_D402 = 0xD402  --used

COEX_TP_D403 = 0xD403  --used

COEX_TP_D404 = 0xD404  --used

COEX_TP_D405 = 0xD405  --used

COEX_TP_D406 = 0xD406  --used

COEX_TP_D407 = 0xD407  --used

COEX_TP_D408 = 0xD408  --used

COEX_TP_D409 = 0xD409  --used

COEX_TP_D40A = 0xD40A  --used

COEX_TP_D40B = 0xD40B  --used

COEX_TP_D40C = 0xD40C  --used

COEX_TP_D40D = 0xD40D  --used

COEX_TP_D40E = 0xD40E

COEX_TP_D40F = 0xD40F  --used

COEX_TP_D410 = 0xD410

COEX_TP_D411 = 0xD411

COEX_TP_D412 = 0xD412

COEX_TP_D413 = 0xD413

COEX_TP_D414 = 0xD414

COEX_TP_D415 = 0xD415

COEX_TP_D416 = 0xD416

COEX_TP_D417 = 0xD417

COEX_TP_D418 = 0xD418

COEX_TP_D419 = 0xD419

COEX_TP_D41A = 0xD41A

COEX_TP_D41B = 0xD41B

COEX_TP_D41C = 0xD41C

COEX_TP_D41D = 0xD41D

COEX_TP_D41E = 0xD41E

COEX_TP_D41F = 0xD41F

COEX_TP_D420 = 0xD420

COEX_TP_D421 = 0xD421

COEX_TP_D422 = 0xD422

COEX_TP_D423 = 0xD423  --used

COEX_TP_D424 = 0xD424

COEX_TP_D425 = 0xD425  --used

COEX_TP_D426 = 0xD426  --used

COEX_TP_D427 = 0xD427  --used

COEX_TP_D428 = 0xD428

COEX_TP_D429 = 0xD429  --used

COEX_TP_D42A = 0xD42A

COEX_TP_D42B = 0xD42B

COEX_TP_D42C = 0xD42C

COEX_TP_D42D = 0xD42D  --used

COEX_TP_D42E = 0xD42E

COEX_TP_D42F = 0xD42F  --used

COEX_TP_D430 = 0xD430  --used

COEX_TP_D431 = 0xD431  --used

COEX_TP_D432 = 0xD432

COEX_TP_D433 = 0xD433  --used

COEX_TP_D434 = 0xD434  --used

COEX_TP_D435 = 0xD435  --used

COEX_TP_D436 = 0xD436  --used

COEX_TP_D437 = 0xD437  --used

COEX_TP_D438 = 0xD438  --used

COEX_TP_D439 = 0xD439  --used

COEX_TP_D43A = 0xD43A  --used

COEX_TP_D43B = 0xD43B  --used

COEX_TP_D43C = 0xD43C  --used

COEX_TP_D43D = 0xD43D  --used

COEX_TP_D43E = 0xD43E  --used

COEX_TP_D43F = 0xD43F  --used

COEX_TP_D440 = 0xD440    --used

COEX_TP_D441 = 0xD441    --used

COEX_TP_D442 = 0xD442    --used

COEX_TP_D443 = 0xD443    --used

COEX_TP_D444 = 0xD444    --used

COEX_TP_D445 = 0xD445    --used

COEX_TP_D446 = 0xD446    --used

COEX_TP_D447 = 0xD447    --used

COEX_TP_D448 = 0xD448    --used

COEX_TP_D449 = 0xD449    --used

COEX_TP_D44A = 0xD44A    --used

COEX_TP_D44B = 0xD44B    --used

COEX_TP_D44C = 0xD44C    --used

COEX_TP_D44D = 0xD44D    --used

COEX_TP_D44E = 0xD44E    --used

COEX_TP_D44F = 0xD44F    --used

COEX_TP_D450 = 0xD450    --used

COEX_TP_D451 = 0xD451    --used

COEX_TP_D452 = 0xD452    --used

COEX_TP_D453 = 0xD453    --used

COEX_TP_D454 = 0xD454    --used

COEX_TP_D455 = 0xD455    --used

COEX_TP_D456 = 0xD456    --used

COEX_TP_D457 = 0xD457    --used

COEX_TP_D458 = 0xD458    --used

COEX_TP_D459 = 0xD459    --used

COEX_TP_D45A = 0xD45A    --used

COEX_TP_D45B = 0xD45B    --used

COEX_TP_D45C = 0xD45C    --used

COEX_TP_D45D = 0xD45D    --used

COEX_TP_D45E = 0xD45E    --used

COEX_TP_D45F = 0xD45F    --used

COEX_TP_D460 = 0xD460    --used

COEX_TP_D461 = 0xD461

COEX_TP_D462 = 0xD462

COEX_TP_D463 = 0xD463

COEX_TP_D464 = 0xD464

COEX_TP_D465 = 0xD465

COEX_TP_D466 = 0xD466

COEX_TP_D467 = 0xD467

COEX_TP_D468 = 0xD468

COEX_TP_D469 = 0xD469

COEX_TP_D46A = 0xD46A

COEX_TP_D46B = 0xD46B

COEX_TP_D46C = 0xD46C

COEX_TP_D46D = 0xD46D

COEX_TP_D46E = 0xD46E    --used

COEX_TP_D46F = 0xD46F    --used

COEX_TP_D470 = 0xD470     --used

COEX_TP_D471 = 0xD471     --used

COEX_TP_D472 = 0xD472     --used

COEX_TP_D473 = 0xD473     --used

COEX_TP_D474 = 0xD474     --used

COEX_TP_D475 = 0xD475

COEX_TP_D476 = 0xD476

COEX_TP_D477 = 0xD477

COEX_TP_D478 = 0xD478

COEX_TP_D479 = 0xD479

COEX_TP_D47A = 0xD47A

COEX_TP_D47B = 0xD47B

COEX_TP_D47C = 0xD47C

COEX_TP_D47D = 0xD47D

COEX_TP_D47E = 0xD47E

COEX_TP_D47F = 0xD47F

COEX_TP_D480 = 0xD480

COEX_TP_D481 = 0xD481

COEX_TP_D482 = 0xD482

COEX_TP_D483 = 0xD483

COEX_TP_D484 = 0xD484

COEX_TP_D485 = 0xD485

COEX_TP_D486 = 0xD486

COEX_TP_D487 = 0xD487

COEX_TP_D488 = 0xD488

COEX_TP_D489 = 0xD489

COEX_TP_D48A = 0xD48A

COEX_TP_D48B = 0xD48B

COEX_TP_D48C = 0xD48C

COEX_TP_D48D = 0xD48D

COEX_TP_D48E = 0xD48E

COEX_TP_D48F = 0xD48F

COEX_TP_D490 = 0xD490  --used

COEX_TP_D491 = 0xD491  --used

COEX_TP_D492 = 0xD492  --used

COEX_TP_D493 = 0xD493  --used

COEX_TP_D494 = 0xD494  --used

COEX_TP_D495 = 0xD495

COEX_TP_D496 = 0xD496

COEX_TP_D497 = 0xD497

COEX_TP_D498 = 0xD498

COEX_TP_D499 = 0xD499

COEX_TP_D49A = 0xD49A

COEX_TP_D49B = 0xD49B

COEX_TP_D49C = 0xD49C

COEX_TP_D49D = 0xD49D

COEX_TP_D49E = 0xD49E

COEX_TP_D49F = 0xD49F

COEX_TP_D4A0 = 0xD4A0  --used

COEX_TP_D4A1 = 0xD4A1

COEX_TP_D4A2 = 0xD4A2

COEX_TP_D4A3 = 0xD4A3

COEX_TP_D4A4 = 0xD4A4

COEX_TP_D4A5 = 0xD4A5

COEX_TP_D4A6 = 0xD4A6

COEX_TP_D4A7 = 0xD4A7

COEX_TP_D4A8 = 0xD4A8

COEX_TP_D4A9 = 0xD4A9

COEX_TP_D4AA = 0xD4AA

COEX_TP_D4AB = 0xD4AB

COEX_TP_D4AC = 0xD4AC

COEX_TP_D4AD = 0xD4AD

COEX_TP_D4AE = 0xD4AE

COEX_TP_D4AF = 0xD4AF

COEX_TP_D4B0 = 0xD4B0  --used

COEX_TP_D4B1 = 0xD4B1

COEX_TP_D4B2 = 0xD4B2

COEX_TP_D4B3 = 0xD4B3  --used

COEX_TP_D4B4 = 0xD4B4  --used

COEX_TP_D4B5 = 0xD4B5

COEX_TP_D4B6 = 0xD4B6

COEX_TP_D4B7 = 0xD4B7

COEX_TP_D4B8 = 0xD4B8

COEX_TP_D4B9 = 0xD4B9

COEX_TP_D4BA = 0xD4BA

COEX_TP_D4BB = 0xD4BB

COEX_TP_D4BC = 0xD4BC

COEX_TP_D4BD = 0xD4BD

COEX_TP_D4BE = 0xD4BE

COEX_TP_D4BF = 0xD4BF

COEX_TP_D4C0 = 0xD4C0

COEX_TP_D4C1 = 0xD4C1

COEX_TP_D4C2 = 0xD4C2

COEX_TP_D4C3 = 0xD4C3

COEX_TP_D4C4 = 0xD4C4

COEX_TP_D4C5 = 0xD4C5

COEX_TP_D4C6 = 0xD4C6

COEX_TP_D4C7 = 0xD4C7

COEX_TP_D4C8 = 0xD4C8

COEX_TP_D4C9 = 0xD4C9

COEX_TP_D4CA = 0xD4CA  --used

COEX_TP_D4CB = 0xD4CB  --used

COEX_TP_D4CC = 0xD4CC  --used

COEX_TP_D4CD = 0xD4CD  --used

COEX_TP_D4CE = 0xD4CE  --used

COEX_TP_D4CF = 0xD4CF

COEX_TP_D4D0 = 0xD4D0  --used

COEX_TP_D4D1 = 0xD4D1

COEX_TP_D4D2 = 0xD4D2  --used

COEX_TP_D4D3 = 0xD4D3  --used

COEX_TP_D4D4 = 0xD4D4  --used

COEX_TP_D4D5 = 0xD4D5  --used

COEX_TP_D4D6 = 0xD4D6  --used

COEX_TP_D4D7 = 0xD4D7  --used

COEX_TP_D4D8 = 0xD4D8

COEX_TP_D4D9 = 0xD4D9  --used

COEX_TP_D4DA = 0xD4DA  --used

COEX_TP_D4DB = 0xD4DB  --used

COEX_TP_D4DC = 0xD4DC  --used

COEX_TP_D4DD = 0xD4DD  --used

COEX_TP_D4DE = 0xD4DE  --used

COEX_TP_D4DF = 0xD4DF  --used

COEX_TP_D4E0 = 0xD4E0  --used

COEX_TP_D4E1 = 0xD4E1  --used

COEX_TP_D4E2 = 0xD4E2  --used

COEX_TP_D4E3 = 0xD4E3  --used

COEX_TP_D4E4 = 0xD4E4  --used

COEX_TP_D4E5 = 0xD4E5  --used

COEX_TP_D4E6 = 0xD4E6  --used

COEX_TP_D4E7 = 0xD4E7  --used

COEX_TP_D4E8 = 0xD4E8  --used

COEX_TP_D4E9 = 0xD4E9  --used

COEX_TP_D4EA = 0xD4EA  --used

COEX_TP_D4EB = 0xD4EB  --used

COEX_TP_D4EC = 0xD4EC  --used

COEX_TP_D4ED = 0xD4ED  --used

COEX_TP_D4EE = 0xD4EE  --used

COEX_TP_D4EF = 0xD4EF  --used

COEX_TP_D4F0 = 0xD4F0  --used

COEX_TP_D4F1 = 0xD4F1  --used

COEX_TP_D4F2 = 0xD4F2  --used

COEX_TP_D4F3 = 0xD4F3

COEX_TP_D4F4 = 0xD4F4

COEX_TP_D4F5 = 0xD4F5

COEX_TP_D4F6 = 0xD4F6  --used

COEX_TP_D4F7 = 0xD4F7

COEX_TP_D4F8 = 0xD4F8

COEX_TP_D4F9 = 0xD4F9

COEX_TP_D4FA = 0xD4FA

COEX_TP_D4FB = 0xD4FB

COEX_TP_D4FC = 0xD4FC  --used

COEX_TP_D4FD = 0xD4FD

COEX_TP_D4FE = 0xD4FE  --used

COEX_TP_D4FF = 0xD4FF  --used

COEX_TP_DA00 = (0xDA00)

COEX_TP_DA01 = (0xDA01)

COEX_TP_DA02 = (0xDA02)  --used

COEX_TP_DA03 = (0xDA03)  --used

COEX_TP_DA04 = (0xDA04)

COEX_TP_DA05 = (0xDA05)  --used

COEX_TP_DA06 = (0xDA06)  --used

COEX_TP_DA07 = (0xDA07)  --used

COEX_TP_DA08 = (0xDA08)

COEX_TP_DA09 = (0xDA09)

COEX_TP_DA0A = (0xDA0A)

COEX_TP_DA0B = (0xDA0B)

COEX_TP_DA0C = (0xDA0C)

COEX_TP_DA0D = (0xDA0D)

COEX_TP_DA0E = (0xDA0E)

COEX_TP_DA0F = (0xDA0F)

COEX_TP_DA10 = (0xDA10)  --used

COEX_TP_DA11 = (0xDA11)  --used

COEX_TP_DA12 = (0xDA12)  --used

COEX_TP_DA13 = (0xDA13)  --used

COEX_TP_DA14 = (0xDA14)  --used

COEX_TP_DA15 = (0xDA15)  --used

COEX_TP_DA16 = (0xDA16)  --used

COEX_TP_DA17 = (0xDA17)  --used

COEX_TP_DA18 = (0xDA18)  --used

COEX_TP_DA19 = (0xDA19)  --used

COEX_TP_DA1A = (0xDA1A)  --used

COEX_TP_DA1B = (0xDA1B)  --used

COEX_TP_DA1C = (0xDA1C)  --used

COEX_TP_DA1D = (0xDA1D)

COEX_TP_DA1E = (0xDA1E)

COEX_TP_DA1F = (0xDA1F)

COEX_TP_DA20 = (0xDA20)  --used

COEX_TP_DA21 = (0xDA21)  --used

COEX_TP_DA22 = (0xDA22)  --used

COEX_TP_DA23 = (0xDA23)  --used

COEX_TP_DA24 = (0xDA24)  --used

COEX_TP_DA25 = (0xDA25)  --used

COEX_TP_DA26 = (0xDA26)  --used

COEX_TP_DA27 = (0xDA27)  --used

COEX_TP_DA28 = (0xDA28)  --used

COEX_TP_DA29 = (0xDA29)  --used

COEX_TP_DA2A = (0xDA2A)

COEX_TP_DA2B = (0xDA2B)

COEX_TP_DA2C = (0xDA2C)

COEX_TP_DA2D = (0xDA2D)

COEX_TP_DA2E = (0xDA2E)

COEX_TP_DA2F = (0xDA2F)

COEX_TP_DA30 = (0xDA30)

COEX_TP_DA31 = (0xDA31)

COEX_TP_DA32 = (0xDA32)

COEX_TP_DA33 = (0xDA33)

COEX_TP_DA34 = (0xDA34)  --used

COEX_TP_DA35 = (0xDA35)

COEX_TP_DA36 = (0xDA36)

COEX_TP_DA37 = (0xDA37)

COEX_TP_DA38 = (0xDA38)

COEX_TP_DA39 = (0xDA39)

COEX_TP_DA3A = (0xDA3A)

COEX_TP_DA3B = (0xDA3B)

COEX_TP_DA3C = (0xDA3C)

COEX_TP_DA3D = (0xDA3D)

COEX_TP_DA3E = (0xDA3E)

COEX_TP_DA3F = (0xDA3F)

COEX_TP_DA40 = (0xDA40)

COEX_TP_DA41 = (0xDA41)

COEX_TP_DA42 = (0xDA42)

COEX_TP_DA43 = (0xDA43)

COEX_TP_DA44 = (0xDA44)

COEX_TP_DA45 = (0xDA45)

COEX_TP_DA46 = (0xDA46)

COEX_TP_DA47 = (0xDA47)

COEX_TP_DA48 = (0xDA48)

COEX_TP_DA49 = (0xDA49)

COEX_TP_DA4A = (0xDA4A)

COEX_TP_DA4B = (0xDA4B)

COEX_TP_DA4C = (0xDA4C)

COEX_TP_DA4D = (0xDA4D)

COEX_TP_DA4E = (0xDA4E)

COEX_TP_DA4F = (0xDA4F)

COEX_TP_DA50 = (0xDA50)

COEX_TP_DA51 = (0xDA51)

COEX_TP_DA52 = (0xDA52)

COEX_TP_DA53 = (0xDA53)

COEX_TP_DA54 = (0xDA54)

COEX_TP_DA55 = (0xDA55)

COEX_TP_DA56 = (0xDA56)

COEX_TP_DA57 = (0xDA57)

COEX_TP_DA58 = (0xDA58)

COEX_TP_DA59 = (0xDA59)

COEX_TP_DA5A = (0xDA5A)

COEX_TP_DA5B = (0xDA5B)

COEX_TP_DA5C = (0xDA5C)

COEX_TP_DA5D = (0xDA5D)

COEX_TP_DA5E = (0xDA5E)

COEX_TP_DA5F = (0xDA5F)

COEX_TP_DA60 = (0xDA60)

COEX_TP_DA61 = (0xDA61)

COEX_TP_DA62 = (0xDA62)

COEX_TP_DA63 = (0xDA63)

COEX_TP_DA64 = (0xDA64)

COEX_TP_DA65 = (0xDA65)

COEX_TP_DA66 = (0xDA66)

COEX_TP_DA67 = (0xDA67)

COEX_TP_DA68 = (0xDA68)

COEX_TP_DA69 = (0xDA69)

COEX_TP_DA6A = (0xDA6A)

COEX_TP_DA6B = (0xDA6B)

COEX_TP_DA6C = (0xDA6C)

COEX_TP_DA6D = (0xDA6D)

COEX_TP_DA6E = (0xDA6E)

COEX_TP_DA6F = (0xDA6F)

COEX_TP_DA70 = (0xDA70)

COEX_TP_DA71 = (0xDA71)

COEX_TP_DA72 = (0xDA72)

COEX_TP_DA73 = (0xDA73)

COEX_TP_DA74 = (0xDA74)

COEX_TP_DA75 = (0xDA75)

COEX_TP_DA76 = (0xDA76)

COEX_TP_DA77 = (0xDA77)

COEX_TP_DA78 = (0xDA78)

COEX_TP_DA79 = (0xDA79)

COEX_TP_DA7A = (0xDA7A)

COEX_TP_DA7B = (0xDA7B)

COEX_TP_DA7C = (0xDA7C)

COEX_TP_DA7D = (0xDA7D)

COEX_TP_DA7E = (0xDA7E)

COEX_TP_DA7F = (0xDA7F)

COEX_TP_DA80 = (0xDA80)

COEX_TP_DA81 = (0xDA81)

COEX_TP_DA82 = (0xDA82)

COEX_TP_DA83 = (0xDA83)

COEX_TP_DA84 = (0xDA84)

COEX_TP_DA85 = (0xDA85)

COEX_TP_DA86 = (0xDA86)

COEX_TP_DA87 = (0xDA87)

COEX_TP_DA88 = (0xDA88)

COEX_TP_DA89 = (0xDA89)

COEX_TP_DA8A = (0xDA8A)

COEX_TP_DA8B = (0xDA8B)

COEX_TP_DA8C = (0xDA8C)

COEX_TP_DA8D = (0xDA8D)

COEX_TP_DA8E = (0xDA8E)

COEX_TP_DA8F = (0xDA8F)

COEX_TP_DA90 = (0xDA90)  --used

COEX_TP_DA91 = (0xDA91)

COEX_TP_DA92 = (0xDA92)

COEX_TP_DA93 = (0xDA93)

COEX_TP_DA94 = (0xDA94)

COEX_TP_DA95 = (0xDA95)

COEX_TP_DA96 = (0xDA96)

COEX_TP_DA97 = (0xDA97)

COEX_TP_DA98 = (0xDA98)

COEX_TP_DA99 = (0xDA99)

COEX_TP_DA9A = (0xDA9A)

COEX_TP_DA9B = (0xDA9B)

COEX_TP_DA9C = (0xDA9C)

COEX_TP_DA9D = (0xDA9D)

COEX_TP_DA9E = (0xDA9E)

COEX_TP_DA9F = (0xDA9F)

COEX_TP_DAA0 = (0xDAA0)  --used

COEX_TP_DAA1 = (0xDAA1)

COEX_TP_DAA2 = (0xDAA2)

COEX_TP_DAA3 = (0xDAA3)

COEX_TP_DAA4 = (0xDAA4)

COEX_TP_DAA5 = (0xDAA5)

COEX_TP_DAA6 = (0xDAA6)

COEX_TP_DAA7 = (0xDAA7)

COEX_TP_DAA8 = (0xDAA8)

COEX_TP_DAA9 = (0xDAA9)

COEX_TP_DAAA = (0xDAAA)

COEX_TP_DAAB = (0xDAAB)

COEX_TP_DAAC = (0xDAAC)

COEX_TP_DAAD = (0xDAAD)

COEX_TP_DAAE = (0xDAAE)

COEX_TP_DAAF = (0xDAAF)

COEX_TP_DAB0 = (0xDAB0)

COEX_TP_DAB1 = (0xDAB1)

COEX_TP_DAB2 = (0xDAB2)

COEX_TP_DAB3 = (0xDAB3)

COEX_TP_DAB4 = (0xDAB4)

COEX_TP_DAB5 = (0xDAB5)

COEX_TP_DAB6 = (0xDAB6)

COEX_TP_DAB7 = (0xDAB7)

COEX_TP_DAB8 = (0xDAB8)

COEX_TP_DAB9 = (0xDAB9)

COEX_TP_DABA = (0xDABA)

COEX_TP_DABB = (0xDABB)

COEX_TP_DABC = (0xDABC)

COEX_TP_DABD = (0xDABD)

COEX_TP_DABE = (0xDABE)

COEX_TP_DABF = (0xDABF)

COEX_TP_DAC0 = (0xDAC0)

COEX_TP_DAC1 = (0xDAC1)

COEX_TP_DAC2 = (0xDAC2)

COEX_TP_DAC3 = (0xDAC3)

COEX_TP_DAC4 = (0xDAC4)

COEX_TP_DAC5 = (0xDAC5)

COEX_TP_DAC6 = (0xDAC6)

COEX_TP_DAC7 = (0xDAC7)

COEX_TP_DAC8 = (0xDAC8)

COEX_TP_DAC9 = (0xDAC9)

COEX_TP_DACA = (0xDACA)

COEX_TP_DACB = (0xDACB)

COEX_TP_DACC = (0xDACC)

COEX_TP_DACD = (0xDACD)

COEX_TP_DACE = (0xDACE)

COEX_TP_DACF = (0xDACF)

COEX_TP_DAD0 = (0xDAD0)

COEX_TP_DAD1 = (0xDAD1)

COEX_TP_DAD2 = (0xDAD2)

COEX_TP_DAD3 = (0xDAD3)

COEX_TP_DAD4 = (0xDAD4)

COEX_TP_DAD5 = (0xDAD5)

COEX_TP_DAD6 = (0xDAD6)

COEX_TP_DAD7 = (0xDAD7)

COEX_TP_DAD8 = (0xDAD8)

COEX_TP_DAD9 = (0xDAD9)

COEX_TP_DADA = (0xDADA)

COEX_TP_DADB = (0xDADB)

COEX_TP_DADC = (0xDADC)

COEX_TP_DADD = (0xDADD)

COEX_TP_DADE = (0xDADE)

COEX_TP_DADF = (0xDADF)

COEX_TP_DAE0 = (0xDAE0)

COEX_TP_DAE1 = (0xDAE1)

COEX_TP_DAE2 = (0xDAE2)

COEX_TP_DAE3 = (0xDAE3)

COEX_TP_DAE4 = (0xDAE4)

COEX_TP_DAE5 = (0xDAE5)

COEX_TP_DAE6 = (0xDAE6)

COEX_TP_DAE7 = (0xDAE7)

COEX_TP_DAE8 = (0xDAE8)

COEX_TP_DAE9 = (0xDAE9)

COEX_TP_DAEA = (0xDAEA)

COEX_TP_DAEB = (0xDAEB)

COEX_TP_DAEC = (0xDAEC)

COEX_TP_DAED = (0xDAED)

COEX_TP_DAEE = (0xDAEE)

COEX_TP_DAEF = (0xDAEF)

COEX_TP_DAF0 = (0xDAF0)

COEX_TP_DAF1 = (0xDAF1)

COEX_TP_DAF2 = (0xDAF2)

COEX_TP_DAF3 = (0xDAF3)

COEX_TP_DAF4 = (0xDAF4)

COEX_TP_DAF5 = (0xDAF5)

COEX_TP_DAF6 = (0xDAF6)

COEX_TP_DAF7 = (0xDAF7)

COEX_TP_DAF8 = (0xDAF8)

COEX_TP_DAF9 = (0xDAF9)

COEX_TP_DAFA = (0xDAFA)

COEX_TP_DAFB = (0xDAFB)

COEX_TP_DAFC = (0xDAFC)

COEX_TP_DAFD = (0xDAFD)

COEX_TP_DAFE = (0xDAFE)

COEX_TP_DAFF = (0xDAFF)


--[[--------------------------------------------------------------------
Content below is from *.i (preprocess file)
--]]--------------------------------------------------------------------


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/a2dp_offload.o.i
format_strs[UPT_D620] = "sbc header position %d"
field_strs[UPT_D620] = 1
func_name_array[UPT_D620] = ""

-- description function for UPT_D620	
function func_desc_UPT_D620(address, data)

	if not format_strs[UPT_D620] then
		format_strs[UPT_D620]="Not defined :0x%x"
		field_strs[UPT_D620]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D620]]
	fmt_str=func_name_array[UPT_D620] .. format_strs[UPT_D620] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D621] = "a2dp offload find buffer %x"
field_strs[UPT_D621] = 1
func_name_array[UPT_D621] = ""

-- description function for UPT_D621	
function func_desc_UPT_D621(address, data)

	if not format_strs[UPT_D621] then
		format_strs[UPT_D621]="Not defined :0x%x"
		field_strs[UPT_D621]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D621]]
	fmt_str=func_name_array[UPT_D621] .. format_strs[UPT_D621] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D601] = "PCM_DMATx_CallBack,tx_src_address=%x"
field_strs[UPT_D601] = 1
func_name_array[UPT_D601] = ""

-- description function for UPT_D601	
function func_desc_UPT_D601(address, data)

	if not format_strs[UPT_D601] then
		format_strs[UPT_D601]="Not defined :0x%x"
		field_strs[UPT_D601]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D601]]
	fmt_str=func_name_array[UPT_D601] .. format_strs[UPT_D601] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D602] = "PCM_DMARx_CallBack,rx_dest_address=%x"
field_strs[UPT_D602] = 1
func_name_array[UPT_D602] = ""

-- description function for UPT_D602	
function func_desc_UPT_D602(address, data)

	if not format_strs[UPT_D602] then
		format_strs[UPT_D602]="Not defined :0x%x"
		field_strs[UPT_D602]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D602]]
	fmt_str=func_name_array[UPT_D602] .. format_strs[UPT_D602] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/adv_buf_mgr.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/audio_var.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bthw_verify.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/btit_bb_test.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/btit_common.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/btit_hci_test.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/btit_ll_test.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/btit_lmp_cmd_dispatch.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/btit_lmp_test.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_addr_sync.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_calibration_rx_dcoc.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_calibration_rx_dcoc_auto.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_calibration_rx_iq.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_calibration_rx_iq_auto.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_calibration_rx_rc.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_calibration_rx_rc_auto.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_calibration_tx_iq.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_calibration_tx_iq_auto.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_fhs_impl.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_init.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_mini_sched.o.i
format_strs[UPT_D8A3] = "Handle HC Reset %x"
field_strs[UPT_D8A3] = 1
func_name_array[UPT_D8A3] = ""

-- description function for UPT_D8A3	
function func_desc_UPT_D8A3(address, data)

	if not format_strs[UPT_D8A3] then
		format_strs[UPT_D8A3]="Not defined :0x%x"
		field_strs[UPT_D8A3]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D8A3]]
	fmt_str=func_name_array[UPT_D8A3] .. format_strs[UPT_D8A3] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_test.o.i
format_strs[UPT_D902] = "p_link:0x%x"
field_strs[UPT_D902] = 1
func_name_array[UPT_D902] = ""

-- description function for UPT_D902	
function func_desc_UPT_D902(address, data)

	if not format_strs[UPT_D902] then
		format_strs[UPT_D902]="Not defined :0x%x"
		field_strs[UPT_D902]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D902]]
	fmt_str=func_name_array[UPT_D902] .. format_strs[UPT_D902] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D903] = "powertype = 0x%x,powervalue = 0x%x"
field_strs[UPT_D903] = 2
func_name_array[UPT_D903] = ""

-- description function for UPT_D903	
function func_desc_UPT_D903(address, data)

	if not format_strs[UPT_D903] then
		format_strs[UPT_D903]="Not defined :0x%x"
		field_strs[UPT_D903]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D903]]
	fmt_str=func_name_array[UPT_D903] .. format_strs[UPT_D903] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D904] = "tx_power_word = 0x%x"
field_strs[UPT_D904] = 1
func_name_array[UPT_D904] = ""

-- description function for UPT_D904	
function func_desc_UPT_D904(address, data)

	if not format_strs[UPT_D904] then
		format_strs[UPT_D904]="Not defined :0x%x"
		field_strs[UPT_D904]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D904]]
	fmt_str=func_name_array[UPT_D904] .. format_strs[UPT_D904] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D905] = "remote_bd_addr = 0x%x"
field_strs[UPT_D905] = 1
func_name_array[UPT_D905] = ""

-- description function for UPT_D905	
function func_desc_UPT_D905(address, data)

	if not format_strs[UPT_D905] then
		format_strs[UPT_D905]="Not defined :0x%x"
		field_strs[UPT_D905]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D905]]
	fmt_str=func_name_array[UPT_D905] .. format_strs[UPT_D905] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D906] = "syncword.low = 0x%x"
field_strs[UPT_D906] = 1
func_name_array[UPT_D906] = ""

-- description function for UPT_D906	
function func_desc_UPT_D906(address, data)

	if not format_strs[UPT_D906] then
		format_strs[UPT_D906]="Not defined :0x%x"
		field_strs[UPT_D906]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D906]]
	fmt_str=func_name_array[UPT_D906] .. format_strs[UPT_D906] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D907] = "syncword.low >> 16 = 0x%x"
field_strs[UPT_D907] = 1
func_name_array[UPT_D907] = ""

-- description function for UPT_D907	
function func_desc_UPT_D907(address, data)

	if not format_strs[UPT_D907] then
		format_strs[UPT_D907]="Not defined :0x%x"
		field_strs[UPT_D907]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D907]]
	fmt_str=func_name_array[UPT_D907] .. format_strs[UPT_D907] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D908] = "syncword.high = 0x%x"
field_strs[UPT_D908] = 1
func_name_array[UPT_D908] = ""

-- description function for UPT_D908	
function func_desc_UPT_D908(address, data)

	if not format_strs[UPT_D908] then
		format_strs[UPT_D908]="Not defined :0x%x"
		field_strs[UPT_D908]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D908]]
	fmt_str=func_name_array[UPT_D908] .. format_strs[UPT_D908] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D909] = "syncword.high >> 16 = 0x%x"
field_strs[UPT_D909] = 1
func_name_array[UPT_D909] = ""

-- description function for UPT_D909	
function func_desc_UPT_D909(address, data)

	if not format_strs[UPT_D909] then
		format_strs[UPT_D909]="Not defined :0x%x"
		field_strs[UPT_D909]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D909]]
	fmt_str=func_name_array[UPT_D909] .. format_strs[UPT_D909] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D90A] = "p_link = 0x%x"
field_strs[UPT_D90A] = 1
func_name_array[UPT_D90A] = ""

-- description function for UPT_D90A	
function func_desc_UPT_D90A(address, data)

	if not format_strs[UPT_D90A] then
		format_strs[UPT_D90A]="Not defined :0x%x"
		field_strs[UPT_D90A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D90A]]
	fmt_str=func_name_array[UPT_D90A] .. format_strs[UPT_D90A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D90B] = "current_bt_clk:0x%x"
field_strs[UPT_D90B] = 1
func_name_array[UPT_D90B] = ""

-- description function for UPT_D90B	
function func_desc_UPT_D90B(address, data)

	if not format_strs[UPT_D90B] then
		format_strs[UPT_D90B]="Not defined :0x%x"
		field_strs[UPT_D90B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D90B]]
	fmt_str=func_name_array[UPT_D90B] .. format_strs[UPT_D90B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D90C] = "current_dut_mode = %d"
field_strs[UPT_D90C] = 1
func_name_array[UPT_D90C] = ""

-- description function for UPT_D90C	
function func_desc_UPT_D90C(address, data)

	if not format_strs[UPT_D90C] then
		format_strs[UPT_D90C]="Not defined :0x%x"
		field_strs[UPT_D90C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D90C]]
	fmt_str=func_name_array[UPT_D90C] .. format_strs[UPT_D90C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D90D] = "rx_gain = 0x%x, raw_rssi = 0x%x"
field_strs[UPT_D90D] = 2
func_name_array[UPT_D90D] = ""

-- description function for UPT_D90D	
function func_desc_UPT_D90D(address, data)

	if not format_strs[UPT_D90D] then
		format_strs[UPT_D90D]="Not defined :0x%x"
		field_strs[UPT_D90D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D90D]]
	fmt_str=func_name_array[UPT_D90D] .. format_strs[UPT_D90D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D90E] = "p_link = 0x%x"
field_strs[UPT_D90E] = 1
func_name_array[UPT_D90E] = ""

-- description function for UPT_D90E	
function func_desc_UPT_D90E(address, data)

	if not format_strs[UPT_D90E] then
		format_strs[UPT_D90E]="Not defined :0x%x"
		field_strs[UPT_D90E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D90E]]
	fmt_str=func_name_array[UPT_D90E] .. format_strs[UPT_D90E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D90F] = "p_monitors->RxValidPackets = 0x%x"
field_strs[UPT_D90F] = 1
func_name_array[UPT_D90F] = ""

-- description function for UPT_D90F	
function func_desc_UPT_D90F(address, data)

	if not format_strs[UPT_D90F] then
		format_strs[UPT_D90F]="Not defined :0x%x"
		field_strs[UPT_D90F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D90F]]
	fmt_str=func_name_array[UPT_D90F] .. format_strs[UPT_D90F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D910] = "p_monitors->RxInvalidPackets = 0x%x"
field_strs[UPT_D910] = 1
func_name_array[UPT_D910] = ""

-- description function for UPT_D910	
function func_desc_UPT_D910(address, data)

	if not format_strs[UPT_D910] then
		format_strs[UPT_D910]="Not defined :0x%x"
		field_strs[UPT_D910]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D910]]
	fmt_str=func_name_array[UPT_D910] .. format_strs[UPT_D910] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D911] = "rx_packet_type:0x%x"
field_strs[UPT_D911] = 1
func_name_array[UPT_D911] = ""

-- description function for UPT_D911	
function func_desc_UPT_D911(address, data)

	if not format_strs[UPT_D911] then
		format_strs[UPT_D911]="Not defined :0x%x"
		field_strs[UPT_D911]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D911]]
	fmt_str=func_name_array[UPT_D911] .. format_strs[UPT_D911] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D912] = "JAL_EDR_PTT_ACL:0x%x"
field_strs[UPT_D912] = 1
func_name_array[UPT_D912] = ""

-- description function for UPT_D912	
function func_desc_UPT_D912(address, data)

	if not format_strs[UPT_D912] then
		format_strs[UPT_D912]="Not defined :0x%x"
		field_strs[UPT_D912]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D912]]
	fmt_str=func_name_array[UPT_D912] .. format_strs[UPT_D912] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D913] = "JAL_EDR_PTT_ESCO:0x%x"
field_strs[UPT_D913] = 1
func_name_array[UPT_D913] = ""

-- description function for UPT_D913	
function func_desc_UPT_D913(address, data)

	if not format_strs[UPT_D913] then
		format_strs[UPT_D913]="Not defined :0x%x"
		field_strs[UPT_D913]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D913]]
	fmt_str=func_name_array[UPT_D913] .. format_strs[UPT_D913] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D914] = "testScenario:0x%x, packetType:0x%x"
field_strs[UPT_D914] = 2
func_name_array[UPT_D914] = ""

-- description function for UPT_D914	
function func_desc_UPT_D914(address, data)

	if not format_strs[UPT_D914] then
		format_strs[UPT_D914]="Not defined :0x%x"
		field_strs[UPT_D914]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D914]]
	fmt_str=func_name_array[UPT_D914] .. format_strs[UPT_D914] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D915] = "rxgain = 0x%x"
field_strs[UPT_D915] = 1
func_name_array[UPT_D915] = ""

-- description function for UPT_D915	
function func_desc_UPT_D915(address, data)

	if not format_strs[UPT_D915] then
		format_strs[UPT_D915]="Not defined :0x%x"
		field_strs[UPT_D915]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D915]]
	fmt_str=func_name_array[UPT_D915] .. format_strs[UPT_D915] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D916] = "tm_ctrl->packetLength = 0x%x"
field_strs[UPT_D916] = 1
func_name_array[UPT_D916] = ""

-- description function for UPT_D916	
function func_desc_UPT_D916(address, data)

	if not format_strs[UPT_D916] then
		format_strs[UPT_D916]="Not defined :0x%x"
		field_strs[UPT_D916]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D916]]
	fmt_str=func_name_array[UPT_D916] .. format_strs[UPT_D916] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D917] = "rx_length = 0x%x"
field_strs[UPT_D917] = 1
func_name_array[UPT_D917] = ""

-- description function for UPT_D917	
function func_desc_UPT_D917(address, data)

	if not format_strs[UPT_D917] then
		format_strs[UPT_D917]="Not defined :0x%x"
		field_strs[UPT_D917]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D917]]
	fmt_str=func_name_array[UPT_D917] .. format_strs[UPT_D917] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D918] = "m_seed = 0x%x"
field_strs[UPT_D918] = 1
func_name_array[UPT_D918] = ""

-- description function for UPT_D918	
function func_desc_UPT_D918(address, data)

	if not format_strs[UPT_D918] then
		format_strs[UPT_D918]="Not defined :0x%x"
		field_strs[UPT_D918]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D918]]
	fmt_str=func_name_array[UPT_D918] .. format_strs[UPT_D918] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_tester.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/bt_timer.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/common_var.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/dl_dev_impl.o.i
format_strs[UPT_D185] = "device index=%d, set tx ack pending[DL_Set_Tx_Ack_Pending]"
field_strs[UPT_D185] = 1
func_name_array[UPT_D185] = ""

-- description function for UPT_D185	
function func_desc_UPT_D185(address, data)

	if not format_strs[UPT_D185] then
		format_strs[UPT_D185]="Not defined :0x%x"
		field_strs[UPT_D185]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D185]]
	fmt_str=func_name_array[UPT_D185] .. format_strs[UPT_D185] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D187] = "device index=%d, clear tx ack pending[DL_Clear_Tx_Ack_Pending]"
field_strs[UPT_D187] = 1
func_name_array[UPT_D187] = ""

-- description function for UPT_D187	
function func_desc_UPT_D187(address, data)

	if not format_strs[UPT_D187] then
		format_strs[UPT_D187]="Not defined :0x%x"
		field_strs[UPT_D187]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D187]]
	fmt_str=func_name_array[UPT_D187] .. format_strs[UPT_D187] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D186] = "device index=%d, set tx ack pending[DL_Set_Tx_LT_Tx_Ack_Pending]"
field_strs[UPT_D186] = 1
func_name_array[UPT_D186] = ""

-- description function for UPT_D186	
function func_desc_UPT_D186(address, data)

	if not format_strs[UPT_D186] then
		format_strs[UPT_D186]="Not defined :0x%x"
		field_strs[UPT_D186]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D186]]
	fmt_str=func_name_array[UPT_D186] .. format_strs[UPT_D186] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D188] = "device index=%d, clear tx ack pending[DL_Clear_Tx_LT_Tx_Ack_Pending]"
field_strs[UPT_D188] = 1
func_name_array[UPT_D188] = ""

-- description function for UPT_D188	
function func_desc_UPT_D188(address, data)

	if not format_strs[UPT_D188] then
		format_strs[UPT_D188]="Not defined :0x%x"
		field_strs[UPT_D188]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D188]]
	fmt_str=func_name_array[UPT_D188] .. format_strs[UPT_D188] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D189] = "device index=%d, clear tx ack pending[DL_Clear_Rx_LT_Tx_Ack_Pending]"
field_strs[UPT_D189] = 1
func_name_array[UPT_D189] = ""

-- description function for UPT_D189	
function func_desc_UPT_D189(address, data)

	if not format_strs[UPT_D189] then
		format_strs[UPT_D189]="Not defined :0x%x"
		field_strs[UPT_D189]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D189]]
	fmt_str=func_name_array[UPT_D189] .. format_strs[UPT_D189] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D181] = "am_addr allocate 0x%x 0x%x"
field_strs[UPT_D181] = 2
func_name_array[UPT_D181] = ""

-- description function for UPT_D181	
function func_desc_UPT_D181(address, data)

	if not format_strs[UPT_D181] then
		format_strs[UPT_D181]="Not defined :0x%x"
		field_strs[UPT_D181]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D181]]
	fmt_str=func_name_array[UPT_D181] .. format_strs[UPT_D181] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D182] = "am_addr free 0x%x 0x%x"
field_strs[UPT_D182] = 2
func_name_array[UPT_D182] = ""

-- description function for UPT_D182	
function func_desc_UPT_D182(address, data)

	if not format_strs[UPT_D182] then
		format_strs[UPT_D182]="Not defined :0x%x"
		field_strs[UPT_D182]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D182]]
	fmt_str=func_name_array[UPT_D182] .. format_strs[UPT_D182] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D183] = "allocated device index %d"
field_strs[UPT_D183] = 1
func_name_array[UPT_D183] = ""

-- description function for UPT_D183	
function func_desc_UPT_D183(address, data)

	if not format_strs[UPT_D183] then
		format_strs[UPT_D183]="Not defined :0x%x"
		field_strs[UPT_D183]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D183]]
	fmt_str=func_name_array[UPT_D183] .. format_strs[UPT_D183] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D184] = "free device index %d, piconet_index %d"
field_strs[UPT_D184] = 2
func_name_array[UPT_D184] = ""

-- description function for UPT_D184	
function func_desc_UPT_D184(address, data)

	if not format_strs[UPT_D184] then
		format_strs[UPT_D184]="Not defined :0x%x"
		field_strs[UPT_D184]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D184]]
	fmt_str=func_name_array[UPT_D184] .. format_strs[UPT_D184] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/dp_process.o.i
format_strs[UPT_DD80] = "DP_Register_init,DP_Init_Done=%d"
field_strs[UPT_DD80] = 1
func_name_array[UPT_DD80] = ""

-- description function for UPT_DD80	
function func_desc_UPT_DD80(address, data)

	if not format_strs[UPT_DD80] then
		format_strs[UPT_DD80]="Not defined :0x%x"
		field_strs[UPT_DD80]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD80]]
	fmt_str=func_name_array[UPT_DD80] .. format_strs[UPT_DD80] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDA0] = "DP_Debug_Trace,debug_val=0x%x"
field_strs[UPT_DDA0] = 1
func_name_array[UPT_DDA0] = ""

-- description function for UPT_DDA0	
function func_desc_UPT_DDA0(address, data)

	if not format_strs[UPT_DDA0] then
		format_strs[UPT_DDA0]="Not defined :0x%x"
		field_strs[UPT_DDA0]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDA0]]
	fmt_str=func_name_array[UPT_DDA0] .. format_strs[UPT_DDA0] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDA1] = "DP_Debug_Trace,debug_val=0x%x"
field_strs[UPT_DDA1] = 1
func_name_array[UPT_DDA1] = ""

-- description function for UPT_DDA1	
function func_desc_UPT_DDA1(address, data)

	if not format_strs[UPT_DDA1] then
		format_strs[UPT_DDA1]="Not defined :0x%x"
		field_strs[UPT_DDA1]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDA1]]
	fmt_str=func_name_array[UPT_DDA1] .. format_strs[UPT_DDA1] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDA3] = "DP_Debug_Trace,debug_val=0x%x"
field_strs[UPT_DDA3] = 1
func_name_array[UPT_DDA3] = ""

-- description function for UPT_DDA3	
function func_desc_UPT_DDA3(address, data)

	if not format_strs[UPT_DDA3] then
		format_strs[UPT_DDA3]="Not defined :0x%x"
		field_strs[UPT_DDA3]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDA3]]
	fmt_str=func_name_array[UPT_DDA3] .. format_strs[UPT_DDA3] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDA4] = "DP_Debug_Trace,debug_val=0x%x"
field_strs[UPT_DDA4] = 1
func_name_array[UPT_DDA4] = ""

-- description function for UPT_DDA4	
function func_desc_UPT_DDA4(address, data)

	if not format_strs[UPT_DDA4] then
		format_strs[UPT_DDA4]="Not defined :0x%x"
		field_strs[UPT_DDA4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDA4]]
	fmt_str=func_name_array[UPT_DDA4] .. format_strs[UPT_DDA4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDA5] = "DP_Debug_Trace,debug_val=0x%x"
field_strs[UPT_DDA5] = 1
func_name_array[UPT_DDA5] = ""

-- description function for UPT_DDA5	
function func_desc_UPT_DDA5(address, data)

	if not format_strs[UPT_DDA5] then
		format_strs[UPT_DDA5]="Not defined :0x%x"
		field_strs[UPT_DDA5]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDA5]]
	fmt_str=func_name_array[UPT_DDA5] .. format_strs[UPT_DDA5] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDA6] = "DP_Debug_Trace,debug_val=0x%x"
field_strs[UPT_DDA6] = 1
func_name_array[UPT_DDA6] = ""

-- description function for UPT_DDA6	
function func_desc_UPT_DDA6(address, data)

	if not format_strs[UPT_DDA6] then
		format_strs[UPT_DDA6]="Not defined :0x%x"
		field_strs[UPT_DDA6]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDA6]]
	fmt_str=func_name_array[UPT_DDA6] .. format_strs[UPT_DDA6] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDA7] = "DP_Overflow_Interrupt_Handler,CMD_Full_Reg=0x%x,intr_status=0x%x"
field_strs[UPT_DDA7] = 2
func_name_array[UPT_DDA7] = ""

-- description function for UPT_DDA7	
function func_desc_UPT_DDA7(address, data)

	if not format_strs[UPT_DDA7] then
		format_strs[UPT_DDA7]="Not defined :0x%x"
		field_strs[UPT_DDA7]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDA7]]
	fmt_str=func_name_array[UPT_DDA7] .. format_strs[UPT_DDA7] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDA8] = "CVSD_Tx_Done_Buffer_Handler,q_descr_temp->data=0x%x"
field_strs[UPT_DDA8] = 1
func_name_array[UPT_DDA8] = ""

-- description function for UPT_DDA8	
function func_desc_UPT_DDA8(address, data)

	if not format_strs[UPT_DDA8] then
		format_strs[UPT_DDA8]="Not defined :0x%x"
		field_strs[UPT_DDA8]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDA8]]
	fmt_str=func_name_array[UPT_DDA8] .. format_strs[UPT_DDA8] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDA9] = "CVSD_Rx_Done_Buffer_Handler,q_descr_temp->data=0x%x"
field_strs[UPT_DDA9] = 1
func_name_array[UPT_DDA9] = ""

-- description function for UPT_DDA9	
function func_desc_UPT_DDA9(address, data)

	if not format_strs[UPT_DDA9] then
		format_strs[UPT_DDA9]="Not defined :0x%x"
		field_strs[UPT_DDA9]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDA9]]
	fmt_str=func_name_array[UPT_DDA9] .. format_strs[UPT_DDA9] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDAA] = "CVSD_Rx_Done_Buffer_Handler,q_descr_temp->data=0x%x"
field_strs[UPT_DDAA] = 1
func_name_array[UPT_DDAA] = ""

-- description function for UPT_DDAA	
function func_desc_UPT_DDAA(address, data)

	if not format_strs[UPT_DDAA] then
		format_strs[UPT_DDAA]="Not defined :0x%x"
		field_strs[UPT_DDAA]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDAA]]
	fmt_str=func_name_array[UPT_DDAA] .. format_strs[UPT_DDAA] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDAB] = "PLC_Rx_Done_Buffer_Handler,q_descr_temp->data=0x%x"
field_strs[UPT_DDAB] = 1
func_name_array[UPT_DDAB] = ""

-- description function for UPT_DDAB	
function func_desc_UPT_DDAB(address, data)

	if not format_strs[UPT_DDAB] then
		format_strs[UPT_DDAB]="Not defined :0x%x"
		field_strs[UPT_DDAB]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDAB]]
	fmt_str=func_name_array[UPT_DDAB] .. format_strs[UPT_DDAB] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDAC] = "MSBC_Tx_Done_Buffer_Handler,q_descr_temp->data=0x%x"
field_strs[UPT_DDAC] = 1
func_name_array[UPT_DDAC] = ""

-- description function for UPT_DDAC	
function func_desc_UPT_DDAC(address, data)

	if not format_strs[UPT_DDAC] then
		format_strs[UPT_DDAC]="Not defined :0x%x"
		field_strs[UPT_DDAC]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDAC]]
	fmt_str=func_name_array[UPT_DDAC] .. format_strs[UPT_DDAC] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDAD] = "MSBC_Rx_Done_Buffer_Handler,q_descr_temp->data=0x%x"
field_strs[UPT_DDAD] = 1
func_name_array[UPT_DDAD] = ""

-- description function for UPT_DDAD	
function func_desc_UPT_DDAD(address, data)

	if not format_strs[UPT_DDAD] then
		format_strs[UPT_DDAD]="Not defined :0x%x"
		field_strs[UPT_DDAD]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDAD]]
	fmt_str=func_name_array[UPT_DDAD] .. format_strs[UPT_DDAD] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDAE] = "MSBC_Rx_Done_Buffer_Handler,q_descr_temp->data=0x%x"
field_strs[UPT_DDAE] = 1
func_name_array[UPT_DDAE] = ""

-- description function for UPT_DDAE	
function func_desc_UPT_DDAE(address, data)

	if not format_strs[UPT_DDAE] then
		format_strs[UPT_DDAE]="Not defined :0x%x"
		field_strs[UPT_DDAE]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDAE]]
	fmt_str=func_name_array[UPT_DDAE] .. format_strs[UPT_DDAE] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDAF] = "MSBC_Rx_Done_Buffer_Handler,q_descr_temp->data=0x%x"
field_strs[UPT_DDAF] = 1
func_name_array[UPT_DDAF] = ""

-- description function for UPT_DDAF	
function func_desc_UPT_DDAF(address, data)

	if not format_strs[UPT_DDAF] then
		format_strs[UPT_DDAF]="Not defined :0x%x"
		field_strs[UPT_DDAF]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDAF]]
	fmt_str=func_name_array[UPT_DDAF] .. format_strs[UPT_DDAF] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD81] = "DP_Interrupt_Handler,intr_status=0x%x"
field_strs[UPT_DD81] = 1
func_name_array[UPT_DD81] = ""

-- description function for UPT_DD81	
function func_desc_UPT_DD81(address, data)

	if not format_strs[UPT_DD81] then
		format_strs[UPT_DD81]="Not defined :0x%x"
		field_strs[UPT_DD81]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD81]]
	fmt_str=func_name_array[UPT_DD81] .. format_strs[UPT_DD81] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD82] = "DP_Task_Check_Buffer_Data,DP_CMD_wr_index=%d,DP_CMD_rd_index=%d"
field_strs[UPT_DD82] = 2
func_name_array[UPT_DD82] = ""

-- description function for UPT_DD82	
function func_desc_UPT_DD82(address, data)

	if not format_strs[UPT_DD82] then
		format_strs[UPT_DD82]="Not defined :0x%x"
		field_strs[UPT_DD82]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD82]]
	fmt_str=func_name_array[UPT_DD82] .. format_strs[UPT_DD82] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD83] = "DP_CMD_Buffer_Handler,DP_CMD_wr_index=%d,DP_CMD_rd_index=%d"
field_strs[UPT_DD83] = 2
func_name_array[UPT_DD83] = ""

-- description function for UPT_DD83	
function func_desc_UPT_DD83(address, data)

	if not format_strs[UPT_DD83] then
		format_strs[UPT_DD83]="Not defined :0x%x"
		field_strs[UPT_DD83]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD83]]
	fmt_str=func_name_array[UPT_DD83] .. format_strs[UPT_DD83] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD84] = "DP_CMD_Buffer_Handler,size=%d"
field_strs[UPT_DD84] = 1
func_name_array[UPT_DD84] = ""

-- description function for UPT_DD84	
function func_desc_UPT_DD84(address, data)

	if not format_strs[UPT_DD84] then
		format_strs[UPT_DD84]="Not defined :0x%x"
		field_strs[UPT_DD84]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD84]]
	fmt_str=func_name_array[UPT_DD84] .. format_strs[UPT_DD84] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD85] = "DP_CMD_Buffer_Handler,DP_CMD_rd_index=%d"
field_strs[UPT_DD85] = 1
func_name_array[UPT_DD85] = ""

-- description function for UPT_DD85	
function func_desc_UPT_DD85(address, data)

	if not format_strs[UPT_DD85] then
		format_strs[UPT_DD85]="Not defined :0x%x"
		field_strs[UPT_DD85]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD85]]
	fmt_str=func_name_array[UPT_DD85] .. format_strs[UPT_DD85] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD86] = "DP_Update_L2CAP_Buffer_Priority2Low,buffer_index=%d,buffer_position=%d"
field_strs[UPT_DD86] = 2
func_name_array[UPT_DD86] = ""

-- description function for UPT_DD86	
function func_desc_UPT_DD86(address, data)

	if not format_strs[UPT_DD86] then
		format_strs[UPT_DD86]="Not defined :0x%x"
		field_strs[UPT_DD86]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD86]]
	fmt_str=func_name_array[UPT_DD86] .. format_strs[UPT_DD86] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD87] = "DP_Classic_ACL_OUT_Buffer_Handler,ACL_OUT_Buffer_Priority=0x%x"
field_strs[UPT_DD87] = 1
func_name_array[UPT_DD87] = ""

-- description function for UPT_DD87	
function func_desc_UPT_DD87(address, data)

	if not format_strs[UPT_DD87] then
		format_strs[UPT_DD87]="Not defined :0x%x"
		field_strs[UPT_DD87]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD87]]
	fmt_str=func_name_array[UPT_DD87] .. format_strs[UPT_DD87] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD88] = "DP_Classic_ACL_OUT_Buffer_Handler,HW_Buffer_State=0x%x,SW_Buffer_State=0x%x"
field_strs[UPT_DD88] = 2
func_name_array[UPT_DD88] = ""

-- description function for UPT_DD88	
function func_desc_UPT_DD88(address, data)

	if not format_strs[UPT_DD88] then
		format_strs[UPT_DD88]="Not defined :0x%x"
		field_strs[UPT_DD88]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD88]]
	fmt_str=func_name_array[UPT_DD88] .. format_strs[UPT_DD88] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD89] = "DP_Classic_ACL_OUT_Buffer_Handler,buffer_index=%d"
field_strs[UPT_DD89] = 1
func_name_array[UPT_DD89] = ""

-- description function for UPT_DD89	
function func_desc_UPT_DD89(address, data)

	if not format_strs[UPT_DD89] then
		format_strs[UPT_DD89]="Not defined :0x%x"
		field_strs[UPT_DD89]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD89]]
	fmt_str=func_name_array[UPT_DD89] .. format_strs[UPT_DD89] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD8A] = "DP_Classic_ACL_OUT_Buffer_Handler,handle=%d"
field_strs[UPT_DD8A] = 1
func_name_array[UPT_DD8A] = ""

-- description function for UPT_DD8A	
function func_desc_UPT_DD8A(address, data)

	if not format_strs[UPT_DD8A] then
		format_strs[UPT_DD8A]="Not defined :0x%x"
		field_strs[UPT_DD8A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD8A]]
	fmt_str=func_name_array[UPT_DD8A] .. format_strs[UPT_DD8A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD8B] = "DP_Classic_ACL_OUT_Buffer_Handler,size=%d"
field_strs[UPT_DD8B] = 1
func_name_array[UPT_DD8B] = ""

-- description function for UPT_DD8B	
function func_desc_UPT_DD8B(address, data)

	if not format_strs[UPT_DD8B] then
		format_strs[UPT_DD8B]="Not defined :0x%x"
		field_strs[UPT_DD8B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD8B]]
	fmt_str=func_name_array[UPT_DD8B] .. format_strs[UPT_DD8B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD8C] = "DP_Classic_ACL_OUT_Buffer_Handler,HW_Buffer_State=0x%x"
field_strs[UPT_DD8C] = 1
func_name_array[UPT_DD8C] = ""

-- description function for UPT_DD8C	
function func_desc_UPT_DD8C(address, data)

	if not format_strs[UPT_DD8C] then
		format_strs[UPT_DD8C]="Not defined :0x%x"
		field_strs[UPT_DD8C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD8C]]
	fmt_str=func_name_array[UPT_DD8C] .. format_strs[UPT_DD8C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD8D] = "DP_Classic_L2CAP_OUT_ACK,ACL_OUT_SW_Buffer_State=0x%x,buffer_index=0x%x"
field_strs[UPT_DD8D] = 2
func_name_array[UPT_DD8D] = ""

-- description function for UPT_DD8D	
function func_desc_UPT_DD8D(address, data)

	if not format_strs[UPT_DD8D] then
		format_strs[UPT_DD8D]="Not defined :0x%x"
		field_strs[UPT_DD8D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD8D]]
	fmt_str=func_name_array[UPT_DD8D] .. format_strs[UPT_DD8D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD8E] = "DP_Classic_RX_Packet_Debug,data=0x%x"
field_strs[UPT_DD8E] = 1
func_name_array[UPT_DD8E] = ""

-- description function for UPT_DD8E	
function func_desc_UPT_DD8E(address, data)

	if not format_strs[UPT_DD8E] then
		format_strs[UPT_DD8E]="Not defined :0x%x"
		field_strs[UPT_DD8E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD8E]]
	fmt_str=func_name_array[UPT_DD8E] .. format_strs[UPT_DD8E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD8F] = "DP_Classic_TX_Packet_Debug,data=0x%x"
field_strs[UPT_DD8F] = 1
func_name_array[UPT_DD8F] = ""

-- description function for UPT_DD8F	
function func_desc_UPT_DD8F(address, data)

	if not format_strs[UPT_DD8F] then
		format_strs[UPT_DD8F]="Not defined :0x%x"
		field_strs[UPT_DD8F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD8F]]
	fmt_str=func_name_array[UPT_DD8F] .. format_strs[UPT_DD8F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD90] = "DP_LE_ACL_OUT_Buffer_Handler,LE_ACL_OUT_Buffer_Priority=0x%x"
field_strs[UPT_DD90] = 1
func_name_array[UPT_DD90] = ""

-- description function for UPT_DD90	
function func_desc_UPT_DD90(address, data)

	if not format_strs[UPT_DD90] then
		format_strs[UPT_DD90]="Not defined :0x%x"
		field_strs[UPT_DD90]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD90]]
	fmt_str=func_name_array[UPT_DD90] .. format_strs[UPT_DD90] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD91] = "DP_LE_ACL_OUT_Buffer_Handler,Buffer_State=0x%x"
field_strs[UPT_DD91] = 1
func_name_array[UPT_DD91] = ""

-- description function for UPT_DD91	
function func_desc_UPT_DD91(address, data)

	if not format_strs[UPT_DD91] then
		format_strs[UPT_DD91]="Not defined :0x%x"
		field_strs[UPT_DD91]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD91]]
	fmt_str=func_name_array[UPT_DD91] .. format_strs[UPT_DD91] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD92] = "DP_LE_ACL_OUT_Buffer_Handler,buffer_index=%d"
field_strs[UPT_DD92] = 1
func_name_array[UPT_DD92] = ""

-- description function for UPT_DD92	
function func_desc_UPT_DD92(address, data)

	if not format_strs[UPT_DD92] then
		format_strs[UPT_DD92]="Not defined :0x%x"
		field_strs[UPT_DD92]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD92]]
	fmt_str=func_name_array[UPT_DD92] .. format_strs[UPT_DD92] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD93] = "DP_LE_ACL_OUT_Buffer_Handler,handle=0x%x,size=0x%x"
field_strs[UPT_DD93] = 2
func_name_array[UPT_DD93] = ""

-- description function for UPT_DD93	
function func_desc_UPT_DD93(address, data)

	if not format_strs[UPT_DD93] then
		format_strs[UPT_DD93]="Not defined :0x%x"
		field_strs[UPT_DD93]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD93]]
	fmt_str=func_name_array[UPT_DD93] .. format_strs[UPT_DD93] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD94] = "DP_LE_ACL_OUT_Buffer_Handler,SW_Buffer_State=0x%x,HW_Buffer_State=0x%x"
field_strs[UPT_DD94] = 2
func_name_array[UPT_DD94] = ""

-- description function for UPT_DD94	
function func_desc_UPT_DD94(address, data)

	if not format_strs[UPT_DD94] then
		format_strs[UPT_DD94]="Not defined :0x%x"
		field_strs[UPT_DD94]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD94]]
	fmt_str=func_name_array[UPT_DD94] .. format_strs[UPT_DD94] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD95] = "DP_LE_L2CAP_Out_ACK,Buffer_State=0x%x,Buffer_State=0x%x"
field_strs[UPT_DD95] = 2
func_name_array[UPT_DD95] = ""

-- description function for UPT_DD95	
function func_desc_UPT_DD95(address, data)

	if not format_strs[UPT_DD95] then
		format_strs[UPT_DD95]="Not defined :0x%x"
		field_strs[UPT_DD95]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD95]]
	fmt_str=func_name_array[UPT_DD95] .. format_strs[UPT_DD95] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD96] = "DP_Check_HW_Copy_Classic_RX_Data_Complete,intr_status=0x%x"
field_strs[UPT_DD96] = 1
func_name_array[UPT_DD96] = ""

-- description function for UPT_DD96	
function func_desc_UPT_DD96(address, data)

	if not format_strs[UPT_DD96] then
		format_strs[UPT_DD96]="Not defined :0x%x"
		field_strs[UPT_DD96]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD96]]
	fmt_str=func_name_array[UPT_DD96] .. format_strs[UPT_DD96] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD97] = "DP_RX_Data_Handler,q->tail_offset=0x%x"
field_strs[UPT_DD97] = 1
func_name_array[UPT_DD97] = ""

-- description function for UPT_DD97	
function func_desc_UPT_DD97(address, data)

	if not format_strs[UPT_DD97] then
		format_strs[UPT_DD97]="Not defined :0x%x"
		field_strs[UPT_DD97]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD97]]
	fmt_str=func_name_array[UPT_DD97] .. format_strs[UPT_DD97] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD98] = "DP_RX_Data_Handler,LE_L2CAP_IN_Q->free_header_list->data=0x%x"
field_strs[UPT_DD98] = 1
func_name_array[UPT_DD98] = ""

-- description function for UPT_DD98	
function func_desc_UPT_DD98(address, data)

	if not format_strs[UPT_DD98] then
		format_strs[UPT_DD98]="Not defined :0x%x"
		field_strs[UPT_DD98]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD98]]
	fmt_str=func_name_array[UPT_DD98] .. format_strs[UPT_DD98] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD99] = "DP_RX_Data_Handler,SCO_IN_Next_Buffer_Addr=0x%x"
field_strs[UPT_DD99] = 1
func_name_array[UPT_DD99] = ""

-- description function for UPT_DD99	
function func_desc_UPT_DD99(address, data)

	if not format_strs[UPT_DD99] then
		format_strs[UPT_DD99]="Not defined :0x%x"
		field_strs[UPT_DD99]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD99]]
	fmt_str=func_name_array[UPT_DD99] .. format_strs[UPT_DD99] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD9A] = "DP_Data_TX_Reg_Config,pkt_length=0x%x"
field_strs[UPT_DD9A] = 1
func_name_array[UPT_DD9A] = ""

-- description function for UPT_DD9A	
function func_desc_UPT_DD9A(address, data)

	if not format_strs[UPT_DD9A] then
		format_strs[UPT_DD9A]="Not defined :0x%x"
		field_strs[UPT_DD9A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD9A]]
	fmt_str=func_name_array[UPT_DD9A] .. format_strs[UPT_DD9A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD9B] = "DP_Data_TX_Reg_Config,tx_packet_type=0x%x"
field_strs[UPT_DD9B] = 1
func_name_array[UPT_DD9B] = ""

-- description function for UPT_DD9B	
function func_desc_UPT_DD9B(address, data)

	if not format_strs[UPT_DD9B] then
		format_strs[UPT_DD9B]="Not defined :0x%x"
		field_strs[UPT_DD9B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD9B]]
	fmt_str=func_name_array[UPT_DD9B] .. format_strs[UPT_DD9B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD9C] = "Init_PLC,pkt_type=0x%x"
field_strs[UPT_DD9C] = 1
func_name_array[UPT_DD9C] = ""

-- description function for UPT_DD9C	
function func_desc_UPT_DD9C(address, data)

	if not format_strs[UPT_DD9C] then
		format_strs[UPT_DD9C]="Not defined :0x%x"
		field_strs[UPT_DD9C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD9C]]
	fmt_str=func_name_array[UPT_DD9C] .. format_strs[UPT_DD9C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/es_coex.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/es_critical.o.i
format_strs[UPT_D533] = "es insert/remove critical list fail:status code=0x%x"
field_strs[UPT_D533] = 1
func_name_array[UPT_D533] = ""

-- description function for UPT_D533	
function func_desc_UPT_D533(address, data)

	if not format_strs[UPT_D533] then
		format_strs[UPT_D533]="Not defined :0x%x"
		field_strs[UPT_D533]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D533]]
	fmt_str=func_name_array[UPT_D533] .. format_strs[UPT_D533] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D52F] = "es_insert_to_critical_list: link id=%x,event type=0x%x"
field_strs[UPT_D52F] = 2
func_name_array[UPT_D52F] = ""

-- description function for UPT_D52F	
function func_desc_UPT_D52F(address, data)

	if not format_strs[UPT_D52F] then
		format_strs[UPT_D52F]="Not defined :0x%x"
		field_strs[UPT_D52F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D52F]]
	fmt_str=func_name_array[UPT_D52F] .. format_strs[UPT_D52F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D524] = "es_reschedule_expired_critical_event, delete event: link id=%d,event type=%x"
field_strs[UPT_D524] = 2
func_name_array[UPT_D524] = ""

-- description function for UPT_D524	
function func_desc_UPT_D524(address, data)

	if not format_strs[UPT_D524] then
		format_strs[UPT_D524]="Not defined :0x%x"
		field_strs[UPT_D524]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D524]]
	fmt_str=func_name_array[UPT_D524] .. format_strs[UPT_D524] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D525] = "es_reschedule_expired_critical_event,reschedule event: link id=%x,event type=0x%x"
field_strs[UPT_D525] = 2
func_name_array[UPT_D525] = ""

-- description function for UPT_D525	
function func_desc_UPT_D525(address, data)

	if not format_strs[UPT_D525] then
		format_strs[UPT_D525]="Not defined :0x%x"
		field_strs[UPT_D525]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D525]]
	fmt_str=func_name_array[UPT_D525] .. format_strs[UPT_D525] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D58D] = "sync_history schedule info %x, empty info %x"
field_strs[UPT_D58D] = 2
func_name_array[UPT_D58D] = ""

-- description function for UPT_D58D	
function func_desc_UPT_D58D(address, data)

	if not format_strs[UPT_D58D] then
		format_strs[UPT_D58D]="Not defined :0x%x"
		field_strs[UPT_D58D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D58D]]
	fmt_str=func_name_array[UPT_D58D] .. format_strs[UPT_D58D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D523] = "es_update_and_reschedule_critical_list,expired event: link id=%d,event type=0x%x"
field_strs[UPT_D523] = 2
func_name_array[UPT_D523] = ""

-- description function for UPT_D523	
function func_desc_UPT_D523(address, data)

	if not format_strs[UPT_D523] then
		format_strs[UPT_D523]="Not defined :0x%x"
		field_strs[UPT_D523]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D523]]
	fmt_str=func_name_array[UPT_D523] .. format_strs[UPT_D523] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D526] = "es_update_and_reschedule_critical_list,backoff event: link id=%d,event type=0x%x"
field_strs[UPT_D526] = 2
func_name_array[UPT_D526] = ""

-- description function for UPT_D526	
function func_desc_UPT_D526(address, data)

	if not format_strs[UPT_D526] then
		format_strs[UPT_D526]="Not defined :0x%x"
		field_strs[UPT_D526]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D526]]
	fmt_str=func_name_array[UPT_D526] .. format_strs[UPT_D526] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D527] = "es_update_and_reschedule_critical_list,begin clock: %x"
field_strs[UPT_D527] = 1
func_name_array[UPT_D527] = ""

-- description function for UPT_D527	
function func_desc_UPT_D527(address, data)

	if not format_strs[UPT_D527] then
		format_strs[UPT_D527]="Not defined :0x%x"
		field_strs[UPT_D527]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D527]]
	fmt_str=func_name_array[UPT_D527] .. format_strs[UPT_D527] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D520] = "es_add_critical_to_scheduler, event: link id=%d,event type=0x%x"
field_strs[UPT_D520] = 2
func_name_array[UPT_D520] = ""

-- description function for UPT_D520	
function func_desc_UPT_D520(address, data)

	if not format_strs[UPT_D520] then
		format_strs[UPT_D520]="Not defined :0x%x"
		field_strs[UPT_D520]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D520]]
	fmt_str=func_name_array[UPT_D520] .. format_strs[UPT_D520] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D521] = "es_remove_critical_from_scheduler, link id=%d,event type=0x%x"
field_strs[UPT_D521] = 2
func_name_array[UPT_D521] = ""

-- description function for UPT_D521	
function func_desc_UPT_D521(address, data)

	if not format_strs[UPT_D521] then
		format_strs[UPT_D521]="Not defined :0x%x"
		field_strs[UPT_D521]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D521]]
	fmt_str=func_name_array[UPT_D521] .. format_strs[UPT_D521] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D522] = "es_remove_critical_from_scheduler, status=%x"
field_strs[UPT_D522] = 1
func_name_array[UPT_D522] = ""

-- description function for UPT_D522	
function func_desc_UPT_D522(address, data)

	if not format_strs[UPT_D522] then
		format_strs[UPT_D522]="Not defined :0x%x"
		field_strs[UPT_D522]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D522]]
	fmt_str=func_name_array[UPT_D522] .. format_strs[UPT_D522] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D52E] = "es_update_critical_event_safely, link id=%d,event type=0x%x"
field_strs[UPT_D52E] = 2
func_name_array[UPT_D52E] = ""

-- description function for UPT_D52E	
function func_desc_UPT_D52E(address, data)

	if not format_strs[UPT_D52E] then
		format_strs[UPT_D52E]="Not defined :0x%x"
		field_strs[UPT_D52E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D52E]]
	fmt_str=func_name_array[UPT_D52E] .. format_strs[UPT_D52E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/es_event.o.i
format_strs[UPT_D576] = "clock(frame)=0x%x"
field_strs[UPT_D576] = 1
func_name_array[UPT_D576] = ""

-- description function for UPT_D576	
function func_desc_UPT_D576(address, data)

	if not format_strs[UPT_D576] then
		format_strs[UPT_D576]="Not defined :0x%x"
		field_strs[UPT_D576]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D576]]
	fmt_str=func_name_array[UPT_D576] .. format_strs[UPT_D576] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/es_idle.o.i
format_strs[UPT_D58F] = "Defer page scan to =%x frame"
field_strs[UPT_D58F] = 1
func_name_array[UPT_D58F] = ""

-- description function for UPT_D58F	
function func_desc_UPT_D58F(address, data)

	if not format_strs[UPT_D58F] then
		format_strs[UPT_D58F]="Not defined :0x%x"
		field_strs[UPT_D58F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D58F]]
	fmt_str=func_name_array[UPT_D58F] .. format_strs[UPT_D58F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D590] = "Defer inquiry scan to =%x frame"
field_strs[UPT_D590] = 1
func_name_array[UPT_D590] = ""

-- description function for UPT_D590	
function func_desc_UPT_D590(address, data)

	if not format_strs[UPT_D590] then
		format_strs[UPT_D590]="Not defined :0x%x"
		field_strs[UPT_D590]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D590]]
	fmt_str=func_name_array[UPT_D590] .. format_strs[UPT_D590] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D582] = "Idle distance=%d frame"
field_strs[UPT_D582] = 1
func_name_array[UPT_D582] = ""

-- description function for UPT_D582	
function func_desc_UPT_D582(address, data)

	if not format_strs[UPT_D582] then
		format_strs[UPT_D582]="Not defined :0x%x"
		field_strs[UPT_D582]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D582]]
	fmt_str=func_name_array[UPT_D582] .. format_strs[UPT_D582] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D583] = "Idle idle_frame=%d"
field_strs[UPT_D583] = 1
func_name_array[UPT_D583] = ""

-- description function for UPT_D583	
function func_desc_UPT_D583(address, data)

	if not format_strs[UPT_D583] then
		format_strs[UPT_D583]="Not defined :0x%x"
		field_strs[UPT_D583]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D583]]
	fmt_str=func_name_array[UPT_D583] .. format_strs[UPT_D583] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D581] = "Idle Event State=%d"
field_strs[UPT_D581] = 1
func_name_array[UPT_D581] = ""

-- description function for UPT_D581	
function func_desc_UPT_D581(address, data)

	if not format_strs[UPT_D581] then
		format_strs[UPT_D581]="Not defined :0x%x"
		field_strs[UPT_D581]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D581]]
	fmt_str=func_name_array[UPT_D581] .. format_strs[UPT_D581] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D580] = "service_idle_event, state=%x,isr:irq=%x"
field_strs[UPT_D580] = 2
func_name_array[UPT_D580] = ""

-- description function for UPT_D580	
function func_desc_UPT_D580(address, data)

	if not format_strs[UPT_D580] then
		format_strs[UPT_D580]="Not defined :0x%x"
		field_strs[UPT_D580]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D580]]
	fmt_str=func_name_array[UPT_D580] .. format_strs[UPT_D580] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/es_listop.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/es_normal.o.i
format_strs[UPT_D54A] = "es_update_win_count_of_normal_event, elapsed count=0x%x"
field_strs[UPT_D54A] = 1
func_name_array[UPT_D54A] = ""

-- description function for UPT_D54A	
function func_desc_UPT_D54A(address, data)

	if not format_strs[UPT_D54A] then
		format_strs[UPT_D54A]="Not defined :0x%x"
		field_strs[UPT_D54A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D54A]]
	fmt_str=func_name_array[UPT_D54A] .. format_strs[UPT_D54A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D534] = "es insert/remove normal list fail:status code=0x%x"
field_strs[UPT_D534] = 1
func_name_array[UPT_D534] = ""

-- description function for UPT_D534	
function func_desc_UPT_D534(address, data)

	if not format_strs[UPT_D534] then
		format_strs[UPT_D534]="Not defined :0x%x"
		field_strs[UPT_D534]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D534]]
	fmt_str=func_name_array[UPT_D534] .. format_strs[UPT_D534] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D535] = "insert/remove normal list fail: fail=%x,event type=0x%x"
field_strs[UPT_D535] = 2
func_name_array[UPT_D535] = ""

-- description function for UPT_D535	
function func_desc_UPT_D535(address, data)

	if not format_strs[UPT_D535] then
		format_strs[UPT_D535]="Not defined :0x%x"
		field_strs[UPT_D535]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D535]]
	fmt_str=func_name_array[UPT_D535] .. format_strs[UPT_D535] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D544] = "es_reschedule_expired_normal_event, delete event:link id=%d, event type=0x%x"
field_strs[UPT_D544] = 2
func_name_array[UPT_D544] = ""

-- description function for UPT_D544	
function func_desc_UPT_D544(address, data)

	if not format_strs[UPT_D544] then
		format_strs[UPT_D544]="Not defined :0x%x"
		field_strs[UPT_D544]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D544]]
	fmt_str=func_name_array[UPT_D544] .. format_strs[UPT_D544] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D545] = "es_reschedule_expired_normal_event, expire event:link id=%d,event type=0x%x"
field_strs[UPT_D545] = 2
func_name_array[UPT_D545] = ""

-- description function for UPT_D545	
function func_desc_UPT_D545(address, data)

	if not format_strs[UPT_D545] then
		format_strs[UPT_D545]="Not defined :0x%x"
		field_strs[UPT_D545]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D545]]
	fmt_str=func_name_array[UPT_D545] .. format_strs[UPT_D545] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D548] = "es_update_and_reschedule_normal_list, expired event:link id=%d,event type=0x%x"
field_strs[UPT_D548] = 2
func_name_array[UPT_D548] = ""

-- description function for UPT_D548	
function func_desc_UPT_D548(address, data)

	if not format_strs[UPT_D548] then
		format_strs[UPT_D548]="Not defined :0x%x"
		field_strs[UPT_D548]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D548]]
	fmt_str=func_name_array[UPT_D548] .. format_strs[UPT_D548] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D543] = "es_update_and_reschedule_normal_list, expired event:link id=%d,event type=0x%x"
field_strs[UPT_D543] = 2
func_name_array[UPT_D543] = ""

-- description function for UPT_D543	
function func_desc_UPT_D543(address, data)

	if not format_strs[UPT_D543] then
		format_strs[UPT_D543]="Not defined :0x%x"
		field_strs[UPT_D543]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D543]]
	fmt_str=func_name_array[UPT_D543] .. format_strs[UPT_D543] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D540] = "es_add_normal_to_scheduler, event:link id=%d,event type=0x%x"
field_strs[UPT_D540] = 2
func_name_array[UPT_D540] = ""

-- description function for UPT_D540	
function func_desc_UPT_D540(address, data)

	if not format_strs[UPT_D540] then
		format_strs[UPT_D540]="Not defined :0x%x"
		field_strs[UPT_D540]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D540]]
	fmt_str=func_name_array[UPT_D540] .. format_strs[UPT_D540] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D54F] = "es_add_normal_to_scheduler, error=%x"
field_strs[UPT_D54F] = 1
func_name_array[UPT_D54F] = ""

-- description function for UPT_D54F	
function func_desc_UPT_D54F(address, data)

	if not format_strs[UPT_D54F] then
		format_strs[UPT_D54F]="Not defined :0x%x"
		field_strs[UPT_D54F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D54F]]
	fmt_str=func_name_array[UPT_D54F] .. format_strs[UPT_D54F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D541] = "es_remove_normal_from_scheduler, event:link id=%d,event type=0x%x"
field_strs[UPT_D541] = 2
func_name_array[UPT_D541] = ""

-- description function for UPT_D541	
function func_desc_UPT_D541(address, data)

	if not format_strs[UPT_D541] then
		format_strs[UPT_D541]="Not defined :0x%x"
		field_strs[UPT_D541]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D541]]
	fmt_str=func_name_array[UPT_D541] .. format_strs[UPT_D541] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D542] = "es_remove_normal_from_scheduler, status=%x"
field_strs[UPT_D542] = 1
func_name_array[UPT_D542] = ""

-- description function for UPT_D542	
function func_desc_UPT_D542(address, data)

	if not format_strs[UPT_D542] then
		format_strs[UPT_D542]="Not defined :0x%x"
		field_strs[UPT_D542]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D542]]
	fmt_str=func_name_array[UPT_D542] .. format_strs[UPT_D542] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D547] = "es_update_A2DP_stream_state, debug_point=%x"
field_strs[UPT_D547] = 1
func_name_array[UPT_D547] = ""

-- description function for UPT_D547	
function func_desc_UPT_D547(address, data)

	if not format_strs[UPT_D547] then
		format_strs[UPT_D547]="Not defined :0x%x"
		field_strs[UPT_D547]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D547]]
	fmt_str=func_name_array[UPT_D547] .. format_strs[UPT_D547] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D550] = "acl_evt_num is %d, page_direct_adv_num is %d, inquiry_evt_num is %d, reserved %d"
field_strs[UPT_D550] = 4
func_name_array[UPT_D550] = ""

-- description function for UPT_D550	
function func_desc_UPT_D550(address, data)

	if not format_strs[UPT_D550] then
		format_strs[UPT_D550]="Not defined :0x%x"
		field_strs[UPT_D550]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D550]]
	fmt_str=func_name_array[UPT_D550] .. format_strs[UPT_D550] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/es_porting.o.i
format_strs[UPT_D577] = "es_porting_get_current_btclk fail device_index= %d "
field_strs[UPT_D577] = 1
func_name_array[UPT_D577] = ""

-- description function for UPT_D577	
function func_desc_UPT_D577(address, data)

	if not format_strs[UPT_D577] then
		format_strs[UPT_D577]="Not defined :0x%x"
		field_strs[UPT_D577]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D577]]
	fmt_str=func_name_array[UPT_D577] .. format_strs[UPT_D577] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D575] = "current native clock(frame) = 0x%x"
field_strs[UPT_D575] = 1
func_name_array[UPT_D575] = ""

-- description function for UPT_D575	
function func_desc_UPT_D575(address, data)

	if not format_strs[UPT_D575] then
		format_strs[UPT_D575]="Not defined :0x%x"
		field_strs[UPT_D575]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D575]]
	fmt_str=func_name_array[UPT_D575] .. format_strs[UPT_D575] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D570 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D57C] = "current event type=0x%x, extend limit is %d frames"
field_strs[UPT_D57C] = 2
func_name_array[UPT_D57C] = ""

-- description function for UPT_D57C	
function func_desc_UPT_D57C(address, data)

	if not format_strs[UPT_D57C] then
		format_strs[UPT_D57C]="Not defined :0x%x"
		field_strs[UPT_D57C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D57C]]
	fmt_str=func_name_array[UPT_D57C] .. format_strs[UPT_D57C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D571] = "es_porting_set_critical_event, link id=%d,event type=0x%x"
field_strs[UPT_D571] = 2
func_name_array[UPT_D571] = ""

-- description function for UPT_D571	
function func_desc_UPT_D571(address, data)

	if not format_strs[UPT_D571] then
		format_strs[UPT_D571]="Not defined :0x%x"
		field_strs[UPT_D571]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D571]]
	fmt_str=func_name_array[UPT_D571] .. format_strs[UPT_D571] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D572] = "next anchor clk %x"
field_strs[UPT_D572] = 1
func_name_array[UPT_D572] = ""

-- description function for UPT_D572	
function func_desc_UPT_D572(address, data)

	if not format_strs[UPT_D572] then
		format_strs[UPT_D572]="Not defined :0x%x"
		field_strs[UPT_D572]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D572]]
	fmt_str=func_name_array[UPT_D572] .. format_strs[UPT_D572] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D574] = "es_porting_set_critical_event error %d"
field_strs[UPT_D574] = 1
func_name_array[UPT_D574] = ""

-- description function for UPT_D574	
function func_desc_UPT_D574(address, data)

	if not format_strs[UPT_D574] then
		format_strs[UPT_D574]="Not defined :0x%x"
		field_strs[UPT_D574]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D574]]
	fmt_str=func_name_array[UPT_D574] .. format_strs[UPT_D574] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D573] = "next anchor na_clk %x"
field_strs[UPT_D573] = 1
func_name_array[UPT_D573] = ""

-- description function for UPT_D573	
function func_desc_UPT_D573(address, data)

	if not format_strs[UPT_D573] then
		format_strs[UPT_D573]="Not defined :0x%x"
		field_strs[UPT_D573]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D573]]
	fmt_str=func_name_array[UPT_D573] .. format_strs[UPT_D573] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D578] = "switch piconet error log, tx mode is %d, rx mode is %d"
field_strs[UPT_D578] = 2
func_name_array[UPT_D578] = ""

-- description function for UPT_D578	
function func_desc_UPT_D578(address, data)

	if not format_strs[UPT_D578] then
		format_strs[UPT_D578]="Not defined :0x%x"
		field_strs[UPT_D578]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D578]]
	fmt_str=func_name_array[UPT_D578] .. format_strs[UPT_D578] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D57F is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D584] = "switch to le mode %d"
field_strs[UPT_D584] = 1
func_name_array[UPT_D584] = ""

-- description function for UPT_D584	
function func_desc_UPT_D584(address, data)

	if not format_strs[UPT_D584] then
		format_strs[UPT_D584]="Not defined :0x%x"
		field_strs[UPT_D584]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D584]]
	fmt_str=func_name_array[UPT_D584] .. format_strs[UPT_D584] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D585] = "switch to classic mode %d"
field_strs[UPT_D585] = 1
func_name_array[UPT_D585] = ""

-- description function for UPT_D585	
function func_desc_UPT_D585(address, data)

	if not format_strs[UPT_D585] then
		format_strs[UPT_D585]="Not defined :0x%x"
		field_strs[UPT_D585]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D585]]
	fmt_str=func_name_array[UPT_D585] .. format_strs[UPT_D585] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D57A is in dsp_description_fixed.lua, skip from here
-- UPT_D57A is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D57B] = "current piconet bit counter is %d"
field_strs[UPT_D57B] = 1
func_name_array[UPT_D57B] = ""

-- description function for UPT_D57B	
function func_desc_UPT_D57B(address, data)

	if not format_strs[UPT_D57B] then
		format_strs[UPT_D57B]="Not defined :0x%x"
		field_strs[UPT_D57B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D57B]]
	fmt_str=func_name_array[UPT_D57B] .. format_strs[UPT_D57B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D58E] = "sync link num is %d, hid link num is %d"
field_strs[UPT_D58E] = 2
func_name_array[UPT_D58E] = ""

-- description function for UPT_D58E	
function func_desc_UPT_D58E(address, data)

	if not format_strs[UPT_D58E] then
		format_strs[UPT_D58E]="Not defined :0x%x"
		field_strs[UPT_D58E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D58E]]
	fmt_str=func_name_array[UPT_D58E] .. format_strs[UPT_D58E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/es_priority.o.i
format_strs[UPT_D586] = "stomp %x"
field_strs[UPT_D586] = 1
func_name_array[UPT_D586] = ""

-- description function for UPT_D586	
function func_desc_UPT_D586(address, data)

	if not format_strs[UPT_D586] then
		format_strs[UPT_D586]="Not defined :0x%x"
		field_strs[UPT_D586]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D586]]
	fmt_str=func_name_array[UPT_D586] .. format_strs[UPT_D586] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D587] = "tx not empty %x"
field_strs[UPT_D587] = 1
func_name_array[UPT_D587] = ""

-- description function for UPT_D587	
function func_desc_UPT_D587(address, data)

	if not format_strs[UPT_D587] then
		format_strs[UPT_D587]="Not defined :0x%x"
		field_strs[UPT_D587]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D587]]
	fmt_str=func_name_array[UPT_D587] .. format_strs[UPT_D587] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D588] = "rx_synced %x"
field_strs[UPT_D588] = 1
func_name_array[UPT_D588] = ""

-- description function for UPT_D588	
function func_desc_UPT_D588(address, data)

	if not format_strs[UPT_D588] then
		format_strs[UPT_D588]="Not defined :0x%x"
		field_strs[UPT_D588]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D588]]
	fmt_str=func_name_array[UPT_D588] .. format_strs[UPT_D588] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D589] = "rx_ack %x"
field_strs[UPT_D589] = 1
func_name_array[UPT_D589] = ""

-- description function for UPT_D589	
function func_desc_UPT_D589(address, data)

	if not format_strs[UPT_D589] then
		format_strs[UPT_D589]="Not defined :0x%x"
		field_strs[UPT_D589]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D589]]
	fmt_str=func_name_array[UPT_D589] .. format_strs[UPT_D589] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D58A] = "rx_crc %x"
field_strs[UPT_D58A] = 1
func_name_array[UPT_D58A] = ""

-- description function for UPT_D58A	
function func_desc_UPT_D58A(address, data)

	if not format_strs[UPT_D58A] then
		format_strs[UPT_D58A]="Not defined :0x%x"
		field_strs[UPT_D58A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D58A]]
	fmt_str=func_name_array[UPT_D58A] .. format_strs[UPT_D58A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D58B] = "rx_empty %x"
field_strs[UPT_D58B] = 1
func_name_array[UPT_D58B] = ""

-- description function for UPT_D58B	
function func_desc_UPT_D58B(address, data)

	if not format_strs[UPT_D58B] then
		format_strs[UPT_D58B]="Not defined :0x%x"
		field_strs[UPT_D58B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D58B]]
	fmt_str=func_name_array[UPT_D58B] .. format_strs[UPT_D58B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D58C] = "index %x"
field_strs[UPT_D58C] = 1
func_name_array[UPT_D58C] = ""

-- description function for UPT_D58C	
function func_desc_UPT_D58C(address, data)

	if not format_strs[UPT_D58C] then
		format_strs[UPT_D58C]="Not defined :0x%x"
		field_strs[UPT_D58C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D58C]]
	fmt_str=func_name_array[UPT_D58C] .. format_strs[UPT_D58C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D57D] = "es_set_event_priority link id = %d, event type = 0x%x"
field_strs[UPT_D57D] = 2
func_name_array[UPT_D57D] = ""

-- description function for UPT_D57D	
function func_desc_UPT_D57D(address, data)

	if not format_strs[UPT_D57D] then
		format_strs[UPT_D57D]="Not defined :0x%x"
		field_strs[UPT_D57D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D57D]]
	fmt_str=func_name_array[UPT_D57D] .. format_strs[UPT_D57D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D57E] = "priority level %d, priority %d"
field_strs[UPT_D57E] = 2
func_name_array[UPT_D57E] = ""

-- description function for UPT_D57E	
function func_desc_UPT_D57E(address, data)

	if not format_strs[UPT_D57E] then
		format_strs[UPT_D57E]="Not defined :0x%x"
		field_strs[UPT_D57E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D57E]]
	fmt_str=func_name_array[UPT_D57E] .. format_strs[UPT_D57E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/es_sched.o.i
format_strs[UPT_D509] = "es_event_update_FRT_time,FRT=%x"
field_strs[UPT_D509] = 1
func_name_array[UPT_D509] = ""

-- description function for UPT_D509	
function func_desc_UPT_D509(address, data)

	if not format_strs[UPT_D509] then
		format_strs[UPT_D509]="Not defined :0x%x"
		field_strs[UPT_D509]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D509]]
	fmt_str=func_name_array[UPT_D509] .. format_strs[UPT_D509] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D551] = "es_event_get_control_time link id=%d, event type=0x%x"
field_strs[UPT_D551] = 2
func_name_array[UPT_D551] = ""

-- description function for UPT_D551	
function func_desc_UPT_D551(address, data)

	if not format_strs[UPT_D551] then
		format_strs[UPT_D551]="Not defined :0x%x"
		field_strs[UPT_D551]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D551]]
	fmt_str=func_name_array[UPT_D551] .. format_strs[UPT_D551] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D50A] = "es_event_update_TRX_deadline evt_iter link id=%d,event type=0x%x"
field_strs[UPT_D50A] = 2
func_name_array[UPT_D50A] = ""

-- description function for UPT_D50A	
function func_desc_UPT_D50A(address, data)

	if not format_strs[UPT_D50A] then
		format_strs[UPT_D50A]="Not defined :0x%x"
		field_strs[UPT_D50A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D50A]]
	fmt_str=func_name_array[UPT_D50A] .. format_strs[UPT_D50A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D505] = "schedule warning:event type=0x%x,error=%d"
field_strs[UPT_D505] = 2
func_name_array[UPT_D505] = ""

-- description function for UPT_D505	
function func_desc_UPT_D505(address, data)

	if not format_strs[UPT_D505] then
		format_strs[UPT_D505]="Not defined :0x%x"
		field_strs[UPT_D505]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D505]]
	fmt_str=func_name_array[UPT_D505] .. format_strs[UPT_D505] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D501 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D51C] = "current clock = 0x%x"
field_strs[UPT_D51C] = 1
func_name_array[UPT_D51C] = ""

-- description function for UPT_D51C	
function func_desc_UPT_D51C(address, data)

	if not format_strs[UPT_D51C] then
		format_strs[UPT_D51C]="Not defined :0x%x"
		field_strs[UPT_D51C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D51C]]
	fmt_str=func_name_array[UPT_D51C] .. format_strs[UPT_D51C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D51D] = "current offset = 0x%x"
field_strs[UPT_D51D] = 1
func_name_array[UPT_D51D] = ""

-- description function for UPT_D51D	
function func_desc_UPT_D51D(address, data)

	if not format_strs[UPT_D51D] then
		format_strs[UPT_D51D]="Not defined :0x%x"
		field_strs[UPT_D51D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D51D]]
	fmt_str=func_name_array[UPT_D51D] .. format_strs[UPT_D51D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D502 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D506] = "es_event_end_direct:event id =0x%x,event type=0x%x"
field_strs[UPT_D506] = 2
func_name_array[UPT_D506] = ""

-- description function for UPT_D506	
function func_desc_UPT_D506(address, data)

	if not format_strs[UPT_D506] then
		format_strs[UPT_D506]="Not defined :0x%x"
		field_strs[UPT_D506]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D506]]
	fmt_str=func_name_array[UPT_D506] .. format_strs[UPT_D506] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D507] = "es_event_end_direct:event id =0x%x,event type=0x%x"
field_strs[UPT_D507] = 2
func_name_array[UPT_D507] = ""

-- description function for UPT_D507	
function func_desc_UPT_D507(address, data)

	if not format_strs[UPT_D507] then
		format_strs[UPT_D507]="Not defined :0x%x"
		field_strs[UPT_D507]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D507]]
	fmt_str=func_name_array[UPT_D507] .. format_strs[UPT_D507] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/es_sync_mgr.o.i
format_strs[UPT_D53C] = "interval or window equals 0, trace point #%x"
field_strs[UPT_D53C] = 1
func_name_array[UPT_D53C] = ""

-- description function for UPT_D53C	
function func_desc_UPT_D53C(address, data)

	if not format_strs[UPT_D53C] then
		format_strs[UPT_D53C]="Not defined :0x%x"
		field_strs[UPT_D53C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D53C]]
	fmt_str=func_name_array[UPT_D53C] .. format_strs[UPT_D53C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D530] = "base bitmap B4 0x%x"
field_strs[UPT_D530] = 1
func_name_array[UPT_D530] = ""

-- description function for UPT_D530	
function func_desc_UPT_D530(address, data)

	if not format_strs[UPT_D530] then
		format_strs[UPT_D530]="Not defined :0x%x"
		field_strs[UPT_D530]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D530]]
	fmt_str=func_name_array[UPT_D530] .. format_strs[UPT_D530] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D531] = "base bitmap B3 0x%x"
field_strs[UPT_D531] = 1
func_name_array[UPT_D531] = ""

-- description function for UPT_D531	
function func_desc_UPT_D531(address, data)

	if not format_strs[UPT_D531] then
		format_strs[UPT_D531]="Not defined :0x%x"
		field_strs[UPT_D531]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D531]]
	fmt_str=func_name_array[UPT_D531] .. format_strs[UPT_D531] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D532] = "base bitmap B2 0x%x"
field_strs[UPT_D532] = 1
func_name_array[UPT_D532] = ""

-- description function for UPT_D532	
function func_desc_UPT_D532(address, data)

	if not format_strs[UPT_D532] then
		format_strs[UPT_D532]="Not defined :0x%x"
		field_strs[UPT_D532]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D532]]
	fmt_str=func_name_array[UPT_D532] .. format_strs[UPT_D532] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D536] = "base bitmap B1 0x%x"
field_strs[UPT_D536] = 1
func_name_array[UPT_D536] = ""

-- description function for UPT_D536	
function func_desc_UPT_D536(address, data)

	if not format_strs[UPT_D536] then
		format_strs[UPT_D536]="Not defined :0x%x"
		field_strs[UPT_D536]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D536]]
	fmt_str=func_name_array[UPT_D536] .. format_strs[UPT_D536] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D537] = "max interval (in slots) 0x%x"
field_strs[UPT_D537] = 1
func_name_array[UPT_D537] = ""

-- description function for UPT_D537	
function func_desc_UPT_D537(address, data)

	if not format_strs[UPT_D537] then
		format_strs[UPT_D537]="Not defined :0x%x"
		field_strs[UPT_D537]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D537]]
	fmt_str=func_name_array[UPT_D537] .. format_strs[UPT_D537] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D538] = "delta (in slots) %d"
field_strs[UPT_D538] = 1
func_name_array[UPT_D538] = ""

-- description function for UPT_D538	
function func_desc_UPT_D538(address, data)

	if not format_strs[UPT_D538] then
		format_strs[UPT_D538]="Not defined :0x%x"
		field_strs[UPT_D538]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D538]]
	fmt_str=func_name_array[UPT_D538] .. format_strs[UPT_D538] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D539] = "acceptable? %d"
field_strs[UPT_D539] = 1
func_name_array[UPT_D539] = ""

-- description function for UPT_D539	
function func_desc_UPT_D539(address, data)

	if not format_strs[UPT_D539] then
		format_strs[UPT_D539]="Not defined :0x%x"
		field_strs[UPT_D539]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D539]]
	fmt_str=func_name_array[UPT_D539] .. format_strs[UPT_D539] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D53A] = "Shift %d, Position (in slots) Got %d"
field_strs[UPT_D53A] = 2
func_name_array[UPT_D53A] = ""

-- description function for UPT_D53A	
function func_desc_UPT_D53A(address, data)

	if not format_strs[UPT_D53A] then
		format_strs[UPT_D53A]="Not defined :0x%x"
		field_strs[UPT_D53A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D53A]]
	fmt_str=func_name_array[UPT_D53A] .. format_strs[UPT_D53A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D53B] = "Estimated window is %d (in slots) of already existed le link %d"
field_strs[UPT_D53B] = 2
func_name_array[UPT_D53B] = ""

-- description function for UPT_D53B	
function func_desc_UPT_D53B(address, data)

	if not format_strs[UPT_D53B] then
		format_strs[UPT_D53B]="Not defined :0x%x"
		field_strs[UPT_D53B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D53B]]
	fmt_str=func_name_array[UPT_D53B] .. format_strs[UPT_D53B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/es_timer_list.o.i
format_strs[UPT_D560] = "Add timer, link id=%d, event type=0x%x"
field_strs[UPT_D560] = 2
func_name_array[UPT_D560] = ""

-- description function for UPT_D560	
function func_desc_UPT_D560(address, data)

	if not format_strs[UPT_D560] then
		format_strs[UPT_D560]="Not defined :0x%x"
		field_strs[UPT_D560]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D560]]
	fmt_str=func_name_array[UPT_D560] .. format_strs[UPT_D560] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D561] = "Remove timer,link id=%d, event type=0x%x"
field_strs[UPT_D561] = 2
func_name_array[UPT_D561] = ""

-- description function for UPT_D561	
function func_desc_UPT_D561(address, data)

	if not format_strs[UPT_D561] then
		format_strs[UPT_D561]="Not defined :0x%x"
		field_strs[UPT_D561]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D561]]
	fmt_str=func_name_array[UPT_D561] .. format_strs[UPT_D561] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D562] = "timer event fail,error code=%d"
field_strs[UPT_D562] = 1
func_name_array[UPT_D562] = ""

-- description function for UPT_D562	
function func_desc_UPT_D562(address, data)

	if not format_strs[UPT_D562] then
		format_strs[UPT_D562]="Not defined :0x%x"
		field_strs[UPT_D562]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D562]]
	fmt_str=func_name_array[UPT_D562] .. format_strs[UPT_D562] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D563] = "Defer timeout event:link id=%d, event type=0x%x"
field_strs[UPT_D563] = 2
func_name_array[UPT_D563] = ""

-- description function for UPT_D563	
function func_desc_UPT_D563(address, data)

	if not format_strs[UPT_D563] then
		format_strs[UPT_D563]="Not defined :0x%x"
		field_strs[UPT_D563]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D563]]
	fmt_str=func_name_array[UPT_D563] .. format_strs[UPT_D563] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D564] = "Activate timeout event,link id=%d, event type=0x%x"
field_strs[UPT_D564] = 2
func_name_array[UPT_D564] = ""

-- description function for UPT_D564	
function func_desc_UPT_D564(address, data)

	if not format_strs[UPT_D564] then
		format_strs[UPT_D564]="Not defined :0x%x"
		field_strs[UPT_D564]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D564]]
	fmt_str=func_name_array[UPT_D564] .. format_strs[UPT_D564] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D565] = "es_update_next_timeout,link id=%d, event type=0x%x"
field_strs[UPT_D565] = 2
func_name_array[UPT_D565] = ""

-- description function for UPT_D565	
function func_desc_UPT_D565(address, data)

	if not format_strs[UPT_D565] then
		format_strs[UPT_D565]="Not defined :0x%x"
		field_strs[UPT_D565]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D565]]
	fmt_str=func_name_array[UPT_D565] .. format_strs[UPT_D565] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/es_var.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/event_isr.o.i
format_strs[UPT_D500] = "bt_event_isr_handler, event type=%x,isr:irq=%x"
field_strs[UPT_D500] = 2
func_name_array[UPT_D500] = ""

-- description function for UPT_D500	
function func_desc_UPT_D500(address, data)

	if not format_strs[UPT_D500] then
		format_strs[UPT_D500]="Not defined :0x%x"
		field_strs[UPT_D500]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D500]]
	fmt_str=func_name_array[UPT_D500] .. format_strs[UPT_D500] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hcit_sprd_serial.o.i
format_strs[UPT_DDB0] = "UART_WriteData: count=%d"
field_strs[UPT_DDB0] = 1
func_name_array[UPT_DDB0] = ""

-- description function for UPT_DDB0	
function func_desc_UPT_DDB0(address, data)

	if not format_strs[UPT_DDB0] then
		format_strs[UPT_DDB0]="Not defined :0x%x"
		field_strs[UPT_DDB0]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDB0]]
	fmt_str=func_name_array[UPT_DDB0] .. format_strs[UPT_DDB0] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDB1] = "is_ssp_need_calc=%d"
field_strs[UPT_DDB1] = 1
func_name_array[UPT_DDB1] = ""

-- description function for UPT_DDB1	
function func_desc_UPT_DDB1(address, data)

	if not format_strs[UPT_DDB1] then
		format_strs[UPT_DDB1]="Not defined :0x%x"
		field_strs[UPT_DDB1]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDB1]]
	fmt_str=func_name_array[UPT_DDB1] .. format_strs[UPT_DDB1] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDB2] = "HCIT_Uart_Tx_Char_Polled:length=%d"
field_strs[UPT_DDB2] = 1
func_name_array[UPT_DDB2] = ""

-- description function for UPT_DDB2	
function func_desc_UPT_DDB2(address, data)

	if not format_strs[UPT_DDB2] then
		format_strs[UPT_DDB2]="Not defined :0x%x"
		field_strs[UPT_DDB2]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDB2]]
	fmt_str=func_name_array[UPT_DDB2] .. format_strs[UPT_DDB2] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDB3] = "HCIT_Uart_Tx_Char_Polled:HCI_EVENT_Q data=%d"
field_strs[UPT_DDB3] = 1
func_name_array[UPT_DDB3] = ""

-- description function for UPT_DDB3	
function func_desc_UPT_DDB3(address, data)

	if not format_strs[UPT_DDB3] then
		format_strs[UPT_DDB3]="Not defined :0x%x"
		field_strs[UPT_DDB3]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDB3]]
	fmt_str=func_name_array[UPT_DDB3] .. format_strs[UPT_DDB3] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDB4] = "hcit_sprd_serial:Monitor=%x"
field_strs[UPT_DDB4] = 1
func_name_array[UPT_DDB4] = ""

-- description function for UPT_DDB4	
function func_desc_UPT_DDB4(address, data)

	if not format_strs[UPT_DDB4] then
		format_strs[UPT_DDB4]="Not defined :0x%x"
		field_strs[UPT_DDB4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDB4]]
	fmt_str=func_name_array[UPT_DDB4] .. format_strs[UPT_DDB4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDB5] = "get_queue_number_commits:q->num_entries=%d"
field_strs[UPT_DDB5] = 1
func_name_array[UPT_DDB5] = ""

-- description function for UPT_DDB5	
function func_desc_UPT_DDB5(address, data)

	if not format_strs[UPT_DDB5] then
		format_strs[UPT_DDB5]="Not defined :0x%x"
		field_strs[UPT_DDB5]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDB5]]
	fmt_str=func_name_array[UPT_DDB5] .. format_strs[UPT_DDB5] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDB6] = "get_queue_number_commits:q->pending_commits=%d"
field_strs[UPT_DDB6] = 1
func_name_array[UPT_DDB6] = ""

-- description function for UPT_DDB6	
function func_desc_UPT_DDB6(address, data)

	if not format_strs[UPT_DDB6] then
		format_strs[UPT_DDB6]="Not defined :0x%x"
		field_strs[UPT_DDB6]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDB6]]
	fmt_str=func_name_array[UPT_DDB6] .. format_strs[UPT_DDB6] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDB7] = "uart_deliverbuffer:lack_count=%d"
field_strs[UPT_DDB7] = 1
func_name_array[UPT_DDB7] = ""

-- description function for UPT_DDB7	
function func_desc_UPT_DDB7(address, data)

	if not format_strs[UPT_DDB7] then
		format_strs[UPT_DDB7]="Not defined :0x%x"
		field_strs[UPT_DDB7]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDB7]]
	fmt_str=func_name_array[UPT_DDB7] .. format_strs[UPT_DDB7] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDB8] = "uart_deliverbuffer:lack_count=%d"
field_strs[UPT_DDB8] = 1
func_name_array[UPT_DDB8] = ""

-- description function for UPT_DDB8	
function func_desc_UPT_DDB8(address, data)

	if not format_strs[UPT_DDB8] then
		format_strs[UPT_DDB8]="Not defined :0x%x"
		field_strs[UPT_DDB8]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDB8]]
	fmt_str=func_name_array[UPT_DDB8] .. format_strs[UPT_DDB8] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDB9] = "uart_deliverbuffer:tra_hcit_uart_rx_pdu_buf=%d"
field_strs[UPT_DDB9] = 1
func_name_array[UPT_DDB9] = ""

-- description function for UPT_DDB9	
function func_desc_UPT_DDB9(address, data)

	if not format_strs[UPT_DDB9] then
		format_strs[UPT_DDB9]="Not defined :0x%x"
		field_strs[UPT_DDB9]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDB9]]
	fmt_str=func_name_array[UPT_DDB9] .. format_strs[UPT_DDB9] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDBA] = "uart_deliverbuffer:lack_count=%d"
field_strs[UPT_DDBA] = 1
func_name_array[UPT_DDBA] = ""

-- description function for UPT_DDBA	
function func_desc_UPT_DDBA(address, data)

	if not format_strs[UPT_DDBA] then
		format_strs[UPT_DDBA]="Not defined :0x%x"
		field_strs[UPT_DDBA]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDBA]]
	fmt_str=func_name_array[UPT_DDBA] .. format_strs[UPT_DDBA] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDBB] = "uart_deliverbuffer:q->num_entries=%d"
field_strs[UPT_DDBB] = 1
func_name_array[UPT_DDBB] = ""

-- description function for UPT_DDBB	
function func_desc_UPT_DDBB(address, data)

	if not format_strs[UPT_DDBB] then
		format_strs[UPT_DDBB]="Not defined :0x%x"
		field_strs[UPT_DDBB]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDBB]]
	fmt_str=func_name_array[UPT_DDBB] .. format_strs[UPT_DDBB] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDBC] = "uart_deliverbuffer:q->pending_commits=%d"
field_strs[UPT_DDBC] = 1
func_name_array[UPT_DDBC] = ""

-- description function for UPT_DDBC	
function func_desc_UPT_DDBC(address, data)

	if not format_strs[UPT_DDBC] then
		format_strs[UPT_DDBC]="Not defined :0x%x"
		field_strs[UPT_DDBC]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDBC]]
	fmt_str=func_name_array[UPT_DDBC] .. format_strs[UPT_DDBC] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDBD] = "uart_deliverbuffer:buf=%d"
field_strs[UPT_DDBD] = 1
func_name_array[UPT_DDBD] = ""

-- description function for UPT_DDBD	
function func_desc_UPT_DDBD(address, data)

	if not format_strs[UPT_DDBD] then
		format_strs[UPT_DDBD]="Not defined :0x%x"
		field_strs[UPT_DDBD]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDBD]]
	fmt_str=func_name_array[UPT_DDBD] .. format_strs[UPT_DDBD] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDBE] = "uart_deliverbuffer:packet_length=%d"
field_strs[UPT_DDBE] = 1
func_name_array[UPT_DDBE] = ""

-- description function for UPT_DDBE	
function func_desc_UPT_DDBE(address, data)

	if not format_strs[UPT_DDBE] then
		format_strs[UPT_DDBE]="Not defined :0x%x"
		field_strs[UPT_DDBE]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDBE]]
	fmt_str=func_name_array[UPT_DDBE] .. format_strs[UPT_DDBE] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDBF] = "uart_deliverbuffer:packet_length=%d"
field_strs[UPT_DDBF] = 1
func_name_array[UPT_DDBF] = ""

-- description function for UPT_DDBF	
function func_desc_UPT_DDBF(address, data)

	if not format_strs[UPT_DDBF] then
		format_strs[UPT_DDBF]="Not defined :0x%x"
		field_strs[UPT_DDBF]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDBF]]
	fmt_str=func_name_array[UPT_DDBF] .. format_strs[UPT_DDBF] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDC0] = "uart_deliverbuffer:q->num_entries=%d"
field_strs[UPT_DDC0] = 1
func_name_array[UPT_DDC0] = ""

-- description function for UPT_DDC0	
function func_desc_UPT_DDC0(address, data)

	if not format_strs[UPT_DDC0] then
		format_strs[UPT_DDC0]="Not defined :0x%x"
		field_strs[UPT_DDC0]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDC0]]
	fmt_str=func_name_array[UPT_DDC0] .. format_strs[UPT_DDC0] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDC1] = "uart_deliverbuffer:q->pending_commits=%d"
field_strs[UPT_DDC1] = 1
func_name_array[UPT_DDC1] = ""

-- description function for UPT_DDC1	
function func_desc_UPT_DDC1(address, data)

	if not format_strs[UPT_DDC1] then
		format_strs[UPT_DDC1]="Not defined :0x%x"
		field_strs[UPT_DDC1]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDC1]]
	fmt_str=func_name_array[UPT_DDC1] .. format_strs[UPT_DDC1] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDC3] = "uart_deliverbuffer:packet_length=%d"
field_strs[UPT_DDC3] = 1
func_name_array[UPT_DDC3] = ""

-- description function for UPT_DDC3	
function func_desc_UPT_DDC3(address, data)

	if not format_strs[UPT_DDC3] then
		format_strs[UPT_DDC3]="Not defined :0x%x"
		field_strs[UPT_DDC3]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDC3]]
	fmt_str=func_name_array[UPT_DDC3] .. format_strs[UPT_DDC3] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDC4] = "uart_deliverbuffer:packet_length=%d"
field_strs[UPT_DDC4] = 1
func_name_array[UPT_DDC4] = ""

-- description function for UPT_DDC4	
function func_desc_UPT_DDC4(address, data)

	if not format_strs[UPT_DDC4] then
		format_strs[UPT_DDC4]="Not defined :0x%x"
		field_strs[UPT_DDC4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDC4]]
	fmt_str=func_name_array[UPT_DDC4] .. format_strs[UPT_DDC4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDC5] = "uart_deliverbuffer:count=%d"
field_strs[UPT_DDC5] = 1
func_name_array[UPT_DDC5] = ""

-- description function for UPT_DDC5	
function func_desc_UPT_DDC5(address, data)

	if not format_strs[UPT_DDC5] then
		format_strs[UPT_DDC5]="Not defined :0x%x"
		field_strs[UPT_DDC5]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDC5]]
	fmt_str=func_name_array[UPT_DDC5] .. format_strs[UPT_DDC5] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDC6] = "uart_deliverbuffer:hci_break_count=%d"
field_strs[UPT_DDC6] = 1
func_name_array[UPT_DDC6] = ""

-- description function for UPT_DDC6	
function func_desc_UPT_DDC6(address, data)

	if not format_strs[UPT_DDC6] then
		format_strs[UPT_DDC6]="Not defined :0x%x"
		field_strs[UPT_DDC6]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDC6]]
	fmt_str=func_name_array[UPT_DDC6] .. format_strs[UPT_DDC6] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDC7] = "uart_deliverbuffer:hci_break_count=%d"
field_strs[UPT_DDC7] = 1
func_name_array[UPT_DDC7] = ""

-- description function for UPT_DDC7	
function func_desc_UPT_DDC7(address, data)

	if not format_strs[UPT_DDC7] then
		format_strs[UPT_DDC7]="Not defined :0x%x"
		field_strs[UPT_DDC7]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDC7]]
	fmt_str=func_name_array[UPT_DDC7] .. format_strs[UPT_DDC7] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDC2] = "BT_Uart_CallbackFunc:reedback_length=%d"
field_strs[UPT_DDC2] = 1
func_name_array[UPT_DDC2] = ""

-- description function for UPT_DDC2	
function func_desc_UPT_DDC2(address, data)

	if not format_strs[UPT_DDC2] then
		format_strs[UPT_DDC2]="Not defined :0x%x"
		field_strs[UPT_DDC2]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDC2]]
	fmt_str=func_name_array[UPT_DDC2] .. format_strs[UPT_DDC2] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDCE] = "UART_Rx_Timeout_CallBack:temp_fifo_raw_cnt=%d"
field_strs[UPT_DDCE] = 1
func_name_array[UPT_DDCE] = ""

-- description function for UPT_DDCE	
function func_desc_UPT_DDCE(address, data)

	if not format_strs[UPT_DDCE] then
		format_strs[UPT_DDCE]="Not defined :0x%x"
		field_strs[UPT_DDCE]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDCE]]
	fmt_str=func_name_array[UPT_DDCE] .. format_strs[UPT_DDCE] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDCF] = "UART_Rx_Timeout_CallBack:uart_dma_read_cnt=%d"
field_strs[UPT_DDCF] = 1
func_name_array[UPT_DDCF] = ""

-- description function for UPT_DDCF	
function func_desc_UPT_DDCF(address, data)

	if not format_strs[UPT_DDCF] then
		format_strs[UPT_DDCF]="Not defined :0x%x"
		field_strs[UPT_DDCF]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDCF]]
	fmt_str=func_name_array[UPT_DDCF] .. format_strs[UPT_DDCF] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hcit_var.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hci_params_impl.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hc_cmd_disp.o.i
format_strs[UPT_DD09] = "HC_CMD: payload len=%d"
field_strs[UPT_DD09] = 1
func_name_array[UPT_DD09] = ""

-- description function for UPT_DD09	
function func_desc_UPT_DD09(address, data)

	if not format_strs[UPT_DD09] then
		format_strs[UPT_DD09]="Not defined :0x%x"
		field_strs[UPT_DD09]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD09]]
	fmt_str=func_name_array[UPT_DD09] .. format_strs[UPT_DD09] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD00] = "HC_CMD: payload[0]=0x%x;payload[1]=0x%x"
field_strs[UPT_DD00] = 2
func_name_array[UPT_DD00] = ""

-- description function for UPT_DD00	
function func_desc_UPT_DD00(address, data)

	if not format_strs[UPT_DD00] then
		format_strs[UPT_DD00]="Not defined :0x%x"
		field_strs[UPT_DD00]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD00]]
	fmt_str=func_name_array[UPT_DD00] .. format_strs[UPT_DD00] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD13] = "HC_CMD: address wrap pdu_descr->data=%x"
field_strs[UPT_DD13] = 1
func_name_array[UPT_DD13] = ""

-- description function for UPT_DD13	
function func_desc_UPT_DD13(address, data)

	if not format_strs[UPT_DD13] then
		format_strs[UPT_DD13]="Not defined :0x%x"
		field_strs[UPT_DD13]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD13]]
	fmt_str=func_name_array[UPT_DD13] .. format_strs[UPT_DD13] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_DD02 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_DD11] = "BT_Mode_Change: BT_Mode=%d,BT_status=%d,g_is_bt_open_flag=%d,g_sleep_enable=%d"
field_strs[UPT_DD11] = 4
func_name_array[UPT_DD11] = ""

-- description function for UPT_DD11	
function func_desc_UPT_DD11(address, data)

	if not format_strs[UPT_DD11] then
		format_strs[UPT_DD11]="Not defined :0x%x"
		field_strs[UPT_DD11]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD11]]
	fmt_str=func_name_array[UPT_DD11] .. format_strs[UPT_DD11] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD08] = "Acl_Priority: device_index=%d,priority=%d"
field_strs[UPT_DD08] = 2
func_name_array[UPT_DD08] = ""

-- description function for UPT_DD08	
function func_desc_UPT_DD08(address, data)

	if not format_strs[UPT_DD08] then
		format_strs[UPT_DD08]="Not defined :0x%x"
		field_strs[UPT_DD08]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD08]]
	fmt_str=func_name_array[UPT_DD08] .. format_strs[UPT_DD08] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D624] = "a2dp offload sbc info %x"
field_strs[UPT_D624] = 1
func_name_array[UPT_D624] = ""

-- description function for UPT_D624	
function func_desc_UPT_D624(address, data)

	if not format_strs[UPT_D624] then
		format_strs[UPT_D624]="Not defined :0x%x"
		field_strs[UPT_D624]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D624]]
	fmt_str=func_name_array[UPT_D624] .. format_strs[UPT_D624] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D625] = "a2dp offload sbc frame length %d"
field_strs[UPT_D625] = 1
func_name_array[UPT_D625] = ""

-- description function for UPT_D625	
function func_desc_UPT_D625(address, data)

	if not format_strs[UPT_D625] then
		format_strs[UPT_D625]="Not defined :0x%x"
		field_strs[UPT_D625]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D625]]
	fmt_str=func_name_array[UPT_D625] .. format_strs[UPT_D625] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD0D] = "HCI_SNIFF_SUBRATING: COMMAND_DISALLOWED bqb_test_mode_control=%d"
field_strs[UPT_DD0D] = 1
func_name_array[UPT_DD0D] = ""

-- description function for UPT_DD0D	
function func_desc_UPT_DD0D(address, data)

	if not format_strs[UPT_DD0D] then
		format_strs[UPT_DD0D]="Not defined :0x%x"
		field_strs[UPT_DD0D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD0D]]
	fmt_str=func_name_array[UPT_DD0D] .. format_strs[UPT_DD0D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD0E] = "HCI_QOS_SETUP: service=%d"
field_strs[UPT_DD0E] = 1
func_name_array[UPT_DD0E] = ""

-- description function for UPT_DD0E	
function func_desc_UPT_DD0E(address, data)

	if not format_strs[UPT_DD0E] then
		format_strs[UPT_DD0E]="Not defined :0x%x"
		field_strs[UPT_DD0E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD0E]]
	fmt_str=func_name_array[UPT_DD0E] .. format_strs[UPT_DD0E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD0F] = "HCI_WRITE_SUPERVISION_TIMEOUT: timeout=%d"
field_strs[UPT_DD0F] = 1
func_name_array[UPT_DD0F] = ""

-- description function for UPT_DD0F	
function func_desc_UPT_DD0F(address, data)

	if not format_strs[UPT_DD0F] then
		format_strs[UPT_DD0F]="Not defined :0x%x"
		field_strs[UPT_DD0F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD0F]]
	fmt_str=func_name_array[UPT_DD0F] .. format_strs[UPT_DD0F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D79A] = "ble scan error code 0x%x"
field_strs[UPT_D79A] = 1
func_name_array[UPT_D79A] = ""

-- description function for UPT_D79A	
function func_desc_UPT_D79A(address, data)

	if not format_strs[UPT_D79A] then
		format_strs[UPT_D79A]="Not defined :0x%x"
		field_strs[UPT_D79A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D79A]]
	fmt_str=func_name_array[UPT_D79A] .. format_strs[UPT_D79A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D79B] = "ble scan error code 0x%x"
field_strs[UPT_D79B] = 1
func_name_array[UPT_D79B] = ""

-- description function for UPT_D79B	
function func_desc_UPT_D79B(address, data)

	if not format_strs[UPT_D79B] then
		format_strs[UPT_D79B]="Not defined :0x%x"
		field_strs[UPT_D79B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D79B]]
	fmt_str=func_name_array[UPT_D79B] .. format_strs[UPT_D79B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7D0] = "opcode 0x%x"
field_strs[UPT_D7D0] = 1
func_name_array[UPT_D7D0] = ""

-- description function for UPT_D7D0	
function func_desc_UPT_D7D0(address, data)

	if not format_strs[UPT_D7D0] then
		format_strs[UPT_D7D0]="Not defined :0x%x"
		field_strs[UPT_D7D0]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7D0]]
	fmt_str=func_name_array[UPT_D7D0] .. format_strs[UPT_D7D0] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hc_event_gen.o.i
format_strs[UPT_DD1F] = "HCI_LE_TEST_END: p_event_info->value16bit=%x"
field_strs[UPT_DD1F] = 1
func_name_array[UPT_DD1F] = ""

-- description function for UPT_DD1F	
function func_desc_UPT_DD1F(address, data)

	if not format_strs[UPT_DD1F] then
		format_strs[UPT_DD1F]="Not defined :0x%x"
		field_strs[UPT_DD1F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD1F]]
	fmt_str=func_name_array[UPT_DD1F] .. format_strs[UPT_DD1F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_DD05 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_DD07] = "HCI_DATA_BUFFER_OVERFLOW_EVENT: p_event_info->link_type=%x"
field_strs[UPT_DD07] = 1
func_name_array[UPT_DD07] = ""

-- description function for UPT_DD07	
function func_desc_UPT_DD07(address, data)

	if not format_strs[UPT_DD07] then
		format_strs[UPT_DD07]="Not defined :0x%x"
		field_strs[UPT_DD07]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD07]]
	fmt_str=func_name_array[UPT_DD07] .. format_strs[UPT_DD07] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_DD03 is in dsp_description_fixed.lua, skip from here
-- UPT_DD04 is in dsp_description_fixed.lua, skip from here
-- UPT_DD04 is in dsp_description_fixed.lua, skip from here
-- UPT_DD06 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_DD26] = "A2dp chopping point, Controller sent a2dp data delta time is %d slots"
field_strs[UPT_DD26] = 1
func_name_array[UPT_DD26] = ""

-- description function for UPT_DD26	
function func_desc_UPT_DD26(address, data)

	if not format_strs[UPT_DD26] then
		format_strs[UPT_DD26]="Not defined :0x%x"
		field_strs[UPT_DD26]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD26]]
	fmt_str=func_name_array[UPT_DD26] .. format_strs[UPT_DD26] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD20] = "HC_EVT: payload len=%d"
field_strs[UPT_DD20] = 1
func_name_array[UPT_DD20] = ""

-- description function for UPT_DD20	
function func_desc_UPT_DD20(address, data)

	if not format_strs[UPT_DD20] then
		format_strs[UPT_DD20]="Not defined :0x%x"
		field_strs[UPT_DD20]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD20]]
	fmt_str=func_name_array[UPT_DD20] .. format_strs[UPT_DD20] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD01] = "HC_event body:buf[0]=0x%x,buf[1]=0x%x"
field_strs[UPT_DD01] = 2
func_name_array[UPT_DD01] = ""

-- description function for UPT_DD01	
function func_desc_UPT_DD01(address, data)

	if not format_strs[UPT_DD01] then
		format_strs[UPT_DD01]="Not defined :0x%x"
		field_strs[UPT_DD01]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD01]]
	fmt_str=func_name_array[UPT_DD01] .. format_strs[UPT_DD01] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hc_flow_control.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hc_var.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hw_acc_api.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hw_aon_api.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hw_bb_rom.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hw_bb_var.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hw_codec.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hw_delay.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hw_habanero_impl.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hw_lc.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hw_lc_impl.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hw_le_lc_impl.o.i
format_strs[UPT_D79E] = "ble trace 0x%x"
field_strs[UPT_D79E] = 1
func_name_array[UPT_D79E] = ""

-- description function for UPT_D79E	
function func_desc_UPT_D79E(address, data)

	if not format_strs[UPT_D79E] then
		format_strs[UPT_D79E]="Not defined :0x%x"
		field_strs[UPT_D79E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D79E]]
	fmt_str=func_name_array[UPT_D79E] .. format_strs[UPT_D79E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hw_memcpy.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hw_modem_api.o.i
format_strs[UPT_D040] = "raw_RSSI = 0x%x"
field_strs[UPT_D040] = 1
func_name_array[UPT_D040] = ""

-- description function for UPT_D040	
function func_desc_UPT_D040(address, data)

	if not format_strs[UPT_D040] then
		format_strs[UPT_D040]="Not defined :0x%x"
		field_strs[UPT_D040]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D040]]
	fmt_str=func_name_array[UPT_D040] .. format_strs[UPT_D040] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D041] = "ABBGainValue = 0x%x"
field_strs[UPT_D041] = 1
func_name_array[UPT_D041] = ""

-- description function for UPT_D041	
function func_desc_UPT_D041(address, data)

	if not format_strs[UPT_D041] then
		format_strs[UPT_D041]="Not defined :0x%x"
		field_strs[UPT_D041]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D041]]
	fmt_str=func_name_array[UPT_D041] .. format_strs[UPT_D041] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D045] = "g_lna_fix_max_flag = %d"
field_strs[UPT_D045] = 1
func_name_array[UPT_D045] = ""

-- description function for UPT_D045	
function func_desc_UPT_D045(address, data)

	if not format_strs[UPT_D045] then
		format_strs[UPT_D045]="Not defined :0x%x"
		field_strs[UPT_D045]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D045]]
	fmt_str=func_name_array[UPT_D045] .. format_strs[UPT_D045] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D042] = "LNAGainValue = 0x%x"
field_strs[UPT_D042] = 1
func_name_array[UPT_D042] = ""

-- description function for UPT_D042	
function func_desc_UPT_D042(address, data)

	if not format_strs[UPT_D042] then
		format_strs[UPT_D042]="Not defined :0x%x"
		field_strs[UPT_D042]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D042]]
	fmt_str=func_name_array[UPT_D042] .. format_strs[UPT_D042] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D043] = "RSSI_dbm = %d"
field_strs[UPT_D043] = 1
func_name_array[UPT_D043] = ""

-- description function for UPT_D043	
function func_desc_UPT_D043(address, data)

	if not format_strs[UPT_D043] then
		format_strs[UPT_D043]="Not defined :0x%x"
		field_strs[UPT_D043]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D043]]
	fmt_str=func_name_array[UPT_D043] .. format_strs[UPT_D043] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D044] = "vtb_path_diff = %d"
field_strs[UPT_D044] = 1
func_name_array[UPT_D044] = ""

-- description function for UPT_D044	
function func_desc_UPT_D044(address, data)

	if not format_strs[UPT_D044] then
		format_strs[UPT_D044]="Not defined :0x%x"
		field_strs[UPT_D044]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D044]]
	fmt_str=func_name_array[UPT_D044] .. format_strs[UPT_D044] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D046] = "adc_dfe_freq = 0x%x"
field_strs[UPT_D046] = 1
func_name_array[UPT_D046] = ""

-- description function for UPT_D046	
function func_desc_UPT_D046(address, data)

	if not format_strs[UPT_D046] then
		format_strs[UPT_D046]="Not defined :0x%x"
		field_strs[UPT_D046]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D046]]
	fmt_str=func_name_array[UPT_D046] .. format_strs[UPT_D046] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hw_radio.o.i
format_strs[UPT_D001] = "HWradio_LE_Service,io_Channel=0x%x, freq_mask=%d, CurrentRadioMode=%d, in_RadioMode=%d"
field_strs[UPT_D001] = 4
func_name_array[UPT_D001] = ""

-- description function for UPT_D001	
function func_desc_UPT_D001(address, data)

	if not format_strs[UPT_D001] then
		format_strs[UPT_D001]="Not defined :0x%x"
		field_strs[UPT_D001]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D001]]
	fmt_str=func_name_array[UPT_D001] .. format_strs[UPT_D001] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D000] = "HWradio_Service,io_Channel=0x%x, freq_mask=%d, CurrentRadioMode=%d, in_RadioMode=%d"
field_strs[UPT_D000] = 4
func_name_array[UPT_D000] = ""

-- description function for UPT_D000	
function func_desc_UPT_D000(address, data)

	if not format_strs[UPT_D000] then
		format_strs[UPT_D000]="Not defined :0x%x"
		field_strs[UPT_D000]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D000]]
	fmt_str=func_name_array[UPT_D000] .. format_strs[UPT_D000] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D007] = "HWradio_Calc_Power_Ctrl_Word,power_code=%d"
field_strs[UPT_D007] = 1
func_name_array[UPT_D007] = ""

-- description function for UPT_D007	
function func_desc_UPT_D007(address, data)

	if not format_strs[UPT_D007] then
		format_strs[UPT_D007]="Not defined :0x%x"
		field_strs[UPT_D007]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D007]]
	fmt_str=func_name_array[UPT_D007] .. format_strs[UPT_D007] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D006] = "HWradio_Set_Pskey_Power_Value,g_u8_bt_efuse_max_power=%d"
field_strs[UPT_D006] = 1
func_name_array[UPT_D006] = ""

-- description function for UPT_D006	
function func_desc_UPT_D006(address, data)

	if not format_strs[UPT_D006] then
		format_strs[UPT_D006]="Not defined :0x%x"
		field_strs[UPT_D006]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D006]]
	fmt_str=func_name_array[UPT_D006] .. format_strs[UPT_D006] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D080] = "HWradio_Debug_Log,JAL6020_common=0x%x"
field_strs[UPT_D080] = 1
func_name_array[UPT_D080] = ""

-- description function for UPT_D080	
function func_desc_UPT_D080(address, data)

	if not format_strs[UPT_D080] then
		format_strs[UPT_D080]="Not defined :0x%x"
		field_strs[UPT_D080]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D080]]
	fmt_str=func_name_array[UPT_D080] .. format_strs[UPT_D080] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D082] = "HWradio_Debug_Log,JAL6028_intmask=0x%x"
field_strs[UPT_D082] = 1
func_name_array[UPT_D082] = ""

-- description function for UPT_D082	
function func_desc_UPT_D082(address, data)

	if not format_strs[UPT_D082] then
		format_strs[UPT_D082]="Not defined :0x%x"
		field_strs[UPT_D082]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D082]]
	fmt_str=func_name_array[UPT_D082] .. format_strs[UPT_D082] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D084] = "HWradio_Debug_Log,JAL6070_sertime=0x%x"
field_strs[UPT_D084] = 1
func_name_array[UPT_D084] = ""

-- description function for UPT_D084	
function func_desc_UPT_D084(address, data)

	if not format_strs[UPT_D084] then
		format_strs[UPT_D084]="Not defined :0x%x"
		field_strs[UPT_D084]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D084]]
	fmt_str=func_name_array[UPT_D084] .. format_strs[UPT_D084] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D086] = "HWradio_Debug_Log,JAL60B0_pathdelay=0x%x"
field_strs[UPT_D086] = 1
func_name_array[UPT_D086] = ""

-- description function for UPT_D086	
function func_desc_UPT_D086(address, data)

	if not format_strs[UPT_D086] then
		format_strs[UPT_D086]="Not defined :0x%x"
		field_strs[UPT_D086]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D086]]
	fmt_str=func_name_array[UPT_D086] .. format_strs[UPT_D086] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D088] = "HWradio_Debug_Log,JAL6700_edrctrl=0x%x"
field_strs[UPT_D088] = 1
func_name_array[UPT_D088] = ""

-- description function for UPT_D088	
function func_desc_UPT_D088(address, data)

	if not format_strs[UPT_D088] then
		format_strs[UPT_D088]="Not defined :0x%x"
		field_strs[UPT_D088]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D088]]
	fmt_str=func_name_array[UPT_D088] .. format_strs[UPT_D088] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D08A] = "HWradio_Debug_Log,JAL6710_edrctrl=0x%x"
field_strs[UPT_D08A] = 1
func_name_array[UPT_D08A] = ""

-- description function for UPT_D08A	
function func_desc_UPT_D08A(address, data)

	if not format_strs[UPT_D08A] then
		format_strs[UPT_D08A]="Not defined :0x%x"
		field_strs[UPT_D08A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D08A]]
	fmt_str=func_name_array[UPT_D08A] .. format_strs[UPT_D08A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D08C] = "HWradio_Debug_Log,JAL6710_edrctrl=0x%x"
field_strs[UPT_D08C] = 1
func_name_array[UPT_D08C] = ""

-- description function for UPT_D08C	
function func_desc_UPT_D08C(address, data)

	if not format_strs[UPT_D08C] then
		format_strs[UPT_D08C]="Not defined :0x%x"
		field_strs[UPT_D08C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D08C]]
	fmt_str=func_name_array[UPT_D08C] .. format_strs[UPT_D08C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D081] = "HWradio_Debug_Log,JAL6020_common=0x%x"
field_strs[UPT_D081] = 1
func_name_array[UPT_D081] = ""

-- description function for UPT_D081	
function func_desc_UPT_D081(address, data)

	if not format_strs[UPT_D081] then
		format_strs[UPT_D081]="Not defined :0x%x"
		field_strs[UPT_D081]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D081]]
	fmt_str=func_name_array[UPT_D081] .. format_strs[UPT_D081] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D083] = "HWradio_Debug_Log,JAL6028_intmask=0x%x"
field_strs[UPT_D083] = 1
func_name_array[UPT_D083] = ""

-- description function for UPT_D083	
function func_desc_UPT_D083(address, data)

	if not format_strs[UPT_D083] then
		format_strs[UPT_D083]="Not defined :0x%x"
		field_strs[UPT_D083]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D083]]
	fmt_str=func_name_array[UPT_D083] .. format_strs[UPT_D083] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D085] = "HWradio_Debug_Log,JAL6070_sertime=0x%x"
field_strs[UPT_D085] = 1
func_name_array[UPT_D085] = ""

-- description function for UPT_D085	
function func_desc_UPT_D085(address, data)

	if not format_strs[UPT_D085] then
		format_strs[UPT_D085]="Not defined :0x%x"
		field_strs[UPT_D085]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D085]]
	fmt_str=func_name_array[UPT_D085] .. format_strs[UPT_D085] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D087] = "HWradio_Debug_Log,JAL60B0_pathdelay=0x%x"
field_strs[UPT_D087] = 1
func_name_array[UPT_D087] = ""

-- description function for UPT_D087	
function func_desc_UPT_D087(address, data)

	if not format_strs[UPT_D087] then
		format_strs[UPT_D087]="Not defined :0x%x"
		field_strs[UPT_D087]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D087]]
	fmt_str=func_name_array[UPT_D087] .. format_strs[UPT_D087] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D089] = "HWradio_Debug_Log,JAL6700_edrctrl=0x%x"
field_strs[UPT_D089] = 1
func_name_array[UPT_D089] = ""

-- description function for UPT_D089	
function func_desc_UPT_D089(address, data)

	if not format_strs[UPT_D089] then
		format_strs[UPT_D089]="Not defined :0x%x"
		field_strs[UPT_D089]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D089]]
	fmt_str=func_name_array[UPT_D089] .. format_strs[UPT_D089] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D08B] = "HWradio_Debug_Log,JAL6730_edrctrl=0x%x"
field_strs[UPT_D08B] = 1
func_name_array[UPT_D08B] = ""

-- description function for UPT_D08B	
function func_desc_UPT_D08B(address, data)

	if not format_strs[UPT_D08B] then
		format_strs[UPT_D08B]="Not defined :0x%x"
		field_strs[UPT_D08B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D08B]]
	fmt_str=func_name_array[UPT_D08B] .. format_strs[UPT_D08B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D08D] = "HWradio_Debug_Log,JAL6730_edrctrl=0x%x"
field_strs[UPT_D08D] = 1
func_name_array[UPT_D08D] = ""

-- description function for UPT_D08D	
function func_desc_UPT_D08D(address, data)

	if not format_strs[UPT_D08D] then
		format_strs[UPT_D08D]="Not defined :0x%x"
		field_strs[UPT_D08D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D08D]]
	fmt_str=func_name_array[UPT_D08D] .. format_strs[UPT_D08D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D08F] = "HWradio_Debug_Log,JAL6048_edrctrl=0x%x"
field_strs[UPT_D08F] = 1
func_name_array[UPT_D08F] = ""

-- description function for UPT_D08F	
function func_desc_UPT_D08F(address, data)

	if not format_strs[UPT_D08F] then
		format_strs[UPT_D08F]="Not defined :0x%x"
		field_strs[UPT_D08F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D08F]]
	fmt_str=func_name_array[UPT_D08F] .. format_strs[UPT_D08F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D004] = "HWradio_Set_Tx_Power_Level,g_PowerWord=0x%x"
field_strs[UPT_D004] = 1
func_name_array[UPT_D004] = ""

-- description function for UPT_D004	
function func_desc_UPT_D004(address, data)

	if not format_strs[UPT_D004] then
		format_strs[UPT_D004]="Not defined :0x%x"
		field_strs[UPT_D004]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D004]]
	fmt_str=func_name_array[UPT_D004] .. format_strs[UPT_D004] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D008] = "HWradio_LE_Set_Tx_Power_Level,g_PowerWord_LE=0x%x"
field_strs[UPT_D008] = 1
func_name_array[UPT_D008] = ""

-- description function for UPT_D008	
function func_desc_UPT_D008(address, data)

	if not format_strs[UPT_D008] then
		format_strs[UPT_D008]="Not defined :0x%x"
		field_strs[UPT_D008]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D008]]
	fmt_str=func_name_array[UPT_D008] .. format_strs[UPT_D008] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D005] = "HWradio_Set_Fixed_Rx_Gain,g_GainWord=0x%x"
field_strs[UPT_D005] = 1
func_name_array[UPT_D005] = ""

-- description function for UPT_D005	
function func_desc_UPT_D005(address, data)

	if not format_strs[UPT_D005] then
		format_strs[UPT_D005]="Not defined :0x%x"
		field_strs[UPT_D005]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D005]]
	fmt_str=func_name_array[UPT_D005] .. format_strs[UPT_D005] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D002] = "HWradio_Switch_To_LE,LE_MODE=%d"
field_strs[UPT_D002] = 1
func_name_array[UPT_D002] = ""

-- description function for UPT_D002	
function func_desc_UPT_D002(address, data)

	if not format_strs[UPT_D002] then
		format_strs[UPT_D002]="Not defined :0x%x"
		field_strs[UPT_D002]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D002]]
	fmt_str=func_name_array[UPT_D002] .. format_strs[UPT_D002] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D003] = "HWradio_Switch_To_Classic,CLASSIC_MODE=%d"
field_strs[UPT_D003] = 1
func_name_array[UPT_D003] = ""

-- description function for UPT_D003	
function func_desc_UPT_D003(address, data)

	if not format_strs[UPT_D003] then
		format_strs[UPT_D003]="Not defined :0x%x"
		field_strs[UPT_D003]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D003]]
	fmt_str=func_name_array[UPT_D003] .. format_strs[UPT_D003] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD50] = "data_wave_gen len is error, len is %d"
field_strs[UPT_DD50] = 1
func_name_array[UPT_DD50] = ""

-- description function for UPT_DD50	
function func_desc_UPT_DD50(address, data)

	if not format_strs[UPT_DD50] then
		format_strs[UPT_DD50]="Not defined :0x%x"
		field_strs[UPT_DD50]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD50]]
	fmt_str=func_name_array[UPT_DD50] .. format_strs[UPT_DD50] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/hw_radio_var.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/if_bt_coex_driver.o.i
format_strs[UPT_D4B8] = "As of now, there are %x A2DP packets pending"
field_strs[UPT_D4B8] = 1
func_name_array[UPT_D4B8] = ""

-- description function for UPT_D4B8	
function func_desc_UPT_D4B8(address, data)

	if not format_strs[UPT_D4B8] then
		format_strs[UPT_D4B8]="Not defined :0x%x"
		field_strs[UPT_D4B8]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D4B8]]
	fmt_str=func_name_array[UPT_D4B8] .. format_strs[UPT_D4B8] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D4B9] = "Estimated window size is %x slots"
field_strs[UPT_D4B9] = 1
func_name_array[UPT_D4B9] = ""

-- description function for UPT_D4B9	
function func_desc_UPT_D4B9(address, data)

	if not format_strs[UPT_D4B9] then
		format_strs[UPT_D4B9]="Not defined :0x%x"
		field_strs[UPT_D4B9]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D4B9]]
	fmt_str=func_name_array[UPT_D4B9] .. format_strs[UPT_D4B9] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D4B6] = "Before Wifi start time, comm timer %x"
field_strs[UPT_D4B6] = 1
func_name_array[UPT_D4B6] = ""

-- description function for UPT_D4B6	
function func_desc_UPT_D4B6(address, data)

	if not format_strs[UPT_D4B6] then
		format_strs[UPT_D4B6]="Not defined :0x%x"
		field_strs[UPT_D4B6]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D4B6]]
	fmt_str=func_name_array[UPT_D4B6] .. format_strs[UPT_D4B6] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D4B7] = "At edge, comm timer %x"
field_strs[UPT_D4B7] = 1
func_name_array[UPT_D4B7] = ""

-- description function for UPT_D4B7	
function func_desc_UPT_D4B7(address, data)

	if not format_strs[UPT_D4B7] then
		format_strs[UPT_D4B7]="Not defined :0x%x"
		field_strs[UPT_D4B7]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D4B7]]
	fmt_str=func_name_array[UPT_D4B7] .. format_strs[UPT_D4B7] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/if_bt_coex_var.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/if_bt_from_coex.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/if_bt_to_coex.o.i
format_strs[UPT_D460] = "bt to coex interface, func number %d"
field_strs[UPT_D460] = 1
func_name_array[UPT_D460] = ""

-- description function for UPT_D460	
function func_desc_UPT_D460(address, data)

	if not format_strs[UPT_D460] then
		format_strs[UPT_D460]="Not defined :0x%x"
		field_strs[UPT_D460]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D460]]
	fmt_str=func_name_array[UPT_D460] .. format_strs[UPT_D460] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lc_interface.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lc_log.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lc_var.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/LE_advertise.o.i
format_strs[UPT_D726] = "rpa_list_index %d"
field_strs[UPT_D726] = 1
func_name_array[UPT_D726] = ""

-- description function for UPT_D726	
function func_desc_UPT_D726(address, data)

	if not format_strs[UPT_D726] then
		format_strs[UPT_D726]="Not defined :0x%x"
		field_strs[UPT_D726]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D726]]
	fmt_str=func_name_array[UPT_D726] .. format_strs[UPT_D726] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D729] = "Native_Clk=%x"
field_strs[UPT_D729] = 1
func_name_array[UPT_D729] = ""

-- description function for UPT_D729	
function func_desc_UPT_D729(address, data)

	if not format_strs[UPT_D729] then
		format_strs[UPT_D729]="Not defined :0x%x"
		field_strs[UPT_D729]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D729]]
	fmt_str=func_name_array[UPT_D729] .. format_strs[UPT_D729] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D72A] = "pt_next_timeout.clock=%x"
field_strs[UPT_D72A] = 1
func_name_array[UPT_D72A] = ""

-- description function for UPT_D72A	
function func_desc_UPT_D72A(address, data)

	if not format_strs[UPT_D72A] then
		format_strs[UPT_D72A]="Not defined :0x%x"
		field_strs[UPT_D72A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D72A]]
	fmt_str=func_name_array[UPT_D72A] .. format_strs[UPT_D72A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D72B] = "pt_next_timeout.offset=%x"
field_strs[UPT_D72B] = 1
func_name_array[UPT_D72B] = ""

-- description function for UPT_D72B	
function func_desc_UPT_D72B(address, data)

	if not format_strs[UPT_D72B] then
		format_strs[UPT_D72B]="Not defined :0x%x"
		field_strs[UPT_D72B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D72B]]
	fmt_str=func_name_array[UPT_D72B] .. format_strs[UPT_D72B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D712] = "adv event sw irq_type =%x"
field_strs[UPT_D712] = 1
func_name_array[UPT_D712] = ""

-- description function for UPT_D712	
function func_desc_UPT_D712(address, data)

	if not format_strs[UPT_D712] then
		format_strs[UPT_D712]="Not defined :0x%x"
		field_strs[UPT_D712]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D712]]
	fmt_str=func_name_array[UPT_D712] .. format_strs[UPT_D712] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D713] = "Remove Advevt Check : type=%d  result=%d"
field_strs[UPT_D713] = 2
func_name_array[UPT_D713] = ""

-- description function for UPT_D713	
function func_desc_UPT_D713(address, data)

	if not format_strs[UPT_D713] then
		format_strs[UPT_D713]="Not defined :0x%x"
		field_strs[UPT_D713]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D713]]
	fmt_str=func_name_array[UPT_D713] .. format_strs[UPT_D713] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D714] = "Remove Advevt Check : highduty=%d normal=%d"
field_strs[UPT_D714] = 2
func_name_array[UPT_D714] = ""

-- description function for UPT_D714	
function func_desc_UPT_D714(address, data)

	if not format_strs[UPT_D714] then
		format_strs[UPT_D714]="Not defined :0x%x"
		field_strs[UPT_D714]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D714]]
	fmt_str=func_name_array[UPT_D714] .. format_strs[UPT_D714] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D716] = "advertising_type=%d ret=%d"
field_strs[UPT_D716] = 2
func_name_array[UPT_D716] = ""

-- description function for UPT_D716	
function func_desc_UPT_D716(address, data)

	if not format_strs[UPT_D716] then
		format_strs[UPT_D716]="Not defined :0x%x"
		field_strs[UPT_D716]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D716]]
	fmt_str=func_name_array[UPT_D716] .. format_strs[UPT_D716] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D717] = "adv_highduty_evt_cnt=%d adv_normal_evt_cnt=%d"
field_strs[UPT_D717] = 2
func_name_array[UPT_D717] = ""

-- description function for UPT_D717	
function func_desc_UPT_D717(address, data)

	if not format_strs[UPT_D717] then
		format_strs[UPT_D717]="Not defined :0x%x"
		field_strs[UPT_D717]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D717]]
	fmt_str=func_name_array[UPT_D717] .. format_strs[UPT_D717] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D715] = "adv_enable=%d type=%d"
field_strs[UPT_D715] = 2
func_name_array[UPT_D715] = ""

-- description function for UPT_D715	
function func_desc_UPT_D715(address, data)

	if not format_strs[UPT_D715] then
		format_strs[UPT_D715]="Not defined :0x%x"
		field_strs[UPT_D715]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D715]]
	fmt_str=func_name_array[UPT_D715] .. format_strs[UPT_D715] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D71A] = "adv_highduty_evt_handle=%d adv_evt_handle=%d"
field_strs[UPT_D71A] = 2
func_name_array[UPT_D71A] = ""

-- description function for UPT_D71A	
function func_desc_UPT_D71A(address, data)

	if not format_strs[UPT_D71A] then
		format_strs[UPT_D71A]="Not defined :0x%x"
		field_strs[UPT_D71A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D71A]]
	fmt_str=func_name_array[UPT_D71A] .. format_strs[UPT_D71A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D72E] = "check_state %d"
field_strs[UPT_D72E] = 1
func_name_array[UPT_D72E] = ""

-- description function for UPT_D72E	
function func_desc_UPT_D72E(address, data)

	if not format_strs[UPT_D72E] then
		format_strs[UPT_D72E]="Not defined :0x%x"
		field_strs[UPT_D72E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D72E]]
	fmt_str=func_name_array[UPT_D72E] .. format_strs[UPT_D72E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D718] = "advertising_type %d"
field_strs[UPT_D718] = 1
func_name_array[UPT_D718] = ""

-- description function for UPT_D718	
function func_desc_UPT_D718(address, data)

	if not format_strs[UPT_D718] then
		format_strs[UPT_D718]="Not defined :0x%x"
		field_strs[UPT_D718]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D718]]
	fmt_str=func_name_array[UPT_D718] .. format_strs[UPT_D718] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D7FE] = "current_ext_adv_type 0x%x"
field_strs[UPT_D7FE] = 1
func_name_array[UPT_D7FE] = ""

-- description function for UPT_D7FE	
function func_desc_UPT_D7FE(address, data)

	if not format_strs[UPT_D7FE] then
		format_strs[UPT_D7FE]="Not defined :0x%x"
		field_strs[UPT_D7FE]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7FE]]
	fmt_str=func_name_array[UPT_D7FE] .. format_strs[UPT_D7FE] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D790] = "LE AE detail log index 0x%x"
field_strs[UPT_D790] = 1
func_name_array[UPT_D790] = ""

-- description function for UPT_D790	
function func_desc_UPT_D790(address, data)

	if not format_strs[UPT_D790] then
		format_strs[UPT_D790]="Not defined :0x%x"
		field_strs[UPT_D790]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D790]]
	fmt_str=func_name_array[UPT_D790] .. format_strs[UPT_D790] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D71B] = " irq_type=%d"
field_strs[UPT_D71B] = 1
func_name_array[UPT_D71B] = ""

-- description function for UPT_D71B	
function func_desc_UPT_D71B(address, data)

	if not format_strs[UPT_D71B] then
		format_strs[UPT_D71B]="Not defined :0x%x"
		field_strs[UPT_D71B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D71B]]
	fmt_str=func_name_array[UPT_D71B] .. format_strs[UPT_D71B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D71D] = "rx connect req =%d"
field_strs[UPT_D71D] = 1
func_name_array[UPT_D71D] = ""

-- description function for UPT_D71D	
function func_desc_UPT_D71D(address, data)

	if not format_strs[UPT_D71D] then
		format_strs[UPT_D71D]="Not defined :0x%x"
		field_strs[UPT_D71D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D71D]]
	fmt_str=func_name_array[UPT_D71D] .. format_strs[UPT_D71D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D7FD] = "tifs_aborted %d,crc_state %d,length_check %d,pdu_type %d"
field_strs[UPT_D7FD] = 4
func_name_array[UPT_D7FD] = ""

-- description function for UPT_D7FD	
function func_desc_UPT_D7FD(address, data)

	if not format_strs[UPT_D7FD] then
		format_strs[UPT_D7FD]="Not defined :0x%x"
		field_strs[UPT_D7FD]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7FD]]
	fmt_str=func_name_array[UPT_D7FD] .. format_strs[UPT_D7FD] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7C9] = "adv pka=0x%x"
field_strs[UPT_D7C9] = 1
func_name_array[UPT_D7C9] = ""

-- description function for UPT_D7C9	
function func_desc_UPT_D7C9(address, data)

	if not format_strs[UPT_D7C9] then
		format_strs[UPT_D7C9]="Not defined :0x%x"
		field_strs[UPT_D7C9]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7C9]]
	fmt_str=func_name_array[UPT_D7C9] .. format_strs[UPT_D7C9] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D7FC] = "trx ctrl end offset %d"
field_strs[UPT_D7FC] = 1
func_name_array[UPT_D7FC] = ""

-- description function for UPT_D7FC	
function func_desc_UPT_D7FC(address, data)

	if not format_strs[UPT_D7FC] then
		format_strs[UPT_D7FC]="Not defined :0x%x"
		field_strs[UPT_D7FC]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7FC]]
	fmt_str=func_name_array[UPT_D7FC] .. format_strs[UPT_D7FC] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7CA] = "adv no pkd=0x%x"
field_strs[UPT_D7CA] = 1
func_name_array[UPT_D7CA] = ""

-- description function for UPT_D7CA	
function func_desc_UPT_D7CA(address, data)

	if not format_strs[UPT_D7CA] then
		format_strs[UPT_D7CA]="Not defined :0x%x"
		field_strs[UPT_D7CA]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7CA]]
	fmt_str=func_name_array[UPT_D7CA] .. format_strs[UPT_D7CA] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7CB] = "adv resp pka=0x%x"
field_strs[UPT_D7CB] = 1
func_name_array[UPT_D7CB] = ""

-- description function for UPT_D7CB	
function func_desc_UPT_D7CB(address, data)

	if not format_strs[UPT_D7CB] then
		format_strs[UPT_D7CB]="Not defined :0x%x"
		field_strs[UPT_D7CB]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7CB]]
	fmt_str=func_name_array[UPT_D7CB] .. format_strs[UPT_D7CB] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D71C] = "check_ret=%x state=%x"
field_strs[UPT_D71C] = 2
func_name_array[UPT_D71C] = ""

-- description function for UPT_D71C	
function func_desc_UPT_D71C(address, data)

	if not format_strs[UPT_D71C] then
		format_strs[UPT_D71C]="Not defined :0x%x"
		field_strs[UPT_D71C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D71C]]
	fmt_str=func_name_array[UPT_D71C] .. format_strs[UPT_D71C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D710 is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/LE_AoD.o.i
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/LE_apcf_filter.o.i
format_strs[UPT_D734] = "le_apcf monitor:%x"
field_strs[UPT_D734] = 1
func_name_array[UPT_D734] = ""

-- description function for UPT_D734	
function func_desc_UPT_D734(address, data)

	if not format_strs[UPT_D734] then
		format_strs[UPT_D734]="Not defined :0x%x"
		field_strs[UPT_D734]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D734]]
	fmt_str=func_name_array[UPT_D734] .. format_strs[UPT_D734] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D737] = "le_apcf monitor:%x"
field_strs[UPT_D737] = 1
func_name_array[UPT_D737] = ""

-- description function for UPT_D737	
function func_desc_UPT_D737(address, data)

	if not format_strs[UPT_D737] then
		format_strs[UPT_D737]="Not defined :0x%x"
		field_strs[UPT_D737]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D737]]
	fmt_str=func_name_array[UPT_D737] .. format_strs[UPT_D737] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D738] = "le_apcf monitor:%x"
field_strs[UPT_D738] = 1
func_name_array[UPT_D738] = ""

-- description function for UPT_D738	
function func_desc_UPT_D738(address, data)

	if not format_strs[UPT_D738] then
		format_strs[UPT_D738]="Not defined :0x%x"
		field_strs[UPT_D738]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D738]]
	fmt_str=func_name_array[UPT_D738] .. format_strs[UPT_D738] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D736] = "le_apcf monitor:%x"
field_strs[UPT_D736] = 1
func_name_array[UPT_D736] = ""

-- description function for UPT_D736	
function func_desc_UPT_D736(address, data)

	if not format_strs[UPT_D736] then
		format_strs[UPT_D736]="Not defined :0x%x"
		field_strs[UPT_D736]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D736]]
	fmt_str=func_name_array[UPT_D736] .. format_strs[UPT_D736] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D735] = "le_apcf monitor:%x"
field_strs[UPT_D735] = 1
func_name_array[UPT_D735] = ""

-- description function for UPT_D735	
function func_desc_UPT_D735(address, data)

	if not format_strs[UPT_D735] then
		format_strs[UPT_D735]="Not defined :0x%x"
		field_strs[UPT_D735]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D735]]
	fmt_str=func_name_array[UPT_D735] .. format_strs[UPT_D735] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7DD] = "le_apcf macth:%x"
field_strs[UPT_D7DD] = 1
func_name_array[UPT_D7DD] = ""

-- description function for UPT_D7DD	
function func_desc_UPT_D7DD(address, data)

	if not format_strs[UPT_D7DD] then
		format_strs[UPT_D7DD]="Not defined :0x%x"
		field_strs[UPT_D7DD]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7DD]]
	fmt_str=func_name_array[UPT_D7DD] .. format_strs[UPT_D7DD] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D733] = "le_apcf monitor:%x"
field_strs[UPT_D733] = 1
func_name_array[UPT_D733] = ""

-- description function for UPT_D733	
function func_desc_UPT_D733(address, data)

	if not format_strs[UPT_D733] then
		format_strs[UPT_D733]="Not defined :0x%x"
		field_strs[UPT_D733]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D733]]
	fmt_str=func_name_array[UPT_D733] .. format_strs[UPT_D733] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D732] = "le_apcf monitor:%x"
field_strs[UPT_D732] = 1
func_name_array[UPT_D732] = ""

-- description function for UPT_D732	
function func_desc_UPT_D732(address, data)

	if not format_strs[UPT_D732] then
		format_strs[UPT_D732]="Not defined :0x%x"
		field_strs[UPT_D732]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D732]]
	fmt_str=func_name_array[UPT_D732] .. format_strs[UPT_D732] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/le_batch_scan.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/le_channel_selection2.o.i
format_strs[UPT_D791] = "malloc chnsel2 list index 0x%x"
field_strs[UPT_D791] = 1
func_name_array[UPT_D791] = ""

-- description function for UPT_D791	
function func_desc_UPT_D791(address, data)

	if not format_strs[UPT_D791] then
		format_strs[UPT_D791]="Not defined :0x%x"
		field_strs[UPT_D791]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D791]]
	fmt_str=func_name_array[UPT_D791] .. format_strs[UPT_D791] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D784] = "channel index 0x%x"
field_strs[UPT_D784] = 1
func_name_array[UPT_D784] = ""

-- description function for UPT_D784	
function func_desc_UPT_D784(address, data)

	if not format_strs[UPT_D784] then
		format_strs[UPT_D784]="Not defined :0x%x"
		field_strs[UPT_D784]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D784]]
	fmt_str=func_name_array[UPT_D784] .. format_strs[UPT_D784] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/LE_config.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/LE_connection.o.i
format_strs[UPT_D7A0] = " %x"
field_strs[UPT_D7A0] = 1
func_name_array[UPT_D7A0] = ""

-- description function for UPT_D7A0	
function func_desc_UPT_D7A0(address, data)

	if not format_strs[UPT_D7A0] then
		format_strs[UPT_D7A0]="Not defined :0x%x"
		field_strs[UPT_D7A0]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7A0]]
	fmt_str=func_name_array[UPT_D7A0] .. format_strs[UPT_D7A0] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7A1] = "link_id =0x%x"
field_strs[UPT_D7A1] = 1
func_name_array[UPT_D7A1] = ""

-- description function for UPT_D7A1	
function func_desc_UPT_D7A1(address, data)

	if not format_strs[UPT_D7A1] then
		format_strs[UPT_D7A1]="Not defined :0x%x"
		field_strs[UPT_D7A1]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7A1]]
	fmt_str=func_name_array[UPT_D7A1] .. format_strs[UPT_D7A1] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7A2] = "back_interval_cunt =0x%x"
field_strs[UPT_D7A2] = 1
func_name_array[UPT_D7A2] = ""

-- description function for UPT_D7A2	
function func_desc_UPT_D7A2(address, data)

	if not format_strs[UPT_D7A2] then
		format_strs[UPT_D7A2]="Not defined :0x%x"
		field_strs[UPT_D7A2]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7A2]]
	fmt_str=func_name_array[UPT_D7A2] .. format_strs[UPT_D7A2] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7A3] = "connection_event_counter =0x%x"
field_strs[UPT_D7A3] = 1
func_name_array[UPT_D7A3] = ""

-- description function for UPT_D7A3	
function func_desc_UPT_D7A3(address, data)

	if not format_strs[UPT_D7A3] then
		format_strs[UPT_D7A3]="Not defined :0x%x"
		field_strs[UPT_D7A3]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7A3]]
	fmt_str=func_name_array[UPT_D7A3] .. format_strs[UPT_D7A3] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7A4] = "connection_event_counter =0x%x"
field_strs[UPT_D7A4] = 1
func_name_array[UPT_D7A4] = ""

-- description function for UPT_D7A4	
function func_desc_UPT_D7A4(address, data)

	if not format_strs[UPT_D7A4] then
		format_strs[UPT_D7A4]="Not defined :0x%x"
		field_strs[UPT_D7A4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7A4]]
	fmt_str=func_name_array[UPT_D7A4] .. format_strs[UPT_D7A4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D740] = "event_counter=%x"
field_strs[UPT_D740] = 1
func_name_array[UPT_D740] = ""

-- description function for UPT_D740	
function func_desc_UPT_D740(address, data)

	if not format_strs[UPT_D740] then
		format_strs[UPT_D740]="Not defined :0x%x"
		field_strs[UPT_D740]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D740]]
	fmt_str=func_name_array[UPT_D740] .. format_strs[UPT_D740] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D741] = "LE_Links=%x"
field_strs[UPT_D741] = 1
func_name_array[UPT_D741] = ""

-- description function for UPT_D741	
function func_desc_UPT_D741(address, data)

	if not format_strs[UPT_D741] then
		format_strs[UPT_D741]="Not defined :0x%x"
		field_strs[UPT_D741]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D741]]
	fmt_str=func_name_array[UPT_D741] .. format_strs[UPT_D741] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D7C0] = "p_connection->rpa_list_index=%d"
field_strs[UPT_D7C0] = 1
func_name_array[UPT_D7C0] = ""

-- description function for UPT_D7C0	
function func_desc_UPT_D7C0(address, data)

	if not format_strs[UPT_D7C0] then
		format_strs[UPT_D7C0]="Not defined :0x%x"
		field_strs[UPT_D7C0]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7C0]]
	fmt_str=func_name_array[UPT_D7C0] .. format_strs[UPT_D7C0] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D748] = "connection_scan interval=0x%x"
field_strs[UPT_D748] = 1
func_name_array[UPT_D748] = ""

-- description function for UPT_D748	
function func_desc_UPT_D748(address, data)

	if not format_strs[UPT_D748] then
		format_strs[UPT_D748]="Not defined :0x%x"
		field_strs[UPT_D748]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D748]]
	fmt_str=func_name_array[UPT_D748] .. format_strs[UPT_D748] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D76F] = "window=0x%x"
field_strs[UPT_D76F] = 1
func_name_array[UPT_D76F] = ""

-- description function for UPT_D76F	
function func_desc_UPT_D76F(address, data)

	if not format_strs[UPT_D76F] then
		format_strs[UPT_D76F]="Not defined :0x%x"
		field_strs[UPT_D76F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D76F]]
	fmt_str=func_name_array[UPT_D76F] .. format_strs[UPT_D76F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D770] = "window_offset=0x%x"
field_strs[UPT_D770] = 1
func_name_array[UPT_D770] = ""

-- description function for UPT_D770	
function func_desc_UPT_D770(address, data)

	if not format_strs[UPT_D770] then
		format_strs[UPT_D770]="Not defined :0x%x"
		field_strs[UPT_D770]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D770]]
	fmt_str=func_name_array[UPT_D770] .. format_strs[UPT_D770] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D746] = "g_Initiating_Config.initiator_link_id=%x"
field_strs[UPT_D746] = 1
func_name_array[UPT_D746] = ""

-- description function for UPT_D746	
function func_desc_UPT_D746(address, data)

	if not format_strs[UPT_D746] then
		format_strs[UPT_D746]="Not defined :0x%x"
		field_strs[UPT_D746]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D746]]
	fmt_str=func_name_array[UPT_D746] .. format_strs[UPT_D746] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D747] = "ll_feature_rep_pending=0x%x"
field_strs[UPT_D747] = 1
func_name_array[UPT_D747] = ""

-- description function for UPT_D747	
function func_desc_UPT_D747(address, data)

	if not format_strs[UPT_D747] then
		format_strs[UPT_D747]="Not defined :0x%x"
		field_strs[UPT_D747]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D747]]
	fmt_str=func_name_array[UPT_D747] .. format_strs[UPT_D747] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D756] = "connInterval_new=0x%x, transmit_window_offset_new=0x%x"
field_strs[UPT_D756] = 2
func_name_array[UPT_D756] = ""

-- description function for UPT_D756	
function func_desc_UPT_D756(address, data)

	if not format_strs[UPT_D756] then
		format_strs[UPT_D756]="Not defined :0x%x"
		field_strs[UPT_D756]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D756]]
	fmt_str=func_name_array[UPT_D756] .. format_strs[UPT_D756] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D779] = "LE_LL_OUT_Q: BYTE[0]=0x%x,BYTE[1]=0x%x"
field_strs[UPT_D779] = 2
func_name_array[UPT_D779] = ""

-- description function for UPT_D779	
function func_desc_UPT_D779(address, data)

	if not format_strs[UPT_D779] then
		format_strs[UPT_D779]="Not defined :0x%x"
		field_strs[UPT_D779]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D779]]
	fmt_str=func_name_array[UPT_D779] .. format_strs[UPT_D779] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D77B is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D767] = "delta_events =0x%x ,ww slots is =0x%x,"
field_strs[UPT_D767] = 2
func_name_array[UPT_D767] = ""

-- description function for UPT_D767	
function func_desc_UPT_D767(address, data)

	if not format_strs[UPT_D767] then
		format_strs[UPT_D767]="Not defined :0x%x"
		field_strs[UPT_D767]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D767]]
	fmt_str=func_name_array[UPT_D767] .. format_strs[UPT_D767] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D74F] = "connection_update_instant=%x"
field_strs[UPT_D74F] = 1
func_name_array[UPT_D74F] = ""

-- description function for UPT_D74F	
function func_desc_UPT_D74F(address, data)

	if not format_strs[UPT_D74F] then
		format_strs[UPT_D74F]="Not defined :0x%x"
		field_strs[UPT_D74F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D74F]]
	fmt_str=func_name_array[UPT_D74F] .. format_strs[UPT_D74F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D76B] = "opcode_pending=0x%x"
field_strs[UPT_D76B] = 1
func_name_array[UPT_D76B] = ""

-- description function for UPT_D76B	
function func_desc_UPT_D76B(address, data)

	if not format_strs[UPT_D76B] then
		format_strs[UPT_D76B]="Not defined :0x%x"
		field_strs[UPT_D76B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D76B]]
	fmt_str=func_name_array[UPT_D76B] .. format_strs[UPT_D76B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D77F] = "margin=%d"
field_strs[UPT_D77F] = 1
func_name_array[UPT_D77F] = ""

-- description function for UPT_D77F	
function func_desc_UPT_D77F(address, data)

	if not format_strs[UPT_D77F] then
		format_strs[UPT_D77F]="Not defined :0x%x"
		field_strs[UPT_D77F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D77F]]
	fmt_str=func_name_array[UPT_D77F] .. format_strs[UPT_D77F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D750] = "length=%x  NextExpSeqNum=%x TxSeqNum=%x message_type=%x"
field_strs[UPT_D750] = 4
func_name_array[UPT_D750] = ""

-- description function for UPT_D750	
function func_desc_UPT_D750(address, data)

	if not format_strs[UPT_D750] then
		format_strs[UPT_D750]="Not defined :0x%x"
		field_strs[UPT_D750]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D750]]
	fmt_str=func_name_array[UPT_D750] .. format_strs[UPT_D750] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D74B] = "opcode_pending=0x%x"
field_strs[UPT_D74B] = 1
func_name_array[UPT_D74B] = ""

-- description function for UPT_D74B	
function func_desc_UPT_D74B(address, data)

	if not format_strs[UPT_D74B] then
		format_strs[UPT_D74B]="Not defined :0x%x"
		field_strs[UPT_D74B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D74B]]
	fmt_str=func_name_array[UPT_D74B] .. format_strs[UPT_D74B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D751] = "pdu_pending_type=0x%x pdu_pending_length=0x%x"
field_strs[UPT_D751] = 2
func_name_array[UPT_D751] = ""

-- description function for UPT_D751	
function func_desc_UPT_D751(address, data)

	if not format_strs[UPT_D751] then
		format_strs[UPT_D751]="Not defined :0x%x"
		field_strs[UPT_D751]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D751]]
	fmt_str=func_name_array[UPT_D751] .. format_strs[UPT_D751] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D74C] = "on_air_rx_pkt_count=0x%x"
field_strs[UPT_D74C] = 1
func_name_array[UPT_D74C] = ""

-- description function for UPT_D74C	
function func_desc_UPT_D74C(address, data)

	if not format_strs[UPT_D74C] then
		format_strs[UPT_D74C]="Not defined :0x%x"
		field_strs[UPT_D74C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D74C]]
	fmt_str=func_name_array[UPT_D74C] .. format_strs[UPT_D74C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D771] = "NextExpSeqNum=%x TxSeqNum=%x rx_nesn=%x rx_sn=%x"
field_strs[UPT_D771] = 4
func_name_array[UPT_D771] = ""

-- description function for UPT_D771	
function func_desc_UPT_D771(address, data)

	if not format_strs[UPT_D771] then
		format_strs[UPT_D771]="Not defined :0x%x"
		field_strs[UPT_D771]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D771]]
	fmt_str=func_name_array[UPT_D771] .. format_strs[UPT_D771] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D772] = "nesn!=TxSeqNum=%x rx_sn!=NextExpSeqNum=%x rx_md=%x MIC_status=%x"
field_strs[UPT_D772] = 4
func_name_array[UPT_D772] = ""

-- description function for UPT_D772	
function func_desc_UPT_D772(address, data)

	if not format_strs[UPT_D772] then
		format_strs[UPT_D772]="Not defined :0x%x"
		field_strs[UPT_D772]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D772]]
	fmt_str=func_name_array[UPT_D772] .. format_strs[UPT_D772] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D752] = "link_id=%x rx_llid=%x rx_length=%x crc_error=%x"
field_strs[UPT_D752] = 4
func_name_array[UPT_D752] = ""

-- description function for UPT_D752	
function func_desc_UPT_D752(address, data)

	if not format_strs[UPT_D752] then
		format_strs[UPT_D752]="Not defined :0x%x"
		field_strs[UPT_D752]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D752]]
	fmt_str=func_name_array[UPT_D752] .. format_strs[UPT_D752] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D77E] = "link_id=%x rx_llid=%x rx_length=%x crc_error=%x"
field_strs[UPT_D77E] = 4
func_name_array[UPT_D77E] = ""

-- description function for UPT_D77E	
function func_desc_UPT_D77E(address, data)

	if not format_strs[UPT_D77E] then
		format_strs[UPT_D77E]="Not defined :0x%x"
		field_strs[UPT_D77E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D77E]]
	fmt_str=func_name_array[UPT_D77E] .. format_strs[UPT_D77E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D773] = "NextExpSeqNum=%x TxSeqNum=%x rx_nesn=%x rx_sn=%x"
field_strs[UPT_D773] = 4
func_name_array[UPT_D773] = ""

-- description function for UPT_D773	
function func_desc_UPT_D773(address, data)

	if not format_strs[UPT_D773] then
		format_strs[UPT_D773]="Not defined :0x%x"
		field_strs[UPT_D773]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D773]]
	fmt_str=func_name_array[UPT_D773] .. format_strs[UPT_D773] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D774] = "nesn!=TxSeqNum=%x rx_sn!=NextExpSeqNum=%x rx_md=%x MIC_status=%x"
field_strs[UPT_D774] = 4
func_name_array[UPT_D774] = ""

-- description function for UPT_D774	
function func_desc_UPT_D774(address, data)

	if not format_strs[UPT_D774] then
		format_strs[UPT_D774]="Not defined :0x%x"
		field_strs[UPT_D774]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D774]]
	fmt_str=func_name_array[UPT_D774] .. format_strs[UPT_D774] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D76A] = "link_id=%x"
field_strs[UPT_D76A] = 1
func_name_array[UPT_D76A] = ""

-- description function for UPT_D76A	
function func_desc_UPT_D76A(address, data)

	if not format_strs[UPT_D76A] then
		format_strs[UPT_D76A]="Not defined :0x%x"
		field_strs[UPT_D76A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D76A]]
	fmt_str=func_name_array[UPT_D76A] .. format_strs[UPT_D76A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D753] = "initiator_retry_counter=%x"
field_strs[UPT_D753] = 1
func_name_array[UPT_D753] = ""

-- description function for UPT_D753	
function func_desc_UPT_D753(address, data)

	if not format_strs[UPT_D753] then
		format_strs[UPT_D753]="Not defined :0x%x"
		field_strs[UPT_D753]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D753]]
	fmt_str=func_name_array[UPT_D753] .. format_strs[UPT_D753] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D754] = "connection_event_counter=%x"
field_strs[UPT_D754] = 1
func_name_array[UPT_D754] = ""

-- description function for UPT_D754	
function func_desc_UPT_D754(address, data)

	if not format_strs[UPT_D754] then
		format_strs[UPT_D754]="Not defined :0x%x"
		field_strs[UPT_D754]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D754]]
	fmt_str=func_name_array[UPT_D754] .. format_strs[UPT_D754] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D755] = "transmit_window_offset=0x%x"
field_strs[UPT_D755] = 1
func_name_array[UPT_D755] = ""

-- description function for UPT_D755	
function func_desc_UPT_D755(address, data)

	if not format_strs[UPT_D755] then
		format_strs[UPT_D755]="Not defined :0x%x"
		field_strs[UPT_D755]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D755]]
	fmt_str=func_name_array[UPT_D755] .. format_strs[UPT_D755] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D76D] = "next_connect_event_start_time=%x"
field_strs[UPT_D76D] = 1
func_name_array[UPT_D76D] = ""

-- description function for UPT_D76D	
function func_desc_UPT_D76D(address, data)

	if not format_strs[UPT_D76D] then
		format_strs[UPT_D76D]="Not defined :0x%x"
		field_strs[UPT_D76D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D76D]]
	fmt_str=func_name_array[UPT_D76D] .. format_strs[UPT_D76D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D757] = "link_id=0x%x"
field_strs[UPT_D757] = 1
func_name_array[UPT_D757] = ""

-- description function for UPT_D757	
function func_desc_UPT_D757(address, data)

	if not format_strs[UPT_D757] then
		format_strs[UPT_D757]="Not defined :0x%x"
		field_strs[UPT_D757]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D757]]
	fmt_str=func_name_array[UPT_D757] .. format_strs[UPT_D757] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D775] = "clock=0x%x"
field_strs[UPT_D775] = 1
func_name_array[UPT_D775] = ""

-- description function for UPT_D775	
function func_desc_UPT_D775(address, data)

	if not format_strs[UPT_D775] then
		format_strs[UPT_D775]="Not defined :0x%x"
		field_strs[UPT_D775]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D775]]
	fmt_str=func_name_array[UPT_D775] .. format_strs[UPT_D775] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D776] = "offset=0x%x"
field_strs[UPT_D776] = 1
func_name_array[UPT_D776] = ""

-- description function for UPT_D776	
function func_desc_UPT_D776(address, data)

	if not format_strs[UPT_D776] then
		format_strs[UPT_D776]="Not defined :0x%x"
		field_strs[UPT_D776]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D776]]
	fmt_str=func_name_array[UPT_D776] .. format_strs[UPT_D776] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D758 is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D75A] = "on_air_rx_pkt_count=%x"
field_strs[UPT_D75A] = 1
func_name_array[UPT_D75A] = ""

-- description function for UPT_D75A	
function func_desc_UPT_D75A(address, data)

	if not format_strs[UPT_D75A] then
		format_strs[UPT_D75A]="Not defined :0x%x"
		field_strs[UPT_D75A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D75A]]
	fmt_str=func_name_array[UPT_D75A] .. format_strs[UPT_D75A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D75B] = "link_id=%x events_missed=%x"
field_strs[UPT_D75B] = 2
func_name_array[UPT_D75B] = ""

-- description function for UPT_D75B	
function func_desc_UPT_D75B(address, data)

	if not format_strs[UPT_D75B] then
		format_strs[UPT_D75B]="Not defined :0x%x"
		field_strs[UPT_D75B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D75B]]
	fmt_str=func_name_array[UPT_D75B] .. format_strs[UPT_D75B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/le_connection_evt.o.i
-- UPT_D75F is in dsp_description_fixed.lua, skip from here
-- UPT_D760 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D761] = "trx control state %d"
field_strs[UPT_D761] = 1
func_name_array[UPT_D761] = ""

-- description function for UPT_D761	
function func_desc_UPT_D761(address, data)

	if not format_strs[UPT_D761] then
		format_strs[UPT_D761]="Not defined :0x%x"
		field_strs[UPT_D761]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D761]]
	fmt_str=func_name_array[UPT_D761] .. format_strs[UPT_D761] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D762] = "error handling cur_clk %d, error type is %d"
field_strs[UPT_D762] = 2
func_name_array[UPT_D762] = ""

-- description function for UPT_D762	
function func_desc_UPT_D762(address, data)

	if not format_strs[UPT_D762] then
		format_strs[UPT_D762]="Not defined :0x%x"
		field_strs[UPT_D762]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D762]]
	fmt_str=func_name_array[UPT_D762] .. format_strs[UPT_D762] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D763] = "LE_current_channel =%d, link_id =%d"
field_strs[UPT_D763] = 2
func_name_array[UPT_D763] = ""

-- description function for UPT_D763	
function func_desc_UPT_D763(address, data)

	if not format_strs[UPT_D763] then
		format_strs[UPT_D763]="Not defined :0x%x"
		field_strs[UPT_D763]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D763]]
	fmt_str=func_name_array[UPT_D763] .. format_strs[UPT_D763] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7D4] = "connection tx phy = %d,tx coding %d"
field_strs[UPT_D7D4] = 2
func_name_array[UPT_D7D4] = ""

-- description function for UPT_D7D4	
function func_desc_UPT_D7D4(address, data)

	if not format_strs[UPT_D7D4] then
		format_strs[UPT_D7D4]="Not defined :0x%x"
		field_strs[UPT_D7D4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7D4]]
	fmt_str=func_name_array[UPT_D7D4] .. format_strs[UPT_D7D4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D72F] = "Native_Clk 0x%x"
field_strs[UPT_D72F] = 1
func_name_array[UPT_D72F] = ""

-- description function for UPT_D72F	
function func_desc_UPT_D72F(address, data)

	if not format_strs[UPT_D72F] then
		format_strs[UPT_D72F]="Not defined :0x%x"
		field_strs[UPT_D72F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D72F]]
	fmt_str=func_name_array[UPT_D72F] .. format_strs[UPT_D72F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7C1] = "master no pkd=0x%x"
field_strs[UPT_D7C1] = 1
func_name_array[UPT_D7C1] = ""

-- description function for UPT_D7C1	
function func_desc_UPT_D7C1(address, data)

	if not format_strs[UPT_D7C1] then
		format_strs[UPT_D7C1]="Not defined :0x%x"
		field_strs[UPT_D7C1]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7C1]]
	fmt_str=func_name_array[UPT_D7C1] .. format_strs[UPT_D7C1] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7CC] = "reg dump %x"
field_strs[UPT_D7CC] = 1
func_name_array[UPT_D7CC] = ""

-- description function for UPT_D7CC	
function func_desc_UPT_D7CC(address, data)

	if not format_strs[UPT_D7CC] then
		format_strs[UPT_D7CC]="Not defined :0x%x"
		field_strs[UPT_D7CC]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7CC]]
	fmt_str=func_name_array[UPT_D7CC] .. format_strs[UPT_D7CC] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7C2] = "master pka=0x%x"
field_strs[UPT_D7C2] = 1
func_name_array[UPT_D7C2] = ""

-- description function for UPT_D7C2	
function func_desc_UPT_D7C2(address, data)

	if not format_strs[UPT_D7C2] then
		format_strs[UPT_D7C2]="Not defined :0x%x"
		field_strs[UPT_D7C2]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7C2]]
	fmt_str=func_name_array[UPT_D7C2] .. format_strs[UPT_D7C2] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7C3] = "master no pkd=0x%x"
field_strs[UPT_D7C3] = 1
func_name_array[UPT_D7C3] = ""

-- description function for UPT_D7C3	
function func_desc_UPT_D7C3(address, data)

	if not format_strs[UPT_D7C3] then
		format_strs[UPT_D7C3]="Not defined :0x%x"
		field_strs[UPT_D7C3]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7C3]]
	fmt_str=func_name_array[UPT_D7C3] .. format_strs[UPT_D7C3] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D766] = "trx ref time %x clock"
field_strs[UPT_D766] = 1
func_name_array[UPT_D766] = ""

-- description function for UPT_D766	
function func_desc_UPT_D766(address, data)

	if not format_strs[UPT_D766] then
		format_strs[UPT_D766]="Not defined :0x%x"
		field_strs[UPT_D766]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D766]]
	fmt_str=func_name_array[UPT_D766] .. format_strs[UPT_D766] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D765] = "na clk:%d"
field_strs[UPT_D765] = 1
func_name_array[UPT_D765] = ""

-- description function for UPT_D765	
function func_desc_UPT_D765(address, data)

	if not format_strs[UPT_D765] then
		format_strs[UPT_D765]="Not defined :0x%x"
		field_strs[UPT_D765]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D765]]
	fmt_str=func_name_array[UPT_D765] .. format_strs[UPT_D765] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D77C] = "na bit counter:%d"
field_strs[UPT_D77C] = 1
func_name_array[UPT_D77C] = ""

-- description function for UPT_D77C	
function func_desc_UPT_D77C(address, data)

	if not format_strs[UPT_D77C] then
		format_strs[UPT_D77C]="Not defined :0x%x"
		field_strs[UPT_D77C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D77C]]
	fmt_str=func_name_array[UPT_D77C] .. format_strs[UPT_D77C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D764] = "hw error happen:%d"
field_strs[UPT_D764] = 1
func_name_array[UPT_D764] = ""

-- description function for UPT_D764	
function func_desc_UPT_D764(address, data)

	if not format_strs[UPT_D764] then
		format_strs[UPT_D764]="Not defined :0x%x"
		field_strs[UPT_D764]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D764]]
	fmt_str=func_name_array[UPT_D764] .. format_strs[UPT_D764] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D77D] = "intral slot offset:%d"
field_strs[UPT_D77D] = 1
func_name_array[UPT_D77D] = ""

-- description function for UPT_D77D	
function func_desc_UPT_D77D(address, data)

	if not format_strs[UPT_D77D] then
		format_strs[UPT_D77D]="Not defined :0x%x"
		field_strs[UPT_D77D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D77D]]
	fmt_str=func_name_array[UPT_D77D] .. format_strs[UPT_D77D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7C4] = "slave no pkd=0x%x"
field_strs[UPT_D7C4] = 1
func_name_array[UPT_D7C4] = ""

-- description function for UPT_D7C4	
function func_desc_UPT_D7C4(address, data)

	if not format_strs[UPT_D7C4] then
		format_strs[UPT_D7C4]="Not defined :0x%x"
		field_strs[UPT_D7C4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7C4]]
	fmt_str=func_name_array[UPT_D7C4] .. format_strs[UPT_D7C4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7C5] = "slave pka=0x%x"
field_strs[UPT_D7C5] = 1
func_name_array[UPT_D7C5] = ""

-- description function for UPT_D7C5	
function func_desc_UPT_D7C5(address, data)

	if not format_strs[UPT_D7C5] then
		format_strs[UPT_D7C5]="Not defined :0x%x"
		field_strs[UPT_D7C5]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7C5]]
	fmt_str=func_name_array[UPT_D7C5] .. format_strs[UPT_D7C5] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7C6] = "slave no pkd=0x%x"
field_strs[UPT_D7C6] = 1
func_name_array[UPT_D7C6] = ""

-- description function for UPT_D7C6	
function func_desc_UPT_D7C6(address, data)

	if not format_strs[UPT_D7C6] then
		format_strs[UPT_D7C6]="Not defined :0x%x"
		field_strs[UPT_D7C6]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7C6]]
	fmt_str=func_name_array[UPT_D7C6] .. format_strs[UPT_D7C6] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7AF] = "nak_rate=%x, event_counter=%x"
field_strs[UPT_D7AF] = 2
func_name_array[UPT_D7AF] = ""

-- description function for UPT_D7AF	
function func_desc_UPT_D7AF(address, data)

	if not format_strs[UPT_D7AF] then
		format_strs[UPT_D7AF]="Not defined :0x%x"
		field_strs[UPT_D7AF]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7AF]]
	fmt_str=func_name_array[UPT_D7AF] .. format_strs[UPT_D7AF] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D75C] = "link_id=%x"
field_strs[UPT_D75C] = 1
func_name_array[UPT_D75C] = ""

-- description function for UPT_D75C	
function func_desc_UPT_D75C(address, data)

	if not format_strs[UPT_D75C] then
		format_strs[UPT_D75C]="Not defined :0x%x"
		field_strs[UPT_D75C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D75C]]
	fmt_str=func_name_array[UPT_D75C] .. format_strs[UPT_D75C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/LE_Data_Length_Extension.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/le_debuginfo_report.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/LE_Extension_Advertise.o.i
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D780] = "tx current ext adv type 0x%x"
field_strs[UPT_D780] = 1
func_name_array[UPT_D780] = ""

-- description function for UPT_D780	
function func_desc_UPT_D780(address, data)

	if not format_strs[UPT_D780] then
		format_strs[UPT_D780]="Not defined :0x%x"
		field_strs[UPT_D780]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D780]]
	fmt_str=func_name_array[UPT_D780] .. format_strs[UPT_D780] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D781] = "tx encode payload length 0x%x"
field_strs[UPT_D781] = 1
func_name_array[UPT_D781] = ""

-- description function for UPT_D781	
function func_desc_UPT_D781(address, data)

	if not format_strs[UPT_D781] then
		format_strs[UPT_D781]="Not defined :0x%x"
		field_strs[UPT_D781]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D781]]
	fmt_str=func_name_array[UPT_D781] .. format_strs[UPT_D781] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/LE_Extension_Common.o.i
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/LE_Extension_Scan.o.i
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D792] = "RF_Rx_Compensation 0x%x"
field_strs[UPT_D792] = 1
func_name_array[UPT_D792] = ""

-- description function for UPT_D792	
function func_desc_UPT_D792(address, data)

	if not format_strs[UPT_D792] then
		format_strs[UPT_D792]="Not defined :0x%x"
		field_strs[UPT_D792]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D792]]
	fmt_str=func_name_array[UPT_D792] .. format_strs[UPT_D792] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D788] = "malloc pdu index 0x%x"
field_strs[UPT_D788] = 1
func_name_array[UPT_D788] = ""

-- description function for UPT_D788	
function func_desc_UPT_D788(address, data)

	if not format_strs[UPT_D788] then
		format_strs[UPT_D788]="Not defined :0x%x"
		field_strs[UPT_D788]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D788]]
	fmt_str=func_name_array[UPT_D788] .. format_strs[UPT_D788] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D786] = "num_in_list 0x%x, pdu_index 0x%x"
field_strs[UPT_D786] = 2
func_name_array[UPT_D786] = ""

-- description function for UPT_D786	
function func_desc_UPT_D786(address, data)

	if not format_strs[UPT_D786] then
		format_strs[UPT_D786]="Not defined :0x%x"
		field_strs[UPT_D786]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D786]]
	fmt_str=func_name_array[UPT_D786] .. format_strs[UPT_D786] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D787] = "num_in_list 0x%x, pdu_index 0x%x"
field_strs[UPT_D787] = 2
func_name_array[UPT_D787] = ""

-- description function for UPT_D787	
function func_desc_UPT_D787(address, data)

	if not format_strs[UPT_D787] then
		format_strs[UPT_D787]="Not defined :0x%x"
		field_strs[UPT_D787]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D787]]
	fmt_str=func_name_array[UPT_D787] .. format_strs[UPT_D787] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D785] = "pdu index 0x%x"
field_strs[UPT_D785] = 1
func_name_array[UPT_D785] = ""

-- description function for UPT_D785	
function func_desc_UPT_D785(address, data)

	if not format_strs[UPT_D785] then
		format_strs[UPT_D785]="Not defined :0x%x"
		field_strs[UPT_D785]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D785]]
	fmt_str=func_name_array[UPT_D785] .. format_strs[UPT_D785] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D782] = "advmode 0x%x, ext_header_flag 0x%x"
field_strs[UPT_D782] = 2
func_name_array[UPT_D782] = ""

-- description function for UPT_D782	
function func_desc_UPT_D782(address, data)

	if not format_strs[UPT_D782] then
		format_strs[UPT_D782]="Not defined :0x%x"
		field_strs[UPT_D782]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D782]]
	fmt_str=func_name_array[UPT_D782] .. format_strs[UPT_D782] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D783] = "rx receive ext adv type 0x%x, receive ext adv data length 0x%x"
field_strs[UPT_D783] = 2
func_name_array[UPT_D783] = ""

-- description function for UPT_D783	
function func_desc_UPT_D783(address, data)

	if not format_strs[UPT_D783] then
		format_strs[UPT_D783]="Not defined :0x%x"
		field_strs[UPT_D783]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D783]]
	fmt_str=func_name_array[UPT_D783] .. format_strs[UPT_D783] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D79F] = "ble trace 0x%x"
field_strs[UPT_D79F] = 1
func_name_array[UPT_D79F] = ""

-- description function for UPT_D79F	
function func_desc_UPT_D79F(address, data)

	if not format_strs[UPT_D79F] then
		format_strs[UPT_D79F]="Not defined :0x%x"
		field_strs[UPT_D79F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D79F]]
	fmt_str=func_name_array[UPT_D79F] .. format_strs[UPT_D79F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/LE_frequency.o.i
format_strs[UPT_D74D] = "channel_map_update_instant=0x%x"
field_strs[UPT_D74D] = 1
func_name_array[UPT_D74D] = ""

-- description function for UPT_D74D	
function func_desc_UPT_D74D(address, data)

	if not format_strs[UPT_D74D] then
		format_strs[UPT_D74D]="Not defined :0x%x"
		field_strs[UPT_D74D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D74D]]
	fmt_str=func_name_array[UPT_D74D] .. format_strs[UPT_D74D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/LE_link_layer.o.i
-- UPT_D704 is in dsp_description_fixed.lua, skip from here
-- UPT_D704 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D7D1] = "margin=%d"
field_strs[UPT_D7D1] = 1
func_name_array[UPT_D7D1] = ""

-- description function for UPT_D7D1	
function func_desc_UPT_D7D1(address, data)

	if not format_strs[UPT_D7D1] then
		format_strs[UPT_D7D1]="Not defined :0x%x"
		field_strs[UPT_D7D1]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7D1]]
	fmt_str=func_name_array[UPT_D7D1] .. format_strs[UPT_D7D1] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D704 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D7D2] = "margin=%d"
field_strs[UPT_D7D2] = 1
func_name_array[UPT_D7D2] = ""

-- description function for UPT_D7D2	
function func_desc_UPT_D7D2(address, data)

	if not format_strs[UPT_D7D2] then
		format_strs[UPT_D7D2]="Not defined :0x%x"
		field_strs[UPT_D7D2]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7D2]]
	fmt_str=func_name_array[UPT_D7D2] .. format_strs[UPT_D7D2] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D704 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D745] = "hop_increment=%x"
field_strs[UPT_D745] = 1
func_name_array[UPT_D745] = ""

-- description function for UPT_D745	
function func_desc_UPT_D745(address, data)

	if not format_strs[UPT_D745] then
		format_strs[UPT_D745]="Not defined :0x%x"
		field_strs[UPT_D745]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D745]]
	fmt_str=func_name_array[UPT_D745] .. format_strs[UPT_D745] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7D3] = "margin=%d"
field_strs[UPT_D7D3] = 1
func_name_array[UPT_D7D3] = ""

-- description function for UPT_D7D3	
function func_desc_UPT_D7D3(address, data)

	if not format_strs[UPT_D7D3] then
		format_strs[UPT_D7D3]="Not defined :0x%x"
		field_strs[UPT_D7D3]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7D3]]
	fmt_str=func_name_array[UPT_D7D3] .. format_strs[UPT_D7D3] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D76C] = "transmit_window_offset =%x"
field_strs[UPT_D76C] = 1
func_name_array[UPT_D76C] = ""

-- description function for UPT_D76C	
function func_desc_UPT_D76C(address, data)

	if not format_strs[UPT_D76C] then
		format_strs[UPT_D76C]="Not defined :0x%x"
		field_strs[UPT_D76C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D76C]]
	fmt_str=func_name_array[UPT_D76C] .. format_strs[UPT_D76C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D704 is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D73B] = "not found at relove list,add to record,last_local_rpa_resolved_state %d,last_rpa_resolved_state %d"
field_strs[UPT_D73B] = 2
func_name_array[UPT_D73B] = ""

-- description function for UPT_D73B	
function func_desc_UPT_D73B(address, data)

	if not format_strs[UPT_D73B] then
		format_strs[UPT_D73B]="Not defined :0x%x"
		field_strs[UPT_D73B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D73B]]
	fmt_str=func_name_array[UPT_D73B] .. format_strs[UPT_D73B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D73A] = "find local at resolve list,localindex %d,peerindex %d"
field_strs[UPT_D73A] = 2
func_name_array[UPT_D73A] = ""

-- description function for UPT_D73A	
function func_desc_UPT_D73A(address, data)

	if not format_strs[UPT_D73A] then
		format_strs[UPT_D73A]="Not defined :0x%x"
		field_strs[UPT_D73A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D73A]]
	fmt_str=func_name_array[UPT_D73A] .. format_strs[UPT_D73A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D705 is in dsp_description_fixed.lua, skip from here
-- UPT_D77A is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D76E] = "connection_event_counter =%x connection_update_instant= %x"
field_strs[UPT_D76E] = 2
func_name_array[UPT_D76E] = ""

-- description function for UPT_D76E	
function func_desc_UPT_D76E(address, data)

	if not format_strs[UPT_D76E] then
		format_strs[UPT_D76E]="Not defined :0x%x"
		field_strs[UPT_D76E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D76E]]
	fmt_str=func_name_array[UPT_D76E] .. format_strs[UPT_D76E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D7AE] = "preferred_tx_phy =%x preferred_rx_phy= %x"
field_strs[UPT_D7AE] = 2
func_name_array[UPT_D7AE] = ""

-- description function for UPT_D7AE	
function func_desc_UPT_D7AE(address, data)

	if not format_strs[UPT_D7AE] then
		format_strs[UPT_D7AE]="Not defined :0x%x"
		field_strs[UPT_D7AE]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7AE]]
	fmt_str=func_name_array[UPT_D7AE] .. format_strs[UPT_D7AE] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7AA] = "remote_preferred_tx_phy =%x remote_preferred_rx_phy= %x used_tx_phy =%x next_used_rx_phy= %x"
field_strs[UPT_D7AA] = 4
func_name_array[UPT_D7AA] = ""

-- description function for UPT_D7AA	
function func_desc_UPT_D7AA(address, data)

	if not format_strs[UPT_D7AA] then
		format_strs[UPT_D7AA]="Not defined :0x%x"
		field_strs[UPT_D7AA]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7AA]]
	fmt_str=func_name_array[UPT_D7AA] .. format_strs[UPT_D7AA] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7AB] = "temp=%x link_id=%x used_tx_phy =%x used_rx_phy= %x"
field_strs[UPT_D7AB] = 4
func_name_array[UPT_D7AB] = ""

-- description function for UPT_D7AB	
function func_desc_UPT_D7AB(address, data)

	if not format_strs[UPT_D7AB] then
		format_strs[UPT_D7AB]="Not defined :0x%x"
		field_strs[UPT_D7AB]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7AB]]
	fmt_str=func_name_array[UPT_D7AB] .. format_strs[UPT_D7AB] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7AC] = "link_id=%x  remote_preferred_rx_phy=%x next_used_tx_phy=%x used_tx_phy=%x "
field_strs[UPT_D7AC] = 4
func_name_array[UPT_D7AC] = ""

-- description function for UPT_D7AC	
function func_desc_UPT_D7AC(address, data)

	if not format_strs[UPT_D7AC] then
		format_strs[UPT_D7AC]="Not defined :0x%x"
		field_strs[UPT_D7AC]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7AC]]
	fmt_str=func_name_array[UPT_D7AC] .. format_strs[UPT_D7AC] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D778] = "LE_LL_IN_Q: BYTE[0]=0x%x,BYTE[1]=0x%x"
field_strs[UPT_D778] = 2
func_name_array[UPT_D778] = ""

-- description function for UPT_D778	
function func_desc_UPT_D778(address, data)

	if not format_strs[UPT_D778] then
		format_strs[UPT_D778]="Not defined :0x%x"
		field_strs[UPT_D778]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D778]]
	fmt_str=func_name_array[UPT_D778] .. format_strs[UPT_D778] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D777] = "LE_LL_IN_Q dequeue base addr is 0x%x"
field_strs[UPT_D777] = 1
func_name_array[UPT_D777] = ""

-- description function for UPT_D777	
function func_desc_UPT_D777(address, data)

	if not format_strs[UPT_D777] then
		format_strs[UPT_D777]="Not defined :0x%x"
		field_strs[UPT_D777]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D777]]
	fmt_str=func_name_array[UPT_D777] .. format_strs[UPT_D777] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D742] = "need_cache 0x%x"
field_strs[UPT_D742] = 1
func_name_array[UPT_D742] = ""

-- description function for UPT_D742	
function func_desc_UPT_D742(address, data)

	if not format_strs[UPT_D742] then
		format_strs[UPT_D742]="Not defined :0x%x"
		field_strs[UPT_D742]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D742]]
	fmt_str=func_name_array[UPT_D742] .. format_strs[UPT_D742] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D743] = "opcode 0x%x"
field_strs[UPT_D743] = 1
func_name_array[UPT_D743] = ""

-- description function for UPT_D743	
function func_desc_UPT_D743(address, data)

	if not format_strs[UPT_D743] then
		format_strs[UPT_D743]="Not defined :0x%x"
		field_strs[UPT_D743]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D743]]
	fmt_str=func_name_array[UPT_D743] .. format_strs[UPT_D743] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D759] = "le_ll_hci_command_cache_process 0x%x"
field_strs[UPT_D759] = 1
func_name_array[UPT_D759] = ""

-- description function for UPT_D759	
function func_desc_UPT_D759(address, data)

	if not format_strs[UPT_D759] then
		format_strs[UPT_D759]="Not defined :0x%x"
		field_strs[UPT_D759]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D759]]
	fmt_str=func_name_array[UPT_D759] .. format_strs[UPT_D759] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/LE_multi_advertise.o.i
format_strs[UPT_D706] = "LEadv_Set_Multi_Advertise_Enable,multi instance =%d"
field_strs[UPT_D706] = 1
func_name_array[UPT_D706] = ""

-- description function for UPT_D706	
function func_desc_UPT_D706(address, data)

	if not format_strs[UPT_D706] then
		format_strs[UPT_D706]="Not defined :0x%x"
		field_strs[UPT_D706]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D706]]
	fmt_str=func_name_array[UPT_D706] .. format_strs[UPT_D706] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D70B] = "LEadv_Find_Next_Multi_Adv_ToActive,adv_toactive_index:id=%d"
field_strs[UPT_D70B] = 1
func_name_array[UPT_D70B] = ""

-- description function for UPT_D70B	
function func_desc_UPT_D70B(address, data)

	if not format_strs[UPT_D70B] then
		format_strs[UPT_D70B]="Not defined :0x%x"
		field_strs[UPT_D70B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D70B]]
	fmt_str=func_name_array[UPT_D70B] .. format_strs[UPT_D70B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/le_rpa_filter.o.i
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D73C] = "error last_rpa_resolved_state %d"
field_strs[UPT_D73C] = 1
func_name_array[UPT_D73C] = ""

-- description function for UPT_D73C	
function func_desc_UPT_D73C(address, data)

	if not format_strs[UPT_D73C] then
		format_strs[UPT_D73C]="Not defined :0x%x"
		field_strs[UPT_D73C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D73C]]
	fmt_str=func_name_array[UPT_D73C] .. format_strs[UPT_D73C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D73F] = "resolving index %d"
field_strs[UPT_D73F] = 1
func_name_array[UPT_D73F] = ""

-- description function for UPT_D73F	
function func_desc_UPT_D73F(address, data)

	if not format_strs[UPT_D73F] then
		format_strs[UPT_D73F]="Not defined :0x%x"
		field_strs[UPT_D73F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D73F]]
	fmt_str=func_name_array[UPT_D73F] .. format_strs[UPT_D73F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D73D] = "adva not found pud[0] %d,pud[1] %d"
field_strs[UPT_D73D] = 2
func_name_array[UPT_D73D] = ""

-- description function for UPT_D73D	
function func_desc_UPT_D73D(address, data)

	if not format_strs[UPT_D73D] then
		format_strs[UPT_D73D]="Not defined :0x%x"
		field_strs[UPT_D73D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D73D]]
	fmt_str=func_name_array[UPT_D73D] .. format_strs[UPT_D73D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D73E] = "adva in reslove list,index %d"
field_strs[UPT_D73E] = 1
func_name_array[UPT_D73E] = ""

-- description function for UPT_D73E	
function func_desc_UPT_D73E(address, data)

	if not format_strs[UPT_D73E] then
		format_strs[UPT_D73E]="Not defined :0x%x"
		field_strs[UPT_D73E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D73E]]
	fmt_str=func_name_array[UPT_D73E] .. format_strs[UPT_D73E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D739] = "adva in record,first relove here rcv_adva_index %d,last_rpa_resolved_state %d"
field_strs[UPT_D739] = 2
func_name_array[UPT_D739] = ""

-- description function for UPT_D739	
function func_desc_UPT_D739(address, data)

	if not format_strs[UPT_D739] then
		format_strs[UPT_D739]="Not defined :0x%x"
		field_strs[UPT_D739]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D739]]
	fmt_str=func_name_array[UPT_D739] .. format_strs[UPT_D739] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/LE_scan.o.i
format_strs[UPT_D720] = "current frame %d"
field_strs[UPT_D720] = 1
func_name_array[UPT_D720] = ""

-- description function for UPT_D720	
function func_desc_UPT_D720(address, data)

	if not format_strs[UPT_D720] then
		format_strs[UPT_D720]="Not defined :0x%x"
		field_strs[UPT_D720]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D720]]
	fmt_str=func_name_array[UPT_D720] .. format_strs[UPT_D720] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D721] = "pt_next_timeout.clock %d"
field_strs[UPT_D721] = 1
func_name_array[UPT_D721] = ""

-- description function for UPT_D721	
function func_desc_UPT_D721(address, data)

	if not format_strs[UPT_D721] then
		format_strs[UPT_D721]="Not defined :0x%x"
		field_strs[UPT_D721]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D721]]
	fmt_str=func_name_array[UPT_D721] .. format_strs[UPT_D721] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D722] = "t_next_timeout.offset %d"
field_strs[UPT_D722] = 1
func_name_array[UPT_D722] = ""

-- description function for UPT_D722	
function func_desc_UPT_D722(address, data)

	if not format_strs[UPT_D722] then
		format_strs[UPT_D722]="Not defined :0x%x"
		field_strs[UPT_D722]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D722]]
	fmt_str=func_name_array[UPT_D722] .. format_strs[UPT_D722] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D723] = "scan_interval %d"
field_strs[UPT_D723] = 1
func_name_array[UPT_D723] = ""

-- description function for UPT_D723	
function func_desc_UPT_D723(address, data)

	if not format_strs[UPT_D723] then
		format_strs[UPT_D723]="Not defined :0x%x"
		field_strs[UPT_D723]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D723]]
	fmt_str=func_name_array[UPT_D723] .. format_strs[UPT_D723] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D702] = "next_scan_timer %d"
field_strs[UPT_D702] = 1
func_name_array[UPT_D702] = ""

-- description function for UPT_D702	
function func_desc_UPT_D702(address, data)

	if not format_strs[UPT_D702] then
		format_strs[UPT_D702]="Not defined :0x%x"
		field_strs[UPT_D702]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D702]]
	fmt_str=func_name_array[UPT_D702] .. format_strs[UPT_D702] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D730] = "scan_enable %d"
field_strs[UPT_D730] = 1
func_name_array[UPT_D730] = ""

-- description function for UPT_D730	
function func_desc_UPT_D730(address, data)

	if not format_strs[UPT_D730] then
		format_strs[UPT_D730]="Not defined :0x%x"
		field_strs[UPT_D730]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D730]]
	fmt_str=func_name_array[UPT_D730] .. format_strs[UPT_D730] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D703] = "LE_scan index %d,scan_event_timeout_cnt %d"
field_strs[UPT_D703] = 2
func_name_array[UPT_D703] = ""

-- description function for UPT_D703	
function func_desc_UPT_D703(address, data)

	if not format_strs[UPT_D703] then
		format_strs[UPT_D703]="Not defined :0x%x"
		field_strs[UPT_D703]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D703]]
	fmt_str=func_name_array[UPT_D703] .. format_strs[UPT_D703] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D711] = "scan_toactive_index %d"
field_strs[UPT_D711] = 1
func_name_array[UPT_D711] = ""

-- description function for UPT_D711	
function func_desc_UPT_D711(address, data)

	if not format_strs[UPT_D711] then
		format_strs[UPT_D711]="Not defined :0x%x"
		field_strs[UPT_D711]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D711]]
	fmt_str=func_name_array[UPT_D711] .. format_strs[UPT_D711] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D70C] = "LEscan_event_start,le_scan state %d,scan_enable %d"
field_strs[UPT_D70C] = 2
func_name_array[UPT_D70C] = ""

-- description function for UPT_D70C	
function func_desc_UPT_D70C(address, data)

	if not format_strs[UPT_D70C] then
		format_strs[UPT_D70C]="Not defined :0x%x"
		field_strs[UPT_D70C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D70C]]
	fmt_str=func_name_array[UPT_D70C] .. format_strs[UPT_D70C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D70D] = "irq_type %d,status %d"
field_strs[UPT_D70D] = 2
func_name_array[UPT_D70D] = ""

-- description function for UPT_D70D	
function func_desc_UPT_D70D(address, data)

	if not format_strs[UPT_D70D] then
		format_strs[UPT_D70D]="Not defined :0x%x"
		field_strs[UPT_D70D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D70D]]
	fmt_str=func_name_array[UPT_D70D] .. format_strs[UPT_D70D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D724] = "g_active_scan_index %d,pause"
field_strs[UPT_D724] = 1
func_name_array[UPT_D724] = ""

-- description function for UPT_D724	
function func_desc_UPT_D724(address, data)

	if not format_strs[UPT_D724] then
		format_strs[UPT_D724]="Not defined :0x%x"
		field_strs[UPT_D724]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D724]]
	fmt_str=func_name_array[UPT_D724] .. format_strs[UPT_D724] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D70F] = "check_state %d"
field_strs[UPT_D70F] = 1
func_name_array[UPT_D70F] = ""

-- description function for UPT_D70F	
function func_desc_UPT_D70F(address, data)

	if not format_strs[UPT_D70F] then
		format_strs[UPT_D70F]="Not defined :0x%x"
		field_strs[UPT_D70F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D70F]]
	fmt_str=func_name_array[UPT_D70F] .. format_strs[UPT_D70F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D719] = "irq_type %d,p_le_scan->state %d"
field_strs[UPT_D719] = 2
func_name_array[UPT_D719] = ""

-- description function for UPT_D719	
function func_desc_UPT_D719(address, data)

	if not format_strs[UPT_D719] then
		format_strs[UPT_D719]="Not defined :0x%x"
		field_strs[UPT_D719]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D719]]
	fmt_str=func_name_array[UPT_D719] .. format_strs[UPT_D719] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D725] = "length=%d,filters_match %d"
field_strs[UPT_D725] = 2
func_name_array[UPT_D725] = ""

-- description function for UPT_D725	
function func_desc_UPT_D725(address, data)

	if not format_strs[UPT_D725] then
		format_strs[UPT_D725]="Not defined :0x%x"
		field_strs[UPT_D725]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D725]]
	fmt_str=func_name_array[UPT_D725] .. format_strs[UPT_D725] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D707] = "connect req pka bitcnt =%d"
field_strs[UPT_D707] = 1
func_name_array[UPT_D707] = ""

-- description function for UPT_D707	
function func_desc_UPT_D707(address, data)

	if not format_strs[UPT_D707] then
		format_strs[UPT_D707]="Not defined :0x%x"
		field_strs[UPT_D707]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D707]]
	fmt_str=func_name_array[UPT_D707] .. format_strs[UPT_D707] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D7C7] = "master no pkd=0x%x"
field_strs[UPT_D7C7] = 1
func_name_array[UPT_D7C7] = ""

-- description function for UPT_D7C7	
function func_desc_UPT_D7C7(address, data)

	if not format_strs[UPT_D7C7] then
		format_strs[UPT_D7C7]="Not defined :0x%x"
		field_strs[UPT_D7C7]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7C7]]
	fmt_str=func_name_array[UPT_D7C7] .. format_strs[UPT_D7C7] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D7C8] = "master no pkd=0x%x"
field_strs[UPT_D7C8] = 1
func_name_array[UPT_D7C8] = ""

-- description function for UPT_D7C8	
function func_desc_UPT_D7C8(address, data)

	if not format_strs[UPT_D7C8] then
		format_strs[UPT_D7C8]="Not defined :0x%x"
		field_strs[UPT_D7C8]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D7C8]]
	fmt_str=func_name_array[UPT_D7C8] .. format_strs[UPT_D7C8] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D700 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D701] = "LEscan_event_Handle,initiating_enable %d,p_le_scan->scan_enable %d"
field_strs[UPT_D701] = 2
func_name_array[UPT_D701] = ""

-- description function for UPT_D701	
function func_desc_UPT_D701(address, data)

	if not format_strs[UPT_D701] then
		format_strs[UPT_D701]="Not defined :0x%x"
		field_strs[UPT_D701]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D701]]
	fmt_str=func_name_array[UPT_D701] .. format_strs[UPT_D701] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D71E] = "scanning_channel_index %d"
field_strs[UPT_D71E] = 1
func_name_array[UPT_D71E] = ""

-- description function for UPT_D71E	
function func_desc_UPT_D71E(address, data)

	if not format_strs[UPT_D71E] then
		format_strs[UPT_D71E]="Not defined :0x%x"
		field_strs[UPT_D71E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D71E]]
	fmt_str=func_name_array[UPT_D71E] .. format_strs[UPT_D71E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D727] = "pt_next_timeout.clock %d"
field_strs[UPT_D727] = 1
func_name_array[UPT_D727] = ""

-- description function for UPT_D727	
function func_desc_UPT_D727(address, data)

	if not format_strs[UPT_D727] then
		format_strs[UPT_D727]="Not defined :0x%x"
		field_strs[UPT_D727]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D727]]
	fmt_str=func_name_array[UPT_D727] .. format_strs[UPT_D727] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D728] = "pt_next_timeout.offset %d"
field_strs[UPT_D728] = 1
func_name_array[UPT_D728] = ""

-- description function for UPT_D728	
function func_desc_UPT_D728(address, data)

	if not format_strs[UPT_D728] then
		format_strs[UPT_D728]="Not defined :0x%x"
		field_strs[UPT_D728]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D728]]
	fmt_str=func_name_array[UPT_D728] .. format_strs[UPT_D728] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D708] = "LE_init index %d,initiat_event_timeout_cnt %d"
field_strs[UPT_D708] = 2
func_name_array[UPT_D708] = ""

-- description function for UPT_D708	
function func_desc_UPT_D708(address, data)

	if not format_strs[UPT_D708] then
		format_strs[UPT_D708]="Not defined :0x%x"
		field_strs[UPT_D708]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D708]]
	fmt_str=func_name_array[UPT_D708] .. format_strs[UPT_D708] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D709] = "LE_init active_index %d"
field_strs[UPT_D709] = 1
func_name_array[UPT_D709] = ""

-- description function for UPT_D709	
function func_desc_UPT_D709(address, data)

	if not format_strs[UPT_D709] then
		format_strs[UPT_D709]="Not defined :0x%x"
		field_strs[UPT_D709]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D709]]
	fmt_str=func_name_array[UPT_D709] .. format_strs[UPT_D709] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D70A] = "le_scan state %d,initiating_enable %d"
field_strs[UPT_D70A] = 2
func_name_array[UPT_D70A] = ""

-- description function for UPT_D70A	
function func_desc_UPT_D70A(address, data)

	if not format_strs[UPT_D70A] then
		format_strs[UPT_D70A]="Not defined :0x%x"
		field_strs[UPT_D70A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D70A]]
	fmt_str=func_name_array[UPT_D70A] .. format_strs[UPT_D70A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/LE_security.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/le_test.o.i
format_strs[UPT_D919] = "rx_freq = 0x%x"
field_strs[UPT_D919] = 1
func_name_array[UPT_D919] = ""

-- description function for UPT_D919	
function func_desc_UPT_D919(address, data)

	if not format_strs[UPT_D919] then
		format_strs[UPT_D919]="Not defined :0x%x"
		field_strs[UPT_D919]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D919]]
	fmt_str=func_name_array[UPT_D919] .. format_strs[UPT_D919] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D91A] = "tx_freq = 0x%x"
field_strs[UPT_D91A] = 1
func_name_array[UPT_D91A] = ""

-- description function for UPT_D91A	
function func_desc_UPT_D91A(address, data)

	if not format_strs[UPT_D91A] then
		format_strs[UPT_D91A]="Not defined :0x%x"
		field_strs[UPT_D91A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D91A]]
	fmt_str=func_name_array[UPT_D91A] .. format_strs[UPT_D91A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DF07] = "LE_test.num_packets_received:%d"
field_strs[UPT_DF07] = 1
func_name_array[UPT_DF07] = ""

-- description function for UPT_DF07	
function func_desc_UPT_DF07(address, data)

	if not format_strs[UPT_DF07] then
		format_strs[UPT_DF07]="Not defined :0x%x"
		field_strs[UPT_DF07]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DF07]]
	fmt_str=func_name_array[UPT_DF07] .. format_strs[UPT_DF07] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D91B] = "LE_config.state:%d, LE_test.sub_state:%d"
field_strs[UPT_D91B] = 2
func_name_array[UPT_D91B] = ""

-- description function for UPT_D91B	
function func_desc_UPT_D91B(address, data)

	if not format_strs[UPT_D91B] then
		format_strs[UPT_D91B]="Not defined :0x%x"
		field_strs[UPT_D91B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D91B]]
	fmt_str=func_name_array[UPT_D91B] .. format_strs[UPT_D91B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D91C] = "IRQ_Type:%d"
field_strs[UPT_D91C] = 1
func_name_array[UPT_D91C] = ""

-- description function for UPT_D91C	
function func_desc_UPT_D91C(address, data)

	if not format_strs[UPT_D91C] then
		format_strs[UPT_D91C]="Not defined :0x%x"
		field_strs[UPT_D91C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D91C]]
	fmt_str=func_name_array[UPT_D91C] .. format_strs[UPT_D91C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D91D] = "le_test_packet_count = 0x%x"
field_strs[UPT_D91D] = 1
func_name_array[UPT_D91D] = ""

-- description function for UPT_D91D	
function func_desc_UPT_D91D(address, data)

	if not format_strs[UPT_D91D] then
		format_strs[UPT_D91D]="Not defined :0x%x"
		field_strs[UPT_D91D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D91D]]
	fmt_str=func_name_array[UPT_D91D] .. format_strs[UPT_D91D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D91E] = "temp_le_test_packet_count = 0x%x"
field_strs[UPT_D91E] = 1
func_name_array[UPT_D91E] = ""

-- description function for UPT_D91E	
function func_desc_UPT_D91E(address, data)

	if not format_strs[UPT_D91E] then
		format_strs[UPT_D91E]="Not defined :0x%x"
		field_strs[UPT_D91E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D91E]]
	fmt_str=func_name_array[UPT_D91E] .. format_strs[UPT_D91E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D91F] = "test_begin_flag:%d"
field_strs[UPT_D91F] = 1
func_name_array[UPT_D91F] = ""

-- description function for UPT_D91F	
function func_desc_UPT_D91F(address, data)

	if not format_strs[UPT_D91F] then
		format_strs[UPT_D91F]="Not defined :0x%x"
		field_strs[UPT_D91F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D91F]]
	fmt_str=func_name_array[UPT_D91F] .. format_strs[UPT_D91F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D920] = "LE_test.sub_state = %d"
field_strs[UPT_D920] = 1
func_name_array[UPT_D920] = ""

-- description function for UPT_D920	
function func_desc_UPT_D920(address, data)

	if not format_strs[UPT_D920] then
		format_strs[UPT_D920]="Not defined :0x%x"
		field_strs[UPT_D920]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D920]]
	fmt_str=func_name_array[UPT_D920] .. format_strs[UPT_D920] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/le_var.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/le_white_list.o.i
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_acl_connection.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_acl_container.o.i
format_strs[UPT_D304] = "lmp error log: device index %d not exist"
field_strs[UPT_D304] = 1
func_name_array[UPT_D304] = ""

-- description function for UPT_D304	
function func_desc_UPT_D304(address, data)

	if not format_strs[UPT_D304] then
		format_strs[UPT_D304]="Not defined :0x%x"
		field_strs[UPT_D304]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D304]]
	fmt_str=func_name_array[UPT_D304] .. format_strs[UPT_D304] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_afh.o.i
format_strs[UPT_D30C] = "afh instant lower is 0x%x"
field_strs[UPT_D30C] = 1
func_name_array[UPT_D30C] = ""

-- description function for UPT_D30C	
function func_desc_UPT_D30C(address, data)

	if not format_strs[UPT_D30C] then
		format_strs[UPT_D30C]="Not defined :0x%x"
		field_strs[UPT_D30C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D30C]]
	fmt_str=func_name_array[UPT_D30C] .. format_strs[UPT_D30C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D30A] = "move afh instant device index is %d"
field_strs[UPT_D30A] = 1
func_name_array[UPT_D30A] = ""

-- description function for UPT_D30A	
function func_desc_UPT_D30A(address, data)

	if not format_strs[UPT_D30A] then
		format_strs[UPT_D30A]="Not defined :0x%x"
		field_strs[UPT_D30A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D30A]]
	fmt_str=func_name_array[UPT_D30A] .. format_strs[UPT_D30A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D30B] = "move afh instant current native clk lower is  0x%x"
field_strs[UPT_D30B] = 1
func_name_array[UPT_D30B] = ""

-- description function for UPT_D30B	
function func_desc_UPT_D30B(address, data)

	if not format_strs[UPT_D30B] then
		format_strs[UPT_D30B]="Not defined :0x%x"
		field_strs[UPT_D30B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D30B]]
	fmt_str=func_name_array[UPT_D30B] .. format_strs[UPT_D30B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D307] = "afh timer expired current native clk lower is 0x%x"
field_strs[UPT_D307] = 1
func_name_array[UPT_D307] = ""

-- description function for UPT_D307	
function func_desc_UPT_D307(address, data)

	if not format_strs[UPT_D307] then
		format_strs[UPT_D307]="Not defined :0x%x"
		field_strs[UPT_D307]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D307]]
	fmt_str=func_name_array[UPT_D307] .. format_strs[UPT_D307] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D308] = "device index %d slave need to update AFH"
field_strs[UPT_D308] = 1
func_name_array[UPT_D308] = ""

-- description function for UPT_D308	
function func_desc_UPT_D308(address, data)

	if not format_strs[UPT_D308] then
		format_strs[UPT_D308]="Not defined :0x%x"
		field_strs[UPT_D308]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D308]]
	fmt_str=func_name_array[UPT_D308] .. format_strs[UPT_D308] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D309] = "lmp error log: device index %d encoded LMP_SET_AFH error"
field_strs[UPT_D309] = 1
func_name_array[UPT_D309] = ""

-- description function for UPT_D309	
function func_desc_UPT_D309(address, data)

	if not format_strs[UPT_D309] then
		format_strs[UPT_D309]="Not defined :0x%x"
		field_strs[UPT_D309]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D309]]
	fmt_str=func_name_array[UPT_D309] .. format_strs[UPT_D309] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_ch.o.i
format_strs[UPT_D312] = "lmp error log: link device index %d has not been freed before"
field_strs[UPT_D312] = 1
func_name_array[UPT_D312] = ""

-- description function for UPT_D312	
function func_desc_UPT_D312(address, data)

	if not format_strs[UPT_D312] then
		format_strs[UPT_D312]="Not defined :0x%x"
		field_strs[UPT_D312]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D312]]
	fmt_str=func_name_array[UPT_D312] .. format_strs[UPT_D312] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D313] = "lmp error log: link num %d has exceeded the maxmium count"
field_strs[UPT_D313] = 1
func_name_array[UPT_D313] = ""

-- description function for UPT_D313	
function func_desc_UPT_D313(address, data)

	if not format_strs[UPT_D313] then
		format_strs[UPT_D313]="Not defined :0x%x"
		field_strs[UPT_D313]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D313]]
	fmt_str=func_name_array[UPT_D313] .. format_strs[UPT_D313] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D314] = "lmp error log: link num %d has exceeded the maxmium count"
field_strs[UPT_D314] = 1
func_name_array[UPT_D314] = ""

-- description function for UPT_D314	
function func_desc_UPT_D314(address, data)

	if not format_strs[UPT_D314] then
		format_strs[UPT_D314]="Not defined :0x%x"
		field_strs[UPT_D314]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D314]]
	fmt_str=func_name_array[UPT_D314] .. format_strs[UPT_D314] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D328] = "do mss at point %d"
field_strs[UPT_D328] = 1
func_name_array[UPT_D328] = ""

-- description function for UPT_D328	
function func_desc_UPT_D328(address, data)

	if not format_strs[UPT_D328] then
		format_strs[UPT_D328]="Not defined :0x%x"
		field_strs[UPT_D328]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D328]]
	fmt_str=func_name_array[UPT_D328] .. format_strs[UPT_D328] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D316] = "devive index %d exist sniff mode before mss "
field_strs[UPT_D316] = 1
func_name_array[UPT_D316] = ""

-- description function for UPT_D316	
function func_desc_UPT_D316(address, data)

	if not format_strs[UPT_D316] then
		format_strs[UPT_D316]="Not defined :0x%x"
		field_strs[UPT_D316]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D316]]
	fmt_str=func_name_array[UPT_D316] .. format_strs[UPT_D316] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D317] = "device index %d mss from slave to master success, link state is %d"
field_strs[UPT_D317] = 2
func_name_array[UPT_D317] = ""

-- description function for UPT_D317	
function func_desc_UPT_D317(address, data)

	if not format_strs[UPT_D317] then
		format_strs[UPT_D317]="Not defined :0x%x"
		field_strs[UPT_D317]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D317]]
	fmt_str=func_name_array[UPT_D317] .. format_strs[UPT_D317] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D318] = "device index %d mss faied, encrypt_paused state is 0x%x"
field_strs[UPT_D318] = 2
func_name_array[UPT_D318] = ""

-- description function for UPT_D318	
function func_desc_UPT_D318(address, data)

	if not format_strs[UPT_D318] then
		format_strs[UPT_D318]="Not defined :0x%x"
		field_strs[UPT_D318]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D318]]
	fmt_str=func_name_array[UPT_D318] .. format_strs[UPT_D318] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D319] = "device index %d mss faied, setup mss failed callback timer %d"
field_strs[UPT_D319] = 2
func_name_array[UPT_D319] = ""

-- description function for UPT_D319	
function func_desc_UPT_D319(address, data)

	if not format_strs[UPT_D319] then
		format_strs[UPT_D319]="Not defined :0x%x"
		field_strs[UPT_D319]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D319]]
	fmt_str=func_name_array[UPT_D319] .. format_strs[UPT_D319] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D31A] = "create connection and pagescan collision, return local error code 0x%x"
field_strs[UPT_D31A] = 1
func_name_array[UPT_D31A] = ""

-- description function for UPT_D31A	
function func_desc_UPT_D31A(address, data)

	if not format_strs[UPT_D31A] then
		format_strs[UPT_D31A]="Not defined :0x%x"
		field_strs[UPT_D31A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D31A]]
	fmt_str=func_name_array[UPT_D31A] .. format_strs[UPT_D31A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D31B] = "device index %d ,encryption has been resumed, encrypt_paused state is %d"
field_strs[UPT_D31B] = 2
func_name_array[UPT_D31B] = ""

-- description function for UPT_D31B	
function func_desc_UPT_D31B(address, data)

	if not format_strs[UPT_D31B] then
		format_strs[UPT_D31B]="Not defined :0x%x"
		field_strs[UPT_D31B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D31B]]
	fmt_str=func_name_array[UPT_D31B] .. format_strs[UPT_D31B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D31C] = "mss not allowed, acl_num is %d, host_con_req is %d"
field_strs[UPT_D31C] = 2
func_name_array[UPT_D31C] = ""

-- description function for UPT_D31C	
function func_desc_UPT_D31C(address, data)

	if not format_strs[UPT_D31C] then
		format_strs[UPT_D31C]="Not defined :0x%x"
		field_strs[UPT_D31C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D31C]]
	fmt_str=func_name_array[UPT_D31C] .. format_strs[UPT_D31C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D31D] = "D_esco accept %d"
field_strs[UPT_D31D] = 1
func_name_array[UPT_D31D] = ""

-- description function for UPT_D31D	
function func_desc_UPT_D31D(address, data)

	if not format_strs[UPT_D31D] then
		format_strs[UPT_D31D]="Not defined :0x%x"
		field_strs[UPT_D31D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D31D]]
	fmt_str=func_name_array[UPT_D31D] .. format_strs[UPT_D31D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D31E] = "D_esco accept negotiation %d"
field_strs[UPT_D31E] = 1
func_name_array[UPT_D31E] = ""

-- description function for UPT_D31E	
function func_desc_UPT_D31E(address, data)

	if not format_strs[UPT_D31E] then
		format_strs[UPT_D31E]="Not defined :0x%x"
		field_strs[UPT_D31E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D31E]]
	fmt_str=func_name_array[UPT_D31E] .. format_strs[UPT_D31E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D31F] = "current mss bt frame clk is 0x%x"
field_strs[UPT_D31F] = 1
func_name_array[UPT_D31F] = ""

-- description function for UPT_D31F	
function func_desc_UPT_D31F(address, data)

	if not format_strs[UPT_D31F] then
		format_strs[UPT_D31F]="Not defined :0x%x"
		field_strs[UPT_D31F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D31F]]
	fmt_str=func_name_array[UPT_D31F] .. format_strs[UPT_D31F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D320] = "current mss instant is 0x%x"
field_strs[UPT_D320] = 1
func_name_array[UPT_D320] = ""

-- description function for UPT_D320	
function func_desc_UPT_D320(address, data)

	if not format_strs[UPT_D320] then
		format_strs[UPT_D320]="Not defined :0x%x"
		field_strs[UPT_D320]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D320]]
	fmt_str=func_name_array[UPT_D320] .. format_strs[UPT_D320] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D321] = "device index %d send out esco req, tid role is %d"
field_strs[UPT_D321] = 2
func_name_array[UPT_D321] = ""

-- description function for UPT_D321	
function func_desc_UPT_D321(address, data)

	if not format_strs[UPT_D321] then
		format_strs[UPT_D321]="Not defined :0x%x"
		field_strs[UPT_D321]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D321]]
	fmt_str=func_name_array[UPT_D321] .. format_strs[UPT_D321] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D322] = "next hid bd index is %d"
field_strs[UPT_D322] = 1
func_name_array[UPT_D322] = ""

-- description function for UPT_D322	
function func_desc_UPT_D322(address, data)

	if not format_strs[UPT_D322] then
		format_strs[UPT_D322]="Not defined :0x%x"
		field_strs[UPT_D322]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D322]]
	fmt_str=func_name_array[UPT_D322] .. format_strs[UPT_D322] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D323] = "bd_addr low 0x%x0x%x is HID device has been found"
field_strs[UPT_D323] = 2
func_name_array[UPT_D323] = ""

-- description function for UPT_D323	
function func_desc_UPT_D323(address, data)

	if not format_strs[UPT_D323] then
		format_strs[UPT_D323]="Not defined :0x%x"
		field_strs[UPT_D323]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D323]]
	fmt_str=func_name_array[UPT_D323] .. format_strs[UPT_D323] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D324] = "page timeout is %d seconds"
field_strs[UPT_D324] = 1
func_name_array[UPT_D324] = ""

-- description function for UPT_D324	
function func_desc_UPT_D324(address, data)

	if not format_strs[UPT_D324] then
		format_strs[UPT_D324]="Not defined :0x%x"
		field_strs[UPT_D324]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D324]]
	fmt_str=func_name_array[UPT_D324] .. format_strs[UPT_D324] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D325] = "page train repetition is %d seconds"
field_strs[UPT_D325] = 1
func_name_array[UPT_D325] = ""

-- description function for UPT_D325	
function func_desc_UPT_D325(address, data)

	if not format_strs[UPT_D325] then
		format_strs[UPT_D325]="Not defined :0x%x"
		field_strs[UPT_D325]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D325]]
	fmt_str=func_name_array[UPT_D325] .. format_strs[UPT_D325] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D326] = "LM_Handle_Deferred_Reset_Map,device index = %d,point = %d"
field_strs[UPT_D326] = 2
func_name_array[UPT_D326] = ""

-- description function for UPT_D326	
function func_desc_UPT_D326(address, data)

	if not format_strs[UPT_D326] then
		format_strs[UPT_D326]="Not defined :0x%x"
		field_strs[UPT_D326]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D326]]
	fmt_str=func_name_array[UPT_D326] .. format_strs[UPT_D326] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D327] = "LM_Handle_A2DP_Event_Timeout error,device index = %d,point = %d"
field_strs[UPT_D327] = 2
func_name_array[UPT_D327] = ""

-- description function for UPT_D327	
function func_desc_UPT_D327(address, data)

	if not format_strs[UPT_D327] then
		format_strs[UPT_D327]="Not defined :0x%x"
		field_strs[UPT_D327]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D327]]
	fmt_str=func_name_array[UPT_D327] .. format_strs[UPT_D327] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_cmd_disp.o.i
format_strs[UPT_D306] = "LMP_IN_Q: BYTE[0]=0x%x,BYTE[1]=0x%x"
field_strs[UPT_D306] = 2
func_name_array[UPT_D306] = ""

-- description function for UPT_D306	
function func_desc_UPT_D306(address, data)

	if not format_strs[UPT_D306] then
		format_strs[UPT_D306]="Not defined :0x%x"
		field_strs[UPT_D306]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D306]]
	fmt_str=func_name_array[UPT_D306] .. format_strs[UPT_D306] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D330] = "LMP_IN_Q dequeue base addr is 0x%x"
field_strs[UPT_D330] = 1
func_name_array[UPT_D330] = ""

-- description function for UPT_D330	
function func_desc_UPT_D330(address, data)

	if not format_strs[UPT_D330] then
		format_strs[UPT_D330]="Not defined :0x%x"
		field_strs[UPT_D330]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D330]]
	fmt_str=func_name_array[UPT_D330] .. format_strs[UPT_D330] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D331] = "LMP_IN_Q dequeue length is %d"
field_strs[UPT_D331] = 1
func_name_array[UPT_D331] = ""

-- description function for UPT_D331	
function func_desc_UPT_D331(address, data)

	if not format_strs[UPT_D331] then
		format_strs[UPT_D331]="Not defined :0x%x"
		field_strs[UPT_D331]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D331]]
	fmt_str=func_name_array[UPT_D331] .. format_strs[UPT_D331] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D303] = "LMP_IN TID:%d,device index:%d"
field_strs[UPT_D303] = 2
func_name_array[UPT_D303] = ""

-- description function for UPT_D303	
function func_desc_UPT_D303(address, data)

	if not format_strs[UPT_D303] then
		format_strs[UPT_D303]="Not defined :0x%x"
		field_strs[UPT_D303]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D303]]
	fmt_str=func_name_array[UPT_D303] .. format_strs[UPT_D303] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D300 is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_config.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_con_filter.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_ecc.o.i
format_strs[UPT_D3A9] = "LMecc_Generate_ECC_Key native clk is 0x%x"
field_strs[UPT_D3A9] = 1
func_name_array[UPT_D3A9] = ""

-- description function for UPT_D3A9	
function func_desc_UPT_D3A9(address, data)

	if not format_strs[UPT_D3A9] then
		format_strs[UPT_D3A9]="Not defined :0x%x"
		field_strs[UPT_D3A9]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D3A9]]
	fmt_str=func_name_array[UPT_D3A9] .. format_strs[UPT_D3A9] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_ecc_256.o.i
format_strs[UPT_D339] = "p_tempkey[0] lower is 0x%x"
field_strs[UPT_D339] = 1
func_name_array[UPT_D339] = ""

-- description function for UPT_D339	
function func_desc_UPT_D339(address, data)

	if not format_strs[UPT_D339] then
		format_strs[UPT_D339]="Not defined :0x%x"
		field_strs[UPT_D339]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D339]]
	fmt_str=func_name_array[UPT_D339] .. format_strs[UPT_D339] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D33C] = "LMecc_Generate_ECC_Key256 show native clk 0x%x"
field_strs[UPT_D33C] = 1
func_name_array[UPT_D33C] = ""

-- description function for UPT_D33C	
function func_desc_UPT_D33C(address, data)

	if not format_strs[UPT_D33C] then
		format_strs[UPT_D33C]="Not defined :0x%x"
		field_strs[UPT_D33C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D33C]]
	fmt_str=func_name_array[UPT_D33C] .. format_strs[UPT_D33C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_encode_pdu.o.i
format_strs[UPT_D340] = "device index %d last rcvd pkd tid role is %d"
field_strs[UPT_D340] = 2
func_name_array[UPT_D340] = ""

-- description function for UPT_D340	
function func_desc_UPT_D340(address, data)

	if not format_strs[UPT_D340] then
		format_strs[UPT_D340]="Not defined :0x%x"
		field_strs[UPT_D340]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D340]]
	fmt_str=func_name_array[UPT_D340] .. format_strs[UPT_D340] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D305] = "LMP_OUT_Q: BYTE[0]=0x%x,BYTE[1]=0x%x"
field_strs[UPT_D305] = 2
func_name_array[UPT_D305] = ""

-- description function for UPT_D305	
function func_desc_UPT_D305(address, data)

	if not format_strs[UPT_D305] then
		format_strs[UPT_D305]="Not defined :0x%x"
		field_strs[UPT_D305]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D305]]
	fmt_str=func_name_array[UPT_D305] .. format_strs[UPT_D305] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D301 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D302] = "encoded lmp pdu, device index is %d"
field_strs[UPT_D302] = 1
func_name_array[UPT_D302] = ""

-- description function for UPT_D302	
function func_desc_UPT_D302(address, data)

	if not format_strs[UPT_D302] then
		format_strs[UPT_D302]="Not defined :0x%x"
		field_strs[UPT_D302]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D302]]
	fmt_str=func_name_array[UPT_D302] .. format_strs[UPT_D302] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D343] = "lmp error log: encoded lmp pdu, device_index %d, p_lmp_link has not been found"
field_strs[UPT_D343] = 1
func_name_array[UPT_D343] = ""

-- description function for UPT_D343	
function func_desc_UPT_D343(address, data)

	if not format_strs[UPT_D343] then
		format_strs[UPT_D343]="Not defined :0x%x"
		field_strs[UPT_D343]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D343]]
	fmt_str=func_name_array[UPT_D343] .. format_strs[UPT_D343] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_init.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_inquiry.o.i
format_strs[UPT_D349] = "inquiry filter filter inquiry result due to unique_inq_results %d"
field_strs[UPT_D349] = 1
func_name_array[UPT_D349] = ""

-- description function for UPT_D349	
function func_desc_UPT_D349(address, data)

	if not format_strs[UPT_D349] then
		format_strs[UPT_D349]="Not defined :0x%x"
		field_strs[UPT_D349]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D349]]
	fmt_str=func_name_array[UPT_D349] .. format_strs[UPT_D349] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_link_control_protocol.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_link_key_db.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_link_policy.o.i
-- UPT_D34E is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D351] = "device index %d start_encry_flag is enabled, dequeue blocked"
field_strs[UPT_D351] = 1
func_name_array[UPT_D351] = ""

-- description function for UPT_D351	
function func_desc_UPT_D351(address, data)

	if not format_strs[UPT_D351] then
		format_strs[UPT_D351]="Not defined :0x%x"
		field_strs[UPT_D351]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D351]]
	fmt_str=func_name_array[UPT_D351] .. format_strs[UPT_D351] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D3B4] = "get_link_tx_activity null, queue_flush_pending=%d, l2cap_tx_enable=%d"
field_strs[UPT_D3B4] = 2
func_name_array[UPT_D3B4] = ""

-- description function for UPT_D3B4	
function func_desc_UPT_D3B4(address, data)

	if not format_strs[UPT_D3B4] then
		format_strs[UPT_D3B4]="Not defined :0x%x"
		field_strs[UPT_D3B4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D3B4]]
	fmt_str=func_name_array[UPT_D3B4] .. format_strs[UPT_D3B4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D350] = "device index %d slave flush rx packet"
field_strs[UPT_D350] = 1
func_name_array[UPT_D350] = ""

-- description function for UPT_D350	
function func_desc_UPT_D350(address, data)

	if not format_strs[UPT_D350] then
		format_strs[UPT_D350]="Not defined :0x%x"
		field_strs[UPT_D350]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D350]]
	fmt_str=func_name_array[UPT_D350] .. format_strs[UPT_D350] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D35A is in dsp_description_fixed.lua, skip from here
-- UPT_D353 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D352] = "is next sco activity, next_activity_time clk 0x%x, current_clk 0x%x"
field_strs[UPT_D352] = 2
func_name_array[UPT_D352] = ""

-- description function for UPT_D352	
function func_desc_UPT_D352(address, data)

	if not format_strs[UPT_D352] then
		format_strs[UPT_D352]="Not defined :0x%x"
		field_strs[UPT_D352]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D352]]
	fmt_str=func_name_array[UPT_D352] .. format_strs[UPT_D352] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D354] = "get esco activity eSCO_MASTER_RESERVED_SLOT_TX dequeue length is %d"
field_strs[UPT_D354] = 1
func_name_array[UPT_D354] = ""

-- description function for UPT_D354	
function func_desc_UPT_D354(address, data)

	if not format_strs[UPT_D354] then
		format_strs[UPT_D354]="Not defined :0x%x"
		field_strs[UPT_D354]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D354]]
	fmt_str=func_name_array[UPT_D354] .. format_strs[UPT_D354] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D355] = "get esco activity eSCO_SLAVE_RESERVED_SLOT_RX dequeue length is %d"
field_strs[UPT_D355] = 1
func_name_array[UPT_D355] = ""

-- description function for UPT_D355	
function func_desc_UPT_D355(address, data)

	if not format_strs[UPT_D355] then
		format_strs[UPT_D355]="Not defined :0x%x"
		field_strs[UPT_D355]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D355]]
	fmt_str=func_name_array[UPT_D355] .. format_strs[UPT_D355] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D356 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D358] = "data has been flushed, flush length remaining=%d"
field_strs[UPT_D358] = 1
func_name_array[UPT_D358] = ""

-- description function for UPT_D358	
function func_desc_UPT_D358(address, data)

	if not format_strs[UPT_D358] then
		format_strs[UPT_D358]="Not defined :0x%x"
		field_strs[UPT_D358]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D358]]
	fmt_str=func_name_array[UPT_D358] .. format_strs[UPT_D358] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D35E] = "l2cap data has been flushed, remaining flush length=%d"
field_strs[UPT_D35E] = 1
func_name_array[UPT_D35E] = ""

-- description function for UPT_D35E	
function func_desc_UPT_D35E(address, data)

	if not format_strs[UPT_D35E] then
		format_strs[UPT_D35E]="Not defined :0x%x"
		field_strs[UPT_D35E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D35E]]
	fmt_str=func_name_array[UPT_D35E] .. format_strs[UPT_D35E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D622] = "a2dp offload l2cap_pkt_len_pending %d"
field_strs[UPT_D622] = 1
func_name_array[UPT_D622] = ""

-- description function for UPT_D622	
function func_desc_UPT_D622(address, data)

	if not format_strs[UPT_D622] then
		format_strs[UPT_D622]="Not defined :0x%x"
		field_strs[UPT_D622]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D622]]
	fmt_str=func_name_array[UPT_D622] .. format_strs[UPT_D622] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D623] = "a2dp offload l2cap_pkt_len_pending %d"
field_strs[UPT_D623] = 1
func_name_array[UPT_D623] = ""

-- description function for UPT_D623	
function func_desc_UPT_D623(address, data)

	if not format_strs[UPT_D623] then
		format_strs[UPT_D623]="Not defined :0x%x"
		field_strs[UPT_D623]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D623]]
	fmt_str=func_name_array[UPT_D623] .. format_strs[UPT_D623] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D359] = "device index %d data has been flushed in LMpol_Scan_All_Links_For_Pending_Flushes "
field_strs[UPT_D359] = 1
func_name_array[UPT_D359] = ""

-- description function for UPT_D359	
function func_desc_UPT_D359(address, data)

	if not format_strs[UPT_D359] then
		format_strs[UPT_D359]="Not defined :0x%x"
		field_strs[UPT_D359]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D359]]
	fmt_str=func_name_array[UPT_D359] .. format_strs[UPT_D359] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D35C] = "MAX gap slots =%x"
field_strs[UPT_D35C] = 1
func_name_array[UPT_D35C] = ""

-- description function for UPT_D35C	
function func_desc_UPT_D35C(address, data)

	if not format_strs[UPT_D35C] then
		format_strs[UPT_D35C]="Not defined :0x%x"
		field_strs[UPT_D35C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D35C]]
	fmt_str=func_name_array[UPT_D35C] .. format_strs[UPT_D35C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D35B] = "esco retransmission allowed=%d"
field_strs[UPT_D35B] = 1
func_name_array[UPT_D35B] = ""

-- description function for UPT_D35B	
function func_desc_UPT_D35B(address, data)

	if not format_strs[UPT_D35B] then
		format_strs[UPT_D35B]="Not defined :0x%x"
		field_strs[UPT_D35B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D35B]]
	fmt_str=func_name_array[UPT_D35B] .. format_strs[UPT_D35B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_link_policy_protocol.o.i
format_strs[UPT_D361] = "unknow code local T_sniff %d, local D_sniff %d, local N_sniff %d, local timeout %d"
field_strs[UPT_D361] = 4
func_name_array[UPT_D361] = ""

-- description function for UPT_D361	
function func_desc_UPT_D361(address, data)

	if not format_strs[UPT_D361] then
		format_strs[UPT_D361]="Not defined :0x%x"
		field_strs[UPT_D361]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D361]]
	fmt_str=func_name_array[UPT_D361] .. format_strs[UPT_D361] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D362] = "device_index %d controller do mss before exit sniff mode, caller position is %d"
field_strs[UPT_D362] = 2
func_name_array[UPT_D362] = ""

-- description function for UPT_D362	
function func_desc_UPT_D362(address, data)

	if not format_strs[UPT_D362] then
		format_strs[UPT_D362]="Not defined :0x%x"
		field_strs[UPT_D362]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D362]]
	fmt_str=func_name_array[UPT_D362] .. format_strs[UPT_D362] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D363] = "device_index %d controller do start encryption before exit sniff mode, caller position is %d"
field_strs[UPT_D363] = 2
func_name_array[UPT_D363] = ""

-- description function for UPT_D363	
function func_desc_UPT_D363(address, data)

	if not format_strs[UPT_D363] then
		format_strs[UPT_D363]="Not defined :0x%x"
		field_strs[UPT_D363]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D363]]
	fmt_str=func_name_array[UPT_D363] .. format_strs[UPT_D363] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D364] = "device_index %d , link state is %d before enter sniff mode"
field_strs[UPT_D364] = 2
func_name_array[UPT_D364] = ""

-- description function for UPT_D364	
function func_desc_UPT_D364(address, data)

	if not format_strs[UPT_D364] then
		format_strs[UPT_D364]="Not defined :0x%x"
		field_strs[UPT_D364]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D364]]
	fmt_str=func_name_array[UPT_D364] .. format_strs[UPT_D364] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D365] = "device_index %d enter sniff transition mode"
field_strs[UPT_D365] = 1
func_name_array[UPT_D365] = ""

-- description function for UPT_D365	
function func_desc_UPT_D365(address, data)

	if not format_strs[UPT_D365] then
		format_strs[UPT_D365]="Not defined :0x%x"
		field_strs[UPT_D365]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D365]]
	fmt_str=func_name_array[UPT_D365] .. format_strs[UPT_D365] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D366] = "device_index %d exit sniff transition mode"
field_strs[UPT_D366] = 1
func_name_array[UPT_D366] = ""

-- description function for UPT_D366	
function func_desc_UPT_D366(address, data)

	if not format_strs[UPT_D366] then
		format_strs[UPT_D366]="Not defined :0x%x"
		field_strs[UPT_D366]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D366]]
	fmt_str=func_name_array[UPT_D366] .. format_strs[UPT_D366] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_link_power_control.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_link_qos.o.i
format_strs[UPT_D36C] = "none A2DP link device index is %d, CQDDR tx quality is %x"
field_strs[UPT_D36C] = 2
func_name_array[UPT_D36C] = ""

-- description function for UPT_D36C	
function func_desc_UPT_D36C(address, data)

	if not format_strs[UPT_D36C] then
		format_strs[UPT_D36C]="Not defined :0x%x"
		field_strs[UPT_D36C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D36C]]
	fmt_str=func_name_array[UPT_D36C] .. format_strs[UPT_D36C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D36D] = "tx acl packet count is %d, acked acl packets count is %d"
field_strs[UPT_D36D] = 2
func_name_array[UPT_D36D] = ""

-- description function for UPT_D36D	
function func_desc_UPT_D36D(address, data)

	if not format_strs[UPT_D36D] then
		format_strs[UPT_D36D]="Not defined :0x%x"
		field_strs[UPT_D36D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D36D]]
	fmt_str=func_name_array[UPT_D36D] .. format_strs[UPT_D36D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D36E] = "none A2DP link device index is %d, peer rate is auto rate %d, rx quality is %d, prefer rate is %d"
field_strs[UPT_D36E] = 4
func_name_array[UPT_D36E] = ""

-- description function for UPT_D36E	
function func_desc_UPT_D36E(address, data)

	if not format_strs[UPT_D36E] then
		format_strs[UPT_D36E]="Not defined :0x%x"
		field_strs[UPT_D36E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D36E]]
	fmt_str=func_name_array[UPT_D36E] .. format_strs[UPT_D36E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D36A] = "A2DP link device index is %d, CQDDR peer_rate is %d, max_slots_out is %d, link rate is %d"
field_strs[UPT_D36A] = 4
func_name_array[UPT_D36A] = ""

-- description function for UPT_D36A	
function func_desc_UPT_D36A(address, data)

	if not format_strs[UPT_D36A] then
		format_strs[UPT_D36A]="Not defined :0x%x"
		field_strs[UPT_D36A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D36A]]
	fmt_str=func_name_array[UPT_D36A] .. format_strs[UPT_D36A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D36B] = "None A2DP link device index is %d, CQDDR peer_rate is %d, max_slots_out is %d, link rate is %d"
field_strs[UPT_D36B] = 4
func_name_array[UPT_D36B] = ""

-- description function for UPT_D36B	
function func_desc_UPT_D36B(address, data)

	if not format_strs[UPT_D36B] then
		format_strs[UPT_D36B]="Not defined :0x%x"
		field_strs[UPT_D36B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D36B]]
	fmt_str=func_name_array[UPT_D36B] .. format_strs[UPT_D36B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D370] = "device index %d can not do CQDDR because has packet to send"
field_strs[UPT_D370] = 1
func_name_array[UPT_D370] = ""

-- description function for UPT_D370	
function func_desc_UPT_D370(address, data)

	if not format_strs[UPT_D370] then
		format_strs[UPT_D370]="Not defined :0x%x"
		field_strs[UPT_D370]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D370]]
	fmt_str=func_name_array[UPT_D370] .. format_strs[UPT_D370] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D371] = "device index %d, max slot is %d, update allowed packet type rate from %d to %d"
field_strs[UPT_D371] = 4
func_name_array[UPT_D371] = ""

-- description function for UPT_D371	
function func_desc_UPT_D371(address, data)

	if not format_strs[UPT_D371] then
		format_strs[UPT_D371]="Not defined :0x%x"
		field_strs[UPT_D371]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D371]]
	fmt_str=func_name_array[UPT_D371] .. format_strs[UPT_D371] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_pca.o.i
format_strs[UPT_D3B0] = "pca eval, link_id %x focus_type %d"
field_strs[UPT_D3B0] = 2
func_name_array[UPT_D3B0] = ""

-- description function for UPT_D3B0	
function func_desc_UPT_D3B0(address, data)

	if not format_strs[UPT_D3B0] then
		format_strs[UPT_D3B0]="Not defined :0x%x"
		field_strs[UPT_D3B0]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D3B0]]
	fmt_str=func_name_array[UPT_D3B0] .. format_strs[UPT_D3B0] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D3B1] = "pca drag stop %d"
field_strs[UPT_D3B1] = 1
func_name_array[UPT_D3B1] = ""

-- description function for UPT_D3B1	
function func_desc_UPT_D3B1(address, data)

	if not format_strs[UPT_D3B1] then
		format_strs[UPT_D3B1]="Not defined :0x%x"
		field_strs[UPT_D3B1]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D3B1]]
	fmt_str=func_name_array[UPT_D3B1] .. format_strs[UPT_D3B1] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D3B2] = "pca drag start %d"
field_strs[UPT_D3B2] = 1
func_name_array[UPT_D3B2] = ""

-- description function for UPT_D3B2	
function func_desc_UPT_D3B2(address, data)

	if not format_strs[UPT_D3B2] then
		format_strs[UPT_D3B2]="Not defined :0x%x"
		field_strs[UPT_D3B2]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D3B2]]
	fmt_str=func_name_array[UPT_D3B2] .. format_strs[UPT_D3B2] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_scan.o.i
format_strs[UPT_D37A] = "lmp error log: pagescan start error with error code %d"
field_strs[UPT_D37A] = 1
func_name_array[UPT_D37A] = ""

-- description function for UPT_D37A	
function func_desc_UPT_D37A(address, data)

	if not format_strs[UPT_D37A] then
		format_strs[UPT_D37A]="Not defined :0x%x"
		field_strs[UPT_D37A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D37A]]
	fmt_str=func_name_array[UPT_D37A] .. format_strs[UPT_D37A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D37B] = "lmp error log: pagescan start error, pagescan_active is %d, max piconets is %d"
field_strs[UPT_D37B] = 2
func_name_array[UPT_D37B] = ""

-- description function for UPT_D37B	
function func_desc_UPT_D37B(address, data)

	if not format_strs[UPT_D37B] then
		format_strs[UPT_D37B]="Not defined :0x%x"
		field_strs[UPT_D37B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D37B]]
	fmt_str=func_name_array[UPT_D37B] .. format_strs[UPT_D37B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D37C] = "lmp error log: inquiryscan start error with error code %d"
field_strs[UPT_D37C] = 1
func_name_array[UPT_D37C] = ""

-- description function for UPT_D37C	
function func_desc_UPT_D37C(address, data)

	if not format_strs[UPT_D37C] then
		format_strs[UPT_D37C]="Not defined :0x%x"
		field_strs[UPT_D37C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D37C]]
	fmt_str=func_name_array[UPT_D37C] .. format_strs[UPT_D37C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D37D] = "lmp error log: inquiryscan start error, scan enable flag is %d"
field_strs[UPT_D37D] = 1
func_name_array[UPT_D37D] = ""

-- description function for UPT_D37D	
function func_desc_UPT_D37D(address, data)

	if not format_strs[UPT_D37D] then
		format_strs[UPT_D37D]="Not defined :0x%x"
		field_strs[UPT_D37D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D37D]]
	fmt_str=func_name_array[UPT_D37D] .. format_strs[UPT_D37D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D37E] = "inquiry scan window is %d, inquiry scan type is %d"
field_strs[UPT_D37E] = 2
func_name_array[UPT_D37E] = ""

-- description function for UPT_D37E	
function func_desc_UPT_D37E(address, data)

	if not format_strs[UPT_D37E] then
		format_strs[UPT_D37E]="Not defined :0x%x"
		field_strs[UPT_D37E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D37E]]
	fmt_str=func_name_array[UPT_D37E] .. format_strs[UPT_D37E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D37F] = "pagescan device index is %d, piconet clk index is %d, page scan type is %d, reserved %d"
field_strs[UPT_D37F] = 4
func_name_array[UPT_D37F] = ""

-- description function for UPT_D37F	
function func_desc_UPT_D37F(address, data)

	if not format_strs[UPT_D37F] then
		format_strs[UPT_D37F]="Not defined :0x%x"
		field_strs[UPT_D37F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D37F]]
	fmt_str=func_name_array[UPT_D37F] .. format_strs[UPT_D37F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_sco_container.o.i
format_strs[UPT_D383] = "allocate active sco index %d"
field_strs[UPT_D383] = 1
func_name_array[UPT_D383] = ""

-- description function for UPT_D383	
function func_desc_UPT_D383(address, data)

	if not format_strs[UPT_D383] then
		format_strs[UPT_D383]="Not defined :0x%x"
		field_strs[UPT_D383]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D383]]
	fmt_str=func_name_array[UPT_D383] .. format_strs[UPT_D383] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D384] = "peer or local device do not support esco features, packet type is 0x%x"
field_strs[UPT_D384] = 1
func_name_array[UPT_D384] = ""

-- description function for UPT_D384	
function func_desc_UPT_D384(address, data)

	if not format_strs[UPT_D384] then
		format_strs[UPT_D384]="Not defined :0x%x"
		field_strs[UPT_D384]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D384]]
	fmt_str=func_name_array[UPT_D384] .. format_strs[UPT_D384] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D385] = "sco/esco dequeued length %d"
field_strs[UPT_D385] = 1
func_name_array[UPT_D385] = ""

-- description function for UPT_D385	
function func_desc_UPT_D385(address, data)

	if not format_strs[UPT_D385] then
		format_strs[UPT_D385]="Not defined :0x%x"
		field_strs[UPT_D385]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D385]]
	fmt_str=func_name_array[UPT_D385] .. format_strs[UPT_D385] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_sec_core.o.i
format_strs[UPT_D38A] = "device index %d start_encry_flag is enabled in LMsec_core_Enable_Rx_Encryption"
field_strs[UPT_D38A] = 1
func_name_array[UPT_D38A] = ""

-- description function for UPT_D38A	
function func_desc_UPT_D38A(address, data)

	if not format_strs[UPT_D38A] then
		format_strs[UPT_D38A]="Not defined :0x%x"
		field_strs[UPT_D38A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D38A]]
	fmt_str=func_name_array[UPT_D38A] .. format_strs[UPT_D38A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_sec_engine.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_sec_peer.o.i
format_strs[UPT_D38E] = "device index %d get peer device start encryption accept, disable start_encry_flag"
field_strs[UPT_D38E] = 1
func_name_array[UPT_D38E] = ""

-- description function for UPT_D38E	
function func_desc_UPT_D38E(address, data)

	if not format_strs[UPT_D38E] then
		format_strs[UPT_D38E]="Not defined :0x%x"
		field_strs[UPT_D38E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D38E]]
	fmt_str=func_name_array[UPT_D38E] .. format_strs[UPT_D38E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D38F] = "[need to be refined]do mss in all slave link when one device accept start encryption %d"
field_strs[UPT_D38F] = 1
func_name_array[UPT_D38F] = ""

-- description function for UPT_D38F	
function func_desc_UPT_D38F(address, data)

	if not format_strs[UPT_D38F] then
		format_strs[UPT_D38F]="Not defined :0x%x"
		field_strs[UPT_D38F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D38F]]
	fmt_str=func_name_array[UPT_D38F] .. format_strs[UPT_D38F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D390] = "[junlian.hu log]force auth_super state to start second authentication %d"
field_strs[UPT_D390] = 1
func_name_array[UPT_D390] = ""

-- description function for UPT_D390	
function func_desc_UPT_D390(address, data)

	if not format_strs[UPT_D390] then
		format_strs[UPT_D390]="Not defined :0x%x"
		field_strs[UPT_D390]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D390]]
	fmt_str=func_name_array[UPT_D390] .. format_strs[UPT_D390] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D391] = "device index %d sec handle not accept, disable start_encry_flag"
field_strs[UPT_D391] = 1
func_name_array[UPT_D391] = ""

-- description function for UPT_D391	
function func_desc_UPT_D391(address, data)

	if not format_strs[UPT_D391] then
		format_strs[UPT_D391]="Not defined :0x%x"
		field_strs[UPT_D391]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D391]]
	fmt_str=func_name_array[UPT_D391] .. format_strs[UPT_D391] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D392] = "device index %d sec handle LMP_RESUME_ENCRYPTION_REQ not accept, call role_switch_fail_timeout_event"
field_strs[UPT_D392] = 1
func_name_array[UPT_D392] = ""

-- description function for UPT_D392	
function func_desc_UPT_D392(address, data)

	if not format_strs[UPT_D392] then
		format_strs[UPT_D392]="Not defined :0x%x"
		field_strs[UPT_D392]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D392]]
	fmt_str=func_name_array[UPT_D392] .. format_strs[UPT_D392] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D393] = "need to be refined bt controller auto mss, picoents_switch_timeout %d"
field_strs[UPT_D393] = 1
func_name_array[UPT_D393] = ""

-- description function for UPT_D393	
function func_desc_UPT_D393(address, data)

	if not format_strs[UPT_D393] then
		format_strs[UPT_D393]="Not defined :0x%x"
		field_strs[UPT_D393]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D393]]
	fmt_str=func_name_array[UPT_D393] .. format_strs[UPT_D393] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D394] = "need to be refined bt controller auto mss %d"
field_strs[UPT_D394] = 1
func_name_array[UPT_D394] = ""

-- description function for UPT_D394	
function func_desc_UPT_D394(address, data)

	if not format_strs[UPT_D394] then
		format_strs[UPT_D394]="Not defined :0x%x"
		field_strs[UPT_D394]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D394]]
	fmt_str=func_name_array[UPT_D394] .. format_strs[UPT_D394] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D395] = "device index %d in resume encrption, remote support pause encryption, start encry"
field_strs[UPT_D395] = 1
func_name_array[UPT_D395] = ""

-- description function for UPT_D395	
function func_desc_UPT_D395(address, data)

	if not format_strs[UPT_D395] then
		format_strs[UPT_D395]="Not defined :0x%x"
		field_strs[UPT_D395]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D395]]
	fmt_str=func_name_array[UPT_D395] .. format_strs[UPT_D395] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D396] = "device index %d aes payload counter reset"
field_strs[UPT_D396] = 1
func_name_array[UPT_D396] = ""

-- description function for UPT_D396	
function func_desc_UPT_D396(address, data)

	if not format_strs[UPT_D396] then
		format_strs[UPT_D396]="Not defined :0x%x"
		field_strs[UPT_D396]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D396]]
	fmt_str=func_name_array[UPT_D396] .. format_strs[UPT_D396] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D397] = "device index %d IV bleow"
field_strs[UPT_D397] = 1
func_name_array[UPT_D397] = ""

-- description function for UPT_D397	
function func_desc_UPT_D397(address, data)

	if not format_strs[UPT_D397] then
		format_strs[UPT_D397]="Not defined :0x%x"
		field_strs[UPT_D397]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D397]]
	fmt_str=func_name_array[UPT_D397] .. format_strs[UPT_D397] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D398] = "IV[0] is 0x%x, IV[1] is 0x%x"
field_strs[UPT_D398] = 2
func_name_array[UPT_D398] = ""

-- description function for UPT_D398	
function func_desc_UPT_D398(address, data)

	if not format_strs[UPT_D398] then
		format_strs[UPT_D398]="Not defined :0x%x"
		field_strs[UPT_D398]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D398]]
	fmt_str=func_name_array[UPT_D398] .. format_strs[UPT_D398] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D399] = "device index %d exit sniff mode by controller before start encryption "
field_strs[UPT_D399] = 1
func_name_array[UPT_D399] = ""

-- description function for UPT_D399	
function func_desc_UPT_D399(address, data)

	if not format_strs[UPT_D399] then
		format_strs[UPT_D399]="Not defined :0x%x"
		field_strs[UPT_D399]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D399]]
	fmt_str=func_name_array[UPT_D399] .. format_strs[UPT_D399] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_sec_upper.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_slc_event.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_ssp.o.i
format_strs[UPT_D3A1] = "auth super state is %x auth sub state is %x "
field_strs[UPT_D3A1] = 2
func_name_array[UPT_D3A1] = ""

-- description function for UPT_D3A1	
function func_desc_UPT_D3A1(address, data)

	if not format_strs[UPT_D3A1] then
		format_strs[UPT_D3A1]="Not defined :0x%x"
		field_strs[UPT_D3A1]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D3A1]]
	fmt_str=func_name_array[UPT_D3A1] .. format_strs[UPT_D3A1] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D3A0] = "devive index %d ssp key type is %d "
field_strs[UPT_D3A0] = 2
func_name_array[UPT_D3A0] = ""

-- description function for UPT_D3A0	
function func_desc_UPT_D3A0(address, data)

	if not format_strs[UPT_D3A0] then
		format_strs[UPT_D3A0]="Not defined :0x%x"
		field_strs[UPT_D3A0]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D3A0]]
	fmt_str=func_name_array[UPT_D3A0] .. format_strs[UPT_D3A0] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D0B4] = "lmp_ssp.c, sub_event=0x%x, length=%d"
field_strs[UPT_D0B4] = 2
func_name_array[UPT_D0B4] = ""

-- description function for UPT_D0B4	
function func_desc_UPT_D0B4(address, data)

	if not format_strs[UPT_D0B4] then
		format_strs[UPT_D0B4]="Not defined :0x%x"
		field_strs[UPT_D0B4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D0B4]]
	fmt_str=func_name_array[UPT_D0B4] .. format_strs[UPT_D0B4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_ssp_engine.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_timer.o.i
format_strs[UPT_D3A4] = "lmp error log: delist timer_index %d, delete timer num"
field_strs[UPT_D3A4] = 1
func_name_array[UPT_D3A4] = ""

-- description function for UPT_D3A4	
function func_desc_UPT_D3A4(address, data)

	if not format_strs[UPT_D3A4] then
		format_strs[UPT_D3A4]="Not defined :0x%x"
		field_strs[UPT_D3A4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D3A4]]
	fmt_str=func_name_array[UPT_D3A4] .. format_strs[UPT_D3A4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D3A5] = "lmp error log: LMtmr_Enlist_Timer timer_index is %d, lm_timer_head is %d"
field_strs[UPT_D3A5] = 2
func_name_array[UPT_D3A5] = ""

-- description function for UPT_D3A5	
function func_desc_UPT_D3A5(address, data)

	if not format_strs[UPT_D3A5] then
		format_strs[UPT_D3A5]="Not defined :0x%x"
		field_strs[UPT_D3A5]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D3A5]]
	fmt_str=func_name_array[UPT_D3A5] .. format_strs[UPT_D3A5] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D3A6] = "lmp error log: LMtmr_Enlist_Timer timer_index is %d, iter is %d"
field_strs[UPT_D3A6] = 2
func_name_array[UPT_D3A6] = ""

-- description function for UPT_D3A6	
function func_desc_UPT_D3A6(address, data)

	if not format_strs[UPT_D3A6] then
		format_strs[UPT_D3A6]="Not defined :0x%x"
		field_strs[UPT_D3A6]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D3A6]]
	fmt_str=func_name_array[UPT_D3A6] .. format_strs[UPT_D3A6] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_utils.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lmp_var.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_access.o.i
-- UPT_D114 is in dsp_description_fixed.lua, skip from here
-- UPT_D114 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D100] = "qd->length %d"
field_strs[UPT_D100] = 1
func_name_array[UPT_D100] = ""

-- description function for UPT_D100	
function func_desc_UPT_D100(address, data)

	if not format_strs[UPT_D100] then
		format_strs[UPT_D100]="Not defined :0x%x"
		field_strs[UPT_D100]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D100]]
	fmt_str=func_name_array[UPT_D100] .. format_strs[UPT_D100] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D101] = "esco tx pkt_contents_length %d"
field_strs[UPT_D101] = 1
func_name_array[UPT_D101] = ""

-- description function for UPT_D101	
function func_desc_UPT_D101(address, data)

	if not format_strs[UPT_D101] then
		format_strs[UPT_D101]="Not defined :0x%x"
		field_strs[UPT_D101]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D101]]
	fmt_str=func_name_array[UPT_D101] .. format_strs[UPT_D101] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D115 is in dsp_description_fixed.lua, skip from here
-- UPT_D116 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D30E] = "MIC:%d,rx_state %d"
field_strs[UPT_D30E] = 2
func_name_array[UPT_D30E] = ""

-- description function for UPT_D30E	
function func_desc_UPT_D30E(address, data)

	if not format_strs[UPT_D30E] then
		format_strs[UPT_D30E]="Not defined :0x%x"
		field_strs[UPT_D30E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D30E]]
	fmt_str=func_name_array[UPT_D30E] .. format_strs[UPT_D30E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D106] = "TC3000_flag = %d"
field_strs[UPT_D106] = 1
func_name_array[UPT_D106] = ""

-- description function for UPT_D106	
function func_desc_UPT_D106(address, data)

	if not format_strs[UPT_D106] then
		format_strs[UPT_D106]="Not defined :0x%x"
		field_strs[UPT_D106]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D106]]
	fmt_str=func_name_array[UPT_D106] .. format_strs[UPT_D106] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D10A is in dsp_description_fixed.lua, skip from here
-- UPT_D10A is in dsp_description_fixed.lua, skip from here
-- UPT_D113 is in dsp_description_fixed.lua, skip from here
-- UPT_D10A is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D10E] = "AES:p_rx_payload_counter %d"
field_strs[UPT_D10E] = 1
func_name_array[UPT_D10E] = ""

-- description function for UPT_D10E	
function func_desc_UPT_D10E(address, data)

	if not format_strs[UPT_D10E] then
		format_strs[UPT_D10E]="Not defined :0x%x"
		field_strs[UPT_D10E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D10E]]
	fmt_str=func_name_array[UPT_D10E] .. format_strs[UPT_D10E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D10F] = "AES:p_tx_payload_counter %d"
field_strs[UPT_D10F] = 1
func_name_array[UPT_D10F] = ""

-- description function for UPT_D10F	
function func_desc_UPT_D10F(address, data)

	if not format_strs[UPT_D10F] then
		format_strs[UPT_D10F]="Not defined :0x%x"
		field_strs[UPT_D10F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D10F]]
	fmt_str=func_name_array[UPT_D10F] .. format_strs[UPT_D10F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D119] = "edr sync error happen, header error count=%d, packet type=%d"
field_strs[UPT_D119] = 2
func_name_array[UPT_D119] = ""

-- description function for UPT_D119	
function func_desc_UPT_D119(address, data)

	if not format_strs[UPT_D119] then
		format_strs[UPT_D119]="Not defined :0x%x"
		field_strs[UPT_D119]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D119]]
	fmt_str=func_name_array[UPT_D119] .. format_strs[UPT_D119] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D11A] = "hw error check happen, duplicate retry times=%d"
field_strs[UPT_D11A] = 1
func_name_array[UPT_D11A] = ""

-- description function for UPT_D11A	
function func_desc_UPT_D11A(address, data)

	if not format_strs[UPT_D11A] then
		format_strs[UPT_D11A]="Not defined :0x%x"
		field_strs[UPT_D11A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D11A]]
	fmt_str=func_name_array[UPT_D11A] .. format_strs[UPT_D11A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D10C] = "CRC ERROR packet type %d"
field_strs[UPT_D10C] = 1
func_name_array[UPT_D10C] = ""

-- description function for UPT_D10C	
function func_desc_UPT_D10C(address, data)

	if not format_strs[UPT_D10C] then
		format_strs[UPT_D10C]="Not defined :0x%x"
		field_strs[UPT_D10C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D10C]]
	fmt_str=func_name_array[UPT_D10C] .. format_strs[UPT_D10C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D110] = "t_new_header_bit_counter %d"
field_strs[UPT_D110] = 1
func_name_array[UPT_D110] = ""

-- description function for UPT_D110	
function func_desc_UPT_D110(address, data)

	if not format_strs[UPT_D110] then
		format_strs[UPT_D110]="Not defined :0x%x"
		field_strs[UPT_D110]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D110]]
	fmt_str=func_name_array[UPT_D110] .. format_strs[UPT_D110] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D10A is in dsp_description_fixed.lua, skip from here
-- UPT_D10A is in dsp_description_fixed.lua, skip from here
-- UPT_D10A is in dsp_description_fixed.lua, skip from here
-- UPT_D10A is in dsp_description_fixed.lua, skip from here
-- UPT_D10A is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_acl.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_afh.o.i
format_strs[UPT_D161] = "LSLCafh_Assign_AFH_Kernel piconet_index %d"
field_strs[UPT_D161] = 1
func_name_array[UPT_D161] = ""

-- description function for UPT_D161	
function func_desc_UPT_D161(address, data)

	if not format_strs[UPT_D161] then
		format_strs[UPT_D161]="Not defined :0x%x"
		field_strs[UPT_D161]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D161]]
	fmt_str=func_name_array[UPT_D161] .. format_strs[UPT_D161] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D162] = "LSLCafh_Assign_AFH_Kernel uap_lap 0x%x"
field_strs[UPT_D162] = 1
func_name_array[UPT_D162] = ""

-- description function for UPT_D162	
function func_desc_UPT_D162(address, data)

	if not format_strs[UPT_D162] then
		format_strs[UPT_D162]="Not defined :0x%x"
		field_strs[UPT_D162]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D162]]
	fmt_str=func_name_array[UPT_D162] .. format_strs[UPT_D162] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D163] = "LSLCafh_Assign_AFH_Kernel uap_lap 0x%x"
field_strs[UPT_D163] = 1
func_name_array[UPT_D163] = ""

-- description function for UPT_D163	
function func_desc_UPT_D163(address, data)

	if not format_strs[UPT_D163] then
		format_strs[UPT_D163]="Not defined :0x%x"
		field_strs[UPT_D163]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D163]]
	fmt_str=func_name_array[UPT_D163] .. format_strs[UPT_D163] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D165] = "LSLCafh_Get_Frequency_Channel current clk 0x%x"
field_strs[UPT_D165] = 1
func_name_array[UPT_D165] = ""

-- description function for UPT_D165	
function func_desc_UPT_D165(address, data)

	if not format_strs[UPT_D165] then
		format_strs[UPT_D165]="Not defined :0x%x"
		field_strs[UPT_D165]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D165]]
	fmt_str=func_name_array[UPT_D165] .. format_strs[UPT_D165] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D166] = "LSLCafh_Get_Frequency_Channel afh_instant =0x%x"
field_strs[UPT_D166] = 1
func_name_array[UPT_D166] = ""

-- description function for UPT_D166	
function func_desc_UPT_D166(address, data)

	if not format_strs[UPT_D166] then
		format_strs[UPT_D166]="Not defined :0x%x"
		field_strs[UPT_D166]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D166]]
	fmt_str=func_name_array[UPT_D166] .. format_strs[UPT_D166] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D167 is in dsp_description_fixed.lua, skip from here
-- UPT_D168 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D169] = "LSLCafh_Get_Frequency_Channel current freq %d"
field_strs[UPT_D169] = 1
func_name_array[UPT_D169] = ""

-- description function for UPT_D169	
function func_desc_UPT_D169(address, data)

	if not format_strs[UPT_D169] then
		format_strs[UPT_D169]="Not defined :0x%x"
		field_strs[UPT_D169]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D169]]
	fmt_str=func_name_array[UPT_D169] .. format_strs[UPT_D169] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D19F] = "used channel num is 0x%x"
field_strs[UPT_D19F] = 1
func_name_array[UPT_D19F] = ""

-- description function for UPT_D19F	
function func_desc_UPT_D19F(address, data)

	if not format_strs[UPT_D19F] then
		format_strs[UPT_D19F]="Not defined :0x%x"
		field_strs[UPT_D19F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D19F]]
	fmt_str=func_name_array[UPT_D19F] .. format_strs[UPT_D19F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D1A0] = "fft data is 0x%x"
field_strs[UPT_D1A0] = 1
func_name_array[UPT_D1A0] = ""

-- description function for UPT_D1A0	
function func_desc_UPT_D1A0(address, data)

	if not format_strs[UPT_D1A0] then
		format_strs[UPT_D1A0]="Not defined :0x%x"
		field_strs[UPT_D1A0]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D1A0]]
	fmt_str=func_name_array[UPT_D1A0] .. format_strs[UPT_D1A0] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D1A1] = "freq num is 0x%x"
field_strs[UPT_D1A1] = 1
func_name_array[UPT_D1A1] = ""

-- description function for UPT_D1A1	
function func_desc_UPT_D1A1(address, data)

	if not format_strs[UPT_D1A1] then
		format_strs[UPT_D1A1]="Not defined :0x%x"
		field_strs[UPT_D1A1]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D1A1]]
	fmt_str=func_name_array[UPT_D1A1] .. format_strs[UPT_D1A1] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D1A2] = "used channel num is 0x%x"
field_strs[UPT_D1A2] = 1
func_name_array[UPT_D1A2] = ""

-- description function for UPT_D1A2	
function func_desc_UPT_D1A2(address, data)

	if not format_strs[UPT_D1A2] then
		format_strs[UPT_D1A2]="Not defined :0x%x"
		field_strs[UPT_D1A2]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D1A2]]
	fmt_str=func_name_array[UPT_D1A2] .. format_strs[UPT_D1A2] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D1A3] = "fft data threshod is 0x%x"
field_strs[UPT_D1A3] = 1
func_name_array[UPT_D1A3] = ""

-- description function for UPT_D1A3	
function func_desc_UPT_D1A3(address, data)

	if not format_strs[UPT_D1A3] then
		format_strs[UPT_D1A3]="Not defined :0x%x"
		field_strs[UPT_D1A3]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D1A3]]
	fmt_str=func_name_array[UPT_D1A3] .. format_strs[UPT_D1A3] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_assmnt.o.i
format_strs[UPT_D16A] = "ass.rx_req=%d,interferce=%d"
field_strs[UPT_D16A] = 2
func_name_array[UPT_D16A] = ""

-- description function for UPT_D16A	
function func_desc_UPT_D16A(address, data)

	if not format_strs[UPT_D16A] then
		format_strs[UPT_D16A]="Not defined :0x%x"
		field_strs[UPT_D16A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D16A]]
	fmt_str=func_name_array[UPT_D16A] .. format_strs[UPT_D16A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D16B] = "ass.rx_req=%d,interferce=%d"
field_strs[UPT_D16B] = 2
func_name_array[UPT_D16B] = ""

-- description function for UPT_D16B	
function func_desc_UPT_D16B(address, data)

	if not format_strs[UPT_D16B] then
		format_strs[UPT_D16B]="Not defined :0x%x"
		field_strs[UPT_D16B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D16B]]
	fmt_str=func_name_array[UPT_D16B] .. format_strs[UPT_D16B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D16C] = "ass disable channel %d, interference %d"
field_strs[UPT_D16C] = 2
func_name_array[UPT_D16C] = ""

-- description function for UPT_D16C	
function func_desc_UPT_D16C(address, data)

	if not format_strs[UPT_D16C] then
		format_strs[UPT_D16C]="Not defined :0x%x"
		field_strs[UPT_D16C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D16C]]
	fmt_str=func_name_array[UPT_D16C] .. format_strs[UPT_D16C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_class.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_clk.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_common.o.i
format_strs[UPT_D16D] = "aux tim %x"
field_strs[UPT_D16D] = 1
func_name_array[UPT_D16D] = ""

-- description function for UPT_D16D	
function func_desc_UPT_D16D(address, data)

	if not format_strs[UPT_D16D] then
		format_strs[UPT_D16D]="Not defined :0x%x"
		field_strs[UPT_D16D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D16D]]
	fmt_str=func_name_array[UPT_D16D] .. format_strs[UPT_D16D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D19C] = "R2P receive hec error packet, r2p should go on%d"
field_strs[UPT_D19C] = 1
func_name_array[UPT_D19C] = ""

-- description function for UPT_D19C	
function func_desc_UPT_D19C(address, data)

	if not format_strs[UPT_D19C] then
		format_strs[UPT_D19C]="Not defined :0x%x"
		field_strs[UPT_D19C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D19C]]
	fmt_str=func_name_array[UPT_D19C] .. format_strs[UPT_D19C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D16E is in dsp_description_fixed.lua, skip from here
-- UPT_D16F is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D170] = "event 0x%x rx abort happened, rx mode is %d"
field_strs[UPT_D170] = 2
func_name_array[UPT_D170] = ""

-- description function for UPT_D170	
function func_desc_UPT_D170(address, data)

	if not format_strs[UPT_D170] then
		format_strs[UPT_D170]="Not defined :0x%x"
		field_strs[UPT_D170]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D170]]
	fmt_str=func_name_array[UPT_D170] .. format_strs[UPT_D170] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D1A8] = "pkd error handling am_addr=%d"
field_strs[UPT_D1A8] = 1
func_name_array[UPT_D1A8] = ""

-- description function for UPT_D1A8	
function func_desc_UPT_D1A8(address, data)

	if not format_strs[UPT_D1A8] then
		format_strs[UPT_D1A8]="Not defined :0x%x"
		field_strs[UPT_D1A8]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D1A8]]
	fmt_str=func_name_array[UPT_D1A8] .. format_strs[UPT_D1A8] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D171] = "error handling irq is %d, from state %d to %d, am_addr_aborted %d"
field_strs[UPT_D171] = 4
func_name_array[UPT_D171] = ""

-- description function for UPT_D171	
function func_desc_UPT_D171(address, data)

	if not format_strs[UPT_D171] then
		format_strs[UPT_D171]="Not defined :0x%x"
		field_strs[UPT_D171]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D171]]
	fmt_str=func_name_array[UPT_D171] .. format_strs[UPT_D171] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D18A] = "esco rx error point, rx status error, current esco state is %d"
field_strs[UPT_D18A] = 1
func_name_array[UPT_D18A] = ""

-- description function for UPT_D18A	
function func_desc_UPT_D18A(address, data)

	if not format_strs[UPT_D18A] then
		format_strs[UPT_D18A]="Not defined :0x%x"
		field_strs[UPT_D18A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D18A]]
	fmt_str=func_name_array[UPT_D18A] .. format_strs[UPT_D18A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D18B] = "esco tx error point, peer nak us, current esco state is %d"
field_strs[UPT_D18B] = 1
func_name_array[UPT_D18B] = ""

-- description function for UPT_D18B	
function func_desc_UPT_D18B(address, data)

	if not format_strs[UPT_D18B] then
		format_strs[UPT_D18B]="Not defined :0x%x"
		field_strs[UPT_D18B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D18B]]
	fmt_str=func_name_array[UPT_D18B] .. format_strs[UPT_D18B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D19D] = "Reg dump on PKA %x"
field_strs[UPT_D19D] = 1
func_name_array[UPT_D19D] = ""

-- description function for UPT_D19D	
function func_desc_UPT_D19D(address, data)

	if not format_strs[UPT_D19D] then
		format_strs[UPT_D19D]="Not defined :0x%x"
		field_strs[UPT_D19D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D19D]]
	fmt_str=func_name_array[UPT_D19D] .. format_strs[UPT_D19D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D19E] = "Reg dump on NO PKT %x"
field_strs[UPT_D19E] = 1
func_name_array[UPT_D19E] = ""

-- description function for UPT_D19E	
function func_desc_UPT_D19E(address, data)

	if not format_strs[UPT_D19E] then
		format_strs[UPT_D19E]="Not defined :0x%x"
		field_strs[UPT_D19E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D19E]]
	fmt_str=func_name_array[UPT_D19E] .. format_strs[UPT_D19E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D18C] = "esco rx error point, no pkt received, current esco state is %d"
field_strs[UPT_D18C] = 1
func_name_array[UPT_D18C] = ""

-- description function for UPT_D18C	
function func_desc_UPT_D18C(address, data)

	if not format_strs[UPT_D18C] then
		format_strs[UPT_D18C]="Not defined :0x%x"
		field_strs[UPT_D18C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D18C]]
	fmt_str=func_name_array[UPT_D18C] .. format_strs[UPT_D18C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_freq.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_hop.o.i
format_strs[UPT_D172] = "hop state %d"
field_strs[UPT_D172] = 1
func_name_array[UPT_D172] = ""

-- description function for UPT_D172	
function func_desc_UPT_D172(address, data)

	if not format_strs[UPT_D172] then
		format_strs[UPT_D172]="Not defined :0x%x"
		field_strs[UPT_D172]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D172]]
	fmt_str=func_name_array[UPT_D172] .. format_strs[UPT_D172] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_inqscan.o.i
-- UPT_D173 is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_inquiry.o.i
-- UPT_D174 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D175] = "native intra is %d"
field_strs[UPT_D175] = 1
func_name_array[UPT_D175] = ""

-- description function for UPT_D175	
function func_desc_UPT_D175(address, data)

	if not format_strs[UPT_D175] then
		format_strs[UPT_D175]="Not defined :0x%x"
		field_strs[UPT_D175]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D175]]
	fmt_str=func_name_array[UPT_D175] .. format_strs[UPT_D175] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D1A4] = "inquiry rx abort happen, lslc inquiry state = %d, rx_type = %d"
field_strs[UPT_D1A4] = 2
func_name_array[UPT_D1A4] = ""

-- description function for UPT_D1A4	
function func_desc_UPT_D1A4(address, data)

	if not format_strs[UPT_D1A4] then
		format_strs[UPT_D1A4]="Not defined :0x%x"
		field_strs[UPT_D1A4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D1A4]]
	fmt_str=func_name_array[UPT_D1A4] .. format_strs[UPT_D1A4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D1A5] = "inquiry error handling in irq %d, error state %d"
field_strs[UPT_D1A5] = 2
func_name_array[UPT_D1A5] = ""

-- description function for UPT_D1A5	
function func_desc_UPT_D1A5(address, data)

	if not format_strs[UPT_D1A5] then
		format_strs[UPT_D1A5]="Not defined :0x%x"
		field_strs[UPT_D1A5]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D1A5]]
	fmt_str=func_name_array[UPT_D1A5] .. format_strs[UPT_D1A5] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_irq.o.i
format_strs[UPT_D19A] = "BT native clk:%x"
field_strs[UPT_D19A] = 1
func_name_array[UPT_D19A] = ""

-- description function for UPT_D19A	
function func_desc_UPT_D19A(address, data)

	if not format_strs[UPT_D19A] then
		format_strs[UPT_D19A]="Not defined :0x%x"
		field_strs[UPT_D19A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D19A]]
	fmt_str=func_name_array[UPT_D19A] .. format_strs[UPT_D19A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D190] = "BT TIM0_ISR native bitcnt:%x"
field_strs[UPT_D190] = 1
func_name_array[UPT_D190] = ""

-- description function for UPT_D190	
function func_desc_UPT_D190(address, data)

	if not format_strs[UPT_D190] then
		format_strs[UPT_D190]="Not defined :0x%x"
		field_strs[UPT_D190]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D190]]
	fmt_str=func_name_array[UPT_D190] .. format_strs[UPT_D190] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D191] = "BT TIM1_ISR native bitcnt:%x"
field_strs[UPT_D191] = 1
func_name_array[UPT_D191] = ""

-- description function for UPT_D191	
function func_desc_UPT_D191(address, data)

	if not format_strs[UPT_D191] then
		format_strs[UPT_D191]="Not defined :0x%x"
		field_strs[UPT_D191]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D191]]
	fmt_str=func_name_array[UPT_D191] .. format_strs[UPT_D191] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D192] = "BT TIM2_ISR native bitcnt:%x"
field_strs[UPT_D192] = 1
func_name_array[UPT_D192] = ""

-- description function for UPT_D192	
function func_desc_UPT_D192(address, data)

	if not format_strs[UPT_D192] then
		format_strs[UPT_D192]="Not defined :0x%x"
		field_strs[UPT_D192]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D192]]
	fmt_str=func_name_array[UPT_D192] .. format_strs[UPT_D192] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D193] = "BT TIM3_ISR native bitcnt:%x"
field_strs[UPT_D193] = 1
func_name_array[UPT_D193] = ""

-- description function for UPT_D193	
function func_desc_UPT_D193(address, data)

	if not format_strs[UPT_D193] then
		format_strs[UPT_D193]="Not defined :0x%x"
		field_strs[UPT_D193]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D193]]
	fmt_str=func_name_array[UPT_D193] .. format_strs[UPT_D193] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D194] = "BT AUX_ISR native bitcnt:%x"
field_strs[UPT_D194] = 1
func_name_array[UPT_D194] = ""

-- description function for UPT_D194	
function func_desc_UPT_D194(address, data)

	if not format_strs[UPT_D194] then
		format_strs[UPT_D194]="Not defined :0x%x"
		field_strs[UPT_D194]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D194]]
	fmt_str=func_name_array[UPT_D194] .. format_strs[UPT_D194] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D195] = "BT SYNC_ISR native bitcnt:%x"
field_strs[UPT_D195] = 1
func_name_array[UPT_D195] = ""

-- description function for UPT_D195	
function func_desc_UPT_D195(address, data)

	if not format_strs[UPT_D195] then
		format_strs[UPT_D195]="Not defined :0x%x"
		field_strs[UPT_D195]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D195]]
	fmt_str=func_name_array[UPT_D195] .. format_strs[UPT_D195] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D196] = "BT PKA_ISR native bitcnt:%x"
field_strs[UPT_D196] = 1
func_name_array[UPT_D196] = ""

-- description function for UPT_D196	
function func_desc_UPT_D196(address, data)

	if not format_strs[UPT_D196] then
		format_strs[UPT_D196]="Not defined :0x%x"
		field_strs[UPT_D196]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D196]]
	fmt_str=func_name_array[UPT_D196] .. format_strs[UPT_D196] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D197] = "BT HDR_ISR native bitcnt:%x"
field_strs[UPT_D197] = 1
func_name_array[UPT_D197] = ""

-- description function for UPT_D197	
function func_desc_UPT_D197(address, data)

	if not format_strs[UPT_D197] then
		format_strs[UPT_D197]="Not defined :0x%x"
		field_strs[UPT_D197]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D197]]
	fmt_str=func_name_array[UPT_D197] .. format_strs[UPT_D197] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D198] = "BT PKD_ISR native bitcnt:%x"
field_strs[UPT_D198] = 1
func_name_array[UPT_D198] = ""

-- description function for UPT_D198	
function func_desc_UPT_D198(address, data)

	if not format_strs[UPT_D198] then
		format_strs[UPT_D198]="Not defined :0x%x"
		field_strs[UPT_D198]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D198]]
	fmt_str=func_name_array[UPT_D198] .. format_strs[UPT_D198] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D199] = "BT NO_PKT_ISR native bitcnt:%x"
field_strs[UPT_D199] = 1
func_name_array[UPT_D199] = ""

-- description function for UPT_D199	
function func_desc_UPT_D199(address, data)

	if not format_strs[UPT_D199] then
		format_strs[UPT_D199]="Not defined :0x%x"
		field_strs[UPT_D199]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D199]]
	fmt_str=func_name_array[UPT_D199] .. format_strs[UPT_D199] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_mss.o.i
format_strs[UPT_D15F] = "prepared mss FHS response ID  channel %d"
field_strs[UPT_D15F] = 1
func_name_array[UPT_D15F] = ""

-- description function for UPT_D15F	
function func_desc_UPT_D15F(address, data)

	if not format_strs[UPT_D15F] then
		format_strs[UPT_D15F]="Not defined :0x%x"
		field_strs[UPT_D15F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D15F]]
	fmt_str=func_name_array[UPT_D15F] .. format_strs[UPT_D15F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D177 is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_page.o.i
-- UPT_D178 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D1A6] = "page error handling in irq %d, error state %d"
field_strs[UPT_D1A6] = 2
func_name_array[UPT_D1A6] = ""

-- description function for UPT_D1A6	
function func_desc_UPT_D1A6(address, data)

	if not format_strs[UPT_D1A6] then
		format_strs[UPT_D1A6]="Not defined :0x%x"
		field_strs[UPT_D1A6]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D1A6]]
	fmt_str=func_name_array[UPT_D1A6] .. format_strs[UPT_D1A6] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_pagescan.o.i
-- UPT_D179 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D15E] = "prepared pagescan FHS response ID  channel %d"
field_strs[UPT_D15E] = 1
func_name_array[UPT_D15E] = ""

-- description function for UPT_D15E	
function func_desc_UPT_D15E(address, data)

	if not format_strs[UPT_D15E] then
		format_strs[UPT_D15E]="Not defined :0x%x"
		field_strs[UPT_D15E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D15E]]
	fmt_str=func_name_array[UPT_D15E] .. format_strs[UPT_D15E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_pkt.o.i
-- UPT_D113 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D1A7] = "prepared tx FHS channel %d"
field_strs[UPT_D1A7] = 1
func_name_array[UPT_D1A7] = ""

-- description function for UPT_D1A7	
function func_desc_UPT_D1A7(address, data)

	if not format_strs[UPT_D1A7] then
		format_strs[UPT_D1A7]="Not defined :0x%x"
		field_strs[UPT_D1A7]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D1A7]]
	fmt_str=func_name_array[UPT_D1A7] .. format_strs[UPT_D1A7] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D117] = "remote buffer is full, original prepared packet type is %d"
field_strs[UPT_D117] = 1
func_name_array[UPT_D117] = ""

-- description function for UPT_D117	
function func_desc_UPT_D117(address, data)

	if not format_strs[UPT_D117] then
		format_strs[UPT_D117]="Not defined :0x%x"
		field_strs[UPT_D117]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D117]]
	fmt_str=func_name_array[UPT_D117] .. format_strs[UPT_D117] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_sco.o.i
format_strs[UPT_D17B] = "sco anchor found is %d, active link is %d"
field_strs[UPT_D17B] = 2
func_name_array[UPT_D17B] = ""

-- description function for UPT_D17B	
function func_desc_UPT_D17B(address, data)

	if not format_strs[UPT_D17B] then
		format_strs[UPT_D17B]="Not defined :0x%x"
		field_strs[UPT_D17B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D17B]]
	fmt_str=func_name_array[UPT_D17B] .. format_strs[UPT_D17B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_sniff.o.i
-- UPT_D17F is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/lslc_stat.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/marlin3_bt_rf_api.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/patch.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/patch_audio.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/patch_coex.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/patch_common.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/patch_es.o.i
format_strs[UPT_D54B] = "es_get_next_normal_event_to_execute, debug point=%x"
field_strs[UPT_D54B] = 1
func_name_array[UPT_D54B] = ""

-- description function for UPT_D54B	
function func_desc_UPT_D54B(address, data)

	if not format_strs[UPT_D54B] then
		format_strs[UPT_D54B]="Not defined :0x%x"
		field_strs[UPT_D54B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D54B]]
	fmt_str=func_name_array[UPT_D54B] .. format_strs[UPT_D54B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D528] = "es_get_next_critical_event_to_execute,complete clock: =%x"
field_strs[UPT_D528] = 1
func_name_array[UPT_D528] = ""

-- description function for UPT_D528	
function func_desc_UPT_D528(address, data)

	if not format_strs[UPT_D528] then
		format_strs[UPT_D528]="Not defined :0x%x"
		field_strs[UPT_D528]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D528]]
	fmt_str=func_name_array[UPT_D528] .. format_strs[UPT_D528] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D529] = "es_get_next_critical_event_to_execute,check us: =%x"
field_strs[UPT_D529] = 1
func_name_array[UPT_D529] = ""

-- description function for UPT_D529	
function func_desc_UPT_D529(address, data)

	if not format_strs[UPT_D529] then
		format_strs[UPT_D529]="Not defined :0x%x"
		field_strs[UPT_D529]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D529]]
	fmt_str=func_name_array[UPT_D529] .. format_strs[UPT_D529] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D52A] = "es_get_next_critical_event_to_execute,next event: link id=0x%x,event type=0x%x"
field_strs[UPT_D52A] = 2
func_name_array[UPT_D52A] = ""

-- description function for UPT_D52A	
function func_desc_UPT_D52A(address, data)

	if not format_strs[UPT_D52A] then
		format_strs[UPT_D52A]="Not defined :0x%x"
		field_strs[UPT_D52A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D52A]]
	fmt_str=func_name_array[UPT_D52A] .. format_strs[UPT_D52A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D52C] = "es_get_next_critical_event_to_execute,focus event: link id=%x,event type=0x%x"
field_strs[UPT_D52C] = 2
func_name_array[UPT_D52C] = ""

-- description function for UPT_D52C	
function func_desc_UPT_D52C(address, data)

	if not format_strs[UPT_D52C] then
		format_strs[UPT_D52C]="Not defined :0x%x"
		field_strs[UPT_D52C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D52C]]
	fmt_str=func_name_array[UPT_D52C] .. format_strs[UPT_D52C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D52D] = "es_get_next_critical_event_to_execute,debug_point: %x"
field_strs[UPT_D52D] = 1
func_name_array[UPT_D52D] = ""

-- description function for UPT_D52D	
function func_desc_UPT_D52D(address, data)

	if not format_strs[UPT_D52D] then
		format_strs[UPT_D52D]="Not defined :0x%x"
		field_strs[UPT_D52D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D52D]]
	fmt_str=func_name_array[UPT_D52D] .. format_strs[UPT_D52D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D503 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D504] = "es_event_end_indication end,new current event:window=%x"
field_strs[UPT_D504] = 1
func_name_array[UPT_D504] = ""

-- description function for UPT_D504	
function func_desc_UPT_D504(address, data)

	if not format_strs[UPT_D504] then
		format_strs[UPT_D504]="Not defined :0x%x"
		field_strs[UPT_D504]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D504]]
	fmt_str=func_name_array[UPT_D504] .. format_strs[UPT_D504] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D57F is in dsp_description_fixed.lua, skip from here
-- UPT_D57A is in dsp_description_fixed.lua, skip from here
-- UPT_D57A is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D591] = "sync free slots %d"
field_strs[UPT_D591] = 1
func_name_array[UPT_D591] = ""

-- description function for UPT_D591	
function func_desc_UPT_D591(address, data)

	if not format_strs[UPT_D591] then
		format_strs[UPT_D591]="Not defined :0x%x"
		field_strs[UPT_D591]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D591]]
	fmt_str=func_name_array[UPT_D591] .. format_strs[UPT_D591] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/patch_hc.o.i
format_strs[UPT_DD18] = "Psk_Command: bt_init_num=%d"
field_strs[UPT_DD18] = 1
func_name_array[UPT_DD18] = ""

-- description function for UPT_DD18	
function func_desc_UPT_DD18(address, data)

	if not format_strs[UPT_DD18] then
		format_strs[UPT_DD18]="Not defined :0x%x"
		field_strs[UPT_DD18]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD18]]
	fmt_str=func_name_array[UPT_DD18] .. format_strs[UPT_DD18] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D092] = "TC_Write_Local_Radio_Register,address=0x%x"
field_strs[UPT_D092] = 1
func_name_array[UPT_D092] = ""

-- description function for UPT_D092	
function func_desc_UPT_D092(address, data)

	if not format_strs[UPT_D092] then
		format_strs[UPT_D092]="Not defined :0x%x"
		field_strs[UPT_D092]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D092]]
	fmt_str=func_name_array[UPT_D092] .. format_strs[UPT_D092] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D093] = "TC_Write_Local_Radio_Register,address=0x%x"
field_strs[UPT_D093] = 1
func_name_array[UPT_D093] = ""

-- description function for UPT_D093	
function func_desc_UPT_D093(address, data)

	if not format_strs[UPT_D093] then
		format_strs[UPT_D093]="Not defined :0x%x"
		field_strs[UPT_D093]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D093]]
	fmt_str=func_name_array[UPT_D093] .. format_strs[UPT_D093] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/patch_hcit.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/patch_hw_bb.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/patch_hw_radio.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/patch_lc.o.i
-- UPT_D102 is in dsp_description_fixed.lua, skip from here
-- UPT_D103 is in dsp_description_fixed.lua, skip from here
-- UPT_D10A is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D105] = "m_array_seed[0] = %d,m_array_seed[1] = %d,"
field_strs[UPT_D105] = 2
func_name_array[UPT_D105] = ""

-- description function for UPT_D105	
function func_desc_UPT_D105(address, data)

	if not format_strs[UPT_D105] then
		format_strs[UPT_D105]="Not defined :0x%x"
		field_strs[UPT_D105]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D105]]
	fmt_str=func_name_array[UPT_D105] .. format_strs[UPT_D105] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D108] = "LSLCacc_last_rx_LMP_msg %d"
field_strs[UPT_D108] = 1
func_name_array[UPT_D108] = ""

-- description function for UPT_D108	
function func_desc_UPT_D108(address, data)

	if not format_strs[UPT_D108] then
		format_strs[UPT_D108]="Not defined :0x%x"
		field_strs[UPT_D108]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D108]]
	fmt_str=func_name_array[UPT_D108] .. format_strs[UPT_D108] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D10D] = "LSLCacc_last_rx_LMP_msg %d"
field_strs[UPT_D10D] = 1
func_name_array[UPT_D10D] = ""

-- description function for UPT_D10D	
function func_desc_UPT_D10D(address, data)

	if not format_strs[UPT_D10D] then
		format_strs[UPT_D10D]="Not defined :0x%x"
		field_strs[UPT_D10D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D10D]]
	fmt_str=func_name_array[UPT_D10D] .. format_strs[UPT_D10D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D10B] = "unencryption duplicate packet at the start of AES %d"
field_strs[UPT_D10B] = 1
func_name_array[UPT_D10B] = ""

-- description function for UPT_D10B	
function func_desc_UPT_D10B(address, data)

	if not format_strs[UPT_D10B] then
		format_strs[UPT_D10B]="Not defined :0x%x"
		field_strs[UPT_D10B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D10B]]
	fmt_str=func_name_array[UPT_D10B] .. format_strs[UPT_D10B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D1A9] = "left_freq is 0x%x"
field_strs[UPT_D1A9] = 1
func_name_array[UPT_D1A9] = ""

-- description function for UPT_D1A9	
function func_desc_UPT_D1A9(address, data)

	if not format_strs[UPT_D1A9] then
		format_strs[UPT_D1A9]="Not defined :0x%x"
		field_strs[UPT_D1A9]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D1A9]]
	fmt_str=func_name_array[UPT_D1A9] .. format_strs[UPT_D1A9] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D17F is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/patch_le.o.i
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D71F] = "advertising_type %d, advertising_channel_index %d"
field_strs[UPT_D71F] = 2
func_name_array[UPT_D71F] = ""

-- description function for UPT_D71F	
function func_desc_UPT_D71F(address, data)

	if not format_strs[UPT_D71F] then
		format_strs[UPT_D71F]="Not defined :0x%x"
		field_strs[UPT_D71F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D71F]]
	fmt_str=func_name_array[UPT_D71F] .. format_strs[UPT_D71F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D75D] = "trx_ref_time.clock=%x"
field_strs[UPT_D75D] = 1
func_name_array[UPT_D75D] = ""

-- description function for UPT_D75D	
function func_desc_UPT_D75D(address, data)

	if not format_strs[UPT_D75D] then
		format_strs[UPT_D75D]="Not defined :0x%x"
		field_strs[UPT_D75D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D75D]]
	fmt_str=func_name_array[UPT_D75D] .. format_strs[UPT_D75D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D75E] = "link_id %d le_con_ctrl_state %d"
field_strs[UPT_D75E] = 2
func_name_array[UPT_D75E] = ""

-- description function for UPT_D75E	
function func_desc_UPT_D75E(address, data)

	if not format_strs[UPT_D75E] then
		format_strs[UPT_D75E]="Not defined :0x%x"
		field_strs[UPT_D75E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D75E]]
	fmt_str=func_name_array[UPT_D75E] .. format_strs[UPT_D75E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D744] = "irq %d"
field_strs[UPT_D744] = 1
func_name_array[UPT_D744] = ""

-- description function for UPT_D744	
function func_desc_UPT_D744(address, data)

	if not format_strs[UPT_D744] then
		format_strs[UPT_D744]="Not defined :0x%x"
		field_strs[UPT_D744]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D744]]
	fmt_str=func_name_array[UPT_D744] .. format_strs[UPT_D744] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D80B] = "disable LE L2CAP_IN device index: %d"
field_strs[UPT_D80B] = 1
func_name_array[UPT_D80B] = ""

-- description function for UPT_D80B	
function func_desc_UPT_D80B(address, data)

	if not format_strs[UPT_D80B] then
		format_strs[UPT_D80B]="Not defined :0x%x"
		field_strs[UPT_D80B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D80B]]
	fmt_str=func_name_array[UPT_D80B] .. format_strs[UPT_D80B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D80C] = "disable LE L2CAP_IN ll_action_pending: %d"
field_strs[UPT_D80C] = 1
func_name_array[UPT_D80C] = ""

-- description function for UPT_D80C	
function func_desc_UPT_D80C(address, data)

	if not format_strs[UPT_D80C] then
		format_strs[UPT_D80C]="Not defined :0x%x"
		field_strs[UPT_D80C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D80C]]
	fmt_str=func_name_array[UPT_D80C] .. format_strs[UPT_D80C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D79D] = "LE AE detail log index 0x%x"
field_strs[UPT_D79D] = 1
func_name_array[UPT_D79D] = ""

-- description function for UPT_D79D	
function func_desc_UPT_D79D(address, data)

	if not format_strs[UPT_D79D] then
		format_strs[UPT_D79D]="Not defined :0x%x"
		field_strs[UPT_D79D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D79D]]
	fmt_str=func_name_array[UPT_D79D] .. format_strs[UPT_D79D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D7FF is in dsp_description_fixed.lua, skip from here
-- UPT_D704 is in dsp_description_fixed.lua, skip from here

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/patch_lmp.o.i
format_strs[UPT_D34F] = "device index %d slave flush tx packet"
field_strs[UPT_D34F] = 1
func_name_array[UPT_D34F] = ""

-- description function for UPT_D34F	
function func_desc_UPT_D34F(address, data)

	if not format_strs[UPT_D34F] then
		format_strs[UPT_D34F]="Not defined :0x%x"
		field_strs[UPT_D34F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D34F]]
	fmt_str=func_name_array[UPT_D34F] .. format_strs[UPT_D34F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/patch_sys.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/patch_tra.o.i
format_strs[UPT_D680] = "PCM sw audio read iis data, write_ptr=%x"
field_strs[UPT_D680] = 1
func_name_array[UPT_D680] = ""

-- description function for UPT_D680	
function func_desc_UPT_D680(address, data)

	if not format_strs[UPT_D680] then
		format_strs[UPT_D680]="Not defined :0x%x"
		field_strs[UPT_D680]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D680]]
	fmt_str=func_name_array[UPT_D680] .. format_strs[UPT_D680] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D681] = "PCM sw audio write iis data, read_ptr=%x"
field_strs[UPT_D681] = 1
func_name_array[UPT_D681] = ""

-- description function for UPT_D681	
function func_desc_UPT_D681(address, data)

	if not format_strs[UPT_D681] then
		format_strs[UPT_D681]="Not defined :0x%x"
		field_strs[UPT_D681]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D681]]
	fmt_str=func_name_array[UPT_D681] .. format_strs[UPT_D681] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D682] = "PCM sw read data from fifo, write_ptr|read_ptr=%x"
field_strs[UPT_D682] = 1
func_name_array[UPT_D682] = ""

-- description function for UPT_D682	
function func_desc_UPT_D682(address, data)

	if not format_strs[UPT_D682] then
		format_strs[UPT_D682]="Not defined :0x%x"
		field_strs[UPT_D682]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D682]]
	fmt_str=func_name_array[UPT_D682] .. format_strs[UPT_D682] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D683] = "PCM sw write data to fifo, write_ptr|read_ptr=%x"
field_strs[UPT_D683] = 1
func_name_array[UPT_D683] = ""

-- description function for UPT_D683	
function func_desc_UPT_D683(address, data)

	if not format_strs[UPT_D683] then
		format_strs[UPT_D683]="Not defined :0x%x"
		field_strs[UPT_D683]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D683]]
	fmt_str=func_name_array[UPT_D683] .. format_strs[UPT_D683] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D82B] = "A2dp chopping point, Host sent a2dp data delta time is %d slots"
field_strs[UPT_D82B] = 1
func_name_array[UPT_D82B] = ""

-- description function for UPT_D82B	
function func_desc_UPT_D82B(address, data)

	if not format_strs[UPT_D82B] then
		format_strs[UPT_D82B]="Not defined :0x%x"
		field_strs[UPT_D82B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D82B]]
	fmt_str=func_name_array[UPT_D82B] .. format_strs[UPT_D82B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D820] = "EnQ,q_type:%d pending_commits:%d"
field_strs[UPT_D820] = 2
func_name_array[UPT_D820] = ""

-- description function for UPT_D820	
function func_desc_UPT_D820(address, data)

	if not format_strs[UPT_D820] then
		format_strs[UPT_D820]="Not defined :0x%x"
		field_strs[UPT_D820]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D820]]
	fmt_str=func_name_array[UPT_D820] .. format_strs[UPT_D820] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D821] = "EnQ,device_index:%d num_entries:%d"
field_strs[UPT_D821] = 2
func_name_array[UPT_D821] = ""

-- description function for UPT_D821	
function func_desc_UPT_D821(address, data)

	if not format_strs[UPT_D821] then
		format_strs[UPT_D821]="Not defined :0x%x"
		field_strs[UPT_D821]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D821]]
	fmt_str=func_name_array[UPT_D821] .. format_strs[UPT_D821] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D827] = "EnQ,length:%d tail_offset:%d"
field_strs[UPT_D827] = 2
func_name_array[UPT_D827] = ""

-- description function for UPT_D827	
function func_desc_UPT_D827(address, data)

	if not format_strs[UPT_D827] then
		format_strs[UPT_D827]="Not defined :0x%x"
		field_strs[UPT_D827]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D827]]
	fmt_str=func_name_array[UPT_D827] .. format_strs[UPT_D827] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D828] = "EnQ,desc_tail:%d head_offset:%d"
field_strs[UPT_D828] = 2
func_name_array[UPT_D828] = ""

-- description function for UPT_D828	
function func_desc_UPT_D828(address, data)

	if not format_strs[UPT_D828] then
		format_strs[UPT_D828]="Not defined :0x%x"
		field_strs[UPT_D828]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D828]]
	fmt_str=func_name_array[UPT_D828] .. format_strs[UPT_D828] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D83A] = "enqueue qd->data addr %x"
field_strs[UPT_D83A] = 1
func_name_array[UPT_D83A] = ""

-- description function for UPT_D83A	
function func_desc_UPT_D83A(address, data)

	if not format_strs[UPT_D83A] then
		format_strs[UPT_D83A]="Not defined :0x%x"
		field_strs[UPT_D83A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D83A]]
	fmt_str=func_name_array[UPT_D83A] .. format_strs[UPT_D83A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D838] = "error log,btq_enqueue length %d"
field_strs[UPT_D838] = 1
func_name_array[UPT_D838] = ""

-- description function for UPT_D838	
function func_desc_UPT_D838(address, data)

	if not format_strs[UPT_D838] then
		format_strs[UPT_D838]="Not defined :0x%x"
		field_strs[UPT_D838]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D838]]
	fmt_str=func_name_array[UPT_D838] .. format_strs[UPT_D838] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D83B] = "q->desc_head=%d"
field_strs[UPT_D83B] = 1
func_name_array[UPT_D83B] = ""

-- description function for UPT_D83B	
function func_desc_UPT_D83B(address, data)

	if not format_strs[UPT_D83B] then
		format_strs[UPT_D83B]="Not defined :0x%x"
		field_strs[UPT_D83B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D83B]]
	fmt_str=func_name_array[UPT_D83B] .. format_strs[UPT_D83B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D83C] = "qd->data(L16)=0x%x"
field_strs[UPT_D83C] = 1
func_name_array[UPT_D83C] = ""

-- description function for UPT_D83C	
function func_desc_UPT_D83C(address, data)

	if not format_strs[UPT_D83C] then
		format_strs[UPT_D83C]="Not defined :0x%x"
		field_strs[UPT_D83C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D83C]]
	fmt_str=func_name_array[UPT_D83C] .. format_strs[UPT_D83C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/pcm_drv.o.i
format_strs[UPT_D603] = "PCM_DMARx_CallBack,p_qD_data_ptr=%x"
field_strs[UPT_D603] = 1
func_name_array[UPT_D603] = ""

-- description function for UPT_D603	
function func_desc_UPT_D603(address, data)

	if not format_strs[UPT_D603] then
		format_strs[UPT_D603]="Not defined :0x%x"
		field_strs[UPT_D603]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D603]]
	fmt_str=func_name_array[UPT_D603] .. format_strs[UPT_D603] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D606] = "ERROR cannot find empty sco out buffer %x"
field_strs[UPT_D606] = 1
func_name_array[UPT_D606] = ""

-- description function for UPT_D606	
function func_desc_UPT_D606(address, data)

	if not format_strs[UPT_D606] then
		format_strs[UPT_D606]="Not defined :0x%x"
		field_strs[UPT_D606]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D606]]
	fmt_str=func_name_array[UPT_D606] .. format_strs[UPT_D606] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D600] = "Dispatch_Pending_SCO qd:%d,"
field_strs[UPT_D600] = 1
func_name_array[UPT_D600] = ""

-- description function for UPT_D600	
function func_desc_UPT_D600(address, data)

	if not format_strs[UPT_D600] then
		format_strs[UPT_D600]="Not defined :0x%x"
		field_strs[UPT_D600]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D600]]
	fmt_str=func_name_array[UPT_D600] .. format_strs[UPT_D600] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D604] = "Dispatch_Pending_SCO,tx_block_length=%x"
field_strs[UPT_D604] = 1
func_name_array[UPT_D604] = ""

-- description function for UPT_D604	
function func_desc_UPT_D604(address, data)

	if not format_strs[UPT_D604] then
		format_strs[UPT_D604]="Not defined :0x%x"
		field_strs[UPT_D604]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D604]]
	fmt_str=func_name_array[UPT_D604] .. format_strs[UPT_D604] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D605] = "TRAhcit_Dispatch_Pending_SCO,dma_tx_status=%x,SCO_IN_Q_num_entries=%x"
field_strs[UPT_D605] = 2
func_name_array[UPT_D605] = ""

-- description function for UPT_D605	
function func_desc_UPT_D605(address, data)

	if not format_strs[UPT_D605] then
		format_strs[UPT_D605]="Not defined :0x%x"
		field_strs[UPT_D605]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D605]]
	fmt_str=func_name_array[UPT_D605] .. format_strs[UPT_D605] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D611] = "TC_Get_PCM_Config,wbs_en=%x"
field_strs[UPT_D611] = 1
func_name_array[UPT_D611] = ""

-- description function for UPT_D611	
function func_desc_UPT_D611(address, data)

	if not format_strs[UPT_D611] then
		format_strs[UPT_D611]="Not defined :0x%x"
		field_strs[UPT_D611]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D611]]
	fmt_str=func_name_array[UPT_D611] .. format_strs[UPT_D611] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D612] = "TC_Get_PCM_Config,nv_117=%x"
field_strs[UPT_D612] = 1
func_name_array[UPT_D612] = ""

-- description function for UPT_D612	
function func_desc_UPT_D612(address, data)

	if not format_strs[UPT_D612] then
		format_strs[UPT_D612]="Not defined :0x%x"
		field_strs[UPT_D612]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D612]]
	fmt_str=func_name_array[UPT_D612] .. format_strs[UPT_D612] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D613] = "TC_Get_PCM_Config,nv_118=%x"
field_strs[UPT_D613] = 1
func_name_array[UPT_D613] = ""

-- description function for UPT_D613	
function func_desc_UPT_D613(address, data)

	if not format_strs[UPT_D613] then
		format_strs[UPT_D613]="Not defined :0x%x"
		field_strs[UPT_D613]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D613]]
	fmt_str=func_name_array[UPT_D613] .. format_strs[UPT_D613] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/sdio_bt.o.i
format_strs[UPT_DD21] = "cp2ap_mchn_init_info:%x"
field_strs[UPT_DD21] = 1
func_name_array[UPT_DD21] = ""

-- description function for UPT_DD21	
function func_desc_UPT_DD21(address, data)

	if not format_strs[UPT_DD21] then
		format_strs[UPT_DD21]="Not defined :0x%x"
		field_strs[UPT_DD21]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD21]]
	fmt_str=func_name_array[UPT_DD21] .. format_strs[UPT_DD21] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD22] = "ap2cp_mchn_init_info:%x"
field_strs[UPT_DD22] = 1
func_name_array[UPT_DD22] = ""

-- description function for UPT_DD22	
function func_desc_UPT_DD22(address, data)

	if not format_strs[UPT_DD22] then
		format_strs[UPT_DD22]="Not defined :0x%x"
		field_strs[UPT_DD22]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD22]]
	fmt_str=func_name_array[UPT_DD22] .. format_strs[UPT_DD22] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD23] = "ap2cp_init_mchn_push_link:%x"
field_strs[UPT_DD23] = 1
func_name_array[UPT_DD23] = ""

-- description function for UPT_DD23	
function func_desc_UPT_DD23(address, data)

	if not format_strs[UPT_DD23] then
		format_strs[UPT_DD23]="Not defined :0x%x"
		field_strs[UPT_DD23]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD23]]
	fmt_str=func_name_array[UPT_DD23] .. format_strs[UPT_DD23] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD24] = "dp_sdio_cp2ap_callback:channel %d, num %d"
field_strs[UPT_DD24] = 2
func_name_array[UPT_DD24] = ""

-- description function for UPT_DD24	
function func_desc_UPT_DD24(address, data)

	if not format_strs[UPT_DD24] then
		format_strs[UPT_DD24]="Not defined :0x%x"
		field_strs[UPT_DD24]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD24]]
	fmt_str=func_name_array[UPT_DD24] .. format_strs[UPT_DD24] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD25] = "cp2ap_init_mchn_push_link:%x"
field_strs[UPT_DD25] = 1
func_name_array[UPT_DD25] = ""

-- description function for UPT_DD25	
function func_desc_UPT_DD25(address, data)

	if not format_strs[UPT_DD25] then
		format_strs[UPT_DD25]="Not defined :0x%x"
		field_strs[UPT_DD25]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD25]]
	fmt_str=func_name_array[UPT_DD25] .. format_strs[UPT_DD25] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDD3] = "TRAhcit_SDIO_Transmit_DP:pkt_len=%x"
field_strs[UPT_DDD3] = 1
func_name_array[UPT_DDD3] = ""

-- description function for UPT_DDD3	
function func_desc_UPT_DDD3(address, data)

	if not format_strs[UPT_DDD3] then
		format_strs[UPT_DDD3]="Not defined :0x%x"
		field_strs[UPT_DDD3]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDD3]]
	fmt_str=func_name_array[UPT_DDD3] .. format_strs[UPT_DDD3] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DDD4] = "TRAhcit_SDIO_Transmit_DP:q_type_callback=&x,device_index_callback=%x"
field_strs[UPT_DDD4] = 1
func_name_array[UPT_DDD4] = ""

-- description function for UPT_DDD4	
function func_desc_UPT_DDD4(address, data)

	if not format_strs[UPT_DDD4] then
		format_strs[UPT_DDD4]="Not defined :0x%x"
		field_strs[UPT_DDD4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DDD4]]
	fmt_str=func_name_array[UPT_DDD4] .. format_strs[UPT_DDD4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/sys_atomic.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/sys_bt_aon.o.i
format_strs[UPT_D222] = "unused, pclint: %d"
field_strs[UPT_D222] = 1
func_name_array[UPT_D222] = ""

-- description function for UPT_D222	
function func_desc_UPT_D222(address, data)

	if not format_strs[UPT_D222] then
		format_strs[UPT_D222]="Not defined :0x%x"
		field_strs[UPT_D222]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D222]]
	fmt_str=func_name_array[UPT_D222] .. format_strs[UPT_D222] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/sys_comm.o.i
format_strs[UPT_D8A4] = "bt_normal_error file_id=%x"
field_strs[UPT_D8A4] = 1
func_name_array[UPT_D8A4] = ""

-- description function for UPT_D8A4	
function func_desc_UPT_D8A4(address, data)

	if not format_strs[UPT_D8A4] then
		format_strs[UPT_D8A4]="Not defined :0x%x"
		field_strs[UPT_D8A4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D8A4]]
	fmt_str=func_name_array[UPT_D8A4] .. format_strs[UPT_D8A4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D8A5] = "bt_normal_error line=%x"
field_strs[UPT_D8A5] = 1
func_name_array[UPT_D8A5] = ""

-- description function for UPT_D8A5	
function func_desc_UPT_D8A5(address, data)

	if not format_strs[UPT_D8A5] then
		format_strs[UPT_D8A5]="Not defined :0x%x"
		field_strs[UPT_D8A5]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D8A5]]
	fmt_str=func_name_array[UPT_D8A5] .. format_strs[UPT_D8A5] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D8B0] = "intra-offset:%d"
field_strs[UPT_D8B0] = 1
func_name_array[UPT_D8B0] = ""

-- description function for UPT_D8B0	
function func_desc_UPT_D8B0(address, data)

	if not format_strs[UPT_D8B0] then
		format_strs[UPT_D8B0]="Not defined :0x%x"
		field_strs[UPT_D8B0]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D8B0]]
	fmt_str=func_name_array[UPT_D8B0] .. format_strs[UPT_D8B0] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D8B1] = "tx_margin_check RF_CTRL SPI start:%d"
field_strs[UPT_D8B1] = 1
func_name_array[UPT_D8B1] = ""

-- description function for UPT_D8B1	
function func_desc_UPT_D8B1(address, data)

	if not format_strs[UPT_D8B1] then
		format_strs[UPT_D8B1]="Not defined :0x%x"
		field_strs[UPT_D8B1]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D8B1]]
	fmt_str=func_name_array[UPT_D8B1] .. format_strs[UPT_D8B1] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D8B2] = "tx_margin_check DP_ACC start:%d"
field_strs[UPT_D8B2] = 1
func_name_array[UPT_D8B2] = ""

-- description function for UPT_D8B2	
function func_desc_UPT_D8B2(address, data)

	if not format_strs[UPT_D8B2] then
		format_strs[UPT_D8B2]="Not defined :0x%x"
		field_strs[UPT_D8B2]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D8B2]]
	fmt_str=func_name_array[UPT_D8B2] .. format_strs[UPT_D8B2] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D8B3] = "tx_margin_check BB start:%d"
field_strs[UPT_D8B3] = 1
func_name_array[UPT_D8B3] = ""

-- description function for UPT_D8B3	
function func_desc_UPT_D8B3(address, data)

	if not format_strs[UPT_D8B3] then
		format_strs[UPT_D8B3]="Not defined :0x%x"
		field_strs[UPT_D8B3]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D8B3]]
	fmt_str=func_name_array[UPT_D8B3] .. format_strs[UPT_D8B3] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D8B4] = "rx_margin_check RF_CTRL SPI start:%d"
field_strs[UPT_D8B4] = 1
func_name_array[UPT_D8B4] = ""

-- description function for UPT_D8B4	
function func_desc_UPT_D8B4(address, data)

	if not format_strs[UPT_D8B4] then
		format_strs[UPT_D8B4]="Not defined :0x%x"
		field_strs[UPT_D8B4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D8B4]]
	fmt_str=func_name_array[UPT_D8B4] .. format_strs[UPT_D8B4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D8B5] = "rx_margin_check BB start:%d"
field_strs[UPT_D8B5] = 1
func_name_array[UPT_D8B5] = ""

-- description function for UPT_D8B5	
function func_desc_UPT_D8B5(address, data)

	if not format_strs[UPT_D8B5] then
		format_strs[UPT_D8B5]="Not defined :0x%x"
		field_strs[UPT_D8B5]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D8B5]]
	fmt_str=func_name_array[UPT_D8B5] .. format_strs[UPT_D8B5] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/sys_config.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/sys_config_impl.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/sys_init.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/sys_irq.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/sys_main.o.i
format_strs[UPT_D0B0] = "sys_main.c, super_ssp_enable=%d, ppkp_state=%d, local192_used=%d, local256_used=%d"
field_strs[UPT_D0B0] = 4
func_name_array[UPT_D0B0] = ""

-- description function for UPT_D0B0	
function func_desc_UPT_D0B0(address, data)

	if not format_strs[UPT_D0B0] then
		format_strs[UPT_D0B0]="Not defined :0x%x"
		field_strs[UPT_D0B0]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D0B0]]
	fmt_str=func_name_array[UPT_D0B0] .. format_strs[UPT_D0B0] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D802] = "generate new public private key cost %d clock"
field_strs[UPT_D802] = 1
func_name_array[UPT_D802] = ""

-- description function for UPT_D802	
function func_desc_UPT_D802(address, data)

	if not format_strs[UPT_D802] then
		format_strs[UPT_D802]="Not defined :0x%x"
		field_strs[UPT_D802]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D802]]
	fmt_str=func_name_array[UPT_D802] .. format_strs[UPT_D802] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D803] = "generate new public private key cost %d clock"
field_strs[UPT_D803] = 1
func_name_array[UPT_D803] = ""

-- description function for UPT_D803	
function func_desc_UPT_D803(address, data)

	if not format_strs[UPT_D803] then
		format_strs[UPT_D803]="Not defined :0x%x"
		field_strs[UPT_D803]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D803]]
	fmt_str=func_name_array[UPT_D803] .. format_strs[UPT_D803] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DCAA] = "BT svn reversion/date: %x"
field_strs[UPT_DCAA] = 1
func_name_array[UPT_DCAA] = ""

-- description function for UPT_DCAA	
function func_desc_UPT_DCAA(address, data)

	if not format_strs[UPT_DCAA] then
		format_strs[UPT_DCAA]="Not defined :0x%x"
		field_strs[UPT_DCAA]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DCAA]]
	fmt_str=func_name_array[UPT_DCAA] .. format_strs[UPT_DCAA] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D839] = "bt is enter sleep now:%d"
field_strs[UPT_D839] = 1
func_name_array[UPT_D839] = ""

-- description function for UPT_D839	
function func_desc_UPT_D839(address, data)

	if not format_strs[UPT_D839] then
		format_strs[UPT_D839]="Not defined :0x%x"
		field_strs[UPT_D839]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D839]]
	fmt_str=func_name_array[UPT_D839] .. format_strs[UPT_D839] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D80A] = "BT thread status:%d "
field_strs[UPT_D80A] = 1
func_name_array[UPT_D80A] = ""

-- description function for UPT_D80A	
function func_desc_UPT_D80A(address, data)

	if not format_strs[UPT_D80A] then
		format_strs[UPT_D80A]="Not defined :0x%x"
		field_strs[UPT_D80A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D80A]]
	fmt_str=func_name_array[UPT_D80A] .. format_strs[UPT_D80A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D800] = "psk cfg:bt_init_num:%d"
field_strs[UPT_D800] = 1
func_name_array[UPT_D800] = ""

-- description function for UPT_D800	
function func_desc_UPT_D800(address, data)

	if not format_strs[UPT_D800] then
		format_strs[UPT_D800]="Not defined :0x%x"
		field_strs[UPT_D800]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D800]]
	fmt_str=func_name_array[UPT_D800] .. format_strs[UPT_D800] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/sys_non_bt.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/sys_power.o.i
format_strs[UPT_D200] = "BT_Can_Sleep_flag=%x"
field_strs[UPT_D200] = 1
func_name_array[UPT_D200] = ""

-- description function for UPT_D200	
function func_desc_UPT_D200(address, data)

	if not format_strs[UPT_D200] then
		format_strs[UPT_D200]="Not defined :0x%x"
		field_strs[UPT_D200]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D200]]
	fmt_str=func_name_array[UPT_D200] .. format_strs[UPT_D200] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D207] = "BT_Sleep aux_timer_val=%x"
field_strs[UPT_D207] = 1
func_name_array[UPT_D207] = ""

-- description function for UPT_D207	
function func_desc_UPT_D207(address, data)

	if not format_strs[UPT_D207] then
		format_strs[UPT_D207]="Not defined :0x%x"
		field_strs[UPT_D207]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D207]]
	fmt_str=func_name_array[UPT_D207] .. format_strs[UPT_D207] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D201] = "syspwr_is_available_sleep_system_style=%x"
field_strs[UPT_D201] = 1
func_name_array[UPT_D201] = ""

-- description function for UPT_D201	
function func_desc_UPT_D201(address, data)

	if not format_strs[UPT_D201] then
		format_strs[UPT_D201]="Not defined :0x%x"
		field_strs[UPT_D201]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D201]]
	fmt_str=func_name_array[UPT_D201] .. format_strs[UPT_D201] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D230] = "%d"
field_strs[UPT_D230] = 1
func_name_array[UPT_D230] = ""

-- description function for UPT_D230	
function func_desc_UPT_D230(address, data)

	if not format_strs[UPT_D230] then
		format_strs[UPT_D230]="Not defined :0x%x"
		field_strs[UPT_D230]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D230]]
	fmt_str=func_name_array[UPT_D230] .. format_strs[UPT_D230] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D231] = "%d"
field_strs[UPT_D231] = 1
func_name_array[UPT_D231] = ""

-- description function for UPT_D231	
function func_desc_UPT_D231(address, data)

	if not format_strs[UPT_D231] then
		format_strs[UPT_D231]="Not defined :0x%x"
		field_strs[UPT_D231]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D231]]
	fmt_str=func_name_array[UPT_D231] .. format_strs[UPT_D231] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D204] = "BT_Sleep syspwr_low_power_mode_active_=%x"
field_strs[UPT_D204] = 1
func_name_array[UPT_D204] = ""

-- description function for UPT_D204	
function func_desc_UPT_D204(address, data)

	if not format_strs[UPT_D204] then
		format_strs[UPT_D204]="Not defined :0x%x"
		field_strs[UPT_D204]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D204]]
	fmt_str=func_name_array[UPT_D204] .. format_strs[UPT_D204] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D20C] = "BT_Sleep_To_System_Flag=%x"
field_strs[UPT_D20C] = 1
func_name_array[UPT_D20C] = ""

-- description function for UPT_D20C	
function func_desc_UPT_D20C(address, data)

	if not format_strs[UPT_D20C] then
		format_strs[UPT_D20C]="Not defined :0x%x"
		field_strs[UPT_D20C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D20C]]
	fmt_str=func_name_array[UPT_D20C] .. format_strs[UPT_D20C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D202] = "Sleep 32k cycle counter=%x"
field_strs[UPT_D202] = 1
func_name_array[UPT_D202] = ""

-- description function for UPT_D202	
function func_desc_UPT_D202(address, data)

	if not format_strs[UPT_D202] then
		format_strs[UPT_D202]="Not defined :0x%x"
		field_strs[UPT_D202]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D202]]
	fmt_str=func_name_array[UPT_D202] .. format_strs[UPT_D202] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D203] = "Sleep compensation integer part=%x"
field_strs[UPT_D203] = 1
func_name_array[UPT_D203] = ""

-- description function for UPT_D203	
function func_desc_UPT_D203(address, data)

	if not format_strs[UPT_D203] then
		format_strs[UPT_D203]="Not defined :0x%x"
		field_strs[UPT_D203]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D203]]
	fmt_str=func_name_array[UPT_D203] .. format_strs[UPT_D203] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D206] = "syspwr_handle_aux_wakeup status=%x"
field_strs[UPT_D206] = 1
func_name_array[UPT_D206] = ""

-- description function for UPT_D206	
function func_desc_UPT_D206(address, data)

	if not format_strs[UPT_D206] then
		format_strs[UPT_D206]="Not defined :0x%x"
		field_strs[UPT_D206]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D206]]
	fmt_str=func_name_array[UPT_D206] .. format_strs[UPT_D206] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D213] = "BT_Wakeup clk_comp_offset_value=%x"
field_strs[UPT_D213] = 1
func_name_array[UPT_D213] = ""

-- description function for UPT_D213	
function func_desc_UPT_D213(address, data)

	if not format_strs[UPT_D213] then
		format_strs[UPT_D213]="Not defined :0x%x"
		field_strs[UPT_D213]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D213]]
	fmt_str=func_name_array[UPT_D213] .. format_strs[UPT_D213] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D214] = "BT_Wakeup clk_comp_cnt_value=%x"
field_strs[UPT_D214] = 1
func_name_array[UPT_D214] = ""

-- description function for UPT_D214	
function func_desc_UPT_D214(address, data)

	if not format_strs[UPT_D214] then
		format_strs[UPT_D214]="Not defined :0x%x"
		field_strs[UPT_D214]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D214]]
	fmt_str=func_name_array[UPT_D214] .. format_strs[UPT_D214] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D218] = "bt_mcu_reqest: req_level=%d,last level=%d"
field_strs[UPT_D218] = 2
func_name_array[UPT_D218] = ""

-- description function for UPT_D218	
function func_desc_UPT_D218(address, data)

	if not format_strs[UPT_D218] then
		format_strs[UPT_D218]="Not defined :0x%x"
		field_strs[UPT_D218]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D218]]
	fmt_str=func_name_array[UPT_D218] .. format_strs[UPT_D218] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D219] = "bt_mcu_reqest: cur_level=%d,last_level=%d"
field_strs[UPT_D219] = 2
func_name_array[UPT_D219] = ""

-- description function for UPT_D219	
function func_desc_UPT_D219(address, data)

	if not format_strs[UPT_D219] then
		format_strs[UPT_D219]="Not defined :0x%x"
		field_strs[UPT_D219]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D219]]
	fmt_str=func_name_array[UPT_D219] .. format_strs[UPT_D219] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D21A] = "bt_mcu_requset_fsm:level=%d,status=%d"
field_strs[UPT_D21A] = 2
func_name_array[UPT_D21A] = ""

-- description function for UPT_D21A	
function func_desc_UPT_D21A(address, data)

	if not format_strs[UPT_D21A] then
		format_strs[UPT_D21A]="Not defined :0x%x"
		field_strs[UPT_D21A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D21A]]
	fmt_str=func_name_array[UPT_D21A] .. format_strs[UPT_D21A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/sys_rand_num_gen.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/sys_var.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/tc_cmd_disp.o.i
format_strs[UPT_DD14] = "Get CP2 Log: cp2_log_en=%x"
field_strs[UPT_DD14] = 1
func_name_array[UPT_DD14] = ""

-- description function for UPT_DD14	
function func_desc_UPT_DD14(address, data)

	if not format_strs[UPT_DD14] then
		format_strs[UPT_DD14]="Not defined :0x%x"
		field_strs[UPT_DD14]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD14]]
	fmt_str=func_name_array[UPT_DD14] .. format_strs[UPT_DD14] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD15] = "Set CP2 Log: cp2_log_en=%x"
field_strs[UPT_DD15] = 1
func_name_array[UPT_DD15] = ""

-- description function for UPT_DD15	
function func_desc_UPT_DD15(address, data)

	if not format_strs[UPT_DD15] then
		format_strs[UPT_DD15]="Not defined :0x%x"
		field_strs[UPT_DD15]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD15]]
	fmt_str=func_name_array[UPT_DD15] .. format_strs[UPT_DD15] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD16] = "Set Data Cap: data_cap_flag=%x"
field_strs[UPT_DD16] = 1
func_name_array[UPT_DD16] = ""

-- description function for UPT_DD16	
function func_desc_UPT_DD16(address, data)

	if not format_strs[UPT_DD16] then
		format_strs[UPT_DD16]="Not defined :0x%x"
		field_strs[UPT_DD16]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD16]]
	fmt_str=func_name_array[UPT_DD16] .. format_strs[UPT_DD16] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD17] = "TC_CMD: g_is_bt_open_flag=%x"
field_strs[UPT_DD17] = 1
func_name_array[UPT_DD17] = ""

-- description function for UPT_DD17	
function func_desc_UPT_DD17(address, data)

	if not format_strs[UPT_DD17] then
		format_strs[UPT_DD17]="Not defined :0x%x"
		field_strs[UPT_DD17]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD17]]
	fmt_str=func_name_array[UPT_DD17] .. format_strs[UPT_DD17] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D0B1] = "tc_cmd_disp.c, super_ssp_enable=%d"
field_strs[UPT_D0B1] = 1
func_name_array[UPT_D0B1] = ""

-- description function for UPT_D0B1	
function func_desc_UPT_D0B1(address, data)

	if not format_strs[UPT_D0B1] then
		format_strs[UPT_D0B1]="Not defined :0x%x"
		field_strs[UPT_D0B1]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D0B1]]
	fmt_str=func_name_array[UPT_D0B1] .. format_strs[UPT_D0B1] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D0B2] = "tc_cmd_disp.c, ppkp_state=%d"
field_strs[UPT_D0B2] = 1
func_name_array[UPT_D0B2] = ""

-- description function for UPT_D0B2	
function func_desc_UPT_D0B2(address, data)

	if not format_strs[UPT_D0B2] then
		format_strs[UPT_D0B2]="Not defined :0x%x"
		field_strs[UPT_D0B2]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D0B2]]
	fmt_str=func_name_array[UPT_D0B2] .. format_strs[UPT_D0B2] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D0B3] = "tc_cmd_disp.c, peer_pk_state=%d"
field_strs[UPT_D0B3] = 1
func_name_array[UPT_D0B3] = ""

-- description function for UPT_D0B3	
function func_desc_UPT_D0B3(address, data)

	if not format_strs[UPT_D0B3] then
		format_strs[UPT_D0B3]="Not defined :0x%x"
		field_strs[UPT_D0B3]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D0B3]]
	fmt_str=func_name_array[UPT_D0B3] .. format_strs[UPT_D0B3] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/tc_event_gen.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/tc_interface.o.i
format_strs[UPT_D090] = "TC_Write_Local_Hardware_Register,address=0x%x"
field_strs[UPT_D090] = 1
func_name_array[UPT_D090] = ""

-- description function for UPT_D090	
function func_desc_UPT_D090(address, data)

	if not format_strs[UPT_D090] then
		format_strs[UPT_D090]="Not defined :0x%x"
		field_strs[UPT_D090]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D090]]
	fmt_str=func_name_array[UPT_D090] .. format_strs[UPT_D090] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D091] = "TC_Write_Local_Hardware_Register,address=0x%x"
field_strs[UPT_D091] = 1
func_name_array[UPT_D091] = ""

-- description function for UPT_D091	
function func_desc_UPT_D091(address, data)

	if not format_strs[UPT_D091] then
		format_strs[UPT_D091]="Not defined :0x%x"
		field_strs[UPT_D091]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D091]]
	fmt_str=func_name_array[UPT_D091] .. format_strs[UPT_D091] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD19] = "TC_Le_Tx_Testmode_Set_Power:g_temp_PowerWord=%x"
field_strs[UPT_DD19] = 1
func_name_array[UPT_DD19] = ""

-- description function for UPT_DD19	
function func_desc_UPT_DD19(address, data)

	if not format_strs[UPT_DD19] then
		format_strs[UPT_DD19]="Not defined :0x%x"
		field_strs[UPT_DD19]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD19]]
	fmt_str=func_name_array[UPT_DD19] .. format_strs[UPT_DD19] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD1A] = "TC_Set_Le_Nonsig_Rx_Get_Data:BTtst_Get_DUT_Mode=%x"
field_strs[UPT_DD1A] = 1
func_name_array[UPT_DD1A] = ""

-- description function for UPT_DD1A	
function func_desc_UPT_DD1A(address, data)

	if not format_strs[UPT_DD1A] then
		format_strs[UPT_DD1A]="Not defined :0x%x"
		field_strs[UPT_DD1A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD1A]]
	fmt_str=func_name_array[UPT_DD1A] .. format_strs[UPT_DD1A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD1B] = "TC_Set_Le_Nonsig_Rx_Get_Data:rx_gain=%x"
field_strs[UPT_DD1B] = 1
func_name_array[UPT_DD1B] = ""

-- description function for UPT_DD1B	
function func_desc_UPT_DD1B(address, data)

	if not format_strs[UPT_DD1B] then
		format_strs[UPT_DD1B]="Not defined :0x%x"
		field_strs[UPT_DD1B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD1B]]
	fmt_str=func_name_array[UPT_DD1B] .. format_strs[UPT_DD1B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD1C] = "TC_Set_Le_Nonsig_Rx_Get_Data:raw_rssi=%x"
field_strs[UPT_DD1C] = 1
func_name_array[UPT_DD1C] = ""

-- description function for UPT_DD1C	
function func_desc_UPT_DD1C(address, data)

	if not format_strs[UPT_DD1C] then
		format_strs[UPT_DD1C]="Not defined :0x%x"
		field_strs[UPT_DD1C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD1C]]
	fmt_str=func_name_array[UPT_DD1C] .. format_strs[UPT_DD1C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD1D] = "TC_Set_Sig_Testmode_Rx_Get_Rssi:rx_gain=%x"
field_strs[UPT_DD1D] = 1
func_name_array[UPT_DD1D] = ""

-- description function for UPT_DD1D	
function func_desc_UPT_DD1D(address, data)

	if not format_strs[UPT_DD1D] then
		format_strs[UPT_DD1D]="Not defined :0x%x"
		field_strs[UPT_DD1D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD1D]]
	fmt_str=func_name_array[UPT_DD1D] .. format_strs[UPT_DD1D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_DD1E] = "TC_Dut_Tx_Testmode_Set_Power:g_temp_PowerWord=%x"
field_strs[UPT_DD1E] = 1
func_name_array[UPT_DD1E] = ""

-- description function for UPT_DD1E	
function func_desc_UPT_DD1E(address, data)

	if not format_strs[UPT_DD1E] then
		format_strs[UPT_DD1E]="Not defined :0x%x"
		field_strs[UPT_DD1E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_DD1E]]
	fmt_str=func_name_array[UPT_DD1E] .. format_strs[UPT_DD1E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/tra_combined.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/tra_hcit.o.i
format_strs[UPT_D804] = "no ble connection for handle: 0x%x"
field_strs[UPT_D804] = 1
func_name_array[UPT_D804] = ""

-- description function for UPT_D804	
function func_desc_UPT_D804(address, data)

	if not format_strs[UPT_D804] then
		format_strs[UPT_D804]="Not defined :0x%x"
		field_strs[UPT_D804]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D804]]
	fmt_str=func_name_array[UPT_D804] .. format_strs[UPT_D804] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D805] = "no scan enable, g_sleep_enable: %d"
field_strs[UPT_D805] = 1
func_name_array[UPT_D805] = ""

-- description function for UPT_D805	
function func_desc_UPT_D805(address, data)

	if not format_strs[UPT_D805] then
		format_strs[UPT_D805]="Not defined :0x%x"
		field_strs[UPT_D805]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D805]]
	fmt_str=func_name_array[UPT_D805] .. format_strs[UPT_D805] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D808] = "send event:No lmp link for device_index:%d"
field_strs[UPT_D808] = 1
func_name_array[UPT_D808] = ""

-- description function for UPT_D808	
function func_desc_UPT_D808(address, data)

	if not format_strs[UPT_D808] then
		format_strs[UPT_D808]="Not defined :0x%x"
		field_strs[UPT_D808]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D808]]
	fmt_str=func_name_array[UPT_D808] .. format_strs[UPT_D808] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/tra_queue.o.i
format_strs[UPT_D830] = "allocte header ok, next_free_pointer:%d"
field_strs[UPT_D830] = 1
func_name_array[UPT_D830] = ""

-- description function for UPT_D830	
function func_desc_UPT_D830(address, data)

	if not format_strs[UPT_D830] then
		format_strs[UPT_D830]="Not defined :0x%x"
		field_strs[UPT_D830]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D830]]
	fmt_str=func_name_array[UPT_D830] .. format_strs[UPT_D830] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D835] = "allocte header ok, allocate data addr %x"
field_strs[UPT_D835] = 1
func_name_array[UPT_D835] = ""

-- description function for UPT_D835	
function func_desc_UPT_D835(address, data)

	if not format_strs[UPT_D835] then
		format_strs[UPT_D835]="Not defined :0x%x"
		field_strs[UPT_D835]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D835]]
	fmt_str=func_name_array[UPT_D835] .. format_strs[UPT_D835] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D826] = "can not alloc header,next_free_pointer:%d"
field_strs[UPT_D826] = 1
func_name_array[UPT_D826] = ""

-- description function for UPT_D826	
function func_desc_UPT_D826(address, data)

	if not format_strs[UPT_D826] then
		format_strs[UPT_D826]="Not defined :0x%x"
		field_strs[UPT_D826]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D826]]
	fmt_str=func_name_array[UPT_D826] .. format_strs[UPT_D826] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D829] = "can not alloc header,length:%d"
field_strs[UPT_D829] = 1
func_name_array[UPT_D829] = ""

-- description function for UPT_D829	
function func_desc_UPT_D829(address, data)

	if not format_strs[UPT_D829] then
		format_strs[UPT_D829]="Not defined :0x%x"
		field_strs[UPT_D829]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D829]]
	fmt_str=func_name_array[UPT_D829] .. format_strs[UPT_D829] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D82A] = "deallocte header, next_free_pointer:%d"
field_strs[UPT_D82A] = 1
func_name_array[UPT_D82A] = ""

-- description function for UPT_D82A	
function func_desc_UPT_D82A(address, data)

	if not format_strs[UPT_D82A] then
		format_strs[UPT_D82A]="Not defined :0x%x"
		field_strs[UPT_D82A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D82A]]
	fmt_str=func_name_array[UPT_D82A] .. format_strs[UPT_D82A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D836] = "allocte header ok, allocate data addr %x"
field_strs[UPT_D836] = 1
func_name_array[UPT_D836] = ""

-- description function for UPT_D836	
function func_desc_UPT_D836(address, data)

	if not format_strs[UPT_D836] then
		format_strs[UPT_D836]="Not defined :0x%x"
		field_strs[UPT_D836]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D836]]
	fmt_str=func_name_array[UPT_D836] .. format_strs[UPT_D836] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D810] = "SCO IN enq,pending_commits:%d num_entries:%d"
field_strs[UPT_D810] = 2
func_name_array[UPT_D810] = ""

-- description function for UPT_D810	
function func_desc_UPT_D810(address, data)

	if not format_strs[UPT_D810] then
		format_strs[UPT_D810]="Not defined :0x%x"
		field_strs[UPT_D810]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D810]]
	fmt_str=func_name_array[UPT_D810] .. format_strs[UPT_D810] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D811] = "MSBC_WAITING_FIRST_PKT: data ptr: 0x%x"
field_strs[UPT_D811] = 1
func_name_array[UPT_D811] = ""

-- description function for UPT_D811	
function func_desc_UPT_D811(address, data)

	if not format_strs[UPT_D811] then
		format_strs[UPT_D811]="Not defined :0x%x"
		field_strs[UPT_D811]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D811]]
	fmt_str=func_name_array[UPT_D811] .. format_strs[UPT_D811] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D812] = "MSBC_WAITING_SECOND_PKT: data ptr: 0x%x"
field_strs[UPT_D812] = 1
func_name_array[UPT_D812] = ""

-- description function for UPT_D812	
function func_desc_UPT_D812(address, data)

	if not format_strs[UPT_D812] then
		format_strs[UPT_D812]="Not defined :0x%x"
		field_strs[UPT_D812]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D812]]
	fmt_str=func_name_array[UPT_D812] .. format_strs[UPT_D812] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D813] = "MSBC_EV3_FIRST_PKT: data ptr: 0x%x"
field_strs[UPT_D813] = 1
func_name_array[UPT_D813] = ""

-- description function for UPT_D813	
function func_desc_UPT_D813(address, data)

	if not format_strs[UPT_D813] then
		format_strs[UPT_D813]="Not defined :0x%x"
		field_strs[UPT_D813]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D813]]
	fmt_str=func_name_array[UPT_D813] .. format_strs[UPT_D813] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D814] = "return qd data ptr: 0x%x"
field_strs[UPT_D814] = 1
func_name_array[UPT_D814] = ""

-- description function for UPT_D814	
function func_desc_UPT_D814(address, data)

	if not format_strs[UPT_D814] then
		format_strs[UPT_D814]="Not defined :0x%x"
		field_strs[UPT_D814]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D814]]
	fmt_str=func_name_array[UPT_D814] .. format_strs[UPT_D814] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D815] = "ack last sco in: data ptr: 0x%x"
field_strs[UPT_D815] = 1
func_name_array[UPT_D815] = ""

-- description function for UPT_D815	
function func_desc_UPT_D815(address, data)

	if not format_strs[UPT_D815] then
		format_strs[UPT_D815]="Not defined :0x%x"
		field_strs[UPT_D815]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D815]]
	fmt_str=func_name_array[UPT_D815] .. format_strs[UPT_D815] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D816] = "CVSD: data ptr: 0x%x"
field_strs[UPT_D816] = 1
func_name_array[UPT_D816] = ""

-- description function for UPT_D816	
function func_desc_UPT_D816(address, data)

	if not format_strs[UPT_D816] then
		format_strs[UPT_D816]="Not defined :0x%x"
		field_strs[UPT_D816]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D816]]
	fmt_str=func_name_array[UPT_D816] .. format_strs[UPT_D816] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D822] = "MSBC: data ptr: 0x%x"
field_strs[UPT_D822] = 1
func_name_array[UPT_D822] = ""

-- description function for UPT_D822	
function func_desc_UPT_D822(address, data)

	if not format_strs[UPT_D822] then
		format_strs[UPT_D822]="Not defined :0x%x"
		field_strs[UPT_D822]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D822]]
	fmt_str=func_name_array[UPT_D822] .. format_strs[UPT_D822] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D833] = "next_sco_buffer_addr: 0x%x"
field_strs[UPT_D833] = 1
func_name_array[UPT_D833] = ""

-- description function for UPT_D833	
function func_desc_UPT_D833(address, data)

	if not format_strs[UPT_D833] then
		format_strs[UPT_D833]="Not defined :0x%x"
		field_strs[UPT_D833]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D833]]
	fmt_str=func_name_array[UPT_D833] .. format_strs[UPT_D833] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D837] = "esco state %d"
field_strs[UPT_D837] = 1
func_name_array[UPT_D837] = ""

-- description function for UPT_D837	
function func_desc_UPT_D837(address, data)

	if not format_strs[UPT_D837] then
		format_strs[UPT_D837]="Not defined :0x%x"
		field_strs[UPT_D837]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D837]]
	fmt_str=func_name_array[UPT_D837] .. format_strs[UPT_D837] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D82C] = "Q LE reset index:%d"
field_strs[UPT_D82C] = 1
func_name_array[UPT_D82C] = ""

-- description function for UPT_D82C	
function func_desc_UPT_D82C(address, data)

	if not format_strs[UPT_D82C] then
		format_strs[UPT_D82C]="Not defined :0x%x"
		field_strs[UPT_D82C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D82C]]
	fmt_str=func_name_array[UPT_D82C] .. format_strs[UPT_D82C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D817] = "EnQ,desc_tail:%d desc_head:%d"
field_strs[UPT_D817] = 2
func_name_array[UPT_D817] = ""

-- description function for UPT_D817	
function func_desc_UPT_D817(address, data)

	if not format_strs[UPT_D817] then
		format_strs[UPT_D817]="Not defined :0x%x"
		field_strs[UPT_D817]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D817]]
	fmt_str=func_name_array[UPT_D817] .. format_strs[UPT_D817] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D825] = "btq_commit q_type=%d failed, q_num_entries=%"
field_strs[UPT_D825] = 2
func_name_array[UPT_D825] = ""

-- description function for UPT_D825	
function func_desc_UPT_D825(address, data)

	if not format_strs[UPT_D825] then
		format_strs[UPT_D825]="Not defined :0x%x"
		field_strs[UPT_D825]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D825]]
	fmt_str=func_name_array[UPT_D825] .. format_strs[UPT_D825] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D823] = "CommitQ,q_type:%d pending_commits:%d"
field_strs[UPT_D823] = 2
func_name_array[UPT_D823] = ""

-- description function for UPT_D823	
function func_desc_UPT_D823(address, data)

	if not format_strs[UPT_D823] then
		format_strs[UPT_D823]="Not defined :0x%x"
		field_strs[UPT_D823]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D823]]
	fmt_str=func_name_array[UPT_D823] .. format_strs[UPT_D823] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D824] = "CommitQ,device_index:%d num_entries:%d"
field_strs[UPT_D824] = 2
func_name_array[UPT_D824] = ""

-- description function for UPT_D824	
function func_desc_UPT_D824(address, data)

	if not format_strs[UPT_D824] then
		format_strs[UPT_D824]="Not defined :0x%x"
		field_strs[UPT_D824]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D824]]
	fmt_str=func_name_array[UPT_D824] .. format_strs[UPT_D824] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D819] = "write data ptr: 0x%x"
field_strs[UPT_D819] = 1
func_name_array[UPT_D819] = ""

-- description function for UPT_D819	
function func_desc_UPT_D819(address, data)

	if not format_strs[UPT_D819] then
		format_strs[UPT_D819]="Not defined :0x%x"
		field_strs[UPT_D819]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D819]]
	fmt_str=func_name_array[UPT_D819] .. format_strs[UPT_D819] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D81A] = "error data ptr: 0x%x"
field_strs[UPT_D81A] = 1
func_name_array[UPT_D81A] = ""

-- description function for UPT_D81A	
function func_desc_UPT_D81A(address, data)

	if not format_strs[UPT_D81A] then
		format_strs[UPT_D81A]="Not defined :0x%x"
		field_strs[UPT_D81A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D81A]]
	fmt_str=func_name_array[UPT_D81A] .. format_strs[UPT_D81A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D81B] = "data ptr: 0x%x"
field_strs[UPT_D81B] = 1
func_name_array[UPT_D81B] = ""

-- description function for UPT_D81B	
function func_desc_UPT_D81B(address, data)

	if not format_strs[UPT_D81B] then
		format_strs[UPT_D81B]="Not defined :0x%x"
		field_strs[UPT_D81B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D81B]]
	fmt_str=func_name_array[UPT_D81B] .. format_strs[UPT_D81B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D81C] = "data ptr: 0x%x"
field_strs[UPT_D81C] = 1
func_name_array[UPT_D81C] = ""

-- description function for UPT_D81C	
function func_desc_UPT_D81C(address, data)

	if not format_strs[UPT_D81C] then
		format_strs[UPT_D81C]="Not defined :0x%x"
		field_strs[UPT_D81C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D81C]]
	fmt_str=func_name_array[UPT_D81C] .. format_strs[UPT_D81C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D81D] = "data ptr: 0x%x"
field_strs[UPT_D81D] = 1
func_name_array[UPT_D81D] = ""

-- description function for UPT_D81D	
function func_desc_UPT_D81D(address, data)

	if not format_strs[UPT_D81D] then
		format_strs[UPT_D81D]="Not defined :0x%x"
		field_strs[UPT_D81D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D81D]]
	fmt_str=func_name_array[UPT_D81D] .. format_strs[UPT_D81D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D81E] = "SCO_IN_Q,data ptr: 0x%x"
field_strs[UPT_D81E] = 1
func_name_array[UPT_D81E] = ""

-- description function for UPT_D81E	
function func_desc_UPT_D81E(address, data)

	if not format_strs[UPT_D81E] then
		format_strs[UPT_D81E]="Not defined :0x%x"
		field_strs[UPT_D81E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D81E]]
	fmt_str=func_name_array[UPT_D81E] .. format_strs[UPT_D81E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D81F] = "for SCO_IN_Q,data ptr: 0x%x"
field_strs[UPT_D81F] = 1
func_name_array[UPT_D81F] = ""

-- description function for UPT_D81F	
function func_desc_UPT_D81F(address, data)

	if not format_strs[UPT_D81F] then
		format_strs[UPT_D81F]="Not defined :0x%x"
		field_strs[UPT_D81F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D81F]]
	fmt_str=func_name_array[UPT_D81F] .. format_strs[UPT_D81F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D818] = "for SCO_OUT_Q,data ptr: 0x%x"
field_strs[UPT_D818] = 1
func_name_array[UPT_D818] = ""

-- description function for UPT_D818	
function func_desc_UPT_D818(address, data)

	if not format_strs[UPT_D818] then
		format_strs[UPT_D818]="Not defined :0x%x"
		field_strs[UPT_D818]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D818]]
	fmt_str=func_name_array[UPT_D818] .. format_strs[UPT_D818] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D82D] = "packet_type_length:%d"
field_strs[UPT_D82D] = 1
func_name_array[UPT_D82D] = ""

-- description function for UPT_D82D	
function func_desc_UPT_D82D(address, data)

	if not format_strs[UPT_D82D] then
		format_strs[UPT_D82D]="Not defined :0x%x"
		field_strs[UPT_D82D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D82D]]
	fmt_str=func_name_array[UPT_D82D] .. format_strs[UPT_D82D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D82E] = "qd->length:%d"
field_strs[UPT_D82E] = 1
func_name_array[UPT_D82E] = ""

-- description function for UPT_D82E	
function func_desc_UPT_D82E(address, data)

	if not format_strs[UPT_D82E] then
		format_strs[UPT_D82E]="Not defined :0x%x"
		field_strs[UPT_D82E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D82E]]
	fmt_str=func_name_array[UPT_D82E] .. format_strs[UPT_D82E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D82F] = "qd->length:%d"
field_strs[UPT_D82F] = 1
func_name_array[UPT_D82F] = ""

-- description function for UPT_D82F	
function func_desc_UPT_D82F(address, data)

	if not format_strs[UPT_D82F] then
		format_strs[UPT_D82F]="Not defined :0x%x"
		field_strs[UPT_D82F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D82F]]
	fmt_str=func_name_array[UPT_D82F] .. format_strs[UPT_D82F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D831] = "msbc_conversion_status:%d"
field_strs[UPT_D831] = 1
func_name_array[UPT_D831] = ""

-- description function for UPT_D831	
function func_desc_UPT_D831(address, data)

	if not format_strs[UPT_D831] then
		format_strs[UPT_D831]="Not defined :0x%x"
		field_strs[UPT_D831]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D831]]
	fmt_str=func_name_array[UPT_D831] .. format_strs[UPT_D831] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D832] = "q_type:%d,num_entries:%d"
field_strs[UPT_D832] = 2
func_name_array[UPT_D832] = ""

-- description function for UPT_D832	
function func_desc_UPT_D832(address, data)

	if not format_strs[UPT_D832] then
		format_strs[UPT_D832]="Not defined :0x%x"
		field_strs[UPT_D832]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D832]]
	fmt_str=func_name_array[UPT_D832] .. format_strs[UPT_D832] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D834] = "tail_offset:%d"
field_strs[UPT_D834] = 1
func_name_array[UPT_D834] = ""

-- description function for UPT_D834	
function func_desc_UPT_D834(address, data)

	if not format_strs[UPT_D834] then
		format_strs[UPT_D834]="Not defined :0x%x"
		field_strs[UPT_D834]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D834]]
	fmt_str=func_name_array[UPT_D834] .. format_strs[UPT_D834] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/tra_uart.o.i
format_strs[UPT_D80D] = "send scan enable event: is_ssp_need_calc: 0xff->0x%x"
field_strs[UPT_D80D] = 1
func_name_array[UPT_D80D] = ""

-- description function for UPT_D80D	
function func_desc_UPT_D80D(address, data)

	if not format_strs[UPT_D80D] then
		format_strs[UPT_D80D]="Not defined :0x%x"
		field_strs[UPT_D80D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D80D]]
	fmt_str=func_name_array[UPT_D80D] .. format_strs[UPT_D80D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D80E] = "send scan enable event: is_ssp_need_calc: 0xff->0x%x"
field_strs[UPT_D80E] = 1
func_name_array[UPT_D80E] = ""

-- description function for UPT_D80E	
function func_desc_UPT_D80E(address, data)

	if not format_strs[UPT_D80E] then
		format_strs[UPT_D80E]="Not defined :0x%x"
		field_strs[UPT_D80E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D80E]]
	fmt_str=func_name_array[UPT_D80E] .. format_strs[UPT_D80E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D80F] = "rx cmd, ch=0x%x"
field_strs[UPT_D80F] = 1
func_name_array[UPT_D80F] = ""

-- description function for UPT_D80F	
function func_desc_UPT_D80F(address, data)

	if not format_strs[UPT_D80F] then
		format_strs[UPT_D80F]="Not defined :0x%x"
		field_strs[UPT_D80F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D80F]]
	fmt_str=func_name_array[UPT_D80F] .. format_strs[UPT_D80F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/tra_usb.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/tra_var.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/uslc_common.o.i
format_strs[UPT_D130] = "sniff anchor found clk is 0x%x"
field_strs[UPT_D130] = 1
func_name_array[UPT_D130] = ""

-- description function for UPT_D130	
function func_desc_UPT_D130(address, data)

	if not format_strs[UPT_D130] then
		format_strs[UPT_D130]="Not defined :0x%x"
		field_strs[UPT_D130]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D130]]
	fmt_str=func_name_array[UPT_D130] .. format_strs[UPT_D130] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D131] = "prepare acl tx irq is %d, device index is %d, tx_active is %d, tx lt_addr is %d"
field_strs[UPT_D131] = 4
func_name_array[UPT_D131] = ""

-- description function for UPT_D131	
function func_desc_UPT_D131(address, data)

	if not format_strs[UPT_D131] then
		format_strs[UPT_D131]="Not defined :0x%x"
		field_strs[UPT_D131]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D131]]
	fmt_str=func_name_array[UPT_D131] .. format_strs[UPT_D131] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D132] = "prepare acl rx irq is %d, device index is %d, rx_active is %d, rx am_addr is %d"
field_strs[UPT_D132] = 4
func_name_array[UPT_D132] = ""

-- description function for UPT_D132	
function func_desc_UPT_D132(address, data)

	if not format_strs[UPT_D132] then
		format_strs[UPT_D132]="Not defined :0x%x"
		field_strs[UPT_D132]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D132]]
	fmt_str=func_name_array[UPT_D132] .. format_strs[UPT_D132] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D133] = "prepare sniff rx irq is %d, decive index is %d, rx_active is %d, reserved is %d"
field_strs[UPT_D133] = 4
func_name_array[UPT_D133] = ""

-- description function for UPT_D133	
function func_desc_UPT_D133(address, data)

	if not format_strs[UPT_D133] then
		format_strs[UPT_D133]="Not defined :0x%x"
		field_strs[UPT_D133]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D133]]
	fmt_str=func_name_array[UPT_D133] .. format_strs[UPT_D133] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D134] = "prepare sniff tx irq is %d, device index is %d, tx_active is %d, reserved is %d"
field_strs[UPT_D134] = 4
func_name_array[UPT_D134] = ""

-- description function for UPT_D134	
function func_desc_UPT_D134(address, data)

	if not format_strs[UPT_D134] then
		format_strs[UPT_D134]="Not defined :0x%x"
		field_strs[UPT_D134]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D134]]
	fmt_str=func_name_array[UPT_D134] .. format_strs[UPT_D134] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D135] = "prepare sco rx irq is %d, device index is %d, rx_active is %d, reserved %d"
field_strs[UPT_D135] = 4
func_name_array[UPT_D135] = ""

-- description function for UPT_D135	
function func_desc_UPT_D135(address, data)

	if not format_strs[UPT_D135] then
		format_strs[UPT_D135]="Not defined :0x%x"
		field_strs[UPT_D135]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D135]]
	fmt_str=func_name_array[UPT_D135] .. format_strs[UPT_D135] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D136] = "prepare sco tx irq is %d, device index is %d, tx_active is %d, reserved %d"
field_strs[UPT_D136] = 4
func_name_array[UPT_D136] = ""

-- description function for UPT_D136	
function func_desc_UPT_D136(address, data)

	if not format_strs[UPT_D136] then
		format_strs[UPT_D136]="Not defined :0x%x"
		field_strs[UPT_D136]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D136]]
	fmt_str=func_name_array[UPT_D136] .. format_strs[UPT_D136] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D15C] = "masterPageResponse prepared recv ID channel %d"
field_strs[UPT_D15C] = 1
func_name_array[UPT_D15C] = ""

-- description function for UPT_D15C	
function func_desc_UPT_D15C(address, data)

	if not format_strs[UPT_D15C] then
		format_strs[UPT_D15C]="Not defined :0x%x"
		field_strs[UPT_D15C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D15C]]
	fmt_str=func_name_array[UPT_D15C] .. format_strs[UPT_D15C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D15D] = "SlavePageResponse prepared recv FHS channel %d"
field_strs[UPT_D15D] = 1
func_name_array[UPT_D15D] = ""

-- description function for UPT_D15D	
function func_desc_UPT_D15D(address, data)

	if not format_strs[UPT_D15D] then
		format_strs[UPT_D15D]="Not defined :0x%x"
		field_strs[UPT_D15D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D15D]]
	fmt_str=func_name_array[UPT_D15D] .. format_strs[UPT_D15D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D137] = "current event is 0x%x, cross to event 0x%x, device index is %d, prepare done is %d"
field_strs[UPT_D137] = 4
func_name_array[UPT_D137] = ""

-- description function for UPT_D137	
function func_desc_UPT_D137(address, data)

	if not format_strs[UPT_D137] then
		format_strs[UPT_D137]="Not defined :0x%x"
		field_strs[UPT_D137]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D137]]
	fmt_str=func_name_array[UPT_D137] .. format_strs[UPT_D137] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D138] = "tx len slots is %d, tx_control %d"
field_strs[UPT_D138] = 2
func_name_array[UPT_D138] = ""

-- description function for UPT_D138	
function func_desc_UPT_D138(address, data)

	if not format_strs[UPT_D138] then
		format_strs[UPT_D138]="Not defined :0x%x"
		field_strs[UPT_D138]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D138]]
	fmt_str=func_name_array[UPT_D138] .. format_strs[UPT_D138] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D139] = "sniff event giveup, device index is %d"
field_strs[UPT_D139] = 1
func_name_array[UPT_D139] = ""

-- description function for UPT_D139	
function func_desc_UPT_D139(address, data)

	if not format_strs[UPT_D139] then
		format_strs[UPT_D139]="Not defined :0x%x"
		field_strs[UPT_D139]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D139]]
	fmt_str=func_name_array[UPT_D139] .. format_strs[UPT_D139] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D13A] = "acl event idle time is %d"
field_strs[UPT_D13A] = 1
func_name_array[UPT_D13A] = ""

-- description function for UPT_D13A	
function func_desc_UPT_D13A(address, data)

	if not format_strs[UPT_D13A] then
		format_strs[UPT_D13A]="Not defined :0x%x"
		field_strs[UPT_D13A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D13A]]
	fmt_str=func_name_array[UPT_D13A] .. format_strs[UPT_D13A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D13B] = "current event is 0x%x, event end itself due to %d"
field_strs[UPT_D13B] = 2
func_name_array[UPT_D13B] = ""

-- description function for UPT_D13B	
function func_desc_UPT_D13B(address, data)

	if not format_strs[UPT_D13B] then
		format_strs[UPT_D13B]="Not defined :0x%x"
		field_strs[UPT_D13B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D13B]]
	fmt_str=func_name_array[UPT_D13B] .. format_strs[UPT_D13B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D13E] = "original poll interval is %d, _LMpol_prev_slots_tx is %d"
field_strs[UPT_D13E] = 2
func_name_array[UPT_D13E] = ""

-- description function for UPT_D13E	
function func_desc_UPT_D13E(address, data)

	if not format_strs[UPT_D13E] then
		format_strs[UPT_D13E]="Not defined :0x%x"
		field_strs[UPT_D13E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D13E]]
	fmt_str=func_name_array[UPT_D13E] .. format_strs[UPT_D13E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/uslc_inquiry.o.i
format_strs[UPT_D120] = "inquiry_timer %d"
field_strs[UPT_D120] = 1
func_name_array[UPT_D120] = ""

-- description function for UPT_D120	
function func_desc_UPT_D120(address, data)

	if not format_strs[UPT_D120] then
		format_strs[UPT_D120]="Not defined :0x%x"
		field_strs[UPT_D120]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D120]]
	fmt_str=func_name_array[UPT_D120] .. format_strs[UPT_D120] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D121] = "update inquiry_timer %d "
field_strs[UPT_D121] = 1
func_name_array[UPT_D121] = ""

-- description function for UPT_D121	
function func_desc_UPT_D121(address, data)

	if not format_strs[UPT_D121] then
		format_strs[UPT_D121]="Not defined :0x%x"
		field_strs[UPT_D121]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D121]]
	fmt_str=func_name_array[UPT_D121] .. format_strs[UPT_D121] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D125 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D154] = "USLCinquiry_event_start inquiry state is %d, status is %d"
field_strs[UPT_D154] = 2
func_name_array[UPT_D154] = ""

-- description function for UPT_D154	
function func_desc_UPT_D154(address, data)

	if not format_strs[UPT_D154] then
		format_strs[UPT_D154]="Not defined :0x%x"
		field_strs[UPT_D154]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D154]]
	fmt_str=func_name_array[UPT_D154] .. format_strs[UPT_D154] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/uslc_inquiryscan.o.i
format_strs[UPT_D15B] = "fatal error on inqScan, device link = %d"
field_strs[UPT_D15B] = 1
func_name_array[UPT_D15B] = ""

-- description function for UPT_D15B	
function func_desc_UPT_D15B(address, data)

	if not format_strs[UPT_D15B] then
		format_strs[UPT_D15B]="Not defined :0x%x"
		field_strs[UPT_D15B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D15B]]
	fmt_str=func_name_array[UPT_D15B] .. format_strs[UPT_D15B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D126 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D13C] = "inquiry scan state is %d before activate timer"
field_strs[UPT_D13C] = 1
func_name_array[UPT_D13C] = ""

-- description function for UPT_D13C	
function func_desc_UPT_D13C(address, data)

	if not format_strs[UPT_D13C] then
		format_strs[UPT_D13C]="Not defined :0x%x"
		field_strs[UPT_D13C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D13C]]
	fmt_str=func_name_array[UPT_D13C] .. format_strs[UPT_D13C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/uslc_master_slave_switch.o.i
format_strs[UPT_D140] = "MSS device index %d"
field_strs[UPT_D140] = 1
func_name_array[UPT_D140] = ""

-- description function for UPT_D140	
function func_desc_UPT_D140(address, data)

	if not format_strs[UPT_D140] then
		format_strs[UPT_D140]="Not defined :0x%x"
		field_strs[UPT_D140]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D140]]
	fmt_str=func_name_array[UPT_D140] .. format_strs[UPT_D140] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D141] = "mss request slave to master, current bt clk=0x%x"
field_strs[UPT_D141] = 1
func_name_array[UPT_D141] = ""

-- description function for UPT_D141	
function func_desc_UPT_D141(address, data)

	if not format_strs[UPT_D141] then
		format_strs[UPT_D141]="Not defined :0x%x"
		field_strs[UPT_D141]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D141]]
	fmt_str=func_name_array[UPT_D141] .. format_strs[UPT_D141] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D142] = "mss request slave to master, current master clk=0x%x"
field_strs[UPT_D142] = 1
func_name_array[UPT_D142] = ""

-- description function for UPT_D142	
function func_desc_UPT_D142(address, data)

	if not format_strs[UPT_D142] then
		format_strs[UPT_D142]="Not defined :0x%x"
		field_strs[UPT_D142]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D142]]
	fmt_str=func_name_array[UPT_D142] .. format_strs[UPT_D142] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D143] = "am_addr allocate 0x%x 0x%x"
field_strs[UPT_D143] = 2
func_name_array[UPT_D143] = ""

-- description function for UPT_D143	
function func_desc_UPT_D143(address, data)

	if not format_strs[UPT_D143] then
		format_strs[UPT_D143]="Not defined :0x%x"
		field_strs[UPT_D143]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D143]]
	fmt_str=func_name_array[UPT_D143] .. format_strs[UPT_D143] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D144] = "am_addr free 0x%x 0x%x"
field_strs[UPT_D144] = 2
func_name_array[UPT_D144] = ""

-- description function for UPT_D144	
function func_desc_UPT_D144(address, data)

	if not format_strs[UPT_D144] then
		format_strs[UPT_D144]="Not defined :0x%x"
		field_strs[UPT_D144]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D144]]
	fmt_str=func_name_array[UPT_D144] .. format_strs[UPT_D144] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D145] = "reserved %d,piconet_clk_index %d,bt clock %d,piconet clock index %d"
field_strs[UPT_D145] = 4
func_name_array[UPT_D145] = ""

-- description function for UPT_D145	
function func_desc_UPT_D145(address, data)

	if not format_strs[UPT_D145] then
		format_strs[UPT_D145]="Not defined :0x%x"
		field_strs[UPT_D145]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D145]]
	fmt_str=func_name_array[UPT_D145] .. format_strs[UPT_D145] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D146] = "am_addr free 0x%x 0x%x"
field_strs[UPT_D146] = 2
func_name_array[UPT_D146] = ""

-- description function for UPT_D146	
function func_desc_UPT_D146(address, data)

	if not format_strs[UPT_D146] then
		format_strs[UPT_D146]="Not defined :0x%x"
		field_strs[UPT_D146]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D146]]
	fmt_str=func_name_array[UPT_D146] .. format_strs[UPT_D146] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D147] = "am_addr free 0x%x 0x%x"
field_strs[UPT_D147] = 2
func_name_array[UPT_D147] = ""

-- description function for UPT_D147	
function func_desc_UPT_D147(address, data)

	if not format_strs[UPT_D147] then
		format_strs[UPT_D147]="Not defined :0x%x"
		field_strs[UPT_D147]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D147]]
	fmt_str=func_name_array[UPT_D147] .. format_strs[UPT_D147] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D148] = "bt clk=%x"
field_strs[UPT_D148] = 1
func_name_array[UPT_D148] = ""

-- description function for UPT_D148	
function func_desc_UPT_D148(address, data)

	if not format_strs[UPT_D148] then
		format_strs[UPT_D148]="Not defined :0x%x"
		field_strs[UPT_D148]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D148]]
	fmt_str=func_name_array[UPT_D148] .. format_strs[UPT_D148] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D149] = "native clk=%x"
field_strs[UPT_D149] = 1
func_name_array[UPT_D149] = ""

-- description function for UPT_D149	
function func_desc_UPT_D149(address, data)

	if not format_strs[UPT_D149] then
		format_strs[UPT_D149]="Not defined :0x%x"
		field_strs[UPT_D149]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D149]]
	fmt_str=func_name_array[UPT_D149] .. format_strs[UPT_D149] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D127 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D14A] = "fatal error, plink=%d"
field_strs[UPT_D14A] = 1
func_name_array[UPT_D14A] = ""

-- description function for UPT_D14A	
function func_desc_UPT_D14A(address, data)

	if not format_strs[UPT_D14A] then
		format_strs[UPT_D14A]="Not defined :0x%x"
		field_strs[UPT_D14A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D14A]]
	fmt_str=func_name_array[UPT_D14A] .. format_strs[UPT_D14A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D14B] = "encrypt_paused = %d,encrypt_enable = %d"
field_strs[UPT_D14B] = 2
func_name_array[UPT_D14B] = ""

-- description function for UPT_D14B	
function func_desc_UPT_D14B(address, data)

	if not format_strs[UPT_D14B] then
		format_strs[UPT_D14B]="Not defined :0x%x"
		field_strs[UPT_D14B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D14B]]
	fmt_str=func_name_array[UPT_D14B] .. format_strs[UPT_D14B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D14C] = "LMch_Enable_L2CAP_Traffic %d"
field_strs[UPT_D14C] = 1
func_name_array[UPT_D14C] = ""

-- description function for UPT_D14C	
function func_desc_UPT_D14C(address, data)

	if not format_strs[UPT_D14C] then
		format_strs[UPT_D14C]="Not defined :0x%x"
		field_strs[UPT_D14C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D14C]]
	fmt_str=func_name_array[UPT_D14C] .. format_strs[UPT_D14C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D14D] = "mss error,device_index %d"
field_strs[UPT_D14D] = 1
func_name_array[UPT_D14D] = ""

-- description function for UPT_D14D	
function func_desc_UPT_D14D(address, data)

	if not format_strs[UPT_D14D] then
		format_strs[UPT_D14D]="Not defined :0x%x"
		field_strs[UPT_D14D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D14D]]
	fmt_str=func_name_array[UPT_D14D] .. format_strs[UPT_D14D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/uslc_page.o.i
-- UPT_D128 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D153] = "USLCpage_event_start page state is %d, status is %d"
field_strs[UPT_D153] = 2
func_name_array[UPT_D153] = ""

-- description function for UPT_D153	
function func_desc_UPT_D153(address, data)

	if not format_strs[UPT_D153] then
		format_strs[UPT_D153]="Not defined :0x%x"
		field_strs[UPT_D153]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D153]]
	fmt_str=func_name_array[UPT_D153] .. format_strs[UPT_D153] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/uslc_pagescan.o.i
format_strs[UPT_D122] = "AM_Address 0x%x"
field_strs[UPT_D122] = 1
func_name_array[UPT_D122] = ""

-- description function for UPT_D122	
function func_desc_UPT_D122(address, data)

	if not format_strs[UPT_D122] then
		format_strs[UPT_D122]="Not defined :0x%x"
		field_strs[UPT_D122]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D122]]
	fmt_str=func_name_array[UPT_D122] .. format_strs[UPT_D122] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D155] = "old bt clk before update clk_offset %d"
field_strs[UPT_D155] = 1
func_name_array[UPT_D155] = ""

-- description function for UPT_D155	
function func_desc_UPT_D155(address, data)

	if not format_strs[UPT_D155] then
		format_strs[UPT_D155]="Not defined :0x%x"
		field_strs[UPT_D155]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D155]]
	fmt_str=func_name_array[UPT_D155] .. format_strs[UPT_D155] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D156] = "old bt clk bit_counter before update clk_offset %d"
field_strs[UPT_D156] = 1
func_name_array[UPT_D156] = ""

-- description function for UPT_D156	
function func_desc_UPT_D156(address, data)

	if not format_strs[UPT_D156] then
		format_strs[UPT_D156]="Not defined :0x%x"
		field_strs[UPT_D156]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D156]]
	fmt_str=func_name_array[UPT_D156] .. format_strs[UPT_D156] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D157] = "new bt_clk after update clk_offset %d"
field_strs[UPT_D157] = 1
func_name_array[UPT_D157] = ""

-- description function for UPT_D157	
function func_desc_UPT_D157(address, data)

	if not format_strs[UPT_D157] then
		format_strs[UPT_D157]="Not defined :0x%x"
		field_strs[UPT_D157]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D157]]
	fmt_str=func_name_array[UPT_D157] .. format_strs[UPT_D157] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D158] = "new bit_counter after update clk_offset %d"
field_strs[UPT_D158] = 1
func_name_array[UPT_D158] = ""

-- description function for UPT_D158	
function func_desc_UPT_D158(address, data)

	if not format_strs[UPT_D158] then
		format_strs[UPT_D158]="Not defined :0x%x"
		field_strs[UPT_D158]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D158]]
	fmt_str=func_name_array[UPT_D158] .. format_strs[UPT_D158] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D159] = "bt clk offset %d"
field_strs[UPT_D159] = 1
func_name_array[UPT_D159] = ""

-- description function for UPT_D159	
function func_desc_UPT_D159(address, data)

	if not format_strs[UPT_D159] then
		format_strs[UPT_D159]="Not defined :0x%x"
		field_strs[UPT_D159]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D159]]
	fmt_str=func_name_array[UPT_D159] .. format_strs[UPT_D159] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D15A] = "bt intra_slot offset %d"
field_strs[UPT_D15A] = 1
func_name_array[UPT_D15A] = ""

-- description function for UPT_D15A	
function func_desc_UPT_D15A(address, data)

	if not format_strs[UPT_D15A] then
		format_strs[UPT_D15A]="Not defined :0x%x"
		field_strs[UPT_D15A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D15A]]
	fmt_str=func_name_array[UPT_D15A] .. format_strs[UPT_D15A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- UPT_D129 is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D13D] = "page scan state is %d before activate timer"
field_strs[UPT_D13D] = 1
func_name_array[UPT_D13D] = ""

-- description function for UPT_D13D	
function func_desc_UPT_D13D(address, data)

	if not format_strs[UPT_D13D] then
		format_strs[UPT_D13D]="Not defined :0x%x"
		field_strs[UPT_D13D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D13D]]
	fmt_str=func_name_array[UPT_D13D] .. format_strs[UPT_D13D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/uslc_park_master.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/uslc_park_slave.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/uslc_return_to_piconet.o.i
-- UPT_D12C is in dsp_description_fixed.lua, skip from here
format_strs[UPT_D12A] = "R2P search window = %d"
field_strs[UPT_D12A] = 1
func_name_array[UPT_D12A] = ""

-- description function for UPT_D12A	
function func_desc_UPT_D12A(address, data)

	if not format_strs[UPT_D12A] then
		format_strs[UPT_D12A]="Not defined :0x%x"
		field_strs[UPT_D12A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D12A]]
	fmt_str=func_name_array[UPT_D12A] .. format_strs[UPT_D12A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D12B] = "r2p start now, current clock bit_counter = %d"
field_strs[UPT_D12B] = 1
func_name_array[UPT_D12B] = ""

-- description function for UPT_D12B	
function func_desc_UPT_D12B(address, data)

	if not format_strs[UPT_D12B] then
		format_strs[UPT_D12B]="Not defined :0x%x"
		field_strs[UPT_D12B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D12B]]
	fmt_str=func_name_array[UPT_D12B] .. format_strs[UPT_D12B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D17C] = "r2p old_clk %d before compensate clock offset"
field_strs[UPT_D17C] = 1
func_name_array[UPT_D17C] = ""

-- description function for UPT_D17C	
function func_desc_UPT_D17C(address, data)

	if not format_strs[UPT_D17C] then
		format_strs[UPT_D17C]="Not defined :0x%x"
		field_strs[UPT_D17C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D17C]]
	fmt_str=func_name_array[UPT_D17C] .. format_strs[UPT_D17C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D17D] = "r2p_clk_offset %d in pkd_hdr, ceva clk offset %d(may be error value in muli-slot)"
field_strs[UPT_D17D] = 2
func_name_array[UPT_D17D] = ""

-- description function for UPT_D17D	
function func_desc_UPT_D17D(address, data)

	if not format_strs[UPT_D17D] then
		format_strs[UPT_D17D]="Not defined :0x%x"
		field_strs[UPT_D17D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D17D]]
	fmt_str=func_name_array[UPT_D17D] .. format_strs[UPT_D17D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D17E] = "r2p new_clk %d after compensate clock offset"
field_strs[UPT_D17E] = 1
func_name_array[UPT_D17E] = ""

-- description function for UPT_D17E	
function func_desc_UPT_D17E(address, data)

	if not format_strs[UPT_D17E] then
		format_strs[UPT_D17E]="Not defined :0x%x"
		field_strs[UPT_D17E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D17E]]
	fmt_str=func_name_array[UPT_D17E] .. format_strs[UPT_D17E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D12D] = "r2p rx packet status = %d"
field_strs[UPT_D12D] = 1
func_name_array[UPT_D12D] = ""

-- description function for UPT_D12D	
function func_desc_UPT_D12D(address, data)

	if not format_strs[UPT_D12D] then
		format_strs[UPT_D12D]="Not defined :0x%x"
		field_strs[UPT_D12D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D12D]]
	fmt_str=func_name_array[UPT_D12D] .. format_strs[UPT_D12D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D12E] = "r2p failed now, current bt clock 0x%x"
field_strs[UPT_D12E] = 1
func_name_array[UPT_D12E] = ""

-- description function for UPT_D12E	
function func_desc_UPT_D12E(address, data)

	if not format_strs[UPT_D12E] then
		format_strs[UPT_D12E]="Not defined :0x%x"
		field_strs[UPT_D12E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D12E]]
	fmt_str=func_name_array[UPT_D12E] .. format_strs[UPT_D12E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/uslc_switch_piconet.o.i
format_strs[UPT_D150] = "alloccated piconet_clk_index %d"
field_strs[UPT_D150] = 1
func_name_array[UPT_D150] = ""

-- description function for UPT_D150	
function func_desc_UPT_D150(address, data)

	if not format_strs[UPT_D150] then
		format_strs[UPT_D150]="Not defined :0x%x"
		field_strs[UPT_D150]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D150]]
	fmt_str=func_name_array[UPT_D150] .. format_strs[UPT_D150] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D151] = "free pclock : piconet_clk_pools %d, piconet_clk_index %d"
field_strs[UPT_D151] = 2
func_name_array[UPT_D151] = ""

-- description function for UPT_D151	
function func_desc_UPT_D151(address, data)

	if not format_strs[UPT_D151] then
		format_strs[UPT_D151]="Not defined :0x%x"
		field_strs[UPT_D151]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D151]]
	fmt_str=func_name_array[UPT_D151] .. format_strs[UPT_D151] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[UPT_D152] = "set Active Piconet index %d"
field_strs[UPT_D152] = 1
func_name_array[UPT_D152] = ""

-- description function for UPT_D152	
function func_desc_UPT_D152(address, data)

	if not format_strs[UPT_D152] then
		format_strs[UPT_D152]="Not defined :0x%x"
		field_strs[UPT_D152]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[UPT_D152]]
	fmt_str=func_name_array[UPT_D152] .. format_strs[UPT_D152] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/uslc_testmode.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/bt_controller/utrace_dsp_log.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/coex_arbi.o.i
format_strs[COEX_TP_D4EA] = "coex bt int service routine time: 0x%x"
field_strs[COEX_TP_D4EA] = 1
func_name_array[COEX_TP_D4EA] = ""

-- description function for COEX_TP_D4EA	
function func_desc_COEX_TP_D4EA(address, data)

	if not format_strs[COEX_TP_D4EA] then
		format_strs[COEX_TP_D4EA]="Not defined :0x%x"
		field_strs[COEX_TP_D4EA]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4EA]]
	fmt_str=func_name_array[COEX_TP_D4EA] .. format_strs[COEX_TP_D4EA] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D425] = "coex bt hp timer isr, now(L16): 0x%x"
field_strs[COEX_TP_D425] = 1
func_name_array[COEX_TP_D425] = ""

-- description function for COEX_TP_D425	
function func_desc_COEX_TP_D425(address, data)

	if not format_strs[COEX_TP_D425] then
		format_strs[COEX_TP_D425]="Not defined :0x%x"
		field_strs[COEX_TP_D425]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D425]]
	fmt_str=func_name_array[COEX_TP_D425] .. format_strs[COEX_TP_D425] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D42F] = "coex set no tbtt sch timer(H16): 0x%x"
field_strs[COEX_TP_D42F] = 1
func_name_array[COEX_TP_D42F] = ""

-- description function for COEX_TP_D42F	
function func_desc_COEX_TP_D42F(address, data)

	if not format_strs[COEX_TP_D42F] then
		format_strs[COEX_TP_D42F]="Not defined :0x%x"
		field_strs[COEX_TP_D42F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D42F]]
	fmt_str=func_name_array[COEX_TP_D42F] .. format_strs[COEX_TP_D42F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4CB] = "coex mcc/scc insert new sch timer(H16): 0x%x"
field_strs[COEX_TP_D4CB] = 1
func_name_array[COEX_TP_D4CB] = ""

-- description function for COEX_TP_D4CB	
function func_desc_COEX_TP_D4CB(address, data)

	if not format_strs[COEX_TP_D4CB] then
		format_strs[COEX_TP_D4CB]="Not defined :0x%x"
		field_strs[COEX_TP_D4CB]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4CB]]
	fmt_str=func_name_array[COEX_TP_D4CB] .. format_strs[COEX_TP_D4CB] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4DB] = "coex set report in advance sch timer(H16): 0x%x"
field_strs[COEX_TP_D4DB] = 1
func_name_array[COEX_TP_D4DB] = ""

-- description function for COEX_TP_D4DB	
function func_desc_COEX_TP_D4DB(address, data)

	if not format_strs[COEX_TP_D4DB] then
		format_strs[COEX_TP_D4DB]="Not defined :0x%x"
		field_strs[COEX_TP_D4DB]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4DB]]
	fmt_str=func_name_array[COEX_TP_D4DB] .. format_strs[COEX_TP_D4DB] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4CC] = "coex report wifi time to bt(now H16): 0x%x"
field_strs[COEX_TP_D4CC] = 1
func_name_array[COEX_TP_D4CC] = ""

-- description function for COEX_TP_D4CC	
function func_desc_COEX_TP_D4CC(address, data)

	if not format_strs[COEX_TP_D4CC] then
		format_strs[COEX_TP_D4CC]="Not defined :0x%x"
		field_strs[COEX_TP_D4CC]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4CC]]
	fmt_str=func_name_array[COEX_TP_D4CC] .. format_strs[COEX_TP_D4CC] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D42D] = "coex sch no tbtt time(H16): 0x%x"
field_strs[COEX_TP_D42D] = 1
func_name_array[COEX_TP_D42D] = ""

-- description function for COEX_TP_D42D	
function func_desc_COEX_TP_D42D(address, data)

	if not format_strs[COEX_TP_D42D] then
		format_strs[COEX_TP_D42D]="Not defined :0x%x"
		field_strs[COEX_TP_D42D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D42D]]
	fmt_str=func_name_array[COEX_TP_D42D] .. format_strs[COEX_TP_D42D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D427] = "coex sch normal tbtt isr subchan: %d"
field_strs[COEX_TP_D427] = 1
func_name_array[COEX_TP_D427] = ""

-- description function for COEX_TP_D427	
function func_desc_COEX_TP_D427(address, data)

	if not format_strs[COEX_TP_D427] then
		format_strs[COEX_TP_D427]="Not defined :0x%x"
		field_strs[COEX_TP_D427]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D427]]
	fmt_str=func_name_array[COEX_TP_D427] .. format_strs[COEX_TP_D427] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D429] = "coex sch normal tbtt isr, coex tick(H16): 0x%x"
field_strs[COEX_TP_D429] = 1
func_name_array[COEX_TP_D429] = ""

-- description function for COEX_TP_D429	
function func_desc_COEX_TP_D429(address, data)

	if not format_strs[COEX_TP_D429] then
		format_strs[COEX_TP_D429]="Not defined :0x%x"
		field_strs[COEX_TP_D429]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D429]]
	fmt_str=func_name_array[COEX_TP_D429] .. format_strs[COEX_TP_D429] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4D2] = "coex calc sch stime num: %d"
field_strs[COEX_TP_D4D2] = 1
func_name_array[COEX_TP_D4D2] = ""

-- description function for COEX_TP_D4D2	
function func_desc_COEX_TP_D4D2(address, data)

	if not format_strs[COEX_TP_D4D2] then
		format_strs[COEX_TP_D4D2]="Not defined :0x%x"
		field_strs[COEX_TP_D4D2]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4D2]]
	fmt_str=func_name_array[COEX_TP_D4D2] .. format_strs[COEX_TP_D4D2] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4D3] = "coex calc sch stime(H16): 0x%x"
field_strs[COEX_TP_D4D3] = 1
func_name_array[COEX_TP_D4D3] = ""

-- description function for COEX_TP_D4D3	
function func_desc_COEX_TP_D4D3(address, data)

	if not format_strs[COEX_TP_D4D3] then
		format_strs[COEX_TP_D4D3]="Not defined :0x%x"
		field_strs[COEX_TP_D4D3]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4D3]]
	fmt_str=func_name_array[COEX_TP_D4D3] .. format_strs[COEX_TP_D4D3] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4D4] = "coex calc sch stime idx: %d"
field_strs[COEX_TP_D4D4] = 1
func_name_array[COEX_TP_D4D4] = ""

-- description function for COEX_TP_D4D4	
function func_desc_COEX_TP_D4D4(address, data)

	if not format_strs[COEX_TP_D4D4] then
		format_strs[COEX_TP_D4D4]="Not defined :0x%x"
		field_strs[COEX_TP_D4D4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4D4]]
	fmt_str=func_name_array[COEX_TP_D4D4] .. format_strs[COEX_TP_D4D4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4D0] = "coex wifi tbtt sync isr, coex tick(H16): 0x%x"
field_strs[COEX_TP_D4D0] = 1
func_name_array[COEX_TP_D4D0] = ""

-- description function for COEX_TP_D4D0	
function func_desc_COEX_TP_D4D0(address, data)

	if not format_strs[COEX_TP_D4D0] then
		format_strs[COEX_TP_D4D0]="Not defined :0x%x"
		field_strs[COEX_TP_D4D0]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4D0]]
	fmt_str=func_name_array[COEX_TP_D4D0] .. format_strs[COEX_TP_D4D0] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_DA26] = "coex wifi tbtt sync isr, active tbtt num: %d"
field_strs[COEX_TP_DA26] = 1
func_name_array[COEX_TP_DA26] = ""

-- description function for COEX_TP_DA26	
function func_desc_COEX_TP_DA26(address, data)

	if not format_strs[COEX_TP_DA26] then
		format_strs[COEX_TP_DA26]="Not defined :0x%x"
		field_strs[COEX_TP_DA26]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_DA26]]
	fmt_str=func_name_array[COEX_TP_DA26] .. format_strs[COEX_TP_DA26] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_DA27] = "coex wifi tbtt sync isr, active tbtt num: %d"
field_strs[COEX_TP_DA27] = 1
func_name_array[COEX_TP_DA27] = ""

-- description function for COEX_TP_DA27	
function func_desc_COEX_TP_DA27(address, data)

	if not format_strs[COEX_TP_DA27] then
		format_strs[COEX_TP_DA27]="Not defined :0x%x"
		field_strs[COEX_TP_DA27]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_DA27]]
	fmt_str=func_name_array[COEX_TP_DA27] .. format_strs[COEX_TP_DA27] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4D5] = "coex wifi tbtt sync isr, enter reset branch: %d"
field_strs[COEX_TP_D4D5] = 1
func_name_array[COEX_TP_D4D5] = ""

-- description function for COEX_TP_D4D5	
function func_desc_COEX_TP_D4D5(address, data)

	if not format_strs[COEX_TP_D4D5] then
		format_strs[COEX_TP_D4D5]="Not defined :0x%x"
		field_strs[COEX_TP_D4D5]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4D5]]
	fmt_str=func_name_array[COEX_TP_D4D5] .. format_strs[COEX_TP_D4D5] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4D6] = "coex wifi tbtt sync isr, enter first sch branch: %d"
field_strs[COEX_TP_D4D6] = 1
func_name_array[COEX_TP_D4D6] = ""

-- description function for COEX_TP_D4D6	
function func_desc_COEX_TP_D4D6(address, data)

	if not format_strs[COEX_TP_D4D6] then
		format_strs[COEX_TP_D4D6]="Not defined :0x%x"
		field_strs[COEX_TP_D4D6]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4D6]]
	fmt_str=func_name_array[COEX_TP_D4D6] .. format_strs[COEX_TP_D4D6] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4D7] = "coex wifi tbtt sync isr, normal sch is inactive: %d"
field_strs[COEX_TP_D4D7] = 1
func_name_array[COEX_TP_D4D7] = ""

-- description function for COEX_TP_D4D7	
function func_desc_COEX_TP_D4D7(address, data)

	if not format_strs[COEX_TP_D4D7] then
		format_strs[COEX_TP_D4D7]="Not defined :0x%x"
		field_strs[COEX_TP_D4D7]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4D7]]
	fmt_str=func_name_array[COEX_TP_D4D7] .. format_strs[COEX_TP_D4D7] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D423] = "com timer dummy in. 0x%x"
field_strs[COEX_TP_D423] = 1
func_name_array[COEX_TP_D423] = ""

-- description function for COEX_TP_D423	
function func_desc_COEX_TP_D423(address, data)

	if not format_strs[COEX_TP_D423] then
		format_strs[COEX_TP_D423]="Not defined :0x%x"
		field_strs[COEX_TP_D423]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D423]]
	fmt_str=func_name_array[COEX_TP_D423] .. format_strs[COEX_TP_D423] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/coex_bt_info.o.i
format_strs[COEX_TP_D4DD] = "bt scan bitmap check, scan stime(H16): 0x%x"
field_strs[COEX_TP_D4DD] = 1
func_name_array[COEX_TP_D4DD] = ""

-- description function for COEX_TP_D4DD	
function func_desc_COEX_TP_D4DD(address, data)

	if not format_strs[COEX_TP_D4DD] then
		format_strs[COEX_TP_D4DD]="Not defined :0x%x"
		field_strs[COEX_TP_D4DD]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4DD]]
	fmt_str=func_name_array[COEX_TP_D4DD] .. format_strs[COEX_TP_D4DD] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4D9] = "bt scan bitmap check result: %d"
field_strs[COEX_TP_D4D9] = 1
func_name_array[COEX_TP_D4D9] = ""

-- description function for COEX_TP_D4D9	
function func_desc_COEX_TP_D4D9(address, data)

	if not format_strs[COEX_TP_D4D9] then
		format_strs[COEX_TP_D4D9]="Not defined :0x%x"
		field_strs[COEX_TP_D4D9]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4D9]]
	fmt_str=func_name_array[COEX_TP_D4D9] .. format_strs[COEX_TP_D4D9] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/coex_init.o.i
format_strs[COEX_TP_D400] = "coex init: %d"
field_strs[COEX_TP_D400] = 1
func_name_array[COEX_TP_D400] = ""

-- description function for COEX_TP_D400	
function func_desc_COEX_TP_D400(address, data)

	if not format_strs[COEX_TP_D400] then
		format_strs[COEX_TP_D400]="Not defined :0x%x"
		field_strs[COEX_TP_D400]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D400]]
	fmt_str=func_name_array[COEX_TP_D400] .. format_strs[COEX_TP_D400] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/coex_lte_info.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/coex_misc.o.i
format_strs[COEX_TP_D4FF] = "coex check isr process time: %d"
field_strs[COEX_TP_D4FF] = 1
func_name_array[COEX_TP_D4FF] = ""

-- description function for COEX_TP_D4FF	
function func_desc_COEX_TP_D4FF(address, data)

	if not format_strs[COEX_TP_D4FF] then
		format_strs[COEX_TP_D4FF]="Not defined :0x%x"
		field_strs[COEX_TP_D4FF]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4FF]]
	fmt_str=func_name_array[COEX_TP_D4FF] .. format_strs[COEX_TP_D4FF] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/coex_os_hal.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/coex_rf_ctl.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/coex_sch.o.i
format_strs[COEX_TP_D45D] = "coex hp action check, too far. %d"
field_strs[COEX_TP_D45D] = 1
func_name_array[COEX_TP_D45D] = ""

-- description function for COEX_TP_D45D	
function func_desc_COEX_TP_D45D(address, data)

	if not format_strs[COEX_TP_D45D] then
		format_strs[COEX_TP_D45D]="Not defined :0x%x"
		field_strs[COEX_TP_D45D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D45D]]
	fmt_str=func_name_array[COEX_TP_D45D] .. format_strs[COEX_TP_D45D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D45F] = "coex hp action check, act period is too short to be sched. 0x%x"
field_strs[COEX_TP_D45F] = 1
func_name_array[COEX_TP_D45F] = ""

-- description function for COEX_TP_D45F	
function func_desc_COEX_TP_D45F(address, data)

	if not format_strs[COEX_TP_D45F] then
		format_strs[COEX_TP_D45F]="Not defined :0x%x"
		field_strs[COEX_TP_D45F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D45F]]
	fmt_str=func_name_array[COEX_TP_D45F] .. format_strs[COEX_TP_D45F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4F6] = "coex hp act conflict check, runing_act is null. %d"
field_strs[COEX_TP_D4F6] = 1
func_name_array[COEX_TP_D4F6] = ""

-- description function for COEX_TP_D4F6	
function func_desc_COEX_TP_D4F6(address, data)

	if not format_strs[COEX_TP_D4F6] then
		format_strs[COEX_TP_D4F6]="Not defined :0x%x"
		field_strs[COEX_TP_D4F6]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4F6]]
	fmt_str=func_name_array[COEX_TP_D4F6] .. format_strs[COEX_TP_D4F6] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D457] = "coex merge act, extend. %d"
field_strs[COEX_TP_D457] = 1
func_name_array[COEX_TP_D457] = ""

-- description function for COEX_TP_D457	
function func_desc_COEX_TP_D457(address, data)

	if not format_strs[COEX_TP_D457] then
		format_strs[COEX_TP_D457]="Not defined :0x%x"
		field_strs[COEX_TP_D457]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D457]]
	fmt_str=func_name_array[COEX_TP_D457] .. format_strs[COEX_TP_D457] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D45B] = "coex bt act alloc(linkid_eventid): 0x%x"
field_strs[COEX_TP_D45B] = 1
func_name_array[COEX_TP_D45B] = ""

-- description function for COEX_TP_D45B	
function func_desc_COEX_TP_D45B(address, data)

	if not format_strs[COEX_TP_D45B] then
		format_strs[COEX_TP_D45B]="Not defined :0x%x"
		field_strs[COEX_TP_D45B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D45B]]
	fmt_str=func_name_array[COEX_TP_D45B] .. format_strs[COEX_TP_D45B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D45E] = "set_bhp_act_sch_timer: 0x%x"
field_strs[COEX_TP_D45E] = 1
func_name_array[COEX_TP_D45E] = ""

-- description function for COEX_TP_D45E	
function func_desc_COEX_TP_D45E(address, data)

	if not format_strs[COEX_TP_D45E] then
		format_strs[COEX_TP_D45E]="Not defined :0x%x"
		field_strs[COEX_TP_D45E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D45E]]
	fmt_str=func_name_array[COEX_TP_D45E] .. format_strs[COEX_TP_D45E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D454] = "coex bt hp req stime: 0x%x"
field_strs[COEX_TP_D454] = 1
func_name_array[COEX_TP_D454] = ""

-- description function for COEX_TP_D454	
function func_desc_COEX_TP_D454(address, data)

	if not format_strs[COEX_TP_D454] then
		format_strs[COEX_TP_D454]="Not defined :0x%x"
		field_strs[COEX_TP_D454]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D454]]
	fmt_str=func_name_array[COEX_TP_D454] .. format_strs[COEX_TP_D454] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4E0] = "coex bt hp end, stop_id: 0x%x."
field_strs[COEX_TP_D4E0] = 1
func_name_array[COEX_TP_D4E0] = ""

-- description function for COEX_TP_D4E0	
function func_desc_COEX_TP_D4E0(address, data)

	if not format_strs[COEX_TP_D4E0] then
		format_strs[COEX_TP_D4E0]="Not defined :0x%x"
		field_strs[COEX_TP_D4E0]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4E0]]
	fmt_str=func_name_array[COEX_TP_D4E0] .. format_strs[COEX_TP_D4E0] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D45C] = "coex bt hp end in advance, stop_id: 0x%x."
field_strs[COEX_TP_D45C] = 1
func_name_array[COEX_TP_D45C] = ""

-- description function for COEX_TP_D45C	
function func_desc_COEX_TP_D45C(address, data)

	if not format_strs[COEX_TP_D45C] then
		format_strs[COEX_TP_D45C]="Not defined :0x%x"
		field_strs[COEX_TP_D45C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D45C]]
	fmt_str=func_name_array[COEX_TP_D45C] .. format_strs[COEX_TP_D45C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D44F] = "bt active low, tick_count: 0x%x."
field_strs[COEX_TP_D44F] = 1
func_name_array[COEX_TP_D44F] = ""

-- description function for COEX_TP_D44F	
function func_desc_COEX_TP_D44F(address, data)

	if not format_strs[COEX_TP_D44F] then
		format_strs[COEX_TP_D44F]="Not defined :0x%x"
		field_strs[COEX_TP_D44F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D44F]]
	fmt_str=func_name_array[COEX_TP_D44F] .. format_strs[COEX_TP_D44F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4EB] = "coex set running act. %d"
field_strs[COEX_TP_D4EB] = 1
func_name_array[COEX_TP_D4EB] = ""

-- description function for COEX_TP_D4EB	
function func_desc_COEX_TP_D4EB(address, data)

	if not format_strs[COEX_TP_D4EB] then
		format_strs[COEX_TP_D4EB]="Not defined :0x%x"
		field_strs[COEX_TP_D4EB]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4EB]]
	fmt_str=func_name_array[COEX_TP_D4EB] .. format_strs[COEX_TP_D4EB] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D456] = "coex get cur bt topo: 0x%x."
field_strs[COEX_TP_D456] = 1
func_name_array[COEX_TP_D456] = ""

-- description function for COEX_TP_D456	
function func_desc_COEX_TP_D456(address, data)

	if not format_strs[COEX_TP_D456] then
		format_strs[COEX_TP_D456]="Not defined :0x%x"
		field_strs[COEX_TP_D456]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D456]]
	fmt_str=func_name_array[COEX_TP_D456] .. format_strs[COEX_TP_D456] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D450] = "coex sch in wifi, wifi_time: %d"
field_strs[COEX_TP_D450] = 1
func_name_array[COEX_TP_D450] = ""

-- description function for COEX_TP_D450	
function func_desc_COEX_TP_D450(address, data)

	if not format_strs[COEX_TP_D450] then
		format_strs[COEX_TP_D450]="Not defined :0x%x"
		field_strs[COEX_TP_D450]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D450]]
	fmt_str=func_name_array[COEX_TP_D450] .. format_strs[COEX_TP_D450] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D451] = "coex sch in wifi enterance, wifi_time: %d"
field_strs[COEX_TP_D451] = 1
func_name_array[COEX_TP_D451] = ""

-- description function for COEX_TP_D451	
function func_desc_COEX_TP_D451(address, data)

	if not format_strs[COEX_TP_D451] then
		format_strs[COEX_TP_D451]="Not defined :0x%x"
		field_strs[COEX_TP_D451]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D451]]
	fmt_str=func_name_array[COEX_TP_D451] .. format_strs[COEX_TP_D451] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D452] = "coex sch no tbtt, wifi_time: %d"
field_strs[COEX_TP_D452] = 1
func_name_array[COEX_TP_D452] = ""

-- description function for COEX_TP_D452	
function func_desc_COEX_TP_D452(address, data)

	if not format_strs[COEX_TP_D452] then
		format_strs[COEX_TP_D452]="Not defined :0x%x"
		field_strs[COEX_TP_D452]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D452]]
	fmt_str=func_name_array[COEX_TP_D452] .. format_strs[COEX_TP_D452] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D459] = "next sch time(H16): 0x%x"
field_strs[COEX_TP_D459] = 1
func_name_array[COEX_TP_D459] = ""

-- description function for COEX_TP_D459	
function func_desc_COEX_TP_D459(address, data)

	if not format_strs[COEX_TP_D459] then
		format_strs[COEX_TP_D459]="Not defined :0x%x"
		field_strs[COEX_TP_D459]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D459]]
	fmt_str=func_name_array[COEX_TP_D459] .. format_strs[COEX_TP_D459] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D426] = "coex sch hp, branch:%d"
field_strs[COEX_TP_D426] = 1
func_name_array[COEX_TP_D426] = ""

-- description function for COEX_TP_D426	
function func_desc_COEX_TP_D426(address, data)

	if not format_strs[COEX_TP_D426] then
		format_strs[COEX_TP_D426]="Not defined :0x%x"
		field_strs[COEX_TP_D426]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D426]]
	fmt_str=func_name_array[COEX_TP_D426] .. format_strs[COEX_TP_D426] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D455] = "tbtt info ctxt_id(H8)&interval(L8): 0x%x"
field_strs[COEX_TP_D455] = 1
func_name_array[COEX_TP_D455] = ""

-- description function for COEX_TP_D455	
function func_desc_COEX_TP_D455(address, data)

	if not format_strs[COEX_TP_D455] then
		format_strs[COEX_TP_D455]="Not defined :0x%x"
		field_strs[COEX_TP_D455]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D455]]
	fmt_str=func_name_array[COEX_TP_D455] .. format_strs[COEX_TP_D455] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4DA] = "coex sync wifi tbtt(ctxt_id): %d"
field_strs[COEX_TP_D4DA] = 1
func_name_array[COEX_TP_D4DA] = ""

-- description function for COEX_TP_D4DA	
function func_desc_COEX_TP_D4DA(address, data)

	if not format_strs[COEX_TP_D4DA] then
		format_strs[COEX_TP_D4DA]="Not defined :0x%x"
		field_strs[COEX_TP_D4DA]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4DA]]
	fmt_str=func_name_array[COEX_TP_D4DA] .. format_strs[COEX_TP_D4DA] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D458] = "coex resync wifi tbtt(ctxt_id): %d"
field_strs[COEX_TP_D458] = 1
func_name_array[COEX_TP_D458] = ""

-- description function for COEX_TP_D458	
function func_desc_COEX_TP_D458(address, data)

	if not format_strs[COEX_TP_D458] then
		format_strs[COEX_TP_D458]="Not defined :0x%x"
		field_strs[COEX_TP_D458]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D458]]
	fmt_str=func_name_array[COEX_TP_D458] .. format_strs[COEX_TP_D458] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D460] = "coex update smps:%d"
field_strs[COEX_TP_D460] = 1
func_name_array[COEX_TP_D460] = ""

-- description function for COEX_TP_D460	
function func_desc_COEX_TP_D460(address, data)

	if not format_strs[COEX_TP_D460] then
		format_strs[COEX_TP_D460]="Not defined :0x%x"
		field_strs[COEX_TP_D460]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D460]]
	fmt_str=func_name_array[COEX_TP_D460] .. format_strs[COEX_TP_D460] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/coex_status_machine.o.i
format_strs[COEX_TP_D474] = "current coex status:%d, previous coex status:%d"
field_strs[COEX_TP_D474] = 2
func_name_array[COEX_TP_D474] = ""

-- description function for COEX_TP_D474	
function func_desc_COEX_TP_D474(address, data)

	if not format_strs[COEX_TP_D474] then
		format_strs[COEX_TP_D474]="Not defined :0x%x"
		field_strs[COEX_TP_D474]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D474]]
	fmt_str=func_name_array[COEX_TP_D474] .. format_strs[COEX_TP_D474] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_DA90] = "REG_BT_COEXISTENCE_CFG: 0x%x"
field_strs[COEX_TP_DA90] = 1
func_name_array[COEX_TP_DA90] = ""

-- description function for COEX_TP_DA90	
function func_desc_COEX_TP_DA90(address, data)

	if not format_strs[COEX_TP_DA90] then
		format_strs[COEX_TP_DA90]="Not defined :0x%x"
		field_strs[COEX_TP_DA90]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_DA90]]
	fmt_str=func_name_array[COEX_TP_DA90] .. format_strs[COEX_TP_DA90] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D472] = "coex debug ref(tick)H: 0x%x"
field_strs[COEX_TP_D472] = 1
func_name_array[COEX_TP_D472] = ""

-- description function for COEX_TP_D472	
function func_desc_COEX_TP_D472(address, data)

	if not format_strs[COEX_TP_D472] then
		format_strs[COEX_TP_D472]="Not defined :0x%x"
		field_strs[COEX_TP_D472]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D472]]
	fmt_str=func_name_array[COEX_TP_D472] .. format_strs[COEX_TP_D472] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D471] = "coex common component init. %d"
field_strs[COEX_TP_D471] = 1
func_name_array[COEX_TP_D471] = ""

-- description function for COEX_TP_D471	
function func_desc_COEX_TP_D471(address, data)

	if not format_strs[COEX_TP_D471] then
		format_strs[COEX_TP_D471]="Not defined :0x%x"
		field_strs[COEX_TP_D471]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D471]]
	fmt_str=func_name_array[COEX_TP_D471] .. format_strs[COEX_TP_D471] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D473] = "coex wifi bt component init. %d"
field_strs[COEX_TP_D473] = 1
func_name_array[COEX_TP_D473] = ""

-- description function for COEX_TP_D473	
function func_desc_COEX_TP_D473(address, data)

	if not format_strs[COEX_TP_D473] then
		format_strs[COEX_TP_D473]="Not defined :0x%x"
		field_strs[COEX_TP_D473]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D473]]
	fmt_str=func_name_array[COEX_TP_D473] .. format_strs[COEX_TP_D473] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D470] = "update coex status(bt|wifi): 0x%x"
field_strs[COEX_TP_D470] = 1
func_name_array[COEX_TP_D470] = ""

-- description function for COEX_TP_D470	
function func_desc_COEX_TP_D470(address, data)

	if not format_strs[COEX_TP_D470] then
		format_strs[COEX_TP_D470]="Not defined :0x%x"
		field_strs[COEX_TP_D470]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D470]]
	fmt_str=func_name_array[COEX_TP_D470] .. format_strs[COEX_TP_D470] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/coex_time_alloc.o.i
format_strs[COEX_TP_D43F] = "wifi high priproty enable,add wifi time 5000us,%d"
field_strs[COEX_TP_D43F] = 1
func_name_array[COEX_TP_D43F] = ""

-- description function for COEX_TP_D43F	
function func_desc_COEX_TP_D43F(address, data)

	if not format_strs[COEX_TP_D43F] then
		format_strs[COEX_TP_D43F]="Not defined :0x%x"
		field_strs[COEX_TP_D43F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D43F]]
	fmt_str=func_name_array[COEX_TP_D43F] .. format_strs[COEX_TP_D43F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4CA] = "add time block: error branch. %d"
field_strs[COEX_TP_D4CA] = 1
func_name_array[COEX_TP_D4CA] = ""

-- description function for COEX_TP_D4CA	
function func_desc_COEX_TP_D4CA(address, data)

	if not format_strs[COEX_TP_D4CA] then
		format_strs[COEX_TP_D4CA]="Not defined :0x%x"
		field_strs[COEX_TP_D4CA]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4CA]]
	fmt_str=func_name_array[COEX_TP_D4CA] .. format_strs[COEX_TP_D4CA] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4CF] = "coex_wifi_want_time, main_tbtt_dtim_cnt:%d, sub_tbtt_dtim_cnt:%d"
field_strs[COEX_TP_D4CF] = 2
func_name_array[COEX_TP_D4CF] = ""

-- description function for COEX_TP_D4CF	
function func_desc_COEX_TP_D4CF(address, data)

	if not format_strs[COEX_TP_D4CF] then
		format_strs[COEX_TP_D4CF]="Not defined :0x%x"
		field_strs[COEX_TP_D4CF]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4CF]]
	fmt_str=func_name_array[COEX_TP_D4CF] .. format_strs[COEX_TP_D4CF] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4CD] = "wifi need all time:%d, bt need all time:%d, wifi want time:%d, bt want time:%d"
field_strs[COEX_TP_D4CD] = 4
func_name_array[COEX_TP_D4CD] = ""

-- description function for COEX_TP_D4CD	
function func_desc_COEX_TP_D4CD(address, data)

	if not format_strs[COEX_TP_D4CD] then
		format_strs[COEX_TP_D4CD]="Not defined :0x%x"
		field_strs[COEX_TP_D4CD]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4CD]]
	fmt_str=func_name_array[COEX_TP_D4CD] .. format_strs[COEX_TP_D4CD] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4CE] = "alloc wifi bt time, tbtt exist:%d, time period:%d ms"
field_strs[COEX_TP_D4CE] = 2
func_name_array[COEX_TP_D4CE] = ""

-- description function for COEX_TP_D4CE	
function func_desc_COEX_TP_D4CE(address, data)

	if not format_strs[COEX_TP_D4CE] then
		format_strs[COEX_TP_D4CE]="Not defined :0x%x"
		field_strs[COEX_TP_D4CE]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4CE]]
	fmt_str=func_name_array[COEX_TP_D4CE] .. format_strs[COEX_TP_D4CE] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/coex_wci2.o.i
format_strs[COEX_TP_D490] = "coex wci2 start wait lte info. %d"
field_strs[COEX_TP_D490] = 1
func_name_array[COEX_TP_D490] = ""

-- description function for COEX_TP_D490	
function func_desc_COEX_TP_D490(address, data)

	if not format_strs[COEX_TP_D490] then
		format_strs[COEX_TP_D490]="Not defined :0x%x"
		field_strs[COEX_TP_D490]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D490]]
	fmt_str=func_name_array[COEX_TP_D490] .. format_strs[COEX_TP_D490] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D491] = "coex wci2 moudle send req, send_data: 0x%x"
field_strs[COEX_TP_D491] = 1
func_name_array[COEX_TP_D491] = ""

-- description function for COEX_TP_D491	
function func_desc_COEX_TP_D491(address, data)

	if not format_strs[COEX_TP_D491] then
		format_strs[COEX_TP_D491]="Not defined :0x%x"
		field_strs[COEX_TP_D491]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D491]]
	fmt_str=func_name_array[COEX_TP_D491] .. format_strs[COEX_TP_D491] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D492] = "coex wci2 moudle send isr. %d"
field_strs[COEX_TP_D492] = 1
func_name_array[COEX_TP_D492] = ""

-- description function for COEX_TP_D492	
function func_desc_COEX_TP_D492(address, data)

	if not format_strs[COEX_TP_D492] then
		format_strs[COEX_TP_D492]="Not defined :0x%x"
		field_strs[COEX_TP_D492]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D492]]
	fmt_str=func_name_array[COEX_TP_D492] .. format_strs[COEX_TP_D492] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D493] = "coex wci2 moudle receive isr, msg: 0x%x"
field_strs[COEX_TP_D493] = 1
func_name_array[COEX_TP_D493] = ""

-- description function for COEX_TP_D493	
function func_desc_COEX_TP_D493(address, data)

	if not format_strs[COEX_TP_D493] then
		format_strs[COEX_TP_D493]="Not defined :0x%x"
		field_strs[COEX_TP_D493]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D493]]
	fmt_str=func_name_array[COEX_TP_D493] .. format_strs[COEX_TP_D493] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/coex_wifi_info.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/if_coex_from_bt.o.i
format_strs[COEX_TP_D441] = "coex report wifi time to bt, stime(H16): 0x%x"
field_strs[COEX_TP_D441] = 1
func_name_array[COEX_TP_D441] = ""

-- description function for COEX_TP_D441	
function func_desc_COEX_TP_D441(address, data)

	if not format_strs[COEX_TP_D441] then
		format_strs[COEX_TP_D441]="Not defined :0x%x"
		field_strs[COEX_TP_D441]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D441]]
	fmt_str=func_name_array[COEX_TP_D441] .. format_strs[COEX_TP_D441] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D46F] = "coex init bt component, coex_tick_1024: 0x%x"
field_strs[COEX_TP_D46F] = 1
func_name_array[COEX_TP_D46F] = ""

-- description function for COEX_TP_D46F	
function func_desc_COEX_TP_D46F(address, data)

	if not format_strs[COEX_TP_D46F] then
		format_strs[COEX_TP_D46F]="Not defined :0x%x"
		field_strs[COEX_TP_D46F]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D46F]]
	fmt_str=func_name_array[COEX_TP_D46F] .. format_strs[COEX_TP_D46F] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/if_coex_from_lte.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/if_coex_from_wifi.o.i
format_strs[COEX_TP_D4E4] = "coex convert com_time to soc_time, tick_count: 0x%x"
field_strs[COEX_TP_D4E4] = 1
func_name_array[COEX_TP_D4E4] = ""

-- description function for COEX_TP_D4E4	
function func_desc_COEX_TP_D4E4(address, data)

	if not format_strs[COEX_TP_D4E4] then
		format_strs[COEX_TP_D4E4]="Not defined :0x%x"
		field_strs[COEX_TP_D4E4]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4E4]]
	fmt_str=func_name_array[COEX_TP_D4E4] .. format_strs[COEX_TP_D4E4] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4E3] = "coex update alloc time to wifi, stime(soc)_high: 0x%x"
field_strs[COEX_TP_D4E3] = 1
func_name_array[COEX_TP_D4E3] = ""

-- description function for COEX_TP_D4E3	
function func_desc_COEX_TP_D4E3(address, data)

	if not format_strs[COEX_TP_D4E3] then
		format_strs[COEX_TP_D4E3]="Not defined :0x%x"
		field_strs[COEX_TP_D4E3]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4E3]]
	fmt_str=func_name_array[COEX_TP_D4E3] .. format_strs[COEX_TP_D4E3] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4F2] = "coex agent enable/disable %d"
field_strs[COEX_TP_D4F2] = 1
func_name_array[COEX_TP_D4F2] = ""

-- description function for COEX_TP_D4F2	
function func_desc_COEX_TP_D4F2(address, data)

	if not format_strs[COEX_TP_D4F2] then
		format_strs[COEX_TP_D4F2]="Not defined :0x%x"
		field_strs[COEX_TP_D4F2]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4F2]]
	fmt_str=func_name_array[COEX_TP_D4F2] .. format_strs[COEX_TP_D4F2] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4E8] = "coex sched bt, coex_tick: 0x%x"
field_strs[COEX_TP_D4E8] = 1
func_name_array[COEX_TP_D4E8] = ""

-- description function for COEX_TP_D4E8	
function func_desc_COEX_TP_D4E8(address, data)

	if not format_strs[COEX_TP_D4E8] then
		format_strs[COEX_TP_D4E8]="Not defined :0x%x"
		field_strs[COEX_TP_D4E8]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4E8]]
	fmt_str=func_name_array[COEX_TP_D4E8] .. format_strs[COEX_TP_D4E8] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4E5] = "coex stop bt, coex_tick: 0x%x"
field_strs[COEX_TP_D4E5] = 1
func_name_array[COEX_TP_D4E5] = ""

-- description function for COEX_TP_D4E5	
function func_desc_COEX_TP_D4E5(address, data)

	if not format_strs[COEX_TP_D4E5] then
		format_strs[COEX_TP_D4E5]="Not defined :0x%x"
		field_strs[COEX_TP_D4E5]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4E5]]
	fmt_str=func_name_array[COEX_TP_D4E5] .. format_strs[COEX_TP_D4E5] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D494] = "coex update max rx ba num, bt_status(H8)&ba_num(L8): 0x%x"
field_strs[COEX_TP_D494] = 1
func_name_array[COEX_TP_D494] = ""

-- description function for COEX_TP_D494	
function func_desc_COEX_TP_D494(address, data)

	if not format_strs[COEX_TP_D494] then
		format_strs[COEX_TP_D494]="Not defined :0x%x"
		field_strs[COEX_TP_D494]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D494]]
	fmt_str=func_name_array[COEX_TP_D494] .. format_strs[COEX_TP_D494] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/if_coex_to_bt.o.i
format_strs[COEX_TP_D440] = "bt report open status: %d"
field_strs[COEX_TP_D440] = 1
func_name_array[COEX_TP_D440] = ""

-- description function for COEX_TP_D440	
function func_desc_COEX_TP_D440(address, data)

	if not format_strs[COEX_TP_D440] then
		format_strs[COEX_TP_D440]="Not defined :0x%x"
		field_strs[COEX_TP_D440]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D440]]
	fmt_str=func_name_array[COEX_TP_D440] .. format_strs[COEX_TP_D440] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D443] = "bt report need coex status: %d"
field_strs[COEX_TP_D443] = 1
func_name_array[COEX_TP_D443] = ""

-- description function for COEX_TP_D443	
function func_desc_COEX_TP_D443(address, data)

	if not format_strs[COEX_TP_D443] then
		format_strs[COEX_TP_D443]="Not defined :0x%x"
		field_strs[COEX_TP_D443]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D443]]
	fmt_str=func_name_array[COEX_TP_D443] .. format_strs[COEX_TP_D443] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D442] = "bt report sleep status: %d"
field_strs[COEX_TP_D442] = 1
func_name_array[COEX_TP_D442] = ""

-- description function for COEX_TP_D442	
function func_desc_COEX_TP_D442(address, data)

	if not format_strs[COEX_TP_D442] then
		format_strs[COEX_TP_D442]="Not defined :0x%x"
		field_strs[COEX_TP_D442]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D442]]
	fmt_str=func_name_array[COEX_TP_D442] .. format_strs[COEX_TP_D442] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

-- COEX_TP_D446 is in dsp_description_fixed.lua, skip from here
format_strs[COEX_TP_D447] = "bt report a2dp window: 0x%x"
field_strs[COEX_TP_D447] = 1
func_name_array[COEX_TP_D447] = ""

-- description function for COEX_TP_D447	
function func_desc_COEX_TP_D447(address, data)

	if not format_strs[COEX_TP_D447] then
		format_strs[COEX_TP_D447]="Not defined :0x%x"
		field_strs[COEX_TP_D447]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D447]]
	fmt_str=func_name_array[COEX_TP_D447] .. format_strs[COEX_TP_D447] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D448] = "bt report normal event info: event_id->%d prio->%d"
field_strs[COEX_TP_D448] = 2
func_name_array[COEX_TP_D448] = ""

-- description function for COEX_TP_D448	
function func_desc_COEX_TP_D448(address, data)

	if not format_strs[COEX_TP_D448] then
		format_strs[COEX_TP_D448]="Not defined :0x%x"
		field_strs[COEX_TP_D448]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D448]]
	fmt_str=func_name_array[COEX_TP_D448] .. format_strs[COEX_TP_D448] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D449] = "bt report connected link_id: %d"
field_strs[COEX_TP_D449] = 1
func_name_array[COEX_TP_D449] = ""

-- description function for COEX_TP_D449	
function func_desc_COEX_TP_D449(address, data)

	if not format_strs[COEX_TP_D449] then
		format_strs[COEX_TP_D449]="Not defined :0x%x"
		field_strs[COEX_TP_D449]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D449]]
	fmt_str=func_name_array[COEX_TP_D449] .. format_strs[COEX_TP_D449] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4B3] = "bt report scan type: %d"
field_strs[COEX_TP_D4B3] = 1
func_name_array[COEX_TP_D4B3] = ""

-- description function for COEX_TP_D4B3	
function func_desc_COEX_TP_D4B3(address, data)

	if not format_strs[COEX_TP_D4B3] then
		format_strs[COEX_TP_D4B3]="Not defined :0x%x"
		field_strs[COEX_TP_D4B3]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4B3]]
	fmt_str=func_name_array[COEX_TP_D4B3] .. format_strs[COEX_TP_D4B3] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D44A] = "bt scan stime(H16): 0x%x"
field_strs[COEX_TP_D44A] = 1
func_name_array[COEX_TP_D44A] = ""

-- description function for COEX_TP_D44A	
function func_desc_COEX_TP_D44A(address, data)

	if not format_strs[COEX_TP_D44A] then
		format_strs[COEX_TP_D44A]="Not defined :0x%x"
		field_strs[COEX_TP_D44A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D44A]]
	fmt_str=func_name_array[COEX_TP_D44A] .. format_strs[COEX_TP_D44A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D44B] = "extend bt work time: %d"
field_strs[COEX_TP_D44B] = 1
func_name_array[COEX_TP_D44B] = ""

-- description function for COEX_TP_D44B	
function func_desc_COEX_TP_D44B(address, data)

	if not format_strs[COEX_TP_D44B] then
		format_strs[COEX_TP_D44B]="Not defined :0x%x"
		field_strs[COEX_TP_D44B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D44B]]
	fmt_str=func_name_array[COEX_TP_D44B] .. format_strs[COEX_TP_D44B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4DE] = "pta request predict link_id&prio: link_id->%d prio->%d"
field_strs[COEX_TP_D4DE] = 2
func_name_array[COEX_TP_D4DE] = ""

-- description function for COEX_TP_D4DE	
function func_desc_COEX_TP_D4DE(address, data)

	if not format_strs[COEX_TP_D4DE] then
		format_strs[COEX_TP_D4DE]="Not defined :0x%x"
		field_strs[COEX_TP_D4DE]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4DE]]
	fmt_str=func_name_array[COEX_TP_D4DE] .. format_strs[COEX_TP_D4DE] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D4EC] = "pta request predict isr enter time(H16): 0x%x"
field_strs[COEX_TP_D4EC] = 1
func_name_array[COEX_TP_D4EC] = ""

-- description function for COEX_TP_D4EC	
function func_desc_COEX_TP_D4EC(address, data)

	if not format_strs[COEX_TP_D4EC] then
		format_strs[COEX_TP_D4EC]="Not defined :0x%x"
		field_strs[COEX_TP_D4EC]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D4EC]]
	fmt_str=func_name_array[COEX_TP_D4EC] .. format_strs[COEX_TP_D4EC] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D44C] = "pta request linkid_eventid(H12)&prio(L4): 0x%x"
field_strs[COEX_TP_D44C] = 1
func_name_array[COEX_TP_D44C] = ""

-- description function for COEX_TP_D44C	
function func_desc_COEX_TP_D44C(address, data)

	if not format_strs[COEX_TP_D44C] then
		format_strs[COEX_TP_D44C]="Not defined :0x%x"
		field_strs[COEX_TP_D44C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D44C]]
	fmt_str=func_name_array[COEX_TP_D44C] .. format_strs[COEX_TP_D44C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D44D] = "pta_request_runtime eventid(H8)&linkid(M4)&prio(L4): 0x%x"
field_strs[COEX_TP_D44D] = 1
func_name_array[COEX_TP_D44D] = ""

-- description function for COEX_TP_D44D	
function func_desc_COEX_TP_D44D(address, data)

	if not format_strs[COEX_TP_D44D] then
		format_strs[COEX_TP_D44D]="Not defined :0x%x"
		field_strs[COEX_TP_D44D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D44D]]
	fmt_str=func_name_array[COEX_TP_D44D] .. format_strs[COEX_TP_D44D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D44E] = "pta_update_priority linkid(H4)&eventid(M8)&prio(L4): 0x%x"
field_strs[COEX_TP_D44E] = 1
func_name_array[COEX_TP_D44E] = ""

-- description function for COEX_TP_D44E	
function func_desc_COEX_TP_D44E(address, data)

	if not format_strs[COEX_TP_D44E] then
		format_strs[COEX_TP_D44E]="Not defined :0x%x"
		field_strs[COEX_TP_D44E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D44E]]
	fmt_str=func_name_array[COEX_TP_D44E] .. format_strs[COEX_TP_D44E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D445] = "pta end linkid_eventid: 0x%x"
field_strs[COEX_TP_D445] = 1
func_name_array[COEX_TP_D445] = ""

-- description function for COEX_TP_D445	
function func_desc_COEX_TP_D445(address, data)

	if not format_strs[COEX_TP_D445] then
		format_strs[COEX_TP_D445]="Not defined :0x%x"
		field_strs[COEX_TP_D445]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D445]]
	fmt_str=func_name_array[COEX_TP_D445] .. format_strs[COEX_TP_D445] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D444] = "bt yield time(tickcount): 0x%x"
field_strs[COEX_TP_D444] = 1
func_name_array[COEX_TP_D444] = ""

-- description function for COEX_TP_D444	
function func_desc_COEX_TP_D444(address, data)

	if not format_strs[COEX_TP_D444] then
		format_strs[COEX_TP_D444]="Not defined :0x%x"
		field_strs[COEX_TP_D444]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D444]]
	fmt_str=func_name_array[COEX_TP_D444] .. format_strs[COEX_TP_D444] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/if_coex_to_lte.o.i

-- content below is from E:/bo.wen/marlin3_trunk/MS_Code/build/sc2355_marlin3_builddir/obj/coexistence/if_coex_to_wifi.o.i
format_strs[COEX_TP_D430] = "wifi report open status: %d"
field_strs[COEX_TP_D430] = 1
func_name_array[COEX_TP_D430] = ""

-- description function for COEX_TP_D430	
function func_desc_COEX_TP_D430(address, data)

	if not format_strs[COEX_TP_D430] then
		format_strs[COEX_TP_D430]="Not defined :0x%x"
		field_strs[COEX_TP_D430]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D430]]
	fmt_str=func_name_array[COEX_TP_D430] .. format_strs[COEX_TP_D430] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D434] = "wifi report link ctxt_id(H4)&status(M4)&channel_id(L8): 0x%x"
field_strs[COEX_TP_D434] = 1
func_name_array[COEX_TP_D434] = ""

-- description function for COEX_TP_D434	
function func_desc_COEX_TP_D434(address, data)

	if not format_strs[COEX_TP_D434] then
		format_strs[COEX_TP_D434]="Not defined :0x%x"
		field_strs[COEX_TP_D434]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D434]]
	fmt_str=func_name_array[COEX_TP_D434] .. format_strs[COEX_TP_D434] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D453] = "coex_get_coex_state 0x%x"
field_strs[COEX_TP_D453] = 1
func_name_array[COEX_TP_D453] = ""

-- description function for COEX_TP_D453	
function func_desc_COEX_TP_D453(address, data)

	if not format_strs[COEX_TP_D453] then
		format_strs[COEX_TP_D453]="Not defined :0x%x"
		field_strs[COEX_TP_D453]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D453]]
	fmt_str=func_name_array[COEX_TP_D453] .. format_strs[COEX_TP_D453] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D435] = "wifi report tbtt time(H16): 0x%x"
field_strs[COEX_TP_D435] = 1
func_name_array[COEX_TP_D435] = ""

-- description function for COEX_TP_D435	
function func_desc_COEX_TP_D435(address, data)

	if not format_strs[COEX_TP_D435] then
		format_strs[COEX_TP_D435]="Not defined :0x%x"
		field_strs[COEX_TP_D435]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D435]]
	fmt_str=func_name_array[COEX_TP_D435] .. format_strs[COEX_TP_D435] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D43D] = "report tbtt&tsf's delta(H16): 0x%x"
field_strs[COEX_TP_D43D] = 1
func_name_array[COEX_TP_D43D] = ""

-- description function for COEX_TP_D43D	
function func_desc_COEX_TP_D43D(address, data)

	if not format_strs[COEX_TP_D43D] then
		format_strs[COEX_TP_D43D]="Not defined :0x%x"
		field_strs[COEX_TP_D43D]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D43D]]
	fmt_str=func_name_array[COEX_TP_D43D] .. format_strs[COEX_TP_D43D] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D45A] = "softap mode drive sch status: %d"
field_strs[COEX_TP_D45A] = 1
func_name_array[COEX_TP_D45A] = ""

-- description function for COEX_TP_D45A	
function func_desc_COEX_TP_D45A(address, data)

	if not format_strs[COEX_TP_D45A] then
		format_strs[COEX_TP_D45A]="Not defined :0x%x"
		field_strs[COEX_TP_D45A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D45A]]
	fmt_str=func_name_array[COEX_TP_D45A] .. format_strs[COEX_TP_D45A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D43C] = "wifi report scan info: ctxtid->%d status->%d"
field_strs[COEX_TP_D43C] = 2
func_name_array[COEX_TP_D43C] = ""

-- description function for COEX_TP_D43C	
function func_desc_COEX_TP_D43C(address, data)

	if not format_strs[COEX_TP_D43C] then
		format_strs[COEX_TP_D43C]="Not defined :0x%x"
		field_strs[COEX_TP_D43C]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D43C]]
	fmt_str=func_name_array[COEX_TP_D43C] .. format_strs[COEX_TP_D43C] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D436] = "wifi report p2p listen status: %d"
field_strs[COEX_TP_D436] = 1
func_name_array[COEX_TP_D436] = ""

-- description function for COEX_TP_D436	
function func_desc_COEX_TP_D436(address, data)

	if not format_strs[COEX_TP_D436] then
		format_strs[COEX_TP_D436]="Not defined :0x%x"
		field_strs[COEX_TP_D436]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D436]]
	fmt_str=func_name_array[COEX_TP_D436] .. format_strs[COEX_TP_D436] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D433] = "wifi report sleep status: %d"
field_strs[COEX_TP_D433] = 1
func_name_array[COEX_TP_D433] = ""

-- description function for COEX_TP_D433	
function func_desc_COEX_TP_D433(address, data)

	if not format_strs[COEX_TP_D433] then
		format_strs[COEX_TP_D433]="Not defined :0x%x"
		field_strs[COEX_TP_D433]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D433]]
	fmt_str=func_name_array[COEX_TP_D433] .. format_strs[COEX_TP_D433] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D437] = "wifi report powersave info: ctxtid->%d status->%d"
field_strs[COEX_TP_D437] = 2
func_name_array[COEX_TP_D437] = ""

-- description function for COEX_TP_D437	
function func_desc_COEX_TP_D437(address, data)

	if not format_strs[COEX_TP_D437] then
		format_strs[COEX_TP_D437]="Not defined :0x%x"
		field_strs[COEX_TP_D437]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D437]]
	fmt_str=func_name_array[COEX_TP_D437] .. format_strs[COEX_TP_D437] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D43E] = "wifi report powersave user mode info: ctxtid->%d status->%d"
field_strs[COEX_TP_D43E] = 2
func_name_array[COEX_TP_D43E] = ""

-- description function for COEX_TP_D43E	
function func_desc_COEX_TP_D43E(address, data)

	if not format_strs[COEX_TP_D43E] then
		format_strs[COEX_TP_D43E]="Not defined :0x%x"
		field_strs[COEX_TP_D43E]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D43E]]
	fmt_str=func_name_array[COEX_TP_D43E] .. format_strs[COEX_TP_D43E] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D438] = "wifi traffic info: ctxtid->%d traffic_level->%d"
field_strs[COEX_TP_D438] = 2
func_name_array[COEX_TP_D438] = ""

-- description function for COEX_TP_D438	
function func_desc_COEX_TP_D438(address, data)

	if not format_strs[COEX_TP_D438] then
		format_strs[COEX_TP_D438]="Not defined :0x%x"
		field_strs[COEX_TP_D438]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D438]]
	fmt_str=func_name_array[COEX_TP_D438] .. format_strs[COEX_TP_D438] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D439] = "wifi report frequence info: ctxt_id->%d freq->%d"
field_strs[COEX_TP_D439] = 2
func_name_array[COEX_TP_D439] = ""

-- description function for COEX_TP_D439	
function func_desc_COEX_TP_D439(address, data)

	if not format_strs[COEX_TP_D439] then
		format_strs[COEX_TP_D439]="Not defined :0x%x"
		field_strs[COEX_TP_D439]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D439]]
	fmt_str=func_name_array[COEX_TP_D439] .. format_strs[COEX_TP_D439] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D43A] = "wifi report tx power info: ctxt_id->%d power->%d"
field_strs[COEX_TP_D43A] = 2
func_name_array[COEX_TP_D43A] = ""

-- description function for COEX_TP_D43A	
function func_desc_COEX_TP_D43A(address, data)

	if not format_strs[COEX_TP_D43A] then
		format_strs[COEX_TP_D43A]="Not defined :0x%x"
		field_strs[COEX_TP_D43A]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D43A]]
	fmt_str=func_name_array[COEX_TP_D43A] .. format_strs[COEX_TP_D43A] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D43B] = "wifi report rx rssi info: ctxt_id->%d rssi->%d"
field_strs[COEX_TP_D43B] = 2
func_name_array[COEX_TP_D43B] = ""

-- description function for COEX_TP_D43B	
function func_desc_COEX_TP_D43B(address, data)

	if not format_strs[COEX_TP_D43B] then
		format_strs[COEX_TP_D43B]="Not defined :0x%x"
		field_strs[COEX_TP_D43B]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D43B]]
	fmt_str=func_name_array[COEX_TP_D43B] .. format_strs[COEX_TP_D43B] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end

format_strs[COEX_TP_D431] = "wifi report 5g status: %d"
field_strs[COEX_TP_D431] = 1
func_name_array[COEX_TP_D431] = ""

-- description function for COEX_TP_D431	
function func_desc_COEX_TP_D431(address, data)

	if not format_strs[COEX_TP_D431] then
		format_strs[COEX_TP_D431]="Not defined :0x%x"
		field_strs[COEX_TP_D431]=1		
	end

	func_desc_ptr=func_desc_comm[field_strs[COEX_TP_D431]]
	fmt_str=func_name_array[COEX_TP_D431] .. format_strs[COEX_TP_D431] 

	if not func_desc_ptr then
		return "_"
	else
		return func_desc_ptr(fmt_str, address, data)
	end
end


--[[--------------------------------------------------------------------

set function list and lua entry for C functions

Note:
    it is auto generated by program
    Do NOT modify it unless you know what are you doing!!

--]]--------------------------------------------------------------------

-- global function list table
func_list={}

-- initialize function list
function init_func_list()
	func_list[UPT_D620]=func_desc_UPT_D620
	func_list[UPT_D621]=func_desc_UPT_D621
	func_list[UPT_D601]=func_desc_UPT_D601
	func_list[UPT_D602]=func_desc_UPT_D602
	func_list[UPT_D8A3]=func_desc_UPT_D8A3
	func_list[UPT_D902]=func_desc_UPT_D902
	func_list[UPT_D903]=func_desc_UPT_D903
	func_list[UPT_D904]=func_desc_UPT_D904
	func_list[UPT_D905]=func_desc_UPT_D905
	func_list[UPT_D906]=func_desc_UPT_D906
	func_list[UPT_D907]=func_desc_UPT_D907
	func_list[UPT_D908]=func_desc_UPT_D908
	func_list[UPT_D909]=func_desc_UPT_D909
	func_list[UPT_D90A]=func_desc_UPT_D90A
	func_list[UPT_D90B]=func_desc_UPT_D90B
	func_list[UPT_D90C]=func_desc_UPT_D90C
	func_list[UPT_D90D]=func_desc_UPT_D90D
	func_list[UPT_D90E]=func_desc_UPT_D90E
	func_list[UPT_D90F]=func_desc_UPT_D90F
	func_list[UPT_D910]=func_desc_UPT_D910
	func_list[UPT_D911]=func_desc_UPT_D911
	func_list[UPT_D912]=func_desc_UPT_D912
	func_list[UPT_D913]=func_desc_UPT_D913
	func_list[UPT_D914]=func_desc_UPT_D914
	func_list[UPT_D915]=func_desc_UPT_D915
	func_list[UPT_D916]=func_desc_UPT_D916
	func_list[UPT_D917]=func_desc_UPT_D917
	func_list[UPT_D918]=func_desc_UPT_D918
	func_list[UPT_D185]=func_desc_UPT_D185
	func_list[UPT_D187]=func_desc_UPT_D187
	func_list[UPT_D186]=func_desc_UPT_D186
	func_list[UPT_D188]=func_desc_UPT_D188
	func_list[UPT_D189]=func_desc_UPT_D189
	func_list[UPT_D181]=func_desc_UPT_D181
	func_list[UPT_D182]=func_desc_UPT_D182
	func_list[UPT_D183]=func_desc_UPT_D183
	func_list[UPT_D184]=func_desc_UPT_D184
	func_list[UPT_DD80]=func_desc_UPT_DD80
	func_list[UPT_DDA0]=func_desc_UPT_DDA0
	func_list[UPT_DDA1]=func_desc_UPT_DDA1
	func_list[UPT_DDA3]=func_desc_UPT_DDA3
	func_list[UPT_DDA4]=func_desc_UPT_DDA4
	func_list[UPT_DDA5]=func_desc_UPT_DDA5
	func_list[UPT_DDA6]=func_desc_UPT_DDA6
	func_list[UPT_DDA7]=func_desc_UPT_DDA7
	func_list[UPT_DDA8]=func_desc_UPT_DDA8
	func_list[UPT_DDA9]=func_desc_UPT_DDA9
	func_list[UPT_DDAA]=func_desc_UPT_DDAA
	func_list[UPT_DDAB]=func_desc_UPT_DDAB
	func_list[UPT_DDAC]=func_desc_UPT_DDAC
	func_list[UPT_DDAD]=func_desc_UPT_DDAD
	func_list[UPT_DDAE]=func_desc_UPT_DDAE
	func_list[UPT_DDAF]=func_desc_UPT_DDAF
	func_list[UPT_DD81]=func_desc_UPT_DD81
	func_list[UPT_DD82]=func_desc_UPT_DD82
	func_list[UPT_DD83]=func_desc_UPT_DD83
	func_list[UPT_DD84]=func_desc_UPT_DD84
	func_list[UPT_DD85]=func_desc_UPT_DD85
	func_list[UPT_DD86]=func_desc_UPT_DD86
	func_list[UPT_DD87]=func_desc_UPT_DD87
	func_list[UPT_DD88]=func_desc_UPT_DD88
	func_list[UPT_DD89]=func_desc_UPT_DD89
	func_list[UPT_DD8A]=func_desc_UPT_DD8A
	func_list[UPT_DD8B]=func_desc_UPT_DD8B
	func_list[UPT_DD8C]=func_desc_UPT_DD8C
	func_list[UPT_DD8D]=func_desc_UPT_DD8D
	func_list[UPT_DD8E]=func_desc_UPT_DD8E
	func_list[UPT_DD8F]=func_desc_UPT_DD8F
	func_list[UPT_DD90]=func_desc_UPT_DD90
	func_list[UPT_DD91]=func_desc_UPT_DD91
	func_list[UPT_DD92]=func_desc_UPT_DD92
	func_list[UPT_DD93]=func_desc_UPT_DD93
	func_list[UPT_DD94]=func_desc_UPT_DD94
	func_list[UPT_DD95]=func_desc_UPT_DD95
	func_list[UPT_DD96]=func_desc_UPT_DD96
	func_list[UPT_DD97]=func_desc_UPT_DD97
	func_list[UPT_DD98]=func_desc_UPT_DD98
	func_list[UPT_DD99]=func_desc_UPT_DD99
	func_list[UPT_DD9A]=func_desc_UPT_DD9A
	func_list[UPT_DD9B]=func_desc_UPT_DD9B
	func_list[UPT_DD9C]=func_desc_UPT_DD9C
	func_list[UPT_D533]=func_desc_UPT_D533
	func_list[UPT_D52F]=func_desc_UPT_D52F
	func_list[UPT_D524]=func_desc_UPT_D524
	func_list[UPT_D525]=func_desc_UPT_D525
	func_list[UPT_D58D]=func_desc_UPT_D58D
	func_list[UPT_D523]=func_desc_UPT_D523
	func_list[UPT_D526]=func_desc_UPT_D526
	func_list[UPT_D527]=func_desc_UPT_D527
	func_list[UPT_D520]=func_desc_UPT_D520
	func_list[UPT_D521]=func_desc_UPT_D521
	func_list[UPT_D522]=func_desc_UPT_D522
	func_list[UPT_D52E]=func_desc_UPT_D52E
	func_list[UPT_D576]=func_desc_UPT_D576
	func_list[UPT_D58F]=func_desc_UPT_D58F
	func_list[UPT_D590]=func_desc_UPT_D590
	func_list[UPT_D582]=func_desc_UPT_D582
	func_list[UPT_D583]=func_desc_UPT_D583
	func_list[UPT_D581]=func_desc_UPT_D581
	func_list[UPT_D580]=func_desc_UPT_D580
	func_list[UPT_D54A]=func_desc_UPT_D54A
	func_list[UPT_D534]=func_desc_UPT_D534
	func_list[UPT_D535]=func_desc_UPT_D535
	func_list[UPT_D544]=func_desc_UPT_D544
	func_list[UPT_D545]=func_desc_UPT_D545
	func_list[UPT_D548]=func_desc_UPT_D548
	func_list[UPT_D543]=func_desc_UPT_D543
	func_list[UPT_D540]=func_desc_UPT_D540
	func_list[UPT_D54F]=func_desc_UPT_D54F
	func_list[UPT_D541]=func_desc_UPT_D541
	func_list[UPT_D542]=func_desc_UPT_D542
	func_list[UPT_D547]=func_desc_UPT_D547
	func_list[UPT_D550]=func_desc_UPT_D550
	func_list[UPT_D577]=func_desc_UPT_D577
	func_list[UPT_D575]=func_desc_UPT_D575
	func_list[UPT_D570]=func_desc_UPT_D570_FIXED
	func_list[UPT_D57C]=func_desc_UPT_D57C
	func_list[UPT_D571]=func_desc_UPT_D571
	func_list[UPT_D572]=func_desc_UPT_D572
	func_list[UPT_D574]=func_desc_UPT_D574
	func_list[UPT_D573]=func_desc_UPT_D573
	func_list[UPT_D578]=func_desc_UPT_D578
	func_list[UPT_D57F]=func_desc_UPT_D57F_FIXED
	func_list[UPT_D584]=func_desc_UPT_D584
	func_list[UPT_D585]=func_desc_UPT_D585
	func_list[UPT_D57A]=func_desc_UPT_D57A_FIXED
	func_list[UPT_D57B]=func_desc_UPT_D57B
	func_list[UPT_D58E]=func_desc_UPT_D58E
	func_list[UPT_D586]=func_desc_UPT_D586
	func_list[UPT_D587]=func_desc_UPT_D587
	func_list[UPT_D588]=func_desc_UPT_D588
	func_list[UPT_D589]=func_desc_UPT_D589
	func_list[UPT_D58A]=func_desc_UPT_D58A
	func_list[UPT_D58B]=func_desc_UPT_D58B
	func_list[UPT_D58C]=func_desc_UPT_D58C
	func_list[UPT_D57D]=func_desc_UPT_D57D
	func_list[UPT_D57E]=func_desc_UPT_D57E
	func_list[UPT_D509]=func_desc_UPT_D509
	func_list[UPT_D551]=func_desc_UPT_D551
	func_list[UPT_D50A]=func_desc_UPT_D50A
	func_list[UPT_D505]=func_desc_UPT_D505
	func_list[UPT_D501]=func_desc_UPT_D501_FIXED
	func_list[UPT_D51C]=func_desc_UPT_D51C
	func_list[UPT_D51D]=func_desc_UPT_D51D
	func_list[UPT_D502]=func_desc_UPT_D502_FIXED
	func_list[UPT_D506]=func_desc_UPT_D506
	func_list[UPT_D507]=func_desc_UPT_D507
	func_list[UPT_D53C]=func_desc_UPT_D53C
	func_list[UPT_D530]=func_desc_UPT_D530
	func_list[UPT_D531]=func_desc_UPT_D531
	func_list[UPT_D532]=func_desc_UPT_D532
	func_list[UPT_D536]=func_desc_UPT_D536
	func_list[UPT_D537]=func_desc_UPT_D537
	func_list[UPT_D538]=func_desc_UPT_D538
	func_list[UPT_D539]=func_desc_UPT_D539
	func_list[UPT_D53A]=func_desc_UPT_D53A
	func_list[UPT_D53B]=func_desc_UPT_D53B
	func_list[UPT_D560]=func_desc_UPT_D560
	func_list[UPT_D561]=func_desc_UPT_D561
	func_list[UPT_D562]=func_desc_UPT_D562
	func_list[UPT_D563]=func_desc_UPT_D563
	func_list[UPT_D564]=func_desc_UPT_D564
	func_list[UPT_D565]=func_desc_UPT_D565
	func_list[UPT_D500]=func_desc_UPT_D500
	func_list[UPT_DDB0]=func_desc_UPT_DDB0
	func_list[UPT_DDB1]=func_desc_UPT_DDB1
	func_list[UPT_DDB2]=func_desc_UPT_DDB2
	func_list[UPT_DDB3]=func_desc_UPT_DDB3
	func_list[UPT_DDB4]=func_desc_UPT_DDB4
	func_list[UPT_DDB5]=func_desc_UPT_DDB5
	func_list[UPT_DDB6]=func_desc_UPT_DDB6
	func_list[UPT_DDB7]=func_desc_UPT_DDB7
	func_list[UPT_DDB8]=func_desc_UPT_DDB8
	func_list[UPT_DDB9]=func_desc_UPT_DDB9
	func_list[UPT_DDBA]=func_desc_UPT_DDBA
	func_list[UPT_DDBB]=func_desc_UPT_DDBB
	func_list[UPT_DDBC]=func_desc_UPT_DDBC
	func_list[UPT_DDBD]=func_desc_UPT_DDBD
	func_list[UPT_DDBE]=func_desc_UPT_DDBE
	func_list[UPT_DDBF]=func_desc_UPT_DDBF
	func_list[UPT_DDC0]=func_desc_UPT_DDC0
	func_list[UPT_DDC1]=func_desc_UPT_DDC1
	func_list[UPT_DDC3]=func_desc_UPT_DDC3
	func_list[UPT_DDC4]=func_desc_UPT_DDC4
	func_list[UPT_DDC5]=func_desc_UPT_DDC5
	func_list[UPT_DDC6]=func_desc_UPT_DDC6
	func_list[UPT_DDC7]=func_desc_UPT_DDC7
	func_list[UPT_DDC2]=func_desc_UPT_DDC2
	func_list[UPT_DDCE]=func_desc_UPT_DDCE
	func_list[UPT_DDCF]=func_desc_UPT_DDCF
	func_list[UPT_DD09]=func_desc_UPT_DD09
	func_list[UPT_DD00]=func_desc_UPT_DD00
	func_list[UPT_DD13]=func_desc_UPT_DD13
	func_list[UPT_DD02]=func_desc_UPT_DD02_FIXED
	func_list[UPT_DD11]=func_desc_UPT_DD11
	func_list[UPT_DD08]=func_desc_UPT_DD08
	func_list[UPT_D624]=func_desc_UPT_D624
	func_list[UPT_D625]=func_desc_UPT_D625
	func_list[UPT_DD0D]=func_desc_UPT_DD0D
	func_list[UPT_DD0E]=func_desc_UPT_DD0E
	func_list[UPT_DD0F]=func_desc_UPT_DD0F
	func_list[UPT_D79A]=func_desc_UPT_D79A
	func_list[UPT_D79B]=func_desc_UPT_D79B
	func_list[UPT_D7D0]=func_desc_UPT_D7D0
	func_list[UPT_DD1F]=func_desc_UPT_DD1F
	func_list[UPT_DD05]=func_desc_UPT_DD05_FIXED
	func_list[UPT_DD07]=func_desc_UPT_DD07
	func_list[UPT_DD03]=func_desc_UPT_DD03_FIXED
	func_list[UPT_DD04]=func_desc_UPT_DD04_FIXED
	func_list[UPT_DD06]=func_desc_UPT_DD06_FIXED
	func_list[UPT_DD26]=func_desc_UPT_DD26
	func_list[UPT_DD20]=func_desc_UPT_DD20
	func_list[UPT_DD01]=func_desc_UPT_DD01
	func_list[UPT_D79E]=func_desc_UPT_D79E
	func_list[UPT_D040]=func_desc_UPT_D040
	func_list[UPT_D041]=func_desc_UPT_D041
	func_list[UPT_D045]=func_desc_UPT_D045
	func_list[UPT_D042]=func_desc_UPT_D042
	func_list[UPT_D043]=func_desc_UPT_D043
	func_list[UPT_D044]=func_desc_UPT_D044
	func_list[UPT_D046]=func_desc_UPT_D046
	func_list[UPT_D001]=func_desc_UPT_D001
	func_list[UPT_D000]=func_desc_UPT_D000
	func_list[UPT_D007]=func_desc_UPT_D007
	func_list[UPT_D006]=func_desc_UPT_D006
	func_list[UPT_D080]=func_desc_UPT_D080
	func_list[UPT_D082]=func_desc_UPT_D082
	func_list[UPT_D084]=func_desc_UPT_D084
	func_list[UPT_D086]=func_desc_UPT_D086
	func_list[UPT_D088]=func_desc_UPT_D088
	func_list[UPT_D08A]=func_desc_UPT_D08A
	func_list[UPT_D08C]=func_desc_UPT_D08C
	func_list[UPT_D081]=func_desc_UPT_D081
	func_list[UPT_D083]=func_desc_UPT_D083
	func_list[UPT_D085]=func_desc_UPT_D085
	func_list[UPT_D087]=func_desc_UPT_D087
	func_list[UPT_D089]=func_desc_UPT_D089
	func_list[UPT_D08B]=func_desc_UPT_D08B
	func_list[UPT_D08D]=func_desc_UPT_D08D
	func_list[UPT_D08F]=func_desc_UPT_D08F
	func_list[UPT_D004]=func_desc_UPT_D004
	func_list[UPT_D008]=func_desc_UPT_D008
	func_list[UPT_D005]=func_desc_UPT_D005
	func_list[UPT_D002]=func_desc_UPT_D002
	func_list[UPT_D003]=func_desc_UPT_D003
	func_list[UPT_DD50]=func_desc_UPT_DD50
	func_list[UPT_D4B8]=func_desc_UPT_D4B8
	func_list[UPT_D4B9]=func_desc_UPT_D4B9
	func_list[UPT_D4B6]=func_desc_UPT_D4B6
	func_list[UPT_D4B7]=func_desc_UPT_D4B7
	func_list[UPT_D460]=func_desc_UPT_D460
	func_list[UPT_D726]=func_desc_UPT_D726
	func_list[UPT_D729]=func_desc_UPT_D729
	func_list[UPT_D72A]=func_desc_UPT_D72A
	func_list[UPT_D72B]=func_desc_UPT_D72B
	func_list[UPT_D712]=func_desc_UPT_D712
	func_list[UPT_D7FF]=func_desc_UPT_D7FF_FIXED
	func_list[UPT_D713]=func_desc_UPT_D713
	func_list[UPT_D714]=func_desc_UPT_D714
	func_list[UPT_D716]=func_desc_UPT_D716
	func_list[UPT_D717]=func_desc_UPT_D717
	func_list[UPT_D715]=func_desc_UPT_D715
	func_list[UPT_D71A]=func_desc_UPT_D71A
	func_list[UPT_D72E]=func_desc_UPT_D72E
	func_list[UPT_D718]=func_desc_UPT_D718
	func_list[UPT_D7FE]=func_desc_UPT_D7FE
	func_list[UPT_D790]=func_desc_UPT_D790
	func_list[UPT_D71B]=func_desc_UPT_D71B
	func_list[UPT_D71D]=func_desc_UPT_D71D
	func_list[UPT_D7FD]=func_desc_UPT_D7FD
	func_list[UPT_D7C9]=func_desc_UPT_D7C9
	func_list[UPT_D7FC]=func_desc_UPT_D7FC
	func_list[UPT_D7CA]=func_desc_UPT_D7CA
	func_list[UPT_D7CB]=func_desc_UPT_D7CB
	func_list[UPT_D71C]=func_desc_UPT_D71C
	func_list[UPT_D710]=func_desc_UPT_D710_FIXED
	func_list[UPT_D734]=func_desc_UPT_D734
	func_list[UPT_D737]=func_desc_UPT_D737
	func_list[UPT_D738]=func_desc_UPT_D738
	func_list[UPT_D736]=func_desc_UPT_D736
	func_list[UPT_D735]=func_desc_UPT_D735
	func_list[UPT_D7DD]=func_desc_UPT_D7DD
	func_list[UPT_D733]=func_desc_UPT_D733
	func_list[UPT_D732]=func_desc_UPT_D732
	func_list[UPT_D791]=func_desc_UPT_D791
	func_list[UPT_D784]=func_desc_UPT_D784
	func_list[UPT_D7A0]=func_desc_UPT_D7A0
	func_list[UPT_D7A1]=func_desc_UPT_D7A1
	func_list[UPT_D7A2]=func_desc_UPT_D7A2
	func_list[UPT_D7A3]=func_desc_UPT_D7A3
	func_list[UPT_D7A4]=func_desc_UPT_D7A4
	func_list[UPT_D740]=func_desc_UPT_D740
	func_list[UPT_D741]=func_desc_UPT_D741
	func_list[UPT_D7C0]=func_desc_UPT_D7C0
	func_list[UPT_D748]=func_desc_UPT_D748
	func_list[UPT_D76F]=func_desc_UPT_D76F
	func_list[UPT_D770]=func_desc_UPT_D770
	func_list[UPT_D746]=func_desc_UPT_D746
	func_list[UPT_D747]=func_desc_UPT_D747
	func_list[UPT_D756]=func_desc_UPT_D756
	func_list[UPT_D779]=func_desc_UPT_D779
	func_list[UPT_D77B]=func_desc_UPT_D77B_FIXED
	func_list[UPT_D767]=func_desc_UPT_D767
	func_list[UPT_D74F]=func_desc_UPT_D74F
	func_list[UPT_D76B]=func_desc_UPT_D76B
	func_list[UPT_D77F]=func_desc_UPT_D77F
	func_list[UPT_D750]=func_desc_UPT_D750
	func_list[UPT_D74B]=func_desc_UPT_D74B
	func_list[UPT_D751]=func_desc_UPT_D751
	func_list[UPT_D74C]=func_desc_UPT_D74C
	func_list[UPT_D771]=func_desc_UPT_D771
	func_list[UPT_D772]=func_desc_UPT_D772
	func_list[UPT_D752]=func_desc_UPT_D752
	func_list[UPT_D77E]=func_desc_UPT_D77E
	func_list[UPT_D773]=func_desc_UPT_D773
	func_list[UPT_D774]=func_desc_UPT_D774
	func_list[UPT_D76A]=func_desc_UPT_D76A
	func_list[UPT_D753]=func_desc_UPT_D753
	func_list[UPT_D754]=func_desc_UPT_D754
	func_list[UPT_D755]=func_desc_UPT_D755
	func_list[UPT_D76D]=func_desc_UPT_D76D
	func_list[UPT_D757]=func_desc_UPT_D757
	func_list[UPT_D775]=func_desc_UPT_D775
	func_list[UPT_D776]=func_desc_UPT_D776
	func_list[UPT_D758]=func_desc_UPT_D758_FIXED
	func_list[UPT_D75A]=func_desc_UPT_D75A
	func_list[UPT_D75B]=func_desc_UPT_D75B
	func_list[UPT_D75F]=func_desc_UPT_D75F_FIXED
	func_list[UPT_D760]=func_desc_UPT_D760_FIXED
	func_list[UPT_D761]=func_desc_UPT_D761
	func_list[UPT_D762]=func_desc_UPT_D762
	func_list[UPT_D763]=func_desc_UPT_D763
	func_list[UPT_D7D4]=func_desc_UPT_D7D4
	func_list[UPT_D72F]=func_desc_UPT_D72F
	func_list[UPT_D7C1]=func_desc_UPT_D7C1
	func_list[UPT_D7CC]=func_desc_UPT_D7CC
	func_list[UPT_D7C2]=func_desc_UPT_D7C2
	func_list[UPT_D7C3]=func_desc_UPT_D7C3
	func_list[UPT_D766]=func_desc_UPT_D766
	func_list[UPT_D765]=func_desc_UPT_D765
	func_list[UPT_D77C]=func_desc_UPT_D77C
	func_list[UPT_D764]=func_desc_UPT_D764
	func_list[UPT_D77D]=func_desc_UPT_D77D
	func_list[UPT_D7C4]=func_desc_UPT_D7C4
	func_list[UPT_D7C5]=func_desc_UPT_D7C5
	func_list[UPT_D7C6]=func_desc_UPT_D7C6
	func_list[UPT_D7AF]=func_desc_UPT_D7AF
	func_list[UPT_D75C]=func_desc_UPT_D75C
	func_list[UPT_D780]=func_desc_UPT_D780
	func_list[UPT_D781]=func_desc_UPT_D781
	func_list[UPT_D792]=func_desc_UPT_D792
	func_list[UPT_D788]=func_desc_UPT_D788
	func_list[UPT_D786]=func_desc_UPT_D786
	func_list[UPT_D787]=func_desc_UPT_D787
	func_list[UPT_D785]=func_desc_UPT_D785
	func_list[UPT_D782]=func_desc_UPT_D782
	func_list[UPT_D783]=func_desc_UPT_D783
	func_list[UPT_D79F]=func_desc_UPT_D79F
	func_list[UPT_D74D]=func_desc_UPT_D74D
	func_list[UPT_D704]=func_desc_UPT_D704_FIXED
	func_list[UPT_D7D1]=func_desc_UPT_D7D1
	func_list[UPT_D7D2]=func_desc_UPT_D7D2
	func_list[UPT_D745]=func_desc_UPT_D745
	func_list[UPT_D7D3]=func_desc_UPT_D7D3
	func_list[UPT_D76C]=func_desc_UPT_D76C
	func_list[UPT_D73B]=func_desc_UPT_D73B
	func_list[UPT_D73A]=func_desc_UPT_D73A
	func_list[UPT_D705]=func_desc_UPT_D705_FIXED
	func_list[UPT_D77A]=func_desc_UPT_D77A_FIXED
	func_list[UPT_D76E]=func_desc_UPT_D76E
	func_list[UPT_D7AE]=func_desc_UPT_D7AE
	func_list[UPT_D7AA]=func_desc_UPT_D7AA
	func_list[UPT_D7AB]=func_desc_UPT_D7AB
	func_list[UPT_D7AC]=func_desc_UPT_D7AC
	func_list[UPT_D778]=func_desc_UPT_D778
	func_list[UPT_D777]=func_desc_UPT_D777
	func_list[UPT_D742]=func_desc_UPT_D742
	func_list[UPT_D743]=func_desc_UPT_D743
	func_list[UPT_D759]=func_desc_UPT_D759
	func_list[UPT_D706]=func_desc_UPT_D706
	func_list[UPT_D70B]=func_desc_UPT_D70B
	func_list[UPT_D73C]=func_desc_UPT_D73C
	func_list[UPT_D73F]=func_desc_UPT_D73F
	func_list[UPT_D73D]=func_desc_UPT_D73D
	func_list[UPT_D73E]=func_desc_UPT_D73E
	func_list[UPT_D739]=func_desc_UPT_D739
	func_list[UPT_D720]=func_desc_UPT_D720
	func_list[UPT_D721]=func_desc_UPT_D721
	func_list[UPT_D722]=func_desc_UPT_D722
	func_list[UPT_D723]=func_desc_UPT_D723
	func_list[UPT_D702]=func_desc_UPT_D702
	func_list[UPT_D730]=func_desc_UPT_D730
	func_list[UPT_D703]=func_desc_UPT_D703
	func_list[UPT_D711]=func_desc_UPT_D711
	func_list[UPT_D70C]=func_desc_UPT_D70C
	func_list[UPT_D70D]=func_desc_UPT_D70D
	func_list[UPT_D724]=func_desc_UPT_D724
	func_list[UPT_D70F]=func_desc_UPT_D70F
	func_list[UPT_D719]=func_desc_UPT_D719
	func_list[UPT_D725]=func_desc_UPT_D725
	func_list[UPT_D707]=func_desc_UPT_D707
	func_list[UPT_D7C7]=func_desc_UPT_D7C7
	func_list[UPT_D7C8]=func_desc_UPT_D7C8
	func_list[UPT_D700]=func_desc_UPT_D700_FIXED
	func_list[UPT_D701]=func_desc_UPT_D701
	func_list[UPT_D71E]=func_desc_UPT_D71E
	func_list[UPT_D727]=func_desc_UPT_D727
	func_list[UPT_D728]=func_desc_UPT_D728
	func_list[UPT_D708]=func_desc_UPT_D708
	func_list[UPT_D709]=func_desc_UPT_D709
	func_list[UPT_D70A]=func_desc_UPT_D70A
	func_list[UPT_D919]=func_desc_UPT_D919
	func_list[UPT_D91A]=func_desc_UPT_D91A
	func_list[UPT_DF07]=func_desc_UPT_DF07
	func_list[UPT_D91B]=func_desc_UPT_D91B
	func_list[UPT_D91C]=func_desc_UPT_D91C
	func_list[UPT_D91D]=func_desc_UPT_D91D
	func_list[UPT_D91E]=func_desc_UPT_D91E
	func_list[UPT_D91F]=func_desc_UPT_D91F
	func_list[UPT_D920]=func_desc_UPT_D920
	func_list[UPT_D304]=func_desc_UPT_D304
	func_list[UPT_D30C]=func_desc_UPT_D30C
	func_list[UPT_D30A]=func_desc_UPT_D30A
	func_list[UPT_D30B]=func_desc_UPT_D30B
	func_list[UPT_D307]=func_desc_UPT_D307
	func_list[UPT_D308]=func_desc_UPT_D308
	func_list[UPT_D309]=func_desc_UPT_D309
	func_list[UPT_D312]=func_desc_UPT_D312
	func_list[UPT_D313]=func_desc_UPT_D313
	func_list[UPT_D314]=func_desc_UPT_D314
	func_list[UPT_D328]=func_desc_UPT_D328
	func_list[UPT_D316]=func_desc_UPT_D316
	func_list[UPT_D317]=func_desc_UPT_D317
	func_list[UPT_D318]=func_desc_UPT_D318
	func_list[UPT_D319]=func_desc_UPT_D319
	func_list[UPT_D31A]=func_desc_UPT_D31A
	func_list[UPT_D31B]=func_desc_UPT_D31B
	func_list[UPT_D31C]=func_desc_UPT_D31C
	func_list[UPT_D31D]=func_desc_UPT_D31D
	func_list[UPT_D31E]=func_desc_UPT_D31E
	func_list[UPT_D31F]=func_desc_UPT_D31F
	func_list[UPT_D320]=func_desc_UPT_D320
	func_list[UPT_D321]=func_desc_UPT_D321
	func_list[UPT_D322]=func_desc_UPT_D322
	func_list[UPT_D323]=func_desc_UPT_D323
	func_list[UPT_D324]=func_desc_UPT_D324
	func_list[UPT_D325]=func_desc_UPT_D325
	func_list[UPT_D326]=func_desc_UPT_D326
	func_list[UPT_D327]=func_desc_UPT_D327
	func_list[UPT_D306]=func_desc_UPT_D306
	func_list[UPT_D330]=func_desc_UPT_D330
	func_list[UPT_D331]=func_desc_UPT_D331
	func_list[UPT_D303]=func_desc_UPT_D303
	func_list[UPT_D300]=func_desc_UPT_D300_FIXED
	func_list[UPT_D3A9]=func_desc_UPT_D3A9
	func_list[UPT_D339]=func_desc_UPT_D339
	func_list[UPT_D33C]=func_desc_UPT_D33C
	func_list[UPT_D340]=func_desc_UPT_D340
	func_list[UPT_D305]=func_desc_UPT_D305
	func_list[UPT_D301]=func_desc_UPT_D301_FIXED
	func_list[UPT_D302]=func_desc_UPT_D302
	func_list[UPT_D343]=func_desc_UPT_D343
	func_list[UPT_D349]=func_desc_UPT_D349
	func_list[UPT_D34E]=func_desc_UPT_D34E_FIXED
	func_list[UPT_D351]=func_desc_UPT_D351
	func_list[UPT_D3B4]=func_desc_UPT_D3B4
	func_list[UPT_D350]=func_desc_UPT_D350
	func_list[UPT_D35A]=func_desc_UPT_D35A_FIXED
	func_list[UPT_D353]=func_desc_UPT_D353_FIXED
	func_list[UPT_D352]=func_desc_UPT_D352
	func_list[UPT_D354]=func_desc_UPT_D354
	func_list[UPT_D355]=func_desc_UPT_D355
	func_list[UPT_D356]=func_desc_UPT_D356_FIXED
	func_list[UPT_D358]=func_desc_UPT_D358
	func_list[UPT_D35E]=func_desc_UPT_D35E
	func_list[UPT_D622]=func_desc_UPT_D622
	func_list[UPT_D623]=func_desc_UPT_D623
	func_list[UPT_D359]=func_desc_UPT_D359
	func_list[UPT_D35C]=func_desc_UPT_D35C
	func_list[UPT_D35B]=func_desc_UPT_D35B
	func_list[UPT_D361]=func_desc_UPT_D361
	func_list[UPT_D362]=func_desc_UPT_D362
	func_list[UPT_D363]=func_desc_UPT_D363
	func_list[UPT_D364]=func_desc_UPT_D364
	func_list[UPT_D365]=func_desc_UPT_D365
	func_list[UPT_D366]=func_desc_UPT_D366
	func_list[UPT_D36C]=func_desc_UPT_D36C
	func_list[UPT_D36D]=func_desc_UPT_D36D
	func_list[UPT_D36E]=func_desc_UPT_D36E
	func_list[UPT_D36A]=func_desc_UPT_D36A
	func_list[UPT_D36B]=func_desc_UPT_D36B
	func_list[UPT_D370]=func_desc_UPT_D370
	func_list[UPT_D371]=func_desc_UPT_D371
	func_list[UPT_D3B0]=func_desc_UPT_D3B0
	func_list[UPT_D3B1]=func_desc_UPT_D3B1
	func_list[UPT_D3B2]=func_desc_UPT_D3B2
	func_list[UPT_D37A]=func_desc_UPT_D37A
	func_list[UPT_D37B]=func_desc_UPT_D37B
	func_list[UPT_D37C]=func_desc_UPT_D37C
	func_list[UPT_D37D]=func_desc_UPT_D37D
	func_list[UPT_D37E]=func_desc_UPT_D37E
	func_list[UPT_D37F]=func_desc_UPT_D37F
	func_list[UPT_D383]=func_desc_UPT_D383
	func_list[UPT_D384]=func_desc_UPT_D384
	func_list[UPT_D385]=func_desc_UPT_D385
	func_list[UPT_D38A]=func_desc_UPT_D38A
	func_list[UPT_D38E]=func_desc_UPT_D38E
	func_list[UPT_D38F]=func_desc_UPT_D38F
	func_list[UPT_D390]=func_desc_UPT_D390
	func_list[UPT_D391]=func_desc_UPT_D391
	func_list[UPT_D392]=func_desc_UPT_D392
	func_list[UPT_D393]=func_desc_UPT_D393
	func_list[UPT_D394]=func_desc_UPT_D394
	func_list[UPT_D395]=func_desc_UPT_D395
	func_list[UPT_D396]=func_desc_UPT_D396
	func_list[UPT_D397]=func_desc_UPT_D397
	func_list[UPT_D398]=func_desc_UPT_D398
	func_list[UPT_D399]=func_desc_UPT_D399
	func_list[UPT_D3A1]=func_desc_UPT_D3A1
	func_list[UPT_D3A0]=func_desc_UPT_D3A0
	func_list[UPT_D0B4]=func_desc_UPT_D0B4
	func_list[UPT_D3A4]=func_desc_UPT_D3A4
	func_list[UPT_D3A5]=func_desc_UPT_D3A5
	func_list[UPT_D3A6]=func_desc_UPT_D3A6
	func_list[UPT_D114]=func_desc_UPT_D114_FIXED
	func_list[UPT_D100]=func_desc_UPT_D100
	func_list[UPT_D101]=func_desc_UPT_D101
	func_list[UPT_D115]=func_desc_UPT_D115_FIXED
	func_list[UPT_D116]=func_desc_UPT_D116_FIXED
	func_list[UPT_D30E]=func_desc_UPT_D30E
	func_list[UPT_D106]=func_desc_UPT_D106
	func_list[UPT_D10A]=func_desc_UPT_D10A_FIXED
	func_list[UPT_D113]=func_desc_UPT_D113_FIXED
	func_list[UPT_D10E]=func_desc_UPT_D10E
	func_list[UPT_D10F]=func_desc_UPT_D10F
	func_list[UPT_D119]=func_desc_UPT_D119
	func_list[UPT_D11A]=func_desc_UPT_D11A
	func_list[UPT_D10C]=func_desc_UPT_D10C
	func_list[UPT_D110]=func_desc_UPT_D110
	func_list[UPT_D161]=func_desc_UPT_D161
	func_list[UPT_D162]=func_desc_UPT_D162
	func_list[UPT_D163]=func_desc_UPT_D163
	func_list[UPT_D165]=func_desc_UPT_D165
	func_list[UPT_D166]=func_desc_UPT_D166
	func_list[UPT_D167]=func_desc_UPT_D167_FIXED
	func_list[UPT_D168]=func_desc_UPT_D168_FIXED
	func_list[UPT_D169]=func_desc_UPT_D169
	func_list[UPT_D19F]=func_desc_UPT_D19F
	func_list[UPT_D1A0]=func_desc_UPT_D1A0
	func_list[UPT_D1A1]=func_desc_UPT_D1A1
	func_list[UPT_D1A2]=func_desc_UPT_D1A2
	func_list[UPT_D1A3]=func_desc_UPT_D1A3
	func_list[UPT_D16A]=func_desc_UPT_D16A
	func_list[UPT_D16B]=func_desc_UPT_D16B
	func_list[UPT_D16C]=func_desc_UPT_D16C
	func_list[UPT_D16D]=func_desc_UPT_D16D
	func_list[UPT_D19C]=func_desc_UPT_D19C
	func_list[UPT_D16E]=func_desc_UPT_D16E_FIXED
	func_list[UPT_D16F]=func_desc_UPT_D16F_FIXED
	func_list[UPT_D170]=func_desc_UPT_D170
	func_list[UPT_D1A8]=func_desc_UPT_D1A8
	func_list[UPT_D171]=func_desc_UPT_D171
	func_list[UPT_D18A]=func_desc_UPT_D18A
	func_list[UPT_D18B]=func_desc_UPT_D18B
	func_list[UPT_D19D]=func_desc_UPT_D19D
	func_list[UPT_D19E]=func_desc_UPT_D19E
	func_list[UPT_D18C]=func_desc_UPT_D18C
	func_list[UPT_D172]=func_desc_UPT_D172
	func_list[UPT_D173]=func_desc_UPT_D173_FIXED
	func_list[UPT_D174]=func_desc_UPT_D174_FIXED
	func_list[UPT_D175]=func_desc_UPT_D175
	func_list[UPT_D1A4]=func_desc_UPT_D1A4
	func_list[UPT_D1A5]=func_desc_UPT_D1A5
	func_list[UPT_D19A]=func_desc_UPT_D19A
	func_list[UPT_D190]=func_desc_UPT_D190
	func_list[UPT_D191]=func_desc_UPT_D191
	func_list[UPT_D192]=func_desc_UPT_D192
	func_list[UPT_D193]=func_desc_UPT_D193
	func_list[UPT_D194]=func_desc_UPT_D194
	func_list[UPT_D195]=func_desc_UPT_D195
	func_list[UPT_D196]=func_desc_UPT_D196
	func_list[UPT_D197]=func_desc_UPT_D197
	func_list[UPT_D198]=func_desc_UPT_D198
	func_list[UPT_D199]=func_desc_UPT_D199
	func_list[UPT_D15F]=func_desc_UPT_D15F
	func_list[UPT_D177]=func_desc_UPT_D177_FIXED
	func_list[UPT_D178]=func_desc_UPT_D178_FIXED
	func_list[UPT_D1A6]=func_desc_UPT_D1A6
	func_list[UPT_D179]=func_desc_UPT_D179_FIXED
	func_list[UPT_D15E]=func_desc_UPT_D15E
	func_list[UPT_D1A7]=func_desc_UPT_D1A7
	func_list[UPT_D117]=func_desc_UPT_D117
	func_list[UPT_D17B]=func_desc_UPT_D17B
	func_list[UPT_D17F]=func_desc_UPT_D17F_FIXED
	func_list[UPT_D54B]=func_desc_UPT_D54B
	func_list[UPT_D528]=func_desc_UPT_D528
	func_list[UPT_D529]=func_desc_UPT_D529
	func_list[UPT_D52A]=func_desc_UPT_D52A
	func_list[UPT_D52C]=func_desc_UPT_D52C
	func_list[UPT_D52D]=func_desc_UPT_D52D
	func_list[UPT_D503]=func_desc_UPT_D503_FIXED
	func_list[UPT_D504]=func_desc_UPT_D504
	func_list[UPT_D591]=func_desc_UPT_D591
	func_list[UPT_DD18]=func_desc_UPT_DD18
	func_list[UPT_D092]=func_desc_UPT_D092
	func_list[UPT_D093]=func_desc_UPT_D093
	func_list[UPT_D102]=func_desc_UPT_D102_FIXED
	func_list[UPT_D103]=func_desc_UPT_D103_FIXED
	func_list[UPT_D105]=func_desc_UPT_D105
	func_list[UPT_D108]=func_desc_UPT_D108
	func_list[UPT_D10D]=func_desc_UPT_D10D
	func_list[UPT_D10B]=func_desc_UPT_D10B
	func_list[UPT_D1A9]=func_desc_UPT_D1A9
	func_list[UPT_D71F]=func_desc_UPT_D71F
	func_list[UPT_D75D]=func_desc_UPT_D75D
	func_list[UPT_D75E]=func_desc_UPT_D75E
	func_list[UPT_D744]=func_desc_UPT_D744
	func_list[UPT_D80B]=func_desc_UPT_D80B
	func_list[UPT_D80C]=func_desc_UPT_D80C
	func_list[UPT_D79D]=func_desc_UPT_D79D
	func_list[UPT_D34F]=func_desc_UPT_D34F
	func_list[UPT_D680]=func_desc_UPT_D680
	func_list[UPT_D681]=func_desc_UPT_D681
	func_list[UPT_D682]=func_desc_UPT_D682
	func_list[UPT_D683]=func_desc_UPT_D683
	func_list[UPT_D82B]=func_desc_UPT_D82B
	func_list[UPT_D820]=func_desc_UPT_D820
	func_list[UPT_D821]=func_desc_UPT_D821
	func_list[UPT_D827]=func_desc_UPT_D827
	func_list[UPT_D828]=func_desc_UPT_D828
	func_list[UPT_D83A]=func_desc_UPT_D83A
	func_list[UPT_D838]=func_desc_UPT_D838
	func_list[UPT_D83B]=func_desc_UPT_D83B
	func_list[UPT_D83C]=func_desc_UPT_D83C
	func_list[UPT_D603]=func_desc_UPT_D603
	func_list[UPT_D606]=func_desc_UPT_D606
	func_list[UPT_D600]=func_desc_UPT_D600
	func_list[UPT_D604]=func_desc_UPT_D604
	func_list[UPT_D605]=func_desc_UPT_D605
	func_list[UPT_D611]=func_desc_UPT_D611
	func_list[UPT_D612]=func_desc_UPT_D612
	func_list[UPT_D613]=func_desc_UPT_D613
	func_list[UPT_DD21]=func_desc_UPT_DD21
	func_list[UPT_DD22]=func_desc_UPT_DD22
	func_list[UPT_DD23]=func_desc_UPT_DD23
	func_list[UPT_DD24]=func_desc_UPT_DD24
	func_list[UPT_DD25]=func_desc_UPT_DD25
	func_list[UPT_DDD3]=func_desc_UPT_DDD3
	func_list[UPT_DDD4]=func_desc_UPT_DDD4
	func_list[UPT_D222]=func_desc_UPT_D222
	func_list[UPT_D8A4]=func_desc_UPT_D8A4
	func_list[UPT_D8A5]=func_desc_UPT_D8A5
	func_list[UPT_D8B0]=func_desc_UPT_D8B0
	func_list[UPT_D8B1]=func_desc_UPT_D8B1
	func_list[UPT_D8B2]=func_desc_UPT_D8B2
	func_list[UPT_D8B3]=func_desc_UPT_D8B3
	func_list[UPT_D8B4]=func_desc_UPT_D8B4
	func_list[UPT_D8B5]=func_desc_UPT_D8B5
	func_list[UPT_D0B0]=func_desc_UPT_D0B0
	func_list[UPT_D802]=func_desc_UPT_D802
	func_list[UPT_D803]=func_desc_UPT_D803
	func_list[UPT_DCAA]=func_desc_UPT_DCAA
	func_list[UPT_D839]=func_desc_UPT_D839
	func_list[UPT_D80A]=func_desc_UPT_D80A
	func_list[UPT_D800]=func_desc_UPT_D800
	func_list[UPT_D200]=func_desc_UPT_D200
	func_list[UPT_D207]=func_desc_UPT_D207
	func_list[UPT_D201]=func_desc_UPT_D201
	func_list[UPT_D230]=func_desc_UPT_D230
	func_list[UPT_D231]=func_desc_UPT_D231
	func_list[UPT_D204]=func_desc_UPT_D204
	func_list[UPT_D20C]=func_desc_UPT_D20C
	func_list[UPT_D202]=func_desc_UPT_D202
	func_list[UPT_D203]=func_desc_UPT_D203
	func_list[UPT_D206]=func_desc_UPT_D206
	func_list[UPT_D213]=func_desc_UPT_D213
	func_list[UPT_D214]=func_desc_UPT_D214
	func_list[UPT_D218]=func_desc_UPT_D218
	func_list[UPT_D219]=func_desc_UPT_D219
	func_list[UPT_D21A]=func_desc_UPT_D21A
	func_list[UPT_DD14]=func_desc_UPT_DD14
	func_list[UPT_DD15]=func_desc_UPT_DD15
	func_list[UPT_DD16]=func_desc_UPT_DD16
	func_list[UPT_DD17]=func_desc_UPT_DD17
	func_list[UPT_D0B1]=func_desc_UPT_D0B1
	func_list[UPT_D0B2]=func_desc_UPT_D0B2
	func_list[UPT_D0B3]=func_desc_UPT_D0B3
	func_list[UPT_D090]=func_desc_UPT_D090
	func_list[UPT_D091]=func_desc_UPT_D091
	func_list[UPT_DD19]=func_desc_UPT_DD19
	func_list[UPT_DD1A]=func_desc_UPT_DD1A
	func_list[UPT_DD1B]=func_desc_UPT_DD1B
	func_list[UPT_DD1C]=func_desc_UPT_DD1C
	func_list[UPT_DD1D]=func_desc_UPT_DD1D
	func_list[UPT_DD1E]=func_desc_UPT_DD1E
	func_list[UPT_D804]=func_desc_UPT_D804
	func_list[UPT_D805]=func_desc_UPT_D805
	func_list[UPT_D808]=func_desc_UPT_D808
	func_list[UPT_D830]=func_desc_UPT_D830
	func_list[UPT_D835]=func_desc_UPT_D835
	func_list[UPT_D826]=func_desc_UPT_D826
	func_list[UPT_D829]=func_desc_UPT_D829
	func_list[UPT_D82A]=func_desc_UPT_D82A
	func_list[UPT_D836]=func_desc_UPT_D836
	func_list[UPT_D810]=func_desc_UPT_D810
	func_list[UPT_D811]=func_desc_UPT_D811
	func_list[UPT_D812]=func_desc_UPT_D812
	func_list[UPT_D813]=func_desc_UPT_D813
	func_list[UPT_D814]=func_desc_UPT_D814
	func_list[UPT_D815]=func_desc_UPT_D815
	func_list[UPT_D816]=func_desc_UPT_D816
	func_list[UPT_D822]=func_desc_UPT_D822
	func_list[UPT_D833]=func_desc_UPT_D833
	func_list[UPT_D837]=func_desc_UPT_D837
	func_list[UPT_D82C]=func_desc_UPT_D82C
	func_list[UPT_D817]=func_desc_UPT_D817
	func_list[UPT_D825]=func_desc_UPT_D825
	func_list[UPT_D823]=func_desc_UPT_D823
	func_list[UPT_D824]=func_desc_UPT_D824
	func_list[UPT_D819]=func_desc_UPT_D819
	func_list[UPT_D81A]=func_desc_UPT_D81A
	func_list[UPT_D81B]=func_desc_UPT_D81B
	func_list[UPT_D81C]=func_desc_UPT_D81C
	func_list[UPT_D81D]=func_desc_UPT_D81D
	func_list[UPT_D81E]=func_desc_UPT_D81E
	func_list[UPT_D81F]=func_desc_UPT_D81F
	func_list[UPT_D818]=func_desc_UPT_D818
	func_list[UPT_D82D]=func_desc_UPT_D82D
	func_list[UPT_D82E]=func_desc_UPT_D82E
	func_list[UPT_D82F]=func_desc_UPT_D82F
	func_list[UPT_D831]=func_desc_UPT_D831
	func_list[UPT_D832]=func_desc_UPT_D832
	func_list[UPT_D834]=func_desc_UPT_D834
	func_list[UPT_D80D]=func_desc_UPT_D80D
	func_list[UPT_D80E]=func_desc_UPT_D80E
	func_list[UPT_D80F]=func_desc_UPT_D80F
	func_list[UPT_D130]=func_desc_UPT_D130
	func_list[UPT_D131]=func_desc_UPT_D131
	func_list[UPT_D132]=func_desc_UPT_D132
	func_list[UPT_D133]=func_desc_UPT_D133
	func_list[UPT_D134]=func_desc_UPT_D134
	func_list[UPT_D135]=func_desc_UPT_D135
	func_list[UPT_D136]=func_desc_UPT_D136
	func_list[UPT_D15C]=func_desc_UPT_D15C
	func_list[UPT_D15D]=func_desc_UPT_D15D
	func_list[UPT_D137]=func_desc_UPT_D137
	func_list[UPT_D138]=func_desc_UPT_D138
	func_list[UPT_D139]=func_desc_UPT_D139
	func_list[UPT_D13A]=func_desc_UPT_D13A
	func_list[UPT_D13B]=func_desc_UPT_D13B
	func_list[UPT_D13E]=func_desc_UPT_D13E
	func_list[UPT_D120]=func_desc_UPT_D120
	func_list[UPT_D121]=func_desc_UPT_D121
	func_list[UPT_D125]=func_desc_UPT_D125_FIXED
	func_list[UPT_D154]=func_desc_UPT_D154
	func_list[UPT_D15B]=func_desc_UPT_D15B
	func_list[UPT_D126]=func_desc_UPT_D126_FIXED
	func_list[UPT_D13C]=func_desc_UPT_D13C
	func_list[UPT_D140]=func_desc_UPT_D140
	func_list[UPT_D141]=func_desc_UPT_D141
	func_list[UPT_D142]=func_desc_UPT_D142
	func_list[UPT_D143]=func_desc_UPT_D143
	func_list[UPT_D144]=func_desc_UPT_D144
	func_list[UPT_D145]=func_desc_UPT_D145
	func_list[UPT_D146]=func_desc_UPT_D146
	func_list[UPT_D147]=func_desc_UPT_D147
	func_list[UPT_D148]=func_desc_UPT_D148
	func_list[UPT_D149]=func_desc_UPT_D149
	func_list[UPT_D127]=func_desc_UPT_D127_FIXED
	func_list[UPT_D14A]=func_desc_UPT_D14A
	func_list[UPT_D14B]=func_desc_UPT_D14B
	func_list[UPT_D14C]=func_desc_UPT_D14C
	func_list[UPT_D14D]=func_desc_UPT_D14D
	func_list[UPT_D128]=func_desc_UPT_D128_FIXED
	func_list[UPT_D153]=func_desc_UPT_D153
	func_list[UPT_D122]=func_desc_UPT_D122
	func_list[UPT_D155]=func_desc_UPT_D155
	func_list[UPT_D156]=func_desc_UPT_D156
	func_list[UPT_D157]=func_desc_UPT_D157
	func_list[UPT_D158]=func_desc_UPT_D158
	func_list[UPT_D159]=func_desc_UPT_D159
	func_list[UPT_D15A]=func_desc_UPT_D15A
	func_list[UPT_D129]=func_desc_UPT_D129_FIXED
	func_list[UPT_D13D]=func_desc_UPT_D13D
	func_list[UPT_D12C]=func_desc_UPT_D12C_FIXED
	func_list[UPT_D12A]=func_desc_UPT_D12A
	func_list[UPT_D12B]=func_desc_UPT_D12B
	func_list[UPT_D17C]=func_desc_UPT_D17C
	func_list[UPT_D17D]=func_desc_UPT_D17D
	func_list[UPT_D17E]=func_desc_UPT_D17E
	func_list[UPT_D12D]=func_desc_UPT_D12D
	func_list[UPT_D12E]=func_desc_UPT_D12E
	func_list[UPT_D150]=func_desc_UPT_D150
	func_list[UPT_D151]=func_desc_UPT_D151
	func_list[UPT_D152]=func_desc_UPT_D152
	func_list[COEX_TP_D4EA]=func_desc_COEX_TP_D4EA
	func_list[COEX_TP_D425]=func_desc_COEX_TP_D425
	func_list[COEX_TP_D42F]=func_desc_COEX_TP_D42F
	func_list[COEX_TP_D4CB]=func_desc_COEX_TP_D4CB
	func_list[COEX_TP_D4DB]=func_desc_COEX_TP_D4DB
	func_list[COEX_TP_D4CC]=func_desc_COEX_TP_D4CC
	func_list[COEX_TP_D42D]=func_desc_COEX_TP_D42D
	func_list[COEX_TP_D427]=func_desc_COEX_TP_D427
	func_list[COEX_TP_D429]=func_desc_COEX_TP_D429
	func_list[COEX_TP_D4D2]=func_desc_COEX_TP_D4D2
	func_list[COEX_TP_D4D3]=func_desc_COEX_TP_D4D3
	func_list[COEX_TP_D4D4]=func_desc_COEX_TP_D4D4
	func_list[COEX_TP_D4D0]=func_desc_COEX_TP_D4D0
	func_list[COEX_TP_DA26]=func_desc_COEX_TP_DA26
	func_list[COEX_TP_DA27]=func_desc_COEX_TP_DA27
	func_list[COEX_TP_D4D5]=func_desc_COEX_TP_D4D5
	func_list[COEX_TP_D4D6]=func_desc_COEX_TP_D4D6
	func_list[COEX_TP_D4D7]=func_desc_COEX_TP_D4D7
	func_list[COEX_TP_D423]=func_desc_COEX_TP_D423
	func_list[COEX_TP_D4DD]=func_desc_COEX_TP_D4DD
	func_list[COEX_TP_D4D9]=func_desc_COEX_TP_D4D9
	func_list[COEX_TP_D400]=func_desc_COEX_TP_D400
	func_list[COEX_TP_D4FF]=func_desc_COEX_TP_D4FF
	func_list[COEX_TP_D45D]=func_desc_COEX_TP_D45D
	func_list[COEX_TP_D45F]=func_desc_COEX_TP_D45F
	func_list[COEX_TP_D4F6]=func_desc_COEX_TP_D4F6
	func_list[COEX_TP_D457]=func_desc_COEX_TP_D457
	func_list[COEX_TP_D45B]=func_desc_COEX_TP_D45B
	func_list[COEX_TP_D45E]=func_desc_COEX_TP_D45E
	func_list[COEX_TP_D454]=func_desc_COEX_TP_D454
	func_list[COEX_TP_D4E0]=func_desc_COEX_TP_D4E0
	func_list[COEX_TP_D45C]=func_desc_COEX_TP_D45C
	func_list[COEX_TP_D44F]=func_desc_COEX_TP_D44F
	func_list[COEX_TP_D4EB]=func_desc_COEX_TP_D4EB
	func_list[COEX_TP_D456]=func_desc_COEX_TP_D456
	func_list[COEX_TP_D450]=func_desc_COEX_TP_D450
	func_list[COEX_TP_D451]=func_desc_COEX_TP_D451
	func_list[COEX_TP_D452]=func_desc_COEX_TP_D452
	func_list[COEX_TP_D459]=func_desc_COEX_TP_D459
	func_list[COEX_TP_D426]=func_desc_COEX_TP_D426
	func_list[COEX_TP_D455]=func_desc_COEX_TP_D455
	func_list[COEX_TP_D4DA]=func_desc_COEX_TP_D4DA
	func_list[COEX_TP_D458]=func_desc_COEX_TP_D458
	func_list[COEX_TP_D460]=func_desc_COEX_TP_D460
	func_list[COEX_TP_D474]=func_desc_COEX_TP_D474
	func_list[COEX_TP_DA90]=func_desc_COEX_TP_DA90
	func_list[COEX_TP_D472]=func_desc_COEX_TP_D472
	func_list[COEX_TP_D471]=func_desc_COEX_TP_D471
	func_list[COEX_TP_D473]=func_desc_COEX_TP_D473
	func_list[COEX_TP_D470]=func_desc_COEX_TP_D470
	func_list[COEX_TP_D43F]=func_desc_COEX_TP_D43F
	func_list[COEX_TP_D4CA]=func_desc_COEX_TP_D4CA
	func_list[COEX_TP_D4CF]=func_desc_COEX_TP_D4CF
	func_list[COEX_TP_D4CD]=func_desc_COEX_TP_D4CD
	func_list[COEX_TP_D4CE]=func_desc_COEX_TP_D4CE
	func_list[COEX_TP_D490]=func_desc_COEX_TP_D490
	func_list[COEX_TP_D491]=func_desc_COEX_TP_D491
	func_list[COEX_TP_D492]=func_desc_COEX_TP_D492
	func_list[COEX_TP_D493]=func_desc_COEX_TP_D493
	func_list[COEX_TP_D441]=func_desc_COEX_TP_D441
	func_list[COEX_TP_D46F]=func_desc_COEX_TP_D46F
	func_list[COEX_TP_D4E4]=func_desc_COEX_TP_D4E4
	func_list[COEX_TP_D4E3]=func_desc_COEX_TP_D4E3
	func_list[COEX_TP_D4F2]=func_desc_COEX_TP_D4F2
	func_list[COEX_TP_D4E8]=func_desc_COEX_TP_D4E8
	func_list[COEX_TP_D4E5]=func_desc_COEX_TP_D4E5
	func_list[COEX_TP_D494]=func_desc_COEX_TP_D494
	func_list[COEX_TP_D440]=func_desc_COEX_TP_D440
	func_list[COEX_TP_D443]=func_desc_COEX_TP_D443
	func_list[COEX_TP_D442]=func_desc_COEX_TP_D442
	func_list[COEX_TP_D446]=func_desc_COEX_TP_D446_FIXED
	func_list[COEX_TP_D447]=func_desc_COEX_TP_D447
	func_list[COEX_TP_D448]=func_desc_COEX_TP_D448
	func_list[COEX_TP_D449]=func_desc_COEX_TP_D449
	func_list[COEX_TP_D4B3]=func_desc_COEX_TP_D4B3
	func_list[COEX_TP_D44A]=func_desc_COEX_TP_D44A
	func_list[COEX_TP_D44B]=func_desc_COEX_TP_D44B
	func_list[COEX_TP_D4DE]=func_desc_COEX_TP_D4DE
	func_list[COEX_TP_D4EC]=func_desc_COEX_TP_D4EC
	func_list[COEX_TP_D44C]=func_desc_COEX_TP_D44C
	func_list[COEX_TP_D44D]=func_desc_COEX_TP_D44D
	func_list[COEX_TP_D44E]=func_desc_COEX_TP_D44E
	func_list[COEX_TP_D445]=func_desc_COEX_TP_D445
	func_list[COEX_TP_D444]=func_desc_COEX_TP_D444
	func_list[COEX_TP_D430]=func_desc_COEX_TP_D430
	func_list[COEX_TP_D434]=func_desc_COEX_TP_D434
	func_list[COEX_TP_D453]=func_desc_COEX_TP_D453
	func_list[COEX_TP_D435]=func_desc_COEX_TP_D435
	func_list[COEX_TP_D43D]=func_desc_COEX_TP_D43D
	func_list[COEX_TP_D45A]=func_desc_COEX_TP_D45A
	func_list[COEX_TP_D43C]=func_desc_COEX_TP_D43C
	func_list[COEX_TP_D436]=func_desc_COEX_TP_D436
	func_list[COEX_TP_D433]=func_desc_COEX_TP_D433
	func_list[COEX_TP_D437]=func_desc_COEX_TP_D437
	func_list[COEX_TP_D43E]=func_desc_COEX_TP_D43E
	func_list[COEX_TP_D438]=func_desc_COEX_TP_D438
	func_list[COEX_TP_D439]=func_desc_COEX_TP_D439
	func_list[COEX_TP_D43A]=func_desc_COEX_TP_D43A
	func_list[COEX_TP_D43B]=func_desc_COEX_TP_D43B
	func_list[COEX_TP_D431]=func_desc_COEX_TP_D431
end

-------------------------------------------------------------------------------------------------------------------------------------------------
-- main interface function, load by C functions -------------------------------------
-- NOTE: !!!!!!!!!!!!!!!!!!!!DON'T CHANGE THIS FUNCTION!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
function dsp_desc( address, data )
	func_pt=func_list[address]

	if not func_pt then
		return ""
	else
		return func_list[address](address,data)
	end
end
